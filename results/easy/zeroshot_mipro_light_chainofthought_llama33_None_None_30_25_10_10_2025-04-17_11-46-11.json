{
  "predictor.predict": {
    "traces": [],
    "train": [],
    "demos": [],
    "signature": {
      "instructions": "To generate a SPARQL query from a natural language question, follow these steps:\n1. **Analyze the Question**: Understand what information is being asked. Identify key entities, actions, or attributes mentioned in the question.\n2. **Identify Relevant Properties and Entities**: Determine which properties (e.g., birthPlace, award, residence) and entities (e.g., people, places, organizations) are relevant to the question based on the knowledge graph schema you're querying (e.g., DBpedia).\n3. **Construct the SPARQL Query**:\n   - **SELECT Clause**: Specify what information you want to retrieve. Use variables (prefixed with a question mark, e.g., `?birthPlace`) for the properties or entities of interest.\n   - **WHERE Clause**: Define the conditions under which the data should be retrieved. This often involves specifying the entity and the property of interest (e.g., `dbpedia:Vince_Gilligan dbo:birthPlace ?birthPlace`).\n   - **PREFIXES**: Use prefixes to abbreviate namespace URIs, making your query more readable (e.g., `dbo:` for `http:\/\/dbpedia.org\/ontology\/`, `dbpedia:` for `http:\/\/dbpedia.org\/resource\/`).\n4. **Execute the Query**: Run the constructed SPARQL query against the knowledge graph database to retrieve the desired information.\n5. **Refine as Necessary**: Based on the results, you may need to refine your query by adding more specific conditions or adjusting the properties and entities being queried.",
      "fields": [
        {
          "prefix": "Question:",
          "description": "question about something"
        },
        {
          "prefix": "Reasoning: Let's think step by step in order to",
          "description": "${reasoning}"
        },
        {
          "prefix": "Sparql Query:",
          "description": "sparql query for DBpedia"
        }
      ]
    },
    "lm": null
  },
  "metadata": {
    "dependency_versions": {
      "python": "3.10",
      "dspy": "2.6.12",
      "cloudpickle": "3.1"
    }
  }
}