id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","SELECT ?country WHERE {
  ?alexanderII birPlace ?birth_country .
  ?sandroBertaggia birPlace ?birth_country .
  ?nicholasII nativeCountry ?country .
  ?birth_country rdfs:label ?countryLabel .
  ?countryLabel ns:prefLabel ""Russia"" .
}",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Artist ;
            dbpprof:region ""Central Region, Ghana"" ;
            dbpprof:occupation dbpprof:Writer ;
            dbpedia2:associatedWith $pacely .
  OPTIONAL { 
    ?person rdf:type dbpedia-ontology:MusicalArtist . 
  }
  FILTER (STRSTARTS (?person, ""The Live Anthology""))
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"The SPARQL query will need to search for an individual who matches both roles. Since there might not be a direct link between a fictional character and a real-life actor in this context, we'll focus on finding an actor who has been associated with both The Shadow (perhaps through a film adaptation) and the album ""Lasso the Moon.""

Here's a basic SPARQL query that attempts to connect these dots:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?actor a dbpedia-owl:Actor ;
           dbpedia-owl:role dbpedia:The_Shadow ;
           foaf:made dbpedia:Lasso_the_Moon.
}
```

This query selects actors who have the role of ""The Shadow"" and are associated with the album ""Lasso the Moon"" through the `foaf:made` property, which links creators to their works.",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"SELECT ?commander ?disease_event ?hillary_work
WHERE {
  ?commander a :WarCommander;
    rdfs:label ?name.
  
  OPTIONAL { 
    ?commander rdfs:label ?description .
    ?description a :DiseaseOrSocietalEvent.
  }
  
  ?commander ns:owner [ a :USS_Arcadia (ID-1605); ns:pilot ""Bill Clinton""] .
  
  ?hillary_work a :WrittenWork;
    rdfs:author ?author .
  
  ?author ns:facts [ a :Spouse; ns:spouse ?hillary_clinton ] .
  
  ?hillary_work ns:author ?hillary_clinton .
  
  ?hillary_clinton a :Politician; rdfs:label ?office .
  
  ?hillary_work ns:workOf ?hillary_clinton
}",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","SELECT ?author ?authorLabel ?spouse ?war ?disease ?event ?ship ?other_work WHERE {
  ?author a :Politician ; rdfs:label ?authorLabel .
  ?author a :OfficeHolder .
  ?author wdt:P31 wd:Q12263.
  ?author ns:marriedTo ?spouse .
  ?author ns:commandedIn ?war .
  ?author ns:hasDisease ?disease .
  ?author ns:participatedIn ?event .
  ?author wdt:P641 wd:Q14898.
  ?author rdfs:seeAlso <http://dbpedia.org/resource/Chappaqua,_New_York>.
  ?other_work a :WrittenWork; rdfs:label ?other_workLabel .
  ?author ns:created ?other_work .
}",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"SELECT ?person
WHERE {
  ?royalty1 a dbpedia:Royalty;
  ?royalty2 a dbpedia:Royalty;
  ?child1 a dbpedia:Child;
  ?parent1 a dbpedia:Parent;
  ?child2 a dbpedia:Child;
  ?grandchild a dbpedia:Grandchild;
  ?spouse1 dbpedia:SpouseOf ?husband1;
  ?husband1 foaf:father ?father1;
  ?father1 dbpedia:Person;
  ?parent2 a dbpedia:Parent;
  ?child3 a dbpedia:Child;
  ?grandchild a dbpedia:Grandchild;
  ?child3 foaf:child ?royalty3
}
WHERE {
  ?person1 dbo:hasSpouse ?spouse1;
  ?person1 dbo:parent ?parent1;
  ?parent1 dbo:hasChild ?child1;
  ?child1 dbo:hasChild ?child2
}
AND {
  ?child2 dbo:parent ?parent2;
  ?parent2 dbo:hasChild ?child3
}
AND {
  ?child3 dbo:parent ?parent2;
  ?child3 dbo:child ?royalty3
}
AND {
  ?royalty1 dbo:spouse ?spouse1;
  ?royalty1 dbo:child ?child1;
  ?child1 a dbpedia:Royalty
}
AND {
  ?royalty2 dbo:parent ?parent2;
  ?parent2 a dbpedia:Person;
  ?royalty2 a dbpedia:Royalty
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?actor ?birthplace1 ?awardee ?awardee_birthplace
WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ?actor_label .
  ?movie a :Movie .
  ?movie stard::role ?actor .
  ?actor stard::in ?movie .
  ?actor foaf:givenName ""Dipankar"" .
  ?co_actor a :CharacterInMovie .
  ?movie rdfs:label ?movie_name .
  ?co_actor rdfs:label ?co_actor_label .
  ?actor rdfs:seeAlso ?actor_bio .
  ?actor_bio a :Person .
  ?awardee a sna:RecipientOf .
  ?awardee rdfs:label ?awardee_name .
  ?awardee rdfs:resource ?award .
  ?award a sna:SangeetNatakAkademiFellowship
}",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","SELECT ?awardee ?host
WHERE {
  ?awardee ns:award ""Nobel Prize in Physics"" .
  ?awardee rdfs:label ?awardee_label .
  ?host ns:location ""Stockholm, Sweden"" .
  ?host a n:educationalInstitution .
  ?awardee ns:awardedBy ?host .
  ?awardee_label ?match
}
WHERE { ?match a n:Person }",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?person WHERE {
  ?person a dbpedia:Commander .
  ?person a dbpedia:OfficeHolder .
  ?person a dbpedia:Author .
  ?person rdfs:label ""Korean conflict"" .
  ?person ns:isPartOf dbpedia:United_States_Air_Force_North_Carolina_Air_National_Guard
}",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","SELECT ?show
WHERE {
  ?awardee rdfs:label ""Rainer Weiss"" .
  ?awardee dbpprop:award ""Nobel Prize in Physics"" .
  ?awardee dbpprop:awardedBy ?institution .
  ?institution rdfs:label ?show .
}",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?party_member WHERE {
  ?john_mcdermott a dbpedia-owl:Person ;
    dbpedia:deathPlace ?location .
  ?location a dbpedia:Settlement .
  ?george_pickett a dbpedia:Person;
    dbpedia:war ?pickett_war .
  ?pickett_war a dbpedia:SocietalEvent .
  ?ruling_party a dbpedia:PoliticalParty ;
    dbpedia:ruledIn ?location .
  ?party_member a dbpedia:Person;
    dbpedia:memberOf ?ruling_party
}",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"The SPARQL query will involve:
1. Finding the father of Cecilia Renata of Austria.
2. Identifying the parent of Archduke Charles Joseph of Austria.
3. Linking these individuals to the Algerian War using their roles and events they participated in.

Here is the constructed SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?eventLabel ?description WHERE {
  ?father rdf:type dbpedia:Commander.
  ?father foaf:children [ a dbpedia:Person; rdfs:label ""Cecilia Renata of Austria"" ] .
  ?archdukeParent rdf:type dbpedia:Person.
  ?archdukeParent foaf:parents [ a dbpedia:Person; rdfs:label ""Archduke Charles Joseph of Austria"" ] .
  ?archdukeParent dbpprop:conflict ""Algerian War"" .
  ?father dbpprop:conflict ""Algerian War"" .
  ?event rdf:type dbpedia:Event.
  ?event dbpprop:participatedIn ?father.
  ?event dbpprop:participatedIn ?archdukeParent.
  OPTIONAL { ?event rdfs:label ?eventLabel . }
  OPTIONAL { ?event dbp:televisedShow ?tvShowLabel . }
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?commander 
WHERE {
  ?commander a :CommanderInThirtyYearsWar .
  ?commander rdfs:member [ a owl:Restriction ; owl:onProperty :childOf ; owl:hasValue ?husband ] .
  ?husband a :Person; foaf:father ?grandfather .
  ?grandfather a :Noble; rdfs:label ""Emperor Ferdinand I of Austria"" .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","SELECT ?childName ?royaltyTitle WHERE {
  ?childName a dbpedia:Person;
    dbpprop:hasParent ?grandparent;
    dbpprop:isDescendantOf dbpedia:Maria_Anna_of_Bavaria.
  
  ?grandparent a dbpedia:Person;
    rdfs:label ""Maria Anna of Bavaria"";
    dbpprop:hasChild ?childName.

  ?childName dbpprop:isMemberOf dbpedia:Royalty.

  ?grandparent foaf:father ?father.
  
  ?father a dbpedia:Person;
    dbpprop:participatedInEvent dbpedia:Algerian_War.
  
  ?father dbpprop:wasCommanderInMilitaryForce someMilitaryForce.
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"The SPARQL query will involve querying the DBpedia dataset for these relationships. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?childName ?royaltyTitle WHERE {
  ?child a rdf:Property ;
            rdfs:label ""child of"" .
  ?childParent a foaf:Person ;
               rdfs:label ""Duke Anthony Ulrich of Brunswick""@en ;
               dbpprop:parentOf ?child .

  ?childSpouse a foaf:Person ;
               rdfs:label ?spouseName ;
               dbpprop:spouseOf ?child .

  ?child rdfs:label ?royaltyTitle .
  ?childSpouse a foaf:Person ;
               rdfs:label ?royaltyTitle .
}

# Additional constraints to ensure both are royalty
FILTER (regex(?royaltyTitle, 'King|Queen|Prince|Princess')) 
```

This query will:
- Find the child of Duke Anthony Ulrich (`?child`).
- Identify the spouse of this child (`?childSpouse`).
- Ensure that both the child and their spouse have titles that match royal titles (`""King"" | ""Queen"" | ""Prince"" | ""Princess""`).",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"SELECT ?award ?leader_residence ?party WHERE {
  ?savage a :Politician;
    :affiliated_to ?party.
  ?party rdfs:label ?partyLabel .
  ?award a :Award ;
    bestowedUpon ?savage .
  ?leader a :Person;
    :resides_in ?leaderResidence .
  ?leader rdfs:label ?leaderLabel .
  ?award ?leader rdfs:seeAlso ?savage
}",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?actor WHERE {
  ?actor rdfs:label ""The Shadow""@en .
  ?actor foaf:name ""Richard Grant Esterhuysen""@en .
  ?actor rdf:type <> .
  ?actor rdfs:label ""Ab Kya Hoga""@en .
  ?actor a n:television_show_host .
}",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"SELECT ?parent WHERE {
  ?charlesII_of_Naples a nlp:Person ;
                 nfo:child ?royaltyChild ;
                 nfo:sibling ?royaltySibling .
  ?royaltyChild a nlp:Person ;
               nfo:parent ?parent .
  ?parent a nlp:Person ;
          rdfs:label ""King"" @en ;  # Assuming the parent is a king based on royalty context
          foaf:familyMember ?charlesII_of_Naples .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","The SPARQL query will involve querying DBpedia for the relevant information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor1 ?actor2 WHERE {
  ?movie1 a dbpedia-owl:Film ; dbpedia:mainActor ?actor1 .
  ?movie2 a dbpedia-owl:Film ; dbpedia:star Audrey_Hepburn .
  ?awardee a dbpedia:Person ; dbpedia:award ""List of awards and nominations received by Janusz Kamiński"" .
  ?spouse a dbpedia:Person ; rdfs:spouseOf ?awardee .
  ?actor1 ns:actorInFilm ?movie1 .
  ?actor2 ns:actorInFilm ?movie2 .
  ?actor1 != ?actor2
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","The SPARQL query will need to:
1. Find the KCB recipients who were also commanders during World War II.
2. Link William Bayne to his military commands during World War II.
3. Identify the military forces involved in World War II.

Here is the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee ?commander_title ?military_force WHERE {
  ?awardee a dbo:Person;
    rdfs:label ?awardee_label;
    dbo:award KCB ;
    dbo:military_rank ""Commander"" .
  ?awardee rdf:type dbo:MilitaryOfficer .
  ?awardee dbo:conflict World_War_II .

  ?commander_title a dbo:Title;
    rdfs:label ?title_label;
    dbo:role ?awardee .

  ?william_bayne a dbo:Person;
    rdfs:label ""William Bayne"";
    dbo:military_rank ""Commander"" ;
    dbo:conflict World_War_II ;
    dbo:military_force ?military_force .

  ?military_force a dbo:MilitaryForce;
    rdfs:label ?force_label .
}

LIMIT 1
```

This query will:
- Find the KCB awardee who was also a commander during World War II.
- Link William Bayne to his military commands during World War II.
- Extract the military force involved in World War II.",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"SELECT ?birthplace ?recipient_name ?war
WHERE {
  ?recipient rdf:type dbpedia-owl:Person.
  ?recipient rdfs:label ?recipient_name.
  ?recipient awardeeAward dbpedia:Quincy_Admirs_Gillmore_Award .
  OPTIONAL { 
    ?recipient wdt:P31 wd:Q1226518. # Henry Clay Lewis' birthplace
    ?recipient rdf:type dbpedia-owl:Settlement .
  }
  ?recipient foaf:combatRole wd:Q148068. # Role in a war (assumed to be a notable one)
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"SELECT ?bandMember WHERE {
  ?artist ns:artistName ""GS9"" .
  ?artist ns:musicalArtistOfSome ?song .
  ?song ns:lyrics ""native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico"".
  ?artist ns:birthName ?birthName .
  ?artist ns:origin ""Florida"" .
  ?award ns:region ""American"" .
  ?award ns:state ""Puerto Rico"" .
  ?award ns:settlement ""Coro de la Pontificia Universidad Católica de Puerto Rico""
}",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","SELECT ?entity WHERE {
  ?awardee a dbpedia:Person .
  ?awardee rdfs:label ?awardee_label .
  ?awardee ns:birthPlace ?birthplace .
  ?awardee ns:award ?award .
  ?award rdfs:label ?award_label .
  FILTER (lang(?awardee_label) = ""ja"" ) .
  ?televisionShow a dbpedia:Television_Series .
  ?televisionShow rdfs:label ?television_show_label .
  ?televisionShow ns:country ""Japan"" .
  ?awardee ns:appearsIn ?televisionShow .
}",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","SELECT ?person
WHERE {
  ?child1 a dbpedia:Royalty;
          dbpedia:P31 dbpedia:ChildOf ?parent1.
  ?parent1 a dbpedia:Royalty;
          dbpedia:P31 dbpedia:ParentOf ?grandchild.
  ?grandchild a dbpedia:Royalty.
  ?grandchild father ?royalParent2.
  ?royalParent2 a dbpedia:Royalty.
  ?royalParent2 spouse ?spouseOfRoyalParent2.
  ?parent1 brother|sister ?charlesParent.
  ?charlesParent a dbpedia:Royalty;
             dbpedia:P31 dbpedia:ChildOf ?charlesGrandparent.
  ?charlesGrandparent a dbpedia:Royalty;
                 dbpedia:P31 dbpedia:ParentOf ?charlesI.
  ?charlesI a dbpedia:Royalty;
            dbpedia:P31 dbpedia:ChildOf ?stephenV.
  ?stephenV a dbpedia:Royalty.
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"SELECT ?birthPlace1 ?region1 ?authorBirthPlace ?awardeeBirthPlace
WHERE {
  ?p1 a dbpedia:Politician .
  ?p1 foaf:givenName ""Paulus"" .
  ?p1 dbo:birthPlace ?birthPlace1 .

  ?region1 a dbpedia:Region .
  ?region1 rdfs:label ?regionLabel .
  ?p1 dbo:birthPlace ?region1 .

  ?author a dbpedia:Person .
  ?author dbo:givenName ""Valerie"" .
  ?author dbo:birthPlace ?authorBirthPlace .

  ?awardee a dbpedia:Person .
  ?awardee rdfs:label ?awardeeLabel .
  ?awardee dbo:awardReceivedBy ?awardedEntity .
  ?awardedEntity a dbpedia:Organization .
  ?awardedEntity rdfs:label ""Vince Gilligan"" .

  ?birthPlace1 ns:bornIn ?authorBirthPlace .
  ?authorBirthPlace ns:locatedIn ?region1 .
  ?awardeeBirthPlace ns:locatedIn ?region1
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","SELECT ?landmark_name ?ruling_party_member ?actor_name ?actor_spouse_name ?parent_birth_name
WHERE {
  ?landmark rdf:type dbpedia-owl:Landmark .
  ?landmark geo:height ""20.116800000000001347""^^xsd:float .
  ?landmark rdfs:label ?landmark_name .
  ?actor dbpprop:starInSeries ""1,000 Dollars a Minute"" .
  ?actor foaf:spouse ?actor_spouse_name .
  ?parent foaf:child ?TishaSterling .
  ?TishaSterling rdfs:label ?parent_birth_name .
  ?ruling_party_member rdf:type dbpedia-owl:PoliticalPartyMember .
  ?landmark rdfs:member ?ruling_party_member .
}",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?singer ?band WHERE {
  ?person a dbpedia:Musician;
    rdfs:label ""Bob Thompson (musician)"" .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
  ?person foaf:name ""Robert William Thompson"" .
  ?alter_ego a dbpedia:FictionalCharacter;
    rdfs:label ""The Shadow"" .
  ?alter_ego dc:creator ""Walter B. Gibson"" .
}",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"SELECT ?actor ?actorSpouse ?parentName ?parentParty
WHERE {
  ?film a dbpedia:Film;
    dbpedia:producer [ dbpedia:producer_film Nat Levine ].
  ?actor a dbpedia:Actor;
    dbpedia:role_in_film ?film .
  ?actorSpouse a dbpedia:Person;
    dbpedia:sibling_of ?actor .
  ?parent a dbpedia:Person;
    dbpedia:child [ dbpedia:name ""Tisha Sterling"" ].
  ?parent dbpedia:political_party [ dbpedia:party_name ""Republican Party (United States)"" ].
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }",{sparql_query},9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","SELECT ?person WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
              dbpedia:hasParent ?greatGrandparent .
  ?greatGrandparent a dbpedia:Person ;
               dbpedia:hasParent ?ancestor .
  ?ancestor a dbpedia:Royalty
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","SELECT ?band_name WHERE {
  ?person a dbpedia:MusicalArtist;
    foaf:name ""Kim Wilson""@en;
    dbpprop:birthDate ""1945-03-30""^^xsd:date.
  ?person rdfs:label ?band_name .
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","Given the complexity of the query, we will break it down into multiple steps:

1. **Find the birth place of Paulus Powell:**
   ```sparql
   SELECT ?birthPlace WHERE {
       ?paulusPowell ns:birthLocation ?birthPlace .
   }
   ```

2. **Determine the region where Paulus Powell's birth place is located:**
   This step involves a lookup based on geographical data which SPARQL does not directly support without additional resources or APIs.

3. **Find the governor of that region:**
   Assuming we have the region, we would query for governors associated with that region.
   ```sparql
   SELECT ?governor WHERE {
       ?region ns:hasGovernor ?governor .
       ?governor foaf:name ""John Doe"" .  # Example governor name
   }
   ```

4. **Identify the author of ""El Deafo"" and confirm they are American:**
   ```sparql
   SELECT ?author WHERE {
       ?book ns:author ?author .
       ?author rdfs:label ""Phyllis Reynolds Naylor""@en .
       ?author ns:nationality ""USA"" .
   }
   ```

5. **Find the birth place of the American author of ""El Deafo"":**
   This would follow from the results of step 4.

6. **Identify Vince Gilligan and find his birth place:**
   ```sparql
   SELECT ?vinceGilligan WHERE {
       ?vinceGilligan ns:birthLocation ?birthPlace .
   }
   ```

Combining these queries into a single SPARQL query that covers all steps is quite complex due to the need for geographical context and relationships between entities. However, the outlined queries provide the necessary steps to extract the information.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","SELECT ?artist WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1945-03-30"";
  ?band dbpedia:MusicArtist;
    dbpedia:bandMember ?person;
    rdfs:label ?artist
  FILTER (lang(?artist) = ""en"")
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"The following SPARQL query will help us retrieve the necessary information from DBpedia:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent_royalty WHERE {
  ?child_royalty a royalty .
  ?child_royalty a childOf ?grandchild_royalty .
  ?grandchild_royalty a royalty .
  
  OPTIONAL { 
    ?parent_royalty a parentOf ?child_royalty .
    FILTER (NOT EXISTS { ?child2 a childOf ?parent2 . ?parent2 a royalty })
  }
  
  OPTIONAL {
    ?parent_royalty a parentOf ?grandchild_royalty .
    FILTER (NOT EXISTS { ?child3 a childOf ?parent3 . ?parent3 a royalty })
  }
}
```

This query does the following:

- It selects all individuals (`?parent_royalty`) who are parents of children (`?child_royalty`) that are themselves royalties.
- It ensures that these children (`?child_royalty`) are grandchildren of another royalty (`?grandchild_royalty`).
- The OPTIONAL clauses ensure that we do not count the same parent multiple times if they have more than one child who fits the criteria.",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"SELECT ?child_name ?parent_name
WHERE {
  ?child rdfs:father ?parent .
  ?parent foaf:name ""Allan Arbus"" .
  ?parent dbpprof:occupation ""actor"" .
  ?child dbpprof:parent ?parent .
  ?parent dbpprof:relatedTo Eugène Cattin .
  ?child dbpprof:birthPlace ""Los Angeles"" .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?awardee_name ?awardee_birthplace
WHERE {
  ?governor a :Politician .
  ?governor office ""Governor of Virginia"" .
  ?author a :American .
  ?author work ""El Deafo"" .
  ?awardee a :Awardee .
  ?awardee award ""Award given by Vince Gilligan"" .
  ?governor_name ?governor_birthplace .
  ?author_name ?author_birthplace .
  ?awardee_name ?awardee_birthplace
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?parent WHERE {
  ?child a ns:people.person;
  ns:microformat-personprofession ?profession;
  ns:film.performance ?role .
  ?child ns:familyMember ?spouse .
  ?spouse ns:people.person [ ns:name ""Mariclare Costello"" ] .
  ?parent a ns:people.person;
  ns:microformat-parentOf ?child
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"The SPARQL query will involve:
- Using DBpedia's resources for Denis Kolodin and Aleksandr Filimonov.
- Finding the soccer club associated with Denis Kolodin.
- Querying for players in that soccer club.
- Checking if any of these players are mentioned in works by Aleksandr Filimonov.",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
  dbpedia:birth_name ""Kimberly Wyatt"" .
  ?actor a dbpedia:Actor;
  dbpedia:role_in_film ""Afeez Oyetoro""@en .
  ?actor foaf:knows ?musicalArtist
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","SELECT ?place ?war WHERE {
  ?person a ns:people.person;
    ns:militaryRole ""Officer"";
    ns:awardedFor/ns:participatedIn ?battle .
  ?battle a ns:war .
  ?person ns:deathPlace ?place .
  ?battle rdfs:label ""Battle of Sakarya"" .
  ?war rdfs:label ""Greco-Turkish War, 1919-1922"" .
}",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"SELECT ?actor WHERE {
  ?actor ns:filmWork ?movie .
  ?movie director ""Marc Fisher"" .
  ?actor foaf:role ?alter_ego_in_series .
  ?alter_ego_in_series rdfs:label ""Edward Elric""@en .
  ?actor ns:musicRelease ?t.i_song_and_album .
  ?t.i_song_and_album artist ""T.I."" .
}",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"SELECT ?actor WHERE {
  ?actor ns:role ?politician_role_in_Ab_Kya_Hoga .
  ?actor rdfs:label ?actor_label .
  ?actor ns:appearsIn ""The Shadow"" .
  ?actor ns:portrayedBy ?actor_real_name
  FILTER (regex(str(?actor_real_name), ""Richard E. Grant""))
}",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","SELECT ?force ?war WHERE {
  ?awardee award ""Albert Medal"" .
  ?awardee act ?act .
  ?act a event; type ""Societal Event"" .
  ?commander conflict ?conflict .
  ?conflict a militaryConflict .
  ?conflict relatedToEvent ?event .
  ?event a event; type ""Military Conflict""; eventDescription ""Sinking of Prince of Wales and Repulse"".
  ?awardee force ?force
}",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?party1 WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:isPolitician ;
            foaf:name ""Bruno Daniel Marie Paul Retailleau"" .
  ?person rdfs:label ?party1.
}
AND
SELECT ?successor WHERE {
  ?politician a dbpedia-owl:Person ;
               dbpedia-owl:nationality ""French"" ;
               rdfs:label ?politicianLabel .
  ?politician foaf:succeededBy ?successor .
  ?successor a dbpedia-owl:OfficeHolder ;
             dbpedia-owl:isPolitician .
}",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","SELECT ?person WHERE {
  ?person a :parent_of_Tisha_Stirling .
  ?person ns:spouse_of ?actor .
  ?actor a :actor_in_film ""Nat Levine"" .
  FILTER (xsd:float(?elevation) = 20.116800000000001347)
}",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"Given that DBpedia provides structured data about individuals, their roles, and relationships, we can construct a SPARQL query to extract the necessary information. However, due to the complexity and potential ambiguity in the question (e.g., ""the alter ego of The Shadow""), we will focus on the lineage part.

Here's a simplified SPARQL query to find the father of Baeda Maryam I's father who is a royalty and an office holder:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?parent a dbo:Royalty, dbo:OfficeHolder;
    dbpprop:hasChild ?baeda_maryam_I .
  ?baeda_maryam_I a dbo:Person;
    dbpprop:hasParent ?parent .
  ?parent a dbo:Person;
    rdfs:label ?grandfather_label .
}
```

This query looks for individuals who are both a royalty and an office holder (`dbo:Royalty, dbo:OfficeHolder`) and have a child named Baeda Maryam I. It then traces back to find the label (name) of the grandfather of Baeda Maryam I.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","SELECT ?parent WHERE {
  ?child a ns:royalty .
  ?child a ns:noble .
  ?child ns:father ?father .
  ?father ns:parent ?parent .
  FILTER (str(?parent) = ""Francis I"") }",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"SELECT ?actor ?place WHERE {
    ?actor a dbpedia:Actor .
    ?actor rdfs:label ""Aladdin (character)"" . 
    OPTIONAL { ?actor dbpprop:deathPlace ?place }
    FILTER (?actor != ""Reed Howes"")  # Ensure we're not including Reed Howes
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"SELECT ?royalty_sparql_person WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasSpouse ?spouse.
  ?spouse a dbpedia:Person;
    dbpedia:isParentOf ?child.
  ?child a dbpedia:Person;
    dbpedia:isRoyalty true .
  ?parent rdfs:label ""Saw Shwe Khet""@en .
}",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","SELECT ?manager ?player ?organization WHERE {
  ?manager a dbpedia:SportsManager ;
             dbpedia:SoccerManager .
  ?player a dbpedia:Athlete , dbpedia:SoccerPlayer , dbpedia:SportsManager , dbpedia:SoccerManager ;
           dbpedia:birthDate ""1981-12-01""^^xsd:date .
  ?organization a dbpedia:Organization ;
                dbpedia:SportsClub , dbpedia:SportsTeam ;
               dbpedia:SoccerClub , dbpedia:SoccerTeam .
  ?manager rdfs:member ?organization .
  ?player rdfs:member ?organization
}",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?office_of_leader ?military_conflict ?societal_event ?residence_tenant
WHERE {
    ?politician1 a :Politician;
        :office ?office_of_leader .
    ?party a :PoliticalParty;
        :leader ?office_of_leader .
    ?miguel_maura a :Person;
        :memberOf ?party .
    
    ?manuel_pinto_da_costa a :OfficeHolder;
        :office ?office .
    OPTIONAL { 
        ?military_conflict a :MilitaryConflict; 
        :participant ?manuel_pinto_da_costu.
        ?societal_event a :SocietalEvent; 
        :involvement ?manuel_pinto_da_costu.
    }
    
    ?2003_election a :Election;
        :officeHolder ?residence_tenant .
    ?residence_tenant a :OfficeHolder;
        :office ?office .
    FILTER ( ?2003_election = ""2003 Madrid City Council election"" )
}",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","The SPARQL query will involve three separate queries to find the required information:

1. Find the author of ""El Deafo"".
2. Find the awardee of the award given by Vince Gilligan.
3. Find the governor of the region where Paulus Powell was born.

Here is the combined SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the author of ""El Deafo""
SELECT ?author WHERE {
  ?book ""El Deafo"" .
  ?book dc:creator ?author .
}

# Query for the awardee of the award given by Vince Gilligan
SELECT ?awardee WHERE {
  ?award dbpedia:Vince_Gilligan_award .
  ?award dbo:recipientOf ?awardee .
}

# Query for the governor of the region where Paulus Powell was born
SELECT ?governor WHERE {
  ?person dbpedia:Paulus_Powell .
  ?person foaf:wasBornIn ?birthPlace .
  ?birthPlace rdfs:label ?region .
  ?region a dbo:AdministrativeRegion .
  ?region dbo:governor ?governor .
}

# Combine the results
CONSTRUCT {
  ?authorName ?authorBirthPlace .
  ?awardeeName ?awardeeBirthPlace .
  ?governorName ?governorRegionBirthPlace .
} WHERE {
  ?author authorName ?authorName .
  ?authorBirthPlace a dbo:AdministrativeDivision .
  
  ?awardee awardName ?awardName .
  ?awardeeName ?awardeeName .
  ?awardeeBirthPlace a dbo:AdministrativeDivision .

  ?governor governorName ?governorName .
  ?governorRegionBirthPlace a dbo:AdministrativeRegion .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person1 ?person2 ?relationship WHERE {
  ?person1 a dbpedia:Royalty .
  ?person1 a dbpedia:OfficeHolder .
  ?person1 rdfs:label ""The Shadow""@en .
  ?person2 a dbpedia:Person .
  ?person2 a dbpedia:FatherOf ?child_of_naod .
  ?child_of_naod a dbpedia:Person .
  ?child_of_naod rdfs:label ""Na'od""@en .
  ?commander a dbpedia:Royalty .
  ?commander rdfs:label ""Commander in Siege of Mukha""@en .
  ?person1 foaf:knows ?commander .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor 
WHERE {
  ?actor a :parentOf ?child .
  ?child a :spouse ?wife .
  ?wife a :parentOf ?grandchild .
  ?grandchild a :profession ""actor"" .
  FILTER (STR(?grandchild) = ""Eugène Cattin"") .
  ?actor in :movieWithRole ?role .
  ?role a :work .
  ?role actor:mainActor
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","SELECT ?person
WHERE {
  ?person a dbpedia:Royalty ;
            dbpedia:spouse ?maria_spouse ;
            dbpedia:parent ?father .
  ?father a dbpedia:Person;
           dbpedia:parent ?grandparent .
  ?maria_spouse a dbpedia:Person;
               dbpedia:parent ?grandmother .
  ?grandmother a dbpedia:Royalty;
              dbpedia:child ?stephen_v_predecessor .
  ?stephen_v_predecessor a dbpedia:Person;
                    dbpedia:predecessor ?stephen_v .
}
ORDER BY ?person",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","The SPARQL query will need to use DBpedia resources to find the relevant information. Here's how we can structure the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?workLabel ?author 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:isSpouseOf [ a dbpedia:Person; rdfs:label ""Hillary Clinton"" ] ;
    dbpedia:residesIn [ a dbpedia:Place; rdfs:label ""Chappaqua, New York"" ];
    dbpedia:hasRole [ a dbpedia:PoliticalOffice; rdfs:label ""Politician"" ] ;
    dbpedia:hasRole [ a dbpedia:OfficeHolder; rdfs:label ""Office Holder"" ];
    dbpedia:participatedInConflict [ a dbpedia:Event; rdfs:label ""War"" ];
    dbpedia:hasAffliction [ a dbpedia:Disease; rdfs:label ""Disease"" ];
    dbpedia:hasVessel [ a dbpedia:Ship; rdfs:label ""USS Arcadia (ID-1605)"" ] .
  ?person dbpedia:authoredWork [ a dbpedia:WrittenWork; rdfs:label ?workLabel ] .
  ?workLabel rdfs:label ?author .
}
```

This query looks for a person who meets all the specified criteria, then finds any written works they have authored and retrieves the labels of those works along with the authors.",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","SELECT ?child ?father ?reference ?royalty_or_office_holder
WHERE {
  ?child rdfs:childOf ?dawit .
  ?child rdfs:label ""Name of Dawit's child"" . # Placeholder for actual child's name
  ?reference a dbo:RadioCharacter ; dbpprop:alterEgo ""Lamont Cranston"" .
  ?father a dbo:EthiopianMonarch ; dbpprop:firstName ""Baeda"" ; dbpprop:lastName ""Maryam"" .
  ?child rdfs:childOf ?father .
  ?child a dbo:RoyaltyOrOfficeHolder .
  ?child rdfs:label ""Name of the child"" . # Placeholder for actual child's name
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child_of_commander ?royalty_child 
WHERE {
  ?commander rdfs:label ""Ernest of Austria"" .
  ?commander ns:fatherOf ?child_of_commander .
  ?child_of_commander a dbo:Royalty .
  
  ?isabella_father ns:motherOf ?isabella .
  ?isabella rdfs:label ""Isabella of Austria"" .
  ?isabella a dbo:Person .
  ?isabella ns:father ?isabella_father .
  ?isabella_father a dbo:Royalty .

  ?philip_i_father ns:fatherOf ?philip_i .
  ?philip_i rdfs:label ""Philip I of Castile"" .
  ?philip_i a dbo:Person .
  ?philip_i a dbo:Royalty
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child_name ?parent_name ?award_name 
WHERE {
  ?child rdf:type dbo:Person.
  ?child dbo:hasParent ?parent.
  ?parent a dbo:OfficeHolder.
  ?parent a dbo:Politician.
  ?child dbo:awarded ?award.
  ?award rdfs:label ""Rodney Lees"" .
  ?parent dbo:name ""Edward Stanley, 17th Earl of Derby"".
  ?child dbo:name ?child_name.
}
```

This SPARQL query will:
- Select the name of the child (`?child_name`), the parent's name (`?parent_name`), and the award name (`?award_name`).
- Ensure that the child is a person (`dbo:Person`).
- Ensure the child has a parent who is both an office holder (`dbo:OfficeHolder`) and a politician (`dbo:Politician`).
- Ensure the child was awarded the ""Rodney Lees"" award.
- Link the parent to Edward Stanley, 17th Earl of Derby.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","SELECT ?parent WHERE {
  ?spouse a np:Person ;
           np:givenName ""Maria Theresa"" ;
           np:familyName ""of Austria"" ;
           np:role ""Spouse of Francis I, Duke of Lorraine"" .
  ?child a np:Person ;
         np:givenName ""Marie Louise"" ;
         np:familyName ""of Austria"" ;
         np:role ""Daughter of Francis I, Duke of Lorraine and Maria Theresa of Austria"" .
  ?parent a np:Person ;
          np:givenName ""Francis"" ;
          np:familyName ""I"" ;
          np:role ""Holy Roman Emperor"" .
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","SELECT ?manager_name ?soccer_club_season ?sports_season ?sport_team_season WHERE {
  ?manager rdf:type ns:SportsManager .
  ?manager foaf:birthDate ns:1968-08-26 .
  ?manager rdfs:label ?name .
  ?manager manageFCL:club ?vfl_bochum .
  ?vfl_bochum rdfs:label ?soccer_club_season .
  ?manager ns:countryOfBirth ?admin_country .
  ?admin_country rdfs:label ?administration_country .
  ?leader ns:led ns:Germany .
  ?leader/ns:termStarts ns:1960-05-01 . # Assuming the leader term started in 1960
  FILTER (lang(?name) = ""de"" ) # Assuming the manager's name is German
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"Given that we don't have direct access to a SPARQL endpoint here, I'll outline how the SPARQL query would look like:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person;
    rdfs:spouse ?spouse.
  ?spouse a dbo:Writer.
  ?person dbo:decedentAt ""Taipei"".
  OPTIONAL { ?child a dbo:Politician }
}
```

This query does the following:
- Selects any `?child` who is related to a person (`?person`) identified as being decedent in Taipei.
- Ensures that the spouse of `?person` (`?spouse`) is a writer (`dbo:Writer`).
- Optionally checks if there's a child (`?child`) who is a politician (`dbo:Politician`).",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","SELECT ?commander ?military_force1 ?societal_event_force ?war
WHERE {
  ?commander rdfs:label ""Napoleon Bonaparte""@fr .
  ?commander ns:commandedIn <http://dbpedia.org/ontology/commandedIn> [ a owl:Ontology ; owl:intersectionOf ( [ owl:unionOf [ owl:individualMember ?french_campaign] ] ) ] .
  ?military_force1 rdfs:label ""British Army""@en .
  ?societal_event_force rdfs:label ""Knight Commander of the Order of the Bath""@en .
  ?war rdfs:label ""World War I""@en .
  ?commander ns:associatedWith ?military_force1 .
  ?commander ns:associatedWith ?societal_event_force .
  ?war ns:partOf ?military_force1
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","SELECT ?parent WHERE {
    ?awardee rdf:type dbo:Politician .
    ?awardee rdfs:label ?awardee_label .
    ?award dbpprop:hasAwardee ?awardee .
    ?awardee rdfs:label ""Rodney Lees Award"" .
    ?child rdf:type dbo:Person .
    ?child dbo:parent ?parent .
    ?child rdfs:label ?child_label .
    ?alumnus rdf:type dbo:EtonCollegeAlumnus .
    ?alumnus rdfs:label ?alumnus_label .
    ?alumnus dbpprop:hasChild ?child .
    ?child rdfs:label ""Child of Frederick Stanley, 16th Earl of Derby"" .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person WHERE {
  ?childChild a ns:Person ;
               ns:father ?royalFather ;
               ns:parent ?royalParent .
  ?royalParent a ns:Person ; 
               ns:offspring ?childChild ;
               ns:role ns:militaryRole ""Commander in Siege of Mukha"" .
  ?royalFather a ns:Person ; 
               ns:role ns:royalty ;
               ns:officeHolder true .
  ?childChild ns:parent ?royalParent .
  ?royalFather ns:parent ?grandfather .
  ?grandfather a ns:Person ; 
               ns:role ns:royalty .
  FILTER (lang(?person) = ""en"")  # Assuming we want results in English
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"SELECT ?actor WHERE {
  ?song ""Shelby Oaks"" .
  ?album ""I'm Alive"" .
  ?song rdfs:label ""I'm Alive"" .
  ?actor ns:film/ns:role ?song .
  ?actor ns:film/ns:role ?album
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"SELECT ?royaltySpouse ?childPredecessor
WHERE {
  ?father a dbpedia:Person;
    dbpedia:parentOf ?spouse;
    rdfs:label ""Myat Hpone Pyo's father""@en.
  ?spouse a dbpedia:Person;
    rdfs:label ""Spouse of Myat Hpone Pyo's father""@en;
    dbpedia:partner ?royaltySpouse.
  ?child a dbpedia:Person;
    rdfs:label ""Child of the spouse""@en;
    dbpedia:parent ?royaltySpouse;
    dbpedia:predecessor ?childPredecessor.
  ?child rdfs:label ""Child of Saw Min Phyu""@en.
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","SELECT ?artist1 ?artist2 WHERE {
  ?artist1 a dbpedia-owl:Musician; dbpprop:birthName ""Pacely"" .
  ?artist2 a dbpedia-owl:MusicalArtist; dbpprop:associatedWith ?artist1 .
  ?artist1 rdfs:label ""Rod Argent""@en .
  ?artist2 rdfs:label ""Central Region, Ghana""@en .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"SELECT ?birthplace ?award
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia:birthPlace ?birthplace .
  ?award a dbpedia:Award ;
    rdfs:label ?awardLabel .
  ?award rdfs:recipient ?person .
}
LIMIT 1",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","SELECT ?politician ?country WHERE {
  ?politician a dbpedia-owl:Politician;
    foaf:nationality ?country .
  ?politician rdfs:label ?politicianLabel .
  ?royBarreras foaf:father ?father .
  ?sofiaPetro foaf:mother ?mother .
  ?father a dbpedia-owl:Person;
    rdfs:label ?fatherLabel .
  ?mother a dbpedia-owl:Person;
    rdfs:label ?motherLabel .
  ?royBarreras rdfs:label ""Roy Leonardo Barreras Montealegre""@es .
  ?sofiaPetro rdfs:label ""Sofía Petro""@es .
  ?country rdfs:label ?countryLabel
} 
WHERE {
  ?countryLabel = ""Colombia""
}",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","SELECT ?war1Label ?war2Label ?location WHERE {
  ?war1 a ns:war.
  ?war1 rdfs:label ""War of Napoleon Zervas""@en.
  ?war2 a ns:war.
  ?war2 rdfs:label ""Awardee of 30""@en.
  ?war1 location ns:locatedIn ?location1.
  ?war2 location ns:locatedIn ?location2.
  ?location1 a ns:settlement.
  ?location2 a ns:settlement.
  ?location1 rdfs:label ""Antonios Varthalitis""@en.
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"SELECT ?alumnusLabel ?alumnusBirthplace WHERE {
  ?alumnus a dbpedia-owl:AlumnusOf ?university.
  ?university rdfs:label ""Plovdiv University \""Paisii Hilendarski\"""".
  ?alumnus dwc:birthLocation ?birthPlace.
  ?birthPlace a dwc:Settlement.
  FILTER (lang(?birthPlace) = ""bg"") # Ensure birthplace is in Bulgarian language
  AND timeZoneOf?birthPlace ""Europe/Bucharest"" # Eastern European Time zone
}",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"Given the complexity of the query, we'll break it down into parts:

1. **Find the manager of VfL Bochum during the 2006-07 season:**
   ```sparql
   SELECT ?manager
   WHERE {
       ?team ns:hasMember ?player .
       ?player ns:hasRole ""player"" .
       ?team rdfs:label ""VfL Bochum"" .
       ?team dbpprop:manager ?manager .
       FILTER (xsd:date(?team) = ""2006-07"")
   }
   ```

2. **Find the successor season of 2006-07:**
   ```sparql
   SELECT ?successor_season
   WHERE {
       ?season ns:hasSuccessor ?successor .
       ?season rdfs:label ""2006-07""^^xsd:gYear .
       ?successor rdfs:label ?successor_season .
   }
   ```

3. **Find the manager of Thomas Letsch's team in the successor season:**
   ```sparql
   SELECT ?manager_of_letsch_team
   WHERE {
       ?player ns:hasMember ?team .
       ?player ns:hasRole ""Thomas Letsch"" .
       ?team rdfs:label ?team_label .
       ?team dbpprop:manager ?manager_of_letsch_team .
       FILTER (xsd:date(?team) = ?successor_season)
   }
   ```

4. **Determine the native country of the manager of the team in the successor season:**
   ```sparql
   SELECT ?native_country_of_manager
   WHERE {
       ?manager ns:hasProperty ?nationality .
       ?manager rdfs:label ?manager_label .
       ?team dbpprop:manager ?manager .
       ?team rdfs:label ?team_label .
       FILTER (xsd:date(?team) = ?successor_season)
   }
   ```

5. **Combine all the results to get the final answer:**
   ```sparql
   SERVICE wikibase:label {
       bd:serviceParam wikibase:language ""de"" .
   }

   SELECT ?manager_name ?native_country
   WHERE {
       ?manager dbpprop:nationality ?native_country .
       ?manager rdfs:label ?manager_name .
       ?team dbpprop:manager ?manager .
       ?team rdfs:label ""Thomas Letsch's team in the successor season of 2006-07 VfL Bochum"" .
       FILTER (xsd:date(?team) = ?successor_season)
   }
   ```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"SELECT ?person WHERE {
  ?child a dbpedia:Royalty .
  ?child dbpprop:hasParent ?parent1 .
  ?parent1 a dbpedia:Person .
  ?child dbpprop:hasParent ?parent2 .
  ?parent2 a dbpedia:Person .
  ?parent2 dbpprop:spouseOf ?spouse .
  ?spouse a dbpedia:Person .
  ?spouse dbpprop:hasChild ?child .
  ?child dbpprop:hasParent ?minye_kyawswa .
  ?minye_kyawswa a dbpedia:Person .
  ?minye_kyawswa dbpprop:hasChild ?child
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasBandMember ?bandMember .
  ?person rdfs:label ""Jamie T""@en;
    dbo:birthDate ""1988-04-11""^^xsd:date;
    dbo:nickName ""Emilia Yancheva Valeva"" .
}",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"SELECT ?author ?work WHERE {
  ?author a dbpedia:OfficeHolder .
  ?author rdfs:label ""Korean Conflict"" .
  ?author ns:author ?work .
  ?work a dbpedia:WrittenWork .
  ?work rdfs:label ""Book"" .
  ?author ns:name ""Joe Biden"" .
}",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","Given the complexity and the need for precise data, a SPARQL query would look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actorName ?spouseName
WHERE {
  ?landmark rdf:type dbpedia-owl:Landmark.
  ?landmark rdfs:label ?landmarkLabel.
  FILTER (xsd:float(?landmark_elevation) = 20.116800000000001347).

  ?movie rdf:type dbpedia-owl:Film.
  ?movie producer dbpedia:Nat_Levine.
  ?actor dbpedia:actoredIn ?movie.

  ?actor rdfs:spouse ?spouseName.
  ?actor rdfs:label ?actorName.
  
  ?person rdfs:label ""Ann Sothern""@en.
  ?person dbpedia:birth_name ?birth_name.
  
  ?actorName = ?person
}
```

This query attempts to find:
- `?actorName`: The name of the actor from the movie produced by Nat Levine.
- `?spouseName`: The spouse's name of this actor.

The FILTER clause ensures we only consider landmarks with an elevation of 20.1168, which is a very specific value and might not directly map to a real-world location without further refinement or context (e.g., considering it could be a fictional or highly specific detail).",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?person WHERE {
  ?child a ns:Person ;
            rdfs:label ""The specified royalty"" .
  ?parent a ns:Person ;
           rdfs:label ""Archduchess Margarete Sophie of Austria"" .
  ?grandparent a ns:Person ;
               rdfs:label ""Duke Philipp of Württemberg"" .
  ?child2 a ns:Person ;
            rdfs:label ""Child of the spouse of Archduchess Helena of Austria"" .
  ?child2 ns:parent ?child .
  ?child ns:parent ?parent .
  ?grandparent ns:parent ?parent
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","SELECT ?person ?war WHERE {
  ?person a dbpedia:Person;
  dbpedia:P31 wd:Q11663 .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""ja"" ) .
  ?war a dbpedia:War;
  dbpedia:P31 ?date .
  ?war rdfs:label ?war_name .
  ?person rdfs:label ?name .
  ?war owl:sameAs ?war_of Hideyoshi
}",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName;
    rdfs:label ?roleInAnthology.
  ?anthology a dbpedia:Album;
    dbpedia:artist ?musicalArtist.
  ?person rdfs:label ""Pacely"" .
  ?person rdfs:label ""Joey B"" .
  ?roleInAnthology ""The Live Anthology"" .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:parentSiblings [ dbpedia:hasChild ?child ].
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent.
  ?parent a dbpedia:OfficeHolder;
    rdfs:label [""Royalty""].
  ?child a dbpedia:Royalty.
  ?parent rdfs:label [""William I of England""].
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?birthPlace
WHERE {
  ?artist a ns:Artist .
  ?artist rdfs:label ""Steven Kapur""@en .
  ?work a ns:MusicalWork .
  ?work rdfs:author ?artist .
  ?trueSelf a ns:Person .
  ?trueSelf rdfs:label ""Steven Kapur""@en .
  ?producer rdfs:agent ?work .
  ?producer rdfs:birthPlace ?birthPlace
}",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"SELECT ?birthPlace WHERE {
  ?child a pol:Politician; 
  ?child ns:father ch:Chiang_Ching-kuo.
  ?child dbo:birthPlace ?birthPlace
}

For the second part, without specific details about Hu Jieqing's spouse or their country of work, we cannot construct a meaningful SPARQL query.",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player 
WHERE {
  ?film dbo:hasActor ?actor .
  ?actor rdfs:label ""Manuel Huerga""@es .

  ?soccerPlayer rdf:type dbo:SoccerPlayer .
  ?soccerManager rdf:type dbo:SoccerManager .
  
  ?personOfBirth rdf:type dbo:Person .
  ?personOfBirth dbo:birthday ""1955-02-22""^^xsd:date .
  ?soccerPlayer rdf:type ?personOfBirth .

  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = ""es"")  # Ensure the player's label is in Spanish
}

```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia:ComicsCharacter; rdfs:label ""Dr. Winston Borden""@en .
  ?person a dbpedia:ActorRoleInVideoGame; rdf:_1 ?role_in_game .
  ?person rdfs:name ""Richard Grant Esterhuysen""@en .
  FILTER (fn:contains(?person, ""Ab Kya Hoga"")) .
}",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?commander
WHERE {
  ?commander rdfs:label ""Commander of Siege of Padua"" .
  ?commander foaf:child ?royal_child .
  ?royal_child a dbo:Royalty .
}",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","SELECT ?war ?awardee ?award_show ?birthplaceLabel ?entityType ?deceasedYear
WHERE {
    ?awardee a dbpedia-owl:Person ;
        dbpedia2:birthPlace ?birthplace .
    ?awardee rdfs:label ?awardee_label .
    ?awardee dbo:recipientOfAward ?award_show .
    ?awardee dbo:war ?war .
    ?birthplace a dbpedia-owl:Settlement ;
        rdfs:label ?birthplaceLabel .
    ?awardee dbo:nationality ""American"" .
    ?awardee dcterms:deathDate ""1850-08-05""^^xsd:date .
    ?award_show a dbo:UnitedStatesCongressAward .
}
LIMIT 1",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","SELECT ?parent WHERE {
  ?child a ns:Person ;
    ns:alumniOf edu:EtonCollege ;
    ns:offices held ?office .
  ?parent a ns:Person ;
    ns:parentOf ?child ;
    ns:officeHolder ?office .
  ?office rdfs:label ""Politician"" .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","SELECT ?person ?country WHERE {
  ?person a :GrandDukeOfFinland .
  ?person a :TsarOfRussia .
  ?person ns:nativeCountry ?country
}
LIMIT 1",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?writer ?commanderName ?politicianOffice ?eventConflict ?militaryForce
WHERE {
  ?writer a :WRITER .
  ?televisionShow1 a :TV_SHOW ; title ""Always the Love Songs"" .
  ?televisionShow2 a :TV_SHOW ; title ""Commander in the War"" .
  ?commanderName a :COMMANDER_OF_BATTLE_OF_VIENNA ;
                 foaf:name ?commanderName .
  ?politicianOffice a :POLITICAL_OFFICE ;
                    rdfs:label ?politicianOfficeLabel .
  ?militaryForce a :MILITARY_FORCE ;
                  foaf:name ""Holy Roman Empire"" .
  ?writer rdfs:subPropertyOf [a :WRITER_OF] .
  ?writer ns:inDataset dbpedia-owl ; owl:inverseOf :writtenBy .
  ?televisionShow1 ns:inDataset dbpedia-owl ; owl:inverseOf ?writer .
  ?televisionShow2 ns:inDataset dbpedia-owl ; owl:inverseOf ?writer .
  ?commanderName ns:inDataset dbpedia-owl ; owl:inverseOf ?televisionShow1 .
  ?commanderName ns:inDataset dbpedia-owl ; owl:inverseOf ?televisionShow2 .
  ?politicianOffice ns:inDataset dbpedia-owl ; owl:inverseOf ?commanderName .
  ?eventConflict a :BATTLE_OF_VIENNA ;
                 foaf:name ""Battle of Vienna (1683)"" .
  ?militaryForce ns:inDataset dbpedia-owl ; owl:inverseOf ?eventConflict
}
LIMIT 1",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","SELECT ?president ?leader ?country
WHERE {
    ?party psoe:president ?president .
    ?party psoe:leader ?leader .
    ?citizen spain:nationality ""Spanish"" .
    ?citizen spain:residence ?country .
    ?president ns:language ""es"" .
    ?leader ns:year ""2009-04-01""^^xsd:date .
    ?country rdfs:label ""Spain"" .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child a ns:office_holder .
  ?child ns:parent ?grandparent .
  ?grandparent ns:child ?parent_of_A .
  ?parent_of_A ns:parent ?alfonso_VI .
  ?alfonso_VI ns:child ?A .
  ?A ns:child ?william_I
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"SELECT ?parent WHERE {
  ?child a dbpedia:Person ;
            dbpedia:royalty true ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:royalty true .
  ?child rdfs:label ""Princess Muna al-Hussein"" .
  ?child rdfs:father ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:royalty true .
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?officeHolder ?officeName ?event WHERE {
  ?officeHolder rdfs:label ""Manuel Pinto da Costa""@pt.
  ?officeHolder a pol:Politician .
  ?officeHolder owls:hasRole ?commanderOffice .
  ?event a owl:Event .
  ?event rdfs:label ""2003 Madrid City Council election""@en.
  ?event rdfs:subPropertyOf owls:Election .
  ?officeHolder owls:holdsOffice ?officeInElection .
  ?officeInElection rdfs:label ""Madrid City Council""@en.
  ?officeHolder ns:tenantOf ?residenceOfLeader .
  ?leader a pol:Politician .
  ?leader ns:residence ?residence .
  ?leader rdfs:label ""Leader of Conservative Republican Party (Spain)""@en.
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?band WHERE {
  ?person a dbpedia:MusicalArtist;
    rdfs:label ""Bob Thompson""@en.
  ?person foaf:name ""Walter B. Gibson"" .
  ?person rdfs:alter ?shadow .
  ?shadow a dbpedia:FictionalCharacter;
    rdfs:label ""The Shadow""@en.
  ?person dbpprop:occupation ""music producer"" .
  ?person dbpprop:work ""[[Coke Studio Philippines]]""
}",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"SELECT ?player ?role ?film ?team
WHERE {
  ?player a dbpedia:Person;
    dbpprop:birthDate [ convertTime ""1982-03-29"" ""yyyy-mm-dd"" ].
  ?player rdfs:label ?name.
  ?film a dbpedia:Film;
    dbpprop:actor ?player.
  ?role a dbpprop:RoleType .
  ?team a dbpedia:SoccerTeam;
    dbpprop:manager ?player.
  OPTIONAL { ?player dbpprop:occupation ""soccer player"" }
  OPTIONAL { ?player dbpprop:occupation ""soccer manager"" }
  FILTER (regex(strftime(""%Y"", ?birthDate), ""1982"")).
  ?film dbpedia:hasActor ?player.
  ?player rdfs:label ?name .
}
ORDER BY ?name",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"SELECT ?office ?politician ?party WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 ""Manuel Pinto da Costa"" .
  ?commanderOffice a dbpedia:Office; dbpedia:predicate[""commander of""];
    dbpedia:holder ?person .
  ?residence a dbpedia:Residence;
    dbpedia:tenant ?politician .
  ?miguel m:ledParty ?party .
  ?party a dbpedia:PoliticalParty .
  ?person rdfs:label [""Office holder"" | ""Politician""] .
  ?commanderOffice rdfs:label [""Military conflict"" | ""Societal event""] .
  ?politician rdfs:label [""Alberto Ruiz-Gallardón""] .
  ?party rdfs:label [""Party of Miguel Maura""]
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","SELECT ?bandMember
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:associatedBand ?band .
  ?band a dbpedia:Band ;
         dbpedia:hasMember ?bandMember .
  ?band rdfs:label ""Nothing to Gein"" .
  ?producer a dbpedia:MusicProducer ;
            dbpedia:producedFor ?artist .
  ?producer a dbpedia:Organization;
            dbpedia:isPartOf ?group .
  ?group a dbpedia:Group .
}",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?commander ?war ?societal_event
WHERE {
  ?triple_x commander ?commander .
  ?robert_calder battle ?war .
  ?william_bayne battle ?war .
  ?war eventType ""MilitaryConflict"" .
  ?war eventSubtype ""SocietalEvent""
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","SELECT ?residence ?leader_office ?event WHERE {
  ?citizen ns:nationality ns:Spanish .
  ?country ns:countryName ""Spain"" .
  ?leaderOffice a ns:Office .
  ?event a ns:Event .
  ?anxoQuintana ns:participatedIn ?event .
  ?administration ns:tenantOf ?party .
  ?party rdfs:label ""Spanish Socialist Workers' Party"" .
  ?residence ns:locatedIn ?country .
  ?leaderOffice hasAuthorityOver ?residence .
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"SELECT ?child_name
WHERE {
  ?child a :royalty ;
            :father ?grandparent .
  ?grandparent a :royalty ;
             :child ?child .
  ?child_sparql :name ?child_name .
  ?child_sparql a :child_of_Martin_of_Aragon .
}",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","SELECT ?person WHERE {
  ?person a :actor .
  ?person rdfs:label ""Shatrughan Sinha""@en .
  ?person foaf:name ""Richard Grant Esterhuysen""@en .
  ?person appearedInGame :the_shadow_game .
}",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist;
    foaf:name ""Nicholas Michael Curran"" .
  ?person bornOnDate ""1945-03-30"" .
  ?band a dbpedia:Band ;
    dbpedia:associatedBandMember ?person .
  
  ?kim_wilson a dbpedia:MusicalArtist;
    rdfs:label ""Kim Wilson"" .
  ?band a dbpedia:Band ;
    dbpedia:member ?kim_wilson .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","Given the complexity and the need for specific data points, we'll use SPARQL queries to extract these details from DBpedia. Here are the individual queries:

1. **Find the location ""English and a settlement"":**
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?location WHERE {
  ?location a dbo:Settlement ;
             rdfs:label ""English"" .
}
```

2. **Find the artist associated with this location:**
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?location a dbo:Settlement ;
            dbo:hasArtist ?artist .
  ?artist a rdf:Resource .
}
```

3. **Determine the parent of the artist (likely a country or region):**
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?artist a dbo:Artist ;
           dbo:hasParent ?parent .
}
```

4. **Identify the author of the movie (work and television show), deceased:**
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?author WHERE {
  ?movie a dbo:Work ;
           dbo:hasAuthor ?author .
  ?author a dbo:Person ;
          rdfs:label ""Deceased"" .
}
```

5. **Find the artist who created this movie and check if they died in 2020-06-18:**
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?movie a dbo:Work ;
           dbo:hasCreator ?artist .
  ?artist a dbo:Artist ;
          rdfs:label ""Artist"" ;
          dbo:deathDate ""2020-06-18""^^xsd:date .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","SELECT ?spouse
WHERE {
  ?movie award:award ""Ian Gregson (poet)"" .
  ?movie producer ?producer .
  ?producer rdfs:label ""Linda Sue Cobb"" .
  ?movie wdt:P18 foaf:maker ?person .
  ?person rdfs:label ""Linda Sue Cobb"" .
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","SELECT ?manager_name 
WHERE {
  ?sport_manager rdf:type dbpedia-owl:SportManager.
  ?sport_manager foaf:birthDate ""1968-08-26"".
  ?season rdf:type dbpedia:FootballSeason.
  ?season dbpprop:club ""VfL Bochum"".
  ?manager rdfs:label ?manager_name.
  ?player rdf:type dbpedia:SportEntertainmentPerson.
  ?player dbpprop:managedBy ?manager.
  ?player dbpprop:club ?soccer_club.
  ?soccer_club a dbpedia:SoccerClub.
  ?leader foaf:name ""Chancellor of Germany"".
  ?leader dwc:countryOfBirth ""Germany""
}",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","The SPARQL query will involve querying the DBpedia dataset for the relevant relationships and properties. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?musical_artist
WHERE {
  ?band Khlyst.
  ?bandMember a dbpedia-owl:Musician ; dbpedia-owl:isAssociatedBandMemberOf ?band .
  ?bandMember rdfs:label ?bandMemberLabel .
  ?associated_artist a dbpedia-owl:Artist .
  ?bandMember dbpedia-owl:isConnectedTo ?associated_artist .
  ?associated_artist rdfs:label ?musical_artistLabel .
  FILTER (lang(?musical_artistLabel) = ""en"")  # Assuming we want results in English
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"SELECT ?person
WHERE {
  ?person a ns:Person ;
            rdfs:label ""Shawn Carter""@en .
  ?award a ns:Award ;
            rdfs:label ""Music Award""@en .
  ?region a ns:Region ;
            rdfs:label ""New York""@en .
  ?band a ns:Band ;
            rdfs:label ""GS9""@en .
  ?bandMember a ns:BandMember ;
               a ns:Artist ;
               a ns:MusicalArtist ;
               memberOf ?band .
  ?award awardedTo ?person .
  ?person bornAs ?birthName .
  ?bandMember bandMemberOf ?band .
  ?band locatedIn ?region
}",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"SELECT ?player ?team 
WHERE {
  ?player a dbpedia:Footballer ;
            dbpedia:birthDate ""1975-04-15"" .
  ?manager a dbpedia:SoccerManager ;
            dbpedia:birthDate ""1975-04-15"" .
  ?team a dbpedia:FootballClub ;
         dbpedia:hasPlayer ?player ;
         dbpedia:hasManager ?manager .
}
ORDER BY ?player",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:birthName ?birthName ;
            dbpedia:origin dbpedia:Florida .
  ?band a dbpedia:Band ;
         dbpedia:members ?bandMember .
  ?award a dbpedia:Award ;
         dbpedia:region dbpedia:New_York_Sate .
  ?artist dbpedia:associatedWith ?band .
  ?award gnd:awardedTo ?artist
}",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?person ?birthplace WHERE {
    ?person a dbpedia-owl:Person;
        dbpprop:deathDate ""1850-08-05"" .
    ?person rdfs:receivesAward dbpedia:Gillmore_Medal .
    ?person rdfs:wasInvolvedInConflict dbpedia:American_Civil_War .
    ?birthplace a dbpedia-owl:Settlement;
        geo:spatialLocation [ geo:coordinates ""latitude_value"" ""longitude_value"" ] .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?commander ?war WHERE {
  ?commander a ns:people.person;
    nao:hasTag nao:00001234 ; # Assuming ""Commander of the Order of the British Empire"" has the tag nao:00001234
  ?commander ns:involvement/ns:partOf ?war.
  ?war a ns:societal_event; ns:military_conflict .
  ?war rdfs:label ""Sinking of Prince of Wales and Repulse"".
  FILTER (xsd:date(?war) = ""1941-11-12"") . # Specify the year of the battles
}",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"Given that DBpedia provides structured data about people, relationships, and movies, we can construct a SPARQL query to follow the reasoning steps outlined above. Here's how the query might look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?person a dbo:Person ;
            dbo:deathPlace ""Los Angeles, California"" ;
            dbo:hasSpouse ?spouse ;
            dbo:child ?child .
  
  ?child a dbo:Person ;
         dbo:hasParent ?parent .
  
  ?parent a dbo:Person ;
          dbo:hasProfession ""Actor"" ;
          dbo:roleInFilm ?movieRole .
  
  ?movieRole a dbo:FilmRole ;
               rdf:type dbo:ActingRole .
}
```

This query searches for a person who:
- Is a `dbo:Person` and died in Los Angeles,
- Has a spouse and at least one child,
- The child has a parent who is an actor with a film role (`dbo:ActingRole`).

The `SELECT ?actor` clause will return the name of the actor.",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","SELECT ?writer
WHERE {
  ?work a dbpedia:Television_Series .
  ?work aboutDbpedia:George_Ducas .
  ?work rdfs:creator ?writer .
  FILTER (lang(?work) = ""en"")  # Assuming the work is in English
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person WHERE {
  ?parent a dbpedia:Royalty;
  ?child a dbpedia:Person;
  ?child rdfs:label ""Wilhelm II""@de;
  ?parent ns:fatherOf ?child
}",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"SELECT ?commander ?country_of_residence ?native_country ?athlete
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace ""Poland"";
    dbpedia:nationality ""Polish"";
    dbpedia:conflict ""French Revolutionary Wars"";
    rdfs:label ?name.
  
  ?country_of_residence a dbpedia:Country.
  
  ?athlete a dbpedia:Athlete;
    dbpedia:residence ""Łódź, Poland"".
  
  ?commander rdfs:label ?name .
  ?commander ns:familyName ""Poniatowski"" .
  ?commander ns:militaryBranch ""French Army"" .
  ?country_of_residence ns:name ?country_name .
  ?athlete ns:goldMedalCount 1.
  
  ?commander ns:birthDate <1976-07-12> . # Approximate birth date of Poniatowski
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:isAssociatedWith dbpedia:Band .
  ?band a dbpedia:Band .
  ?band foaf:name ?bandName .
  ?bandMember a dbpedia:Musician ;
             dbpedia:isMemberOf ?band ;
             dbpedia:birthPlace [ geo:country ""United States"" ; geo:state ""New York"" ] .
  ?awardee dbpedia:hasAward dbpedia:Award ;
            dbpedia:region [ geo:country ""United States"" ; geo:state ""New York"" ] .
  ?awardee a dbpedia:Person ;
           foaf:name ?awardeeName .
  ?artist a dbpedia:Artist .
  ?artist foaf:name ?artistName .
  ?artist dbpedia:origin [ geo:country ""United States"" ; geo:state ""Florida"" ] .
  ?bandMember a dbpedia:Musician ;
             dbpedia:isMemberOf ?band ;
             foaf:name ?bandMemberName .
  ?bandMember dbpedia:birthName ?birthName .
  ?bandMember a dbpedia:Artist .
}",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"SELECT ?partyMember
WHERE {
  ?place ""Gettysburg, Pennsylvania"" .
  ?rulingParty rdfs:label ""Union Party"" .
  ?militaryForce involvedIn ""Pickett's Charge"" .
  ?partyMember a :PoliticalParty ; foaf:member ?rulingParty .
  ?partyMember rdfs:label ""Abraham Lincoln"" .
}",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?commander a :MilitaryCommander ;
             :servedInWar :Algerian_War ;
             :isChildOf :Maria_Anna_of_Bavaria .
  ?commander :hasTelevisionShow ?tv_show .
  FILTER (regex(str(?tv_show), ""Algerian War"")).
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?warLabel ?bayneRole ?societalEvent ?militaryForce
WHERE {
  ?war a :War .
  ?bayne a :RoyalNavyOfficer .
  ?bayne rdfs:label ""William Bayne""@en .
  ?war rdfs:label ?warLabel .
  ?bayne :servedIn ?war .
  ?war a :WorldWarII .
  ?bayne :awarded ""Knight Commander of the Order of the Bath"" .
  ?militaryForce a :MilitaryForce .
  ?societalEvent a :SocietalEvent .
  ?bayne :servedIn ?militaryForce .
  ?militaryForce rdfs:label ?militaryForceLabel
}
ORDER BY ?warLabel",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","SELECT ?royal_grandchild
WHERE {
  ?archduchess_sophie a dbpedia:Person ;
                 dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?grandchild1 .
  ?grandchild1 a dbpedia:Person;
               dbpedia:hasChild ?royal_grandchild .
  ?royal_grandchild a dbpedia:Royalty
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?spouse
WHERE {
  ?awardee ns:award ""Oscar for Best Director"" .
  ?awardee rdfs:label ""Janusz Kamiński"" .
  ?awardee ns:roleInFilm ""The Pianist"" .
  ?spouse a foaf:Person .
  ?spouse ns:familyMember ?awardee .
  FILTER (lang(?spouse) = ""pl"")  # Ensure spouse is Polish
}",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person
WHERE {
  ?person a :royalty .
  ?person rdfs:child ?grandchild .
  ?grandchild a :royalty .
  ?person ns:predecessor ""Charles I of Hungary"" .
  ?person ns:spouse ""Elizabeth of Bosnia"" .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?associated_artist
WHERE {
  ?band rdfs:member ?associated_artist .
  ?songwriter wdt:P31 wd:Q12299 . # Michael Stipe as a person
  ?song rdf:says ?songwriter .
  ?song P31 wd:Q14863 . # ""Sappy"" as a musical work
  ?associated_artist a wdt:P17; rdfs:label ?band_name .
  ?band rdfs:label ""R.E.M."" .
}",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:role ?alter_ego_in_golden_age .
  ?person ns:performerInAlbum ""What You Know"" .
  ?person ns:actorInFilm ?movie_with_author_of_smartbomb .
}",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","SELECT ?subject ?property ?object WHERE {
  ?subject a dbpedia:Person;
    dbpedia:P31 ?p1 .
  ?p1 a dbpedia:Event ;
    dbpedia:partOfHistory ?historical_event .
  ?historical_event a dbpedia:Military_conflict .
  ?subject rdfs:label ""Jean Baptiste, Comte d'Arco""@fr .
  ?subject rdfs:seeAlso ?link_to_details .
  ?link_to_details a dbpedia:Page ;
    dbpedia:isRedirectedTo ?jean_baptiste_comte_d_arco .
  ?jean_baptiste_comte_d_arco a dbpedia:Historical_figure;
    dbpedia:P31 ?role_as_commander .
  ?role_as_commander a dbpedia:EventRole ;
    dbpedia:actor ?commander_of_war .
  ?commander_of_war rdfs:label ""Television show and societal event commander""@en .
  ?commander_of_war rdfs:seeAlso ?details_on_commander .
  ?details_on_commander a dbpedia:Page ;
    dbpedia:isRedirectedTo ?television_show_event .
  ?television_show_event a dbpedia:Television_series;
    dbpedia:P42 ?title_of_tv_show .
  ?title_of_tv_show rdfs:label ""Title of the TV show""@en .
  ?commander_of_war rdfs:seeAlso ?political_office_holder .
  ?political_office_holder a dbpedia:Office_holding ;
    dbpedia:P31 ?office .
  ?office a dbpedia:Political_office;
    dbpedia:name ""Force""@en .
  ?office rdfs:seeAlso ?office_details .
  ?office_details a dbpedia:Page ;
    dbpedia:isRedirectedTo ?specific_office .
  ?specific_office a dbpedia:Military_force ;
    dbpedia:P31 ?military_conflict .
  ?military_conflict a dbpedia:Military_conflict ;
    dbpedia:partOfHistory ?historical_context_of_war .
  ?historical_context_of_war rdfs:seeAlso ?work_by_george_ducas .
  ?work_by_george_ducas a dbpedia:Work;
    dbpedia:author ""George Ducas""@en
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?tenant WHERE {
  ?party rdf:type dbo:PoliticalParty ;
            dbo:leader ?tenant .
  ?tenant a dbo:Person .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT { ?person a dbo:Country } WHERE {
  ?person a dbo:Residence ;
            dbo:resident ?address .
  ?address a dbo:Location .
}

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?event WHERE {
  ?event a dbo:Event ;
           dbo:leader ?quintana .
  ?quintana a dbo:Person .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"SELECT ?band ?name WHERE {
  ?band rdfs:label ""Fabulous Thunderbirds""@en .
  ?band member Kim_Wilson .
  
  ?band rdfs:label ""Eric Clapton Band""@en .
  ?band member Eric_Clapton .
  
  ?band2 rdfs:label ""Nick Curran's band""@en .
  ?band2 member Nick_Curran .
  
  ?band1 ns:involvesBand ?band2 .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia:Musician .
  ?person rdfs:label ""Artist Name""@en .
  ?person dbpprop:workedOnAlbum ""Lasso the Moon"" .
  ?person dbpprop:actedInFilm ""The Shadow""
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"SELECT ?producer
WHERE {
  ?producer a dbpedia:MusicProducer ;
            dbpedia:birthName ""Bob Thompson"" ;
            dbpedia:performAs dbpedia:The_Shadow .
  GRAPH <http://cokestudio.ph> {
    ?producer rdfs:label ""Coke Studio Philippines producer"" .
  }
}",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?entity
WHERE {
  ?entity <http://dbpedia.org/property/country> ""Spain"" .
  ?entity rdfs:member <http://dbpedia.org/ontology/PoliticalParty> ?party_of_roy_barreras .
  ?entity <http://dbpedia.org/property/father> ?father .
  ?father rdfs:member <http://dbpedia.org/ontology/PoliticalParty> ?party_of_sofia_petro
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?royalty_sparql WHERE {
  ?child a :royalty .
  ?child :parent [ a :parent; owl:inverseOf :child ] .
  ?child :spouse ?royalty_sparql .
  ?parent a :royalty .
  ?parent = [ a :person; owl:inverseOf :father; rdf:type :king ] .
  ?parent = [ a :person; owl:inverseOf :wife; rdf:type :queen ] .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?spouse
WHERE {
  ?author a :politician ; :officeHolder ?office .
  ?author rdfs:label ""Hillary Clinton"" .
  ?work a :book; rdfs:subject ?author .
  ?work rdfs:label ""Work title of Hillary Clinton's book"" .
  ?author ns:commanderInWar ""Kosovo War"" .
  ?author ns:affectedByDisease ?disease .
  ?author ns:impactedBySocietalEvent ?event .
  ?spouse a :person; foaf:partner ?author .
}",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?governor_name ?governor_birth_place ?awardee_name ?awardee_birth_place ?author_name ?author_birth_place
WHERE {
  ?p1 a :Politician; :birthPlace ?powell_birth_place.
  ?p2 a :Governor; :birthPlace ?powell_birth_place.
  ?p3 a :Awards_Nomination; :recipient ?awardee.
  ?p4 a :Award_Nomination; :award ?awardee.
  ?p5 a :Person; :name ""Vince Gilligan""; :birthPlace ?gilligan_birth_place.
  ?p6 a :Person; :name ""El Deafo""; :author ?author.
  ?p7 a :Person; :name ?author_name; :birthPlace ?author_birth_place.
  ?p1 ns:inDataset dbpedia-owl.
  ?p2 ns:inDataset dbpedia-owl.
  ?p3 ns:inDataset dbpedia-owl.
  ?p4 ns:inDataset dbpedia-ontology.
  ?p5 ns:inDataset dbpedia-ontology.
  ?p6 ns:inDataset dbpedia-ontology.
  ?p7 ns:inDataset dbpedia-ontology.
  FILTER (lang(?author_name) = ""en"")
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"Given the complexity of the relationships and the need to traverse through multiple relations, a SPARQL query would look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_predecessor 
WHERE {
  ?spouse a rdf:Property; rdfs:label ""spouse_of"" .
  ?minPhyu a person; hasSpouse ?spouse .
  ?child1 a person; childOf ?minPhyu; hasSpouse ?spouse .
  ?grandchild a person; childOf ?child1; hasParent ?child1 .
  ?grandchild a royalty .
  ?royalty_predecessor a person; parentOf ?grandchild .
}
```

This query starts by defining the prefixes and then selects the `?royalty_predecessor` who is an ancestor of a grandchild that is a royalty. It assumes that the relationships are represented in a graph database with the properties defined as `hasSpouse`, `childOf`, and `hasParent`.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","SELECT ?parent1 ?parent2 WHERE {
    ?person a :Person;
        :name ""Hon. Mary Frances Bowes-Lyon"";
        :father ?father;
        :mother ?mother .
    ?father a :Person;
        rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
    ?mother a :Person;
        rdfs:label ""Lady Elizabeth Bowes-Lyon""@en .
    ?child a :Child;
        :parent ?person ;
        :father ?grandfather;
        :mother ?grandmother .
    ?grandfather a :Person;
        rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
    ?grandmother a :Person;
        rdfs:label ""Lady Elizabeth Bowes-Lyon""@en
}",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?person WHERE {
  ?person a ns:Person ;
            rdfs:label ""Orson Welles""@en .
  ?person ns:directedMovie ?movie .
  ?movie ns:starred ?actor .
  ?actor rdfs:label ""Rock Hudson""@en .
  ?person ns:produced ?work .
  ?work ns:starred ?collins .
  ?collins rdfs:label ""Cora Sue Collins""@en
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","SELECT ?player ?role1 ?role2 ?managerRole WHERE {
  ?player rdfs:label ""Tony Hollings""@en .
  ?player ns:birthDate ?birthday .
  ?birthday dt:startYear 1980 .
  ?player a :Athlete .
  ?player a :SoccerPlayer .
  ?player a :SportsManager .
  ?player a :SoccerManager .
  ?managerRole a :SportsManager .
  ?managerRole a :SoccerManager .
  ?managerRole rdfs:label ""Manager""@en .
  ?club a :Organization .
  ?club a :SportsClub .
  ?club a :SportsTeam .
  ?club a :SoccerClub .
  ?club location ""Hong Kong C""^^xsd:string .
}",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?musicalArtist
WHERE {
  ?member a dbpedia:BandMember ;
            dbpedia:is_a dbpedia:Musician .
  ?associatedArtists a dbpedia:MusicalArtist .
  ?member dbpedia_has_member_of ?associatedArtists .
  ?band a dbpedia:Band ;
          dbpedia:has_members ?members .
  ?members a dbpedia:Group;
           dbpedia:is_a dbpedia:Band .
  ?band rdfs:label ""Burnt by the Sun (band)"" .
}",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","Given that Buster Keaton's character Kent Allard appeared in ""The Three Ages"" (1923), we can use this information to query DBpedia for the producers of this film. For Janet Gaynor, her claim to fame was winning the first Academy Award for Best Actress, which she received for her role in ""7th Heaven"" (1927). We will query DBpedia to find the producer(s) of this movie.

Here are the SPARQL queries:

For Buster Keaton's film:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?producer WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ""Buster Keaton"";
    dbpedia:role ""Kent Allard"" .
  ?movie dbpedia:producer ?producer .
}
```

For Janet Gaynor's film:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?producer WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ""Janet Gaynor"";
    dbpedia:winningAward ""Academy Award for Best Actress"" .
  ?movie dbpedia:producer ?producer .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","SELECT ?militaryForce1 ?war WHERE {
    ?awardee rdf:type nao:HonoraryAward .
    ?awardee rdfs:label ""Knight Commander of the Order of the Bath"" .
    ?regiment rdf:type dbo:Regiment .
    ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"" .
    ?bayne a dbo:Person .
    ?bayne rdfs:label ""William Bayne"" .
    ?war a dbo:MilitaryConflict .
    ?regiment dbpprop:partOf ?war .
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"SELECT ?person ?role ?band WHERE {
  ?person rdfs:label ""Sam Concepcion""@en .
  ?band rdfs:label ""Band"" .
  ?person foaf:member ?band .
  ?band ns:member ?person .
  ?person ns:birthName ""Bob Thompson""@en .
  ?person a dbo:MusicalArtist .
  ?band a dbo:MusicGroup .
  ?character a dbo:FictionalCharacter .
  ?character rdfs:creator ""Walter B. Gibson""@en
}",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"SELECT ?predecessor
WHERE {
  ?child a :royalty .
  ?child :spouse ?spouse .
  ?spouse a :person .
  ?child :child ?grandchild .
  ?grandchild a :royalty .
  ?grandchild :parent ?parent .
  ?parent a :royalty .
  ?parent ns:father ?predecessor
}
LIMIT 1",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?actor ?producer WHERE {
  ?actor a dbpedia:Actor;
    rdfs:label ""The Shadow""@en .
  ?actor a dbpedia:Actor;
    rdfs:label ""Johnny Doughboy""@en .
  ?movie a dbpedia:Film;
    rdfs:title ""High Society Blues""@en .
  ?producer a dbpedia:Person;
    foaf:made ?movie .
  ?actor2 a dbpedia:Actor;
    rdfs:label ""Johnny Doughboy""@en .
  ?movie2 a dbpedia:Film;
    rdfs:title ""Johnny Doughboy""@en .
  ?producer2 a dbpedia:Person;
    foaf:made ?movie2
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","Given that DBpedia provides structured data about military awards and their recipients, we can construct a SPARQL query to extract this information. However, without specific names or more detailed criteria, we'll assume general patterns:

1. For the Golden Sword for Bravery awardees:
   - We need to find instances where the award was given and the recipient was involved in a war.
   ```sparql
   SELECT ?war WHERE {
       ?recipient goldenSwordForBravery_awarded .
       ?recipient warringPartyIn ?war
   }
   ```

2. For the 25th awardee from the Russian Empire:
   - We need to find the 25th instance of an award given to someone from the Russian Empire.
   ```sparql
   SELECT ?war WHERE {
       ?awardee awardNumber ""25"" .
       ?awardee nationality ""Russian Empire"" .
       ?awardee warringPartyIn ?war
   }
   ```

Combining these queries to ensure we cover both aspects might look like this:

```sparql
PREFIX award: <http://dbpedia.org/ontology/Award>
PREFIX war: <http://dbpedia.org/ontology/War>

SELECT ?war1 WHERE {
    ?recipient goldenSwordForBravery_awarded .
    ?recipient warringPartyIn ?war1
}

UNION

SELECT ?war2 WHERE {
    ?awardee awardNumber ""25"" .
    ?awardee nationality ""Russian Empire"" .
    ?awardee warringPartyIn ?war2
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"SELECT ?actor WHERE {
  ?s a dbpedia-owl:TVSeries ;
    dbpedia-owl:hasMainCharacter ?actor.
  ?actor rdfs:label ""Dispatches from Elsewhere""@en.
}
AND
{
  ?s a dbpedia-owl:TVSeries ;
    dbpedia-owl:hasPoliticianCharacter ?politician_character.
  ?politician_character rdfs:label ""Ab Kya Hoga""@en.
}
AND
{
  ?s a dbpedia-owl:VideoGame ;
    dbpedia-owl:basedOnComicsCharacter ?comics_character.
  ?comics_character rdfs:label ""The Shadow""@en.
}",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?nativePlace
WHERE {
  ?recipient a dbpedia:MusicalArtist .
  ?band dbpprop:hasMember ?recipient .
  ?band rdfs:label ""Uncle Murda"" .
  ?band dbpprop:origin ?nativePlace .
  ?nativePlace a dbpprop:Region .
  ?nativePlace a dbpprop:AmericanState .
  ?nativePlace a dbpprop:Settlement .
  FILTER (lang(?nativePlace) = ""en"")  # Ensure the language is English
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?person
WHERE {
  ?person a :commander_in_war .
  ?person a :disease .
  ?person a :societal_event .
  ?person ns:spouse ?author .
  ?person a :politician_and_office_holder .
  ?person rdfs:isDefinedBy [ a owl:Class; rdfs:label ""Hillary Clinton"" ] .
  ?author rdfs:isDefinedBy [ a owl:Class; rdfs:label ""Author"" ] .
  ?work a :book .
  ?work a :written_work .
  ?work ns:author ?author .
  ?person ns:residesIn [ a owl:Thing; rdfs:label ""Chappaqua, New York"" ] .
}",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?spouse WHERE {
  ?child a rdf:Property ;
            rdfs:label ""royalty"" .

  ?parent a foaf:Person ;
           rdfs:label ""Saw Shwe Khet"" .

  ?childParent a rdf:Property ;
               rdfs:label ""child of"" .

  ?spouse a foaf:Person ;
             rdfs:label ""Spouse of Saw Shwe Khet's child"" .

  ?grandchild a rdf:Property ;
               rdfs:label ""child of"" .

  ?grandchildParent a rdf:Property ;
                    rdfs:label ""spouse of"" .

  ?childParent ?childParent .
  ?childParent ?grandchild .
  ?spouse ?grandchildParent .
  FILTER (xsd:string(?grandchildParent) < xsd:string(?childParent))  # Spouse is the predecessor
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","SELECT ?ruling_party_member ?actor spouse_of_spouse ?parent_birth_name
WHERE {
  ?ruling_party_member rdfs:label ""Central, Louisiana's ruling party member"" .
  ?actor foaf:role [ owl:sameAs ""actor in The Thief of Bagdad (1924)"" ] .
  ?actor ex:spouse ?spouse_of_actor .
  ?spouse_of_actor foaf:name ?spouse_of .
  ?parent_name ex:child ?tisha_sterling .
  ?tisha_sterling foaf:parent ?parent .
  ?parent ex:birthName ?parent_birth_name
}
LIMIT 1",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor_movie ?actor_album
WHERE {
  ?work a ns:music.sparqlservice#Song .
  ?work a ns:music.sparqlservice#MusicalWork .
  ?work ns:artist.musicalworks#performedBy ?artist .
  ?artist ns:people.person#name ""Tip"" .
  ?movie a ns:film.film#film .
  ?movie ns:film.actor#actedIn ?actor_movie .
  ?album a ns:album.album .
  ?album ns:album.release#releasedBy ?releaseLabel .
  ?releaseLabel ns:business.label#name ""Atlantic Records"" .
  ?artist ns:people.person#alterEgo ""T.I.T.S."" .
}",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","SELECT ?musicalArtist WHERE {
  ?person ns:name ""Cynthia Chinaza Onyeka"" .
  ?person rdfs:label ?person_label .
  ?actor rdfs:label ?actor_label .
  ?movie rdfs:subject ?movie_subject .
  ?movie_subject ns:star ?actor .
  ?actor ns:name ""Afeez Oyetoro"" .
  ?musicalArtist a dbo:Musician .
  ?musicalArtist dbpprop:associatedWith ?person
}",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?almaMater ?foundingDate WHERE {
  ?person a dbo:Person;
    dbo:birthName ""Eleonora Menicucci""@en .
  ?person rdfs:seeAlso <http://en.wikipedia.org/wiki/Eleonora_Menicucci> .
  
  ?person2 a dbo:Person;
    dbo:birthName ""Luiza Erundina""@en .
  ?person2 rdfs:seeAlso <http://en.wikipedia.org/wiki/Luiza_Erundina> .
  
  ?almaMater a dbo:UniversityOrCollege .
  ?almaMater rdfs:label ?nameLabel .
  ?almaMater dbo:founded ?foundingDate .
  
  ?person rdf:type dbo:StudentOf ?almaMater .
  ?person2 rdf:type dbo:StudentOf ?almaMater .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?artistLabel ?bandMember
WHERE {
    ?composer ""Wizards of Waverly Place (soundtrack)"".
    ?composer wdt:P31 wd:Q12298 . # Composer is a person, identified by QID 12298
    ?musicalArtist wdt:P31 ?composer. # Musical artist is associated with the composer
    ?musicalArtist rdfs:label ?artistLabel. # Get the label (name) of the musical artist
    ?bandMember a dbo:BandMember; wd:Q? . # Band member of the musical artist
    ?musicalArtist dbo:hasBandMember ?bandMember.
    ?stuartTosh dbo:P31 wd:Q? . # Stuart Tosh identified by QID
    ?associatedArtist wdt:P31 ?composer. # The composer of the soundtrack is also associated with this artist
    ?associatedArtist rdfs:label ?artistLabel. # Get the label (name) of the associated artist
    ?bandMember2 a dbo:BandMember; wd:Q? . # Band member of the associated artist
    ?associatedArtist dbo:hasBandMember ?bandMember2.
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?almaMater
WHERE {
  ?person a dbpedia-owl:Politician ;
            foaf:name ""Eleonora Menicucci""@en .
  ?person rdfs:label ?birthName .
  ?almaMater a owl:University .
  ?person edu:almaMater ?almaMater
}
ORDER BY ?almaMater",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","Given that DBpedia provides structured data about artists, bands, and their associated works, we can construct a SPARQL query to extract the necessary information. Here's how we might structure our query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?artist dbpedia:hasBandMember ?band_member .
  ?band_member foaf:name ""Stuart McBeath Tosh"" .
  ?artist dbpedia:hasWrittenSong ""Wizards of Waverly Place (soundtrack)"" .
}
```

This query does the following:
- `PREFIX dbpedia: <http://dbpedia.org/ontology/>`: Sets the namespace for DBpedia's ontology.
- `SELECT ?artist_name`: We want to select the name of the artist.
- The first `WHERE` clause connects the artist with their band members.
- The second part of the `WHERE` clause filters for band members named ""Stuart McBeath Tosh"".
- The third part of the `WHERE` clause ensures that the artist has written a song for the ""Wizards of Waverly Place"" soundtrack.",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","SELECT ?name ?timeZoneRegion WHERE {
  ?city dbpedia:isPartOf dbpedia:Tokyo .
  ?city rdfs:label ""Mitaka""@en .
  ?city rdfs:isDefinedBy dbpedia:Japan .
  ?city dbo:timezoneOffset dbo:UTC+9
}",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person a dbpedia:OfficeHolder .
  ?parent a dbpedia:Person .
  ?parent ns:fatherOf ?child .
  ?grandparent a dbpedia:Person .
  ?grandparent ns:parentOf ?parent .
  ?child ns:childOf ?grandparent
}
AND ?person ns:childOf ?midParent .",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?place WHERE {
  ?actor a dbpedia-owl:Person;
    dbpedia2:deathPlace ?place .
  ?actor rdfs:label ""Dick Jones""@en .
  ?actor rdfs:label ""Richard Dix""@en .
  FILTER (lang(?actor) = ""en"")
}",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?person
WHERE {
  ?child1 a dbpedia:Person;
           dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person;
           dbpedia:hasChild ?child2 .
  ?child2 a dbpedia:Person;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
            dbpedia:isSpouseOf ?spouse .
  ?spouse a dbpedia:Person;
           dbpedia:hasChild ?child3 .
  ?child3 a dbpedia:Person;
           dbpedia:isDescendantOf ?royaltyGrandchild .
  ?royaltyGrandchild a dbpedia:Person;
                  dbpedia:isRoyalty true
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","SELECT ?individual ?war WHERE {
  ?individual a dbpedia-owl:Person ;
               dbpedia-owl:hasBattleInvolvement [ a dbpedia:War ] .
  ?individual rdfs:label ""Toyotomi Hideyoshi""@ja;
               rdfs:label ""Toyotomi Hideyori""@ja.
  ?individual rdfs:label ""Koichirō""@ja;
               rdfs:label ""Kiyochika""@ja.
  ?war a dbpedia:War ;
         dbpedia:hasParticipant ?individual .
}",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","A SPARQL query to achieve this would involve:
1. Finding the person with the given birth name ""John Boxer"".
2. Identifying their spouse from the same dataset.

Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?spouse
WHERE {
  ?person a dbo:Person;
    rdfs:label ""John Boxer""@en .
  OPTIONAL { 
    ?person rdf:type dbo:Artist . 
    ?person dbo:hasSpouse ?spouse .
  }
}
```

This query searches for a person named ""John Boxer"" and then looks for any spouse associated with that person. The `OPTIONAL` clause allows for flexibility in case the information about John Boxer being an artist is not available.",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?person ?birthplace WHERE {
    ?person a :Person ;
            dcterms:birthDate ""1850-08-05""^^xsd:date ;
            dcterms:deathDate ""1850-08-05""^^xsd:date ;
            :nationality ""American"" ;
            :roleInMilitaryOperation [ a :MilitaryOperation ; 
                                     :awardee ?person ;
                                     :award ""Medal of Honor"" ] .
    ?birthplace a :Settlement .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","SELECT ?predecessor_name ?predecessor_born_year WHERE {
  ?politicianBorn a pol:Politician; 
  dbpprop:birthDate ?politicianBirthYear;
  dbpprop:deathDate ?politicianDeathYear .
  ?politicianBirthYear < 1847.
  
  ?markTournier a dbo:Person; 
  dbpprop:birthPlace ?markBirthPlace .
  ?markBirthPlace a dbo:Settlement; 
  
  ?markDeathPlace a dbo:Place;
    dbpprop:deathDate ?markDeathYear .
  
  ?markDeathYear > 1899.
  
  ?politicianBirthYear < ?markBirthYear.
}",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","The SPARQL query will involve:
1. Fetching settlements in Eastern Europe.
2. Filtering those settlements to find the birthplace of an alumnus of Пловдивски университет „Паисий Хилендарски“.

Here is the constructed SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?alumnus a dbpedia:Alumnus ;
              dbpedia:graduateFrom dbpedia:Plovdiv_University_Paisiy_Hilendarski .
  ?region a dbpedia:Region ;
            dbpedia:locatedIn dbpedia:Eastern_Europe .
  ?birthplace a dbpedia:Place ;
               dbpedia:isPartOf ?region .
}
```

This query does the following:
- Selects the birthplace (`?birthplace`) of any alumnus (`?alumnus`) who graduated from Пловдивски университет „Паисий Хилендарски“.
- Ensures that the alumnus is from a region (`?region`) located in Eastern Europe.
- Filters for places (`?birthplace`) that are part of the identified region.",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?team
WHERE {
  ?person a dbo:SoccerPlayer;
    dbo:playsFor ?team .
  
  ?person a dbo:SoccerManager;
    dbo:managesTeam ?team .

  ?person rdfs:label ?name .
  
  ?name ex:birthdate ""1985-01-01""^^xsd:date . # Marcelo Sarmiento's birthdate as an example
  OPTIONAL { 
    ?person a dbo:Athlete; 
    rdf:type rdf:Birthday ?birthday .
    
    ?birthday a dbo:Date .
    
    FILTER (?birthday = ?name ex:birthdate) 
  }

  ?person a dbo:Actor;
    dbo:roleIn ""All or Nothing: Manchester City"" .
}
```

This query looks for individuals who are both SoccerPlayers and SoccerManagers, and additionally checks if they match the birthdate of Marcelo Sarmiento. It also looks for athletes (specifically those with a Birthday property) matching the same birthdate and checks if they have a role in ""All or Nothing: Manchester City"".",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","SELECT ?artist WHERE {
  ?artist a ns:artist .
  ?artist ns:region ns:CentralRegion .
  ?artist ns:musicDiscography/ns:album The Live Anthology .
  ?artist ns:birthName ?birthName
} 

AND 
{
  ?birthName ns:name ""Pacely""
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?commander ?show ?event WHERE {
  ?commander rdfs:label ""Leopold I""@en .
  ?commander ns:commandedIn <http://dbpedia.org/ontology/battle> [] .
  ?battle rdfs:label ""Battle of Vienna""@en .
  ?show rdfs:label ?show_label .
  ?event rdfs:label ?event_label .
  ?show ns:hasEpisode ?episode .
  ?event a owl:Thing .
  ?episode ns:hasTitle ""George Ducas""@en .
  ?successor rdfs:label ""Joseph I""@en .
  ?successor ns:heldOfficeIn <http://dbpedia.org/ontology/political_office> [] .
  ?battle ns:partOfEvent ?event .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","SELECT ?entity WHERE {
  ?award rdfs:label ""George Hamilton Cameron Award""@en .
  ?party rdfs:label ""Party Name""@en .
  ?residence rdfs:label ""Residence""@en .
  ?savage dbpprop:memberOf ?party .
  ?leader dbpprop:role ""Leader""@en .
  ?award dbpprop:awardedTo ?leader .
  ?residence dbpproc:locatedAt ?party
}",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"SELECT ?grandchildName ?royaltyStatus ?societalEvent ?warEvent ?tvShow
WHERE {
  ?grandchild rdf:type owl:Thing .
  ?grandchild rdfs:label ?grandchildName .
  ?grandchild father ?father .
  ?father a dbpedia-owl:Royalty .
  ?grandchild rdfs:child ?childOfGrandparent .
  ?childOfGrandparent a dbpedia-owl:Person .
  ?childOfGrandparent parent ?parentOfChild .
  ?parentOfChild a dbpedia-owl:Person .
  ?parentOfChild rdfs:label ""Archduke Charles Joseph of Austria"" .
  ?2nd_Dragoon_Regiment a dbpedia:MilitaryUnit .
  ?2nd_Dragoon_Regiment member ?individual .
  ?individual a dbpedia:Person .
  ?individual foaf:partOfEvent ?societalEvent .
  ?individual foaf:partOfEvent ?warEvent .
  ?individual foaf:madeFor ?tvShow
}
LIMIT 1",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?actor WHERE {
  ?actor a :ActorInMovie .
  ?actor ns:parentOf _:child1 .
  _:child1 a :Person; ns:spouse ?spouse_of_mariclare_costello .
  ?spouse_of_mariclare_costello ns:parentOf _:grandchild1 .
  _:grandchild1 a :Person; ns:child ?photographer_child .
  ?actor dwc:deathPlace ""Los Angeles"" .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?parent ?politician ?office_holder ?grandchild_award ?etonn_alumnus
WHERE {
  ?earl_of_derby a pol:Politician; foaf:name ""Edward Stanley, 17th Earl of Derby"".
  ?earl_of_derby rdfs:father ?parent.
  ?parent a foaf:Person; foaf:name ?parent_name.
  
  ?child1 a foaf:Person; foaf:parent ?parent; rdf:type [ a owl:Class ; rdfs:label ""politician"" ] .
  ?child1 rdfs:child ?grandchild.
  ?grandchild a foaf:Person; rdf:type [ a owl:Class ; rdfs:label ""office holder"" ] .
  
  ?grandchild rdfs:child ?great_grandchild.
  ?great_grandchild a foaf:Person; rdf:type [ a owl:Class ; rdfs:label ""Commander of the Royal Victorian Order"" ] .

  ?parent foaf:education [ a owl:Ontology ; owl:onto:ontTerm ""Eton College"" ] .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","SELECT ?person ?role WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  ?person2 a dbpedia:OfficeHolder .
  ?person2 rdf:type dbpedia:MayorOf .
  ?person2 foaf:name ""Mayoral Name""@en .
  ?person2 adminstratesFrom dbpedia:Copenhagen .
  ?person2 adminstratesOver dbpedia:Duchy_of_Sleswig .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"The SPARQL query will involve:
- Finding the producer of ""Storm in a Teacup"".
- Using their birth place to filter for artists (musical works) from that location.

Here is the constructed SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work WHERE {
  ?work a dbpedia:MusicalWork;
    dbpedia:artist [ dbpedia:birthPlace ?birthPlace ].
  ?producer a dbpedia:FilmProducer;
    dbpedia:film ""Storm in a Teacup"".
  ?producer dbpedia:birthPlace ?birthPlace .
  FILTER (xsd:string(?birthPlace) = ""Your Birth Place Here"")
}
```

Replace `""Your Birth Place Here""` with the actual birth place of the producer of ""Storm in a Teacup"".",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?player ?manager 
WHERE {
    ?player dbpprop:birthDate ""1979-11-03"" .
    ?player dbpprop:sport ""soccer"" .
    ?player dbpprop:role ""manager"" .
    FILTER (lang(?player) = ""en"")
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"The SPARQL query will involve using the DBpedia resources for the individuals involved (Jamie McCunnie and David Luckman) and the properties related to their roles in a soccer club. Here is the constructed SPARQL query:

```sparql
SELECT ?club_name ?native_location WHERE {
  ?jamie mccunnie ns:managerOf ?soccer_club .
  ?soccer_club rdfs:label ""Soccer Club"" . # Assuming the club is labeled as a soccer club in DBpedia
  ?soccer_club ns:hasPlayer ?david_luckman .
  ?david_luckman ns:birthLocation ?native_location
}
```

This query searches for:
- A soccer club managed by Jamie McCunnie (`?jamie mccunnie ns:managerOf ?soccer_club`).
- The label of the soccer club (`?soccer_club rdfs:label ""Soccer Club""`), assuming it's labeled as such in DBpedia.
- A player (`?david_luckman`) associated with this soccer club (`?soccer_club ns:hasPlayer ?david_luckman`).
- The native location of this player (`?david_luckman ns:birthLocation ?native_location`).",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?parent WHERE {
  ?child ns:father ?parent .
  ?child a dbpedia-owl:Person ;
           dbpedia2:birthPlace ""Ayrshire, Scotland"" .
  ?parent a dbpedia-owl:Person ;
           dbpedia2:birthPlace ""Ayrshire, Scotland"" .
}",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","SELECT ?producer
WHERE {
  ?actor1 rdfs:label ""John Doe""@en .
  ?movie1 a mo:Movie .
  ?actor2 rdfs:label ""Johnny Doughboy""@en .
  ?workProducedByActor2 a wor:Work .
  ?producer1 mo:producerOf ?movie1 .
  ?producer1 wor:producerOf ?workProducedByActor2
  FILTER (regex(str(?actor1), ""John Doe"") AND regex(str(?actor2), ""Johnny Doughboy""))
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","SELECT ?artist_name
WHERE {
  ?album ""The Live Anthology"".
  ?artist rdfs:label ?artist_name .
  ?artist a :MusicalArtist .
  ?artist ns:birthName ?birth_name .
  ?artist geonames:regionName ""Central Region, Ghana"" .
  ?artist ns:associatedWith ?associated_artist .
  ?associated_artist rdfs:label ""Elorm Kabu Amenyah"" .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","SELECT ?movieAuthor ?artistParent ?location
WHERE {
  ?movie a dbpedia:Film ; dbpedia:instanceOf dbpedia:Television_program .
  ?movieAuthor rdfs:created ?movie .
  ?parent a dbpedia:Person .
  ?parent dbpprop:hasChild ?artist .
  ?artist a dbpedia:Artist .
  ?artist a dbpedia:Musical_artist .
  ?location a dbpedia:Settlement; dbpprop:language ""en"" .
  ?parent dbpprop:hasParent ?location
}
ORDER BY ?movie",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?producer
WHERE {
  ?actor1 rdfs:label ""High Society Blues""@en .
  ?actor2 rdfs:label ""Johnny Doughboy""@en .
  ?movie1 dc:title ""High Society Blues"" .
  ?producer1 rdf:type dc:creator ?movie1 .
  ?actor3 rdfs:label ""Johnny Doughboy""@en .
  ?movie2 dc:title ""Johnny Doughboy"" .
  ?producer2 rdf:type dc:creator ?movie2 .
  ?actor4 rdfs:label ""Kent Allard""@en .
  ?shadow_work dc:title ""The Shadow"" .
  ?producer3 rdf:type dc:creator ?shadow_work
}
ORDER BY ?producer",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","SELECT ?country ?soccer_club_season ?sports_season ?team_season WHERE {
    ?person a dbo:Person ;
            dbpprop:birthDate ""1968-08-26"" ;
            rdfs:label ?name .
    ?person dbo:role dbo:ManagerOf ?soccer_club .
    ?soccer_club a dbo:SoccerClub ;
            rdfs:label ?soccer_club_name .
    ?team_season a dbo:SportsTeamSeason ;
                 rdfs:label ?team_season_name .
    ?sports_season a dbo:SportsSeason ;
                    rdfs:label ?sports_season_name .
    ?soccer_clubSeason a dbo:SoccerClubSeason ;
                    rdfs:label ?soccer_club_season_name ;
                    dbpprop:startYear ""2006"" ;
                    dbpprop:endYear ""2007"" .
    ?person rdfs:label ""Jürgen Klopp"" .
    ?soccer_clubSeason ?team_season .
    ?soccer_clubSeason ?sports_season .
}",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"SELECT ?bandMember WHERE {
  ?artist ns:name ""Nate Newton"" .
  ?artist rdf:type [ rdfs:label ""musician"" ] .
  ?band rdfs:label ""Pantera"" .
  ?band a [ owl:Ontology rdf:resource=""http://www.w3.org/2002/07/owl#""] .
  ?producer ns:name ?producerName .
  ?producer a [ owl:Ontology rdf:resource=""http://www.w3.org/2002/07/owl#""] .
  ?producer rdfs:label ""Rob Zombie"" .
  ?bandMember a [ owl:Ontology rdf:resource=""http://www.w3.org/2002/07/owl#""] .
  ?producer ns:hasMember ?bandMember .
}",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?person WHERE {
  ?person a :Actor; foaf:givenName ""Shirley"" .
  ?person rdfs:label ""Stoler, Shirley"" .
  ?person :profession ""Acting"" .
  ?person :nativePlace ""New York, United States"" .
  ?person :awardedTo ""Award in New York (state)"" .
}",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","SELECT ?commander_name ?television_show ?societal_event ?successor_name ?pac_event ?pac_writer
WHERE {
  ?commander rdf:type dbpedia:Commander.
  ?commander rdfs:label ?commander_name.
  
  ?television_show a dbpedia:Event.
  ?television_show rdfs:label ?television_show_name.
  
  ?societal_event a dbpedia:SocietalEvent.
  ?societal_event rdfs:label ?societal_event_name.

  ?successor rdf:type dbpedia:OfficeHolder.
  ?successor rdfs:label ?successor_name.
  
  ?pac rdfs:label ""Michał Kazimierz Pac"".
  ?pac_event a dbpedia:Event.
  ?pac_event rdfs:label ?pac_event_name.
  
  ?pac_writer rdf:type dbpedia:Writer.
  ?pac_writer rdfs:label ?pac_writer_name.

  ?commander ns:commanded_in ?pac_event.
  ?successor ns:was_succeeded_by ?commander.
  ?television_show ns:features ?pac_event.
  ?societal_event ns:involved_in ?pac_event.
  ?pac_writer ns:author ?pac_event
}
ORDER BY ?commander_name, ?television_show_name, ?societal_event_name",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"To find this information, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardLabel ?place WHERE {
  ?award a dbo:Award ;
            rdfs:label ?awardLabel ;
            dbpprop:isConnectedToCoro de la Pontificia Universidad Católica de Puerto Rico .
  ?award childOf ?person .
  ?person a dbo:Person ;
           foaf:name ""Shirley Stoler"" .
  ?place a dbo:Settlement ;
          rdf:type dbo:AmericanSettlement .
}
```

This query looks for an award connected to the Coro de la Pontificia Universidad Católica de Puerto Rico, finds its child (in this case, Shirley Stoler's offspring), and then selects the place where this award is from, ensuring it is a settlement in America.",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?war ?awardee_name ?awardee_force ?birthplace_entity 
WHERE {
  ?person a dbpedia-owl:Person; dbpedia:name ""Amasa Tracy"" .
  ?event a dbpedia:Event; dbpedia:name ""War of Amasa Tracy"" .
  ?award a dbpedia:Award; dbpedia:awardedTo ?awardee_name; dbpedia:awardedFor ?war .
  ?awardee_name a dbpedia:Person; dbpedia:birthPlace ?birthplace .
  ?birthplace a dbpedia:Settlement; rdfs:label ""American"" .
  ?person dcterms:deathDate ""1850-08-05""^^xsd:date .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?awardee_name ?awardee_birthplace ?actor_name ?actor_birthplace
WHERE {
  ?awardee a s:Person;
  dcterms:hasAwards [ a ns:Dataset ; ns:hasMember ?award ];
  ns:sangeetNatakAkademiFellowship ?award .
  ?actor a s:Person;
  foaf:role [ a ns:CreativeWork ; dc:title ""Chokher Bali"" ].
  ?actor ns:birthPlace ?actor_birthplace .
  ?awardee ns:birthPlace ?awardee_birthplace
}
LIMIT 2",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"SELECT ?nickname ?player
WHERE {
  ?country ns:nationalTeamNickname ""Russia"".
  ?player rdfs:label ?playerLabel .
  ?work rdfs:author ?writer .
  ?writer ns:hasWork ?workTitle .
  ?workTitle a nfo:Work .
  ?player ns:participantIn ?work
}
WHERE {
  ?playerLabel contains ""Filimonov, Aleksandr""
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","SELECT ?alterEgo WHERE {
  ?alterEgo a :ALTER_EGO_OF ?lamontCranston .
  ?lamontCranston a :CHILD_OF ?yeshaqI .
  ?yeshaqI a :PARENT_OF ?baedaMaryamI .
  ?baedaMaryamI a :PARENT_OF ?questionSubject .
  ?questionSubject a :ROYALTY .
  ?questionSubject a :OFFICE_HOLDER
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","SELECT ?leader ?country
WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@es .
  ?party dbo:political_party_has_leader ?leader .
  ?leader foaf:name ?name .
  ?leader ns:nationality ""Spanish""@en .
  ?office dbpedia-owl:has_political_office_member ?officeMember .
  ?officeMember foaf:name ""Alberto Núñez Feijóo""@es .
  ?officeMember dbo:country_of_residence ?country
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child_name ?royalty WHERE {
  ?child_name a dbpedia-owl:Person ;
               dbpedia2:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
            dbpedia2:hasChild ?child_name ;
            rdfs:label ""Peter IV of Aragon""@en .
  ?child_name a dbpedia-owl:Royalty .
  FILTER (lang(?child_name) = ""en"") 
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?subject ?property ?object WHERE {
  ?subject a dbpedia:War.
  ?subject rdfs:label ""War of the Spanish Succession"" .
  ?subject fightingFor dbpedia:Portugal .

  ?subject a dbpedia:Television_Series .
  ?subject rdfs:label ""The Tudors"" .

  ?subject a dbpedia:Country .
  ?subject rdfs:label ""Portugal"" .

  ?object a dbpedia:Residence .
  ?object rdfs:label ""Łódź"" .
  ?object ns:Polska .

  ?object a dbpedia:Athlete .
  ?object rdfs:label ""Polish athlete"" .
}",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","SELECT ?territory WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Tønder, Denmark"";
    dbpedia:mayorOf ?town;
    dbpedia:royaltyStatus ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"".
  ?town rdfs:label ?territory.
  ?town dbpedia:isPartOf dbpedia:Schleswig
}",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?leader ?office ?party WHERE {
  ?politician a pol:Politician; foaf:name ""Miguel Maura"" .
  ?politician rdfs:member [ a owl:Ontology ; owl:class ""owl:PoliticalParty"" ] .
  ?party a pol:PoliticalParty; foaf:name ?party_name .
  ?leader a person:Person; foaf:name ?leader_name .
  ?leader pfo:officeHolder ?office .
  ?office a dbo:Office .
  ?office rdfs:label ?office_label .
  ?party rdfs:member ?leader .
  ?party_name ns:name ?party_name .
  [ a dbpedia-owl:AngolaFaction; dbpedia-owl:war ""Angolan War of Independence"" ] .
  ?leader ns:facts ?facts .
  FILTER (STRSTARTS (?facts, ""foaf:"") || STRSTARTS (?facts, ""pfo:""))
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?show ?awardee ?awardee_birthday ?awardee_japan WHERE {
  ?awardee a dbpedia-owl:Person ;
    rdfs:label ?awardee_label .
  ?awardee jis:birthPlace ?birthplace .
  ?birthplace geo:location ?location .
  ?location rdfs:label ""Japan Standard Time"" .
  ?show rdfs:label ?show_label ;
    dbpprop:award ""Anita Borg Institute Women of Vision Awards"" .
  ?awardee ns:creator ?show .
}",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"To find this information, we need to query the DBpedia dataset for movies produced by Linda Bruckheimer and check if any of these movies are related to Ian Gregson. Here's a SPARQL query that attempts to find such a movie:

```sparql
SELECT ?movie 
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:producer [ dbpedia:name ""Linda Bruckheimer"" ] .
  OPTIONAL { ?movie dbpedia:starring [ a owl:Thing; rdfs:label ""Ian Gregson""@en ] }
}
```

This query searches for films produced by Linda Bruckheimer (`dbpedia:producer [ dbpedia:name ""Linda Bruckheimer"" ]`) and checks if any of these films feature Ian Gregson (`OPTIONAL { ?movie dbpedia:starring [ a owl:Thing; rdfs:label ""Ian Gregson""@en ] }`). The `@en` label is used to ensure the label matches in English.",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","The SPARQL query will look for the band associated with the fictional character ""The Shadow"" (in the context of comics). Here is the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?character a dbpedia-owl:FictionalCharacter ;
               rdfs:label ""The Shadow""@en .
  ?character dbpedia-owl:portrayedBy ?person .
  ?person a dbpedia-owl:Person ;
            rdfs:familyName ""Thompson"" ;
            foaf:name ""Robert Lamar Thompson""@en .
  ?band a dbpedia-owl:MusicBand .
  ?band rdfs:label ?bandLabel .
}
```

This query selects the band (`?band`) associated with the fictional character ""The Shadow"", ensuring that Robert Lamar Thompson portrays The Shadow and that the band is a MusicBand as defined in DBpedia's ontology.",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?person ?band_name ?associated_artist
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person foaf:birthDate ""1945-03-30"" .
  ?person rdfs:label ?name .
  ?name string-match ""Nick Curran"" .
  ?person dbpprop:bandMemberOf ?band .
  ?band a dbpedia:Band .
  ?band rdfs:label ?band_name .
  ?associated_artist a dbpedia:MusicalArtist .
  ?associated_artist foaf:name ?associated_artist_name .
  ?associated_artist rdfs:label ""The Fabulous Thunderbirds"" .
}
ORDER BY ?name",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"The SPARQL query to achieve this would involve querying the DBpedia dataset for the relevant information. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?producer ?band ?band_members WHERE {
  ?song ""Lotus"" .
  ?song rdfs:artist ?producer .
  ?producer a dbpedia-owl:MusicProducer .
  ?producer dbpedia-owl:belongsToOrganization ?organization .
  ?organization a dbpedia-owl:BandOrGroup .
  ?organization rdfs:label ?band_name .
  ?writer a dbpedia-owl:MusicArtist .
  ?album a dbpedia-owl:Album .
  ?album rdfs:artist ?writer .
  ?song rdfs:isPartOf ?album
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?awardee1 ?war1 ?birth_place
WHERE {
  ?awardee1 rdfs:label ""Golden Sword for Bravery award"" .
  ?awardee2 rdfs:label ""25th Golden Sword for Bravery award"" .
  ?awardee1 ns:award_winner ?awardee2 .
  ?awardee2 foaf:birthPlace ?birth_place
}
LIMIT 2",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"SELECT ?actor WHERE {
  ?actor ns:film/ns:role ?role .
  ?role a ns:film/ns:movie .
  ?role ns:book/ns:author ""Marc Cooper"" .
}

This query looks for an actor who has played a role in a movie adaptation of a book written by Marc Cooper.",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","SELECT ?parent
WHERE {
  ?child a :politician .
  ?child a :officer .
  ?child :father ?parent .
  ?child :alumniOf ""Eton College"" .
  ?child rdfs:label ""Rodney Lees Jr."" .
  ?parent rdfs:label ""George Geoffrey Geoffrey Smith Stanley, 16th Earl of Derby"" .
}",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"SELECT ?residence WHERE {
  ?leader1 rdfs:label ""Madrid City Council election leader in 2003"" .
  ?commander rdfs:label ""Commander in Central African Republic Civil War"" .
  ?miguel_maura rdfs:label ""Miguel Maura"" .
  ?leader1 foaf:residence ?residence .
  ?commander foaf:office ?office .
  ?office rdf:type owl:Class.
  ?office rdfs:label ""Commander in Central African Republic Civil War"" .
  ?miguel_maura ns:partyLeaderOf ?party .
  ?party rdfs:label ""Political party of Miguel Maura""
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","SELECT ?person
WHERE {
  ?person a :royalty .
  ?person a :office_holder .
  ?parent a :child_of ?grandparent .
  ?grandparent a :child_of ?greatGrandparent .
  ?greatGrandparent a :spouse_of ?ancestor .
  ?ancestor a :child_of ?parentOfAncestor .
  ?parentOfAncestor a :child_of ?constanceBurgundy
}",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"SELECT ?residence ?leaderOffice ?event WHERE {
  ?citizen ns:nationality ns:Spanish .
  ?residence rdfs:label ""Spain"" .
  ?leaderOffice a ns:Office .
  ?event a ns:Event .
  ?citizen ns:hasCitizenship [ ns:belongsTo ?residence ] .
  ?residence ns:locatedIn ?country .
  ?country ns:name ""Spain"" .
  ?leaderOffice ns:heldBy ?citizen .
  ?event ns:participatedIn ?quintana .
  ?quintana a ns:Person ;
               ns:hasName ""Anxo Quintana"" .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"SELECT ?artist WHERE {
  ?person a dbpedia:Person;
  dbpedia:birth_name ""Pacely"" .
  ?person a dbpedia:Musician; 
  dbpedia:associatedBandOrArtist ?artist .
  ?person rdfs:label ""Joey B""@en .
  ?person rdfs:label ""Rod Argent""@en .
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"SELECT ?location WHERE {
  ?award a :Region ;
            a :AmericanState ;
            a :Settlement .
  ?award ns:inScheme dbpedia-owl:Scheme.
  ?award ns:hasName ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?artist a :MusicalArtist;
           a :Artist .
  ?bandMember a :Person;
            a :Musician .
  ?bandMember ns:inScheme dbpedia-owl:Scheme.
  ?bandMember ns:hasName ""Ackquille Jean Pollard"" . # Bobby Shmurda's full name
  ?artist ns:hasBandMember ?bandMember .
  ?artist ns:inScheme dbpedia-owl:Scheme;
           a :MusicArtist .
  ?artist ns:hasName ""GS9"" .
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"Due to the inconsistencies and fictional nature of the query's requirements, crafting a SPARQL query that accurately reflects this scenario is not feasible with real-world data. The described conditions do not align with known facts about actors, roles, and productions.",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?place WHERE {
  ?awardee a ns:Person;
    ns:actor ?mother;
    ns:birthPlace ?place;
    ns:residence ?place .
  ?mother a ns:Person;
    ns:occupation ""Actress"";
    ns:state ""New York"" .
  ?awardee ns:nationality ""American"" .
}",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?place WHERE {
  ?person1 a :DEATH_PLACE ; rdfs:label ?death_place1 .
  ?person2 a :DEATH_PLACE ; rdfs:label ?death_place2 .
  ?death_place1 ns:instance ?settlement .
  ?death_place2 ns:instance ?settlement .
  ?settlement rdfs:label ?common_name .
  ?common_name ns:prefLabel ""Some Settlement"" . 
  ?common_place a :SETTLEMENT ; foaf:name ?common_name .
  ?Ephialitis a :LEADER_OF ; foaf:name ""Ephialtes"" .
  ?common_place ns:P31 ?person1 .
  ?common_place ns:P31 ?person2
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","SELECT ?person ?birthplace
WHERE {
    ?person a dbpedia-owl:Person ;
            dbpprop:awardedMedalOfHonor true ;
            dbpprop:awardedGillmoreMedal true .
    ?person wdt:P31 wd:Q12297.
    ?person rdfs:isMemberOf dbpprop:UnitedStatesMilitaryForces .
    ?birthplace a dbo:Settlement ;
             dcterms:locatedIn [ a dcterms:Location ; owl:sameAs ?country ]
    FILTER (STR(?deathDate) = ""1850-08-05"")
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","Due to the insufficient and ambiguous information provided in the question, constructing a precise SPARQL query is not feasible without further clarification or additional data.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate;
    dbpedia:role dbpedia:Musician ;
    dbpedia:associatedBandMember ?band .
  ?band a dbpedia:Band;
    rdfs:label ""The Alan Parsons Project""@en .
  ?writer a dbpedia:Person;
    dbpedia:role dbpedia:Artist ;
    dbpedia:birthDate ?birthdate_writer;
    dbpedia:work dbpedia:Wizards_of_Waverly_Place_Soundtrack@en .
  ?artist1 foaf:knows ?person;
    rdfs:label ""Stuart McBeath Tosh""@en .
  ?artist2 a dbpedia:Musician;
    rdfs:label ?musical_artist_label .
  ?writer rdfs:seeAlso ?artist2 .",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"SELECT ?birthplace1 WHERE {
  ?artist1 a ns:artist .
  ?artist1 ns:hasWork ""The Miseducation of Lauryn Hill"" .
  ?artist1 ns:birthPlace ?birthplace1
}

AND
SELECT ?birthplace2 WHERE {
  ?artist2 a ns:musicalArtist .
  ?artist2 ns:hasWork ""Ethan Iverson"" .
  ?artist2 ns:birthPlace ?birthplace2
}",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","SELECT ?actor ?tv_show ?comics_character WHERE {
  ?actor rdfs:label ""Richard Grant Esterhuysen""@en .
  ?actor xfr:roleIn ?tv_show .
  ?tv_show rdf:type skos:Concept .
  ?tv_show dc:subject [ owl:sameAs ?comics_character ] .
  ?actor rdfs:label ""The Shadow""@en .
  ?actor xfr:roleIn [ a xfr:VideoGame; rdfs:label ""The Shadow""@en ] .
}",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","SELECT ?territory
WHERE {
  ?person a :Person;
    :deathPlace [ geo:locatedIn geo:Point ?d] .
  ?person a :Royal; # Assuming there's a property for royals
    :birthPlace [ geo:locatedIn geo:Point ?b] .
  ?administration a :Administration;
    :headquarter [ geo:locatedIn geo:Point ?hq] .
  ?adminGraph a :GraphOfAdmins;
    :hasAdministrator ?administration ;
    :includesPerson ?person .
  ?hq ns:locatedIn ?territory .
  ?person rdfs:label ""Christian Ditlev Ammentorp Hansen"" .
  ?administration rdfs:label ""Olaf I of Denmark"" .
  ?person2 a :Royalty; # Prince Christian of Schleswig-Holstein-Sonderburg-Beck
    rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  ?person2 ns:parent ?person
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","SELECT ?producer1 ?producer2
WHERE {
    ?film A ns:film#directedBy ?producer1 .
    ?actor ns:role/ns:portrayedBy ?character .
    ?character a ns:fictionalCharacter .
    ?work A ns:film#producedBy ?producer2 .
    ?work ns:hasActor ?actor .
    ?actor ns:role/ns:portrayedBy ?character
}
ORDER BY ?producer1, ?producer2",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"SELECT ?leader_name ?office
WHERE {
  ?politician Miguel Maura .
  ?politician a :PoliticalParty .
  ?partyLeader a :OfficeHolder .
  ?partyLeader a :Politician .
  ?centralAfricanWarCommander a :OfficeHolder .
  ?centralAfricanWarCommander a :Politician .
  ?centralAfricanWarCommander rdfs:label ""Central African Republic Civil War"" .
  ?leader_of_party :name ?leader_name .
  ?party :leader ?leader_of_party .
  ?warCommander :office ?office
}
ORDER BY ?office",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","SELECT ?manager_name
WHERE {
    ?person a dbpedia:SportsManager;
        dbpprop:birthDate ""1968-08-26"".
    ?person ns:nationality dbpedia:Germany.
    ?person rdfs:label ""West Germany"".
    ?team a dbpedia:SoccerClub;
        dbpprop:season ""2006-07 VfL Bochum season"".
    ?manager ?manager_name .
    ?player a dbpedia:SportsTeam, dbpedia:Organization, dbpedia:SoccerClub;
        dbpprop:managedBy ?manager.
    ?successorSeason a dbpedia:FootballLeagueSeason;
        dbpprop:succeededBy ""2006-07 VfL Bochum season"".
    ?successorSeason rdfs:label ""Successor Season"".
}",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"SELECT ?person WHERE {
  ?person a dbpedia:Actor .
  ?person rdfs:label ""The Shadow""@en .
  ?person dbo:workedWithCoraSueCollins .
  ?person rdfs:label ""High Society Blues""@en .
  ?person dbo:producedClaimToFameInFilm
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","SELECT ?actor
WHERE {
  ?work a dbpedia:Album .
  ?film a dbpedia:Film .
  ?work rdfs:label ""Lasso the Moon"" .
  ?film rdfs:label ""Lasso the Moon"" .
  ?actor dbpprop:profession ""Actor"" .
  ?actor foaf:name ?actorName .
  ?work dbpprop:artist ?artistName .
  ?artistName a dbpedia:Person ;
               dbpprop:profession ""Musician"" .
  ?film dbpprop:actor ?actorName .
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","SELECT ?commander WHERE {
  ?battle a ns:fbt#Battle ;
            ns:participatedIn ?war .
  ?war a ns:fbt#War ;
           ns:name ""Napoleonic Wars"" .
  ?commander ns:commanded ?battle .
  ?commander ns:hasName ""John Jervis"" .
  ?battle ns:location ""Cape Finisterre"" .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"SELECT ?place WHERE {
  ?person a dbpedia:Artist.
  ?person rdfs:label ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?place .
} UNION {
  SELECT ?institution WHERE {
    ?politician a dbpedia:Politician.
    ?politician rdfs:label ""Brian Kemp""@en .
    ?politician foaf:officeHolder ?institution .
  }
}",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","SELECT ?band_name WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ?birth_date;
    dbpedia:role dbpedia:Musician;
    dbpedia:bandMemberOf ?band.
  ?person2 a dbpedia:Person;
    dbpedia:name ""David Paton"";
    dbpedia:role dbpedia:Musician.
  ?person3 a dbpedia:Person;
    dbpedia:name ""Billy Lyall"";
    dbpedia:role dbpedia:Musician.
  ?band_name rdfs:label ?band_label.
  ?person1 dbpedia:bandMemberOf ?band_name.
  ?person2 dbpedia:bandMemberOf ?band_name.
  ?person3 dbpedia:bandMemberOf ?band_name.
}",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"SELECT ?warCommander
WHERE {
  ?tv_show rdf:type dbpedia-owl:TelevisionShow.
  ?tv_show rdfs:label ""Military Conflict Show Name"".
  ?militaryConflict a dbpedia-owl:MilitaryConflict.
  ?militaryConflict foaf:isPrimaryTopicOf ?tv_show .
  ?actor foaf:name ""Dawid Olejniczak"".
  ?actor dwc:residence ?country .
  ?country a dwc:Country
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty ;
         dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Royalty
}

AND {
  ?parent dbpedia:spouseOf [ a dbpedia:Person; rdfs:label ""Philip I, Prince of Taranto"" ] .
  FILTER(STRSTARTS(?parent, ""Béla IV of Hungary""))
}

AND {
  ?grandchild dbpedia:hasParent [ a dbpedia:Person; rdfs:label ""Maria of Bytom"" ] .
  FILTER(STRSTARTS(?grandchild, ""Child_2"") OR STRSTARTS(?grandchild, ""Child_3""))
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"SELECT ?child WHERE {
  ?child a ns:Person ;
           ns:parent [ ns:spouse ?spouse ] ;
           ns:parent [ a ns:Royalty ] .
  ?spouse ns:name ""Min Hla Htut"" .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","To find the specific show featuring Anumta Qureshi and centered on Lahore, we would need to query DBpedia for information related to Anumta Qureshi and Lahore. Here is a SPARQL query that could be used:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?show 
WHERE {
  ?person a dbo:Person ;
            dbo:nationality ""Pakistani"" ;
            dbo:birthPlace ?place .
  ?place rdfs:label ""The Heart of Pakistan"" | ""Paris of the East"" | ""City of Gardens"" | ""City of Literature"" .
  ?show a dbo:TelevisionShow ;
         dbo:mainParticipant ?person .
}
```

This query looks for a person (identified by their nationality as Pakistani) born in a place labeled with one of the given epithets for Lahore, and then finds any television shows that have this person as a main participant.",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasChild ?child;
    dbpedia:hasParent ?parent .
  ?child a dbpedia:Person;
    dbpedia:name ""Catherine of Austria, Queen of Portugal"" .
  ?parent a dbpedia:Royalty;
    dbpedia:participatedInEvent dbpedia:Siege_of_Padua .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","SELECT ?person WHERE {
  ?grandchild a ns:Person ;
               ns:hasParent ?childOfPhilippAlbrecht ;
               ns:hasChild ?greatGrandchild .
  ?greatGrandchild a ns:Person ; # Assuming royalty is defined as having a Person type
               ns:hasParent ?childOfPhilippAlbrecht .
  FILTER (xsd:string(?greatGrandchild) != """") # Ensure we get names rather than IDs
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"SELECT ?person ?birthplace ?deathplace WHERE {
    ?person a dbpedia-owl:Person.
    ?person rdfs:label ""Sandro Bertaggia""@it.
    ?person dbpprop:birthPlace ?birthplace.
    ?person dbpprop:deathPlace ?deathplace.
    ?birthplace a dbpedia-owl:Location.
    ?deathplace a dbpedia-owl:Location.
    FILTER (lang(?person) = ""it"" )  # Ensure it's the Italian label for Sandro Bertaggia
} 

AND {
    ?person a dbpprop:Monarch.
    ?person rdfs:label ""Nicholas II of Russia""@en.
    ?person dbpprop:nationality ?country_of_administration.
    ?country_of_administration a dbpedia-owl:Country.
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"SELECT ?child WHERE {
  ?child a ns:Person ;
           ns:hasParent ?father ;
           ns:hasChild ?royalty_child .
  ?father a ns:Person ;
          ns:hasName ""Peter IV of Aragon"" .
  ?royalty_child a ns:Person ;
               ns:hasName ?royalty_name .
  FILTER (str(?royalty_name) = ""Peter III of Aragon"")
}",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","SELECT ?person
WHERE {
  ?person a dbpedia:Royalty .
  ?person a dbpedia:OfficeHolder .
  ?child_of_alfonso_vi a dbpedia:ChildOf ?person .
  ?father_of_william1 a dbpedia:FatherOf ?child_of_alfonso_vi .
  ?parent_roger_a_duke a dbpedia:ParentOf ?child_of_alfonso_vi .
  ?child_of_alfonso_vi a dbpedia:ChildOf ?parent_roger_a_duke
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?person WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Robert Lamar Thompson""@en .
  ?person rdfs:label ""Rico J. Puno""@en .
  ?person dbpprop:producerOf dbpedia:Event[dbo:hasTitle ""Coke Studio Philippines""] .
  ?person foaf:alterEgo ""The Shadow"" .
}",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?bandmember ?fabthunderbirds_bandname ?associated_artist
WHERE {
  ?bandmember a dbpedia:Musician;
  dbpedia2:realName ""Eric Clapton"";
  dbpedia:bandMemberOf ?clapton_band .
  ?clapton_band a dbpedia:Band ;
    dbpedia2:name ""Derek and the Dominos"" .
  ?fabthunderbirds_bandname a dbpedia:Band ;
    dbpedia2:name ""The Fabulous Thunderbirds"" .
  ?associated_artist a dbpedia:Musician;
    foaf:knows ?bandmember .
  OPTIONAL { ?associated_artist rdfs:label ?label }
}
LIMIT 1",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?leader ?event ?administration ?party ?residence WHERE {
  ?leader rdfs:label ""Anxo Quintana""@es.
  ?event rdfs:label ""Event""@en.
  ?administration ns:adminStrat ""?administration"" .
  ?administration ns:country ""Spain"" .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@es.
  ?residence rdfs:label ""Portugal""@en.
  ?leader ns:officeInRole ?event .
  ?administration ns:ledBy ?leader .
  ?leader ns:memberOf ?party .
  ?residence ns:locatedIn ?administration
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?author
WHERE {
  ?work a :written_work .
  ?work rdfs:label ""The President is Missing"" .
  ?author a :politician .
  ?author a :office_holder .
  ?author a :military_officer .
  ?author rdf:type :MajorGeneral .
  ?author ns:serveIn :NorthCarolina_Air_National_Guard .
  ?work ns:writtenBy ?author
}",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","SELECT ?person
WHERE {
  ?person a ns:Person ;
            ns:givenName ?givenName ;
            ns:surname ?surname .
  ?person ns:birthPlace ""Athens"" .
  ?person ns:partyMemberOf ns:NationalPartyOfGreece .
  ?event a ns:Event ;
            ns:name ""War of Greece"" .
  ?person ns:roleInEvent ?event .
  FILTER (STR(?givenName) = ""Ioannis"" AND STR(?surname) = ""Metaxas"") .
  BIND (xsd:integer(?event) AS ?awardee_number) .
  ?awardee_number = 30
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?royaltySpouse
WHERE {
    ?child a :royalty .
    ?child a :spouse ?royaltySpouse .
    ?saw_shwe_khet a :parent ?min_hla_htut .
    ?min_hla_htut a :parent ?child_of_min_hla_htut .
    ?child_of_min_hla_htut a :child ?child .
    ?child a :royalty .
    ?child a :predecessor [ owl:inverseOf :successor ] ?grandchild .
    ?child_of_saw_shwe_khet a :child ?grandchild .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"SELECT ?actor
WHERE {
  ?actor a :Actor;
  :role_in_Rustlers_Rhapsody ""Rusty"";
  :role_as_The_Shadow ?shadow_role;
  :profession_as_Frédéric_Bouraly ?bouraly_profession.
}
AND ?actor ns:name ""Bill Murray""",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"SELECT ?subject ?property ?object
WHERE {
  ?subject a dbpedia-owl:Television_Series ;
            rdfs:label ""Always the Love Songs"" .
  ?subject ns:creator ?writer .
  
  ?subject a dbpedia-owl:Event ;
            rdfs:label ""Battle of Vienna"" .
  ?subject ns:commanderIn ?commander .
  ?commander a dbpedia:Historical_person;
           rdfs:label ""John III Sobieski""@en .
  ?commander ns:succeededBy ?succeeded .

  ?succeeded a dbpedia:Monarch ;
            rdfs:label ""Augustus II the Strong""@en .
  
  ?subject a dbpedia:Event ;
            rdfs:label ""Russo-Polish War (1654–1667)"" .
  ?subject ns:commanderIn ?russian_commander .
  ?russian_commander a dbpedia:Historical_person;
                rdfs:label ""Tsar Alexis I of Russia""@en .
  ?russian_commander ns:succeededBy ?succeeded_russian .
  
  ?succeeded_russian a dbpedia:Monarch ;
                  rdfs:label ""Tsar Feodor I of Russia""@en .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"SELECT ?tenant WHERE {
  ?citizen a :spanishCitizen .
  :citizen :nationality :Spanish .
  :countryOfResidence a :Country .
  ?leader a :PoliticalLeader .
  ?leader :office :PrimeMinisterOfSpain .
  ?event a :Event .
  ?leader :participatedIn ?event
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"The SPARQL query will involve traversing these relationships and filtering for individuals who are marked as royalty. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty WHERE {
  ?child myat-hpone-pyo a :Child .
  ?parent1 rdfs:father ?child .
  ?parent2 rdfs:parent ?parent1 .
  ?grandparent rdfs:parent ?parent2 .
  ?royalty a :Royalty .
  ?grandparent myat-hpone-pyo a :Royalty .
}
```

This query starts by selecting the child of Myat Hpone Pyo (`?child myat-hpone-pyo a :Child`). It then traces back through the parents (`?parent1 rdfs:father ?child`) and grandparents (`?grandparent rdfs:parent ?parent1`) until it finds an individual marked as royalty (`?royalty a :Royalty`). The final condition ensures that the royalty is also a parent of Myat Hpone Pyo, to confirm the lineage.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?author ?commander_disease_event ?arcadia_owner ?spouse ?politician_office_holder ?book_and_written_work ?hillary_clinton_association
WHERE {
  ?author rdfs:label ""Hillary Clinton""@en .
  ?book_and_written_work a book .
  ?book_and_written_work rdfs:label ""Back to Work""@en .
  ?author ns:author ?book_and_written_work .
  ?arcadia_owner ns:owns ?arcadia .
  ?spouse a foaf:Person .
  ?spouse ns:wife ?author .
  ?politician_office_holder a politician .
  ?politician_office_holder officeHolder .
  ?hillary_clinton_association a dbpedia-owl:PoliticalPartyMember .
  ?author rdfs:label ""Hillary Clinton""@en .
  ?commander rdfs:label ""Disease"" . # This is a placeholder for the disease or event
  ?commander rdfs:label ""Societal Event"" . # This is a placeholder for the societal event
  FILTER (str(?author) = ""Hillary Clinton"") .
  FILTER (str(?politician_office_holder) = ""Hillary Clinton"") .
  BIND (str(?arcadia_owner) as ?arcadia_id) .
  BIND (str(?spouse) as ?spouse_name)
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"SELECT ?person WHERE {
  ?child1 a dbpedia:Royalty .
  ?child1 ns:childOf ?parent1 .
  ?parent1 a dbpedia:Person .
  ?child2 a dbpedia:Royalty .
  ?child2 ns:childOf ?grandparent2 .
  ?grandparent2 a dbpedia:Person .
  ?child1 ns:sibling ?child2 .
  ?child2 ns:parent ?spouse .
  ?spouse a dbpedia:Person
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","SELECT ?almaMater
WHERE {
  ?recipient laureateFellowship ""Australian Laureate Fellowship"" .
  ?recipient hasExpertise ""Scientist"" .
  ?recipient almaMater ?almaMater .
  ?almaMater rdfs:label ""Vijayawada, Andhra Pradesh, India"" .
}",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?place WHERE {
  ?actor a ns:film.actor .
  ?actor ns:role ?role_in_film .
  ?role_in_film rdfs:label ""The Sky Ranger (1928 film)"" .
  OR ?actor a ns:film.actor .
  ?actor ns:role ?role_in_film .
  ?role_in_film rdfs:label ""Color Me Dead"" .
  ?actor deathPlace ?deathPlace
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?actor ?actorLabel ?movie WHERE {
  ?actor a dbpedia:Person;
    dbpprop:deathPlace ""Los Angeles, California"";
    rdfs:label ?actorLabel .
  ?actor dbpprop:roleInFilm ?role .
  ?role a dbpedia:Event;
    dbpprop:productionCompany ""Eugène Cattin"" .
  ?actor ns:parent ?parent .
  ?parent a dbpedia:Person;
     rdfs:label ""Doon Arbus"" .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?father
WHERE {
    ?politician a eg:alumnusOf eg:EtonCollege .
    ?politician a foaf:Person .
    ?politician rdfs:father ?father .
    ?earl_of_derby eg:hasChild ?child .
    ?child a foaf:Person .
    ?child eg:parent ?father .
    ?child rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person WHERE {
  ?child a dbpedia:Royalty ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Royalty ;
           dbpedia:hasParent Ferdinand_Altbert_II,_Duke_of_Brunswick-Lueneburg .
  ?child_spouse a dbpedia:Person ;
             dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
            dbpedia:hasSpouse ?grandspouse .
  ?grandspouse a dbpedia:Person ;
               dbpedia:hasParent Luise_of_Brunswick-Wolfenbuettel .
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?grandchild
WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:hasFather ?child ;
               dbpedia:parent ?royaltyParent .
  ?child a dbpedia:Person ;
          dbpedia:hasParent ?commander ;
          dbpedia:isRoyalty true .
  ?commander a dbpedia:Person ;
           dbpedia:hasParent ?maryamI ;
           dbpedia:isRoyalty true .
  ?maryamI a dbpedia:Person ;
            dbpedia:hasChild ?childOfMaryamI .
}
LIMIT 1",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"SELECT ?child_name
WHERE {
  ?child_name a dbpedia:Person ;
               dbpedia2:has_father dbpedia:Allan_Arbus ;
               dbpedia2:profession dbpedia:Actor ;
               dbpedia2:acted_in_movie_with dbpedia:Herschel_Bernardi .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?author ?authorLabel ?spouse ?spouseLabel WHERE {
  ?author ns:isAuthorOf ""An Invitation to the White House"".
  ?author ns:isAuthorOf ""United States Navy"".
  ?author rdf:type dbo:OfficeHolder.
  ?author ns:hasSpouse ?spouse.
  ?spouse a dbo:Person.
  ?spouse rdf:type dbo:Spouse .
  ?author ns:commandedIn ?war.
  ?war a dbo:DiseaseAndSocietalEvent.
  ?author ns:residesIn ""Chappaqua, New York"".
}",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer1 ?movie WHERE {
  ?actor dbo:role ""Johnny Doughboy"" IN ?movie .
  ?movie rdfs:label ?movie_label .
  ?producer1 dbpprop:producerOf ?movie .
  FILTER (regex(str(?movie_label), ""Janet Gaynor"")) 
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?place WHERE {
    ?actor a dbpedia:Person;
        dbpedia2:deathPlace ?place .
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?royalty
WHERE {
  ?child1 a dbpedia:Royalty;
         dbpedia2:parent [ dbpedia2:familyMember ?parentOfChild1 ] .
  ?parentOfChild1 a dbpedia:Person;
                 dbpedia2:parent [ a dbpedia:Person; rdfs:label ""Stephen I of Hungary"" ] .
  ?child2 a dbpedia:Royalty;
          dbpedia2:parent [ dbpedia2:familyMember ?parentOfChild2 ] .
  ?parentOfChild2 a dbpedia:Person;
                 dbpedia2:parent [ a dbpedia:Person; rdfs:label ""Nicholas I of Romania"" ] .
  ?child3 a dbpedia:Person;
            dbpedia2:parent [ a dbpedia:Person; rdfs:label ""Raymond VI, Count of Toulouse"" ] .
  ?child1 ns:childOf ?child2.
  ?child2 ns:childOf ?child3.
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?author ?spouse_political_role ?war_commander ?ship_owner
WHERE {
  ?work a dbo:WrittenWork ;
            rdfs:author [dbo:hasName ?author] .
  ?author a dbo:Person ;
           dbo:isSpouseOf [dbo:hasName ?spouse_political_role] .
  ?spouse_political_role a dbo:OfficeHolder ;
                       dbo:isPolitician true .
  ?war a dbo:SocietalEvent ;
         dbo:hasWarComander ?war_commander .
  ?ship a dbo:Ship ;
           rdfs:owner [dbo:hasName ?ship_owner] .
  ?work rdf:type [dbo:hasType ""Book""] .
  ?author rdf:type [dbo:hasRole ""Author""] .
  ?war a dbo:MilitaryConflict ;
        dbo:conflict ""Gulf War"" .
  ?ship_id dbo:id ""ID-1605"" .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"SELECT ?administration_of_christian_nine ?territory_administration_of_hansen ?mayor_of_duchy_of_schleswig
WHERE {
  ?christian_nine a dbpedia:Monarch;
    rdfs:label ""Christian IX of Denmark""@en.
  ?administration_of_christian_nine a dbpedia:Political/administrative_organisation .
  ?hansen a dbpedia:Person;
    rdfs:label ""Christian Ditlev Ammentorp Hansen""@en.
  ?death_place_of_hansen a dbpedia:Spatial_entity;
    rdfs:label ""Frederiksberg""@en.
  ?mayor_of_duchy_of_schleswig a dbpedia:OfficeHolder;
    rdfs:label ""Mayor of Duchy of Schleswig""@en.
  ?administration_of_christian_nine ?hasAdminOver ?hansen .
  ?hansen dwbp:residence ?death_place_of_hansen .
  ?mayor_of_duchy_of_schleswig a dbpedia:OfficeHolder;
    rdfs:label ""Mayor of Duchy of Schleswig""@en.
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?person WHERE {
  ?parent a dbpedia:Royalty;
  ?parent sp:hasSpouse ?spouse;
  ?spouse a dbpedia:Person;
  ?parent sp:hasChild ?child;
  ?child a dbpedia:Royalty;
  ?child rdfs:label ""Philip, Despot of Romania"";
  ?spouse rdfs:label ""Maria of Bytom""
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?person WHERE {
  ?person a :Producer .
  ?person rdfs:label ""Errol Flynn""@en .
  ?person wdt:P31 *Cora_Sue_Collins .
  ?person wdt:P54 *Janet_Gaynor .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"SELECT ?player ?manager
WHERE {
    ?player a ns:0.3#Athlete ;
               ns:instanceOf ns:SportsPerson ;
               ns:role ns:SoccerPlayer .
    ?player a ns:0.3#Manager ;
               ns:instanceOf ns:SportsManager ;
               ns:role ns:SoccerManager .
    ?manager a ns:0.3#Manager ;
               ns:instanceOf ns:SportsManager ;
               ns:role ns:SoccerManager .
    ?manager rdfs:label ""Hong Kong C Team manager"" .
    ?player foaf:birthDate ""1980-03-24""^^xsd:date .
    ?manager foaf:birthDate ""1980-03-24""^^xsd:date
}",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?producer ?band
WHERE {
  ?bobThompson a dbpedia:MusicalArtist ;
                 foaf:name ""Bob Thompson"" .
  ?cokeStudioProducer rdfs:label ""Coke Studio Philippines producer"" .
  ?bobThompson rdfs:member ?band .
  ?band rdfs:label ?bandLabel .
  ?producer rdfs:label ?producerLabel .
  ?producer ns:inDataset <http://dbpedia.org/> .
}",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?wife
WHERE {
  ?belaIV rdf:type <http://dbpedia.org/ontology/Person> .
  ?belaIV rdfs:father ?father .
  ?father rdf:type <http://dbpedia.org/ontology/Royalty> .
  ?philip a <http://dbpedia.org/ontology/Child> ; rdfs:parent ?belaIV .
  ?charlesI a <http://dbpedia.org/ontology/SiblingOrCousin> ?philip .
  ?wife a <http://dbpedia.org/ontology/Wife> ?belaIV
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"The SPARQL query will involve looking up Rainer Weiss's Nobel Prize details and then finding the host institution of the award. Here is the structured query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?awardName ?hostInstitution
WHERE {
  ?noblePrize a dbpedia-owl:Nobel_Prize;
    dbpedia-owl:nobelist ?awardee .
  ?awardee rdfs:label ""Rainer Weiss""@en .
  ?awardee dbpedia:Pritzker_Award ?award .
  ?award rdfs:label ?awardName .
  ?award rdfs:domain ?hostInstitution .
}
```

This query searches for a Nobel Prize where the laureate is named Rainer Weiss, identifies the award given to him (in this case, assuming it's the Pritzker Prize, as he was awarded the Pritzker Prize for Physics), and then finds the domain of that award, which represents the host institution.",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"The SPARQL query will involve querying the DBpedia dataset for information related to Henry Clay Lewis, his birthplace, and the awards he received. Here's how we can structure the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplaceLabel ?awardName ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthplace .
  ?awards dbpedia:AwardReceivedBy ?person ;
    rdfs:label ?awardName ;
    rdf:type dbpedia:UnitedStatesCongressAwards .
  ?medals dbpedia:MedalReceivedBy ?person ;
    rdfs:label ?medalName .
  ?awardee a dbpedia:Settlement;
    foaf:country ""United States"" .
  ?awards = ?medals
}
```

This query looks for:
- `dbpedia:Person` records linked to Henry Clay Lewis.
- The `dbpedia:birthPlace` property to find his birthplace.
- Awards received by Henry Clay Lewis (`dbpedia:UnitedStatesCongressAwards`).
- Medals received by the same person (`dbpedia:MedalReceivedBy`).
- Ensuring that the award recipients (`?awardee`) are settlements in the United States.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?commander ?successor ?politician_role ?work_of_ducas
WHERE {
  ?commander rdfs:label ""Michał Kazimierz Pac"" .
  ?commander wdt:P18 qo:role ""Military Commander in the Great Turkish War"" .
  ?successor a owl:Thing .
  ?successor rdfs:label ?successor_label .
  ?politician_role a owl:Thing .
  ?politician_role rdfs:label ""Politician and Office Holder"" .
  ?work_of_ducas a owl:Thing .
  ?work_of_ducas wdt:P569 qo:author ""George Ducas"" .
  ?commander foaf:successor ?successor .
  ?politician_role foaf:agent ?successor
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","SELECT ?residence WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthDate ""1870"";
    dbpedia2:deathDate ""1940"";
    foaf:name ""James Craig""@en;
    owl:sameAs <> .
  ?person rdfs:seeAlso <>;
    dbpedia2:residence ?residence.
}",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","SELECT ?artist_name ?birth_place
WHERE {
  ?band_members rdf:type foaf:Person .
  ?band_members rdfs:label ""musical artist"" .
  ?band_members dbpprop:birthPlace ?birth_place .
  ?shadow bornIn ?birth_place .
  ?shadow a dbpedia-owl:ComicCharacter .
  ?artist_name rdfs:label ""Sam Concepcion"" .
  ?band_members ns:memberOf ?band_of_sam_concepcion .
  ?band_of_sam_concepcion a owl:Class ;
    rdf:type owl:NamedIndividual ;
    dbpprop:name ""Band of the person born in the same place as Robert Lamar Thompson and fictional character by Walter B. Gibson"" .
  ?band_members ns:memberOf ?band_of_sam_concepcion .
}",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?parent a dbpedia:Person .
  ?parent rdfs:child[1] ?person .
  ?parent rdfs:child[2] ?grandchild .
  ?grandchild a dbpedia:Person .
  ?grandchild rdfs:child[1] ?roger .
  ?roger rdfs:parent[1] ?constance .
  ?constance rdfs:spouse[1] ?william
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","SELECT ?tenant WHERE {
    ?party rdfs:label ""Spanish Socialist Workers' Party""@es .
    ?leader office ?election .
    ?election rdfs:label ""2009 Galician regional election""@en .
    ?leader ns:name ?name .
    ?name owl:sameAs ?quiroz .
    ?quiroz a ns:people/person .
    ?residence rdfs:label ?address .
    ?tenant ns:inhabitant ?residence
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"SELECT ?person WHERE {
  ?person a ns:royalty .
  ?person a ns:office_holder .
  ?grandchild a ns:child_of ?parent .
  ?parent a ns:child_of ?yeshaq .
  ?yeshaq a ns:parent_of ?grandparent .
  ?grandparent a ns:child_of ?baeda_maryam .
  ?grandchild a ns:child_of ?child_of_baeda_maryam .
  FILTER (str(?alter_ego) = ""The Shadow"")
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"SELECT ?character WHERE {
  ?character a dbpedia:ComicsCharacter .
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:role ""producer"" .
  ?character dbo:bandMemberOf ?bobThompson
}",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","SELECT ?party_member ?parent_birth_name ?actor
WHERE {
    ?central louisiana rdfs:label ""Central, Louisiana"".
    ?ruling_party rdfs:label ?party_label.
    ?central louisiana rdf:type fr:Comté.
    ?ruling_party p:PRESIDESOver ?central louisiana .
    ?tisha_sterling parents ?parent_of_tisha .
    ?parent_of_tisha foaf:name ?parent_birth_name .
    ?tommy_davidson tv:role ""1,000 Dollars a Minute"".
    ?tisha_sterling sp:spouse ?tommy_davidson
}
ORDER BY ?party_member",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor1 ?actor2
WHERE {
  ?movie dbpedia:filmTitle ""The Shadow"".
  ?actor1 dbpedia:roleInFilm ?movie .
  ?album dbpedia:artist ?actor2.
  ?album a dbpedia:MusicAlbum ;
           dbpedia:performer ?actor1.
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"SELECT ?country WHERE {
  ?citizen a dbpedia:Person;
    foaf:nationality dbpedia:Spanish_Spain .
  ?party dbpedia:PSOE ;
    dbpedia:leader ?leader .
  ?administration dbpedia:Government_of_Andalusia ;
    dbpedia:tenant ?country .
  ?leader rdfs:label ""Name of the leader""@es
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?manager_name 
WHERE {
  ?player Thomas Letsch.
  ?team VfL Bochum.
  ?team season ""2007-08"".
  ?manager_of_team ?manager_name.
  ?manager_of_player rdfs:label ""Manager"" .
  ?manager_name ns:country ""Germany"".
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","SELECT ?commander_name ?succeeded_politician ?event_conflict ?boris_vian_reference
WHERE {
  ?jean_baptiste_comte_d_arco a dbpedia:Person ;
                 dbpedia:birthDate ""c. 1480"" ;
                 dbpedia:deathDate ""1518-07-30"" ;
                 dbpedia:role ""Commander in the war involving Jean Baptiste, Comte d'Arco"" .
  ?jean_baptiste_comte_d_arco rdfs:seeAlso <http://dbpedia.org/resource/Jean_Baptiste,_Comte_d%27Arco> .
  ?succeeded_politician a dbpedia:OfficeHolder ;
                    dbpedia:office ""Politician"" ;
                    dbpedia:successor ?jean_baptiste_comte_d_arco .
  ?michał_kazimierz_pac a dbpedia:Person ;
                  dbpedia:role ""Commander in the Deluge"" .
  ?deluge a dbpedia:Event ;
            dbpedia:type ""Military_conflict"" ;
            dbpedia:participatedBy ?michał_kazimierz_pac .
  ?boris_vian rdfs:label ""Boris Vian"" .
  ?boris_vian_reference a dbpedia:CreativeWork ;
                      dbpedia:author ?boris_vian .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person WHERE {
  ?child a ns:Person ;
            rdfs:label ""Duke Frederick William of Württemberg""@de ;
            ns:parent ?grandparent .
  ?grandparent a ns:Person ;
            rdfs:label ""Duke Alexander of Württemberg""@de ;
            ns:parent ?greatGrandparent .
  ?greatGrandparent a ns:Person ;
            rdfs:label ""Archduke Charles Louis of Austria""@de .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace1 ?birthPlace2 ?authorName
WHERE {
  ?person1 a dbo:Person;
    dbo:birthPlace ?birthPlace1.
  ?person2 a dbo:Person;
    dbo:awardGivenBy dbo:Award_Actor_Vince_Gilligan ;
    dbo:awardee ?person3.
  ?author a dbo:Person;
    rdfs:label ?authorName;
    dbo:nationality ""United States"".
  ?person1 ns:firstName ""Glenn Youngkin"".
  ?person2 ns:awardName ""Award given by Vince Gilligan"".
  ?author dbo:workTitle ""El Deafo"".
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","SELECT ?child_name
WHERE {
  ?child_name a :politician .
  ?child_name a :office_holder .
  ?child_name ns:parent ?parent .
  ?parent a :person ;
         ns:hasChild ?awardee .
  ?awardee a :Commander_of_the_Royal_Victorian_Order
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?actor WHERE {
  ?actor a :Actor ;
    foaf:name ""Richard Grant Esterhuysen"" .
  ?actor rdfs:label ""The Shadow"" .
  ?actor :workedWith Shatrughan_Sinha .
}",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"SELECT ?person WHERE {
  ?shadowActor ns:role ""The Shadow"" .
  ?author ns:writtenWork ""Smartbomb"" .
  ?musicVideoActor ns:appearanceIn ""What You Know"" .
  ?shadowActor foaf:knows ?author .
  ?author foaf:knows ?musicVideoActor
}",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?actor ?birthplace WHERE {
    ?actor a dbpedia-owl:Actor ;
            dbpedia2:role_in_film Akaler Shandhaney .
    ?awardee a dbpedia-owl:Awardee ;
             rdfs:label ""Sangeet Natak Akademi Fellowship"" .
    ?actor foaf:givenName ""Mithun"" .
    ?awardee ns:hasAwardeeIndividual ""Pt. Ramesh Maheshwari"" .
}
LIMIT 2",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"SELECT ?place WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?place .
  ?place a dbpedia-owl:Settlement ;
    rdfs:label ""Lexington, Kentucky"" .
  OPTIONAL { 
    ?person dbpedia2:awardedForMilitaryAction ?military_action .
    ?military_action a dbpedia:Conflict;
      dbpedia2:conflictName ""American Civil War"" .
  }
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","SELECT ?royalty
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:child ?maximilian_i ;
             dbpedia:child ?philip_i_of_castile .
  ?maximilian_i a dbpedia:Monarch ;
               dbpedia:father Maximilian_I_Holy_Roman_Emperor .
  ?philip_i_of_castile a dbpedia:Person ;
                    dbpedia:parent Dorothea_of_Denmark_Electress_Palatine .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the birthday of Marty Pollio
SELECT ?birthday WHERE {
    ?person a dbpedia:Person;
        dbpedia:P31 dbpedia:BornOn ?birthday.
    ?person rdfs:label ""Marty Pollio""@en.
}

# Step 2: Find athletes born on the same day as Marty Pollio
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?name ?sport WHERE {
    ?event a dbpedia:Event;
        dbpedia:P31 ?birthday.
    ?event rdfs:label ""Marty Pollio's birthday""@en.
    ?person a dbpedia:Person;
        dbpedia:P31 ?birthday;
        dbpedia:P42 ?sport.
    FILTER (?birthday = ?birthday_of_pollio)
}

# Step 3: Find the actor from ""El Juego"" who is a soccer player and an athlete
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor WHERE {
    ?movie a dbpedia:Film;
        dbpedia:P31 ""El Juego""@en.
    ?actor a dbpedia:Actor;
        dbpedia:P42 ?sport.
    ?actor rdfs:label ?actor_label@en.
    FILTER (?sport = ""soccer"" && ?actor_label LIKE ""%athlete%"")
}

# Step 4: Find the team Pablo Aimar played for
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?team WHERE {
    ?player a dbpedia:SoccerPlayer;
        dbpedia:P42 ?team.
    ?player rdfs:label ""Pablo Aimar""@en.
}

```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?officeHolderName ?office ?event WHERE {
  ?officeHolderName a pol:Politician .
  ?officeHolderName rdfs:label ""Manuel Pinto da Costa""@pt .
  ?office a owl:Office .
  ?office rdfs:label ""Office of the commander""@en .
  ?office ?event .
  ?officeHolderName foaf:residence ?leaderResidence .
  ?leaderResidence a owl:Residence ;
                   rdfs:label ""Residence of the leader""@en .
  ?event a event:Event .
  ?event rdfs:label ""2003 Madrid City Council election""@en;
           dc:date ""2003-03-14""^^xsd:date
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","SELECT ?person
WHERE {
  ?royaltyPerson a dbpedia:Royalty .
  ?royaltyPerson rdfs:child ?child1 .
  ?child1 a dbpedia:Event .
  ?child1 rdfs:label ""Societal Event and Television Show""@en .
  ?child1 dbpprop:commanderIn ""2nd Dragoon Regiment (France)"" .
  ?child1 rdfs:father ?grandparentPerson .
  ?grandparentPerson a dbpedia:Person .
  ?grandparentPerson rdfs:child ?royaltyChild .
  ?royaltyChild a dbpedia:Person .
  ?royaltyChild rdfs:child ?ferdinandGrandchild .
  ?ferdinandGrandchild a dbpedia:Person; dbpprop:fatherOf ?childOfFerdinand
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","SELECT ?movie_producer WHERE {
  ?movie a dbpedia-owl:Movie ;
    dbpedia-owl:producer ?movie_producer .
  ?person a dbpedia:Person ;
    dbpedia:birth_name ""Linda Denise Fishman"" ;
    dbpedia:sibling [ a dbpedia:Sibling ; dbpedia:name ""Robbie Fishman"" ] .
  ?movie_producer rdfs:label ?producer_label .
  ?person wdt:P31 ?movie
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","SELECT ?person ?birthplace ?award
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:deathDate ""1850-08-05"" .
  ?person dbpprop:conflict ""Mexican-American War"" .
  ?person foaf:forcesWith [ a dbpedia:MilitaryUnit; rdfs:label ""Quincy Adams Gillmore's unit"" ] .
  ?person dbpprop:awardedBy ""United States Congress"" .
  ?birthplace a dbpedia:Settlement .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"SELECT ?character ?profession WHERE {
  ?character a :ComicsCharacter .
  ?character rdfs:label ""The Shadow"" .
  ?character ns:profession ?profession .
  ?profession owl:sameAs ""Shatrughan Sinha's profession"" .
  ?character ns:actedInSomeWorkWith ?movie .
  ?movie a :MovieAndTelevisionShow .
  ?movie castMember ?actor .
  ?actor rdfs:label ""Richard E. Grant"" .
}",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?person WHERE {
  ?person a dbpedia-owl:MusicalArtist ;
            dbpprop:birthName ?birthName ;
            dbpprop:origin ?origin .
  ?origin a dbpprop:Region ;
            dbpprop:country ""United States"" ;
            dbpprop:state ""Florida"" .
  ?person foaf:memberOf [ a foaf:Organization ; rdfs:label ""Bobby Shmurda"" ] .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","SELECT ?actor WHERE {
  ?movie ""What You Know"" .
  ?movie rdfs:subjectOf [ a ns:MusicVideo; ns:performer ?actor ] .
  ?series ""The Golden Master"" .
  ?series ns:hasAlterEgo ?alter_ego .
  ?alter_ego a ns:Character .
  ?alter_ego ns:performedBy ?actor
}",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","SELECT ?birthplace WHERE {
  ?screenwriter a ns:film_artists;
    ns:name ""Victor Saville"";
    ns:birthPlace ?birthplace .
}
AND
{
  ?musicalWork a ns:musicalWorks;
    ns:title ""The True Self"";
    ns:artist ?artist .
}
AND
{
  ?artist ns:givenName ""Steven"";
    ns:name ""Kapur"" .
}",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","SELECT ?establishmentDate WHERE {
  ?institution rdf:type owl:Class;
    rdfs:label ""Instituto Nacional de Ciência""@pt.
  ?politician a :Person;
    foaf:education ?educationalInstitution .
  ?educationalInstitution a :EducationalInstitution;
    rdfs:label ""Instituto Nacional de Ciência""@pt;
    owl:founder ?politician .
  ?politician1 a :Politician;
    rdfs:label ""Luiza Erundina""@pt.
  ?politician2 a :Politician;
    rdfs:label ""Eleonora Menicucci de Oliveira""@pt.
  ?educationalInstitution1 a :University;
    rdfs:label ""Universidade Federal do Rio Grande do Norte""@pt;
    owl:almaMater ?politician1 .
  ?educationalInstitution2 a :EducationalInstitution;
    rdfs:label ""Universidade Federal do Rio Grande do Norte""@pt;
    owl:almaMater ?politician2
}",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"SELECT ?person
WHERE {
  ?person a dbpedia:Royalty .
  ?person ns:child[1] ?grandchild_of_duke_philip .
  ?grandchild_of_duke_philip ns:child[2] ?great_grandchild_of_archduke_charles_louis .
  ?great_grandchild_of_archduke_charles_louis ns:parent[3] ?spouse_child .
  ?spouse_child a dbpedia:Royalty .
  ?spouse_child ns:spouse[4] ?archduchess_helena .
  FILTER (xsd:date(?spouse_child/ns:birthDate) < xsd:date(?archduchess_helena/ns:birthDate))
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"The SPARQL query will involve traversing relationships in the DBpedia dataset to find the required individuals. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty WHERE {
  ?child1 rdf:type <> .
  ?parent1 rdf:type <> .
  ?child2 rdf:type <> .
  ?child1 rdf:type <> .
  ?child2 rdf:type <> .
  ?child2 rdfs:spouse ?royalty .
  ?parent1 ns:parentOf ?child1 .
  ?child1 ns:childOf ?parent1 .
  ?child2 ns:parentOf ?child3 .
  ?child3 rdf:type <> .
  ?child3 rdfs:label ""Saw Min Phyu""@en
}
```

This query starts by selecting the royalty (`?royalty`) based on the conditions provided. It navigates through the parent-child relationships to find the child of Minye Kyawswa and Saw Shwe Khet, then identifies their spouse (which is Saw Min Phyu), and finally checks if this individual is labeled as ""Saw Min Phyu"" to confirm they are the correct person.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","SELECT ?father
WHERE {
  ?eleonore a dbpedia-owl:Person ;
    dbpedia:hasFather ?father ;
    rdfs:label ""Eleonore of Austria"" .
  ?father a dbpedia-owl:Person ;
    dbpedia:partOfMilitaryForce ""Algerian War"" ;
    rdfs:label ?father_label .
  ?father popleft ""Maria Anna of Bavaria"" .
  ?father_label contains ""Warrior"" .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","SELECT ?artist_name ?band_name WHERE {
    ?person a dbpedia:Musician;
        dbpedia:real_name ?person_real_name .
    ?person dbpedia:birth_date ""1945-03-30"" .
    OPTIONAL { ?person rdfs:label ?artist_name . }
    OPTIONAL { ?band dbpedia:band_members ?member ; dbpedia:leader ?person . }
    FILTER (lang(?person_real_name) = ""en"")  # restrict to English language
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:hasChild ?child .
  ?child a ns:Actor ;
         ns:roleInMovie ""M*A*S*H"" .
  ?person rdfs:label ""Allan Arbus"" . 
  ?person ns:deathPlace ""Los Angeles, California""^^xsd:string .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","SELECT ?parent_of_child WHERE {
  ?child a dbpedia-owl:Child ;
            dbppro:hasParent ?parent_of_child .
  ?parent_of_child a dbpedia-owl:Person ;
               dbppro:isPolitician true .
  ?child dbppro:hasAwards [ a dbppro:Award; rdfs:label ""Rodney Lees"" ] .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","The SPARQL query to achieve this would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Artist ;
            dbpedia:birthName ""Tupac Shakur"" ;
            dbpedia:occupation dbpedia:Writer .
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
}
```

This query selects individuals (`?person`) who are both artists (`dbpedia:Artist`) and writers (`dbpedia:Writer`) with the birth name ""Tupac Shakur"" and whose label includes ""Darryl Paa Kwesi Bannerman-Martin"".",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","SELECT ?author WHERE {
  ?work a book .
  ?work rdfs:label ""Living History"" .
  ?politician a politician .
  ?officeHolder a office_holder .
  ?politician foaf:spouse ?author .
  ?politician ns:hasResidence ch:Chappaqua, New York .
  ?politician participatedIn ch:Third Taiwan Strait Crisis
}",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },SELECT ?royalty_person WHERE { ?royalty_person a dbpedia:Royalty . ?royalty_person rdfs:father ?grandparent . ?grandparent a dbpedia:OfficeHolder . ?grandparent rdfs:child ?naod_parent . ?naod_parent a dbpedia:Person . ?naod_parent rdfs:parent ?commander . ?commander a dbpedia:Royalty . ?commander dbpedia:Siege_of_Mukha pred ?shadow_alter_ego . ?shadow_alter_ego a dbpedia:Alter_Ego_of_The_Shadow },7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Bob Thompson""@en .
  ?person foaf:name ?birth_name .
  ?person ns:altName ""Sam Concepcion"" .
  ?person ns:altName ""The Shadow"" .
  ?band rdfs:label ?band_label .
  ?person rdf:type ?profession .
  ?profession a dbpedia:Profession;
    rdfs:label ""Musician""@en
  FILTER (lang(?profession) = ""en"")
}",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","SELECT ?party WHERE {
  ?politician a dbpedia-owl:Politician;
    rdfs:label ""Roy Leonardo Barreras Montealegre""@es;
    dbpprop:politicalParty ?party .
  ?politician2 a dbpedia-owl:Person;
    rdfs:label ""Gustavo Petro""@es;
    dbpprop:politicalParty ?party2 .
  ?politician3 a dbpedia-owl:Person;
    rdfs:label ""Daniel Elahi Galán""@es;
    dbpprop:politicalParty ?party3
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?person ?event ?conflict ?tv_show ?societal_event
WHERE {
  ?person a :POLITICIAN; rdfs:label ""George Ducas""@en .
  ?person ns:successor ?pac .
  ?pac a :COMMANDER; foaf:name ""Michał Kazimierz Pac""@en .
  ?conflict a :MilitaryConflict; rdfs:label ""Battle of Vienna""@en .
  ?conflict a :Event .
  ?tv_show a :TelevisionShow; rdfs:label ""Battle of Vienna""@en .
  ?societal_event a :SocietalEvent .
  ?person ns:partOf ?tv_show .
  ?tv_show ns:inspiredBy ?conflict
}
LIMIT 1",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?artist a rdf:Type <> .
  ?artist ns:birthPlace ""London"" .
  ?artist a ns:musicalArtist .
  ?artist ns:hasWork ?movie .
  ?movie a ns:Film .
  ?movie ns:author ?artist .
  ?artist a ns:Person .
  ?artist ns:deathDate ""2020-06-18""^^xsd:date .
  FILTER (lang(?movie) = ""en"")  # Assuming the movie is in English for simplicity
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"To extract this information from DBpedia, we need to construct a SPARQL query that navigates through the relationships described. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_parent_name
WHERE {
  ?child a rdf:Property ;
            rdfs:label ""royalty"" .

  ?princess_aisha_child a child :of ?parent .
  ?parent a foaf:Person ;
            rdfs:label ""Princess Aisha bint Faisal""@en .

  ?prince_faisal_child a child :of ?parent .
  ?parent a foaf:Person ;
            rdfs:label ""Prince Faisal bin Hussein""@en .

  ?royalty_parent_name a foaf:Person ;
                        rdfs:label ?royalty_name@en .
  
  ?child rdfs:subPropertyOf ?parent .
  ?princess_aisha_child rdfs:subPropertyOf ?parent .
  ?prince_faisal_child rdfs:subPropertyOf ?parent .
}
```

This query looks for individuals who are both a child of Princess Aisha bint Faisal and Prince Faisal bin Hussein, ensuring that these children are also labeled as ""royalty"". It then returns the name of their parent, which should be a royal.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","SELECT ?actor WHERE {
  ?actor rdfs:label ""Richard Grant Esterhuysen""@en .
  ?actor foaf:profession ""actor"" .
  ?actor dbpprof:roleInShow ""Ab Kya Hoga"" .
  ?actor a dbo:Politician
}",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?producer WHERE {
  ?movie a ns:film.
  ?actor ns:role ?character .
  ?character foaf:name ""Kent Allard"".
  ?producer ns:produced ?movie .
  ?movie ns:productionCompany ?producer
} 

AND {
  ?movie ns:releaseDate ""1938-01-01"" .
  ?actor ns:film/ns:role ?movie .
  ?movie rdfs:label ""High Society Blues""
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?artist WHERE {
  ?person a dbpedia:Musician;
    dbpedia:birthDate ""1945-03-30"" .
  ?person rdfs:label ""Nicholas Michael Curran""@en .
  ?band rdfs:member ?person ;
         a dbpedia:Band .
  ?band rdfs:name ""The Fabulous Thunderbirds""@en
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor2 WHERE {
  ?movie a dbpedia:Film .
  ?movie stars dbpedia:Audrey_Hepburn .
  SOME ?actor1 IN STARS OF ?movie .
  ?actor1 ns:spouse ?actor2
} 

AND {
  ?movie2 a dbpedia:Film .
  ?movie2 stars dbpedia:Audrey_Hepburn .
  SOME ?actor3 IN STARS OF ?movie2 .
  ?actor3 ns:star ?iliza_shlesinger
}",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the specific details of the Anita Borg Institute Women of Vision Awards winners. Assuming we have a known winner from Kiyosu, the query might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?birthplace WHERE {
  ?awardee a dbpedia:Person.
  ?awardee dbpprop:awardedBy dbpedia:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee geo:locatedIn dbpedia:Kiyosu.
}
```

This query selects the person (`?awardee`) who has been awarded by the Anita Borg Institute Women of Vision Awards (`dbpprop:awardedBy dbpedia:Anita_Borg_Institute_Women_of_Vision_Awards`), is located in Kiyosu (`geo:locatedIn dbpedia:Kiyosu`), and then retrieves their birthplace (`?birthplace`).",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","The SPARQL query will need to:
1. Identify the Commander involved in the Siege of Mukha.
2. Find their children who are also royals.
3. Verify that one of these children is Baeda Maryam I's father.
4. Link this person to an alter ego of Lamont Cranston.

Given the complexity and the need for specific historical data, a direct SPARQL query might not be straightforward without extensive knowledge graphs or databases. However, a simplified approach could involve:
- Using DBpedia's resources to find relevant individuals.
- Joining information from different relations (parent-child, role in Siege of Mukha, royalty status, and relation to Lamont Cranston).

Here is a conceptual SPARQL query that outlines the approach:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Commander ;
            dbpedia:partOfBattle dbpedia:Siege_of_Mukha ;
            dbpedia:hasChild ?childRoyalty ;
            dbpedia:isParentOf Baeda_Maryam_I .
  
  ?childRoyalty a dbpedia:Royalty .
  
  OPTIONAL { 
    ?person foaf:alterEgo <http://example.com/Lamont_Cranston_reference> . 
  }
}
```

This query assumes that there are appropriate properties and resources in DBpedia that link individuals to these roles and relationships. The `foaf:alterEgo` is a hypothetical property used to link to an alter ego, as such a property may not exist directly in DBpedia.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"SELECT ?manager
WHERE {
  ?player a ns:club ?soccer_club .
  ?soccer_club a ns:organization .
  ?soccer_club a ns:sportClub .
  ?player ns:hasMember ?thomas_letsch .
  ?thomas_letsch a ns:footballerFor ?team .
  ?team a ns:sportTeam .
  ?team ns:season ?team_season .
  ?league_season a ns:footballLeagueSeason .
  ?league_season ns:successor ?preceding_season .
  ?preceding_season ns:hasMember ?vfl_bochum .
  ?vfl_bochum a ns:sportClub .
  ?vfl_bochum ns:season ?vfl_bochum_season .
  FILTER (xsd:date(?team_season) = xsd:date(""2006-07"")) .
  FILTER (xsd:date(?vfl_bochum_season) > xsd:date(""2006-07"")) .
  ?manager a ns:coachOf ?team .
  ?manager ns:managesTeam ?team
}",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"SELECT ?parent_of_Amy ?child_of_spouse ?actor_movie
WHERE {
  ?amy Arbus parent ?parent_of_Amy .
  ?mariclare_costello spouse ?spouse .
  ?spouse child ?child_of_spouse .
  ?movie a :Movie ; location ""Los Angeles"", decedent ""yes"" .
  ?actor a :Person; roleInMovie ?movie .
  ?actor MovieActorOf ?movie .
  ?parent_of_Amy ns:father ?parent .
  ?child_of_spouse ns:child ?child
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"SELECT ?player ?team
WHERE {
  ?player a dbpedia:Player;
          dbpedia:P31 dbpedia:Association_Sport_Football .
  ?player foaf:birthDate ?marcelo_sarmiento_birthday .
  ?player rdfs:label ?player_label .
  ?team a dbpedia:Football_Team ;
         dbpedia:P29 ?player .
  ?player rdfs:label ?team_name .
  FILTER (STR(?marcelo_sarmiento_birthday) = STR(DATE(NODESPLIT('1990-01-01'))))
  FILTER (STR(MARTY_POLLOI_BIRTHDAY) = STR(DATE(NODESPLIT('1977-10-15'))))
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","SELECT ?child WHERE {
  ?grandchild a dbpedia-owl:Royalty ;
    dbpedia2:hasParent ?parent .
  ?parent a dbpedia:Person ;
    rdfs:label ""Albrecht, Duke of Württemberg"" .
  ?parent rdfs:child ?child .
  ?child a dbpedia-owl:Person ;
    rdfs:label ?royalty_child .
  ?grandchild a dbpedia:Person ;
    rdfs:label ?royalty_grandchild .
  ?spouse a dbpedia:Person ;
    rdfs:label ""Archduchess Helena of Austria"" .
  ?child a dbpedia:Person ;
    rdfs:label ?royalty_spouse_child
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"SELECT ?person1 ?office1 ?role1 WHERE {
    ?person1 a ns:people.person ; rdfs:label ?name .
    ?person1 ns:officeHolder ?office1 .
    ?person1 ns:politician ?role1 .
    [ a ns:event ;
      ns:startDate ""2003-11-02""^^xsd:date; 
      ns:endDate ""2007-11-02""^^xsd:date ] 
  ns:electorateOffice ?office2.
  
    ?office2 ns:holder ?officeHolder .
    ?officeHolder a ns:people.person ; rdfs:label ?name .
} 

AND {
    ?person1 ns:commander ?officeCommanderInCARCW .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:birthName ?birthName;
    geo:region ""Central Region, Ghana"";
    dbpprop:associatedMusicArtist ?musicArtist
}
AND ?musicArtist = ""Rod Argent""
ORDER BY ?birthName",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"SELECT ?playerName ?nickname
WHERE {
  ?playerName ns:firstName ""Denis"" .
  ?playerName ns:lastName ""Kolodin"" .
  ?playerName rdfs:label ?playerLabel .
  ?playerLabel ns:matchesWith [ a ns:Match ; ns:team ?soccerClub ] .
  ?soccerClub rdfs:label ?nickname .
}",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","SELECT ?musicalArtist WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ""1985-04-15"";
    dbpedia:name ""Elorm Kabu Amenyah"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthDate ""1975-01-29"";
    dbpedia:name ""Joey B"" .
  ?person1 rdfs:label ?musicalArtist .
  ?person2 rdfs:label ?musicalArtist .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?awardee ?war ?placeOfBirth WHERE {
  ?awardee ns:award ""Golden Sword for Bravery"" .
  ?awardee ns:partOfMilitaryConflict ?war .
  ?war rdfs:label ?warLabel .
  ?war ns:participant ""Karl Gustav von Baggovut"" .
  ?placeOfBirth a dbo:BirthPlace .
  ?placeOfBirth rdfs:label ?birthPlaceLabel .
  ?awardee dbp:birthPlace ?placeOfBirth
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","To retrieve this information, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor1 ?movie WHERE {
  ?song dbpedia:hasMusicVideo ?video .
  ?video dbpedia:featuresActors [foaf:primaryTopic ?actor1] .
  
  ?author dbpedia:isAuthorOf ""Smartbomb"" .
  ?movie dbpedia:director ?director .
  ?director dbpedia:actedIn ?movie_with_author .
  ?movie_with_author dbpedia:starredIn ?actor2
}
```

This query does the following:
- Selects the actor (`?actor1`) from the music video of a song by T.I. (`?song`)
- Links the music video to actors (`?video` features actors)
- Identifies the author of ""Smartbomb""
- Connects this author to a movie they directed (`?director`)
- Connects the director to a movie in which they acted (`?movie_with_author`)
- Finally, links the movie with the author to the actor who starred in it (`?actor2`)",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?militaryForce1 ?militaryForce2 WHERE {
  ?battle battleLabel ""Battle of Cape Finisterre (1805)"".
  ?war warLabel ""Peninsular War"".
  ?williamBayne personName ""William Bayne"".
  ?xebecs groupLabel ""The Triple X's"".
  ?militaryForce1 ns:hasMember ?xebecs .
  ?militaryForce2 ns:participatedIn ?war
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"The SPARQL query will involve traversing these relationships in a sequence. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?predecessor
WHERE {
  ?child1 rdf:type foaf:Person .
  ?child1 a ns:ChildOf ?grandchild .
  ?grandchild rdf:type foaf:Person .
  ?grandchild a ns:ChildOf ?minye_kyawswa .
  ?minye_kyawswa a ns:SawShweKhet .
  ?myat_hpone_pyo a ns:SpouseOf ?father .
  ?father rdf:type foaf:Person .
  ?father ns:hasParent ?minye_kyawswa .
  ?predecessor a ns:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
  dbpedia:P31 wd:Q12298 (Confederate States of America military officer);
  dbpedia:P31 wd:Q148 (American Civil War).
  ?commander rdfs:member [ a dbpedia:Political_party; rdf:type dbpedia:Party ]; # Assuming the commander was a member of the ruling party
  geo:location ?commander geo:inRegion [ a geo:Area; rdfs:label ""Westport, Connecticut"" ].
}",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?child a dbpedia:OfficeHolder .
  ?child dbo:parent [dbo:hasChild ?grandchild] .
  ?grandchild a dbpedia:Person .
  ?grandchild dbo:parent ?parentOfGrandchild .
  ?parentOfGrandchild dbo:hasParent ?rogerII .
  ?rogerII a dbpedia:Person .
  ?rogerII dbo:name ""Roger II of Sicily"" .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?spouse
WHERE {
  ?actor a :Person;
    :name ""Laurel Hardy"";
    :roleInFilm ""The Flying Deuces"";
    :marriedTo ?spouse .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","Given the complexity of the query and the need to join multiple datasets (e.g., VfL Bochum's players, managers, birth dates, and career details), a precise SPARQL query would require detailed knowledge of the schema used by DBpedia and other relevant databases. However, a simplified version might look like this:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerName
WHERE {
  ?player dbpprop:club VfL Bochum .
  ?player dbpprop:season 2007-08 .
  ?player a dbpprop:SportPerson .
  ?manager foaf:name ?managerName .
  ?manager a dbpprop:SportsClubManager .
  ?manager dbpprop:nationality <http://dbpedia.org/ontology/Country> [dboff:hasAdmin Theodor Heuss] .
  ?bornPerson a dbo:Person .
  ?bornPerson dbpprop:birthday ""1968-08-26"" .
  ?bornPerson a foaf:Person .
  ?manager rdfs:seeAlso ?bornPerson .
}
```

This query attempts to find the manager's name who meets all the specified criteria. Note that this is a simplified version and might need adjustments based on the actual schema used by DBpedia.",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","SELECT ?person_name WHERE {
  ?actor rdf:type <http://dbpedia.org/ontology/Actor> .
  ?actor foaf:name ""Ann Sothern"" .
  ?movie a <http://dbpedia.org/ontology/Film> .
  ?movie producer <http://dbpedia.org/ontology/Product#producer> ?nat_levine .
  ?actor rdfs:label ""Maisie Ravier""@en .
  ?spouse rdf:type <http://dbpedia.org/ontology/Person> .
  ?spouse memberOf <http://dbpedia.org/ontology/PoliticalParty> <http://dbpedia.org/ontology/PoliticalParty#RulingParty_of_Central_Louisiana> .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?artist
WHERE {
  ?musician a dbpedia:Musician .
  ?musician birthName ""Pascal Amaning"" .
  ?musician geo:region ""Central Region, Ghana"" .
  ?musician rdfs:seeAlso ?associated_artist .
  ?associated_artist a dbpedia:Artist
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","SELECT ?parent1 ?father1 WHERE {
  ?child pol:officeHolder .
  ?child parents ?parent1 .
  ?parent1 parents ?father1 .
  ?parent1 rdf:type foaf:Person .
  ?child rdf:type foaf:Person
}

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX pol: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","SELECT ?person WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""Der Blau""@de.
  ?person dbpprop:designedBy ?designer .
  ?designer a dbpedia:Person;
           foaf:name ""Marek Reichman"" .
}",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"SELECT ?person_name ?band_name
WHERE {
  ?person bornAs ?birth_name .
  ?person ns:memberOf ?band .
  ?band rdfs:label ?band_name .
  ?band ns:locatedIn [ geo:country ""United States"" ; geo:regionName ""New York"" ] .
  ?awardee ns:awardRecipientOf ?award .
  ?awardee ns:nationality ""American"" .
  ?awardee ns:region ""New York (state)"" .
  ?award rdfs:label ?award_name .
  FILTER (regex(str(?award), ""Shmurda Award"")) .
}
LIMIT 1",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","SELECT ?person
WHERE {
    ?person birthDate ""1979-11-03"" .
    ?person a ns:soccerPlayer .
    ?person a ns:soccerManager .
    OPTIONAL { ?person playAsAthlete ?pollioBirthday }
    OPTIONAL { ?person ns:roleIn/ns:actAs ?movieTitle }
}
AND
{
    ?pollioBirthday a ns:date ""1979-11-03"" .
    ?movieTitle ""All or Nothing: Manchester City""
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","SELECT ?player 
WHERE {
    ?actor a ns:film.actor; rdfs:label ""Player in All or Nothing: Manchester City""@en .
    ?soccerPlayer a ns:sport.soccerPlayer; rdfs:label ?soccerPlayerLabel@en .
    ?athlete a ns:people.person; foaf:givenName ""Marcelo"" ; foaf:birthDate ""1955-02-22""^^xsd:date .
    ?soccerManager a ns:sport.soccerManager; rdfs:label ?soccerManagerLabel@en .
    ?player ns:involvesRole ?actor .
    ?player ns:involvesRole ?soccerPlayer .
    ?player ns:involvesRole ?soccerManager .
    ?player foaf:name ?playerName .
    FILTER (STRSTARTS (?soccerPlayerLabel, ""Manchester City"")) .
    FILTER (STRSTARTS (?soccerManagerLabel, ""Marcelo Sarmiento"")) .
    ?playerDate bornOn ""1955-02-22""^^xsd:date
}
ORDER BY ?playerDate",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"SELECT ?commander ?awardee ?award
WHERE {
  ?event  rdf:type  owl:Class ;
           rdfs:label ""Sinking of Prince of Wales and Repulse"" .
  ?commander  rdf:type  dbo:Person ;
               dbpprop:hasRole [ a ns:Role; rdfs:label ""Commander"" ] ;
               rdfs:label ""Tom Phillips"" .
  ?awardee  rdf:type  dbo:Person ;
             dbpprop:receivedAward ?award .
  ?awardee dbpprop:braveryFor ?event .
  ?award a  owl:Class;
         rdfs:label ""Albert Medal"" .
}",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"The SPARQL query will involve querying the DBpedia dataset for information related to GS9 and its members. We'll need to join multiple resources to find the required details.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia-owl:MusicalArtist ;
            dbpedia-owl:birthName ?birthName ;
            dbpedia-owl:nationality dbpedia:NationStateFluentIn ""Florida"" .
  [ rdf:type dbpedia-owl:BandMember;
     dbpedia-owl:band ?band ].
  ?band a dbpedia-owl:MusicArtist .
  ?band rdfs:label ""GS9"" .
}
```

This query does the following:
- Selects individuals (`?person`) who are both musical artists and have their nationality as Florida.
- Filters these individuals to only those who are band members of a music artist labeled ""GS9"".
- Ensures that the selected individual is also a musical artist.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }",{sparql_query},7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?child_of_Hideyoshi a n:child ;
    rdfs:label ""Toyotomi Hideyori""@en .
  ?hidenganagawa a n:person ;
    foaf:name ""Toyotomi Hidenaga"" ;
    rdf:type n:warrior .
  ?war a n:war .
  ?child_of_Hideyoshi ns:father ?hideyoshi .
  ?hidenganagawa ns:partOf ?war
}",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","SELECT ?awardee ?award ?charlestonLocation ?gillmoreForce
WHERE {
  ?awardee a dbpedia:Person;
    dbpprop:recipientOfAward ?award .
  ?award a dbpedia:Award ;
    rdfs:label ""United States Congress award""@en .
  ?awardee geo:locatedIn dbpedia:Charleston, South Carolina .
  ?gillmoreForce a dbpedia:MilitaryUnit;
    dbpprop:commander ?awardee .
  ?awardee rdfs:label ""Quincy Adams Gillmore""@en
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"SELECT ?childBirthPlace
WHERE {
  ?politicianChild a :Politician .
  ?politician a :Person .
  ?politician dcterms:isDeceasedAt ""Taipei"" .
  ?politician ns:nationality ""China"" .
  ?politicianParent :hasChild ?politicianChild .
  ?politicianChild a :Child .
  ?politicianParent a :Person .
  FILTER (lang(?politician) = ""zh"")  # Ensuring the context is Chinese
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?grandchild
WHERE {
  ?parent1 a dbpedia:Person;
           dbpedia:P31 dbpedia:Child_of Alexander_of_Württemberg ;
           dbpedia:P17 dbpedia:Spouse_of Archduchess_Margarete_Sophie_of_Austria .
  ?grandchild a dbpedia:Person;
            dbpedia:P31 dbpedia:Child_of ?parent1 ;
            dbpedia:P31 dbpedia:Child_of ?spouse_of_helena .
  ?spouse_of_helena a dbpedia:Person;
                dbpedia:P31 dbpedia:Spouse_of Archduchess_Helena_of_Austria
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?awardee_name ?awardee_birthplace
WHERE {
  ?governor a dbo:Politician ;
            dbo:office ""Governor of Virginia"" .
  ?author a dbo:Person ;
           dbo:birthPlace ?author_birthplace .
  ?awardee a dbo:Person ;
           dbo:award ""List of awards and nominations received by Vince Gilligan"" .
  ?governor_name ?governor_birthplace ?author_name ?author_birthplace ?awardee_name ?awardee_birthplace
}
ORDER BY ?governor_name, ?author_name",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
    ?child a dbpedia-owl:AlumnusOf edu:Eton_School ;
            dbpprop:hasParent ?parent .
    ?child dbpprop:givenName ""George"" ;
            dbpprop:familyName ""Stanley"" ;
            rdfs:label ""George Edward Geoffrey Smith Stanley, 18th Earl of Derby""@en .
    ?parent a dbpedia-owl:Person ;
           dbpprop:hasParent ?grandparent .
    ?grandparent a dbpedia-owl:Person ;
             rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?commander ?war ?bayne_force ?calder_event WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"".
  ?regiment wdt:P31 wd:Q1624847. # Assuming Q1624847 is the identifier for the American Revolutionary War
  ?regiment dcterms:partOf ?war.
  ?war rdfs:label ""American Revolutionary War"".
  ?bayne wdt:P31 wd:Q1234567. # Assuming Q1234567 is the identifier for William Bayne
  ?bayne dcterms:memberOf ?bayne_force.
  ?calder rdfs:label ""Robert Calder"".
  ?calder dcterms:partOf ?event.
  ?event a dcterms:Event; dcterms:type dcterms:SocietalEvent .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?author ?workTitle ?spouse
WHERE {
  ?author a dbpedia:Person;
    dbpedia:P31 dbpedia:Hillary_Clinton.
  ?author rdfs:label ""Hillary Clinton""@en.
  ?workTitle a dbpedia:Book;
    dbpedia:P46 ?bookID.
  ?bookID rdfs:label ?workTitle@en.
  ?spouse a dbpedia:Person;
    dbpedia:P31 ?author.
  ?spouse rdfs:label ""Bill Clinton""@en.
  ?workTitle ns:author ?author.
  ?author ns:hasSpouse ?spouse.
  FILTER (lang(?workTitle) = ""en"")
}",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?band_name ?artist_name WHERE {
  ?band_name rdfs:label ""The Fabulous Thunderbirds"" .
  ?band_member a dbpedia-owl:Musician .
  ?band_member foaf:name ""Kim Wilson"" .
  ?band_member dbpprop:birthDate ?birth_date .
  ?persona a dbpedia-owl:Artist .
  ?persona rdfs:label ""Nick Curran"" .
  ?band_member ns:inDataset <http://dbpedia.org/> .
  ?artist_name a dbpedia-owl:Person .
  ?band_member rdf:type ?band_type .
  ?artist_name foaf:name ?artist_name .
  FILTER (?birth_date > ?now) # Ensure the birth date is after the current date
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","SELECT ?birthplace
WHERE {
  ?person1 a :Person;
    :father ?father;
    :birthPlace ?birthplace1 .
  ?person2 a :Person;
    :mother ?mother;
    :birthPlace ?birthplace2 .
  ?father ns:familyMember ?person2.
  ?mother ns:familyMember ?person1.
  ?birthplace1 rdfs:label ""London"".
  ?birthplace2 rdfs:label ""London"".
  FILTER(???)  # We need to ensure that both birthplaces are the same
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"SELECT ?child_name ?royalty_status 
WHERE {
    ?child_of_William a rdfs:Resource .
    ?child_of_William rdf:type owl:Thing .
    ?child_of_William rdfs:label ?child_name .
    ?child_of_William ns:parent ?parent_of_child .
    ?parent_of_child a rdfs:Resource .
    ?parent_of_child ns:child ?royalty_child .
    ?royalty_child a rdfs:Resource .
    ?royalty_child rdf:type owl:Thing .
    ?royalty_child ns:label ""Royalty"" .
    ?child_of_William ns:parent ?grandparent_of_royalty .
    ?grandparent_of_royalty a rdfs:Resource .
    ?grandparent_of_royalty ns:child ?great_grandchild_of_roger .
    ?great_grandchild_of_roger a rdfs:Resource .
    ?great_grandchild_of_roger rdf:type owl:Thing .
    ?great_grandchild_of_roger ns:label ""Royalty"" .
}
LIMIT 1",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","A SPARQL query to retrieve this information might look like:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMemberProducer ?cavaleraConspiracyMembers WHERE {
  ?album a dbpedia:Album ;
            dbpedia:hasArtist dbpedia:Band ;
            dbpedia:producer ?producer .
  ?producer a dbpedia:Organization ;
             dbpedia:groupType ""Group"" .
  ?cavaleraConspiracyMembers a dbpedia:BandMember;
                    dbpedia:band dbpedia:MusicGroup ;
                    dbpedia:member ?bandMember .
  ?bandMemberProducer = ?bandMember
}
```

This query searches for the album ""Nothing to Gein"", finds its producer, checks if the producer is both an organization and a group, and then matches this producer with a band member of Cavalera Conspiracy.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace1 ?birthPlace2 ?birthPlace3
WHERE {
  ?recipient1 rdf:type dbpedia-owl:Person ;
               dbpprop:awardedBy dbpedia:P Vince Gilligan .
  ?recipient1 rdfs:label ?recipientName1 .
  ?governor rdf:type dbpedia:Politician ;
               dbpprop:birthPlace ?regionOfPowell .
  ?regionOfPowell rdfs:label ?regionLabel1 .
  ?ceceBell rdf:type dbpedia:Person ;
               dbpprop:birthPlace ?birthPlace3 .
  ?birthPlace3 rdfs:label ?birthPlace3Label .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","SELECT ?politician
WHERE {
  ?politician a dbpedia:Politician ;
               dbpedia:P31 wd:Q10898.
  ?politician dbpprop:POTENTIAL_PARTYMemberOf ?party_of_barreras .
  ?politician dbpprop:POTENTIAL_PARTYMemberOf ?party_of_petro_father .
  ?party_of_barreras rdfs:label ""Roy Leonardo Barreras Montealegre's party"" .
  ?party_of_petro_father rdfs:label ""Sofía Petro's father's party"" .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?conflictLabel ?kcbAwardeeName
WHERE {
  ?conflict a dbpedia:Conflict;
    rdfs:label ?conflictLabel .
  ?awardee a dbpedia:Person;
    dbpprop:order_of_bath ""Knight Commander of the Order of the Bath"";
    foaf:name ?kcbAwardeeName .
  ?conflict ns:participant ?awardee
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?actor WHERE {
  ?movie a :film .
  ?movie stard ?actor .
  ?actor ns:marriedTo ?spouseOfAwardWinner .
  [ a :Person ;
    rdfs:label ""Iliza Shlesinger"" ] IN ?movie .
  ?award_winner a :AwardWinner ;
    rdfs:label ""Janusz Kamiński""@en .
  ?spouseOfAwardWinner ns:spouse ?actor
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","SELECT ?child1 ?child2 ?event_show ?military_event WHERE {
  ?child1 a dbpedia:Person; dbpedia:P father [ dbpedia:hasName ""Ferdinand III, Holy Roman Emperor"" ] .
  ?child2 a dbpedia:Person; dbpedia:P father [ dbpedia:hasName ""Cecilia Renata of Austria"" ] .
  ?child1 foaf:children ?offspring1 .
  ?child2 foaf:children ?offspring2 .
  ?offspring1 dbpedia:P name ""Jacques Massu"" .
  ?offspring2 dbpedia:P name ""Jacques Massu"" .
  ?event_show a dbpedia:Event; dbpedia:instanceOf dbpedia:Television_Series; dbpedia:involvesMilitaryForce [ dbpedia:conflict Algerian_War ] .
  ?military_event a dbpedia:Military_Conflict; dbpedia:participatedIn Algerian_War; dbpedia:involvedPerson ?offspring1 .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"SELECT ?birthplace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthplace ?birthplace .
  ?work a dbpedia:CreativeWork;
    dbpedia:creator ?person;
    dbpedia:originCountry ?country .
  ?person rdfs:label ""Shobhna Samarth"" .
  ?work rdfs:label ""Jamsetji Tata"".
}",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","To achieve this, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbpprop:birthdate ""1979-11-03"" .
  
  OPTIONAL { 
    ?person dbo:playsFor ?team . 
    FILTER (lang(?team) = ""en"") 
  }
  
  ?person a dbo:Athlete .
  ?person a dbo:Actor .
  ?film a dbo:Film .
  ?film dbpprop:director ""Manuel Huerga"" .
}
```

This query does the following:
- It selects individuals (`?person`) who are both `SoccerPlayer` and `SoccerManager` and were born on November 3, 1979.
- It uses an optional clause to find the teams these individuals played for (restricted to English language teams).
- It also selects individuals who are both `Athlete` and `Actor` and are associated with a film directed by Manuel Huerga.",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace1 ?birthPlace2 ?birthPlace3
WHERE {
  ?person1 a dbpedia:Person; dbpedia:birthPlace ?birthPlace1.
  ?governor a dbpedia:Politician; dbpedia:residence ?birthPlace2.
  ?region a dbpedia:Region; dbpedia:administrativeDivisions ?administrationArea.
  ?powell a dbpedia:Person; dbpedia:birthPlace ?administrationArea.
  ?author a dbpedia:Person; dbpedia:birthPlace ?birthPlace3.
  ?author dbpedia:nationality ""United States"".
  ?governor dbpedia:nationality ""United States"".
  FILTER (lang(?author) = ""en"")  # Ensure the author is English-speaking
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?war1 ?place_of_birth ?war2 WHERE {
  ?person1 a dbpedia-owl:Person; rdfs:label ""Hashiba Hidekatsu""@ja.
  ?person1 foaf:combatRole ?war1 .
  ?war1 a dbpedia-owl:Battle .

  ?person2 a dbpedia-owl:Person; rdfs:label ""Yamaza Enjirō""@ja.
  ?person2 dbpprop:birthPlace ?place_of_birth .
  ?place_of_birth a dbpprop:Location .

  ?person3 a dbpedia-owl:Person; rdfs:label ""Koichirō""@ja.
  ?person3 foaf:combatRole ?war2 .
  ?war2 a dbpedia-owl:Battle .
}",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","SELECT ?office WHERE {
  ?person a ns:people.person;
    ns:givenName ""Anxo"";
    ns:middleName ""Quintana"";
    ns:familyName ""Quintana"";
    ns:role ?role .
  ?role a ns:owl:sameAs ?office .
  ?office rdfs:label ?office_label .
  ?office ns:inLanguage ""es"".
  ?office ns:organizationRole [
    a ns:owl:OrganizationRole;
    ns:roleLabel ""Government administration"";
    ns:to ""Spanish Socialist Workers' Party (PSOE)"" ] .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","SELECT ?name WHERE {
  ?person a :Person ;
            foaf:givenName ?name ;
            owl:sameAs [ a :MentionInDatabase ; dbpedia-owl:familyRelation ""spouse of"" ; dbpedia:hasSpouse [ a :Person ; rdfs:label ""Bill Cullen"" ] ]
            .
  FILTER (regex(str(?name), ""Ann Sothern"")).
  geo:heightOf ?person ""20.116800000000001347""^^xsd:double ;
           geo:location ""Empire State Building, New York, United States"" .
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"SELECT ?bandMember
WHERE {
  ?song ""No Alternative"" .
  ?song rdfs:artist ?band .
  ?band a dbpedia-owl:BandOrGroup .
  ?band rdfs:member ?bandMember .
}",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"SELECT ?person ?birthPlace
{
  ?person a :Author .
  ?person rdfs:label ""El Deafo""@en .
  
  ?politician a :GovernorOfVirginia .
  ?politician foaf:name ""Virginia Governor's Name"" .

  ?recipient a :VinceGilliganAwardRecipient .
  ?recipient rdfs:label ""Vince Gilligan Award Winner's Name"" .

  ?birthPlace a :BirthPlace .
  ?person :borntIn ?birthPlace .
  ?politician :borntIn ?birthPlace .
  ?recipient :borntIn ?birthPlace
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?grandfather_name ?royalty_status WHERE {
  ?paternal_grandfather rdf:type [ rdfs:label ""royalty"" ] .
  ?paternal_grandfather rdf:type [ rdfs:label ""office holder"" ] .
  ?parent_of_yeshaq rdf:type [ rdfs:label ""monarchy"" ] .
  ?lamont_cranston_alter_ego foaf:alterEgo ?name .
  ?name a [ rdfs:label ""Lamont Cranston"" ] .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?parent WHERE {
  ?charles_I_father ns:father ?charles_Father.
  ?charles_Father ns:parent ?parent .
  ?parent a :royalty .
  ?sigismund_son ns:child ?wladyslaw_Jagiełło .
  ?wladyslaw_Jagiełło a :royalty .
  ?sigismund_predecessor ns:predecessor ?sigismund .
  ?sigismund_predecessor ns:child ?sigismund_Son .
  ?sigismund_Son a :royalty
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"SELECT ?office1 ?event WHERE {
  ?politician1 a dbpedia-owl:Politician; foaf:name ""Alberto Ruiz-Gallardón""@es.
  ?politician1 pw:partyMemberOf dbpedia:Partido_Popular_España.
  
  ?commander a dbpedia-owl:OfficeHolder; rdfs:label ?office_label.
  ?commander a foaf:Person; foaf:name ""Manuel Pinto da Costa""@pt.
  
  ?event a dbpedia:Event; rdfs:label ?event_label.
  ?event pw:ledBy ?commander.
  
  ?politician1 pw:resides ?residence.
  ?event rdf:type dbpedia:Military_conflict.
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","SELECT ?person
WHERE {
  ?person :birthPlace turin .
  ?person :nativeAdminOfAlexanderII true .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","SELECT ?bandmember WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:associatedBand ?band .
  ?band a dbpedia:MusicGroup .
  ?band foaf:name ""GS9"" .
  ?artist foaf:name ""Ackquille Jean Pollard"" .
  ?band dwc:isPartOfLocation dbpedia:New_York .
  ?award a dbpedia:Award ;
           dbpedia:awardee ?band .
  ?award dwc:locatedIn dbpedia:New_York
}",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","SELECT ?awardee ?war WHERE {
  ?awardee awardNumber ""25"" .
  ?awardee battle ""Alexander Lvovich Davydov"" .
  OPTIONAL { ?awardee birthPlace ?birthPlace }
  FILTER (lang(?birthPlace) = ""ru"")  # Assuming the birth place is in Russian language
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"SELECT ?admin ?leader ?manager ?player ?successor_season
WHERE {
    ?admin ns:country ""Germany"" .
    ?leader ns:office ""Chancellor of Germany"" .
    ?leader ns:name ""Helmut Kohl"" .
    ?manager ns:role ""Manager of SBV Vitesse"" .
    ?manager ns:givenName ""Robert"" .
    ?player ns:club ""Vitesse"" .
    ?player ns:season ""2020-21"" .
    ?successor_season ns:sportDiscipline ""Football"" .
    ?successor_season ns:seasonStartYear ""2007"" .
    ?manager ns:managedTeam ?player .
    ?player ns:club ?soccerClub .
    ?soccerClub a ns:owl:SportsClub .
    ?soccerClub rdfs:label ""Vitesse""
}
ORDER BY ?leader",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","SELECT ?birthplace
WHERE {
  ?person a :residentOf Sofia .
  ?person a :alumnusOf Пловдивски_университет_«Паисий_Хилендарски» .
  ?person foaf:birthplace ?birthplace
}",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?militaryForce1 ?awardeeName ?conflict
WHERE {
  ?militaryForce1 rdfs:label ""Military Force of Battle of Fort Royal"" .
  ?awardee rdfs:label ""Knight Commander of the Order of the Bath"" .
  ?conflict rdfs:label ""The Triple X's"" .
  ?awardee a dbpedia-owl:Person .
  ?militaryForce1 a dbpedia-owl:MilitaryConflict .
  ?conflict a dbpedia-owl:Event .
  ?awardee foaf:combatRole ?militaryForce1 .
  ?militaryForce1 ns:partOfEvent ?conflict
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","SELECT ?artist
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:has_role dbpedia:Actor ;
            rdfs:label ""Cynthia Ikponmwenosa Morgan""@en .
  ?movie a dbpedia:Film ;
           dbpedia:starring ?person ;
           dbpedia:actor ?artist .
  ?tv_show a dbpedia:TelevisionSeries ;
             dbpedia:stars ?person ;
             rdfs:label ""That's My Boy""@en .
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"SELECT ?actor WHERE {
  ?actor ns:film/ns:role ?movieRole .
  ?movieRole a ns:film_art/ns:motion_picture .
  ?actor ns:tv/ns:character ?alterEgo .
  ?movieRole ns:creator/ns:author ?smartbombAuthor .
  ?alterEgo IN (VALUES ?goldenMasterAlterEgo) ?alterEgoValue
}",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor
WHERE {
  ?actor a :Actor .
  ?actor rdfs:father [ owl:inverseOf dbpedia:child ] ?child .
  ?child a :Person .
  ?child dbo:spouse [ owl:inverseOf dbpedia:sibling_of ] ?spouse .
  ?spouse a :Actress .
  ?spouse dbpprop:starredInSomeWorkWith ""Mariclare Costello""
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?commander
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:parentOf ?archduke_joseph ;
            dbpedia:childOf ?ferdinand_II ;
            dbpedia:participatedInEvent dbpedia:Algerian_War .
  ?archduke_joseph a dbpedia:Person ;
               dbpedia:parentOf ?ferdinand_II .
  OPTIONAL { 
    ?commander rdfs:label ?tv_show_label . 
    ?tv_show_label a dbpedia:Television_Series
  }
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","SELECT ?musical_artist ?band_name WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1970-01-01"" ].
  ?musical_artist a dbpedia:MusicalArtist .
  ?artistName rdfs:label ?musical_artist ;
               dbpprop:bandMemberOf ?band .
  ?band a dbpedia:Band;
    dbpprop:leader ?clapton_member .
  ?clapton_member a dbpedia:Person;
    foaf:name ""Eric Clapton"" .
  ?kim_band a dbpedia:Band;
    rdfs:label ?kim_band_name .
  ?kim_wilson a dbpedia:Person;
    foaf:name ""Kim Wilson"" .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","SELECT ?bandMember
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:associatedBand ?band .
  ?band a dbpedia:MusicGroup ;
         dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""Burnt by the Sun"" .
  ?artist rdfs:label ""James Plotkin"" .
}",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?office ?partyLeader ?residence ?officeHolder
WHERE {
    ?mario_rajoy office ?office .
    ?office pw:leader ?partyLeader .
    ?partyLeader foaf:name ?partyLeaderName .
    ?residence rdfs:label ?residenceLabel .
    ?officeHolder dbpprop:memberOf ?party .
    ?officeHolder dwc:hasResidence ?residence .
    ?residence rdfs:label ?residenceLabel .
    ?officeHolder ew:role ""Member of the 2003 Madrid City Council"" .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?parent WHERE {
    ?child a ns:Person ;
            ns:hasParent ?parent ;
            ns:birthPlace ?birthPlace .
    ?birthPlace a ns:Region , ns:Country .
    ?parent ns:mARRIED_TO ?child's_sparql_parent .
    ?child ns:named ""Mary Elphinstone, Lady Elphinstone"" .
    ?birthPlace ns:named ""William Gayner's birthplace""
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"SELECT ?person WHERE {
  ?person a :childOf ?grandparent.
  ?grandparent a :fatherOf ?parent.
  ?parent a :parentOf ?archduke_joseph .
  ?archduke_joseph a n:brotherOf ?franz_ferdinand .
  ?person a :memberOf :2nd_Dragoon_Regiment; rdfs:label ""2nd Dragoon Regiment""@fr.
  ?person a :societal_event; rdfs:label ""Societal Event""@en.
  ?person a :event; rdfs:label ""Event""@en.
  ?person a :television_show; rdfs:label ""Television Show""@en.
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","The SPARQL query would look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentSpouse
WHERE {
  ?child dcterms:father ?father.
  ?father dbpedia:hasParent ?parent.
  ?parent a dbpedia:Noble; dbpedia:isRoyalty .
  ?parent dbpedia:spouse ?parentSpouse .
  ?child dbpedia:name ""Dorothea of Lorraine"" .
  ?father dbpedia:name ""Antoine, Duke of Lorraine"" .
}
```

This query starts by identifying Dorothea of Lorraine and her father Antoine. It then traces back to find the parents of Antoine, filtering for those who are both nobles and royals. Finally, it selects the spouse of that qualifying parent.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"The SPARQL query will need to find resources that link Janet Gaynor to specific movie titles. We can use the DBpedia endpoint to construct this query. Here's a possible SPARQL query:

```
PREFIX dbppro: <http://dbpedia.org/ontology/>

SELECT ?title WHERE {
  ?movie a dbppro:Film ;
            dbppro:starring ?actor .
  ?actor rdfs:label ""Janet Gaynor"" .
}
```

This query selects the titles of films (`?title`) where Janet Gaynor (`?actor`) starred. It assumes that there is an `dbppro:Film` class representing films and a property linking films to their stars.",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"SELECT ?party
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasDaughter [ a dbpedia:Person ; rdfs:label ""Sofía Petro"" ] ;
            foaf:name ?fatherName .
  ?person rdfs:label ?party.
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","SELECT ?artist WHERE {
  ?actor rdf:type dbpedia-owl:Person ;
            dbpprop:role ""Nick Curran"" .
  ?actor rdfs:label ""Adam Rodriguez"" .
  ?actor foaf:musicalArtist ?artist .
  ?artist a dbpedia-owl:MusicArtist ;
           dbpprop:leadSinger ?singer .
  ?singer rdfs:label ""Kim Wilson"" .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainCharacter ?role .
  ?role rdfs:label ""Rustlers' Rhapsody""@en .
  ?actor dbpedia:role ?role
}",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1985-01-01"" ].
  OPTIONAL { ?person dbpprop:musicalArtist ?musicalArtist }
  UNION
  SELECT ?birthName WHERE {
    ?person a dbpedia:Person;
      dbpedia:birthDate [ math:greaterThan ""1975-01-01"" ].
    ?person rdfs:label ?birthName .
  }
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"The SPARQL query will search for movies that have Iliza Shlesinger as an actor and confirm that they are indeed movies (works). Here's the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
           dbo:actor [ rdf:resource ""urn:uuid:<PRESIDIO_ANONYMIZED_UUID>"" ] .
  ?movie rdfs:label ?title .
  ?title strlang:contains ""Iliza Shlesinger"" .
}",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"SELECT ?member
WHERE {
  ?gs9 a dbpedia-owl:MusicalArtist ;
         dbpprop:bandMember ?member .
  ?member a dbpedia-owl:Person .
}",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1975-01-01"" ] ; # Assuming Nick Curran was born after 1975
  ?person rdfs:label ""Nick Curran"";
  ?band rdfs:label ""The Fabulous Thunderbirds"".
  ?musicalArtist a dbpedia:MusicalArtist .
  ?person rdf:type dbpedia:Musician .
  ?person rdfs:label ""Kim Wilson"" .
  ?musicalArtist ns:artistLabel ?musicalArtistLabel .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"SELECT ?leader ?officeHolder
WHERE {
    ?party psoe.
    ?leader a ns:people.person; foaf:name ?name .
    ?election galicianRegionalElection 2009.
    ?officeHolder officeOf ?election .
    ?officeHolder ns:people.person; foaf:name ?name .
    ?leader ns:people.person; foaf:member ?party .
}",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","To retrieve this information, we can use the following SPARQL queries:

1. **For the actor in the music video of ""What You Know"":**
```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/ontology/song> ?song ""What You Know"" .
  ?song <http://dbpedia.org/property/hasMusicVideo> ?video .
  ?video <http://dbpedia.org/property/hasActor> ?actor .
}
```

2. **For the actor in the movie ""Smartbomb"" written by Brooke Berman:**
```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Brooke_Berman> <http://dbpedia.org/property/wrote> <http://dbpedia.org/resource/Smartbomb> .
  <http://dbpedia.org/resource/Smartbomb> <http://dbpedia.org/property/haveActor> ?actor .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"SELECT ?person WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:father [ owl:propertyChainAxioms (owl:parent [ owl:propertyValue ""Saw Min Hla""]) ].
  ?person rdfs:spouse [ owl:propertyValue ""father of Myat Hpone Pyo"" ].
  ?person dbpedia:royalty .
  FILTER (xsd:date(?birthDate) < xsd:date(""YYYY-01-01"")) 
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?role1 ?role2 ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1915-01-01"" ].
  ?person rdfs:label ?name.
  ?person ns:artistMention ?role1.
  ?person ns:alterEgo ?role2.
  ?person ns:musicGenre ""Jazz"".
  ?band a dbpedia:MusicGroup;
    rdfs:label ?bandName.
  ?role1 a dbpedia:Profession;
    rdfs:label ?role1Label.
  ?role2 a dbpedia:Role; 
    rdfs:label ?role2Label.
  ?person ns:name ""Robert Lamar Thompson"".
}
ORDER BY ?name",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"SELECT ?name
WHERE {
  ?artist a dbpedia-owl:MusicArtist ;
            dbpprop:birthPlace ""Florida"".
  ?artist foaf:givenName ?name.
}",2,3,3,2,1,3,3,71,0,0,59,0,0.0,0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"SELECT ?player ?team
WHERE {
  ?player a dbpedia-owl:SoccerPlayer ;
            dbpedia-owl:birthDate ?sarmiento_birthday .
  ?manager a dbpedia-owl:SoccerManager ;
            dbpedia-owl:birthDate ?sarmiento_birthday .
  ?player foaf:memberOf [ a dbpedia-owl:FootballClub ; rdfs:label ?team ] .
  BIND(?sarmiento_birthday AS ?birthday)
}
WHERE {
  ?sarmiento dbpedia:birthDate ""1985-03-15"" # Example birthday date, replace with actual
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","SELECT ?party_member WHERE {
  ?landmark rdfs:label ""20.116800000000001347""^^xsd:double .
  ?ruling_party rdfs:label ?party_label .
  ?landmark ns:locatedIn ?location .
  ?location rdfs:member ?party_member .
  ?actor rdfs:name ""1,000 Dollars a Minute"" .
  ?actor ns:spouse ?spouse .
  ?spouse rdfs:label ?spouse_name .
  ?person rdfs:label ""Harriette Arlene Lake"" .
  ?spouse ns:parent ?person
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?award WHERE {
  ?award a ns:award .
  ?award rdfs:label ""New York"" .
  ?award ns:country ""United States"" .
  ?award ns:instanceOf ns:AmericanAward .
  ?award ns:locatedIn ns:NewYork
}",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?person ?parent
WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ?name .
  ?person foaf:parent ?parent .
  OPTIONAL { ?parent a dbpedia-owl:Person; rdfs:label ?parent_name }
  FILTER (REGEX(STR(?parent_name), ""Doon Arbus"") OR REGEX(STR(?parent_name), ""Eugène Cattin""))
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","SELECT ?artist_name ?band_name ?producer_name
WHERE {
  ?artist a dbpedia:Musician .
  ?artist rdfs:label ""Bob Thompson""@en .
  ?band a dbpedia:Band .
  ?artist dcterms:isPartOf ?band .
  ?producer a dbpedia:Person .
  ?producer rdfs:label ""Coke Studio Philippines""@en .
}",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"To find this information, we need to query the DBpedia dataset for actors associated with the TV series ""The Golden Master"" and specifically look for an actor who played Shelby Oaks. Additionally, we need to confirm if this actor has been credited with an alter ego role in the same series.

A possible SPARQL query could be:

```sparql
SELECT ?actor ?role1 ?role2 WHERE {
  ?actor rdfs:label ""Shelby Oaks""@en .
  ?actor dbpprop:actorInSeries ""The Golden Master"" .
  ?actor rdfs:label ?role1 .
  ?actor rdfs:label ?role2 .
  ?role1 = ""Shelby Oaks"" .
  ?role2 = ""Alter Ego"" .
}
```

This query looks for an actor labeled as ""Shelby Oaks"" who is also associated with the series ""The Golden Master"". It then checks if this actor has labels (""roles"") that match ""Shelby Oaks"" and ""Alter Ego"".",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","SELECT ?person
WHERE {
  ?person foaf:name ""Nicholas Michael Curran"".
  ?person dbpprop:occupation musical_artist .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?person rdfs:label ""Mariclare Costello""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:Person ;
    dbpedia2:hasParent ?parent .
  ?parent a dbpedia:Person ;
    rdfs:label ""Duke Anthony Ulrich of Brunswick"" .
  ?child rdfs:label ""royalty"" .
  ?parent rdfs:label ""Duke Anthony Ulrich of Brunswick""
}",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","SELECT ?predecessor
WHERE {
  ?child rdf:type foaf:Person .
  ?child rdfs:label ""Elisabeth Ludovika of Württemberg"" .
  ?child dbo:parent ?parent .
  ?parent a dbo:Person .
  ?predecessor dbo:parent ?parent .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Royalty .
  ?parent ns:familyName ""Louis"" .
  ?parent ns:mbox ""Charles Louis of Austria"" .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?warLabel ?tvShow
WHERE {
    ?war a dbpedia:War ;
           dbpedia:involvedMilitaryUnit ?dragoonRegiment .
    ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)"" .
    ?war rdfs:label ?warLabel .
    ?tvShow a dbpedia:Television_Series ;
            dbpedia:has_title ?tvShowTitle .
    ?tvShowTitle string-match ""*2nd Dragoon*"" .
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","SELECT ?author WHERE {
  ?work a dbpedia:Book;
    dbpprop:author ?author;
    dbpprop:country ""United States"".
  ?work rdfs:label ""Promise Me, Dad"".
  ?author foaf:name ""Joe Biden"".
}",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?admin
WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""Theodor Heuss"".
  ?countryAdmin a dbpedia:CountryAdmin.
  ?person ns:nationality ?countryAdmin.
  ?manager1 a dbpedia:FootballManager.
  ?team1 a dbpedia:SportsTeam.
  ?manager1 rdfs:label ?manager_name.
  ?team1 rdfs:label ?team_name.
  ?year 2020.
  ?manager1 ns:managedTeam ?team1.
  FILTER (lang(?manager_name) = ""nl"" || lang(?manager_name) = ""de"")
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace WHERE {
  ?actor dbpedia:name ""Alain Delon"" .
  ?actor dbpedia:deathDate ?deathDate .
  ?deathPlace rdf:type dbpedia:Location .
  ?actor dbpedia:residence ?deathPlace .
}",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"The SPARQL query will need to identify the relevant movies and then extract the producers. Here's how we might structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?producer 
WHERE {
  ?movie a rdf:Statement ;
            rdf:subject ?actor ;
            rdf:predicate mo:mainActor ;
            rdf:object ?janetGaynor .
  ?movie mo:filmTitle ""7th Heaven"" .
  ?movie mo:filmTitle ""Street Angel"" .
  ?producer rdfs:label ?company .
}
```

This query selects the producer (`?producer`) of movies (`?movie`) where Janet Gaynor was the main actor (`rdf:predicate mo:mainActor`) and the titles are ""7th Heaven"" and ""Street Angel"".",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birth_name ""Pacely"";
    dbpedia:occupation dbpedia:musician .
  ?person a dbpedia:Person;
    dbpedia:birth_name ""Joey B"";
    dbpedia:occupation dbpedia:musician .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor ?music_artist
WHERE {
  ?movie ""The Campus Queen"".
  ?actor rdfs:label ?actor_label .
  ?music_artist foaf:name ?music_artist_name .
  ?actor rdfs:seeAlso ?music_artist .
  ?music_artist a dbo:MusicArtist .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"SELECT ?mayor ?administration WHERE {
  ?mayor adminOf ?duchy .
  ?duchy label ""Duchy of Schleswig"" .
  ?christian9 adminOf ?denmark .
  ?denmark label ""Denmark"" .
  ?christian9 foaf:name ""Christian IX"" .
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?war WHERE {
  ?war a dbpedia-owl:War .
  ?war rdfs:label ""The Triple X's War""@en .
  ?war dc:subject [ owl:unionOf [ owl:ClassAssertion [ owl:individualsSameAs [""Wonder Woman""] ] ; owl:unionOf [ owl:ClassAssertion [ owl:individualsSameAs [""Batgirl (Barbara Gordon)""] ] ; owl:unionOf [ owl:ClassAssertion [ owl:individualsSameAs [""Supergirl""] ] ] ] ]
}",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?spouse_name ?boxer_birth_name
WHERE {
  ?carrie Johnson foaf:spouse ?spouse_name .
  ?john_boxer dbpprop:birthName ?boxer_birth_name .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","SELECT ?awardee WHERE {
    ?awardee a dbpedia-owl:Person.
    OPTIONAL { ?awardee rdfs:label ?name }
    FILTER (lang(?name) = ""en"") 
    AND (?awardee dc:title ?title)
    AND (
        ?awardee dc:date ""1985-12-25"" 
        OR ?awardee dc:date ""2010-10-10""
    )
}

AND
SELECT ?awardee WHERE {
    ?awardee a dbpedia-owl:Person.
    OPTIONAL { ?awardee rdfs:label ?name }
    FILTER (lang(?name) = ""en"") 
    AND (?awardee dc:title ?title)
    AND (
        ?awardee dc:date ""2010-10-10""
    )
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?producer WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ""Janet Gaynor"";
    dbpedia:yearOfRelease 1927.
  OPTIONAL { ?movie dbpedia:producer ?producer }
} 

AND {
  ?another_movie a dbpedia:Film;
    dbpedia:mainActor ""Tom Sawyer"" @en ;
    dbpedia:yearOfRelease 1938.
  OPTIONAL { ?another_movie dbpedia:producer ?producer }
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","SELECT ?entity WHERE {
  ?entity a ns:Person ; rdfs:label ?name .
  ?entity dbpprop:awardedNumber ""25"" .
  FILTER (lang(?name) = ""ru"")  # Search for a Russian name
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE {
  ?monarch Baeda Maryam I.
  ?monarch father ?father .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasBirthPlace ?birthPlace .
  ?person rdfs:label ""Vince Gilligan"" .
  ?person rdfs:label ""Cece Bell"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"The query will involve using DBpedia's resources to find the relevant information. We'll look for a resource that represents the movie ""High Society Blues"" and then extract the actor from that resource.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","SELECT ?child WHERE {
  ?parent a dbo:HolyRomanEmperor ;
            dbo:father ?grandparent .
  ?grandparent a dbo:Person ;
             rdfs:label ""Ferdinand II, Holy Roman Emperor"" .
  ?child a dbo:Person ;
         rdfs:label ""Ferdinand III, Holy Roman Emperor"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?awardee_name ?war_name ?birthplace
WHERE {
  ?awardee Medal ""Gillmore Medal"" .
  ?awardee battle ?war .
  ?war hasName ""Amasa Tracy"" .
  ?person deathDate ""1850-08-05"" .
  ?person a :Settlement .
  ?person nationality ""American"" .
  ?birthplace a :Settlement .
  ?person birthingPlace ?birthplace
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","SELECT ?war WHERE {
  ?recipient a dbpedia-owl:Person.
  ?recipient rdfs:label ?name.
  ?recipient foaf:based_near [ geo:point geo:coordinates ""34.0542 -79.9318"" ] .
  ?recipient dbpprop:awarded MedalOfHonor .
  ?recipient dbpprop:conflict ?war
}
LIMIT 1",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","SELECT ?commander
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:parentOf ?grandchild ;
            dbpedia:participatedIn dbpedia:Event_1938–1958_Algerian_War ;
            dbpedia:role dbpedia:Military_officer .
  ?grandchild a dbpedia:Person ;
             dbpedia:childOf ?parent1 ;
             dbpedia:childOf ?parent2 .
  ?parent1 a dbpedia:Ferdinand_II_Holy_Roman_Emperor .
  ?parent2 a dbpedia:Ferdinand_III_Holy_Roman_Emperor .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","SELECT ?commander_name ?successor_name ?ducas_work WHERE {
  ?commander rdf:type owl:Thing .
  ?commander rdfs:label ""Commander in Russo-Polish War (1654–1667)"" .
  ?commander foaf:name ?commander_name .
  ?ducas_work a dc:Work .
  ?ducas_work dc:author ?commander_name .
  OPTIONAL { ?commander rdf:type dbo:OfficeHolder }
  OPTIONAL { ?commander rdf:type dbo:Politician }
  ?successor rdf:type owl:Thing .
  ?successor rdfs:label ""Successor of ?commander_name"" .
  ?successor foaf:name ?successor_name .
  FILTER (LANG(?ducas_work) = ""en"")  # Assuming the work is in English
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?person ?force WHERE {
  ?person a dbpedia:Person;
    dbpedia:awarded [dbpedia:awardScheme ""Commander of the Order of the British Empire (CB)""];
  ?event a dbpedia:Event;
    dbpedia:instanceOf dbpedia:Battle;
    dbpedia:participatedIn ?person;
    dbpedia:name ""Sinking of Prince of Wales and Repulse""
  }
  ?event dbpedia:hasForce ?force
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","SELECT ?actor WHERE {
  ?actor a dbpedia:Actor;
  dbpedia:role_in_fictional_work dbpedia:The_Shadow_(video_game);
  dbpedia:actor_of_series ""Dispatches from Elsewhere""
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"The SPARQL query would be designed to find the spouse of the person named Maria from Bytom. Assuming Maria of Bytom refers to Maria Kutschera (a notable figure from Bytom), we can construct the following SPARQL query:

```sparql
SELECT ?spouse 
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasSpouse ?spouse .
  ?person rdfs:label ""Maria of Bytom""@en .
  ?person dbo:birthPlace ""Bytom, Poland"" .
}
```

This query searches for a person labeled as ""Maria of Bytom"" who has a spouse. It uses the properties `dbpedia-owl:Person` to ensure we're looking at a person entity and `dbo:birthPlace` to specify the birth place as Bytom, Poland.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?album ""The Live Anthology"" .
  ?album artist ?tupac .
  ?tupac ns:givenName ""Lesane Parish Crooks"" .
  ?tupac a n: musicalArtist .
  ?associated_artists a n:associatedWith ?tupac .
}",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:birthPlace [ geo:country ""Germany"" ] .
}",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","The SPARQL query will need to fetch information from the DBpedia dataset, specifically focusing on the pages of Prince Christian of Schleswig-Holstein-Sonderburg-Beck and Olaf I of Denmark. We'll use the `dbpedia-owl` namespace for more structured data.

```sparql
PREFIX dbpedia-owl: <http://www.dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?administration WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?person rdfs:seeAlso <http://dbpedia.org/page/Prince_Christian_of_Sleswig-Holstein-Sonderburg-Beck> .

  ?person a dbpedia-owl:Person ;
            rdfs:label ""Olaf I of Denmark""@en .
  ?person rdfs:seeAlso <http://dbpedia.org/page/Olaf_I_of_Denmark> .
}
```

This query will look for individuals labeled as Prince Christian and Olaf I in English, then follow the `rdfs:seeAlso` links to their respective pages where more detailed information might be available.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","SELECT ?person
WHERE {
  ?person dbpprop:birthDate ""1955-02-22"" .
  ?person rdf:type dbo:Athlete .
}",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"SELECT ?person
WHERE {
  ?child a :royalty .
  ?parent a :royalty .
  ?commander a :royalty .
  ?child rdfs:father ?father.
  ?father a :royalty .
  ?father rdfs:father ?grandfather_Baeda .
  ?grandfather_Baeda a :office_holder .
  ?child rdfs:parent ?parent .
  ?parent rdfs:child ?child_Baeda
}
WHERE {
  ?child_Baeda rdf:type :Commander
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  dbpedia2:Ackquille_Jean_Pollard rdfs:member dbpedia:GS9 .
  dbpedia:GS9 a dbpedia-owl:MusicBand .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"SELECT ?entity WHERE {
  ?entity a dbpedia-owl:Location .
  ?entity rdfs:label ""Kiyosu"" .
  FILTER (lang(?entity) = ""ja"")  # Ensure the label is in Japanese
  ?entity wdt:P856 wd:Q29598.  # Kiyosu is in the Japan Standard Time (JST)
}",3,3,4,3,1,3,2,20,0,0,8916,0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?actor ?actorLabel WHERE {
  ?actor a dbpedia-owl:Person ;
    dbpprop:parent ?parent ;
    dbr:start_year_of_activity ""Los Angeles"" .
  ?parent a dbpedia-owl:Person ;
    rdfs:label ""Amy Arbus""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"")  # Assuming we want the English name
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"SELECT ?commander ?successor ?role WHERE {
  ?commander a ns:https://www.wikidata.org/prop/direct/p31; P31 ns:https://www.wikidata.org/entity/person .
  ?commander rdfs:label ""Maximilian d'Havré""@de.
  ?commander ns:involvement/ns:start_date ""1593-01-01"" .
  ?successor a ns:https://www.wikidata.org/prop/direct/p31; P31 ns:https://www.wikidata.org/entity/person .
  ?successor rdfs:label ""Michał Kazimierz Pac""@pl.
  ?commander ns:involvement/ns:end_date ""1606-01-01"" .
  ?role a ns:https://www.wikidata.org/property/p164; p164 ""Grand Hetman of Lithuania"" .
  ?commander ns:involvement/ns:military_role ?role .
  ?successor ns:involvement/ns:military_successor ?commander
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"To retrieve this information, we can use a SPARQL query to search for the relevant data in DBpedia. Here's how the query would look:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor_name ?actor_death_place
WHERE {
  ?movie The Sky Ranger (1928 film) .
  ?actor dbpedia:role PlayedIn ?movie .
  ?actor dbpedia:deathPlace ?actor_death_place .
}
```

This query will find the actor who played in ""The Sky Ranger"" (1928 film) and their death place.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }",SELECT ?s WHERE { ?s a ns:FilmStudio . ?s ns:hasLocation ns:Mitaka },1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?actor ?place WHERE {
  ?actor a dbpedia-owl:Person.
  ?actor rdfs:label ""Jon Miller""@en .
  ?actor dbpprop:deathPlace ?place
} UNION {
  ?actor a dbpedia-owl:Person.
  ?actor rdfs:label ?unknownActorLabel@en .
  ?unknownActorLabel match(""Color Me Dead"" ) .
  ?actor dbpprop:deathPlace ?place
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:P31 wd:Q12263 .
  ?person rdfs:label ""Harriette Arlene Lake"" .
  ?person ns:spouse ?actor .
  ?actor a dbpedia:Actor ;
           dbpedia:P31 wd:Q13249 . # Chester Conklin's page ID
  ?actor foaf:name ""Chester Conklin"" .
  [TABLES dbpedia:political_parties; dbpedia:Political_ruling_parties_in_United_States] rdfs:label ""Central, Louisiana"" .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbo:Person ;
            dbo:birthPlace ?birthplace .
  ?person rdfs:label ""Ebrahim Alkazi""@en .
}",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","A SPARQL query to find this information could involve querying the DBpedia dataset for details about Cora Sue Collins and the works she was involved in. Here's a possible SPARQL query:

```sparql
SELECT ?workLabel ?producer 
WHERE {
  ?person rdf:type dbpedia-owl:Person.
  ?person rdfs:label ""Cora Sue Collins"".
  ?person dbpprop:occupation dbpprop:Acting.
  ?work rdf:type dbpedia-owl:Film.
  ?work rdfs:label ?workLabel.
  ?work dbpprop:producer ?producer.
  FILTER (?workLabel = ""Work Label of Cora Sue Collins' Claim to Fame"")
}
```

This query looks for a person named Cora Sue Collins, filters for those involved in acting, and then finds films (works) they were part of. It returns the label of the work and the producer of that work.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","SELECT ?birthplace WHERE {
    ?person a :Person ;
            dcterms:deathDate ""1850-08-05""^^xsd:date ;
            awardeeAward "":Gillmore Medal"" .
    ?birthplace a :Settlement ;
             :isInCountry ""United States"" .
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Maximilian I, Holy Roman Emperor"" .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"SELECT ?nickname 
WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team foaf:nickname ?nickname .
  FILTER (lang(?label) = ""en"")
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"SELECT ?profession
WHERE {
  ?person a dbpedia-owl:Actor ;
            foaf:name ""Shirley Stoler"" .
}",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"The SPARQL query will involve querying the DBpedia dataset for information about Christian IX and Olaf I, and then checking if there is any mention of them administering territory from Copenhagen. Here's how we might structure the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?monarch ?administration_territory WHERE {
  ?monarch a dbpedia:Monarch ;
             dbpedia:has_administration_territory ?administration_territory .
  ?administration_territory rdfs:label ""Copenhagen"" .
  ?monarch ns:name ""Christian IX of Denmark"" .
  ?monarch ns:name ""Olaf I of Denmark"" .
}
```

This query selects the monarchs and their administration territories where the territory is labeled as ""Copenhagen"". It filters for Christian IX and Olaf I by matching their names.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"SELECT ?person WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:hasParent ?grandparent ] .
  ?grandparent ns:parent [ ns:hasParent ?greatGrandparent ] .
  ?greatGrandparent ns:parent Béla IV of Hungary .
  ?child ns:childOf ?descendant .
  ?descendant ns:parent [ ns:hasParent ?spouseOfCharlesII ]
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?person WHERE {
  ?person a :disease.
  ?person a :societal_event.
  ?person rdfs:label ""William F. Halsey Jr."".
  ?person ns:author ""Back to Work"".
  ?person ns:sibling [ a foaf:Person; foaf:name ""Hillary Clinton"" ] .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"SELECT ?movie ?title WHERE {
  ?movie a :Film .
  ?movie cast member ?actor .
  ?actor name ""Richard E. Grant"" .
}",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?author WHERE {
  ?work a dbpedia-owl:WrittenWork, dbpedia-owl:Book ;
            dbpedia-owl:author ?author .
  ?work dbpedia-owl:isPrimaryBasedOnCreativeWork some dbpedia:Sentence;
            dbpedia-owl:subject ?clinton .
  ?clinton a owl:Person ;
            rdf:type owl:Thing ;
            dbpedia:office ""President of the United States"" .
  ?clinton rdfs:label ""Bill Clinton""@en .
  ?work dbpedia-owl:isAboutSocietyOrEvent some dbpedia:Event;
            dbpedia:aboutDbpediaUrl ""United States Navy event""@en .
  ?event a owl:Event .
  FILTER (lang(?event) = ""en"") .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"SELECT ?child WHERE {
  ?grandparent a ns:Person ;
               ns:father ?parent ;
               ns:mother ?grandmother .
  ?parent a ns:Person ;
         ns:sibling [ a ns:Person ; ns:name ""Archduchess Helena of Austria"" ] .
  ?child a ns:Person ;
        ns:child ?greatgrandchild .
  ?greatgrandchild a ns:Royalty
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent2 WHERE {
    ?child Victor Stanley (Royal Navy officer).
    ?child <http://purl.org/dc/elements/1.1/rel#parent> ?parent1.
    ?parent1 <http://purl.org/dc/elements/1.1/rel#parent> ?parent2.
    ?parent2 a politician .
    ?parent2 a officeHolder .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?spouse ?child WHERE {
  ?charles2 spouse ?spouse .
  ?marie_louise child ?child .
  ?stephen_v father ?stephen_father .
  ?ladislaus parent ?stephen_father
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","SELECT ?awardee
WHERE {
  ?award NobelPrizeInPhysics.
  ?award awardee ?awardeeName.
}",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"The SPARQL query to retrieve this information from DBpedia would involve querying for Max Born and his associated awards. Here's a possible SPARQL query:

```sparql
SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:awards ?award .
  ?person rdfs:label ""Max Born"" .
}
```

This query selects the `award` of any person named Max Born, assuming that there is a property `dbpedia2:awards` linking persons to their awards.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person ?profession
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:occupation ?profession .
  FILTER ( LANG(?profession) = ""fr"" )  # To ensure the profession is in French.
  OPTIONAL { ?person rdfs:label ?name }  # Optional to get the name of the person for clarity.
}",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"SELECT ?altEgo WHERE {
  ?subject a dbpedia:Character .
  ?subject rdfs:label ""The Shadow""@en .
  ?subject dbpprop:alterEgo ?altEgo
}
LIMIT 1",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"The SPARQL query will look for the spouse of Saw Shwe Khet in the DBpedia dataset. Assuming that Saw Shwe Khet is well-documented and has a corresponding entry, the query would be:

```sparql
SELECT ?spouse
WHERE {
  ?prince a np:Person;
    np:hasFather ?father;
    np:hasSpouse ?spouse.
  ?father rdfs:label ""Saw Shwe Khet"".
  ?spouse rdfs:label ""X"" . # Replace X with the actual spouse's name
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?role ?producer 
WHERE {
  ?movie a ns:film.
  ?movie title ""A Star Is Born (1937 film)"" .
  ?actor ns:role ?role .
  ?producer ns:produced ?movie .
  ?actor ns:appearedIn ?movie
  AND ?actor ns:hasName ""Cora Sue Collins"" 
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"SELECT ?party WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:memberOf dbpprop:PoliticalParty .
  ?person rdfs:label ""Gustavo Petro""@es;
    dbo:birthDate ""1960-07-21"" .
  ?person rdfs:label ""Roy Barreras""@es;
    dbo:birthDate ""1959-01-01"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"The SPARQL query will look for an entity with the property `birthPlace` set to ""India"". Here's the corresponding SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbo:Person ;
           dbo:birthPlace ""India"" .
}
```",1,1,2,1,1,2,2,9,0,0,8977,0,0.0,0
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child
WHERE {
  ?parent a ns:Person ;
            ns:hasChild ?child .
  ?parent ns:name ""Elvira of Castile"" .
  ?child ns:givenName ""John"" .
  OPTIONAL { ?child ns:familyName ""Borbón"" }
  UNION
  ?parent a ns:Person ;
            ns:hasChild ?child .
  ?parent ns:name ""Elvira of Castile"" .
  ?child ns:givenName ""Maria"" .
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"The SPARQL query will look for a movie with Herschel Bernardi as an actor and then retrieve the actor of that movie. We assume that each movie has a `movie` resource, actors are represented as `actor` properties, and Herschel Bernardi is identified by his DBpedia ID.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?movie a dbpedia-owl:Movie ;
            dbpedia-owl:hasActor ?actor .
  ?movie rdf:type dbpedia:P362 .
  ?movie dbpedia:star Herschel_Bernardi .
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","SELECT ?child WHERE {
  ?archduchess_sophie a ns:people.person;
    ns:mother ?mother .
  ?philipp_albrecht_duke_of_wurttemberg a ns:people.person;
    ns:father ?father .
  ?child a ns:people.person;
    ns:parent ?grandchild .
  ?grandchild a ns:people.person;
    ns:parent ?great_grandchild .
  ?great_grandchild a ns:people.person;
    ns:mother ?archduchess_sophie .
  ?child ns:child ?great_grandchild
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"SELECT ?office ?residence WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality [ dbpedia:country ""Spain"" ] .
  ?person rdfs:label ""Alberto Núñez Feijóo""@es.
  ?residence a dbpedia:Building;
    dbpedia:locatedIn [ dbpedia:country ""Spain"" ] .
  ?office a dbpedia:OfficeOrPosition;
    dbpedia:heldBy ?person
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"SELECT ?country WHERE {
  ?workCountryOfWork LaoShe.
  ?birthPlace ChangFamily.
  ?workCountryOfWork rdfs:label ""China"".
  ?birthPlace ns:city ""San Francisco"" .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?event ?description
WHERE {
  ?event a :SocietalEvent .
  ?event a :MilitaryConflict .
  ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  ?event ?description
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"The SPARQL query will use the `dbpedia-owl` namespace to search for individuals and their properties. We'll look for people with the given names who are alumni of Plovdiv University ""Paisii Hilendarski"" and then retrieve their birthplaces.

```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person ?birthplace
WHERE {
  ?person a dbpedia-owl:Alumnus ;
            dbpedia-owl:university_Proposal ""Plovdiv University \""Paisii Hilendarski\"""".
  ?person rdfs:label ?name.
  ?name = ""Paisii Hilendarski"" .
  OPTIONAL { ?person rdf:type dbpedia-owl:Person }
  OPTIONAL { ?person foaf:birthplace ?birthplace }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Royalty .
  ?person rdfs:label ""Siege of Padua"" .
  ?person foaf:name ?name
}
LIMIT 1",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"SELECT ?place WHERE {
  ?person a ns:Person ;
            ns:givenName ""David"" ;
            ns:familyName ""Luckman"" ;
            ns:birthLocation ?place .
}",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","The SPARQL query would need to:
1. Identify individuals related to Cecilia Renata and Eleonore of Austria.
2. Filter for those who are commanders of the 2nd Dragoon Regiment.
3. Check if these individuals have been involved in societal events, specific events, or television shows.

Given the complexity and the need for precise relationships, a simplified query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?commander a ns:Person ;
             ns:hasFather ?father_of_cecilia_eleonore ;
             ns:commands ns:2nd_Dragoon_Regiment .
  ?father_of_cecilia_eleonore a ns:Person ;
                       ns:hasDaughter ?cecilia_renata ;
                       ns:hasDaughter ?eleonore_of_austria .
  OPTIONAL { ?commander rdfs:label ?television_show . }
  OPTIONAL { ?commander ns:participatedInEvent ?societal_event . }
  OPTIONAL { ?commander ns:participatedInEvent ?specific_event . }
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"SELECT ?actor WHERE {
  ?movie a tv:television_series ;
    dc:title ""The Shadow"" .
  ?actor rdfs:label ""Richard E. Grant"" .
  ?movie dc:starring ?actor .
  ?movie wdt:P31 wd:tvo:The_Shadow .
  ?actor ns:altName ""The Shadow""@en
}",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","To find this information, we need to query the DBpedia dataset using a SPARQL query. We'll look for the main actor of the TV series ""Dispatches from Elsewhere"" and their role.

Here's the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor ?role
WHERE {
  ?series rdf:type dbpedia-owl:TVSeries .
  ?series rdfs:label ""Dispatches from Elsewhere"" .
  ?actor rdf:type dbpedia:Person .
  ?actor rdfs:label ?actorName .
  ?actor rdfs:role ?role .
  ?actorName = ""Actor Name""  # Replace with the actual actor name
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","SELECT ?war WHERE {
  ?war a ns:war .
  ?war ns:hasCombatant [ a ns:militaryUnit; ns:role ""navy"" ] .
  ?war ns:hasCause ""World War II"" .
  ?war ns:hasOutcome ""Naval battles"" .
  ?war ns:involvedInEvent [ a ns:societalEvent; ns:type ""conflict"" ] .
  FILTER ( ?war != ""Sinking of Prince of Wales and Repulse"" )
}",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ?name .
  ?person foaf:name ?name .
  FILTER (lang(?name) = ""en"")  # Assuming we are looking for names in English
}",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
    dbpedia-owl:hasSpouse ?saw_shwe_khet ;
    dbpedia-owl:hasChild ?child .
  ?saw_shwe_khet a dbpedia-owl:Person ;
    rdfs:label ""Saw Shwe Khet""@en .
  ?child a dbpedia-owl:Person ;
    rdfs:label ""Min Hla Htut""@en .
  FILTER (NOT EXISTS { 
    ?grandchild a dbpedia-owl:Person ;
      dbpedia-owl:hasChild ?child
  }) 
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","SELECT ?artist
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthDate ?birthdate ;
            dbpedia2:name ""Elorm Kabu Amenyah"" .
  ?person a dbpedia-owl:Person ;
            dbpedia2:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { 
    ?person rdfs:seeAlso ?artistProfile .
    ?artistProfile a dbpedia:Musician .
  }
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Politician .
  ?person a dbpedia-owl:OfficeHolder .
  ?person foaf:name ""Chappaqua, New York"" .
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","SELECT ?child WHERE {
  ?child a dbpedia:Person ;
            dbpedia:parentOf ?grandparent ;
            rdfs:label ""Lamont Cranston's child""@en .
  ?grandparent a dbpedia:Person ;
            rdfs:label ""Yeshaq I""@en .
}",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"A SPARQL query to retrieve this information from DBpedia might look like:

```
SELECT ?awardee ?birthplace
WHERE {
  ?awardee a skos:Concept .
  ?awardee rdfs:label ?awardeeLabel .
  ?awardee dbpprop:recipientOf ""Sangeet Natak Akademi Fellowship"" .
  ?awardee dbpprop:birthPlace ?birthplace
}
```

This query selects the concepts (which represent people in this context) and their birthplaces where the concept has the label 'Sangeet Natak Akademi Fellowship' and is associated with a property indicating they received the fellowship.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","The SPARQL query will involve querying the DBpedia dataset for individuals associated with music and bands. We'll look for Nicholas Michael Curran's musical artist connections and details about The Fabulous Thunderbirds including their real name and Eric Clapton's involvement.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?artist_name WHERE {
  ?person a dbpedia-owl:Musician;
           dbpedia-owl:realName ""Nicholas Michael Curran"" .
  ?band dbpedia-owl:hasBandMember ?member .
  ?member a dbpedia-owl:Person ;
            dbpedia-owl:givenName ""Eric"" ;
            dbpedia-owl:surname ""Clapton"" .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"To retrieve this information from DBpedia, we can construct a SPARQL query that looks for:
1. Individuals who have received the Quincy Adams Gillmore Award and their physical strength (if specified).
2. Individuals who have received the United States Congress Award and the wars they were involved in.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?strength ?war WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:hasAward [ a dbpedia:Award ;
                       rdfs:label ""Quincy Adams Gillmore Award"" ] .
  OPTIONAL { ?awardee rdfs:comment ?strength . }
  
  ?awardee2 a dbpedia:Person;
    dbpedia:hasAward [ a dbpedia:Award ;
                       rdfs:label ""United States Congress Award"" ] .
  OPTIONAL { ?awardee2 rdfs:comment ?war . }
}
```

This query will look for individuals who have received the specified awards and optionally retrieve comments that might contain information about their physical strength and the wars they were involved in.",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"SELECT ?country ?officeHolder ?residence WHERE {
    ?person a :TenantOf Santiago_de_Compostela .
    ?person ns:name ""Álvaro Quirós"" .
    ?officeHolder office:leader_of_election 2009 Galician_regional_election .
    ?officeHolder ns:name ""Alberto Núñez Feijóo"" .
    ?residence a :Country ; rdfs:label ?country .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?individual ?military_force WHERE {
  ?individual a :KnightCommanderOfTheOrderOfTheBath ;
            a :Event ;
            a :SocietalEvent ;
            rdfs:seeAlso <http://example.com/person-profile> .
  ?individual ns:commanded ?regiment .
  ?regiment a :Regiment ; 
           ns:name ""30th (Cambridgeshire) Regiment of Foot"" .
  ?regiment ns:participatedIn <http://example.com/battle-of-fort-royal> .
  ?individual ns:military_force ?military_force .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?author_name
WHERE {
  ?work a dbpedia-owl:WrittenWork ;
            dbpedia-owl:author ?author .
  ?author a dbpedia:OfficeHolder ;
           rdfs:label ""Korean Conflict"" .
  ?author rdfs:label ""Joe Biden"" .
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?awardee
WHERE {
  ?award Label ""Edmund Hakewill-Smith Award"" .
  ?award rdfs:recipient ?awardee .
  ?awardee foaf:name ?awardeeName
}",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"SELECT ?event WHERE {
  ?award rdf:type dbpedia-owl:KnightCommanderOfTheOrderOfTheBath .
  ?award rdfs:label ?awardLabel .
  ?award dbo:associatedEvent ?event .
}",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"SELECT ?bandMember ?associatedArtist
WHERE {
  ?bandMember a dbpedia:BandMember .
  ?bandMember dbpprop:isAssociatedWith dbpprop:MusicalArtist ?associatedArtist .
  ?associatedArtist a dbpedia:Musician .
}",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"The SPARQL query to retrieve the founding date of the Federal University of Paraíba from DBpedia would look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?universityName ?foundingDate
WHERE {
  ?university rdf:type dbpedia-owl:University .
  ?university dbpedia-owl:hasFoundationYear ?foundingDate .
  ?universityName rdfs:label ""Federal University of Paraíba""@pt.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","SELECT ?warLabel ?militaryForce WHERE {
  ?warLabel rdfs:label ""Battle of Crécy""@en .
  ?warLabel ns:commander [ a owl:NamedIndividual; foaf:name ""William Bayne"" ] .
  ?warLabel ns:militaryConflict [ a owl:Thing; rdfs:label ?militaryForceLabel ] .
  ?militaryForceLabel rdfs:label ""English Army""@en .
}",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"SELECT ?battle WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:participatedIn ?person .
  ?person a dbpedia:Person ;
           dbpedia:name ""Karl Gustav von Baggovut"" ;
           dbpedia:birthPlace ""Viborg, Sweden"" .
  ?battle rdfs:label ?label
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person bd:birthDate ""1945-03-30""^^xsd:date
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","The SPARQL query to retrieve this information from DBpedia would involve querying for the actor's name and their profession. Here's how you might structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?actor a rdf:Resource.
  ?actor rdfs:label ""Daniel Day-Lewis""@en .
  ?actor rdfs:role ""Actor"" .
}
```

This query selects resources (`?actor`) that are labeled ""Daniel Day-Lewis"" in English and have the role ""Actor"".",1,1,2,1,1,3,3,71,0,0,21580,0,0.0,0
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","SELECT ?parentClass
WHERE {
  ?awardee a dbpedia:Commander_of_the_Royal_Victorian_Order .
  ?parentClass rdfs:subClassOf ?awardee .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasFather ?parent .
  ?person rdfs:label ""Omar bin Faisal"" .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"SELECT ?parent WHERE {
  ?martin a ns:peoplePerson.
  ?martin ns:father ?parent .
  ?parent a ns:person.
  ?parent rdfs:label ""Martin of Aragon""@en
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","SELECT ?father WHERE {
  ?child a dbpedia:Person ;
    dbpedia:hasParent ?parent ;
    dbpedia:birthDate ""1574"" .
  ?parent a dbpedia:Person ;
    dbpedia:isFatherOf ?child .
  ?parent dbpedia:givenName ""Maximilian"" .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
            foaf:givenName ?givenName ;
            foaf:familyName ?familyName ;
            dct:birthPlace ""Bristol"" .
}
LIMIT 1",1,1,2,1,1,2,2,9,0,0,971,0,0.0,0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"The SPARQL query will need to:
1. Identify the administration led by Anxo Quintana.
2. Link this administration to the PSOE party.
3. Find an event involving Anxo Quintana.

Here is the constructed SPARQL query:

```sparql
SELECT ?adminLabel ?event WHERE {
  ?admin a ns:Adminstration; ns:leader ?quintana .
  ?quintana a ns:Person; foaf:name ""Anxo Quintana"" .
  ?admin ns:partyMember ns:Spanish_Socialist_Workers'_Party .
  ?quintana ns:participatedInEvent ?event
}
```

This query searches for an administration (`?admin`) led by Anxo Quintana (`?quintana`), links the administration to the PSOE party (`ns:partyMember ns:Spanish_Socialist_Workers'_Party`), and finds an event (`?event`) that `?quintana` participated in.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","SELECT ?admin WHERE {
  ?party psoe.
  ?party admin ?admin .
  ?admin foaf:name ?name
  FILTER(lang(?name) = ""es"")
}",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?parent WHERE {
  ?recipient awardee <http://dbpedia.org/property/awardedBy> ""Rodney Lees"" .
  ?recipient parents <http://dbpedia.org/ontology/hasParent> ?parent
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"SELECT ?awardee
WHERE {
  ?awardee a dbpedia-owl:Person ;
    dbpprop:ethnicity ""Japanese"" .
  ?awardee rdfs:label ?awardeeLabel .
  ?awardeeAward dbpprop:award ""Anita Borg Institute Women of Vision Awards"" .
  ?awardeeLabel rdfs:label ?awardLabel
}
ORDER BY ?awardLabel",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","SELECT ?ancestor
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           dbpedia:hasParent ?grandparent .
  ?parent ns:label ""Philipp Albrecht, Duke of Württemberg"" .
  ?grandparent ns:label ""Archduchess Margarete Sophie of Austria"" .
  ?ancestor a dbpedia:Person;
           dbpedia:hasAncestor ?child
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia2:hasChild ?child .
  ?parent rdfs:label ""Archduchess Margarete Sophie of Austria"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"SELECT ?author
WHERE {
  ?book rdf:type dbpprop:Book.
  ?book rdfs:label ""El Deafo"".
  ?author dbpprop:authorOf ?book.
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","SELECT ?commander ?war ?military_force ?societal_event ?award
WHERE {
  ?commander rdfs:label ""The Triple X's""@en .
  ?commander ns:serveInRole [ a owl:Ontology ; owl:intersectionOf ( [ owl:propertyChainAxioms ( [ owl:hasMember ?war ] ) ] ) ] .
  ?war a owl:Thing .
  ?war rdfs:label ""The War""@en .
  ?military_force a owl:Organization .
  ?war ns:partOf ?military_force .
  ?societal_event a owl:Event .
  ?war ns:hasRelatedEvent ?societal_event .
  ?commander ns:award ?award .
  ?award a [ owl:namedIndividual ?award_name ] .
  ?award_name rdfs:label ""Knight Commander of the Order of the Bath""@en
}",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","SELECT ?awardee
WHERE {
  ?award a s:Award ;
            s:name ""Sangeet Natak Akademi Fellowship"" .
  ?award rdfs:seeAlso <http://dbpedia.org/ontology/Award> .
  ?awardee a foaf:Person .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","A SPARQL query to retrieve this information from DBpedia could be constructed as follows:

```sparql
SELECT ?actor ?producer 
WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia-owl:productionCompany ""Production Company Name"";
    cast ?actor .
  ?actor rdfs:label ?actorName .
  ?producer rdfs:label ?producerName .
  FILTER (lang(?actorName) = ""en"" || lang(?producerName) = ""en"") 
}
```

This query selects the `actor` and `producer` associated with the film ""The Adventures of Tom Sawyer"" (1938), filtering for English names to match the context of the 1938 American production.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","SELECT ?parent ?grandparent
WHERE {
  ?x dbpprop:offices ?officeHolder .
  ?x dbpprop:isFatherOf ?father .
  ?father dbpprop:hasParent ?grandparent .
  ?grandparent a dbpprop:Royalty .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","SELECT ?place WHERE {
  ?alexanderII a ns:http://www.wikidata.org/prop/direct/person ;
                 wd:Q12345 .
  ?alexanderII ns:birthPlace ?place
}",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"SELECT ?album WHERE {
  ?artist a dbpedia-owl:MusicArtist ;
            dbpedia2:hasWork [ a dbpedia:MusicalWork ; dbpedia:workTitle ""Sappy"" ] .
  ?album a dbpedia:Album ;
          dbpedia2:hasRelease [ a dbpedia:AudioRelease ] .
}",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"The SPARQL query to retrieve the associated musical artist of ""Phantomsmasher"" from DBpedia would be:

```sparql
SELECT ?artist WHERE {
  ?work a dbpedia-owl:MusicAlbum ;
           dbpedia-owl:artist ?artist .
  ?work rdfs:label ""Phantomsmasher"".
}
```

This query searches for an album labeled ""Phantomsmasher"" and retrieves the artist associated with that album.",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?spouse a dbpedia:Person .
  ?spouse wdt:P31 ?child .
  ?child a dbpedia:Person ;
           wdt:E22 ?grandchild .
  ?grandchild a dbpedia:Person ;
               wdt:P29 ?parent
}",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"SELECT ?child2 WHERE {
  ?parent a dbpedia:Person;
  dbpedia:P31 ?child1 .
  ?child1 a dbpedia:Person;
  dbpedia:P31 ?child2
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?birthPlace .
  ?person rdfs:label ""Victor Saville""@en .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?spouse_name
WHERE {
  ?actor a dbpedia-owl:Actor;
    dbpedia:birthDate ?birth_date;
    dbpedia:s spouse ?spouse .
  ?actor rdfs:label ""Roger Pryor""@en.
  FILTER (lang(?birth_date) = ""en"")
}

SELECT ?birth_name
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia:birthName ?birth_name;
    rdfs:label ""Ann Sothern""@en .
  ?person rdfs:label ""Ann Sothern""@en.
  FILTER (lang(?birth_name) = ""en"")
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person;
  dbpedia:P31 wd:Q41291.
  ?person dbo:attendedSchool/University ?almaMater.
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","SELECT ?awardee ?award
WHERE {
  ?awardee a np:Person ;
            rdfs:label ?name .
  ?awardee np:nobel_prize_category ""Physics"" ;
            np:nobel_prize_year ?year .
  ?awardee foaf:name ?name .
  OPTIONAL { ?awardee ns:award ?award }
}
LIMIT 1",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"SELECT ?producer WHERE {
  ?producer a ns:Person ;
            rdfs:label ""Producer of Coke Studio Philippines""@en .
  ?bob_thompson a ns:MusicArtist ;
               foaf:name ""Bob Thompson"" ;
               rdfs:member ?producer .
}",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query to retrieve this information would look for a person named ""Glenn Youngkin"" and extract the property related to their birth place. Assuming that Glenn Youngkin has a corresponding entry in DBpedia with a `birthPlace` property, the query might resemble:

```sparql
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Glenn Youngkin""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor1 ?actor2
WHERE {
  ?actor1 ns:filmRole ?role1 .
  ?role1 rdfs:label ""Paradise (2013 film)"" .
  ?actor2 ns:filmRole ?role2 .
  ?role2 rdfs:label ""Always (1989 film)"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person a dbpedia:OfficeHolder .
  ?parent a dbpedia:Person ;
           rdfs:fatherOf ?person ;
           rdfs:label ""Yeshaq I""@en .
  ?alter_ego a dbpedia:FictionalCharacter ;
               rdfs:label ""The Shadow""@en .
  ?person rdfs:label ?name .
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor WHERE {
  ?movie a dbpedia:Film ;
            dbpedia:star ?actor .
  ?movie rdfs:label ""Some Movie Featuring Herschel Bernardi"" .
  ?movie dbpedia:starring Allan_Arbus
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?parent WHERE {
    ?child Edward Stanley.
    ?child :father ?parent .
    ?parent a pol:Politician; owlim:officeHolder .
    ?grandParent ?parent .
    ?grandParent a pol:Politician; owlim:officeHolder
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"SELECT ?office WHERE {
  ?x a ns:people.person.
  ?x foaf:name ""Anxo Quintana"".
  ?x rdfs:label ?office .
  OPTIONAL { ?x ns:officeHolder ?adminOffice }
  FILTER (lang(?office) = ""es"" )
}",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:father [ dbpedia:hasName ""Maximilian II, Holy Roman Emperor"" ] .
  ?person rdfs:child [ dbpedia:hasParent ?grandparent ] .
  ?grandparent a dbpedia:Person .
  ?grandparent rdfs:parent [ dbpedia:hasName ""Maximilian II, Holy Roman Emperor"" ] .
  ?person rdfs:brother [ dbpedia:hasName ""Maria Anna of Bavaria (born 1574)"" ] .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"SELECT ?parent_name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name .
  ?person rdfs:label ""Tisha Sterling"" .
}",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"SELECT ?office ?tenant
WHERE {
  ?person a dbpedia-owl:Person ;
            foaf:name ""Miguel Maura"" .
  ?city a dbpedia-owl:City ;
           rdfs:label ""Madrid"" .
  ?person ns:office ?office .
  ?city ns:hasTenant ?tenant
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasParent ?parent .
  ?person rdfs:label ""Kate Dimbleby"" .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?person a ns:Person ;
            rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?person ns:P father ?parent
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","SELECT ?name
WHERE {
  ?actor rdf:type dbpedia-owl:Actor .
  ?actor rdfs:label ""Bill Bixby"" .
  ?spouse a dbpedia-owl:Person .
  ?spouse rdfs:label ?name .
  ?actor ns:familyMember ?spouse
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"SELECT ?grandchildFather
WHERE {
  ?childOfBaedaMaryamI a nfo:Person ;
    rdfs:label ""Child of Baeda Maryam I"" .
  ?royaltyParent a nfo:Person ;
    rdfs:label ""Royalty parent of Yeshaq I"" .
  ?grandchild a nfo:Person ;
    rdfs:label ""Grandchild of the above"" ;
    dbpprop:father ?childOfBaedaMaryamI .
  ?grandchildFather a nfo:Person ;
    rdfs:label ""Father of the grandchild"" ;
    dbpprop:officeHolder true ;
    dbpprop:royalty true .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relationships between these individuals. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_of_minye_kyawswa 
WHERE {
  ?child_of_minye_kyawswa a rdf:Property;
    rdfs:domain ns:Person ;
    rdfs:range ns:Person .
  
  ?child_of_minye_kyawswa ns:parent [ 
    a ns:Person ;
    rdfs:label ""Minye Kyawswa"" ] .

  ?grandchild a rdf:Property;
    rdfs:domain ?child_of_minye_kyawswa ;
    rdfs:range ns:Person .

  ?grandchild ns:child [ 
    a ns:Person ;
    rdfs:label ""Saw Shwe Khet"" ] .
  
  ?child_of_minye_kyawswa ns:spouse [ 
    a ns:Person ;
    rdfs:label ""Saw Shwe Khet"" ] .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"The SPARQL query will look for the band ""Stone Sour"" and then extract its members. Here's how the query would be constructed:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?member
WHERE {
  ?band dbpedia-owl:hasMember ?member .
  ?band rdfs:label ""Stone Sour"" .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","The SPARQL query will need to search for George Ducas within the context of these criteria, specifically looking for information about his role in the Russo-Polish War, his successor position, and his association with the Battle of Vienna. Additionally, it should filter results to ensure that the person is both a politician and an office holder.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?royalty WHERE {
  ?child a :royalty .
  ?child :father ?parent .
  ?parent a :Person ;
         :name ""Saw Shwe Khet"" ;
         :title ?royalty_title .
  ?child :parent ?parent
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","SELECT ?person WHERE {
  ?person foaf:name ""Harriette Arlene Lake"" .
  ?person rdf:type rdfs:Resource .
  ?person ns:memberOf ns:RepublicanPartyUS .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"SELECT ?office ?country WHERE {
  ?quintana rdf:type <> .
  ?quintana foaf:name ""Anxo Quintana"" .
  ?quiros dwc:tenantOf ?country .
  ?country rdfs:label ?countryLabel
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"The SPARQL query to retrieve this information from DBpedia would involve querying for Bruno Retailleau and then filtering by the relevant property that indicates his political party. Assuming that the property for the political party is `foaf:memberOf` or a similar relation, the query might look like this:

```sparql
SELECT ?party
WHERE {
  ?person a dbpedia-owl:Person;
           dbpedia2:office ""President of the National Assembly of France"";
           foaf:name ""Bruno Retailleau"" .
  ?person rdfs:label ?party.
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Royalty ;
            dbpedia2:hasDaughter ?child .
  ?child rdfs:label ""Princess Aisha bint Faisal"" .
  ?parent rdfs:label ""King Faisal"" .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer
WHERE {
  ?film ""Storm in a Teacup"" .
  ?film wdt:PProdUCER ?producer .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?subject ?property ?object
WHERE {
  ?subject a :War .
  ?subject a :Television_Show .
  ?subject a :Societal_Event .
  ?subject rdfs:label ""Jean Baptiste, Comte d'Arco""@fr .
  ?subject ns:successor ?Pac .
  ?Pac a :Politician_and_Office_Holder .
  ?Pac rdfs:label ""Michał Kazimierz Pac""@pl .
  ?object a :Event .
  ?object a :Military_Conflict
}
ORDER BY ?subject",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","To find this information, we need to:
1. Identify the movie ""The Golden Master"".
2. Determine the actor who played Bruce Wayne/Batman in the Batman series.

Given that ""The Golden Master"" is not a widely recognized title for a Batman movie, it might be a specific episode or a less common reference. However, assuming it refers to a character aspect rather than a movie title, we can use DBpedia's information about Batman movies and actors.

A SPARQL query to find the actor who played Bruce Wayne/Batman in any Batman movie could look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia-owl:mainCharacter dbpedia:Batman.
  ?actor a dbpedia-owl:Actor .
  ?actor foaf:name ?actorName .
}
```

This query selects the name of any actor (`?actor`) who played the main character in a film where the main character is Batman (`dbpedia:Batman`).",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?manager_name ?manager_nationality ?player_name WHERE {
    ?manager rdf:type dbpedia:Manager .
    ?manager foaf:name ?manager_name .
    ?manager ns:nationality dbpedia:MentionedInDBPedia ""Germany"" .
    ?player rdf:type dbpedia:SportPerson .
    ?player foaf:wasManagedBy ?manager .
    ?player dbpedia:sportSpectatorSport ""Football"" .
    ?team rdfs:label ""VfL Bochum"" .
    ?season rdfs:label ""2006-07"" .
    ?team ns:season ""2006-07"" .
}",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","The SPARQL query would look for individuals who are both siblings of Yeshaq I and have a royal status. Assuming the dataset includes properties for sibling relationships (`sibling`) and royal status (`royalty`), the query could be constructed as follows:

```sparql
SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:P31 dbpedia:Royalty ;
            dbpedia:sibling ?yeshaq .
}
```

This query selects individuals (`?person`) who are both a `Person` (ensuring they are real-world entities), have the `Royalty` class (indicating they are royalty), and are siblings of Yeshaq I.",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?name1 ?artist1 WHERE {
  ?name1 ns:givenName ""Jason"" .
  ?name1 ns:familyName ""Barrow"" .
  ?name1 rdfs:type [ a owl:Class ; rdfs:label ""musical_artist"" ] .
  ?artist1 a rdf:Property .
  ?artist1 rdfs:domain [ a owl:Class ; rdfs:label ""person"" ] .
  ?name1 foaf:name ?artist1
}

AND

SELECT ?name2 ?artist2 WHERE {
  ?name2 ns:givenName ""Elorm"" .
  ?name2 ns:familyName ""Amenyah"" .
  ?name2 rdfs:type [ a owl:Class ; rdfs:label ""musical_artist"" ] .
  ?artist2 a rdf:Property .
  ?artist2 rdfs:domain [ a owl:Class ; rdfs:label ""person"" ] .
  ?name2 foaf:name ?artist2
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"SELECT ?actor
WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ?name .
  ?actor foaf:name ?realName .
  ?actor ns:film ""The Shadow"" .
  FILTER (regex(str(?name), ""the shadow"")) 
}",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"A SPARQL query would need to be constructed to search for this specific information within the DBpedia dataset. However, without direct access to DBpedia's structured data, a hypothetical query might look like:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?actor a ns:Actor ;
           ns:role ?role .
  ?role a ns:ComicsCharacter ;
         ns:name ""The Shadow"" .
  ?actor ns:appearedIn ?episode .
  ?episode rdfs:label ""Dispatches from Elsewhere"".
}
```

This query looks for an actor (`?actor`) who plays a role (`?role`) that is a comics character named ""The Shadow,"" and who appeared in the episode titled ""Dispatches from Elsewhere.""",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","The SPARQL query will look for the name of the place (which could be a city or district) ""Mitaka"" within the city ""Tokyo"". Here's how we can structure the query:

```sparql
SELECT ?name WHERE {
  ?place rdfs:label ""Mitaka""@en .
  ?place geo:location [ geo:point geo:latitude ""35.3681"" ; geo:longitude ""139.7454""] .
  ?city rdfs:label ""Tokyo""@en .
  ?place rdf:type owl:Thing .
  ?place ns:locatedIn ?city
}
```

This query selects the label (`?name`) of any entity that has ""Mitaka"" as its label in English, is located in a place with the label ""Tokyo"" in English, and is of type `owl:Thing` (which covers most relevant entities).",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"To find this information, we would need to query the DBpedia dataset for the producer's details. Assuming the producer's name is ""Chris Menges"", the SPARQL query might look like this:

```sparql
SELECT ?producerName ?birthPlace ?countryOfBirth
WHERE {
  ?producer a dbpedia-owl:FilmProducer ;
    rdfs:label ?producerName .
  ?birthPlace a dbpedia-owl:Location ;
    rdfs:label ?birthPlaceLabel .
  ?producer ns:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
    foaf:name ?parentName ;
    ns:hasChild ?producer .
  ?countryOfBirth a dbpedia-owl:Country ;
    rdfs:label ?countryLabel .
  ?birthPlace ns:locatedIn ?countryOfBirth
}
```

This query looks for the producer's name, their birth place, and the country of their birth. It connects the producer to their parent (likely their producer) and then traces back to find the country where the producer was born.",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"SELECT ?player_name ?nickname
WHERE {
  ?player rdf:type dbppro:Player .
  ?player rdfs:label ?player_name .
  ?player dbppro:club ?club .
  ?club rdfs:label ""Denis Kolodin"" .
}",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?parent a dbpedia:ParentOf ?child .
  ?child a dbpedia:ChildOf ?grandchild .
  ?grandchild a dbpedia:SpouseOf ?spouse_of_saw_shwe_khet .
  ?spouse_of_saw_shwe_khet a dbpedia:SpouseOf ?saw_shwe_khet
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?manager ?birthplace
WHERE {
  ?manager a dbpedia-owl:Manager ;
            dbpprop:club VfL Bochum .
  ?manager ns:birthPlace dbo:Germany.
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?spouse
WHERE {
  ?actor rdfs:label ""Laurel Hardy"".
  ?actor dbpprop:film ""The Flying Deuces"" .
  ?actor foaf:spouse ?spouse .
}",3,4,4,3,1,3,3,71,0,0,62,0,0.0,0
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?royalty_spouse ?royalty_child ?grandchild
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?father ;
            dbpedia:isSpouseOf ?royalty_spouse .
  ?father a dbpedia:Person ;
           dbpedia:hasChild ?child_of_saw_shwe_khet .
  ?child_of_saw_shwe_khet a dbpedia:Person ;
                    dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person ;
               dbpedia:isRoyalty
  FILTER ( ?child_of_saw_shwe_khet = ?royalty_child )
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"The SPARQL query will use the DBpedia dataset which contains structured data about various entities including people and their associated information such as political parties. The general structure of the query would be:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person ?party
WHERE {
  ?person a dbpedia-owl:Politician ;
            dbpedia-owl:office_holding [ rdf:value ?office ] .
  OPTIONAL { ?office rdfs:label ?office_label . }
  ?office_label rdfs:label STRING LIKE ""%Parti%""
}
```

This query selects individuals (`?person`) and their political parties (`?party`) where the individual is a politician and holds an office (`?office`). It also filters offices that contain the string ""Parti"" to infer the party name.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?character ns:altName ""The Shadow"" .
  ?character rdfs:label ?alterEgo
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""George H. Cameron""@en .
  ?person dbpprop:awardedWith ?award .
}",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person WHERE {
  ?person a dbppro:Person;
    dbppro:fieldOfStudy ?field .
  ?field rdfs:label ""Your Specific Field"" .
}",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person;
    dbpprop:awardeeRole dbpedia:LaureateFellow ;
    dbpprop:country ""Australia"" .
  ?person dbpprop:residencePlace [ geo:locatedIn dbpedia:Andhra Pradesh ] .
  ?person dbo:almaMater ?almaMater
}",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?warLabel WHERE {
  ?war a ns:war .
  ?war ns:hasCombatant [ ns:predicate ""Royal Navy (United Kingdom)"" ] .
  ?warLabel rdfs:label ?warLabel .
}",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"SELECT ?person
WHERE {
    ?person a :Person ;
            :nativeCountry :Russian_Empire ;
            :decedentIn :Switzerland .
}",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
    ?child a ns:royalty .
    ?child ns:father ?parent .
    ?parent ns:parent ""Yeshaq I"" .
    ?child ns:child ?grandchild .
    ?grandchild ns:parent ""Baeda Maryam I""
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?child WHERE {
  ?child a ns:people.person; rdfs:label ""Na'od""@en.
  ?child ns:father ?grandfather.
  ?grandfather a ns:people.person; rdfs:label ""Dawit I""@en.
  OPTIONAL { ?child ns:officeHolder ?office . }
  FILTER (lang(?child) = ""en"" )
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"SELECT ?successor ?showTitle ?eventTitle
WHERE {
  ?successor a :CommanderInWar ;
              :succeededBy ?nextCommander ;
              :participatedInBattle ""Battle of Vienna"" .
  ?showTitle a :TelevisionShow ;
               :title ?showTitle .
  ?eventTitle a :SocietalEvent ;
                 :description ""Military event related to the Battle of Vienna"" .
  ?successor rdfs:label ?showTitle .
  ?successor rdfs:label ?eventTitle .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"SELECT ?office1 ?office2 WHERE {
  ?politician1 a ns:people.person; rdfs:label ""Miguel Maura""@en.
  ?politician1 ns:office ?office1 .
  ?politician2 a ns:people.person; rdfs:label ""Mariano Rajoy""@en.
  ?politician2 ns:office ?office2 .
  ?office1 ns:polski_kraj ""Madrid""@en.
  ?politician1 ns:party_member_of/ns:political_party MemberOf ?party.
  ?politician2 ns:party_member_of/ns:political_party MemberOf ?party.
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?subject ?property WHERE {
  ?subject ns:firstName ""Dawid"" .
  ?subject ns:lastName ""Olejniczak"" .
  ?subject rdfs:label ""Poland"" . # Assuming Dawid Olejniczak is from Poland
  ?subject ns:residence ?country_of_residence .
  ?country_of_residence rdfs:label ""Poland"" .
  ?subject ns:conflict ""French Revolutionary Wars"" .
  ?conflictCombatant ""France"" .
  ?conflictCommander ""Napoleon Bonaparte"" .
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?spouse_of_saw_shwe_khet ?predecessor_of_myat_hpone_pyo
WHERE {
  ?person a dbpedia:Person;
    dbpedia2:hasSpouse ?spouse_of_saw_shwe_khet .
  ?person2 a dbpedia:Person;
    dbpedia2:precededBy ?predecessor_of_myat_hpone_pyo .
  ?person rdf:type dbo:SawShweKhet .
  ?person2 rdf:type dbo:MyatHponePyo .
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?child WHERE {
  ?child a ns:peoplePerson .
  ?child ns:hasParent [ ns:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"" ] .
  ?child ns:birthPlace ""Middlesex"" .
  ?parent/ns:hasChild ?child
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?yeshaq I a ottoman_sultan .
  ?yeshaq I parent ?parent .
  ?parent a owl:Class; rdfs:label ""royalty""@en .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","SELECT ?person WHERE {
  ?person ns:name ""Harriette Arlene Lake"" .
  ?actor a dbpedia-owl:Actor .
  ?movie a dbpedia:Film .
  ?movieproducer db:producer ""Nat Levine"" .
  ?spouse ns:spouses/ns:fiancees ?actor .
  ?rulingParty a dbpedia:PoliticalParty .
  ?rulingParty foaf:member ?spouse
  AND ?rulingParty schema:headquarter ""Central, Louisiana""
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","SELECT ?timeZoneName WHERE {
  ?place mitaka, japan.
  ?place wdt:P421 wd:Q40999.
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?award ?host WHERE {
  ?award rdfs:label ""Max Planck Award""@de.
  ?award dbo:awardee ""Max Born"" .
  ?host a dbpedia-owl:EducationalInstitution .
  ?award dbo:awardedBy ?host
} UNION {
  ?award rdfs:label ""Nobel Prize in Physics"" .
  ?award dbo:awardee ""Rainer Weiss"" .
  ?host a dbpedia-owl:EducationalInstitution .
  ?award dbo:awardedBy ?host
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"SELECT ?manager ?team ?season ?country
WHERE {
  ?thomasLetsch a ns:people.person;
    ns:microformat:name ""Thomas Letsch"" .
  ?vflBochum a ns:sportclub;
    ns:homeGround ""Schlossgartenstadion"";
    ns:managedBy ?manager .
  ?manager a ns:people.person;
    ns:microformat:name ?managerName .
  ?thomasLetsch ns:hasManager ?manager .
  ?vflBochum ns:season ?soccerClubSeason .
  ?soccerClubSeason a ns:sportEvent;
    ns:type ""football championship"" .
  ?soccerClubSeason ns:occurredInYear ?year .
  ?year ns:isPartOf ?sportsSeason .
  ?sportsSeason a ns:sportSeason;
    ns:type ""soccer season"" .
  ?sportsSeason ns:occurredInYear ?year .
  ?year ns:isPartOf ?sportsTeamSeason .
  ?sportsTeamSeason a ns:sportTeamSeason;
    ns:type ""football team season"" .
  ?sportsTeamSeason ns:hasMember ?thomasLetsch .
  ?country ns:administers ?theodor_heuss .
  ?theodor_heuss ns:name ""Theodor Heuss""
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"The SPARQL query will search for the album ""Lasso the Moon"" and check its properties to see if it is classified as both a film (using `type` property with value 'Film') and a work (using `isBasedOnWork` property with a valid URI).",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"SELECT ?place WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:birthPlace ?place .
  ?place a dbpedia-owl:Settlement ;
    dbpprop:country dbpedia:United_States_of_America .
  ?person rdfs:label ""Henry Clay Lewis""@en .
}

AND
SELECT ?force ?war WHERE {
  ?recipient a dbpedia-owl:Person;
    dbpprop:awardedMedal [ owl:propertyValue ""Gillmore Medal"" ] .
  ?recipient rdfs:label ""Recipient of Gillmore Medal""@en .
  ?recipient rdfs:member ?unit .
  ?unit a dbpedia-owl:MilitaryUnit ;
    dbpprop:participatedInWar ?war .
  ?war a dbpedia:Conflict;
    dbpprop:startYear 1899;
    dbpprop:endYear 1902 .
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"SELECT ?artist WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Pacely""@en .
  ?person rdfs:label ?artist .
}",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?country
WHERE {
  ?citizen a dbpedia:Person;
    foaf:nationality dbpedia:Spanish_Spain ;
    dbpedia:residence ?country
}
LIMIT 1",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?spouse
WHERE {
  ?actor a ns:film.actor .
  ?actor ns:role ?role_in_always .
  ?actor ns:role ?role_with_iliza .
  ?spouse a ns:people.person .
  ?actor ns:hasSpouse ?spouse .
  ?spouse ns:mbox_sha1sum ""some_sha1_hash_of_spouse_email_address""
}",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"The SPARQL query will involve querying the DBpedia dataset to find albums associated with T.I., then filtering those albums to find ones where T.I. has acted in a song or musical work role. Here's how the query might look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?album WHERE {
  ?album a rdf:Statement ;
           rdf:subject ?artist ;
           rdf:predicate dbpedia-owl:role_in_work ;
           rdf:object ?work .
  
  ?work a owl:Thing ;
         rdfs:label ""T.I. song and musical work""@en .

  ?artist ns:name ""Clifford Harris"" .
}
```

This query selects the album (`?album`) where T.I. (represented by `?artist`) has a role in a work (`?work`) that is labeled as both a ""T.I. song and musical work"" in English (`rdfs:label ""T.I. song and musical work""@en`).",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"SELECT ?entity WHERE {
  ?entity a dbpedia-owl:JapaneseWarlord .
  ?hashiba a dbpedia:hasBattleOf ""Hashiba_Hidekatsu"" .
  ?toyotomi a dbpedia:hasBattleOf ""Toyotomi_Hidenaga"" .
  ?hashiba ns:involvesMilitaryConflict ?war .
  ?toyotomi ns:involvesMilitaryConflict ?war
}",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","SELECT ?person ?awardLabel ?regionLabel ?bandLabel
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace [ a dbpedia:Location ; dbpedia:name ""New York""] .
  ?award a dbpedia:Award ;
            dbpedia:awardee ?person .
  ?award dbpedia:awardedTo ?band .
  ?band a dbpedia:Band .
  ?regionLabel a dbpedia:Region ;
               dbpedia:name ""New York"" .
}",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"SELECT ?artist
WHERE {
  ?artist a :musical_artist .
  ?artist foaf:wasBornIn [ geo:country ""Florida"" ] .
  ?award a :region, :American, :state, :settlement .
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?artist rdfs:agent ?award .
}",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"SELECT ?artist WHERE {
  ?producer rdf:type dbpprop:Organization .
  ?song rdf:type dbpprop:MusicSingle .
  ?producer rdfs:label ""Jeff Buckley"" .
  ?song rdfs:title ""Lotus"" .
  ?artist a dbpprop:MusicalArtist .
  ?producer dbo:associatedWith ?artist .
}",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"The SPARQL query will involve:
1. Finding the books authored by Hillary Clinton.
2. Checking if these books are both books (type `Book`) and written works (which can be inferred by being of type `CreativeWork`).
3. Verifying if the author of these books is a politician (having a `politician` property) and an office holder (having an `officeHolder` property).

Here's the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?author ?spouse
WHERE {
  ?work a dbpedia-owl:Book;
    dbpedia-owl:writtenWork ;
    rdf:type dbpedia:Pseudonym .
  
  ?author rdfs:author ?work .
  
  ?author a dbpedia-owl:OfficeHolder ;
    dbpedia-owl:politician .
  
  ?author foaf:spouse ?spouse .
}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?grandfather
WHERE {
  ?child yeshaq_I .
  ?child baeda_maryam_I .
  ?parent_of_child rdfs:father ?paternal_father .
  ?paternal_father rdfs:father ?grandfather .
  ?grandfather a owl:Class[""royalty""^^xsd:string] .
  ?grandfather a owl:Class[""office_holder""^^xsd:string] .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:givenName ""David"" ;
            dbpedia-owl:surname ""Paton"" .
  ?person rdfs:seeAlso <http://www.davidpatonmusic.com/> .
  ?artist a dbpedia-owl:MusicArtist .
  ?person rdf:type <> .
}",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","The SPARQL query will involve:
1. Finding movies where Afeez Oyetoro (using his DBpedia ID) acted.
2. From those movies, identifying the musical artists associated with them.
3. Checking if one of these artists is Cynthia Morgan (using her DBpedia ID).

Here's the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?actor ?movieTitle ?musicArtist 
WHERE {
  ?actor dbpprop:starredIn ?movie .
  ?movie a dbpedia-owl:Movie ;
          dbpprop:hasMusicBy ?musicArtist .
  ?musicArtist rdfs:label ""Cynthia Morgan"" .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","The SPARQL query would need to traverse the familial relationships in the DBpedia dataset. Here's a conceptual breakdown of how the query might look:

1. Start from Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.
2. Retrieve his parents (who are Queen Elizabeth The Queen Mother and Prince Henry, Duke of Gloucester).
3. From Queen Elizabeth The Queen Mother, retrieve her parents (George V and Mary of Teck).
4. From George V, trace back to his parents (Edward VII and Alexandra of Denmark).

Combining these steps into a SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?child rb:hasParent ?parent .
  ?parent rb:hasParent ?grandparent .
  ?child rdf:type dbpedia-owl:Person .
  ?child rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?parent rdfs:label ""Elizabeth Bowes-Lyon""@en .
  ?parent rb:hasParent ?grandparent .
}
```

This query starts from Patrick Bowes-Lyon, looks for his parents (Queen Elizabeth The Queen Mother and Prince Henry, Duke of Gloucester), then traces back to their parents to find Mary Elphinstone.",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","SELECT ?person WHERE {
  ?person a :Person ;
            foaf:name ""Ann Sothern"" ;
            foaf:marriagePartner ?spouse .
  ?spouse a :Person;
           rdfs:label ""Roger Pryor""@en .
  FILTER (STR(?elevation) = ""20.116800000000001347"") .
  OPTIONAL { ?person rdfs:label ?birthName . }
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","SELECT ?birthplace
WHERE {
    ?person a dbpedia:Person;
        dbpedia:P31 ?date_of_death .
    ?date_of_death rdfs:label ""1850-08-05"" .
    ?person dbpedia:birthPlace ?birthplace .
    ?birthplace a dbpedia:SpatialThing;
        dbpedia:locatedIn dbpedia:United_States .
}",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","SELECT ?predecessor
WHERE {
  ?politician a dbpedia-owl:Person ;
               dbpprop:birthDate ?birthDate ;
               dbpprop:deathDate ?deathDate .
  ?politician rdfs:label ""Ada Jane Low"" .
  ?politician dbpprop:officeHolderOffice ?office .
  ?predecessor a dbpedia-owl:Person;
               dbpprop:officeHolderOffice ?office .
  FILTER (STR(?birthDate) = ""Melbourne"") .
  FILTER (STR(?deathDate) = ""Melbourne"")
}
ORDER BY DESC(?politician birthDate)",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","SELECT ?person WHERE {
  ?parent a dbpedia:Archduke ;
            rdfs:child ?child .
  ?child a dbpedia:Royalty .
  ?child rdfs:child ?grandchild .
  ?grandchild a dbpedia:Person
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:spouse [ dbpedia:familyRelation ""wife of"" ] ; # Hillary Clinton
            rdfs:label ""Bill Clinton""@en .
  ?person rdfs:label ""Joseph W. Lopez""@en . # Commander in Third Taiwan Strait Crisis
  ?person rdfs:label ""Bill Clinton""@en . # Author of a book
}",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?actor ?producer WHERE {
  ?actor rdfs:label ""Actor's Name"" .
  ?actor foaf:role ""Kent Allard (print)"" .
  ?movie rdfs:title ""High Society Blues"" .
  ?movie dc:creator ?producer .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","SELECT ?parent WHERE {
  ?child philip:father ?parent .
  ?parent rdfs:label ""Leopold von Hohenzollern-Sigmaringen""@en .
  ?parent a dbo:Royalty
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"SELECT ?bandLabel WHERE {
  ?band rdfs:label ?bandLabel .
  ?kimWilson rdf:type dbpedia-owl:Musician.
  ?kimWilson foaf:member ?band .
  ?nickCurran rdf:type dbpedia-owl:Musician.
  ?nickCurran foaf:member ?band .
  ?fabulousThunderbirds a dbpedia-owl:Band.
  ?fabulousThunderbirds foaf:member ?kimWilson .
  FILTER (LANG(?bandLabel) = ""en"")  # restrict to English language labels
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
  ?person a ns:Person ;
            ns:hasParent ?parent ;
            ns:alumniOf ns:EtonCollege ;
            ns:childOf ?grandchild .
  ?grandchild a ns:Person ;
             ns:name ""Edward Stanley, 17th Earl of Derby"" .
  ?parent a ns:Person ;
           ns:name ""George Stanley, 6th Earl of Derby"" .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","SELECT ?royalty WHERE {
  ?royalty a dbpedia-owl:Person ;
    dbpedia-owl:isParentOf ?commander .
  ?commander a dbpedia:HistoricalFigure;
    dbpprop:participatedInEvent dbpedia:Event:Mukha_Siege_1916 .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" .
  }
}",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"The SPARQL query to find the birthplace of Yandamuri Veerendranath would involve querying for his `birthPlace` property. Assuming that such a property exists and is represented in the DBpedia dataset, the query might look something like this:

```
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?birthPlace
WHERE {
  ?person a dbpprop:Person ;
            dbpprop:birthPlace ?birthPlace .
  ?person rdfs:label ""Yandamuri Veerendranath""@en .
}
```

This query selects the `birthPlace` of any person labeled as ""Yandamuri Veerendranath"" in English.",2,2,3,2,1,2,2,9,0,0,166,0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?actor WHERE {
  ?movie a :film.
  ?movie rdfs:isBasedUpon <http://example.com/television_shows#episode>.
  ?actor foaf:name ""Richard Grant Esterhuysen"" .
  ?actor a :actor.
  FILTER (lang(?actor) = ""en"")  # Assuming English names
}",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","SELECT ?parent WHERE {
  ?actor parents ?parent .
  ?actor a <http://purl.org/dc/elements/1.1/>Actor .
  ?movie a <http://dbpedia.org/ontology/movie> .
  ?movie star ?actor .
  FILTER (fn:contains(?movie, ""The Godfather Part II"")) .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"SELECT ?member
WHERE {
  ?party rdfs:label ""Republican Party (United States)"" .
  ?party foaf:members ?member .
}",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"SELECT ?war WHERE {
  ?recipient a ns:people.person;
    ns:givenName ""Quincy"";
    ns:familyName ""Adams"";
    ns:militaryBranch ns:militaryPerson;
    ns:rank ns:militaryRank .
  ?recipient ns:participatedIn/ns:engagedIn ?war
}",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"The SPARQL query would look for an entity with the name ""Shirley Stoler"", identify her as having a profession related to acting (since she was an actress), and then find any children associated with her. Here's how the query might be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia-owl:hasProfession dbpedia:P31 ; # Assuming ""P31"" represents acting profession
    rdfs:label ""Shirley Stoler""@en .
  ?person dbpedia-owl:hasChild ?child .
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","SELECT ?child WHERE {
  ?child a ns:Person ;
           rdfs:label ""Child Name"" .
  ?child ns:parent [ a ns:Person ; ns:firstName ""Roger"" ; ns:lastName ""III"" ] .
  ?child ns:parent [ a ns:Person ; ns:firstName ""Elvira"" ; ns:lastName ""of Castile"" ] .
  ?child ns:offices [ a ns:OfficeHolder; ns:office ""Royalty"" ] .
  ?child ns:parent [ a ns:Person ; ns:firstName ""William"" ; ns:lastName ""I"" ] .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","SELECT ?territory WHERE {
  ?death_place dcterms:isPartOf ?region .
  ?birth_place rdfs:label ""Glucksburg, Schleswig-Holstein"" .
  ?royalty rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  ?region rdfs:label ?territory .
  FILTER (lang(?birth_place) = ""de"") .
  FILTER (lang(?death_place) = ""da"")
}",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1873-01-05"" ];
    dbpedia:title ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"";
    rdfs:label LIKE ""%Christian%"" .
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","SELECT ?administrationTenant ?countryOfResidence
WHERE {
  ?party PSOE.
  ?partyAdminTenant ?administrationTenant .
  ?spanishCitizen sp:nationality ""Spanish"".
  ?spanishCitizen foaf:residence ?countryOfResidence .
  ?countryOfResidence rdfs:label ""Spain"" .
}",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:NobleTitle ;
            dbpedia-owl:holder ""Duchess Luise of Brunswick-Wolfenbüttel"".
  ?person wdt:P31 _:r .
  _:r a dbpedia:Person .
  ?spouse a dbpedia:NobleTitle
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"SELECT ?deathPlace WHERE {
    ?person a dbo:Person;
        rdfs:label ?name .
    ?person dbpprop:deathPlace ?deathPlace .
    FILTER ( (?name = ""Bill Shirley"") )
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"SELECT ?institution ?entity WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:office dbpedia:Secretary_of_State_of_Georgia .
  ?person rdfs:label ""Brian Kemp"" .
  ?institution rdfs:label ?institutionLabel .
  ?entity rdfs:label ?entityLabel .
  ?institutionLabel rdfs:domain dbpedia:United_States .
  ?entityLabel rdfs:domain dbpedia:States_of_the_United_States
}",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:SportsManager .
  ?person dbpprop:birthday ""1968-08-26""^^xsd:date .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:ChildOf ?parent .
  ?parent a foaf:Person .
  ?parent rdfs:label ""Saw Min Hla"" .
  ?child rdfs:label ""Myat Hpone Pyo"" .
  FILTER (not (?child = ?parent))  # Ensure child is not the parent
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"SELECT ?work WHERE {
  ?work a ns:http://purl.org/dc/elements/1.1/ dc:title ""Rickshaw Boy"" .
  ?work ns:author ""Lao She"" .
}",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"SELECT ?office_of_miguel_maura ?office_of_commander WHERE {
  ?miguel_maura a :POLITICIAN .
  ?miguel_maura p:OFFICE ?office_of_miguel_maura .
  ?manuel_pinto_da_costa a :OFFicer, :Politician .
  ?manuel_pinto_da_costa rdfs:label ""Manuel Pinto da Costa""@pt .
  ?manuel_pinto_da_costa ns:partOfEvent :Portuguese_Civil_War .
  ?office_of_maura a :Office; p:IN_A_RESIDENCE ?residence .
  ?residence ns:locatedAt [ a :Building; rdfs:label ""Palacio de Liria""@es ] .
  ?commander a :Military_Officer .
  ?manuel_pinto_da_costa wdt:P31 ?commander
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","The SPARQL query will involve querying the DBpedia dataset for the character ""Lamont Cranston"" and then extracting the information about his alter ego ""The Shadow"". Here is the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  ?character a dbpedia-owl:Character ;
               dbpedia-owl:hasAlterEgo ?alterEgo .
  ?character rdfs:label ""Lamont Cranston""@en .
  ?alterEgo rdfs:label ""The Shadow""@en .
}
```

This query selects the alter ego (`?alterEgo`) of any character labeled as ""Lamont Cranston"" and ensures that the alter ego's label is ""The Shadow"".",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"The SPARQL query will look for the death places of Reed Howes and Sal Mineo in the DBpedia dataset. Here's how we can structure the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate ?deathDate.
  OPTIONAL { ?person rdfs:label ?nameLabel . }
  FILTER (lang(?nameLabel) = ""en"")  # Only consider English labels
}
```

This query selects the death places (`?deathPlace`) of individuals (`?person`) classified as persons in DBpedia (`?person a dbpedia:Person`) and having a death date (`?deathDate`). The `OPTIONAL { ?person rdfs:label ?nameLabel . }` part is used to optionally retrieve the name of the person for clarity, filtered by language to English.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"SELECT ?leader ?office WHERE {
    ?leader a dbpedia:PoliticalLeader;
    ?office a dbpedia:PoliticalPosition;
    ?leader foaf:name ""José Luis Rodríguez Zapatero""@es;
    ?election dbpedia:Election_2009_in_Galicia;
    ?party dbpedia:Spanish_Socialist_Workers'_Party_(Spain);
    ?leader rdfs:seeAlso <http://dbpedia.org/ontology/PoliticalPartyMember>;
    ?office rdfs:seeAlso <http://dbpedia.org/ontology/ElectedOffice>
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","SELECT ?author WHERE {
  ?work a dbpedia-owl:Book ;
    dc:author ?author .
  ?work rdfs:label ""El Deafo""@en .
  ?author ns:nationality ""United States"" .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"SELECT ?childFather
WHERE {
  ?child a :Person;
    :father ?childFather.
  ?child rdfs:label ""Maria Anna of Bavaria (born 1574)"".
  ?childFather a :Royalty .
  ?childFather foaf:familyMember ?child
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?actress a dbpedia:Actress .
  ?actress dwc:birthLocation dbpprop:New_York .
  ?actress rdfs:hasChild ?child
}",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"SELECT ?show
WHERE {
  ?academy rdf:type dbpedia-owl:Organization ;
    rdfs:label ?show .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" .
  }
}",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","A SPARQL query to solve this would involve:
1. Querying for the work ""Наши парни"".
2. Linking this work to its creator (author).
3. Ensuring that the creator is Aleksandr Filimonov.

Here's a possible SPARQL query:

```sparql
SELECT ?person WHERE {
  ?work ""Наши парни"" .
  ?work dc:creator ?person .
  ?person rdfs:label ""Aleksandr Filimonov""@en .
}
```

This query looks for a person associated with the work ""Наши парни"" (translated as ""Our Dads""), checks if this person is the creator of the work, and verifies that their label in RDF data is ""Aleksandr Filimonov"".",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","SELECT ?professional1 ?professional2
WHERE {
  ?professional1 ns:occupation ?sam_concepcion_occupation .
  ?professional2 ns:occupation ?similar_profession .
  FILTER (NOT EXISTS { ?x ns:name ""Sam Concepcion"" })  # Ensure Sam is not included
}",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","The SPARQL query will need to search for a person who matches these criteria within the DBpedia dataset. We'll look for a person related to Ferdinand II, specifically involved in the 2nd Dragoon Regiment, and check if they have been linked to societal events, wars, and television shows.

Here is the constructed SPARQL query:

```sparql
SELECT ?person 
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:commanderInWar ?war ;
            dbpprop:societalEvent ?event ;
            dbpprop:televisionShow ?tvShow .
  ?war rdfs:label ""2nd Dragoon Regiment (France)"" .
  ?event rdfs:label ""Societal Event"" .
  ?tvShow rdfs:label ""Television Show Name"" .
  ?person ns:childOf <Ferdinand II, Holy Roman Emperor> .
}
```

This query looks for a person (`?person`) who:
- Is a `Person` (dbpedia-owl:Person)
- Commanded in a war (`?war` with label ""2nd Dragoon Regiment (France)`)
- Was involved in a societal event (`?event` with label ""Societal Event""`)
- Had a television show associated with them (`?tvShow` with label ""Television Show Name"")

Additionally, it filters for the condition that this person is a child of Ferdinand II, Holy Roman Emperor.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?bandmember ?artistname ?awardee ?awardname
WHERE {
  ?awardee a dbpedia:Band ;
    dbpedia:origin dbpedia:New_York (state) .
  ?awardee dbpedia:hasMember ?bandmember .
  ?bandmember a dbpedia:Musician ; 
    rdfs:label ?artistname .
  ?awardee dbpedia:winAward ?awardname .
}",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"To find the necessary information, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?producer 
WHERE {
  ?actor rdf:type <http://dbpedia.org/ontology/Actor> .
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor foaf:name ?realName .
  ?work rdf:type <http://dbpedia.org/ontology/Movie> .
  ?work rdfs:creator ?producer .
  ?actor rdfs:seeAlso <http://www.imdb.com/name/?ref_=nm_nm_0000200637> . # Assuming Johnny Doughboy's IMDB page URL
}
```

This query does the following:
- It selects the `producer` of works (`?work`) that are movies (`<http://dbpedia.org/ontology/Movie>`).
- It filters for actors (`?actor`) with the label ""Johnny Doughboy"" in English (`rdfs:label ""Johnny Doughboy""@en`) and their real name (`foaf:name ?realName`).
- It connects each actor to their works through the `rdfs:creator` property, which links the producer of the work.",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"To find the necessary data, we can use the following SPARQL query:

```sparql
SELECT ?movie WHERE {
  ?movie hasAward some ?award .
  ?award awardee ""Ian Gregson"" .
}
```

This query selects movies (`?movie`) that have at least one award (`?award`) where the awardee is Ian Gregson.",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"SELECT ?manager
WHERE {
  ?player rdf:type dbpedia-owl:Footballer.
  ?player rdfs:label ""David Luckman"".
  ?club dbpprop:manager ?manager .
  ?club a dbpedia-owl:FootballClub .
  ?club rdfs:name ""Hartlepool United F.C."" .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","SELECT ?author
WHERE {
  ?book a dbpedia-owl:Book ;
    dbpedia-owl:author ?author .
  ?book rdfs:label ""Promise Me, Dad"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"SELECT ?entity WHERE {
  ?war1 a ns:war .
  ?war1 combatant ?alexander_davydov .
  ?war2 a ns:war .
  ?war2 combatant ?karl_gustav_von_baggovut .
  ?entity a nsworld:Country .
  ?war1 rdfs:label ""War of Alexander Lvovich Davydov"" .
  ?war2 rdfs:label ""War of Karl Gustav von Baggovut""
  AND ?war1 time/ns:startDate ""1805-07-14"" .
  AND ?war2 time/ns:startDate ""1812-06-22""
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"SELECT ?title WHERE {
  ?artist a dbo:Artist ;
            rdfs:label ""Aleksandr Filimonov""@en .
  ?work a dbo:Artwork ;
         dct:creator ?artist ;
         dct:title ?title .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","SELECT ?person ?rank WHERE {
  ?person a ns:people.person .
  ?person nao:hasRole [ a ns:ontologyTerms#MilitaryRanks; rdfs:label ""Gillmore Medal awardee"" ] .
  ?person ns:inPlace ns:location Charleston, South Carolina .
  OPTIONAL { ?person ns:militaryRank ?rank }
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","SELECT ?city WHERE {
  ?city ns:name ""Lahore"" .
  ?city rdfs:label ""The Heart of Pakistan"" .
  ?city rdfs:label ""Paris of the East"" .
  ?city rdfs:label ""City of Gardens"" .
  ?city rdfs:label ""City of Literature"" .
}",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Min Ye Kyawswa""@en.
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","SELECT ?father_name WHERE {
  ?politician ""Arthur Stanley"" as ?name .
  ?politician father ?father_name
}

AND
SELECT ?recipient_name ?parent_name WHERE {
  ?awardee ""Commander of the Royal Victorian Order"" as ?award .
  ?awardee parent ?parent_name .
  ?awardee rdfs:label ?recipient_name
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"A SPARQL query would typically look like this:

```sparql
SELECT ?commander 
WHERE {
  ?commander a :war_commander .
  ?commander rdfs:label ""DiseaseName"" . # Replace DiseaseName with an actual disease name or identifier
  ?commander rdfs:label ""SocietalEventName"" . # Replace SocietalEventName with an actual event name or identifier
  ?commander ns:owner <USS_Arcadia_ID> . # Assuming USS Arcadia has a URI in DBpedia
  ?commander ns:author ""Back to Work"" .
}
```

This query searches for a resource that:
- Is a commander in a war (`:war_commander`)
- Has labels associated with a disease (`""DiseaseName""` and `""SocietalEventName""`)
- Owns the USS Arcadia (with ID `<USS_Arcadia_ID>`)
- Is the author of ""Back to Work""",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"SELECT ?war WHERE {
  ?child a dbpedia-owl:Person;
    dbpedia:hasFather dbpedia:Toyotomi_Hideyoshi.
  ?child rdfs:label ?warLabel.
  ?warLabel a dbpedia:War .
}",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"SELECT ?awardee
WHERE {
  ?award rdfs:label ""Quincy Adams Gillmore Award""@en .
  ?award dc:title ?title .
  ?awardee rdfs:label ?awardeeLabel .
  ?awardee foaf:name ?awardeeName .
  FILTER (lang(?awardeeLabel) = ""en"")
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","SELECT ?writer
WHERE {
  ?work a dbpedia-owl:MusicalWork ;
            dbpprop:artist [ dbpprop:givenName ""Steven"" ; dbpprop:surname ""Kapur"" ] ;
            dbpprop:title ""True Self"" .
  ?work dbpprop:lyricist ?writer .
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"The SPARQL query would look for Jamie T.'s profession using a pattern like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?profession
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasProfession ?profession .
  ?person rdfs:label ""Jamie T""@en .
}
```

This query selects the `profession` of any `Person` entity labeled as ""Jamie T"" in English.",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?bandLabel WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpprop:birthDate ""1945-03-30""^^xsd:date.
  ?person rdfs:memberOf ?band.
  ?band rdfs:label ?bandLabel .
  ?band ns:inDataset dbo.
  FILTER (str(?bandLabel) = ""The Fabulous Thunderbirds"")
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?person dbpprop:Dorothea_of_Denmark_Electress_Palatine
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"SELECT ?officeHolder ?residence
WHERE {
  ?officeHolder rdfs:label ""Madrid City Council election, 2003"" .
  ?officeHolder dbpprop:officeHolderOfOffice ?office .
  ?office a dbpprop:LocalElection .
  ?officeHolder foaf:name ?name .
  ?officeHolder foaf:residence ?residence
}
ORDER BY ?name",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person dbpprop:parent ?grandchild .
  ?grandchild a dbpedia:Person .
  ?grandchild dbpprop:parent ?great_grandchild .
  ?great_grandchild a dbpedia:Person .
  ?great_grandchild dbpprop:parent William I
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?bandMember ?awardLabel ?region WHERE {
  ?artist a dbpedia:MusicalArtist;
    rdfs:label ""Bobby Shmurda""@en .
  ?award a dbpedia:MusicAward ;
    rdfs:label ?awardLabel ;
    dct:issued ?issueDate .
  ?issueDate a dbpedia:EventDate .
  ?region a dbpedia:GeographicalEntity ;
    rdfs:label ?regionLabel ;
    dct:isPartOf dbpedia:New_York_Sate .
  ?award dct:awardedTo ?artist .
  ?bandMember a dbpedia:BandMember;
    rdfs:label ?bandMemberLabel .
}",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?subject ?property ?object WHERE {
  ?subject a dbpedia-owl:War .
  ?subject rdfs:label ?war_label .
  ?subject ns:commander ?commander .
  ?commander a dbpedia-owl:Person ;
           rdfs:label ?commander_name .
  ?subject ns:partOfEvent ?event .
  ?event a dbpedia-owl:SocietalEvent .
  ?event rdfs:label ?event_label .
  ?event ns:reference ?reference .
  ?reference a dbpedia-owl:Work ;
             rdfs:label ?work_label .
  FILTER (lang(?war_label) = ""en"" ) .
  FILTER (lang(?event_label) = ""en"" ) .
  FILTER (lang(?work_label) = ""en"" )
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"SELECT ?writer
WHERE {
  ?song ""No Alternative"" .
  ?song wdt:P31 wd:Q402 .
  ?writer wdt:P42 ?song .
}",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"SELECT ?institution
WHERE {
  ?institution a dbpedia-owl:Organization ;
    dbpprop:locatedIn geo:Georgia .
  OPTIONAL { ?institution rdfs:subPropertyOf dbpprop:entity_of . }
}",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor
WHERE {
  ?movie a dbpedia:Movie ;
           dbpedia2:mainActor ?actor .
  ?movie rdfs:label ""Your Movie Title Here"" .
}",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"The SPARQL query to retrieve this information would look for the office or role of individuals named Mariano Rajoy and Miguel Maura. Assuming that the relevant property in DBpedia is `office`, the query could be constructed as follows:

```sparql
SELECT ?office WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:office ?office .
  ?person rdfs:label ""Mariano Rajoy""@es .
  ?person rdfs:label ""Miguel Maura""@es .
}
```

This query selects the office (`?office`) of individuals (`?person`) labeled as ""Mariano Rajoy"" and ""Miguel Maura"" in Spanish.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?author
WHERE {
  ?work a dbpedia-owl:WrittenWork .
  ?work rdfs:author ?author .
  ?work dbpprop:isAbout ""Promises to Keep"" .
  OR ?work rdfs:author ?author .
  ?work dbpprop:isAbout ""Joe Biden""
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"SELECT ?militaryForce WHERE {
  ?battle rdf:type ns:Battle.
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?battle ns:combatant ?militaryForce .
}",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor
WHERE {
  ?actor a :Actor.
  ?actor rdfs:label ?actorLabel .
  ?movie a :Movie.
  ?movie rdfs:subject :Role.
  ?role a :Professional.
  ?actor :actedIn ?movie .
  FILTER (regex(str(?actorLabel), ""ATL"")) 
}",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"SELECT ?awardee
WHERE {
  ?awardee a dbpedia-owl:MedalOfHonor_Awardee .
}",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"SELECT ?spouse
WHERE {
  ?child a dbpedia:Royalty ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?child .
  ?parent rdfs:label ""Saw Shwe Khet""@en .
  ?child rdfs:label ""Minye Kyawswa""@en .
  ?spouse a dbpedia:Royalty ;
            dbpedia:hasSpouse ?spouse
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"The SPARQL query will look for an artist in London with the label ""musical artist"". Once found, it will retrieve the parent of this artist.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?artist a dbpedia-owl:MusicalArtist ;
           dbpedia-owl:originOfArtwork db:London ;
           rdfs:label ?name .
  ?parent a dbpedia-owl:City ;
         rdf:type dbpedia-owl:Country .
  FILTER (str(?name) = ""London"")
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","The SPARQL query to find the father of Eleonore of Austria would be:

```
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent.
  ?parent a dbpedia:Person;
    rdfs:label ""Vincenzo II Gonzaga""@it.
}
```

This query selects the `?father` of any `dbpedia:Person` named Eleonore of Austria (`?person a dbpedia:Person; dbpedia:hasParent ?parent`) whose parent (`?parent`) is labeled as ""Vincenzo II Gonzaga"" in Italian (`?parent a dbpedia:Person; rdfs:label ""Vincenzo II Gonzaga""@it.`).",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:nationality dbo:Russian_Empire .
}
UNION
SELECT ?person2
WHERE {
  ?person2 a dbpedia-owl:Person ;
            dbpedia-owl:nationality dbo:Grand_Duchy_of_Finland .
}",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?actor
WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ""The Shadow""@en .
  ?actor dbpprop:realName ?realName .
  FILTER (lang(?realName) = ""en"") 
}",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?party_member WHERE {
  ?party_member a :PoliticalParty .
  :ruling_parties_in_Westport ct:hasMember ?party_member .
  :george_pickett rdfs:involves :Picketts_Charge .
  :american_civil_war a :SocietalEvent
}",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:givenName ""Darryl Paa Kwesi Bannerman-Martin"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","SELECT ?awardee ?birthplace WHERE {
  ?awardee a dbpedia:Person.
  ?awardee ns:nationality dbpedia:Japanese_people.
  ?awardee rdfs:label ?awardee_label .
  ?awardee ap:award dbpedia:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?tv_show a dbpedia:Television_program .
  ?awardee ns:appearsIn ?tv_show .
}",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"SELECT ?commander
WHERE {
  ?regiment the 30th (Cambridgeshire) Regiment of Foot.
  ?regiment foughtIn <http://dbpedia.org/ontology/battles>Battle of Cape Finisterre 1805.
  ?commander a :MilitaryForce .
  ?commander rdfs:label ?name .
  FILTER (?name contains ""John"" OR ?name contains ""Sir"" OR ?name contains ""Admiral"")
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"Given the complexity and specificity of these queries, a direct SPARQL query might not be straightforward without a structured database that includes this detailed information. However, a general approach to start with could be:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor ?parent_name WHERE {
  ?actor ns:role ?role .
  ?role rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?allan_arbus ns:child ?child .
  ?child rdfs:parent ?parent .
  ?parent rdfs:label ""Allan Arbus"" .
}
```

This query attempts to find an actor who played the role ""Judgment: The Trial of Julius and Ethel Rosenberg"" and then links that actor to Allan Arbus's child to identify the parents.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent .
  ?parent rdfs:label ""Archduchess Margarete Sophie of Austria"" .
  ?child rdfs:label ""Duke Philipp of Württemberg"" .
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?commander
WHERE {
  ?battle1 a dbpedia-owl:Battle ;
            dbpedia-owl:partOfMilitaryConflict dbpedia:Battle_of_Cape_Finisterre_1805 .
  ?battle2 a dbpedia-owl:Battle ;
            dbpedia-owl:partOfMilitaryConflict dbpedia:Battle_of_Fort_Royal .
  ?commander rdfs:label ""The Triple X""@en .
  ?commander ns:commanderOf ?battle1 .
  ?commander ns:commanderOf ?battle2
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"SELECT ?leader ?country WHERE {
    ?leader a dbpedia:Politician;
        dbpedia:P31 ""Chancellor of Germany"".
    ?leader foaf:name ?name.
    ?country a dbpedia:Country.
    ?leader dwc:birthPlace ?country.
}
AND {
    ?club a dbpedia:Sporting_team;
        dbpedia:P31 ""VfL Bochum"".
    ?manager a dbpedia:Person;
        dbpedia:P31 ?club.
    ?manager foaf:name ?managerName.
    ?player a dbpedia:Sport_person;
        dbpedia:P31 ?club.
    ?player dbpedia:sportDiscipline ""Football (soccer)"".
}
AND {
    ?season dbpedia:Event;
        dbpedia:P31 ""2007-08 VfL Bochum season"".
}
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"The SPARQL query will involve querying the DBpedia dataset for individuals who match these criteria. We'll use `:actor` to filter for actors and `:politician` to check for political roles.

```sparql
SELECT ?actor 
WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ?actorLabel .
  ?actor rdf:type :Politician .
  [ a dbpedia-owl:AppearanceIn ;
    dbpedia-owl:film ""Ab Kya Hoga"" ] .
  [ a dbpedia-owl:AppearanceIn ;
    dbpedia-owl:film ""Dispatches from Elsewhere"" ] .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"SELECT ?entity
WHERE {
  ?entity a dbpedia-owl:Location ;
            dbpedia2:isPartOf dbpedia:Andhra_Pradesh.
}",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"SELECT ?person
WHERE {
  ?person a :Person ;
            :nationality :RussianEmpire ;
            :deathPlace :Switzerland .
}",2,2,3,1,2,2,3,28,0,0,36,0,0.0,0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?warLabel ?war WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1543"" .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (regex(str(?name), ""Koichirō"")) .
  ?child a dbpedia:Person; dbpedia:parent ?toyotomi.
  ?toyotomi a dbpedia:Person; rdfs:label ?parentName .
  FILTER (str(?parentName) = ""Toyotomi Hideyoshi"") .
  ?child rdfs:label ?childName .
  FILTER (regex(str(?childName), ""Koichirō"")) .
  ?war a dbpedia:War;
    dbpedia:startDate ?start;
    dbpedia:endDate ?end .
}
LIMIT 1",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?award ?region ?state ?settlement ?band_member WHERE {
  ?award a award.
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?award dc:subject [ dbpedia:hasMember ?band_member ] .
  ?band_member a artist .
  ?band_member a musical_artist .
  ?band_member foaf:name ""Ackquille Jean Pollard"" .
  ?band_member rdfs:label ""GS9"" .
  ?region a region .
  ?state a ns:USStateOrTerritory .
  ?settlement a settlement .
}",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?person WHERE {
  ?person a :child_of <http://dbpedia.org/ontology/Person> .
  ?person a :commander_in_the_war <http://dbpedia.org/ontology/Algerian_War>.
  ?person a :societal_event <http://dbpedia.org/ontology/SocietalEvent>.
  ?person a :event <http://dbpedia.org/ontology/Event>.
  ?person a :television_show <http://dbpedia.org/ontology/TvShow>.
  ?person rdfs:label ""Jacques Massu""@fr.
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"SELECT ?member WHERE {
  ?member a ns:artist .
  ?member a ns:musicalArtist .
  ?member ns:groupMemberOf gs9
}",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","The SPARQL query will involve looking up the actor's name in DBpedia and then checking their occupation to see if it matches with ""politician"". Here's how the query might look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor ?role ?profession WHERE {
  ?actor a dbpedia-owl:Actor ;
           dbpedia-owl:role ?role ;
           rdf:type dbpedia:PoliTic.
  ?actor dbpedia-page:vital_statistics/ns:birth_date [ ns:year > 1970 ] .
  ?actor dbpedia-page:vital_statistics/ns:birth_date [ ns:month IN (1, 2, 3, 4, 5, 6, 7, 8, 9) ] .
  ?actor dbpedia-page:vital_statistics/ns:birth_year < 2000 .
  FILTER(STR(?role) = ""Ab Kya Hoga"") .
}
```

This query does the following:
- Selects the actor (`?actor`), their role (`?role`), and their profession (`?profession`)
- Checks that the actor is a politician (`dbpedia:PoliTic`)
- Filters for actors born after 1970 and before 2000
- Ensures that the role of the actor in ""Ab Kya Hoga"" matches the term ""Ab Kya Hoga""",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?grandfather
WHERE {
  ?child baedaMaryamI .
  ?childFather fatherOf ?child .
  ?childFather rdf:type [ rdfs:label ""royalty"" ] .
  ?childFather rdf:type [ rdfs:label ""office holder"" ] .
  ?grandfather rdf:type [ rdfs:label ""king"" ] .
}",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"The SPARQL query would look for the ""political party"" information associated with the entity ""Gustavo Petro"" in the DBpedia dataset. Here's how the query might be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?gustavoPetro a dbpedia-owl:OfficeHolder ;
               dbpedia-owl:office dbpedia:PRESIDENCY_of_Colombia ;
               rdf:type dbpedia:Politician .
  ?gustavoPetro dbpedia:powers ?powers .
  ?powers rdfs:label ?party .
}
```

This query selects the label (which would be the name of the political party) of any resource that has `a` relationships to Gustavo Petro (`?gustavoPetro`) and is an office holder (`dbpedia-owl:OfficeHolder`), specifically for the presidency of Colombia (`dbpedia:PRESIDENCY_of_Colombia`), and has a label describing its powers (`?powers rdfs:label ?party`).",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a ns:people.person .
  ?child ns:father ns:Roger II of Sicily .
  ?child ns:mother [ a ns:Person ; ns:spouse/ns:partner ns:Constance of Burgundy ] .
  SOME ?grandchild WHERE {
    ?grandchild a ns:person ;
                 ns:parent ?child .
    ?grandchild ns:parent [ a ns:Person ; ns:spouse/ns:partner ns:Constance of Burgundy ]
  }
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"SELECT ?show WHERE {
  ?show a dbpedia-owl:TelevisionProgram .
  ?show rdfs:label ?title .
  ?show dc:award ""United States Congress"" .
}",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","SELECT ?bandMember
WHERE {
  ?producer a dbpedia:Organization ;
               dbpedia:P31 dbpedia:Band .
  ?producer rdfs:label ""Nothing to Gein"" .
  ?producer rdfs:label ""Stone Sour"" .
  ?bandMember a dbpedia:Musician .
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"To answer this question, we would need to:
1. Identify the individuals Miguel Maura and Mariano Rajoy.
2. Determine their tenure as leaders of the Madrid City Council in 2003.
3. Find their residences during that period.
4. Extract the current tenants of those residences.

Given the complexity and the need for specific historical data, a direct SPARQL query might not be straightforward without additional context or structured data about the residences and their occupants. However, a simplified approach could involve querying for information about the individuals themselves and their roles, then inferring the residence details from related data.

Here's a conceptual SPARQL query that would start to address these points:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:OfficeHolder ;
            dbo:office_electedTo ""Madrid City Council"" ;
            dbo:office_term ""2003-2007""  # Assuming a typical term length
  }
```

This query selects individuals who held the OfficeHolder role for the Madrid City Council during the year 2003. We would then need to extend this query to link these individuals to their residences and determine the tenants at that time.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"SELECT ?office WHERE {
  ?candidate office ?office .
  ?candidate ns:name ""Álvaro Quirós"" .
  ?party rdfs:member ?candidate .
  ?party ns:name ""Spanish Socialist Workers' Party (PSOE)"" .
  ?country ns:name ""Spain"" .
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?person ?birthPlace WHERE {
  ?person a dbpedia-owl:Person.
  ?person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@lt.
  ?person ns:birthPlace ?birthPlace
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"SELECT ?country WHERE {
  ?novel ""Cat Country"" .
  ?character ""Winston Chang"" .
  ?character foaf:birthPlace ?country
}

AND
{
  ?author George Orwell .
  ?author foaf:name ""Eric Arthur Blair"" .
  OPTIONAL { ?author foaf:birthPlace ?country }
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","SELECT ?child WHERE {
  ?child a :child_of ?grandparent .
  ?grandparent a :parent_of ?parent .
  ?parent a :child_of ?maximilian .
  ?maximilian a :offspring_of ""Maximilian I, Holy Roman Emperor"" .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","SELECT ?force WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia:P31 ?birthplace .
  ?birthplace a dbpedia: Settlement ;
               dbpedia:is_a dctypes:Location .
  ?person rdfs:label ""Quincy Adams Gillmore""@en;
    dbpedia:dateOfDeath ""1850-08-05""^^xsd:date .
  OPTIONAL { ?person rdfs:label ?force . }
}",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","SELECT ?child
WHERE {
  ?parent a dbpedia:Monarch .
  ?parent rdfs:label ""Alfonso IV of Aragon"" .
  ?child a dbpedia:Person .
  ?child rdfs:label ""Peter IV of Aragon"" .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","The SPARQL query will look for a person named Bob Thompson who is a musician and then retrieve the band associated with that person. Here's how the query would be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?person a dbpedia-owl:MusicalArtist ;
            rdfs:label ?name .
  ?person rdf:value ""Bob Thompson"" .
  ?person rdfs:member ?band .
  ?band a dbpedia-owl:Band .
}
```

This query does the following:
1. Selects the band name (`?band_name`) from the dataset.
2. Filters for individuals (`?person`) who are classified as `dbpedia-owl:MusicalArtist` and have the label (`rdfs:label`) set to ""Bob Thompson"".
3. Ensures that these individuals (`?person`) are members of a band (`?band`), which is classified as `dbpedia-owl:Band`.",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"SELECT ?band_name WHERE {
  ?member a dbpedia:Musician;
  dbpedia:name ""Eric Clapton"";
  ?band dbpedia:bands ?band_name .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en.
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasFather ?father ;
            rdfs:label ""Lamont Cranston""@en .
  ?father a dbpedia:Person ;
          rdfs:label ""The Shadow""@en .
  ?father2 a dbpedia:Person ;
           rdfs:label ""Na'od""@en .
  ?person2 a dbpedia:Royalty ;
            dbpedia:officeHolder true
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","SELECT ?parent WHERE {
  ?person a :Person;
  :name ""Mary Elphinstone, Lady Elphinstone"";
  :birthPlace ""Middlesex"" .
  ?child a :Person;
  :name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"";
  :parent ?parent .
  ?parent a :Parent;
  :child ?child
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"SELECT ?office ?tenant WHERE {
  ?person a ns:people.person;
  ?person rdfs:label ""Alberto Núñez Feijóo""@es.
  ?person foaf:office ?office .
  ?cathedral a ns:building;
  ns:locatedIn ""Santiago de Compostela"";
  ?cathedral rdfs:tenant ?tenant
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?partyLeader
WHERE {
  ?miguelMaura a dbpedia-owl:Politician ;
               dbpedia2:memberOf ?politicalParty .
  ?politicalParty a dbpedia:PoliticalParty .
  ?politicalParty rdfs:label ?partyLabel .
  ?partyLeader a dbpedia:Person;
               dbpedia2:leaderOf ?politicalParty
}
LIMIT 1",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"SELECT ?commander ?party_or_organization WHERE {
  ?commander rdfs:label ""George Pickett""@en.
  ?commander ns:commandedIn <http://dbpedia.org/ontology/CivilWarBattle> .
  ?john_mcdermott ns:deathPlace <http://dbpedia.org/ontology/Settlement> .
  ?john_mcdermott a <http://dbpedia.org/ontology/AmericanArtist> .
  ?john_mcdermott rdfs:memberOf ?party_or_organization .
  ?party_or_organization a <http://dbpedia.org/ontology/PoliticalParty> .
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?person WHERE {
  ?person a ns:http://www.w3.org/2002/07/owl#ChildOf ?grandparent .
  ?grandparent a ns:http://www.w3.org/2002/07/owl#ParentOf ?parent .
  ?parent a ns:http://www.w3.org/2002/07/owl#ChildOf ?roger .
  ?roger a ns:http://www.w3.org/2002/07/owl#PersonAndMonarch .
  ?person rdfs:label ""William II of Sicily""@en .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","The SPARQL query will need to navigate through the relationships described in the question. We'll use the DBpedia ontology which includes information about royal lineages and marriages. Here's a structured approach:

1. Identify Roger III (also known as Roger II of Sicily) and his parents.
2. Find Elvira of Castile, his mother.
3. Link Elvira to her children.
4. Extract the father of William II from the linked data.

Here is the SPARQL query that would retrieve this information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?child rdf:type dbpedia-owl:Monarch .
  ?child dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           dbpedia-owl:hasParent ?grandparent .
  ?grandparent a dbpedia-owl:Person ;
               dbpedia-owl:hasParent ?greatGrandparent .
  ?greatGrandparent a dbpedia-owl:Person ;
                    dbpedia-owl:hasParent ?ancestor .
  ?ancestor rdf:type dbpedia-ontology:Monarch ;
              dbpedia-ontology:hasSpouse ?spouse .
  ?spouse a dbpedia-ontology:Person ;
            dbpedia-ontology:hasChild ?child .
  ?child rdfs:label ""William II of Sicily""@en
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","To find the actor, we need to:
1. Identify all works (films and albums) titled ""Lasso the Moon"".
2. From these works, extract the actors involved.
3. Filter out any non-professional actors.

Given that DBpedia provides structured data about films, albums, and actors, a SPARQL query could look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpprop: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?work a dbpprop:Film, dbo:Album ; 
         rdfs:label ""Lasso the Moon"" .
  ?actor a dbo:Actor .
  ?work dbo:hasMainActor ?actor .
}
```

This query selects the actor (`?actor`) associated with any work titled ""Lasso the Moon"", assuming that the main actor of a film or album is the most prominent one.",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?child
WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?child rdfs:label ""Saw Shwe Khet's child""@en .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Stephen V of Hungary""@en .
}",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?person
WHERE {
  ?person a pol:Politician .
  ?person foaf:name ""Eleonora Menicucci de Oliveira"" .
  ?person dbpprop:birthDate ?birthDate
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","The SPARQL query will involve querying the DBpedia dataset for artists related to Rod Argent and then filtering those results to find the one born in the Central Region of Ghana.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?name ?birth_name WHERE {
  ?artist a dbpprop:Artist ;
            dbo:regionBorn ""Central Region, Ghana"" .
  ?artist rdfs:label ?name .
  ?artist dbpprop:associatedBandMember [ rdf:type dbo:Musician ; foaf:name ""Rod Argent"" ] .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?actor WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ""Alec Baldwin"" .
  ?actor ns:role ""The Shadow"" .
}",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","The SPARQL query would involve searching for entities related to ""Kent Allard"" and restricting the results to those that are associated with ""print"". Here's a possible SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?character WHERE {
  ?character a dbpedia-owl:FictionalCharacter ;
               dbpedia-owl:hasPrintReference ?printReference .
  ?printReference rdfs:label ""Kent Allard""@en.
}
```

This query selects fictional characters (`?character`) that have a `dbpedia-owl:hasPrintReference` property with a label of ""Kent Allard"" in English (`rdfs:label ""Kent Allard""@en.`).",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","SELECT ?actor ?producer WHERE {
  ?actor ns:film/ns:role ?role .
  ?role rdfs:label ""Cora Sue Collins"" .
  ?role director ?director .
  ?director ns:film/ns:production ?producer .
  ?actor ns:film/ns:role ?another_role .
  ?another_role rdfs:label ""Janet Gaynor"" .
  ?another_role rdfs:producer ?gaynor_producer
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","SELECT ?s WHERE { ?s a ns:PoliticalParty ; ns:name ""Partido Socialista Obrero Español"" . }",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","SELECT ?awardee ?birthplace WHERE {
    ?awardee a ns:medialaw/ns:MedalOfHonor .
    ?awardee rdfs:received ?dateReceived .
    ?awardee dbp:deathDate ""1850-08-05"" .
    ?awardee dbpprop:birthPlace ?birthplace .
    ?birthplace a ns:owl/SimpleLiteral ; rdfs:label ?birthplaceLabel .
    ?birthplaceLabel strlang:en ""Owingsville, Kentucky"" .
}",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"Given that Thomas Letsch played for 1. FC Köln during the 1994-1995 season and considering Helmut Kohl's native country is Germany, we can construct the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager 
WHERE {
    ?player dbpedia:playsFor dbpedia:1.FC_Köln .
    ?player foaf:name ""Thomas Letsch"" .
    ?team dbpedia:hasManager ?manager .
    ?team rdfs:label [ substring(n3:clubName, 4) = ""Köln"" ] .
    FILTER (str(?season) = ""1994-1995"") .
    ?country dbpedia:leader dbpedia:Germany .
}
```

This query looks for a player named Thomas Letsch who played for 1. FC Köln during the 1994-1995 season and finds the manager of that team. It also filters for the country of Helmut Kohl (the leader of West Germany).",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?party ?office WHERE {
  ?person a ns:Person ;
            ns:hasRole [ ns:label ""Minister of the Ecological Transition and Demographic Challenge"" ] ;
            ns:memberOf ?party .
  ?party rdfs:label ?partyLabel .
  ?office a ns:Office ;
            ns:holder ?person .
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"The SPARQL query would be designed to search for Anxo Quintana and then extract the relevant administrative details. Assuming that Anxo Quintana has an entry in DBpedia and that his administration is recorded, the query might look something like this:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?admin WHERE {
  ?person a dbpprop:Politician ;
            dbpprop:name ""Anxo Quintana"" .
  ?person dbpprop:administration ?admin .
}
```

This query selects the `administration` property of any person named Anxo Quintana, assuming that such a property exists in DBpedia.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty ;
         dbpedia2:parent [ dbpedia2:hasParent ?stephenV ] .
  ?stephenV dbpedia:spouse [ dbpedia:hasChild ?child ] .
  ?stephenV rdfs:label ""Stephen V of Hungary"" .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","SELECT ?name
WHERE {
  ?person a dbpedia-owl:Alumnus ;
            dbpedia-owl:alumniOf <http://www.plovdiv.edu.bg/en/> .
  ?person rdfs:label ?name
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 [ owl:annotatedBy dbpprop:bornDate ""Caroline Louise Bevan Symonds""] .
  ?person rdfs:label ?name .
  ?person dbpprop:occupation ?profession .
  ?spouse a dbpedia:Person;
    dbpedia:P31 [ owl:annotatedBy dbpprop:s spouseOf ?person]
  FILTER (?name = ""Caroline Louise Bevan Symonds"" AND ?profession = ""Your Profession Here"")
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"SELECT ?child 
WHERE {
  ?royaltyPerson a dbpedia:Royalty .
  ?spouse a dbpedia:Spouse .
  ?child a dbpedia:ChildOf ?parent .
  ?parent a dbpedia:Person .
  ?child a dbpedia:ChildOf ?grandParent .
  ?grandParent a dbpedia:Person .
  ?royaltyPerson rdfs:label ""Saw Min Phyu"" .
  ?spouse rdfs:label ""Saw Min Hla"" .
  ?child rdfs:label ""Myat Hpone Pyo"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"To retrieve this information, we would need to construct a SPARQL query that searches for the details of the Edmund Hakewill-Smith Award and its recipient(s). Assuming there is a property for ""awardee"" and another for ""award name,"" the query might look something like this:

```sparql
SELECT ?awardee ?awardName ?force (if (?force = ""Newtonian force"" then ""Yes"" else ""No"") AS force_type WHERE {
  ?awardee rdfs:label ""Edmund Hakewill-Smith""@en .
  ?awardName rdfs:label ""Edmund Hakewill-Smith Award""@en .
  ?awardee ns:forceValue ?force .
}
```

This query searches for an individual labeled as ""Edmund Hakewill-Smith"" and retrieves the associated award name. It then checks if there is a property `ns:forceValue` that provides the force value (in this case, assuming it's Newtonian force) and returns ""Yes"" or ""No"" accordingly.",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"SELECT ?predecessor
WHERE {
  ?person a dbpedia-owl:Person;
    dbppro:hasPrecedessor ?predecessor .
  ?myat_hpone_pyo a dbpedia-owl:Person;
    dbppro:hasPrecedessor ?myat_hpone_pyo_predecessor .
  ?predecessor rdfs:label ""Myat Hpone Pyo""@en .
  ?myat_hpone_pyo rdfs:label ""Myat Hpone Pyo""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"To retrieve this information from DBpedia, we can construct a SPARQL query that searches for the alter ego of a character associated with ""The Shadow"" video game. Assuming there is a direct link between the video game and its comic book adaptation, the query might look like this:

```sparql
SELECT ?alterEgo WHERE {
  ?videoGame TheShadow .
  ?videoGame comicBookAlterEgo ?alterEgo .
}
```

This query searches for any `alterEgo` associated with a comic book character from ""The Shadow"" video game.",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?producer WHERE {
  ?work1 a :movie;
      dc:director ""Howard Hawks"";
      dct:prod_company ""Jerry Wald Productions"";
      dct:prod_year 1946.
  ?work2 a :work;
      dc:title ""The Big Sleep"".
  ?producer1 rdfs:label ?producerLabel .
  ?work3 a :work;
      dc:title ""7th Heaven"";
      dct:prod_company ""Fox Film Corporation"".
  ?work4 a :work;
      dc:title ""Street Angel"";
      dct:prod_year 1928.
  ?producer2 rdfs:label ?producerLabel .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","A SPARQL query to retrieve this information from DBpedia could look like the following:

```sparql
SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?person rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
}
```

This query searches for a person named ""Mary Elphinstone, Lady Elphinstone"" and retrieves the parent of that person.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor WHERE {
  ?book ""Smartbomb"" .
  ?movie a mo:Film .
  ?actor mo:starIn ?movie
}",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","The SPARQL query will involve looking up the person with the given birth name and then checking if there is any relation to a television show, specifically if that show has been represented as a movie. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?showLabel WHERE {
  ?person a rdf:Person;
    rdfs:label ""Richard Grant Esterhuysen""@en .
  ?person rdf:type ns:Actor ;
    rdfs:seeAlso ?tvShow .
  ?tvShow a tv:TelevisionSeries ;
    hasEpisode ?episode .
  ?episode a movie:Movie .
}",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"SELECT ?band WHERE {
  ?artist ns:name ""Bob Thompson"" .
  ?artist rdfs:label ?band .
  ?artist foaf:alterEgo ""Walter B. Gibson"" .
}",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasAward ?award .
  ?award rdfs:label ""George H. Cameron Award""@en.
}",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"SELECT ?artist WHERE {
  ?song ""Always the Love Songs"" .
  ?song wdt:P31 wd:Q40264.
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:deathDate ?deathDate .
  ?deathDate a owl-Time.
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"")  # restrict to English names for clarity
}
WHERE {
  ?person rdf:type dbpedia-owl:Actor ; # Reed Howes is an actor
  ?person rdfs:label ""Reed Howes""@en .
  ?person rdfs:label ""Carolyn Jones""@en .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"The SPARQL query to retrieve this information from DBpedia might look like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia-owl:Monarch;
            dbpedia-owl:hasFather ?father .
  ?person rdfs:label ""Peter IV of Aragon""@en .
}
```

This query selects the `?father` of any person labeled as ""Peter IV of Aragon"" who is also a monarch, which typically includes royalty.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"The SPARQL query will involve querying the DBpedia Music ontology for the track details. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbppro: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?track rdf:type dbppro:MusicAlbum .
  ?track rdfs:label ""Wizards of Waverly Place (soundtrack)"" .
  ?track dbppro:performer ?artist
}
```

This query selects the artist (`?artist`) associated with the track labeled ""Wizards of Waverly Place (soundtrack)"".",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?person ?officeHolder ?politician WHERE {
    ?person a ns:people.person .
    ?person rdfs:label ?name .
    ?person ns:officeHolder ?officeHolder .
    ?person ns:politicalAffiliation ?politicalAffiliation .
    ?officeHolder ns:location ns:city ""Madrid"" .
    ?person rdfs:label ?name .
    ?person ns:politicalAffiliation ?politicalAffiliation .
    FILTER (xsd:date(?start_date) <= xsd:date(""2013-12-01"")).
    FILTER (xsd:date(?end_date) >= xsd:date(""2012-01-01""))
}",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"SELECT ?author WHERE {
  ?song ""Always the Love Songs"" .
  ?commander rdfs:label ""Commander of Russo-Polish War (1654–1667)"" .
  ?successor rdfs:label ?officeHolder .
  ?successor ns:isSuccessorOf ?commander .
  ?officeHolder a dbo:OfficeHolder .
  ?author foaf:writtenWork ?song
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"SELECT ?officeHolder 
WHERE {
  ?officeHolder a dbo:Office_Holder ;
               dbo:office_electedTo dbo:Election ;
               dbo:politicalParty dbo:Political_Party ;
               rdf:type dbo:Politician .
  
  ?officeHolder dbo:officeYear 2003;
              dbo:politicalParty dbo:Conservative_Republican_Party .
  
  ?officeHolder rdfs:label ?name .
  
  ?officeHolder dbo:memberOf dbo:People_Party .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"SELECT ?bandMember
WHERE {
  ?song ""No Alternative"" .
  ?artist rdfs:label ?artistLabel .
  ?bandMember a dbpedia-owl:MusicianOf ?artist .
  ?artist rdfs:member ?bandMember
}",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?spouse2 ?spouse2Label
WHERE {
    ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           dbpedia:hasSpouse ?spouse1 .
    ?parent a dbpedia:Person ;
           rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel"" .
    ?spouse1 a dbpedia:Person ;
           rdfs:label ?spouse1Label .
    ?spouse2 a dbpedia:Person ;
           dbpedia:hasSpouse ?spouse1 .
    ?spouse2Label a rdfs:Label ; # Assuming we want the label of the spouse
    FILTER (lang(?spouse1Label) = ""en"")  # Filter for English labels
}",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"SELECT ?governor_name ?governor_birth_place ?award_winner_name ?award_winner_birth_place
WHERE {
  ?governor a :Politician .
  ?governor rdfs:label ?governor_name .
  ?region a :Region .
  ?administrative_region a :AdministrativeRegion .
  ?paulus_powell_birth_place a :BirthPlace .
  ?governor_birth_place a :BirthPlace .
  ?governor_birth_place geo:location ?governor_location .
  ?award_winner a :AwardeeFor .
  ?award_winner rdfs:label ?award_winner_name .
  ?vince_gilligan_award a :AwardGivenToVinceGilligan .
  ?vince_gilligan_birth_place a :BirthPlace .
  ?vince_gilligan_birth_place geo:location ?vince_location
  AND ?governor_birth_place = ?vince_gilligan_birth_place
}
ORDER BY ?governor_name, ?award_winner_name",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
    dbpprop:spouse [ dbpprop:firstName ""Roger"" ; dbpprop:lastName ""Pryor"" ] ;
    dbpprop:politicalPartyMember [ dbpprop:party ""Republican Party (United States)"" ]
  }
AND
{
  ?person rdfs:label ""Harriette Arlene Lake""@en .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","SELECT ?almaMater
WHERE {
  ?person a dbpedia-owl:LaureateFellow ;
            dbppro:awardeeOffice ""Australia"" .
  ?person rdfs:label ?name .
  ?person dbppro:fieldOfStudy ""Science"" .
  ?person dbo:almaMater ?almaMater
}
ORDER BY ?almaMater",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?entity WHERE {
  ?entity a ns:Organization .
  ?entity rdfs:label ""Konstantinos Ventiris"" .
  ?entity ns:locatedIn gcp:athens .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?awardee ?birthplace WHERE {
  ?awardee a dbpedia-owl:Person.
  ?awardee foaf:nationality dbpedia:Japan.
  ?awardee dbo:birthPlace ?birthplace.
  FILTER (STR(?birthplace) LIKE ""%Japan Standard Time%"")
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query to find the birthplace of Bob Crewe would look for a person entity with the name ""Bob Crewe"" and then extract the value associated with the property ""birthplace"". Here's how the query would be structured:

```sparql
SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person;
    dbpedia2:hasName ""Bob Crewe""@en;
    owl:sameAs <http://dbpedia.org/resource/Bob_Crewe> .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"SELECT ?producer ?shadow_alter_ego
WHERE {
  ?producer rdfs:label ""Coke Studio Philippines producer""@en .
  ?shadow_alter_ego a ns:http://purl.org/dc/elements/1.1/#AlterEgo ;
                      dc:title ""The Shadow""@en .
}",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"To find the producer of the movie ""Nothing to Lose"" using DBpedia, we need to query for information related to the movie and extract the producer details. Here's how you might structure the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?producer
WHERE {
  ?movie a dbo:Film;
         dbo:hasProducer ?producer .
  ?movie rdfs:label ""Nothing to Lose""@en .
}
```

This query selects the producer (`?producer`) of any film (`?movie`) with the label ""Nothing to Lose"" in English.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","SELECT ?manager
WHERE {
  ?player skos:exactMatch ""Martin Jørgensen"" .
  ?player dbpprop:birthDate ""1968-08-26"" .
  ?player dbpprop:club ""VfL Bochum"" .
  ?player dbpprop:season ""2006-07"" .
  ?manager rdfs:label ?managerLabel .
  ?team dbpprop:season ""2006-07"" .
  ?team dbpprop:leagueSeason ""2006-07"" .
  ?team dbpprop:club ""VfL Bochum"" .
  ?player dbpprop:managedBy ?manager .
  ?manager rdfs:label ?managerLabel
}
ORDER BY ?managerLabel",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","SELECT ?adminDetail WHERE {
  ?king adminDetail ?adminDetail .
  ?king rdfs:label ""Olaf I of Denmark"" .
  ?prince skos:exactMatch ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  ?prince foaf:birthDate ?birthDate .
  ?adminTerritory rdfs:label ""Copenhagen"" .
  ?adminTerritory a ns:owl:SaoOnto:AdministeredFrom .
  ?king ns:P31 ?adminTerritory
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"SELECT ?producer WHERE {
  ?movie a mousetrap:Film;
    mousetrap:production_company ?producer ;
    mousetrap:year 1938;
    mousetrap:title ""The Adventures of Tom Sawyer"" .
  ?actor mousetrap:role ?role .
  ?actor rdfs:label ""Janet Gaynor"" .
  ?role a vocabs:CharacterRole; vocabs:characterName ""The Shadow"" .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","SELECT ?tenant WHERE {
  ?party psoe:leader ?leader .
  ?leader foaf:name ""Alberto Núñez Feijóo"" .
  ?country rdfs:label ""Spain"" .
  ?party rdfs:member ?country .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","SELECT ?manager_name ?player_name
WHERE {
    ?manager rdf:type dbpedia:Manager .
    ?manager foaf:birthDate ""1968-08-26"" .
    ?manager rdfs:label ?manager_name .
    ?player rdf:type dbpedia:SoccerPlayer .
    ?player rdfs:label ?player_name .
    ?player ns:managedBy ?manager .
    ?team rdfs:label ""VfL Bochum"" .
    ?season rdfs:label ""2007-08"" .
    ?team ns:hasCoach ?manager
}
ORDER BY ?manager_name",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"The SPARQL query to retrieve the region associated with Kiyosu from DBpedia would be:

```sparql
SELECT ?region WHERE {
  ?city kawasaki:timeZone ?tz.
  ?city rdfs:label ""Kiyosu""@en.
  ?tz a owl:Thing .
}
```

This query selects the `?region` for any city labeled as ""Kiyosu"" that has a time zone (`?tz`). The assumption here is that DBpedia links time zones to cities directly or indirectly through related properties.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Person.
  ?person ns:commandedIn dbpedia:P175 ""French Revolutionary Wars"".
  ?person dwc:countryOfBirth dbo:Poland
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"SELECT ?conflict WHERE {
  ?officer1 a ns:navyOfficer;
    ns:servicePeriod ""1790-1800"" .
  ?officer2 a ns:navyOfficer;
    ns:servicePeriod ""1790-1800"" .
  ?officer1 rdfs:label ""Tom Phillips"" .
  ?officer2 rdfs:label ""William Tennant"" .
  ?conflict a ns:militaryConflict;
    ns:startYear ""1790"" ;
    ns:endYear ""1800"" .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"SELECT ?author WHERE {
  ?work a book.
  ?work dc:subject [ a owl:Class; rdfs:label ""Hillary Clinton"" ] .
  ?author a person; foaf:name ?authorName .
  ?author a officeHolder; dbpedia-owl:office ?office .
  ?office a polOffice .
  ?author rdfs:label ""Hillary Clinton""@en .
}",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"The SPARQL query to retrieve this information would involve querying for Jeremy Dyson's details. Assuming there is a property `birthplace` associated with people in the DBpedia ontology, the query might look something like this:

```sparql
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthplace ?birthPlace .
  ?person rdf:type dbpedia:FilmProducer ;
    dbpedia2:film ""Storm in a Teacup"" .
  ?person rdfs:label ""Jeremy Dyson"" .
}
```

This query searches for a person named Jeremy Dyson who produced the film ""Storm in a Teacup"", and then retrieves their birth place.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?manager
WHERE {
  ?manager a dbpedia:Manager ;
            dbpprop:role dbpprop:SoccerCoach .
  ?manager rdfs:label ""Hong Kong C Team manager""@zh.
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:EtonCollegeAlumnus .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""en"" )
}",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","A SPARQL query would typically look for resources that have a property matching the provided input. Assuming the user is looking for a movie by its title, we might construct a query like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?movie
WHERE {
  ?movie a rdf:Resource.
  ?movie rdfs:label ""Give me the movie with .""@en .
}
```

This query selects resources (`?movie`) that have a label matching the string ""Give me the movie with "". The `@en` indicates that we are looking for labels in English.",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"SELECT ?name ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ?name ;
    dbo:birthPlace ?birthPlace .
  ?birthPlace ns:locatedIn dbpedia:Florida .
  ?person rdf:type dbo:Musician;
    foaf:name ""Ackquille Khan Cassell"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?person WHERE {
  ?charlesII spouse ?marieLouise .
  ?marieLouise parent ?parentOfCharlesII .
  ?parentOfCharlesII parent ?leopoldI .
  ?mariaOfBytom child ?childOfMaria .
  ?childOfMaria parent ?stephenV .
  ?stephenV parent ?rudolfI
  FILTER (lang(?person) = ""en"")
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },SELECT ?person WHERE { ?person a :royalty . ?person a :commander_in_war . ?person a :societal_event . ?person a :television_show . FILTER ( ?person ns:father ?father ) . FILTER ( ?father ns:child ?child ) . ?child ns:parent ?grandchild },5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ?name .
  ?person foaf:name ?name .
  FILTER (lang(?name) = ""en"")  # Assuming we are looking for names in English
}",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","SELECT ?actor WHERE {
  ?movie a :work .
  ?movie a :film .
  ?movie star :audrey_hepburn .
  ?actor ns:spouse ?spouse .
  ?spouse a :person .
  ?spouse ns:has_ssn ?ssn .
  ?spouse ns:givenName ""Janusz"" .
  ?actor ns:givenName ?actor_name
}",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"SELECT ?author
WHERE {
  ?work a dbpedia-owl:Book ;
            dbpprop:author ?author .
  ?work rdfs:label ""My Life"" .
  ?author rdf:type foaf:Person;
           dbpprop:name ""Bill Clinton"" .
}",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child.
  ?parent [ a dbpedia:Person; rdfs:label ""Albrecht, Duke of Württemberg"" ] .
  ?parent [ a dbpedia:Person; rdfs:label ""Archduchess Margarete Sophie of Austria"" ] .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:deathDate ""1850-08-05"" .
  ?person rdfs:label ?name .
  ?name ns:language ""en"" .
  ?person ns:birthPlace ?birthplace .
}
LIMIT 1",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"SELECT ?office ?country WHERE {
    ?candidate rdf:type dbpedia-owl:PoliticalCandidate .
    ?candidate foaf:name ""Álvaro Quirós"" .
    ?election dbpedia:Election ; dbpedia:region ""Galicia, Spain"" ; dbpedia:year 2009 .
    ?party dbpedia:political_party ?party .
    ?office rdf:type dbpedia-owl:Office ; dbpedia:role ?role .
    ?office rdfs:label ?office_label .
    ?country rdfs:label ?country_label .
    ?candidate dbpedia:representative_of ?party .
    ?office rdf:type ?office_type .
    FILTER (LANG(?office_label) = ""en"")  # Assuming we want the office in English
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","SELECT ?actor WHERE {
  ?actor ns:role ?role .
  ?role a dbo:Character .
  ?role rdfs:label ""Shelby Oaks""@en .
  ?actor foaf:name ?name
}
LIMIT 1",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"The SPARQL query to retrieve this information might look like:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name
WHERE {
  ?person a foaf:Person;
    dbpprop:birthName ?birthName;
    foaf:musicalArtist [ owl:hasRole ""memberOf"" ] ;
    dbpprop:associatedBand The Feeling .
  ?person rdfs:label ""Joey B""@en .
  FILTER (regex(str(?birthName), ""Joey"")) 
}
```

This query selects the `name` of a person who:
- Is a `foaf:Person`
- Has the `dbpprop:birthName` of Joey
- Is a member of The Feeling band (using the `foaf:musicalArtist` property with the role `memberOf`)
- Is labeled as ""Joey B"" in English",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"SELECT ?writer
WHERE {
  ?album a dbpedia:Album .
  ?album rdfs:label ""Sappy"" .
  ?writer dbpprop:writtenBy ?album
}",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","SELECT ?parent WHERE {
    ?awardee awardeeOf ""Rodney Lees"" .
    ?awardee a :Child .
    ?awardee father ?parent .
    ?parent a :Politician
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"SELECT ?movie WHERE {
  ?movie a :film .
  ?movie a :television_show .
  [ a ns:peoplePerson; foaf:name ""Vera Lynn"" ] in :performedIn ?movie .
  [ a ns:peoplePerson; foaf:name ""Kate Dimbleby"" ] in :hasParent ?parent .
  ?parent a ns:peoplePerson; foaf:name ?parent_name .
  ?parent_name in [ a ns:creativeWork ; ns:director ""David Lean"" ] OR
             [ a ns:creativeWork ; ns:writer ""Noel Coward"" ]
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"SELECT ?person WHERE {
  ?person a ns:Person ;
            rdfs:label ""The Shadow""@en .
}",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","The SPARQL query will involve:
1. Finding the person entity with the name ""Linda Sue Cobb"".
2. Retrieving the spouse of that person from the DBpedia dataset.

Here is the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person ?spouse
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:birthDate ?birthDate ;
            dbpedia-owl:surname ""Cobb"" .
  ?person rdfs:label ""Linda Sue Cobb""@en .
  ?person dbpedia-owl:spouse ?spouse .
}
```

This query does the following:
- `PREFIX` declarations set up the namespaces for RDF and DBpedia Ontology.
- `SELECT ?person ?spouse`: We want to select the person and their spouse.
- The `WHERE` clause specifies the conditions:
  - `?person a dbpedia-owl:Person`: This person is an instance of the Person class in DBpedia Ontology.
  - `dbpedia-owl:birthDate ?birthDate`: This person has a birth date property.
  - `rdfs:label ""Linda Sue Cobb""@en`: This person's label (name) is ""Linda Sue Cobb"" in English.
  - `?person dbpedia-owl:spouse ?spouse`: This person has a spouse property.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"The SPARQL query to find Guillaume Peltier's party affiliation would involve querying for his `foaf:memberOf` property, which typically links individuals to the organizations they are members of. Here is a sample SPARQL query:

```sparql
SELECT ?party WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""Guillaume Peltier""@fr .
  ?person foaf:memberOf ?party .
}
```

This query selects the `party` of any person labeled ""Guillaume Peltier"" in French, assuming that the label is provided in the `rdfs:label` property.",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"SELECT ?child_name ?birth_place
WHERE {
  ?child_name a dbpedia-owl:Politician .
  ?child_name foaf:offspring ?parent .
  ?parent a dbpedia-owl:HumanPerson .
  ?parent dbo:deathPlace ""Taipei"" .
  SERVICE wikibase:label { 
    bd:entity ?parentLabel .
  }
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","The SPARQL query to retrieve this information would look like:

```
SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate;
    dbpedia:musicalArtist ?musicalArtist.
  ?person rdfs:label ""Stuart McBeath Tosh"".
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer
WHERE {
  ?film a dbpedia-owl:Film;
    dbpedia:productionCompany ?producer .
  ?film rdfs:label ""A Star Is Born (1937 film)"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:nationality ""Germany"" ;
            rdfs:label ""Thomas Letsch""@de .
  ?person ns:managerOfVfLBochum.
  ?team a dbpedia:SportTeam ;
         dbpedia:sport ""Football"" ;
         dbpedia:season ""2019"" . # Example season, replace with actual season
  ?team ns:managedBy ?person .
}",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?child
WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasSpouse ?spouse .
  ?spouse a dbpedia-owl:Person ;
            rdfs:label ""Prince Maximilian of Hohenlohe-Langenburg"" .
  ?child a dbpedia-owl:Person ;
           rdfs:label ?royalty_label .
  ?parent rdfs:children ?child .
  FILTER (regex(str(?royalty_label), ""Prince|Princess"")) 
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?governor_name ?governor_birth_place ?author_name ?author_birth_place
WHERE {
  ?governor a pol:Politician ;
            foaf:name ?governor_name ;
            dbpedia2:birthPlace ?governor_birth_place .
  ?author a dbo:Author ;
           foaf:name ?author_name ;
           dbpedia2:birthPlace ?author_birth_place .
  ?author rdfs:label ""El Deafo""@en .
  ?governor_name = ?author_name
}
ORDER BY ?governor_name, ?author_name",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"To retrieve this information from DBpedia, we can use a SPARQL query that navigates through the relationships described. Here's how we might structure our query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?child1 rdf:type dbpedia-owl:Person.
  ?child1 rdfs:father ?father1.
  ?child2 rdf:type dbpedia-owl:Person.
  ?child2 rdfs:father ?father2.
  
  ?father1 rdfs:parent ?grandfather.
  ?father2 rdfs:parent ?grandfather.

  ?grandfather a dbpedia-owl:Royalty.
  ?grandfather a dbpedia-owl:OfficeHolder.
}
```

This query selects the `grandfather` of two children (`?child1` and `?child2`) who are both persons, their fathers (`?father1` and `?father2`), and assumes that each child has only one father. It then looks for a common ancestor (`?grandfather`) who is both a royalty and an office holder.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","The SPARQL query will involve:
- Finding the `foaf/profession` property of Shatrughan Sinha.
- Searching for other individuals with the same or similar professions.
- Using `dbpedia-owl/instanceOf` to ensure we are comparing within the same or related categories.",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"SELECT ?child1 ?child2 ?royalty WHERE {
  ?child1 a dbpedia:Person; dbpedia:hasSpouse [ dbpedia:hasParent ?spouse ] .
  ?spouse a dbpedia:Person; dbpedia:name ""Odo II, Duke of Burgundy"" .
  ?child2 a dbpedia:Person; dbpedia:parent ?child1 .
  ?child2 a dbpedia:Person; dbpedia:isRoyalty true .
  ?grandchild a dbpedia:Person; dbpedia:parent ?child2 .
}",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"The SPARQL query to retrieve Linda Bruckheimer's birth name from DBpedia would be:

```sparql
SELECT ?birthName WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasBirthName ?birthName .
  ?person rdfs:label ""Linda Bruckheimer""@en .
}
```

This query selects the `?birthName` property of any person labeled as ""Linda Bruckheimer"" in English.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"The SPARQL query will need to retrieve information from a dataset that includes details about the governors of U.S. states, such as DBpedia. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?governorName
WHERE {
  ?governor a dbpedia-owl:Politician ;
            dbpedia-owl:officeHolderPosition [ rdf:value ""Governor of Virginia"" ] ;
            rdfs:label ?governorName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","SELECT ?partyMember
WHERE {
  ?lake dbpedia:isPartOf <http://example.com/region_of_lake_Harriette> .
  <http://example.com/region_of_lake_Harriette> rdfs:label ""Lake Harriette"" .
  ?region dbpedia:powers_and_abilities rdfs:member ?partyMember .
  FILTER (str(?region) = ""Region of Lake Harriette"") .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","The SPARQL query to retrieve this information would look for instances of these names in a music-related context within DBpedia's dataset. Here is an example of how such a query might be structured:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?musicalArtist 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist .
  ?person rdfs:label ""Elorm Kabu Amenyah"" .
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin"" .
}
```

This query selects the names (`?name`) and their associated musical artists (`?musicalArtist`) from all persons in DBpedia who have the labels ""Elorm Kabu Amenyah"" or ""Darryl Paa Kwesi Bannerman-Martin"".",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?child WHERE {
  ?child a ns:Person ;
           ns:hasParent ?parent ;
           ns:isDescendantOf ?grandparent .
  ?parent ns:firstName ""Stephen"" ;
          ns:lastName ""V"" ;
          ns:hasChild ?child .
  ?grandparent ns:firstName ""Charles"" ;
              ns:lastName ""I"" ;
              ns:hasChild ?parent .
  FILTER (str(?child) = ""Stephen VI"") 
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","The SPARQL query will involve querying the DBpedia dataset for the relevant individuals and their relationships. Here is the structured query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandchild WHERE {
  ?grandchild a rdf:Property ;
               rdfs:label ""child"" .
  ?grandchild father ?parent .
  ?parent a owl:Class ; rdfs:label ""Royalty"" .
  ?parent a owl:Class ; rdfs:label ""Office Holder"" .
  ?parent ns:fatherOf ?grandchild .
  ?parent ns:sonOf ?grandparent .
  ?grandparent a rdf:Property ;
               rdfs:label ""child"" .
  ?grandparent ns:parentOf ?parent .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","SELECT ?parent WHERE {
  ?child rdf:type <http://purl.org/dc/elements/1.1/Agent#Photographer> .
  ?child rdfs:father ?parent .
  ?parent foaf:name ""Doon Arbus"" .
  ?movieLocation geo:location <http://dbpedia.org/ontology/LocatedIn> <http://www.geonames.org/8473749/london-bridge-east> .
  ?actor foaf:name ?actorName .
  ?actor rdfs:type <http://dbpedia.org/ontology/Actor> .
  ?movieLocation geo:inRegion <http://dbpedia.org/ontology/LocatedIn> <http://www.geonames.org/2760408/california> .
  ?actor dwc:deathPlace <http://dbpedia.org/property/deathPlace> <http://www.wikidata.org/entity/Q137964> .
  FILTER (lang(?actorName) = ""en"") 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"SELECT ?actor
WHERE {
  ?album a dbpedia:Album ;
            rdfs:label ""King""@en .
  ?song a dbpedia:Song ;
           rdfs:label ""The Ultimate""@en .
  ?actor dbpprop:performerInRole [ a dbpprop:Role; rdfs:label ""The Shadow""@en ] .
  ?album dbo:features ?song .
}",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?birthplace .
  ?person rdfs:label ""Burhan Belge"" .
}",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor
WHERE {
  ?movie rdfs:label ""Rustlers' Rhapsody"".
  ?movie dbpprop:actor ?actor .
}",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"SELECT ?region
WHERE {
  ?region rdfs:label ""Copenhagen"" .
  ?region ns:adminLocation ?location .
  ?location geo:point ?coordinates .
}
LIMIT 1",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"SELECT ?leader ?office WHERE {
    ?election 2009 galician regional election.
    ?party won ?election .
    ?leader office ?office .
    ?leader rdfs:label ?name .
    ?name ns:prefLabel ""Spanish"".
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"SELECT ?bandmember ?associated_artist
WHERE {
  ?bandmember a dbpedia:Musician;
  dbpedia:lead_singer_of ?band .
  ?band a dbpedia:Band ;
    rdfs:label ""R.E.M.""@en .
  ?associated_artist a dbpedia:Artist .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query to retrieve this information from DBpedia would be:

```
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?birthplace
WHERE {
  ?person dbpprop:birthPlace ?birthplace .
  ?person rdfs:label ""Scott LaFaro""@en .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","The SPARQL query to retrieve this information would involve using the DBpedia ontology to filter for entities that are both a band (has the property `rdfs:label` with value starting with ""Burnt by the Sun"") and a group. Here is the SPARQL query:

```sparql
SELECT ?artist
WHERE {
  ?artist a dbpedia-owl:Band ;
            rdfs:label ""Burnt by the Sun""@en .
  ?artist a dbpedia-owl:MusicGroup .
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","SELECT ?grandfather
WHERE {
  ?child ceiliaRenata a ns:Person ;
            ns:hasParent ?mother ;
            ns:hasGrandparent ?grandfather .
  ?mother ns:firstName ""Anne"" ;
          ns:lastName ""of Bohemia"" .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"SELECT ?territory WHERE {
  ?person deathPlace ?deathLocation .
  ?deathLocation geo:location ?location .
  ?location rdfs:label ?name .
  ?administration capital ?capital .
  ?capital rdfs:label ?capitalName .
  ?administration adminCode ""DK"" .
  ?person birthPlace ?birthLocation .
  ?birthLocation geo:location ?birthLocation .
  ?birthLocation rdfs:label ?birthName .
  ?administration adminCode ""DK-FO"" # Assuming Funen's administration code
  FILTER (lang(?name) = ""da"" ) # Ensure the name is in Danish
  FILTER (str(?capitalName) = ""København"" ) # Ensure the capital's name is Copenhagen
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"SELECT ?nickname 
WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team ns:nickname ?nickname .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"SELECT ?member WHERE {
  ?member a rdf:Property ;
            rdfs:label ""Republican Party (United States) member"" .
  ?member foaf:name ?name .
  ?name ns:match ""Roger Pryor"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"SELECT ?country WHERE {
  ?work ""Rickshaw Boy"" .
  ?author nationality ?nationality .
  ?author ns:birthPlace ?place .
  ?place rdfs:label ?countryLabel
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"SELECT ?role ?tenant_of_Spain ?santiago_tenant ?administration_office
WHERE {
  ?event Anxo Quintana.
  ?event a :Event .
  ?administrationOffice a :AdministrationOffice .
  ?administrationOffice rdfs:label ?office_label .
  ?location1 a :Location .
  ?location1 rdfs:label ""Spain"" .
  ?location2 a :Location .
  ?location2 rdfs:label ""Santiago de Compostela"" .
  ?tenant_of_Spain a :TenantOfSpain .
  ?santiago_tenant a :TenantOfSantiagoDeCompostela .
  ?event :ledBy ?administrationOffice .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"SELECT ?officeHolder ?residenceTenant
WHERE {
    ?election 2003.
    ?miguel_maura office:holder ?office .
    ?office rdfs:label ""Madrid City Council"" .
    ?officeHolder office:holdsOffice ?office .
    ?officeHeadquarters foaf:primaryTopic ?residence .
    ?residence rdf:type dwc:Residence .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""Elorm Kabu Amenyah"";
    dbpedia:regionOfBirth ""Central Region, Ghana"";
    dbpedia:occupation ""Musician""
}
UNION
SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName;
    dbpedia:regionOfBirth ""Central Region, Ghana"";
    dbpedia:occupation ""Musician""
}
ORDER BY ?birthName",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person .
  ?parent rdfs:father ?child .
  ?child rdfs:label ""Allan Arbus""@en
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"SELECT ?leader
WHERE {
  ?party rdfs:label ""Ulster Unionist Party"".
  ?party foaf:member ?leader .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child_name ?parent_name
WHERE {
  ?child rdfs:label ""Child Name"" .
  ?child rdf:type [ owl:intersectionOf (owl:Class rdfs:Resource) [ owl:propertyChainAxioms (
    ?royaltyType1 rdfs:subClassOf owl:Thing ;
    owl:onProperty rdf:type ;
    owl:hasMember <royaltyTypes> ] .
    ?royaltyType2 rdfs:subClassOf owl:Thing ;
    owl:onProperty rdf:type ;
    owl:hasMember <officeHolderTypes> ]].
  ?child rdf:type <royaltyTypes>.
  ?child rdf:type <officeHolderTypes>.
  ?child foaf:father ?parent .
  ?parent foaf:name ""Parent Name"" .
  ?parent a [ owl:intersectionOf (owl:Class rdfs:Resource) [ owl:propertyChainAxioms (
    ?titleType1 rdfs:subClassOf owl:Thing ;
    owl:onProperty rdf:type ;
    owl:hasMember <royaltyTitles> ] .
    ?titleType2 rdfs:subClassOf owl:Thing ;
    owl:onProperty rdf:type ;
    owl:hasMember <officeHolderTitles> ]].
  ?parent rdf:type <royaltyTitles>.
  ?parent rdf:type <officeHolderTitles>.
  ?child rdfs:seeAlso <genealogyGraph#William_I_of_England> .
  ?genealogyGraph#William_I_of_England a [ owl:intersectionOf (owl:Class rdfs:Resource) [ owl:propertyChainAxioms (
    ?ancestorType1 rdfs:subClassOf owl:Thing ;
    owl:onProperty rdf:type ;
    owl:hasMember <royaltyAncestors> ] .
    ?ancestorType2 rdfs:subClassOf owl:Thing ;
    owl:onProperty rdf:type ;
    owl:hasMember <officeHolderAncestors> ]].
  FILTER (regex(str(?parent), ""William I"")).
}]",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?bandMember
WHERE {
  ?band dbpedia:isBandOf ?artist .
  ?artist rdfs:label ""Nothing to Gein"" .
  OPTIONAL { ?band dbpedia:hasBandMember ?bandMember }
  UNION
  {
    ?band dbpedia:isBandOf ?artist .
    ?artist rdfs:label ""Stone Sour"" .
    OPTIONAL { ?band dbpedia:hasBandMember ?bandMember }
  }
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"The SPARQL query to find the actor(s) of ""Judgment: The Trial of Julius and Ethel Rosenberg"" from DBpedia would be:

```sparql
SELECT ?actor WHERE {
  ?movie a dbpedia-owl:Film ;
            dbpedia-owl:mainCharacter ?actor .
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?character WHERE {
  ?character a :fictional_character ;
             rdfs:label ""Green Arrow"" .
  ?character rdfs:creator ""Kent Allard"" .
  OPTIONAL { ?character appearsInSomeWorkWith ?actor . }
  FILTER (?actor rdfs:label ""Johnny Depp"" )
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"SELECT ?actor WHERE {
  ?movie a movie:Movie ;
            hasActor ?actor .
  ?movie rdfs:label ""Smartbomb"" . # Assuming there's a movie titled ""Smartbomb""
  ?actor foaf:name ?actorName .
  OPTIONAL { ?movie wdt:P18 :basedUpon <http://example.com/SmartbombBook> } # Link to the book
}",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?s WHERE {
  ?s a dbpedia-owl:Politician .
  ?s foaf:name ""Patrice Martin-Lalande"" .
  ?s dbpprop:succeededBy ?successor
}
LIMIT 1",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"SELECT ?subject ?property ?object
WHERE {
  ?subject a dbpedia-owl:Monarch .
  ?subject rdfs:label ""Christian IX of Denmark""@en .
  ?subject dbpprop:reignedFrom ""1863""^^xsd:gYear .
  
  ?subject a dbpprop:OfficeHolder ;
           dbpprop:office ""Mayor of the Duchy of Schleswig"" .
  ?object a dbpedia-owl:City .
  ?object rdfs:label ""Copenhagen""@en .
  
  ?subject rdfs:seeAlso <http://dbpedia.org/ontology/Monarch> .
  ?object rdfs:seeAlso <http://dbpedia.org/ontology/City>
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?francis a dcterms:Agent .
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?parent a foaf:Person .
  ?parent ns:familyName ""Vaudémont"" .
  ?francis ns:fathers ?parent
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?member WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 dbpedia:Republican Party (United States).
  ?parent a dbpedia:Person;
    dbpedia:P31 ?child.
  ?child rdf:type dbpedia:Person;
    dbpedia:P28 ""Tisha Sterling"".
}
LIMIT 1",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"The SPARQL query to retrieve this information from DBpedia should include:

1. A filter to find works authored by Bill Clinton.
2. A filter to ensure the work is a book.
3. A filter to identify the commander of the Third Taiwan Strait Crisis.

Here's how the SPARQL query might look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?author 
WHERE {
  ?work a dbo:WrittenWork, dbo:Book ;
            dbo:author ?author ;
            dbo:isAboutEvent dbpedia:Event:Taiwan_Strait_Crisis_1995-1996 .
  ?work rdfs:label ""Taiwan Strait Crisis 1995-1996""@en .
  ?commander a dbo:Person ;
            dbo:role dbpedia:CommanderRole .
  ?work dbo:author ?author .
  ?author foaf:name ""Bill Clinton"" .
}
```

This query looks for:

- Works (`dbo:WrittenWork`, `dbo:Book`) authored by someone named Bill Clinton.
- Works about the event `dbpedia:Event:Taiwan_Strait_Crisis_1995-1996`.
- The commander of this event.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?child a ns:http://www.w3.org/2002/07/owl#ChildOf ;
           owl:to ?parent .
  ?parent a ns:http://www.w3.org/2002/07/owl#HolyRomanEmperor ;
          ns:name ""Maximilian I"" .
  ?child ns:givenName ""Philip"" .
  ?child ns:familyName ""Duke of Flanders"" .
  ?child ns:bornYear ""1451"" .
  ?child ns:parent/ns:offspring ?grandchild .
  ?grandchild a ns:http://www.w3.org/2002/07/owl#Person ;
             ns:givenName ""Catherine"" ;
             ns:familyName ""of Austria"" ;
             ns:role ""Queen of Portugal"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","SELECT ?producer ?professional_in ?professional_in_profession
WHERE {
  ?producer a ns:people.person .
  ?producer rdfs:label ?producer_label .
  ?producer ns:involvement/ns:role ?role .
  ?role a ns:thing.
  ?role ns:instance [ a ns:creativeWork ;
                    ns:hasParticipant ?producer ] .
  ?producer ns:organization/ns:affiliatedOrganization ?organization .
  ?organization rdfs:label ""Coke Studio Philippines"" .
}",4,4,5,3,2,3,3,71,0,0,39640,0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?foundingDate WHERE {
  ?university a dbpedia-owl:University.
  ?university rdfs:name ""Luiza Erundina"".
  ?university foaf:educationalInstitution ?almaMater.
  ?almaMater a dbpedia-owl:EducationalInstitution.
}",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"SELECT ?parent WHERE {
  ?actor rdf:type dbpedia-owl:Actor .
  ?movie a dbpedia:Film .
  ?movie rdfs:director ?parent .
  ?actor foaf:name ""Eugène Cattin"" .
  ?movie title ""That Man from Rio"" .
  FILTER (lang(?movie) = ""fr"") .
  ?movie location ""Los Angeles, California"" .
}",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
  ?child a ns:Person ;
    ns:p father ?father;
    ns:m name ""Arthur Stanley (politician)"" .
  ?father a ns:Person ;
    ns:p n ""Frederick Stanley, 16th Earl of Derby"" ;
    ns:m name ""His Lordship's wife"" .
  ?child ns:p n ""Rodney Lees award"" .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"The SPARQL query will look for the founding date of the university named ""Universidade Federal de Minas Gerais"" (assuming this is Luiza Erundina's alma mater based on her Brazilian nationality and common universities in Brazil).

```sparql
SELECT ?foundingDate WHERE {
  ?university a dbpedia-owl:University.
  ?university rdfs:name ""Universidade Federal de Minas Gerais"".
  ?university foaf:almaMater luizaErundina.
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?deathPlace WHERE {
  ?actor a :Actor .
  ?actor ns:film/ns:role ?roleInSkyRanger .
  ?roleInSkyRanger rdfs:label ""The Sky Ranger (1928 film)"" .
  OPTIONAL { ?actor wdt:P18 values ?deathPlace . }
  AND {
    ?salMineo a ns:Person ;
    wdt:P31 ns:dbpedia.org/ontology/Actor .
    wdt:P72 ?salDeathPlace .
    ?carolynJones a ns:Person ;
    wdt:P31 ns:dbpedia.org/ontology/Actor .
    wdt:P72 ?carolynDeathPlace .
  }
  FILTER ( ?deathPlace != ?salDeathPlace && ?deathPlace != ?carolynDeathPlace )
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"SELECT ?child WHERE {
  ?child a dbpedia:Royalty ;
           dbpedia:parent ?grandparent ;
           dbpedia:spouse <http://dbpedia.org/ontology/hasSpouse> ?archduchess_spouse .
  ?grandparent a dbpedia:Person ;
            dbpedia:parent <http://dbpedia.org/ontology/hasParent> ?duke_philip .
  ?archduchess_spouse a dbpedia:Person ;
                    dbpedia:spouse <http://dbpedia.org/ontology/hasSpouse> <http://dbpedia.org/ontology/Individual#Duke_Charles_Frederick_of_W%C3%BCrttemberg>
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"SELECT ?parent WHERE {
  ?child rdf:type <http://purl.org/dc/elements/1.1/rel#Child> .
  ?child rdfs:label ""William I of Sicily"" .
  ?parent a <http://xmlns.com/foaf/0.1/Person> .
  ?parent owl:sameAs <http://dbpedia.org/resource/Roger_II_of_Sicily>
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent ?spouse ?child WHERE {
  ?charles_martel parent ?parent .
  ?parent ns:familyMember ?charles_martel .
  ?charles_martel ns:hasSpouse ?spouse .
  ?spouse ns:hasParent ?parent .
  ?charles_martel ns:hasChild ?child .
  ?child ns:hasParent ?parent
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"SELECT ?person
WHERE {
  ?person a :Person ;
            :birthPlace :Finland ;
            :deathPlace :Finland .
}
[TABLE OF CONTENTS]
- :Person: A class representing people.
- :birthPlace: Property representing the birthplace of a person.
- :deathPlace: Property representing the place where a person died.",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"SELECT ?institution
WHERE {
  ?institution a dbpedia-owl:CollegeOrUniversity .
  ?institution geonames:isPartOfCountry ""United States of America"" .
  geo:location ?institution geonames:latitude ""32.0239""^^xsd:float .
  geo:location ?institution geonames:longitude ""-84.8891""^^xsd:float .
  rdfs:label ?institution ENGLISH
}
LIMIT 1",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","To retrieve this information from DBpedia, we can construct a SPARQL query as follows:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party_member ?parent_birth_name
WHERE {
  ?region dbpedia:locatedIn Central, Louisiana .
  ?ruling_party dbpedia:currentRulingParty ?party .
  ?party rdfs:member ?party_member .
  ?tisha_sterling dbpedia:hasParent ?parent .
  ?parent foaf:name ?parent_birth_name .
}
```

This query does the following:
- `PREFIX` sets up the namespace for DBpedia's ontology.
- `SELECT` specifies that we want to retrieve the party member (`?party_member`) and the parent's birth name (`?parent_birth_name`).
- The `WHERE` clause includes conditions to find:
  - A region (`?region`) located in Central, Louisiana.
  - The current ruling party (`?ruling_party`).
  - A party member (`?party_member`) of the ruling party.
  - Tisha Sterling's parent (`?parent`).
  - The birth name (`?parent_birth_name`) of this parent.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"SELECT ?partyLeader
WHERE {
  ?miguel mao:memberOf ?politicalParty.
  ?politicalParty rdfs:label ""Portuguese political party name here"" .
  ?politicalParty foaf:leader ?partyLeader .
}",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:ChildOf ; dbpprop:hasParent ?parent .
  ?parent a dbpprop:Person ;
            dbpprop:name ""Linda Miller"" .
  ?child dbpprop:nationality ""New York"" .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:P31 _:child .
  _:child a dbo:offspring_of dbo:Roger_II_of_Sicily
}",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","SELECT ?author ?location WHERE {
  ?author ns:authorOf ""A Picture of Britain"" .
  ?author rdfs:label ""Winston Churchill"" .
  ?author ns:birthLocation ?location .
  ?location a n: settlement; rdfs:label ""English"" .
}",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","SELECT ?producer
WHERE {
  ?producer a ns:people.person;
    rdfs:label ""Robert Lamar Thompson""@en .
  ?producer ns:role ""producer"" . 
  ?producer ns:musicGenre ""Pop music""@en .
  FILTER (BOUND(?producer))
}",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?childFather
WHERE {
  ?child a :politician .
  ?child rdfs:father ?childFather .
  ?child dc:awarded ""Commander of the Royal Victorian Order"" .
  ?child ns:parentOf EdwardStanley, 17th Earl of Derby
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?child rdfs:father dbpedia:Prince_Faisal_bin_Hussein .
}",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty .
  ?grandchild a dbpedia:Person ;
               dbpedia:parent ?child ;
               dbpedia:hasParent ?parent .
  ?grandchild dbpedia:hasAncestor Carl, Duke of Württemberg
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?person ?office ?role WHERE {
  ?person a dbpedia:OfficeHolder.
  ?person a dbpedia:Politician.
  ?event a dbpedia:MilitaryConflict.
  ?event a dbpedia:SocietalEvent.
  ?person rdfs:label ""Manuel Pinto da Costa"".
  ?event start_date ""1961-01-01""^^xsd:date.
  ?office a dbpedia:OfficeHolderPosition.
  ?officeHolder rdfs:label ?office.
  ?officeHolder a dbpedia:Politician.
  ?officeHolder p:POTENTIAL_PARTY_member dbpedia:Conservative Republican Party (Spain).
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"SELECT ?leader
WHERE {
  ?country rdfs:label ""West Germany"".
  ?leader ns:office ""Chancellor of Germany"" .
  ?leader rdf:type dbo:Person.
  ?leader ns:givenName ""Helmut"".
  ?leader ns:familyName ""Kohl"".
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","SELECT ?father WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasParent ?parent ;
            dbpedia:hasGrandparent <http://dbpedia.org/ontology/Person#Ferdinand_II,_Holy_Roman_Emperor> .
  ?parent ns:father ?father .
  ?person rdfs:label ""Eleonore of Austria"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","SELECT ?almaMater
WHERE {
  ?person dbo:birthDate ""1955-02-02"" .
  ?person rdfs:label ""Eleonora Menicucci"" .
  ?person dbpprop:almaMater ?almaMater
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?parent a dbpedia:Royalty .
  ?parent dbpedia:P31 wd:Q10863 (OPTIONAL { ?parent rdfs:label ""Commander"" }) .
  ?child a dbpedia:Royalty .
  ?child dbpedia:P31 ?parent .
  ?child rdfs:father ?grandparent .
  ?grandparent a dbpedia:OfficeHolder .
  ?grandparent rdfs:label ""Na'od"" .
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person WHERE {
    ?person a dbpedia-owl:OfficeHolder.
    ?person rdfs:label ""Commander""@en.
    OPTIONAL { 
        ?person dbpprop:conflict ""Korean War"" .
    }
}",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"SELECT ?actor
WHERE {
  ?actor a ns:people.person;
    rdfs:label ?name.
  ?actor ns:role ?role1 IN ""Dispatches from Elsewhere"".
  ?actor ns:role ?role2 IN ""The Shadow"".
  FILTER (regex(str(?name), "".*Dispatches from Elsewhere.""))
  FILTER (regex(str(?name), "".*The Shadow""))
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","SELECT ?person ?role ?genre
WHERE {
  ?person a dbpedia-owl:Person ;
           dbpprof:role ?role ;
           dbr:genre ?genre .
  FILTER (?role IN ""Singer"" || ?role IN ""Musician"") .
}",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"SELECT ?warLabel ?baggovutAward WHERE {
  ?war a dbpedia-owl:War .
  ?war rdfs:label ?warLabel .
  ?baggovutAward a dbpedia-owl:BraveryAwards .
  ?baggovutAward awarder ""Russian Empire"" .
  ?baggovutAward awardee Karl_Gustav_von_Baggovut .
  FILTER (lang(?warLabel) = ""en"") .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"To find this information, we can use a SPARQL query against the DBpedia dataset, which contains structured data about movies and their cast members. Here's how we might construct the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor
WHERE {
  ?movie a rdf:Property;
    rdfs:label ""Rustlers' Rhapsody""@en .
  ?actor a ns:Person ;
        foaf:name ?actorName ;
        ns:role ?roleInMovie .
  ?roleInMovie a ns:FilmRole ;
                 rdfs:label ""Rustlers' Rhapsody""@en .
  ?actor ns:role ?roleInMovie .
  ?actor a ns:Person ;
        foaf:name ?actorName_2 ;
        ns:role ?roleInMovie_2 .
  ?roleInMovie_2 a ns:FilmRole ;
                    rdfs:label ""The Shadow""@en .
}
```

This query selects the `?actor` who played both roles in the movie ""Rustlers' Rhapsody"" and ""The Shadow"".",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","A SPARQL query to solve this would involve:
1. Retrieving the Wikipedia page for ""Dispatches from Elsewhere"".
2. Extracting the information about the main actor from that page.
3. Identifying the actor's profession mentioned on the same page.

Here is a sample SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor ?profession
WHERE {
  ?movie  a  rdf:Property ;
           rdfs:label ""Dispatches from Elsewhere""@en .
  ?actor  a  rdf:Resource ;
          rdfs:label ?actorLabel .
  ?actor  ns:occupation ?profession .
  FILTER (lang(?actorLabel) = ""en"")  # Filter for English language
}
```

This query selects the actor (`?actor`) and their profession (`?profession`) from the dataset, assuming that the data is structured in a way that allows us to find these details based on the movie title.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"SELECT ?person WHERE {
  ?person a :Person ;
            :birthPlace ""London, England"" ;
            :name ""Victor Saville"" .
  ?person rdfs:label ""Boom Shack-A-Lak"" .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpprop:birthName ?birthName .
  ?person rdfs:label ""Linda Bruckheimer""@en .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"SELECT ?father WHERE {
  ?child a ns:Person ;
            ns:hasParent ?parent ;
            ns:hasGrandparent ?grandparent .
  ?grandparent a ns:Person ;
             ns:hasParent ?parent2 .
  ?parent2 a ns:Person ;
           ns:hasParent ?ancestor .
  ?ancestor a ns:Person ;
            ns:name ""Alfonso VI of León and Castile"" .
  ?child ns:hasGrandparent ?ancestor
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","The SPARQL query will look for individuals who have a property indicating their profession and another property linking them to the specific domain or field they are known for. Here's an example SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person ?field
WHERE {
  ?person a rdf:Resource.
  ?person a foaf:Person.
  ?person foaf:name ?name.
  OPTIONAL { 
    ?person rdfs:label ?description .
    ?description ns:subject ?field . 
  }
  FILTER (lang(?description) = ""en"")  # filter for English language
}
```

This query selects individuals (`?person`) and their associated fields of expertise (`?field`). It uses the FOAF vocabulary to find people and their names, and it looks for labels that might include information about their professional field.",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia-owl:MusicalArtist ;
            dbpedia-owl:hasBandMember ?bandMember .
  ?bandMember a dbpedia-owl:Person ;
               dbpprop:nationality ""Florida"" .
  ?artist rdfs:label ""GS9"".
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
  dbpedia:P31 wd:Q12263 .
  wd:Q12263 rdfs:father wd:Q11498 .
  wd:Q11498 rdfs:child wd:Q10899 .
  wd:Q10899 a dbpedia:Event ;
  dbpedia:pocat:conflict ""Algerian War"" .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","SELECT ?actor WHERE {
  ?movie a :film.
  ?movie rdfs:label ""The Title of the Movie"".
  ?actor rdfs:label ""Richard Grant Esterhuysen"".
  OPTIONAL { ?movie wdt:P31 wd:Q12345 } # Assuming Q12345 is the DBpedia ID for TV shows
  FILTER (lang(?actor) = ""en"") # Filter for English names
}",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?birthplace_region ?birthplace_country
WHERE {
  ?child clade bd:children ?parent.
  ?parent ns:father ?father.
  ?father foaf:name ""William Gayner"".
  ?child foaf:name ""Elizabeth Bowes-Lyon"".
  ?birthplace rdf:type rdf:Property .
  ?child rdfs:isDefinedBy dbpedia-owl:Region .
  ?birthplace_region ?birthplace_country
}",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?person ?profession WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""Sam Concepcion""@en .
  ?person rdfs:label ?profession .
  
  ?person a dbpedia-owl:Musician;
    rdfs:label ""Bob Thompson""@en .
  ?person foaf:bandMember ?bandmember .
}",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","SELECT ?name
WHERE {
  ?place rdf:type dbpedia-owl:City .
  ?place rdfs:label ?name .
  ?place geo:location [ geo:coordinates ""35.6444° N, 139.7457° E"" ] .
  ?place geoMatchesDBPediaUrl ""http://dbpedia.org/ontology/City""
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","SELECT ?person ?team
WHERE {
  ?person a dbpedia-owl:SoccerPlayer .
  ?person a dbpedia-owl:SoccerManager .
  ?person birthDate ""1979-11-03""^^xsd:date .
  ?person playedWith dbo:Sergio_Agüero .
  ?person rdfs:label ?name .
  ?team rdfs:label ?teamName .
  ?person ns:memberOf ?team
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Duke_of_Brunswick-Wolfenbüttel ;
           dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
         dbpedia:hasSpouse ?grandchildSpouse .
  ?grandchildSpouse a dbpedia:Person
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardWinnerOf [ a dbpedia:Award_Nomination; rdfs:label ""List of awards and nominations received by Vince Gilligan"" ] .
  ?person rdfs:label ""Vince Gilligan"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?producer WHERE {
  ?actor dbo:roleInFilm ?movie .
  ?movie rdfs:label ""High Society Blues"" .
  ?movie wdt:P18 :producer ?producer
}",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"To find the actor from ""The Sky Ranger"" (1928 film), we can use the property `role` to link actors to their respective films. Once we have the actor's identifier, we can look up their `deathPlace`.

Here is a SPARQL query that could be used:

```sparql
SELECT ?actor ?actorLabel ?deathPlace
WHERE {
  ?actor rdfs:label ?actorLabel .
  ?actor dbpprop:role [ rdf:type skos:Concept ; dbpprop:name ""Sky Ranger (1928 film)"" ] .
  ?actor dbo:deathPlace ?deathPlace .
}
```

This query searches for an actor labeled with a name matching ""Sky Ranger (1928 film)"" and retrieves their label and death place.",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?producer ?band
WHERE {
  ?producer rdfs:label ""Producer of Coke Studio Philippines"".
  ?band rdfs:label ""Bob Thompson (musician)"".
  ?producer wdt:P31 ?band.
}",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?recipient ?war WHERE {
  ?recipient a icrc:Recipient ;
               rdfs:label ?name .
  OPTIONAL { ?recipient wdt:P31 wd:Q12298 } # This is to find if the recipient is specifically associated with a war
  ?war a wd:Q171 . # War class in DBpedia
  ?recipient ns:award ?award .
  ?award rdfs:label ""Golden Sword for Bravery"" .
}",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
    rdfs:label ""Elorm Kabu Amenyah""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"SELECT ?entity
WHERE {
  ?entity a dbo:Person ;
            rdfs:label ""Петр I"" .
}",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?person a ns:Person ;
            ns:hasMilitaryServiceMember ?military_officer .
  ?military_officer a ns:MilitaryOfficer ;
                 ns:participatedIn ?war
}
WHERE {
  ?person rdfs:label ""Karl Gustav von Baggovut"" .
}",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor ?movie WHERE {
  ?actor rdfs:label ""Allan Arbus"" .
  ?actor ns:parent ?child .
  ?child ns:parent ?grandparent .
  ?grandparent rdfs:label ""Herschel Bernardi"" .
  OPTIONAL { ?movie rdfs:subject ?actor . }
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"SELECT ?actor ?spouse
WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:release_date ""1989-01-01"" .
  ?actor a person:Actor ;
         mousetrap:role_in_film ?movie .
  ?janusz_kaminski a person:Person ;
                  foaf:sparqlEndpoint <http://dbpedia.org/sparql> .
  OPTIONAL { ?janusz_kaminski ns:marriedTo ?spouse }
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"SELECT ?office1 ?office2 WHERE {
  ?politician1 a :POLITICIAN;
  ?politician1 foaf:name ""Mariano Rajoy""@es.
  ?office1 a :OFFICE; # Office of Mariano Rajoy
  ?office1 rdfs:label ""Office of the Prime Minister of Spain""@en.

  ?politician2 a :POLITICIAN;
  ?politician2 foaf:name ""Unknown Conservative Republican Party Leader""@en.
  ?office2 a :OFFICE; # Office of the Conservative Republican Party leader
  ?office2 rdfs:label ""Mayor of Madrid""@en.
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"To retrieve this information from DBpedia, we can construct a SPARQL query that first finds the relevant album by T.I. and then links it to the actor portraying Shelby Oaks.

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor WHERE {
  ?album a dbpprop:Album ;
            dbpprop:performer [ anonA ] .
  ?song a dbpprop:Song ;
         dbpprop:performer [ anonB ] .
  ?musicalWork a dbpprop:MusicalWork ;
               dbpprop:performer [ anonC ] .
  ?album rdfs:label ""Shelby Oaks Album"" . 
  ?song rdf:type ?type_song .
  ?musicalWork rdf:type ?type_musical_work .
  ?actor ns:actor ?person .
  ?person a dbpprop:Person ;
           dbpprop:name ""Actor Name"" .
}
```

This query looks for an album by T.I. labeled ""Shelby Oaks Album,"" then finds songs and musical works associated with that album, and finally links those to the actor who portrays Shelby Oaks.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Person;
    rdfs:label ?name.
  OPTIONAL { ?person dbo:birthLocation ?birthPlace }
  FILTER (lang(?name) = ""en"" )  # Ensure the person is American
}
```",6,7,7,3,3,3,3,71,0,1048576,1,0.0,0.0,0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"SELECT ?awardee
WHERE {
  ?award a congress:award .
  ?awardee won ?award .
}",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person.
  dbpedia2:decedentLocationOf ?person ""Switzerland"".
  dbpedia2:nativePlaceOfBirthOf ?person [ a dbpedia2:AdministrativeDivision; rdfs:label ""Grand Duchy of Finland"" ].
  dbpedia2:nativePlaceOfBirthOf ?person [ a owl:Thing; rdfs:label ""Russian Empire"" ].
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","SELECT ?father
WHERE {
  ?person a :Person ;
           :name ""Catherine of Austria"" ;
           :title ""Queen of Portugal"" ;
           :mother ?mother ;
           :father ?father .
  ?mother a :Person ;
         :name ""Isabella of Portugal"" .
}
LIMIT 1",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"To retrieve this information, we would need to construct a SPARQL query that searches for the award details and then extracts the force (if provided) of the recipient. Assuming the award is named ""Quincy Adams Gillmore Award"" and the recipient's force is recorded in a property like `power` or `force`, the query might look something like this:

```sparql
SELECT ?recipient ?force 
WHERE {
  ?recipient awardeeOf <http://dbpedia.org/ontology/Award> .
  ?recipient hasProperty <http://xmlns.com/foaf/0.1/power> ?force .
}
```

This query searches for individuals who are recipients of an award with the label ""Quincy Adams Gillmore"" and then looks for a property related to their physical force.",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","SELECT ?writer ?title ?event WHERE {
  ?writer rdfs:label ""Always the Love Songs""@en .
  ?writer a :politician .
  ?writer a :office_holder .
  ?writer foaf:name ""Jean Baptiste, Comte d'Arco"" .
  OPTIONAL { ?writer rdfs:subClassOf [ a owl:Class; rdfs:label ""Commander in Russo-Polish War (1654–1667)"" ] }
  ?event a :societal_event .
  ?event rdfs:label ""Jean Baptiste, Comte d'Arco""@en .
  FILTER (lang(?event) = ""en"") 
}",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace WHERE {
  ?princess a cat:Person; cat:parent ?father .
  ?father a owl:Thing; foaf:name ""Chiang Ching-kuo"" .
  ?princess cat:child ?child .
  ?child a owl:Thing; foaf:name ""Child of Chiang Ching-kuo from Cat Country (novel)"" .
  ?child ns:birthPlace ?birthPlace
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","SELECT ?parent WHERE {
    ?child a ns:Person ;
            ns:hasParent ?parent .
    ?parent ns:maintainedBy <Frederick_Stanley_16th_Earl_of_Derby> .
    ?child ns:name ""Arthur Stanley"" .
    ?child ns:name ""Victor Stanley"" .
    ?child ns:name ""Child of Frederick Stanley"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?militaryForce WHERE {
  ?person a :MilitaryPerson.
  ?person rdfs:label ""William Bayne"".
  ?person foughtIn :Napoleonic_Wars.
  ?militaryForce a :MilitaryForce.
  ?militaryForce rdf:type :European_Military_Force .
}",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"SELECT ?actor ?spouse WHERE {
  ?actor rdfs:label ""Gene Raymond""@en .
  ?actor foaf:marriagePartner ?spouse .
  ?spouse a republicanPartyMemberOfUnitedStates .
  ?film productionCompany ""Nat Levine"" .
  ?film rdfs:label ""Flying Down to Rio""@en .
  ?actor appearedIn ?film
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:birthPlace ""Moscow"" .
  ?person ns:deathPlace ""Switzerland"" .
  ?person rdfs:label ""Grand Duke of Finland"" .
  FILTER (lang(?person) = ""en"")  # Ensuring the label is in English
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"The SPARQL query will involve querying the DBpedia dataset for information about George Savage and extracting the details of his associated political party. Then, it will use this party's information to find its leader.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"The SPARQL query will search for the artist known as Joey B. and extract their birth name. Assuming Joey B. is Joseph Bruce (one of the members of the band Twiztid), the query would look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?artist dbpedia-owl:hasRealName ?birthName .
  ?artist rdfs:label ""Joey B."" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","SELECT ?person WHERE { ?person a ns:Person ; ns:mbox ?mbox . FILTER ( regex(?mbox, ""Ackquille Jean Pollard"") ) }",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","SELECT ?name
WHERE {
  ?artist a dbpedia-owl:Artist ;
            dbpprop:regionOfOrigin dbpedia:CentralRegion .
  ?artist rdfs:label ?name .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"The SPARQL query would look for the successor of Yurii Khmelnytsky in a structured database like DBpedia, which contains linked data about people and their roles. Here's how the query might be constructed:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?successor WHERE {
  ?person a rdf:Person.
  ?person rdfs:label ""Yurii Khmelnytsky""@en .
  ?person ns:successor ?successor .
  ?successor a rdf:Person .
}
```

This query selects the label of any person (`?person`) who is labeled as ""Yurii Khmelnytsky"" and has a successor (`?successor`), returning the label of that successor.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?father_royalty ?shadow_alter_ego ?dawit_i_child WHERE {
  ?question Na'od father ?father_royalty.
  ?father_royalty a royalty .
  ?father_royalty a officeHolder .
  ?reference_to_lamont_cranston a nfo:AlterEgo ?shadow_alter_ego .
  ?reference_to_lamont_cranston rdfs:label ""Lamont Cranston""@en.
  ?child_of_dawit_i a dbo:Child ?dawit_i_child .
  ?dawit_i_child a dbo:Person ;
               dbo:parent ?father_royalty .
  ?dawit_i a dbo:Person ;
               rdfs:label ""Dawit I""@en .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"SELECT ?rank ?war WHERE {
  ?officer a ns:navyperson .
  ?officer rdfs:label ""William Tennant""@en .
  ?battle a ns:war .
  ?officer ns:participantIn ?battle .
  ?battle rdfs:label ""Sinking of Prince of Wales and Repulse""@en
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?regiment rdf:type :Regiment.
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"".
  ?battle a :Battle.
  ?battle rdfs:label ""Battle of Fort Royal"".
  ?commander a :MilitaryForce.
  ?commander foaf:commands ?regiment .
  ?regiment participatedIn ?battle
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"SELECT ?member
WHERE {
  ?member a dbpedia-owl:MusicArtist ;
           dbpedia2:bandMemberOf dbpedia:GS9 .
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"Given the complexity and the need to join multiple datasets, we will use DBpedia as our primary source for structured data about football clubs, players, and managers. The SPARQL query might look like this:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager
WHERE {
  ?player a dbpprop:SportPerson ;
            dbpprop:memberOf [ a dbpprop:SportsClub ; 
                                rdfs:label ""VfL Bochum"" ] ;
            foaf:name ?name .
  ?season a dbpprop:FootballLeagueSeason ;
            dbpprop:succeededBy ?successorSeason .
  ?successorSeason a dbpprop:FootballLeagueSeason ;
                    rdfs:label ""2007-08 Bundesliga"" @prefix : <#>.
  ?player swo:hasManager ?manager .
  ?manager a foaf:Person ;
           foaf:name ?managerName .
  ?manager ns:adminCountry ""Germany"" .
}
```

This query does the following:
- Selects the manager (`?manager`) of any `SportPerson` (which includes players) who is a member of a sports club with the label ""VfL Bochum"".
- Ensures that the season succeeded by the 2006–07 VfL Bochum season is the 2007–08 Bundesliga.
- Filters for managers who are people (`foaf:Person`), have a name (`foaf:name ?managerName`), and are from Germany (`ns:adminCountry ""Germany""`).",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?band
WHERE {
  ?sam a ns:people.person;
    rdfs:label ""Sam Concepcion""@en .
  ?bob a ns:people.person;
    rdfs:label ""Bob Thompson (musician)""@en .
  ?sam ns:memberOf ?band1 .
  ?bob ns:memberOf ?band2 .
  ?band1 rdfs:label ?bandLabel .
  ?band2 rdfs:label ?bandLabel .
  FILTER (regex(str(?bandLabel), ""Sam Concepcion"") AND regex(str(?bandLabel), ""Bob Thompson""))
}",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?bandMember
WHERE {
  ?artist ns:name ""Ackquille Jean Pollard"" .
  ?artist rdfs:type [ rdf:type owl:Class ; rdfs:label ""musical artist"" ] .
  ?artist dbpprop:associatedBandMember ?bandMember .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?subject ?property ?object WHERE {
  ?subject a dbpedia-owl:TelevisionShow ;
            dbpedia-owl:hasMainCharacter ?character .
  ?character foaf:name ""Jean Baptiste, Comte d'Arco"" .
  ?subject rdfs:label ""The Borgias"" .
  
  ?subject rdfs:isDefinedBy dbo:Creator ""Showtime"" .
  
  ?object a dbpedia-owl:Event ;
            dbpprop:partOfHistory ""French Revolutionary Wars"" .
  
  ?object rdfs:label ""Italian Campaign"" .
  
  ?object dbpprop:commandedBy ?comander .
  
  ?comander foaf:name ""Jean Baptiste, Comte d'Arco"" .
  
  FILTER (regex(str(?object), ""Always Something There to Remind Me"")) .
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"SELECT ?father_name ?party
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:hasFather ?father .
  ?father rdfs:label ?father_name ;
    owl:sameAs ?father_uri .
  ?father_uri a dbpedia-owl:OfficeHolder;
    dbpprop:office ""President of Argentina"" .
}
LIMIT 1",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","SELECT ?spouse
WHERE {
  ?actor dbpprop:firstName ""Jackie"".
  ?actor dbpprop:roleInSeries ""1,000 Dollars a Minute"".
  ?actor wdt:P31 dbo:Actor .
  ?actor wdt:E19 dct:is spouse of ?spouse.
  FILTER (lang(?actor) = ""en"")  # Assuming we want results in English
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","SELECT ?parent WHERE {
  ?person1 rdfs:father ?father1 .
  ?person2 rdfs:mother ?mother2 .
  ?father1 owl:sameAs ?parent .
  ?mother2 owl:sameAs ?parent
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","SELECT ?manager_name
WHERE {
    ?manager birthDate ""1968-08-26"" .
    ?manager nativeCountry ""Germany"" .
    ?club manager ?manager_name .
    ?season a dbo:Season .
    ?soccerClubSeason a dbo:SoccerClubSeason .
    ?soccerClubSeason club ?club .
    ?sportsSeason a dbo:SportsSeason .
    ?sportsTeamSeason a dbo:SportsTeamSeason .
    ?sportsTeamSeason season ?sportsSeason .
    FILTER (STR(?season) = ""1968"")
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","SELECT ?writer ?successor WHERE {
  ?work ""The Fall of the Man of Kazan"" .
  ?author ?writer .
  ?person ""Yurii Khmelnytsky"" .
  ?person rdfs:successorOf ?successor .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?singer ?band WHERE {
  ?person a dbpedia:Musician;
    rdfs:label ""Bob Thompson""@en .
  ?person foaf:name ""Robert Thompson""@en .
  ?person dbpprop:singer ?singer .
  ?person dbpprop:band ?band
}
LIMIT 1",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?grandchild WHERE {
  ?charles_martel_of_anjou a tv:character .
  ?charles_martel_of_anjou tv:hasParent ?parent .
  ?parent a tv:person .
  ?parent tv:hasChild ?child .
  ?child a tv:character .
  ?child tv:hasParent ?grandparent .
  ?grandparent a tv:person .
  FILTER (tv:isA ?grandparent tv:royalty)
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },SELECT ?residence WHERE { ?person a :POLAND ; foaf:based_near ?residence . ?person a ns:people.person },1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"SELECT ?person
WHERE {
  ?commander rdfs:label ""Commander in the war""@en .
  ?disease/societal_event rdfs:label ""Disease/Societal Event""@en .
  ?book rdfs:label ""Back to Work""@en .
  ?author wrote ?book .
  ?author spouseOf ?spouse .
  ?spouse a pol:OfficeHolder .
  ?book a nif:Book .
  ?person a nif:Person;
    foaf:name ?name;
    rdfs:label ""Politician and Office Holder""@en .
}",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","SELECT ?parent WHERE {
  ?child1 a dbpedia-owl:Person;
    dbpedia-owl:hasParent ?parent .
  ?child2 a dbpedia-owl:Person;
    dbpedia-owl:hasParent ?parent .
  ?child1 foaf:name ""Hon. Mary Frances Bowes-Lyon"" .
  ?child2 foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"" .
  ?parent a dbpedia-owl:Person .
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"The SPARQL query will involve:
1. Identifying the band ""Uncle Murda"".
2. Finding the awards associated with this band.
3. Extracting the details of the first such award (assuming there's only one relevant award).

Here is the constructed SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?band ""Uncle Murda"" .
  ?band :winsAward ?award .
  ?award a rdf:Property .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = ""en"")  # Assuming English language for award details
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?commander WHERE {
  ?event a :MilitaryConflict;
  :commander ?commander .
  ?event rdfs:label ""Portuguese Restoration War"" .
  ?event dbpprop:mainCharacter ""Maria I of Portugal"" .
}",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"SELECT ?person
WHERE {
  ?person a :Person ;
            :birthPlace ?birthplace ;
            :originCountry :RussianEmpire .
  ?birthplace rdfs:label ""Sandro Bertaggia's birthplace""@en .
}",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"SELECT ?leader WHERE {
  ?party psoe:president ?leader .
  ?leader a dbpedia-owl:OfficeHolder ;
            rdfs:label ""Spanish Socialist Workers' Party president""@en.
}

AND
SELECT ?country WHERE {
  ?citizen a dbpedia-owl:Person ;
             foaf:nationality ?country .
  ?country rdfs:label ""Spain""@en.
}",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","To find the residences of Doug Beattie and George Hamilton Cameron, we would need to construct two separate SPARQL queries:

For Doug Beattie:
```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?residence WHERE {
  ?person a foaf:Person;
    foaf:name ""Doug Beattie""@en;
    foaf:based_near ?residence.
}
```

For George Hamilton Cameron:
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?residence WHERE {
  ?person a dbo:OfficeHolder;
    dbo:office dbo:GovernorOfMadras ;
    rdfs:label ""George Hamilton Cameron""@en.
    ?person dbo:residence ?residence .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"The SPARQL query to retrieve this information from DBpedia would involve querying for the band associated with the musician named ""Bob Thompson"". Assuming that DBpedia has structured data about bands and their members, the query might look something like this:

```sparql
SELECT ?bandLabel WHERE {
  ?musician a dbpedia-owl:Musician;
           rdfs:label ""Bob Thompson""@en .
  ?musician wdt:P31 ?band .
  ?band a wdt:P41 .
}
```

This query selects the label of the band (`?bandLabel`) where there is a musician named ""Bob Thompson"" (`?musician`) who is part of that band (`?musician wdt:P31 ?band`).",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace
WHERE {
  ?person a dbo:Person ;
            rdfs:label ?name .
  ?person dbpprop:deathPlace ?deathPlace .
}
LIMIT 3",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","The SPARQL query will involve querying the DBpedia dataset for the books ""Promise Me, Dad"" and ""Promises to Keep,"" and then extracting the authors' names. Here's how we can structure the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?title ?author WHERE {
  ?book dbpedia:isBookOf ?title .
  ?book dbpedia:hasAuthor ?author .
  ?title = ""Promise Me, Dad"" .
  ?title = ""Promises to Keep"" .
}
```

This query selects the titles and authors of books where the title matches ""Promise Me, Dad"" or ""Promises to Keep.""",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"The SPARQL query will need to search for resources that are both of type `writtenWork` and have an associated person with the label 'Joe Biden'. Assuming that DBpedia has structured information about these works, the query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?work
WHERE {
  ?work a dbo:WrittenWork ;
           dbo:author [ rdf:type dbo:Person ;
                      dbo:name ""Joe Biden"" ] .
}
```

This query selects all `?work` resources that are of type `dbo:WrittenWork` and have an author of type `dbo:Person` with the name ""Joe Biden"".",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasSpouse [ dbpedia:name ""Roger Pryor"" ] ;
            rdfs:label ""Harriette Arlene Lake""@en .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"SELECT ?bandMember WHERE {
  ?project a dbpedia-owl:MusicProject ;
              dbpedia-owl:hasBandMember ?bandMember .
  ?bandMember foaf:name ""Billy Lyall"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"SELECT ?player WHERE {
  ?player ns:name ""Juan Carlos Molina""@en .
  ?player rdf:type rdfs:Resource .
  ?player foaf:role ""footballer""@en .
  ?player ns:appearanceIn ""All or Nothing: Manchester City"" .
  ?player ns:role ""athlete"" .
  ?player ns:role ""soccer player"" .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?person ?office ?role WHERE {
  ?person a dbpedia-owl:OfficeHolder .
  ?person a dbpedia:PoliTic .
  ?person rdfs:label ?name.
  OPTIONAL { ?person dbpprop:conflict ""Central African Republic Civil War"" . }
  OPTIONAL { ?person dbpprop:party ""Conservative Republican Party (Spain)"" . }
  FILTER (?name = ""YourNameHere"")  # Replace with the actual name of the person
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child father ns:Maximilian_I_Holy_Roman_Emperor .
  ?child grandfather ns:Philip_I_of_Castile
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","SELECT ?person
WHERE {
    ?person a dbpedia:Athlete .
    ?person dbpprop:birthDate ""1955-02-22"" .
    ?person rdfs:member [ dbpprop:teamMemberOf dbpedia:FCB ] .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?war a  skos:Concept .
  ?war rdfs:label ""Greek War of Independence""@en .
  ?war ns:partOfEvent  [ ns:identifier ""1821"" ] .
  ?person foaf:name ""Konstantinos Ventiris"" .
}",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?actor WHERE {
  ?movie ab:mainCharacter ?actor .
  ?actor rdfs:label ""Richard E. Grant"" .
  ?actor foaf:role ""Television Show Actor"" .
  ?actor dbpprop:profession ""Politician"" .
  FILTER (lang(?actor) = ""en"")  # Assuming the data is in English
}",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","A SPARQL query to find the reference of ""Nothing to Gein"" in DBpedia would look for any resource that has this label or is related to it. Here's a possible SPARQL query:

```sparql
SELECT ?resource WHERE {
  ?resource a dbpedia-owl:Film .
  ?resource rdfs:label ""Nothing to Gein""@en .
}
```

This query selects resources (`?resource`) that are films (`?resource a dbpedia-owl:Film`) and have the label ""Nothing to Gein"" in English (`?resource rdfs:label ""Nothing to Gein""@en`).",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"The SPARQL query would need to search for the character ""The Shadow"" in the context of video games and then extract their professional alter ego. Assuming that DBpedia has structured data about this video game character, the query might look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?character ?profession 
WHERE {
  ?character a dbo:Character ;
             rdfs:label ""The Shadow""@en .
  ?character dbpprop:alterEgo ?profession .
}
```

This query selects the character named ""The Shadow"" and their corresponding professional alter ego (if available) from DBpedia's ontology.",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:MusicalArtist ;
            dbpedia:associatedBand/artist ?band .
  ?band a dbpedia:Band .
  ?artist ns:involvesDbpedia:genre dbpedia:MusicalGenre ""Latin"" .
  ?bandMember a dbpedia:Musician .
  ?artist ns:involvesDbpedia:origin dbpedia:Puerto_Rico .
  ?region a dbpedia:Region ;
            dbpedia:isPartOf dbpedia:Puerto_Rico;
            dbpedia:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?child WHERE {
  ?child a pol:Politician .
  ?child ns:father IAO:parent [ a owl:NamedIndividual ;
                           rdfs:label ""Chiang Ching-kuo"" ] .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer
WHERE {
  ?producer a :Person.
  ?producer rdfs:label ""The Shadow""@en.
  ?producer wdt:P31 <http://dbpedia.org/ontology/Producer> <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)>.
  ?work a wdt:P17 ; wd:toplevel ""Film"" ; wdt:P18 ""Cora Sue Collins"" .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?subject ?property ?object WHERE {
  ?subject a dbpedia-owl:Person.
  ?subject rdfs:label ""George Ducas"".
  ?subject dbpprop:participatedInBattle dbpprop:Battle_of_Vienna_1683 .
  ?subject foaf:successor ?successor .
  ?successor a dbpedia-owl:Person.
  ?successor rdfs:label ""Yurii Khmelnytsky"" .
  OPTIONAL { ?subject dbpprop:commandedInBattle ?battleEvent . }
  FILTER (lang(?subject) = ""en"")  # Limit results to English language
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"To find this information, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:hasCause dbpedia:Disease; # Assuming ""disease"" as a cause of conflict
    dbpedia:isEventOf dbpedia:SocietalEvent. # Assuming ""societal event"" as part of the war context
  ?commander a dbpedia:Person;
    dbpedia:hasRole dbpedia:CommanderOf; # Commander role in the war
    dbpedia:owns dbpedia:USS_Arcadia_ID_1605. # Link to USS Arcadia
  ?war rdfs:label ""The War"". # Placeholder for the actual war name
}
```

This query searches for a person who is both the commander of a conflict (assuming ""The War"" as a placeholder), which has a disease as a cause and is an event of a societal nature, and owns USS Arcadia (ID-1605).",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"The SPARQL query will involve querying the DBpedia dataset for the children of Alexander of Württemberg and then recursively querying for their children until we reach the third generation.

Here's a structured approach to constructing the SPARQL query:

1. Start with Alexander of Württemberg.
2. Find his children.
3. For each child, find their children.
4. For each grandchild, find their children (third generation).

Given the complexity and depth of the query, we'll need to use recursive queries or a series of nested SELECT statements.",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"SELECT ?territory_name ?mayor_name
WHERE {
  ?territory_name rdfs:label ""Copenhagen"" .
  ?administration rdf:type owl:Thing .
  ?administration rdfs:label ""Mayor of Duchy of Schleswig"" .
  ?administration ?mayor_name .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"SELECT ?name WHERE {
  ?peter iv:father ?alfonso .
  ?alfonso rdfs:label ?realName
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"To find the country where Little Hat Jones is from using DBpedia data, we need to query for information related to the ""Paw Patrol"" series and identify the fictional location associated with Little Hat Jones. Here's a SPARQL query that attempts to retrieve this information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?country WHERE {
  ?character a ns:Character ;
               ns:originatesFrom ?country .
  ?character rdfs:label ""Little Hat Jones""@en .
}
```

This query selects the country (`?country`) where the character `Little Hat Jones` originates from, assuming that characters in ""Paw Patrol"" have been linked with their places of origin in the DBpedia dataset.",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?band_name ?real_artist_name WHERE {
  ?band_name a dbpedia:Band .
  ?band_name member Kim_Wilson .
  ?band_name mwe:performer [ dbpedia2:has_artistic_name ""Nick Curran"" ] .
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"The SPARQL query will involve querying the DBpedia dataset for the relevant individuals and their familial relationships. Here's how the query might look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child2 WHERE {
  ?parent childOf ?child1 .
  ?child1 childOf ?child2 .
  ?parent ns:name ""Minye Kyawswa"" .
}
```

This query starts by selecting the children (`?child1`) of the person named ""Minye Kyawswa"" (`?parent ns:name ""Minye Kyawswa""`). It then selects the children (`?child2`) of those children (`?child1`).",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"SELECT ?parent WHERE {
  ?spouseSpouse a dbpedia-owl:Person ;
  dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia:Royalty
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?person WHERE {
    ?person a :artist .
    ?person a :musicalArtist .
    ?person rdfs:label ""Stanley Kubrick"" .
    ?person dbpprop:deathDate ""2020-06-18"" .
    ?person dbo:parentOf <Kate Dimbleby>
}",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?actor
WHERE {
  ?movie a mousetrap:Film;
    mousetrap:hasActor ?actor .
  ?actor foaf:parent [ a dbo:Person; rdfs:label ""Professional"" ] .
  FILTER (STR(?actor) = ""Herschel Bernardi"") .
  ?movie rdfs:label ""Photographer"" .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty .
  ?child rdfs:father Alfonso_IV_of_Aragon .
}",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:Child ;
           foaf:father dbpedia:Alfonso_VI_of_Le%C3%B3n_and_Castile .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","SELECT ?artist WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1995-04-15"" ;
            rdfs:label ""Emilia Yancheva Valeva""@en .
  ?artist a dbpedia:Musician ;
           dbpedia:bandMemberOf ?person .
}",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"The SPARQL query will look for the death place of the entity with the label ""Sal Mineo"". Here's how we can construct it:

```sparql
SELECT ?deathPlace
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""Sal Mineo""@en .
  ?person dbo:deathDate ?deathDate .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:nationality dbpprop:UnitedStates .
  ?person rdfs:label ""Henry Clay Lewis""@en;
    dbo:birthPlace ?birthplace .
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor WHERE { <http://dbpedia.org/ontology/film> ?filmTitle ""Akaler Shandhaney"" } UNION { ?actor a <http://dbpedia.org/ontology/Actor> }",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:spouse ""Bill Clinton"" .
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbpedia2:commanderIn ""Third Taiwan Strait Crisis"" }
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?workLabel ?artist
WHERE {
  ?work a dbpedia-owl:MusicalWork ;
            dbpedia-owl:creator ?artist .
  ?artist rdfs:label ?workLabel .
  ?artist ns:name ""Steven Kapur"" .
  ?workLabel = ""True Self""
}",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","SELECT ?royalty
WHERE {
  ?parent a :parent;
    rdfs:label ""Hugh of San Germano"".
  ?child a :child;
    rdfs:label ?royalty;
    owl:sameAs ?william_ii_of_sicily.
  ?william_ii_of_sicily a :royalty .
  ?parent ns:fatherOf ?roger_duke_of_apulia .
  ?roger_duke_of_apulia a :person;
    rdfs:label ""Roger III, Duke of Apulia"".
  ?roger_duke_of_apulia ns:child ?matilda .
  ?matilda a :royalty .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","SELECT ?actor ?parent_name ?child_name
WHERE {
  ?actor rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?parent rdfs:label ""Harold Arbus""@en .
  ?parent ns:father ?actor .
  ?child rdfs:label ""Allan Arbus""@en .
  ?child ns:child ?parent .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?author WHERE {
  ?work a book;
    dc:author ?author.
  ?author foaf:name ""Joe Biden"" .
  ?author ns:nationality ""United States"".
}",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"SELECT ?awardee
WHERE {
  ?award CBE .
  ?awardee award ?award .
}",1,1,2,1,1,3,2,20,0,0,853,0,0.0,0
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?war ?tv_show
WHERE {
  ?war rdfs:label ""Battle of Preveza"" .
  ?tv_show rdfs:label ?warLabel .
  ?tv_show ns:hasSubject ?war.
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"The SPARQL query will look for the person named ""Álvaro Quirós"" and then extract the country from the resulting dataset. Here is the corresponding SPARQL query:

```sparql
SELECT ?country
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""Álvaro Quirós""@pt.
  ?person dbpprop:residence ?country.
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?band ""Filthy Friends"" .
  ?bandMember ?artist .
  ?bandMember rdf:type dbpprop:BandMember .
  ?artist a dbpprop:MusicArtist
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?birthPlace
WHERE {
  ?author ""Cece Bell"" .
  ?author ns:birthLocation ?birthPlace .
}
AND
{
  ?politicianGlennYoungkin foaf:name ""Glenn Youngkin"" .
  ?politicianGlennYoungkin ns:birthLocation ?birthPlace .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"SELECT ?parent WHERE {
  ?child princes_faisal_bin_hussein ;
    father ?parent .
  ?parent a royal .
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person ?profession WHERE {
  ?person a dbpedia:MusicalArtist .
  ?bandMember a dbpedia:BandMember .
  ?person foaf:name ""Sam Concepcion"" .
  ?bandMember rdf:type dbpedia:Musician .
  ?person rdfs:label ?profession .
  ?bandMember foaf:bornDate ?birthDate
}
LIMIT 1",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"SELECT ?child WHERE {
  ?politician a :politician .
  ?politician :decedentAt ""Taipei"" .
  ?child a :childOf ?politician .
  ?child a :politician
}",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"The SPARQL query to retrieve this information from DBpedia would involve selecting the appropriate resource (in this case, likely a person with the given name) and then accessing the 'birthname' property. Assuming Eleonora Menicucci has a corresponding entry in DBpedia, the query might look like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthname
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia-owl:birthname ?birthname .
  ?person rdfs:label ""Eleonora Menicucci""@it.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?manager
WHERE {
  ?club dbpedia:hasManager ?manager .
  ?club rdfs:label ""Hartlepool United F.C."" .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?entity WHERE {
  ?entity a dbpedia:Person.
  ?entity rdfs:label ""Toyotomi Hidenaga""@ja.
  OPTIONAL { ?entity dbpprop:participatedInBattle ?battle }
  FILTER (lang(?battle) = ""ja"" )
} 

AND {
  ?entity a dbpedia:Person.
  ?entity rdfs:label ""Toyotomi Hideyoshi""@ja.
  ?entity dbpprop:child ?child.
  ?child a dbpedia:Person.
  OPTIONAL { ?child rdfs:label ""Toyotomi Hideyori""@ja. }
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?manager
WHERE {
    ?manager a ns:people.person;
           ns:p31 ?person .
    ?person ns:givenName ""Thomas"";
             ns:surname ""Hitzlsperger"" .
    ?manager ns:managesTeam ?team1 .
    ?team1 rdfs:label ""SBV Vitesse"".
    ?manager ns:managesTeam ?team2 .
    ?team2 rdfs:label ""VfL Bochum"" .
    ?manager ns:birthPlace ""Germany"" .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?subject ?property ?object WHERE {
  ?subject a :CommanderInWar.
  ?subject rdfs:label ""Jean Baptiste, Comte d'Arco"".
  
  ?subject ns:successor ?successor.
  ?successor a :PoliticianAndOfficeHolder.

  ?successor a :MilitaryLeader.
  ?successor rdfs:label ""Michał Kazimierz Pac"".

  ?successor ns:involvedInEvent ?event.
  ?event a :MilitaryConflict.
  ?event rdfs:label ""Deluge"".

  ?subject ns:referencedBy ?georgeDucas.
  ?georgeDucas a :HistoricalFigure.
  ?georgeDucas rdfs:label ""George Ducas"".
}",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","SELECT ?awardee ?awardeeLabel WHERE {
  ?awardee a ns:people.person;
  ns:nationality ns:countryAustralia .
  ?awardee rdfs:label ?awardeeLabel .
  OPTIONAL { ?awardee ns:microformats:vcard.fnformatter ""Australian Laureate Fellowship"" }
}",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?director ?producer WHERE {
  ?movie a :Film;
    dc:title ""7th Heaven"";
    dct:creator ?director .
  ?producer a :Person;
    rdfs:label ""Samuel Goldwyn"";
    dct:role ""producer"" IN ?movie
} UNION {
  ?work a :CreativeWork;
    dct:title ""Sunny"";
    dct:creator ?director .
  ?producer a :Person;
    rdfs:label ""Joseph M. Schenck"";
    dct:role ""producer"" IN ?work
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasFather ?father .
  ?person dbpedia2:name ""William II of Sicily"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:hasSpouse ?spouse .
  ?person rdfs:label ""Janusz Kamiński""@pl.
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"SELECT ?player ?manager ?soccer_club ?season ?sport_season WHERE {
  ?player rdfs:label ""Thomas Letsch"" .
  ?player dbpprop:country ""West Germany"" .
  ?soccer_club rdfs:label ""VfL Bochum"" .
  ?soccer_club dbpprop:season ""2006-07"" .
  ?manager a dbo:Manager .
  ?manager dbpprop:managed ?player .
  ?successorSeason a dbo:FootballLeagueSeason .
  ?soccer_club dbpprop:succeededBy ?successorSeason .
  ?sport_season a dbo:SportSeason .
  ?soccer_club dbpprop:season ?sport_season
}",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","SELECT ?director ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:basedUpon dbo:Smartbomb.
  ?movie rdfs:director ?director .
  ?movie rdf:starring ?actor .
}",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","SELECT ?parent ?child WHERE {
  ?parent a dbpedia:Person ;
            rdfs:label ""Emperor Franz Joseph I of Austria"" .
  ?child a dbpedia:Person ;
          rdfs:label ""Carl, Duke of Württemberg"" ;
          dbpprop:parent ?parent .
  ?child a dbpprop:royalty
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?grandparent;
    dbpedia:child ?child.
  ?child a dbpedia:Person;
    rdfs:label ""Catherine of Austria, Queen of Portugal"";
    dbpedia:mother ?mother.
  ?grandparent a dbpedia:Person;
    rdfs:label ""Maximilian I, Holy Roman Emperor"".
  FILTER (str(?child) = ""Isabella of Austria"")
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","SELECT ?child
WHERE {
  ?parent a dbpedia-owl:Person ;
           rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel"" .
  ?child a dbpedia-owl:ChildOf ?parent .
}",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","The SPARQL query will need to navigate through the relationships of parents and children in the DBpedia ontology. We'll start from Carl and move backwards through his lineage until we reach Alexander of Württemberg (1804-1881). Here's a structured approach:

1. Identify Carl's father.
2. Find the father of Carl's father.
3. Repeat step 2 until reaching Alexander of Württemberg.

Given the complexity of querying across multiple generations, we'll need to use nested queries or recursive SPARQL calls if supported by the endpoint. However, for simplicity and assuming a direct query capability:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?greatGrandfather
WHERE {
  ?carl dcterms:spouse ?wife .
  ?wife rdfs:label ""Name of Carl's wife"" .
  ?carl dbpedia-owl:offspring ?child1 .
  ?child1 dbpedia-owl:offspring ?child2 .
  ?child2 dbpedia-owl:offspring ?greatGrandfather .
  ?greatGrandfather rdfs:label ""Name of great-grandfather"" .
}
```

This query is a simplified example and assumes direct relationships without considering the exact birth years or the need to trace back three generations. For an accurate solution, we would need to adjust the query to account for the precise lineage and birth dates.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:parent ?grandparent ] .
  ?grandparent ns:parent [ ns:parent <Ferdinand Albert II, Duke of Brunswick-Lüneburg> ] .
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Archduchess Margarete Sophie of Austria"" .
  OPTIONAL { ?child dbpedia:hasParent ?grandparent }
  ?grandparent a dbpedia:Person;
    dbpedia:hasChild ?parent .
  ?grandparent dbpedia:name ""Carl, Duke of Württemberg""
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","The SPARQL query will involve looking up these individuals in DBpedia and then finding any associated musical artist. Here's a structured approach:

1. Find the real name (Darryl Paa Kwesi Bannerman-Martin) in DBpedia.
2. Link that real name to any information about their musical artist association.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?musicalArtist 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { ?person rdfs:seeAlso ?artist . }
  ?artist a dbpedia:Musician .
}
```

This query searches for individuals with the birth name ""Darryl Paa Kwesi Bannerman-Martin"" and then looks for any seeAlso links that might point to a Musician resource, which would represent the associated musical artist.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?admin WHERE {
  ?leader a ns:Person ;
            ns:givenName ""Willy"" ;
            ns:nationality ?admin .
}
LIMIT 1",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"The SPARQL query will search for Juan Carlos Molina in the context of footballers and then extract the relevant player details. Here's the appropriate SPARQL query:

```
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player
WHERE {
  ?player a dbpprop:Footballer ;
            foaf:name ""Juan Carlos Molina"" .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"SELECT ?actor
WHERE {
  ?movie a movie:Movie ;
            hasActor ?actor .
  ?actor a person:Person ;
         hasSpouse ?spouse ;
         hasChild ?child .
  ?child a foaf:Person ;
         isSpouseOf ?spouse .
  ?spouse a person:Person ;
          hasParent ?parent .
  ?parent a person:Person ;
           appearsInMovieWith Herschel_Bernardi .
  ?actor ns:familyMember ?arbus .
  ?arbus ns:parent ?actor
}
ORDER BY ?actor",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","SELECT ?child WHERE {
  ?parent a ns:Person ;
            ns:hasChild ?child .
  ?parent ns:name ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel"" .
  ?child ns:father ?parent .
  ?child ns:mother ""Princess Augusta of Great Britain"" .
  ?child ns:birthDate ""1767-10-04"" .
  FILTER (lang(?child) = ""de"")  # Assuming the child's name is in German
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"SELECT ?battle ?p ?o WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Poltava"" .
  ?battle fightingPartyS ""Sweden"" .
  ?battle opposingParty ""Russian Empire"" .
  ?battle combatant ?karlGustavVonBaggovut .
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?commander a :GENERAL .
  :general-in-command_of_french_forces_in_egypt_and_syria ?commander .
  FILTER (lang(?commander) = ""fr"")  # Ensure the commander is French
}",1,1,2,1,1,3,3,71,0,0,48,0,0.0,0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","SELECT ?actor
WHERE {
  ?actor a dbpedia-owl:Actor ;
           dbpprop:role dbpedia:The_Shadow ;
           dbpprop:film_1994 ATL .
  ?actor dbpprop:film ""ATL (2006)"" .
  ?actor dbpprop:film some ?movie_with .
}",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"To construct a SPARQL query, we will use the DBpedia dataset which contains structured information about people and their achievements. Here's how we can formulate the queries:

For Vince Gilligan:
```sparql
SELECT ?birthPlace WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:award_winner[Vince_Gilligan] ;
    foaf:name ""Vince Gilligan"" .
  ?person rdfs:label ?birthPlace .
}
```

For Cece Bell:
```sparql
SELECT ?birthPlace WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:author_of[""El Deafo""] ;
    foaf:name ""Cece Bell"" .
  ?person rdfs:label ?birthPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"The SPARQL query will look for the city of Kiyosu in DBpedia and extract its time zone information. Here's how the query would be constructed:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?timeZone
WHERE {
  ?city dbo:isPartOfLocation [
    a dbo:City ;
    rdfs:label ""Kiyosu""@en ;
    dbo:timeZone ?timeZone .
  ] .
}
```

This query selects the `timeZone` of the city named ""Kiyosu"" which is part of the location with an English label ""Kiyosu"".",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","SELECT ?director ?producer ?actor1 ?actor2 WHERE {
  ?movie ""ATL"" .
  ?movie dcterms:director ?director .
  ?movie dc:producer ?producer .
  ?actor1 rdfs:label ""T.I."" .
  ?actor2 rdfs:label ""Actor Name from ATL"" . # Placeholder for actual actor name
  ?movie dc:performer ?actor1 .
  ?movie dc:performer ?actor2
}",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?director ?producer
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ""Warner Bros. Pictures"";
    dbpedia:director ?director;
    dbpedia:producer ?producer .
  FILTER (STRSTARTS (?director, ""A"")) .
  FILTER (STRSTARTS (?producer, ""A"")) .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","SELECT ?parent0 ?birthplace_region ?birthplace_country
WHERE {
  ?person a dbpedia:Person;
  dbpedia:hasParent ?parent0 .
  ?parent0 a dbpedia:Person;
  dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
  dbpedia:name ""Hon. Mary Frances Bowes-Lyon""@en .
  ?child dbpedia:birthPlace ?birthplace .
  ?birthplace a dbpedia:GeographicalEntity;
  dbpedia:isPartOf ?birthplace_region .
  ?birthplace_region a dbpedia:Region
}",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"SELECT ?person ?militaryForce
WHERE {
  ?person a dbpedia-owl:Person ;
            foaf:name ""Knight Commander of the Order of the Bath"" .
  ?person rdfs:subPropertyOf dbpedia:awardee ;
                 dbpedia:awardedBy dbpedia:United_Kingdom_monarchy .
  ?person ns:partOf dbpedia:Event ;
               ns:partOf dbpedia:Societal_event .
  ?person ns:participantIn dbpedia:French_campaign_in_Egypt_and_Syria .
  ?militaryForce a dbpedia:Military_force .
}
ORDER BY ?person",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","The query will involve looking up Timothy Hutton's roles and identifying the producer(s) of the most notable work associated with him. Given that DBpedia contains structured data about films, actors, and producers, we can construct a SPARQL query to find this information.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?producer 
WHERE {
  ?actor rdfs:label ""Timothy Hutton"" .
  ?actor rdf:type <> .
  ?movie a <> .
  ?movie rdfs:producer ?producer .
  FILTER (lang(?movie) = ""en"")  # Assuming we're looking for English language films
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:name ""Faisal bin Hussein"" ] .
}",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"The DBpedia resource for Vince Gilligan can be accessed using his name as a label. Once we have the appropriate DBpedia URI, we can query for the details of the award he received and extract the birth place information.

Here is the SPARQL query to find this information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?vinceGilligan a dbpedia-owl:Person ;
                  dbpedia2:awardedWith dbpedia:EmmyAwardForOutstandingDramaSeries .
  ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
  ?vinceremoteAwards rdfs:label ""Breaking Bad""@en .
  ?vinceremoteAwards dbpedia2:winningYear 2008 .
}
```

This query selects the birth place (`?birthPlace`) of a person named Vince Gilligan who has been awarded with an Emmy Award for Outstanding Drama Series (represented by `dbpedia:EmmyAwardForOutstandingDramaSeries`) and was involved in ""Breaking Bad"" (represented by its label in English).",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?person WHERE {
    ?person a dbpedia:Politician.
    ?person a dbpedia:OfficeHolder.
    ?person dbpprop:conflict ""Russo-Polish War (1654–1667)"".
    ?person dbpprop:start_date 1654.
    ?person dbpprop:end_date 1667.
    ?person rdfs:successor ?preceding_person .
    ?preceding_person a dbpedia:Commander.
}",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?movie rdfs:label ""Dispatches from Elsewhere"".
  ?actor dbpprop:role ""actor"" .
}

AND

SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:professionalInRole ?actor .
  ?movie rdfs:label ""Dispatches from Elsewhere"".
  ?actor dbpprop:role ""actor"" .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","A SPARQL query to find this information might look like:

```
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?war WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 ?birthDate.
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (regex(str(?name), ""Koichirō"")) .
  ?person dbpedia:conflict ?war.
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `Person` and have a birth date (`?birthDate`).
- It filters for individuals whose name includes ""Koichirō"".
- It then looks for conflicts (wars) that these individuals were involved in.",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person rdfs:label ""Nick Curran""@en .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","SELECT ?awardee_name ?birth_place_awardee, ?author_name ?birth_place_author
WHERE {
  ?awardee dbpedia:award dbpedia:Pulitzer_Prize_for_Fiction ;
    foaf:name ?awardee_name .
  ?winner dbpedia:birthplace ?birth_place_awardee .
  ?author dbpedia: nationality dbpedia:United_States ;
    dbpedia:birthplace ?birth_place_author .
  ?author dc:creator ?reference_work .
  ?reference_work rdfs:label ""El Deafo"" .
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","SELECT ?spouse ?party
WHERE {
  ?actor a dbpedia-owl:Actor .
  ?actor foaf:name ""Roger Pryor"" .
  ?actor dbpprop:politicalPartyMemberOf ?party .
  ?party rdfs:label ?partyLabel .
  ?spouse a dbpedia-owl:Person .
  ?actor ns:familyMember ?spouse .
  ?party rdfs:member ?spouse .
  FILTER (lang(?partyLabel) = ""en"" )
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ?stage_name .
  ?person foaf:name ?birth_name .
  ?stage_name ""Bobby Shmurda"" .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"The SPARQL query will involve querying the DBpedia dataset for individuals associated with the North Carolina Air National Guard and filtering those who are both office holders (likely high-ranking military positions) and politicians. Once we identify such an individual, we will then look for works authored by them that are books.",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?country WHERE {
  ?president a dbo:Person;
  ?president dbpprop:office ""Federal President of Germany"";
  ?president foaf:name ""Theodor Heuss"" .
  ?manager a dbo:Person;
  ?manager rdfs:label ""Head coach of VfL Bochum""@de ;
  ?manager dbpprop:role ""Manager"" .
  ?president dbpprop:nationality ?country
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"SELECT ?rulingPartyMember ?politicalParty WHERE {
  ?john_mcdermott a dbpedia:Person ;
                  dbpedia:deathPlace ?deathPlace .
  ?deathPlace a dbpedia:Settlement .
  ?rulingPartyMember a dbpedia:PoliticalPartyMember;
                 dbpedia:party ?politicalParty .
  ?politicalParty a dbpedia:PoliticalParty
}",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","The SPARQL query will involve:
- Finding Baeda Maryam I and Dawit I.
- Retrieving their children.
- Filtering to find a child whose father (not Baeda Maryam I or Dawit I themselves) has a father who is a royalty and an office holder.

Here's the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child ?grandfather
WHERE {
  ?child a dbpedia-owl:Person ;
            dbpedia-owl:hasFather ?father ;
            dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           dbpedia-owl:hasParent ?grandparent .
  ?grandparent a dbpedia-ontology:Royalty ;
             dbpedia-ontology:isOfficeHolder true .
  ?father a dbpedia-ontology:Person ;
           dbpedia-ontology:hasFather ?grandfather_father .
  ?grandfather_father a dbpedia-ontology:Person ;
                    dbpedia-ontology:isOfficeHolder true .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"The SPARQL query will involve two main steps:
1. Finding the player details for Juan Carlos Molina.
2. Using those details to find the team of Pablo Aimar.

Here is the SPARQL query:

```sparql
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player ?playerTeam 
WHERE {
  ?player a dbo:Footballer;
           rdfs:label ""Juan Carlos Molina""@es.
  ?player dbo:playsFor ?team.
  ?team a dbo:FootballClub;
         rdfs:label ?clubLabel.
  ?clubLabel ns:name ""Pablo Aimar""@en.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
            dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Yandamuri Veerendranath""@en .
}",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?parent WHERE {
  ?charlesFather a dbpedia:Monarch;
  dbpedia:Charles_I_of_Hungary rdfs:father ?charlesFather ;
  ?charlesFather rdfs:child ?royaltyChild .
  ?royaltyChild a dbpedia:Monarch;
  dbpedia:Stefan_V_of_Hungary rdfs:predecessor ?predecessor .
  ?predecessor a dbpedia:Monarch;
  dbpedia:Stephen_V_of_Hungary rdfs:father ?parent .
  ?parent a dbpedia:Royalty
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"The SPARQL query to retrieve this information would be:

```
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?name ?office WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:office ?office .
  ?person foaf:name ?name .
}
```

This query selects the name and office of any person who holds an office, filtering for those who are Office Holders in DBpedia's ontology.",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person;
  dbpedia:parentOf ?child;
  ?child a dbpedia:Royalty;
  dbpedia:fatherOf ?isabella
}
WHERE {
  ?parent dbpedia:Maximilian_I,_Holy_Roman_Emperor .
  ?isabella a dbpedia:Person; dbpedia:name ""Isabella of Austria""
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?artist ?band
WHERE {
  ?artist a dbpedia:Musician .
  ?artist rdfs:label ""Robert Lamar Thompson"" .
  ?artist dbpprop:genre ""Soul music"" .
  ?artist dbpprop:group ""The Impressions""
}",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"SELECT ?militaryForce WHERE {
  ?battle battleEvent ?event .
  ?battle hasMilitaryStrength ""British Fleet"" .
  ?calder hasMilitaryStrength ""Royal Navy"" .
  ?battle rdfs:label ""Battle of Fort Royal"" .
  ?calder rdfs:label ""Robert Calder"" .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","SELECT ?parent WHERE {
  ?child a dbpedia-owl:Child ;
            dbpedia-owl:of ?grandparent .
  ?grandparent a dbpedia:Person ;
             rdfs:label ""Duke Philipp of Württemberg"" .
  ?child rdfs:label ""Carl, Duke of Württemberg"" .
  ?child a dbpedia-owl:GrandchildOf ?parent
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?actor ?role
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?actor rdfs:label ?role .
  ?actor ns:film/ns:role ?role .
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?author ?commander ?disease ?event
WHERE {
  ?author rdfs:label ""Steve Jobs and Walter Isaacson""@en .
  ?commander foaf:name ""John Paul Jones""@en .
  ?disease owl:sameAs ""Yellow Fever""@en .
  ?event rdf:type owl:Thing ;
    rdfs:label ""Attack on Pearl Harbor""@en .
  ?author work ""Back to Work""@en .
  ?commander role ""war commander""@en ?author .
  ?disease affectsNavalPersonnel true .
  ?event involvesNavalForces true
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?character WHERE {
    ?character a dbpedia:Musician .
    ?character rdfs:label ""Singer"" .
    ?character dbo:bandMemberOf ?band .
    ?band a dbpedia:Band .
    ?band dbo:hasMember ?thompson .
    ?thompson a dbpedia:Musician; dbo:givenName ""Bob"" .
    ?character dbo:creator ""Walter B. Gibson"" .
}",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?actor
WHERE {
  ?album dbpedia-owl:isBasedOnWork [ dbpedia:isBasedOnFilm ?film ] .
  ?film dbpedia:star ?actor .
  ?album rdfs:label ""Lasso the Moon"" .
}",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander ?father
WHERE {
  ?commander a :HolyRomanEmpireCommander .
  ?commander foaf:father ?father .
  ?father rdfs:label ""Maximilian Francis"" .
  ?archduke a :ArchdukeOfAustria;
               foaf:child ?son .
  ?son rdfs:label ""Maximilian Francis"" .
  FILTER (STRSTARTS (?commander, ""Karl"")).
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","SELECT ?work WHERE {
  ?politician a ns:people.person;
    ns:name ?name .
  ?politician ns:presents ?book .
  ?book a ns:work ;
         ns:medium ""book"" .
  ?politician ns:residence [ ns:locatedIn ns:placeName ""Chappaqua, New York""] .
  ?book ns:author ?politician
}",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"SELECT ?actor WHERE {
  ?work a dbpedia-owl:ArtisticWork ;
           dbpedia-owl:mainActor ?actor .
  ?song a dbpedia-owl:MusicAlbum ;
           dc:title ""What You Know"" .
  ?series a dbpedia-owl:ComicBookSeries ;
           dc:title ""The Golden Master"" .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?commander
WHERE {
  ?event a dbpedia:Battle;
    dbpedia:partOfMilitaryConflict dbpedia:Pearl_Harbor_Attack ;
    dbpedia:involvedInConflict dbpedia:World_War_II .
  ?commander a dbpedia:Person;
    dbpedia:hasRole dbpedia:Commander_of_the_Fleet .
  ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en.
  ?commander foaf:name ""Tom Phillips"" .
}",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?institution WHERE {
  ?award a ns:Award ;
    ns:awardedTo ""Rainer Weiss"" ;
    ns:awardingInst ?institution .
  ?institution a ns:Organization ;
    rdfs:label ?institutionLabel
} 
LIMIT 1",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"The SPARQL query will involve querying the DBpedia dataset for the relevant individuals and their relationships. Here is the structured query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name WHERE {
  ?parent1 rdf:type dbo:Person ;
            rdfs:child ?child2 .
  ?child2 rdf:type dbo:Person ;
           rdfs:child ?child_name .
  ?parent2 rdf:type dbo:Person ;
           rdfs:parent ?parent1 .
  ?child_name rdfs:parent ?parent2
}
```

This query selects the name of any child (`?child_name`) of a child (`?child2`) of Minye Kyawswa's parent (`?parent1`). It then filters these children to find those who have Minye Kyawswa as a grandparent (`?parent2`).",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","SELECT ?actor
WHERE {
  ?show ""1,000 Dollars a Minute"" .
  ?actor tv:star ?show .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","SELECT ?movie
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor [ dbpedia:hasRole ?role ] .
  ?role rdfs:label ""Afeez Oyetoro"" .
}",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","SELECT ?artist WHERE {
  ?person a dbpedia:Person;
  dbpedia:birthDate ""1975"";
  ?person rdfs:label ""Elorm Kabu Amenyah""@en;
  ?artist a dbpedia:Musician;
  ?person wdt:P31 ?artist
}

AND {
  ?musician a dbpedia:Musician;
  dbpedia:occupation ""rock music"" .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" .
  }
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE {
  ?person a dbpedia-owl:Person;
  dbpedia-owl:hasParent ?parent;
  ?parent a dbpedia-owl:Person;
  ?parent rdf:type dbpedia-owl:Father
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"The SPARQL query will look for the band members related to the musician Eric Clapton. We'll use the `dbpedia-owl` namespace which includes information about music bands and their members.

```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?person a dbpedia-owl:Musician ;
            dbpedia-owl:hasBand ?band .
  ?band rdfs:label ""Eric Clapton"" .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?artist_name ?birth_name
WHERE {
  ?person a dbpedia-owl:Artist .
  ?person foaf:name ?birth_name .
  ?person dbo:regionOfBirth ""Central Region, Ghana"" .
  ?artist_worksWith ?pacely
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"SELECT ?actor ?spouse
WHERE {
  ?movie a :Film ;
            dc:title ""Always"" .
  ?actor a :Person;
         foaf:role ?actorRoleInMovie .
  ?awardee a :Person;
           rdfs:label ""Janusz Kamiński""@en;
           foaf:spouse ?spouseOf .
  ?actor rdfs:label ?actorName .
  ?actorRoleInMovie a nmo:ActorRoleInFilm ;
                 m:role ?actorRoleInMovie .
  ?awardee nm:hasAward ""List of awards and nominations received"" .
}
LIMIT 1",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"SELECT ?spouse
WHERE {
  ?awardee ""Janusz Kamiński"" .
  ?awardee rdfs:label ""actor"" .
  ?awardee dbpprop:role_in_film ""Paradise (2013 film)"" .
  ?awardee foaf:spouse ?spouse
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?recipient ?unit WHERE {
  ?recipient a dbpedia-owl:MedalOfHonor_Awardee .
  ?recipient foaf:based_near [ geo:point geo:coordinates ""35.8201,-79.9319"" ] .
  ?recipient rdfs:label ?name .
  ?unit a dbpedia-owl:MilitaryUnit .
  ?recipient rdf:type dbpedia-owl:MilitaryPerson.
  OPTIONAL { ?recipient foaf:mbox ?email }
}
UNION
SELECT ?recipient ?unit WHERE {
  ?recipient a dbpedia-owl:GillmoreMedal_Awardee .
  ?recipient foaf:based_near [ geo:point geo:coordinates ""35.8201,-79.9319"" ] .
  ?recipient rdfs:label ?name .
  ?unit a dbpedia-owl:MilitaryUnit .
  ?recipient rdf:type dbpedia-owl:MilitaryPerson.
  OPTIONAL { ?recipient foaf:mbox ?email }
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?awardee_force ?tom_phillips_war
WHERE {
  ?awardee rdfs:label ""Edmund Hakewill-Smith""@en .
  ?awardAwarded rdfs:label ""Award of Edmund Hakewill-Smith""@en .
  ?awardee rdfs:member ?awardee_force .
  ?tom_phillips rdfs:label ""Tom Phillips""@en .
  ?tom_phillips rdf:type <> .
  ?tom_phillips war ?tom_phillips_war
}
LIMIT 1",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"SELECT ?almaMater
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:member_of_political_party foaf:name ""Chennupati Jagadish"" .
  ?person dbpedia2:attended_school ?almaMater .
}",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthDate [ math:greaterThan ""1893-01-01"" ] .
  ?person rdfs:label ""Yamaza Enjirō""@ja; dbo:office ""Governor of Tokyo"" .
  ?person dbpprop:birthPlace ?birthPlace
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Athlete .
  ?person dbpprop:birthday ""1955-02-22"" .
}",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?producer
WHERE {
  ?movie a dbpedia-owl:Movie ;
           dbpprop:producer ?producer .
  ?movie rdfs:label ""Your Movie Title Here"" .
}",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","The SPARQL query will look for individuals named ""Dawit I"" and then check their relationships to see if they have children. We'll use the `foaf:child` property to find direct children, and we'll also consider broader familial relations.

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person WHERE {
  ?person a foaf:Person;
    foaf:name ""Dawit I""@en .
  ?person foaf:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","SELECT ?player WHERE {
  ?player a ns:people.person .
  ?player ns:role rdfs:label ""Manager"" .
  ?player ns:role rdfs:label ""Soccer Manager"" .
  ?player ns:organization ns:name ""Hong Kong C"" .
}",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?movie WHERE {
  ?author dbo:writtenWork ?book .
  ?book rdfs:label ""Smartbomb"" .
  ?movie dbpprop:director ?author
}",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"The SPARQL query would look for the person with the title ""Peter IV of Aragon"" and extract their real name (given name).

```sparql
SELECT ?realName WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasRealName ?realName ;
            rdfs:label ""Peter IV of Aragon""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"The SPARQL query will involve querying the DBpedia dataset for movies where Vera Lynn has appeared and then checking if any of these movies are also classified as works (which typically means they are films or television shows). Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?movie WHERE {
  ?movie a rdf:Property ;
    rdfs:label ""Vera Lynn"" .
  OPTIONAL { ?movie rdfs:subClassOf [ rdf:type ns:Film ; rdfs:label ""Film""@en ] }
  OPTIONAL { ?movie rdfs:subClassOf [ rdf:type ns:TVShow ; rdfs:label ""Television Show""@en ] }
}
```

This query looks for movies labeled with ""Vera Lynn"" and checks if they are either films or television shows. The `OPTIONAL` clause allows us to filter out results that do not meet the criteria.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"SELECT ?predecessor
WHERE {
  ?child a :royalty .
  ?child :spouse ?parent .
  ?parent a :person .
  ?parent :child ?grandchild .
  ?grandchild a :royalty .
  ?predecessor :father ?grandchild
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?bandMember
WHERE {
  ?person a dbpedia:Musician ;
            dbpedia:associatedBand dbpedia:The_Prodigy .
  ?band dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""The Prodigy"" .
  OPTIONAL { ?band rdfs:label ""Simple Minds"" }
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?awardeeLabel ?war
WHERE {
  ?awardee rdf:type dbpedia-owl:Person.
  ?awardee rdfs:label ?awardeeLabel .
  OPTIONAL { 
    ?awardee dbpprop:awarded [ a dbpprop:Award ; rdfs:label ?awardLabel ] .
    ?awardLabel rdfs:label ""Commander of the Order of the British Empire"" .
  }
  ?awardee foaf:fightIn ?war.
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = ""en"") 
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","SELECT ?subject WHERE {
  ?subject a :settlement .
  ?subject rdfs:label ""The Heart of Pakistan""@en .
  ?subject rdfs:label ""Paris of the East""@en .
  ?subject rdfs:label ""City of Gardens""@en .
  ?subject rdfs:label ""City of Literature""@en .
}",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?person WHERE {
  ?person foaf:givenName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person rdfs:label ?nameLabel .
  ?person foaf:knows ?rodArgent .
  ?rodArgent dbpedia:birthDate ""1946-03-04"" . # Assuming Rod Argent's birth date for the query
  ?elorm foaf:givenName ""Elorm Kabu Amenyah"" .
  ?person rdfs:label ?elormLabel .
  ?person foaf:knows ?elorm .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child_name ?royalty_status WHERE {
  ?child_name a dbpedia:Person;
  dbpedia:parent_of ?martin .
  ?child_name dbpedia:has_siblings [ dbpedia:family_member dbpedia:Royalty ].
  ?martin dbpedia:father Alfonso_IV_of_Aragon ;
           dbpedia:mother Eleanor_of_Castile
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"The SPARQL query will involve joining multiple triples to find the relevant individual. We'll start by identifying individuals who are alumni of Eton College and then filter for those who have a child and whose child's parent is a politician.

Here's a possible SPARQL query:

```sparql
SELECT ?childName ?politicianParentName
WHERE {
  ?child a dbpedia:Alumnus ;
            dbpedia2:alumniOf dbpedia:Eton College .
  ?child dbo:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpprop:isPolitician true .
  ?child dbo:hasParent ?parent
}
```

This query works as follows:
- `?child a dbpedia:Alumnus ; dbpedia2:alumniOf dbpedia:Eton College .`: Matches individuals who are alumni of Eton College.
- `?child dbo:hasParent ?parent .`: Identifies the parent(s) of the child.
- `?parent a dbpedia:Person ; dbpprop:isPolitician true .`: Filters for parents who are politicians.
- The final `?child dbo:hasParent ?parent` ensures that we're looking at the correct child-parent relationship.",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?childName ?royaltyFather 
WHERE {
  ?child a :Person.
  ?child a :offspringOf ?commander.
  ?commander a :CommanderInSiegeOfPadua .
  ?commander a :Royalty .
  ?child a :Royalty
}",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","SELECT ?tenant WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@es.
  ?party ns:leader ?tenant.
  ?tenant a dbo:Person.
  ?tenant foaf:name ""José Luis Rodríguez Zapatero""@es.
}",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"SELECT ?person WHERE {
  ?person a dbpedia:Person;
  dbpedia:parent [ dbpedia:hasChild ?child ];
  ?child a dbpedia:Person;
  ?child dbpedia:parent [ dbpedia:hasSpouse/foaf:partner ?spouse ];
  ?spouse a dbpedia:Person;
  ?spouse dbpedia:memberOf [ dbpedia:hasMember Albrecht_von_Wallenstein ]
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"SELECT ?character WHERE {
  ?character a ns:ComicCharacter .
  ?character rdfs:label ""Walter B. Gibson""@en .
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"To find this information, we need to:
1. Identify the artist of the album ""The Miseducation of Lauryn Hill"".
2. Use that artist's name to query DBpedia for their birthplace.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthplace
WHERE {
  ?album dbpedia:artist ?artist .
  ?artist rdfs:label ""Lauryn Hill"" .
  ?artist dbo:birthPlace ?birthplace .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"The SPARQL query will need to filter players who were part of VfL Bochum in the 2007–08 season and check if they meet the criteria of being an organization (which in this context likely means being a role within the club structure) and a sports club (which is inherent to their membership in VfL Bochum).

Here's the SPARQL query:

```sparql
SELECT ?player
WHERE {
  ?player a dbpedia:SportsTeam ;
            dbpedia:hasMember ?member .
  ?member a dbpedia:Person ;
           dbpedia:role dbpedia:Player ;
           dbpedia:club dbpedia:VfL_Bochum ;
           dbpedia:season ""2007-08"" .
}
```

This query selects individuals (`?player`) who are part of a sports team (`dbpedia:SportsTeam`), specifically one that has a member (`?member`) who is a person (`dbpedia:Person`), plays the role of a player (`dbpedia:Player`), belongs to VfL Bochum (`dbpedia:club dbpedia:VfL_Bochum`), and played in the 2007-08 season (`dbpedia:season ""2007-08""`).",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"SELECT ?bandMember
WHERE {
  ?artist a mb:Artist;
    mb:name ""David Paton"" .
  ?band a mb:Band;
    mb:name ?bandName ;
    mb:member ?bandMember .
  ?bandMember a mb:Person;
    mb:name ?bandMemberName
}
AND
{
  ?artist a mb:Artist;
    mb:name ""Billy Lyall"" .
  ?band a mb:Band;
    mb:name ?bandName ;
    mb:member ?bandMember .
  ?bandMember a mb:Person;
    mb:name ?bandMemberName
}",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","SELECT ?actor ?soccerPlayer ?athleteBorn
WHERE {
    ?actor a dbpedia:Actor .
    ?actor ns:instanceOf dbpedia:Film ;
        rdfs:label ""Film Title"" . # Placeholder for the actual film title

    ?soccerPlayer a dbpedia:SoccerPlayer, dbpedia:Athlete .
    ?soccerPlayer ns:instanceOf ?film .

    ?athleteBorn a dbpedia:Person;
        dbpprop:birthDate ""1955-02-22""^^xsd:date ;
        rdfs:label ?name . 

    ?actor ns:role ?soccerPlayer .
    ?actor ns:role ?athleteBorn .
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?player rdf:type dbppro:Person.
  ?player rdfs:label ""Reneta Kamberova"".
  ?player dbppro:birthPlace ?birthplace.
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?band ?role WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Bob Thompson"" .
  ?person dbpprop:bandMemberOf ?band .
  ?band rdfs:label ?bandLabel .
  OPTIONAL { ?band rdf:type dbpedia:PunkRockBand } .
  OPTIONAL { ?band rdf:type dbpedia:HeavyMetalBand } .
  FILTER (lang(?label) = ""en"" )
}",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?subject ?predicate ?object
WHERE {
  ?subject a :Hetman_of_Cossacks .
  ?subject rdfs:label ""Yurii Khmelnytsky"" .
  ?subject foaf:commanderInWar ?war.
  ?war a :Russo_Polish_War_1632_1649 .
  ?object a :Television_Show .
  ?object a :Societal_Event .
  ?object rdfs:label ""Jean Baptiste, Comte d'Arco"" .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"SELECT ?child ?royalty ?societal_event ?war ?tv_show
WHERE {
  ?child a :royalty;
    :father :dau_of_duke_albrecht_v .
  :dau_of_duke_albrecht_v a :child_of :dau_of_duke_albrecht_v .
  ?child :participated_in ?societal_event .
  ?societal_event a :societal_event; rdfs:label ""Algerian War"" .
  ?war a :war; rdfs:label ""Algerian War"" .
  ?child :participated_in ?war .
  ?tv_show a :television_show; rdfs:label ""The Day of the Jackal"" .
  ?child ns:father ?parent .
  ?parent a :person; foaf:name ""Duke Albrecht V of Bavaria"" .
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?child WHERE {
  ?parent a dbpedia:Monarch ;
            dbpedia:hasSpouse [ a dbpedia:Person ; dbpedia:name ""Elizabeth"" ] ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?birthPlace .
  ?person rdfs:label ""Sam Raimi""@en .
}",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Roger III, Duke of Apulia"";
    dbpedia:hasParent ?rogerII .
  ?rogerII a dbpedia:Person;
    dbpedia:name ""Roger II of Sicily"" .
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent
}",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ?name .
  ?person ns:serviceBranch ""North Carolina Air National Guard"" .
  ?person ns:officeHolder true .
  ?person ns:polservice true
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"SELECT ?player
WHERE {
  ?player a dbpedia:SportsManager .
  ?player a dbpedia:SoccerCoach .
  ?player rdfs:label ""Hong Kong C Team""@zh.
}",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?office WHERE {
  ?politician a :OFFICE_HOLDER;
  ?politician a :POLITICIAN;
  ?politician rdfs:label ""Alberto Ruiz-Gallardón"";
  ?office a :OFFICE;
  ?office geo:location [ geo:coordinates ""Madrid, Spain"" ] .
  ?event a :SOCIAL_EVENT, :MILITARY_CONFLICT;
  ?event rdfs:label ""Portuguese Colonial War"".
}",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","The SPARQL query will look for the 30th (Cambridgeshire) Regiment of Foot and its associated conflicts, then extract the details of the military force involved in that conflict.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?warLabel ?militaryForce 
WHERE {
  ?regiment dbpedia:P31 wd:Q12297 ; # 30th (Cambridgeshire) Regiment of Foot
  ?regiment dbpedia:conflict ?war .
  ?war a dbpedia:War ;
         dbpedia:commander ?cmdr ;
         dbpedia:militaryForce ?militaryForce .
  ?cmdr foaf:name ""William Bayne"" .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"SELECT ?country
WHERE {
  ?person ns:name ""Alberto Núñez Feijóo"" .
  ?person foaf:nationality ns:ethnicity ""Spanish"" .
  ?person dwc:residence [ geo:point geo:coordinates ""43.8953 -7.6169"" ] .
  ?person rdfs:label ""Teniente de Santiago de Compostela"" .
  ?country rdfs:label ?country_label .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?child rdfs:father dbpedia:Princess_Muna_al_Hussein .
}",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"SELECT ?commander ?successor
WHERE {
  ?commander a ns:owl:sameAs ?turkish_war_commander .
  ?turkish_war_commander a ns:owl:sameAs <http://dbpedia.org/resource/Mustafa_Kanuni> .
  ?successor a ns:owl:sameAs ?khmelnytsky_successor .
  ?khmelnytsky_successor a ns:owl:sameAs <http://dbpedia.org/resource/Volodymyr_Zinkovyrov>
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"SELECT ?party
WHERE {
  ?person a dbpedia-owl:PoliticalOfficeHolder ;
           dbpedia-owl:office dbpedia:Prime_Minister_of_Portugal;
           foaf:name ""Miguel Maura"" .
  ?person rdfs:member ?party.
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"SELECT ?entity
WHERE {
  ?entity a dbo:CountryMunicipality ;
            dbo:locatedIn dbo:Poland .
}",1,1,2,1,1,3,2,20,0,0,108,0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"SELECT ?person
WHERE {
  ?person a :grand_duchy_of_finnish_national .
  ?person ns:dwont_lived_in switzerland .
  ?person ns:dwont_die_in russian_empire .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"The SPARQL query would look for the entity associated with Elena Žalinkevičaitė-Petrauskienė and her birth place property. Assuming that DBpedia uses standard vocabularies, we might use a query like:

```sparql
SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
           dbpedia-owl:birthPlace ?birthPlace .
  ?person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
}
```

This query selects the `birthPlace` of any person labeled as ""Elena Žalinkevičaitė-Petrauskienė"" in DBpedia.",2,2,3,2,1,2,3,28,0,0,87,0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?actor WHERE {
  ?movie a dbpedia:Film.
  ?movie star ?actor .
  ?actor foaf:name ""Afeez Oyetoro"" .
  [ 
    ?actor rdfs:label ?actor_label .
    ?actor_label ns:prefLabel ""Cynthia Ikponmwenosa Morgan""@en
  ] 
  }
  
AND {
  ?actor dbpprop:associatedWith ?musical_artist .
  ?musical_artist a dbpedia:MusicArtist .
  ?musical_artist rdfs:label ?artist_name .
  FILTER (lang(?artist_name) = ""en"")
  }",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?character ns:altName ""The Shadow"" .
  ?character rdfs:label ?alterEgo
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","SELECT ?member WHERE {
  ?figure a ns:http://purl.org/dcProperties/Agent .
  ?figure rdfs:label ""Der Blau""@de.
  ?figure ns:creator ""Charles M. Schulz"".
  ?member a ns:http://schema.org/Person .
  ?member foaf:name ?name
}",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","SELECT ?father WHERE {
  ?child eleonore_of_austria ;
  dbpedia2:parent ?grandparent ;
  dbpedia2:relation ""Queen of Poland"" ;
  dbpedia2:father ?father
} 

LIMIT 1",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"SELECT ?author
WHERE {
  ?book ""Promises to Keep"".
  ?book dc:author ?author.
  ?author rdfs:label ""Joe Biden""@en.
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"Given the complexity of verifying an actor's political career through SPARQL alone without direct data linking their acting roles to their political careers, we will focus on identifying the actor first. We'll use DBpedia for this purpose.

Here's a simplified SPARQL query to find the actor who played The Shadow and appeared in ""Ab Kya Hoga"" and ""Dispatches from Elsewhere"":

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?actor a dbpedia-owl:Actor ;
           rdfs:label ?actorLabel .
  ?actor dbpedia-owl:appearedIn ""Ab Kya Hoga"" .
  ?actor dbpedia-owl:appearedIn ""Dispatches from Elsewhere"" .
  ?actor rdf:type dbpedia-owl:Politician .
}
```

This query will return the actor who fits the criteria of appearing in both shows and being a politician.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?chancellor ?letsch_role ?bochum_season WHERE {
  ?chancellor dbpedia:office ""Chancellor of Germany"" .
  ?letsch dbpprop:role ?letsch_role .
  ?bochum dbpedia:season ?bochum_season .
  ?chancellor dbpedia:country ""Germany"" .
  ?letsch dbpprop:clubMemberOf ?team .
  ?team rdfs:label ""VfL Bochum"" .
  ?bochum dbpedia:league ""Bundesliga"" .
  ?bochum dbpedia:season ?season
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?actor
WHERE {
  ?actor a dbpedia-owl:Actor .
  ?actor rdfs:label ""Daniel Day-Lewis""@en .
  ?actor dbo:occupation ""Acting"" .
}",1,1,2,1,1,2,3,28,0,0,21580,0,0.0,0
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia2:associatedBand ?associatedBand .
  ?associatedBand a dbpedia:Band .
  ?songtrack a dbpedia:SoundtrackAlbum ;
             dbpedia2:composer ?composer .
  ?composer a dbpedia:Artist .
  ?artist rdfs:label ""David Paton"" .
  ?songtrack rdfs:label ""Wizards of Waverly Place (soundtrack)"" .
}",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?alumnus rdf:type <http://dbpedia.org/ontology/Alumnus> .
  ?alumnus edu:university ""Plovdiv University \""Paisii Hilendarski\"""".
  ?resident rdf:type <http://dbpedia.org/ontology/Resident> .
  ?resident dwc:residence <http://dbpedia.org/property/name>Sofia
  OPTIONAL { ?alumnus foaf:bornIn ?birthplace }
  OPTIONAL { ?resident foaf:bornIn ?birthplace }
}",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Artist .
  ?person rdfs:label ""Steven Kapur"" .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"SELECT ?militaryForce ?commander
WHERE {
    ?wiliamBayne a ns:people.person .
    ?wiliamBayne ns:serveInMilitary ?conflict .
    ?conflict a ns:military_conflict .
    ?conflict rdfs:label ""Battle of Cape Finisterre (1805)"" .
    ?battle a ns:military_battle .
    ?battle ns:commandedBy ?commander .
    ?30thRegiment a ns:military_unit .
    ?30thRegiment ns:participateIn ?conflict .
    ?conflict rdfs:label ""Battle of Cape Finisterre (1805)"" .
    ?wiliamBayne ns:serveInMilitary ?regimentConflict .
    ?regimentConflict a ns:military_conflict .
    ?regimentConflict ns:commandedBy ?commanderOfRegiment
}
LIMIT 1",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Saw Min Phyu""@en .
  ?person owl:sameAs ?royalty .
  ?royalty a dbpedia-owl:Royalty .
  ?person ex:spouse ?spouse .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?child WHERE {
    ?parent a dbpedia:OfficeHolder; dbpedia:P31 dbpedia:Politician .
    ?parent ns:familyMember ?child .
    ?child a dbpedia:OfficeHolder; dbpedia:P31 dbo:Politician
}",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"SELECT ?country
WHERE {
  ?person a dbpedia-owl:FederalPresidentOfGermany .
  ?person rdfs:label ?name .
  ?name ns:prefLabel ""Theodor Heuss"" .
  ?person dbo:nativeOrigin ?country
}
LIMIT 1",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?bandMember WHERE {
  ?band The Fabulous Thunderbirds.
  ?band rdfs:member ?bandMember .
  ?bandMember rdf:type dbpprop:Musician
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"SELECT ?country
WHERE {
  ?spouse a dbpedia:Person ;
            dbpedia:hasSpouse ?husband ;
            rdfs:label ?name .
  ?husband a dbpedia:Writer .
  ?spouse rdfs:label ""Hu Jieqing""@en.
  ?work a dbpedia:CreativeWork ;
          dbpedia:creator ?spouse .
  ?work rdfs:label ?title .
}",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"SELECT ?artist WHERE {
  ?artist a dbpedia-owl:Musician .
  ?artist rdfs:label ""Pacely""@en .
  FILTER (lang(?artist) = ""en"")  # Ensures the label is in English
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"SELECT ?person
WHERE {
  ?person a :decedentInLocation :Switzerland .
  ?person a :nativeOf :GrandDuchyOfFinland .
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Player ;
            dbpedia-owl:birthDate ""1979-11-03"" ;
            dbpedia2:sport ""Football"" .
  ?person a dbpedia-owl:Manager ;
            dbpedia:hasPlayedFor [ a dbpedia:Team ; rdfs:label ?team ] ;
            dbpedia:hasPlayedFor [ a dbpedia:Player ; foaf:name ""Juan Carlos Molina (footballer)"" ] ;
            dbpedia:hasPlayedFor [ a dbpedia:Player ; foaf:name ""Sergio Agüero"" ] .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?person a dbpedia:Person;
  dbpedia:parentOf ?parent .
  ?person rdfs:label ""Princess Sara bint Faisal""@en .
  ?person rdfs:label ""Prince Omar bin Faisal""@en .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?parent WHERE {
  ?charles_I_of_hungary father ?father .
  ?father ancestor [is a member of] <> .
  ?charles_II_of_neapols spouse ?spouse .
  ?spouse parent ?parent .
  ?parent [is a member of] <> .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"The SPARQL query will need to select the leader of the ""Conservative Republican Party"" (Partido Popular) in Spain. Assuming that the party's leader is stored with a property indicating their role, the query might look something like this:

```sparql
SELECT ?leader
WHERE {
  ?party rdfs:label ""Conservative Republican Party""@es.
  ?party foaf:member ?leader .
  ?leader a dbo:Politician .
}
```

This query selects the `?leader` resource that is a member of the party labeled as ""Conservative Republican Party"" in Spanish (`rdfs:label ""Conservative Republican Party""@es.`) and where the leader is also identified as a politician (`dbo:Politician`).",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"SELECT ?member
WHERE {
  ?member a dbpedia-owl:PartyMember ;
            dbpprop:political_party dbpedia:Republican_Party_(United_States).
}",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?spouse
WHERE {
  ?father a dbpedia:Person ;
            dbpedia:hasSpouse ?spouse .
  ?father dbpedia:parentOf [
            dbpedia:child ?philip_i .
          ] .
  ?philip_i a dbpedia:Person;
             dbpedia:fullName ""Philip I, Prince of Taranto"" .
  ?father ns:familyMember ?philip_i
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?spouse
WHERE {
  ?father a dbpedia:Person ;
            dbpedia:hasChild [ a dbpedia:Person; rdfs:label ""Charles Martel of Anjou"" ] ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
             dbpedia:hasSpouse ?spouse .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?band_name ?real_name WHERE {
  ?band_member a dbpedia:Musician .
  ?band_member foaf:name ""Kim Wilson"" .
  ?band_member dbr:associatedBand ?band .
  ?band rdfs:label ""The Fabulous Thunderbirds"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"SELECT ?actor WHERE {
  ?movie ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?actor rdfs:role ?movie .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Athlete .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (STRFTIME(""'%Y-%m-%d'"", ?birthDate) = STRFTIME(""'%Y-%m-%d'"", ""1982-03-14"")) 
  AND (?birthDate IN [STRFTIME(""'%Y-%m-%d'"", ""1982-03-14"")])
}",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relationships between these individuals. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandchild WHERE {
  ?parent a dbpedia-owl:Monarch .
  ?parent rdfs:child ?grandchild .
  ?grandchild a dbpedia-owl:Royalty .
  ?grandchild rdfs:child ?greatGrandchild .
  ?greatGrandchild a dbpedia-owl:Person ;
               dbpedia2:hasParent ?archduke
}
```

This query selects the `grandchild` of a monarch (`?parent`) who is a royalty (`?grandchild a dbpedia-owl:Royalty`) and also has a child (`?greatGrandchild`) who is a person (`dbpedia2:hasParent ?archduke`) and thus a child of Archduke Charles Louis of Austria.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"The SPARQL query will involve querying the DBpedia dataset for information about Minye Kyawswa and his parents. Assuming Minye Kyawswa's parents are known entities in DBpedia, the query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?child rdf:type dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?child rdfs:label ""Minye Kyawswa""@en .
}
```

This query selects the parent (`?parent`) of any person (`?child`) who has the label ""Minye Kyawswa"" and is confirmed to have a parent.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?militaryConflictLabel ?militaryForceEvent
WHERE {
  ?wBayne a ns:people.person;
    rdfs:label ""William Bayne""@en;
    nao:hasRole nao:NavalOfficer .
  ?rCalder a ns:people.person;
    rdfs:label ""Robert Calder""@en;
    nao:hasRole nao:MilitaryPerson .
  ?militaryConflict a ns:military_conflict;
    rdfs:label ?militaryConflictLabel .
  ?wBayne ns:partOf ?militaryConflict .
  ?rCalder ns:partOf ?militaryConflict .
  OPTIONAL { ?militaryConflict ns:hasMilitaryForce ?militaryForce }
}
ORDER BY ?militaryConflictLabel",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"SELECT ?entity
WHERE {
  ?entity a dbo:Timezone;
  dbo:standardOffset ""9""^^xsd:integer.
}",2,2,3,2,1,3,2,20,0,0,8916,0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"The SPARQL query will search for John McDermott's death place within the context of being a settlement. Here is the appropriate SPARQL query:

```sparql
SELECT ?deathPlace
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""John McDermott""@en .
  ?person dbo:deathDate ?date .
  ?place a dbpedia-owl:Settlement;
    rdfs:label ?name .
  ?person dwc:deathLocation ?place .
}
```

This query looks for a person named John McDermott, retrieves the date of their death (`dbo:deathDate`), and then finds the location where they died (`dwc:deathLocation`). It filters the results to only include settlements (`dbpedia-owl:Settlement`) with a label (`rdfs:label`) that matches the name of the place.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","SELECT ?child WHERE {
  ?parent a ns:Person ;
            ns:microformat-person ;
            ns:hasFamilyMember ?child .
  ?child a ns:Person ;
           ns:microformat-person ;
           ns:hasParent ?parent .
}
LIMIT 1",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"SELECT ?entity
WHERE {
  ?entity a dbo:CapitalOfCountry ;
         dbo:countryName ""Colombia"" .
}",1,1,2,1,1,2,3,28,0,0,2141,0,0.0,0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","SELECT ?war ?birth_place WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedForServiceIn ?war .
  ?person dbpprop:birthPlace ?birth_place .
  ?person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en
}",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","SELECT ?spouse WHERE {
  ?parent a ns:http://www.w3.org/2002/07/owl#Individual ;
           ns:hasParent ?grandparent .
  ?grandparent a ns:http://www.w3.org/2002/07/owl#Individual;
           rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?spouse a ns:http://www.w3.org/2002/07/owl#Individual ;
           ns:hasParent ?parent ;
           rdfs:label ?title .
  ?spouse ns:inClass ns:https://xmlns.com/owl/1.1/Noble .
  FILTER (lang(?title) = ""en"") 
}",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?actor WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ""William Holden"" .
  [ a :Film; rdfs:title ""Roman Holiday"" ].
  ?actor rdfs:label ""Janusz Kamiński"" .
  FILTER (NOT EXISTS { ?x a :Person; rdfs:label ""Audrey Hepburn"" . ?x :marriedTo ?actor })
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"SELECT ?father
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasDaughter ?sophiaPetro .
  ?sophiaPetro rdfs:label ""Sofía Petro""@es.
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasFather ?father;
  ?father rdfs:label ""Cecilia Renata of Austria""@en.
  ?child a dbpedia:Child;
  dbpedia:hasParent ?parent
}",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","SELECT ?commander ?successor ?conflict WHERE {
  ?conflict a dbpedia:MilitaryConflict ;
               dbpedia:partOfMilitaryCampaign ""Battle of Warsaw (1920)"" .
  ?commander a dbpedia:Person ;
              dbpedia:role ""Commander"" ;
              dbpedia:involvement ?conflict .
  ?successor a dbpedia:Person ;
             dbpedia:role ""Successor"" ;
             dbpedia:officeHolder ?office .
  ?office a dbpedia:Office .
  ?commander rdfs:label ""Michał Kazimierz Pac""@pl .
  ?successor rdfs:label ""George Ducas""@en
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","SELECT ?profession ?spouse
WHERE {
  ?x dbpprop:hasProfession ?profession .
  ?x foaf:spouse ?spouse .
  ?x rdfs:label ""Carrie Johnson"" .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?child ?royalty ?eventLabel ?tvShow
WHERE {
  ?child a dbo:Person ;
            rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?child dbo:hasParent ?father .
  ?father a dbo:Person ;
          rdfs:label ""Maria Anna of Bavaria""@en .
  ?child dbo:isRoyalty true .
  ?event a dbo:Event ;
           rdfs:label ""Thirty Years' War""@en .
  ?event a dbo:SocietalEvent .
  ?event a dbo:EventType .
  ?tvShow a dbo:TelevisionShow ;
            rdfs:label ""The Witcher""@en .
  ?child rdf:type dbo:ChildOf ?grandchild .
  ?grandchild a dbo:Person ;
             rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"The SPARQL query to find the profession of Shirley Stoler in DBpedia would look something like this:

```sparql
SELECT ?profession
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:occupation ?profession .
  ?person rdfs:label ""Shirley Stoler"" .
}
```

This query selects the `profession` of any `Person` entity (`?person`) who has the label ""Shirley Stoler"". The `dbpprop:occupation` property is used to denote the profession.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"SELECT ?child
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           rdfs:label ""Dawit I""@en .
  ?child a dbpedia-owl:Child ;
          rdfs:label ?childLabel .
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?war a dbpedia-owl:Conflict .
  ?war bd:partOfEvent dbpedia:Event_Sengoku_Jidai .
  ?war bd:combatant Toyotomi_Hidenaga
}",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"The SPARQL query to retrieve this information from DBpedia would be:

```
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?birthPlace
WHERE {
  ?person a dbpprop:Person ;
            dbpprop:nationality dbpprop:Indian ;
            dbpprop:birthPlace ?birthPlace .
  ?person rdfs:label ""Jamsetji Tata""@en .
}
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?person ?birth_place
WHERE {
  ?person a dbpedia:Person;
  dbpedia:P31 ?job_title .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"") .
  ?job_title a dbpedia:OccupationProperty;
    rdfs:label ""Author of El Deafo"" .
  ?politician a dbpedia:Politician;
    rdfs:label ?office_holding .
  ?office_holding a dbpedia:OfficeHolderProperty; rdfs:label ""Governor of Virginia"" .
  OPTIONAL { ?politician rdfs:label ?name }
  FILTER (lang(?name) = ""en"") .
  BIND (""Vince Gilligan"" AS ?person_name)
  FILTER (regex(str(?office_holding), ""Governor of Virginia"")) .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"SELECT ?band_name
WHERE {
  ?band_name a dbpedia-owl:MusicBand .
  ?band_name foaf:name ""Kim Wilson"" .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:name ""Martin of Aragon"" ] .
  ?child ns:sibling [ ns:name ?father ]
}
PREFIX ns: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ rdf:type ns:Person ; ns:name ""Martin of Aragon"" ] .
  OPTIONAL { ?child ns:sibling ?father }
}",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"SELECT ?predecessor WHERE {
  ?child archduke_rudolf .
  ?child spous :spouse [ owl:propertyValue ""archduke_charles_louis_of_austria"" ] .
  ?predecessor a :royalty .
  ?predecessor foaf:parent ?child
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","To find this information, we can use a SPARQL query that searches for the musician named Pacely and then retrieves their associated musical artist. Assuming Pacely is a known musician in DBpedia, the SPARQL query might look like this:

```sparql
PREFIX dbppro: <http://dbpedia.org/ontology/>

SELECT ?musician_name ?artist_name
WHERE {
  ?musician dbppro:birthName ""Pacely"" .
  ?musician dbppro:isAssociatedWithArtists [ a dbppro:MusicArtist ] .
}
```

This query searches for a musician named Pacely (`?musician dbppro:birthName ""Pacely""`), and then looks for the artists associated with that musician (`?musician dbppro:isAssociatedWithArtists [ a dbppro:MusicArtist ]`).",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?producer WHERE {
  ?film1 a dbpedia-owl:Film;
    dbpedia2:productionCompany ?prodCo1 .
  ?film2 a dbpedia-owl:Film;
    dbpedia2:productionCompany ?prodCo2 .
  ?prodCo1 rdfs:label ""Production Company of A Star Is Born (1937 film)"".
  ?prodCo2 rdfs:label ""Production Company of The Adventures of Tom Sawyer (1938 film)"".
  ?producer rdfs:label ""Kent Allard"" .
  ?prodCo1 ns:filmProducedBy ?producer .
  ?prodCo2 ns:filmProducedBy ?producer
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor
WHERE {
  ?album a dbpedia:Album ;
            dbpedia:hasSong ?song .
  ?song a dbpedia:MusicianWork ;
           dbpedia:performer ?actor .
}
LIMIT 1",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","The SPARQL query will look for an artist hailing from the ""Central Region"" in Ghana. Assuming there's a property to denote the region of origin, the query might look something like this:

```sparql
SELECT ?artist
WHERE {
  ?artist a dbpedia-owl:Artist ;
            dbpprop:regionOfOrigin dbpedia:CentralRegion.
}
```

This query selects all artists (`?artist`) that have `dbpprop:regionOfOrigin` property set to `dbpedia:CentralRegion`.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","To find the required information, we can use the DBpedia dataset which contains structured data about various entities including people who have received awards and their places of birth. Here's a SPARQL query that should retrieve the necessary details:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?awardeeName ?birthplace
WHERE {
  ?awardee rdf:type dbpedia-owl:AwardRecipient .
  ?awardee dbpedia-owl:awardReceived [ rdf:type dbpedia-owl:ArtisticAwards ] .
  ?awardee dbpedia-owl:awardeeFor ""Sangeet Natak Akademi"" .
  ?smita rdf:type dbpedia:Person .
  ?smita dbpedia:birthPlace ?birthplace
}
```

This query selects the name of the award recipient (`?awardeeName`) and their birthplace (`?birthplace`) from the DBpedia dataset. It filters for individuals who are Award Recipients (specifically those who received an Artistic Award from Sangeet Natak Akademi) and then looks for a person named Smita Patil to retrieve her birthplace.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"The SPARQL query will search for the band ""Cavalera Conspiracy"" in DBpedia's music-related resources. We'll use the `dbpedia-owl` namespace to query for bands and their members.

```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandLabel ?bandDescription WHERE {
  ?band a dbpedia-owl:MusicBand ;
         dbpedia-owl:hasMember ?member .
  ?member a dbpedia-owl:Person ;
          rdfs:label ?memberLabel .
  ?bandLabel rdfs:label ?bandDescription .
  FILTER (lang(?bandLabel) = ""en"")  # restrict to English language
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"The SPARQL query to find the manager of VfL Bochum would be:

```sparql
SELECT ?manager
WHERE {
  ?club dbpedia:clubID ""Q1164923"" .
  ?club dbpedia:manager ?manager .
}
```

This query selects the `manager` property of the club with the ID ""Q1164923"", which corresponds to VfL Bochum in DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:birthDate ?birthDate.
  ?birthPlace a dbpedia-owl:Settlement.
  ?person rdfs:label ""Mark Tournier""@en.
}
ORDER BY ?birthPlace",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"SELECT ?parent ?royalty_child WHERE {
  ?charles_martel_of_anjou a ns:people.person; name ""Charles Martel of Anjou"" .
  ?charles_martel_of_anjou ns:father ?parent .
  ?parent a ns:people.person; rdfs:label ?parent_label .
  ?charles_v_of_hungary a ns:people.person; name ""Stephen V of Hungary"" .
  ?stephen_v_of_hungary ns:parent ?predecessor .
  ?charles_ii_of_neaples a ns:people.person; name ""Charles II of Naples"" .
  ?charles_ii_of_neaples ns:sibling ?sibling_of_charles .
  ?sibling_of_charles a ns:people.person; name ?royalty_child_name .
  ?royalty_child a ns:people.person; rdfs:label ?royalty_child_label .
  ?parent ns:child ?royalty_child .
  FILTER (regex(str(?parent_label), ""Stephen"")) .
  FILTER (regex(str(?royalty_child_label), ""Charles"")) .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","SELECT ?parent1 ?royalty ?office WHERE {
    ?child Baeda_Maryam_I .
    ?child father ?parent1 .
    ?parent1 a dbpedia:Person ;
             rdfs:label ?royalty ;
             foaf:officeHolder ?office .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","SELECT ?person ?war WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ?name.
  ?person foaf:name ""Hashiba Hidekatsu""@ja.
  OPTIONAL { ?person dbpprop:conflict ?war }
  UNION
  SELECT ?person ?war WHERE {
    ?person a dbpedia-owl:Person;
      rdfs:label ?name.
    ?person foaf:name ""Koichirō""@ja.
    ?person dbpprop:conflict ?war
  }
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","SELECT ?party
WHERE {
  ?person a dbpedia-owl:Politician .
  ?person rdfs:label ""Roy Leonardo Barreras Montealegre""@es .
  ?person dbpprop:politicalParty ?party
}
LIMIT 1",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"SELECT ?place WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:deathPlace ?place .
  ?person rdfs:label ""Antonios Varthalitis""@en .
}",2,3,3,2,1,2,3,28,0,0,12,0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:hasSpouse ?spouse .
  ?person rdfs:label ""Prince Augustus William of Prussia""@en .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpedia:birth_name ""Pacely""@en .
  ?region dbpedia:located_in dbpedia:Central Region, Ghana .
  ?artist a dbpedia:MusicArtist;
    dbpedia:birth_name ?name ;
    dbpedia:origin dbpedia:Central Region, Ghana
  FILTER (?person != ?artist)
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","SELECT ?work WHERE {
  ?politician a :politician ;
               :officeHolder ""U.S. Senator from New York"" ;
               :involvedInCrisis ""Third Taiwan Strait Crisis"" .
  ?politician ns:familyName ""Clinton"" .
  ?work a :book ;
         :author ?politician ;
         :title ?title .
}",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","SELECT ?manager
WHERE {
  ?manager a dbpedia:Person ;
            dbpedia:birthDate ""1968-08-26"" ;
            dbpedia:nationality ""Germany"" ;
            dbpedia:managesSportingClub VfL Bochum .
  ?manager dbpedia:roleInTeam dbpedia:SportManager ;
           dbpedia:team dbpedia:SoccerTeam ;
           dbpedia:season ""soccer club season"" .
  FILTER (lang(?manager) = ""de"")  # Ensure manager is from West Germany
}",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?awardLabel ?location WHERE {
  ?awardLabel rdfs:label ""Premio de la Pontificia Universidad Católica de Puerto Rico""@es.
  ?awardLocation geo:point ?geoPoint.
  ?geoPoint ns:locatedIn ""San Juan, Puerto Rico"".
  ?awardLabel rdfs:isDefinedBy <http://dbpedia.org/ontology/Award>.
  ?person foaf:name ""Ackquille Scott Sherod"" .
  ?person geo:wasBornIn ""Brooklyn, New York, United States"".
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","SELECT ?s ?p ?o WHERE {
  ?s a ns:http://purl.org/dc/elements/1.1/Property . 
  ?s ns:label ""Der Blau""@de .
  ?s ns:instance ns:http://dbpedia.org/ontology/ComicCharacter
}",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"SELECT ?person_name
WHERE {
  ?person a dbpedia:Musician .
  ?person foaf:bandMember [ owl:hasMember ?shmurda ] .
  ?shmurda ns:name ""Ackquille Khan Cassell"" .
  ?person ns:birthName ?person_name .
  ?person geo:isPartOfLocation [ geo:country ""Florida"" ] .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","The SPARQL query will need to:
1. Filter for movies that are also television shows.
2. Check if Richard E. Grant is part of the cast.
3. Extract the actors from these movies.

Here's the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?movie a rdf:Statement ;
            rdf:predicate ns:mainActorOf ;
            ns:object ?actor .
  ?movie rdfs:label ""TV Show Name"" . 
  ?movie ns:hasActor rdfs:Resource ?richardEGrant .
  ?movie ns:director ?director .
  FILTER (STRSTARTS (?director, ""Richard E Grant"")) .
}
```

This query does the following:
- Selects the actor (`?actor`) for which `?movie` is the main actor.
- Ensures that `?movie` is labeled as a TV show (`rdfs:label ""TV Show Name""`).
- Checks if Richard E. Grant is part of the cast (`ns:hasActor rdfs:Resource ?richardEGrant`).
- Filters for directors named ""Richard E Grant"".",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child a ns:office_holder .
  ?child ns:father ?parent .
  ?parent ns:malePerson .
  ?parent ns:hasChild ?child
  FILTER (str(?parent) = ""Dawit I"")
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","SELECT ?movie WHERE {
  ?movie a :Movie .
  ?movie stard :actor ""Atlanta Jones"" .
  ?movie wdt:P18 :writtenBy ""Heather Hendershot"" .
}",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?royaltyStatus ?shadowAlterEgo
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:partOfEvent dbpedia:Siege_of_Mukha ;
            dbpedia:hasParent ?parent ;
            dbpedia:isRoyalty ?royaltyStatus .
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
          dbpedia:hasAlterEgo dbpedia:The_Shadow .
}
```

This SPARQL query will:
- Select the person involved in the Siege of Mukha who is a royalty (`?person`).
- Link this person to their parent (`?parent`).
- Ensure that the child of this parent (`?child`) has an alter ego of The Shadow.",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","SELECT ?child WHERE {
  ?parent Alfonso VI of León and Castile .
  ?grandchild <http://dbpedia.org/property/husband> ?husband .
  ?husband William I of Sicily .
  ?grandparent Roger III, Duke of Apulia .
  ?child <http://dbpedia.org/property/spouse> ?spouse
}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","SELECT ?bandMember
WHERE {
  ?bandMember a dbpedia:Musician;
  dbpedia2:project The Alan Parsons Project .
  ?bandMember foaf:knows ?stuartMcBeathTosh .
  ?stuartMcBeathTosh a dbpedia:Artist .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","SELECT ?place ?order WHERE {
    ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?place .
    ?order a dbpedia:Order ;
           rdfs:label ""Order of the Medjidie""@en .
    ?person rdfs:label ""Burhan Belge""@en .
    ?person foaf:name ""Burhan Belge""@en .
    ?person dbpprop:birthDate 1844.
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","SELECT ?parent WHERE {
  ?child rdf:type owl:Thing .
  ?child rdfs:label ""William II of Sicily"" .
  ?parent a dbpedia-owl:ParentOf ?child
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?birthPlace .
  ?person rdfs:label ""Vince Gilligan""@en .
  ?person rdfs:label ""Cece Bell""@en .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?parent WHERE {
  ?child Dorothea_of_Denmark Electress_Palatine ;
           father ?parent ;
           sibling [ commanderIn Siege_of_Padua ]
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?artist WHERE { ?person a dbpedia-owl:Musician; rdfs:label ""Nick Curran"" } UNION SELECT ?band WHERE { ?person a dbpedia-owl:Musician; rdfs:label ""Kim Wilson"" }",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"SELECT ?institution WHERE {
  ?institution a dbpedia:EducationalInstitution .
  ?institution rdfs:label ?name .
  ?institution ns:award dbpedia:Nobel_Prize_in_Physics .
  ?institution ns:award dbpedia:Max_Born_Award
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","SELECT ?person WHERE {
  ?person a ns:Person ;
            rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"The SPARQL query to retrieve this information from DBpedia would look like:

```sparql
SELECT ?father
WHERE {
  ?person a dbpedia-owl:AlumnusOf edu:Eton_School ;
           dbpprop:parent_of dbpedia:P1398724 .
  ?person rdfs:label ""Winston Churchill"" .
  ?person a dbpedia-owl:Politician .
  ?father a foaf:Person .
  ?person dbo:hasFather ?father
}
```

This query searches for a person labeled as ""Winston Churchill,"" who is an alumnus of Eton College, a politician, and has a child (P1398724, which represents Sir Winston Spencer Churchill). It then retrieves the father of this individual.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?artist WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Nicholas Michael Curran"" .
  ?person wdt:P31 ?artist .
  ?artist a wdt:E22_MusicalArtist
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"SELECT ?subject ?property WHERE {
  ?subject a dbpedia:FootballTeam .
  ?subject rdfs:label ""Сборная Россия""@ru .
  
  ?subject ns:author ?writer .
  ?writer a dbpedia:Person ;
           foaf:name ""Leo Tolstoy"" .
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"SELECT ?commander ?conflict WHERE {
  ?regiment rdf:type ns:Regiment.
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"".
  ?conflict a ns:War.
  ?conflict rdfs:label ""Napoleonic Wars"" .
  ?commander a ns:Person.
  ?commander foaf:name ?name .
  ?regiment member ?commander .
}",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"The SPARQL query would be designed to search for the birth name of John Boxer. Assuming John Boxer is a notable person with an entry in DBpedia, we can use the following SPARQL query:

```sparql
SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpedia2:birth_name ?name.
  ?person rdfs:label ""John Boxer"".
}
```

This query selects the `?name` of any person (`?person`) who has the label ""John Boxer"" and whose birth name is recorded as `?name`.",2,2,3,2,1,2,2,9,0,0,39640,0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","SELECT ?person
WHERE {
  ?person a :Athlete .
  ?person a :SoccerPlayer .
  ?person a :SportsManager .
  ?person a :SoccerManager .
  ?person bd:birthdate ""1981-12-01""^^xsd:date
}",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","SELECT ?band_name ?band_real_name WHERE {
  ?artist born ""Nicholas Michael Curran"" .
  ?artist rdfs:label ""Nick Curran""@en .
  ?band_name ns:member ?artist .
  ?band_real_name a owl:RealNumber .
  ?band_name rdfs:label ?band_real_name
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?child a :Person .
  ?child :father [ owl:inverseOf :mother ] ?mother .
  ?mother a :Person .
  ?mother rdfs:label ""Linda Miller""@en .
  ?mother ns:birthPlace ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?child ns:nationality ""American"" .
  FILTER (lang(?child) = ""en"")
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"SELECT ?tenant
WHERE {
  ?sidoCompostela a dbo:City ;
               dbpedia2:name ""Santiago de Compostela"" .
  ?sidoCompostela rdfs:tenant ?tenant .
}",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","A SPARQL query to achieve this would involve querying the DBpedia dataset for the movie ""Rustlers' Rhapsody"" and then extracting the 'actor' property of that entity. Here's how the query could look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?movie a dbpedia-owl:Film ;
            dbpedia-owl:hasActor ?actor .
  ?movie rdfs:label ""Rustlers' Rhapsody"" .
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"SELECT ?band_name ?real_name
WHERE {
  ?band dbpprop:name ""The Fabulous Thunderbirds"" .
  ?band rdfs:label ?band_name .
  ?band dbo:realName ?real_name .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"SELECT ?producer_profession
WHERE {
  ?producer rdf:type dbpedia-owl:MusicProducer .
  ?CokeStudioPhilippines dbo:has_producer ?producer .
}",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?office1 ?event1 WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:role dbpedia2:CommanderIn; 
    dbpedia2:conflict ?event1.
  ?event1 a dbpedia2:MilitaryConflict .
} UNION {
  ?person a dbpedia-owl:Person;
    dbpedia2:role dbpedia2:PartyLeaderOf;
    dbpedia2:party ?party.
  ?party a dbpedia2:PoliticalParty .
}",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"SELECT ?actor
WHERE {
    ?movie a dbpedia:Film.
    ?movie st:star ?actor .
    ?actor rdfs:label ""Herschel Bernardi"".
    ?spouse a dbpedia:SpoonerRole.
    ?spouse rdfs:label ""Mariclare Costello"".
    ?child a dbpedia:Person.
    ?child rdfs:parent ?spouse.
    ?actor rdfs:label ?actor_label .
    ?actor_label = str(?movie)
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"SELECT ?manager_name
WHERE {
    ?manager managingTeam ?team .
    ?team rdfs:label ""VfL Bochum"" .
    ?manager ns:nationality ""de"" .
    ?team dbpedia-owl:season 2007-08 .
    ?player rdfs:label ""Thomas Letsch"" .
    ?player dbpprop:club ?team .
}",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"The SPARQL query will involve querying the DBpedia dataset for individuals related to Archduke Charles Louis and filtering by their role as royalty and their parentage.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child WHERE {
  ?child a rdf:Property ;
            rdfs:label ""child"" .
  ?child ns:parent [ a owl:NamedIndividual ;
                    ns:name ""Archduke Charles Louis of Austria"" ] .
  ?child ns:royaltyStatus ""Royalty"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","The SPARQL query will involve navigating through the familial relationships stored in DBpedia. We'll use `foaf:child` to represent children and `owl:sameAs` to handle potential aliases or alternative names.

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?predecessor WHERE {
  ?archduke_charles_louis a owl:Person;
    foaf:familyMember ?child_1;
    foaf:familyMember ?child_2.
  ?child_2 a foaf:Person;
    foaf:child ?grandchild.
  ?grandchild a foaf:Person;
    rdfs:label ""Philipp Albrecht, Duke of Württemberg""@de.
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor
WHERE {
  ?film a dbpedia-owl:Film;
    dbpedia:productionYear 1928;
    dbpedia:director ?director ;
    dbpedia:castMember ?actor .
  ?director rdfs:label ""Fred C. Newmeyer"" .
  ?actor rdfs:label ?actor_name
}
LIMIT 1",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"The SPARQL query will need to:
1. Identify the movie ""Rustlers' Rhapsody"".
2. Extract the actor associated with this movie.
3. Verify that the actor is indeed a professional in the profession of Frédéric Bouraly.

Given that DBpedia provides structured data about movies, actors, and professions, we can construct a SPARQL query accordingly.",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?parent WHERE {
  ?profession rdf:type dbpedia-owl:Photographer .
  ?profession rdfs:subClassOf ?parent .
}",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"SELECT ?artist
WHERE {
  ?artist a dbpedia:MusicalArtist .
  ?artist foaf:wasBornIn dbpedia:Florida .
}",1,2,2,1,1,3,3,71,0,0,97,0,0.0,0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"The SPARQL query will need to identify the correct entities for ""Always the Love Songs"", ""Battle of Vienna"", and the associated military force (which is the Habsburg Monarchy or Holy Roman Empire). Once these entities are identified, we can use the `:writer` property to find the writer of ""Always the Love Songs"" and the `:commander` property to find the commander in the Battle of Vienna. Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?writer ?commander
WHERE {
  ?tvShow rdf:type dbpedia:PilotEpisode .
  ?tvShow rdfs:subject ?songTitle .
  ?songTitle a dbo:MusicAlbum .
  ?battle rdf:type dbo:Battle .
  ?battle date ""1683""^^xsd:gYear .
  ?battle participant dbo:HabsburgMonarchy .
  ?writer rdf:type dbo:Person .
  ?writer rdfs:label ?name .
  ?commander rdf:type dbo:Person .
  ?commander rdfs:label ?name .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"SELECT ?residence WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:office ""Leader of the Ulster Unionist Party"";
    foaf:name ""James Brokenshire""@en
  ?person rdfs:seeAlso <http://dbpedia.org/resource/James_Brokenshire>;
    dbo:residence ?residence
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?commander WHERE {
  ?commander a :MilitaryCommanderOfAlgerianWar .
  ?commander foaf:father ?archdukeParent .
  ?archdukeParent rdfs:parent ?childOfArchduke .
  ?childOfArchduke a :ChildOfArchdukeCharlesJosephOfAustria
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
          dbpedia:P31 dbpedia:Artist;
          rdfs:label ""Bob Thompson""@en.
  ?person dbpprop:birthName ?birthName.
  ?band a dbpedia:Band;
         dbpprop:members ?person.
  FILTER (lang(?person) = ""en"")
}",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"To retrieve this information from DBpedia, we need to construct a SPARQL query that can find the relevant details. Here's how we might structure it:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_2 ?royalty_status ?office_holder_status 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasFather ?father_1 .
  ?father_1 a dbpedia:Person;
    dbpedia:isParentOf ?person ;
    rdfs:label ""Dream""@en .
  ?person rdfs:label ""Na'od""@en .
  ?person a dbpedia:Character ;
    dbpedia:hasAlterEgo ""The Shadow""@en .
  ?father_1 dbpedia:isRoyalPerson true .
  ?father_1 dbpedia:holdsOffice true
}
```

This query searches for:
- `?father_2`: The father of Na'od.
- `?royalty_status`: A boolean indicating if the father is a royalty (`true` or `false`).
- `?office_holder_status`: A boolean indicating if the father holds an office (`true` or `false`).

The query assumes that Dream, as a character in ""The Sandman,"" fits the criteria of being both a royalty and an office holder.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","SELECT ?person WHERE {
  ?person a ns:Person ;
            rdfs:label ""William Bayne""@en .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?person WHERE {
  ?person a dbpedia:Person;
  dbpedia:occupation ""Actor"";
  dbpedia:work [""Lasso the Moon""];
  dbpedia:filmWork some ?film
} 

AND {
  ?film a dbpedia:Film;
  dbpedia:title ""Lasso the Moon""
}",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"The SPARQL query will look for Ian Gregson's biography and specifically the award section. Assuming that DBpedia organizes this information in a structured manner, we can construct a query like:

```sparql
SELECT ?award 
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasAwards ?award .
  ?person rdfs:label ""Ian Gregson""@en .
}
```

This query searches for a person labeled as ""Ian Gregson"" and retrieves the awards associated with that person.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"SELECT ?artist ?name ?birthplace WHERE {
  ?artist a dbpedia-owl:Musician .
  ?artist rdfs:label ""Apache Indian""@en .
  ?artist foaf:givenName ?name .
  ?artist ns:birthPlace ""Birmingham"" .
  FILTER (lang(?name) = ""en"") .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","The SPARQL query will look for the character ""The Question"" associated with the creator ""DC Comics"". Here's how we can structure it:

```sparql
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?character WHERE {
  ?character a dc:Character .
  ?character rdfs:label ""The Question""@en .
  ?character dc:creator ""DC Comics"" .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"A SPARQL query to DBpedia could look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?series WHERE {
  ?character a dbpedia-owl:ComicsCharacter ;
            dbpedia-owl:associatedMedia ""The Shadow"" .
  ?character rdfs:label ?series .
}
```

This query selects the series associated with any character labeled as ""The Shadow.""",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child_name WHERE {
  ?child a dbpedia-owl:Person ;
            dbpprop:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           dbpprop:hasName ""Alfonso IV of Aragon"" .
  ?child rdfs:label ?child_name .
  FILTER (lang(?child_name) = ""en"")  # Only consider English names
}",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"SELECT ?actor1 ?actor2
WHERE {
  ?movie2 a mo:Film ;
            dc:author ""Brooke Berman"" .
  ?actor2 a owl:Thing ;
           rdfs:label ?actor_name .
  ?movie1 a mv:MusicVideo ;
            dc:subject ?actor1 .
}",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child_name
WHERE {
  ?child_name a dbpedia-owl:Royalty ;
               dbpedia2:parent [ dbpedia2:hasChild ?roger_III ] .
  ?roger_III a dbpedia:Person ;
              dbpedia2:parent [ a dbpedia:Person ] .
  ?common_parent a dbpedia:Person ;
                   dbpedia2:hasChild ?child_name .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"SELECT ?spouse2
WHERE {
  ?person1 a dbpedia:Person ;
             dbpedia:spouse ?person2 .
  ?person2 a dbpedia:Person ;
            dbpedia:spouse ?spouse1 .
  ?spouse1 a dbpedia:Person ;
            dbpedia:spouse ?spouse2 .
  ?person1 ns:name ""Duchess Luise of Brunswick-Wolfenbüttel"" .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","SELECT ?person
WHERE {
  ?person a :actor.
  ?person rdfs:label ""Richard Grant Esterhuysen"".
  ?person foaf:role [ a :movie; rdfs:label ""that is a television show"" ].
  ?person dbpprop:associatedWith Shatrughan_Sinha .
  FILTER (regex(str(?person), ""Richard Grieco"")) .
}",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","SELECT ?person WHERE { ?person a dbpedia-owl:MusicalArtist . ?person rdf:value ""Robert Lamar Thompson"" }",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?subject ?property
WHERE {
  ?subject a dbpedia-owl:Battle ;
             dbpedia-owl:instanceOf dbpedia:Conflict .
  ?subject dbpedia:commander ?commander .
  ?commander a dbpedia:Person;
           dbpedia:givenName ""Napoleon"";
           dbpedia:nationality ""French"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"To retrieve this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor ?parent1 ?parent2
WHERE {
  ?movie a dbpedia:Film.
  ?movie_title ""Judgment: The Trial of Julius and Ethel Rosenberg"".
  ?actor dbpedia:roleInFilm ?movie .
  ?actor rdfs:label ?actor_label .

  ?person1 a dbpedia:Person.
  ?person1 rdfs:familyMember ?parent1 .

  ?person2 a dbpedia:Person.
  ?person2 rdfs:familyMember ?parent2 .
}
```

This query does the following:
- Selects the actor (?actor) associated with the movie ""Judgment: The Trial of Julius and Ethel Rosenberg"".
- Identifies the label of the actor for clarity.
- Selects the parents of Eugène Cattin (?parent1) and Doon Arbus (?parent2).",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander WHERE {
  ?commander a pol:PolskiLudzie; pol:roli ""Komandant""; pol:status ""Politik"".
  ?commander pol:imieniem ""Michał Kazimierz Pac"".
  OPTIONAL { ?commander rdfs:label ?name }
  FILTER (lang(?name) = ""pl"" )
}",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","SELECT ?child WHERE {
  ?royal_child a dbpedia:Royalty .
  ?royal_child dbpprop:childOf ?bela .
  ?bela dbpprop:parentOf ?stephenV .
  ?stephenV dbpprop:predecessorOf ?andrewII .
  ?andrewII dbpprop:spouse ?charlesI .
  ?charlesI dbpprop:fatherOf ?philipI
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"SELECT ?territory ?administration WHERE {
  ?king olafIOfDenmark .
  ?king rdfs:label ""Olaf I of Denmark""@en .
  ?king dbpprop:reignStart ""1023""^^xsd:gYear .
  ?king dbpprop:reignEnd ""1035""^^xsd:gYear .
  ?territory rdfs:label ""Kingdom of Denmark""@en .
  ?administration rdfs:label ""Copenhagen""@en
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"SELECT ?tenant
WHERE {
  ?country capital ?capital .
  ?landmark custodian ?tenant .
  ?capital ns:name ""Madrid"" .
  ?landmark rdfs:label ""Santiago de Compostela"" .
}",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?war WHERE {
    ?laureate nobelPeacePrizeAwarded ""2015"" .
    ?laureate rdfs:label ?warLabel .
    ?warLabel ns:label ""War of [something]""
}",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"The SPARQL query will involve joining multiple relations to find the required information. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child WHERE {
  ?child a rdf:ChildOf ?parent .
  ?parent a foaf:SpouseOf ?spouse .
  ?spouse a foaf:Person .
  ?child rdfs:label ""royalty"" .  # Assuming we use labels for simplicity
}
```

This query selects all children (`?child`) of Saw Min Phyu (`?parent`) where the child is labeled as royalty (`?child rdfs:label ""royalty""`). We assume that DBpedia uses labels to denote royalty status, which may not be accurate but serves as a simplification.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?eventLabel ?tvShowLabel WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?father.
  ?father a dbpedia:Human;
    rdfs:label ""Ferdinand II, Holy Roman Emperor""@en.
  ?person dbpedia:hasChild ?eleonore.
  ?eleonore a dbpedia:Person;
    rdfs:label ""Eleonore of Austria""@en.
  ?event a dbpedia:Event;
    dbpedia:isPartOfDbpediaCategory ""Algerian War"" .
  ?eventLabel rdfs:label ?event .
  OPTIONAL { ?event rdf:type dbpedia:MilitaryConflict }
  ?tvShowLabel a rdf:Property;
    rdfs:label ""star of""@en.
  ?person rdf:type dbpedia:TelevisionPerson ;
    dbpedia:roleIn ?tvShowLabel .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?artist WHERE {
  ?writer rdf:type dbpedia-owl:MusicalArtist .
  ?writer foaf:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?writer rdfs:label ""pacely"" .
  ?associated_artist a dbpedia-owl:MusicArtist .
  ?writer dbo:composesWork ""The Live Anthology"" .
  ?artist rdfs:label ?artistLabel .
  ?artist dbo:isAssociatedWith ?writer
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?spouse
WHERE {
  ?child a dbpedia:Royalty .
  ?child dbo:hasParent ?parent.
  ?parent a dbpedia:Person; dbo:hasChild ?child .
  ?parent dbo:hasSpouse ?spouse .
  ?myat_hpone_pyo a dbpedia:Person; dbo:succeededBy ?succeededBy .
  ?succeeded_by a dbpedia:Person; dbo:hasParent ?grandparent .
  ?grandparent a dbpedia:Person; dbo:hasChild ?child .
  ?spouse a dbpedia:Royalty .
  ?spouse rdfs:label ""Spouse's Name"" . # Placeholder for actual label
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?person WHERE {
  ?person ns:birthPlace ""New York, United States"" .
  ?person rdfs:label ""Theodore Roosevelt""@en .
}",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"SELECT ?father_of_Baeda_Maryam_I ?shadow_alter_ego_name ?shadow_child
WHERE {
  ?father_of_Baeda_Maryam_I a dbpedia:Monarch;
    dbpedia:parent [ dbpedia:givenName ""Baeda Maryam I"" ] .
  ?shadow_alter_ego_name a dbpedia:ComicBookCharacter ;
    dbpedia:alter_Ego ""Lamont Cranston"" .
  ?shadow_child a dbpedia:FictionalCharacter ;
    dbpedia:parent ?shadow_alter_ego_name .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","SELECT ?childFather
WHERE {
  ?childParent a dbpedia-owl:Child ;
               rdfs:father ?childFather .
  ?childParent ns:parentOf Archduke Charles Joseph of Austria .
  ?childParent ns:childOf Ferdinand II, Holy Roman Emperor .
  ?childFather a dbpedia-owl:Person ;
             rdfs:label ""Maximilian II, Holy Roman Emperor""@de.
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","SELECT ?location ?timeZone
WHERE {
  ?location rdfs:label ""Mitaka""@ja .
  ?location geo:location ?geo .
  ?geo wdt:P17a wd:Q6588.
  ?timeZone wdt:P31 wd:Q122.
  FILTER (lang(?timeZone) = ""ja"")
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"SELECT ?institution WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?birthPlace .
  ?birthPlace a dbpedia2:Location ;
    dbpprop:isPartOfCountry ?country .
  ?country a dbpprop:Country .
  FILTER (lang(?person) = ""en"")  # Assuming the person is English-speaking
}",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","SELECT ?parent WHERE {
  ?child Arthur Stanley .
  ?child Edward Stanley .
  ?child Victor Stanley .
  ?child a ns:peoplePerson .
  ?parent a ns:peopleParent .
  ?parent ns:P31 ?child
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?player a dbpedia-owl:Footballer ;
            rdfs:label ?name .
  ?player foaf:firstName ""Sergio"" .
  ?player dbo:playsFor ?team .
  ?team rdfs:label ""Athletico de Kolkata"" .
}",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"SELECT ?region WHERE {
  ?region wdt:P31 wd:Q12298 .
  ?region rdfs:label ?label .
  FILTER (lang(?label) = ""ja"")  # Ensure the label is in Japanese
}",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"SELECT ?battle ?militaryForce WHERE {
  ?battle a dbpedia-owl:Battle ;
            rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?battle a dbpedia-owl:Battle ;
            rdfs:label ""Battle of Fort Royal"" .
  OPTIONAL { ?battle wdt:P31 wd:Q162730 } # Link to Military unit involved
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"A SPARQL query to solve this would involve querying the DBpedia dataset, which is a popular source for such structured data. Here's how we might construct the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?spouse
WHERE {
  ?film a dbo:Film;
    rdfs:title ""Paradise (2013 film)"".
  ?actor a dbo:Actor;
    rdf:type dbpprop:roleOf ?film .
  ?janusz Kamiński a dbo:Person;
    dbo:spouse ?spouse .
  ?actor dbo:actedIn ?film .
  ?spouse rdfs:label ?spouse_label .
}
```

This query does the following:
- Selects the actor (`?actor`) and spouse (`?spouse`) of the film ""Paradise (2013 film)"".
- Uses `dbo:Film` to identify the film and `rdfs:title` to specify the title.
- Identifies the actor by their role in the film using `dbpprop:roleOf`.
- Identifies Janusz Kamiński (`?janusz Kamiński`) and selects his spouse.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?birthplace
WHERE {
  ?artist a dbpedia-owl:Artist .
  ?artist rdfs:label ""Ethan Iverson""@en .
  ?artist dbpprop:musicalArtist true .
  ?artist dbo:birthPlace ?birthplace
}",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"SELECT ?place WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?place .
  ?person rdfs:label ""Yamaza Enjirō""@ja
}",2,2,3,2,1,2,3,28,0,0,104,0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"SELECT ?child ?parent WHERE {
  ?min_hla_htut a dbpedia-owl:Person;
    dbpedia2:hasParent ?parent .
  ?parent a dbpedia-owl:Person;
    rdfs:label ""Min Hla Htut""@en .
  ?myat_hpone_pyo a dbpedia-owl:Person;
    dbpedia2:hasPredecessor ?predecessor .
  ?predecessor a dbpedia-owl:Person;
    rdfs:label ""Myat Hpone Pyo""@en .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"SELECT ?admin WHERE {
  ?party psoe.
  ?party admin ?admin .
  ?admin foaf:name ?name .
  FILTER(lang(?name) = ""es"")  # Ensure the name is in Spanish
}",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty;
  ?child father dbpedia:René_II,_Duke_of_Lorraine_and_Bar;
  ?child mother dbpedia:Anne_de_Montmorency
}",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?country WHERE {
  ?chancellor a dbpedia-owl:OfficeHolder ;
                 dbpedia-owl:office dbpedia:Chancellor_of_Germany;
                 foaf:name ""Willy Brandt""@de.
  ?manager a dbpedia-owl:Person ;
            dbpedia-owl:birthPlace ?country
}
UNION
{
  ?jansen a dbpedia-owl:Person ;
           dbpedia-owl:birthPlace ?country
}
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","SELECT ?person WHERE {
  ?person a :politician .
  ?person a :office_holder .
  ?person ns:spouse ?wife .
  ?wife a :U.S._Senator .
  ?wife a :Secretary_of_State .
  ?person rdfs:label ""Hillary Clinton"" .
  ?person ns:author ?work .
  ?work a :book .
  ?work a :written_work
}",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"SELECT ?award
WHERE {
  ?person a :Person;
    foaf:name ""Ackquille Khari Pollard""@en;
    :birthPlace ""Brooklyn"" .
  ?band a :MusicBand;
    rdfs:member ?person ;
    :origin ""New York"" .
  ?award a :MusicAward .
  ?award rdfs:domain ?band .
}",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","SELECT ?person WHERE {
  ?archduke a ns:Person ;
              ns:hasParent ?parent ;
              ns:hasChild ?grandchild .
  ?parent a ns:Person ;
          ns:hasParent ?grandparent .
  ?grandparent a ns:Person ;
             ns:hasParent ?greatGrandparent .
  ?greatGrandparent a ns:Person ;
               ns:hasParent ?ancestor
           .
  ?ancestor ns:isDescendantOf [ a ns:FamilyRelationship; ns:member ?archduke ]
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","SELECT ?actor WHERE {
  ?actor rdfs:label ""The Shadow""@en .
  ?actor foaf:name ""Richard Grant Esterhuysen""@en .
  ?actor dbpprop:role_in_film ?movieRole .
  FILTER (lang(?movieRole) = ""en"") 
}",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","SELECT ?war1Label ?war2Label WHERE {
    ?war1 a dbpedia-owl:Conflict;
        rdfs:label ?war1Label .
    ?awardee a dbpedia-owl:Person;
        rdfs:label ?awardeeLabel .
    ?awardee rdfs:receivedAward ""25th award"" .
    ?war2 a dbpedia-owl:Conflict;
        rdfs:label ?war2Label .
    FILTER (lang(?war1Label) = ""ru"" || lang(?war2Label) = ""ru"")  # Search for labels in Russian
}
LIMIT 1",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"SELECT ?spouse
WHERE {
  ?person rdf:type dbpedia-owl:Person .
  ?person rdfs:label ""Linda Bruckheimer"" .
  ?person wif:spouse ?spouse .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","SELECT ?establishment_date ?almaMater
WHERE {
  ?person a dbpedia:Politician;
    dbpprop:birthDate ""1955-12-02"".
  OPTIONAL { ?person dbpprop:first_Employment ?establishment_date }
  OPTIONAL { ?person dbo:almaMater ?almaMater }
}
ORDER BY ?establishment_date",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?office WHERE {
  ?person a dbpedia-owl:OfficeHolder.
  ?person a dbpedia:Politician .
  ?person rdfs:label ""Manuel Pinto da Costa""@pt.
  ?person dbpprop:conflict ""Carnation Revolution"".
  ?office rdfs:label ?office_label .
}",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"A SPARQL query to retrieve this information from DBpedia would involve querying for the parent of Archduke Charles Joseph of Austria. Assuming that DBpedia has structured data about the lineage of Archduke Charles Joseph, a possible SPARQL query could be:

```sparql
SELECT ?parent WHERE {
  ?archduke charles joseph of austria a dbpedia-owl:Person ;
               dbpedia-owl:hasParent ?parent .
}
```

This query selects the `parent` of the person named `charles joseph of austria`, which should be Archduke Charles Joseph's father.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","SELECT ?birthPlace
WHERE {
  ?author dbo:hasWork ""El Deafo"" .
  ?politician dbpedia-owl:office dbpedia:Governor_of_Virginia .
  ?gilligan dbpedia:birthPlace ?birthPlace
}
AND
{
  ?author rdfs:label ""Phyllis Reynolds Naylor""@en .
  ?politician foaf:name ""Ralph S. Northam""@en .
  ?gilligan foaf:name ""Vince Gilligan""@en .
}
ORDER BY ?birthPlace",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"SELECT ?album WHERE {
  ?artist rdf:type dbpproject:Person .
  ?song rdf:type dbpproject:Composition .
  ?song rdfs:label ""T.I. song title"" .
  ?artist foaf:name ""T.I."" .
  ?album a dbpproject:MusicAlbum .
  ?song dbpproject:performer ?artist .
  ?album dbpproject:lyrics ?song
}",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"A SPARQL query to solve this problem would involve querying DBpedia for the relevant entities and their relationships. We need to find Ian Gregson as an entity, identify any movies he was associated with, and then extract the producer of those movies.

Here's a possible SPARQL query:

```sparql
SELECT ?movie PRODUCER ?producer 
WHERE {
  ?movie a dbpedia-owl:Film ;
            dbppro:associatedPerson [ a dbpedia:Person ; rdfs:label ""Ian Gregson"" ] .
}
```

This query selects the movie (`?movie`) and its producer (`?producer`) from the DBpedia dataset, where the movie is associated with a person labeled as ""Ian Gregson"".",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?band
WHERE {
  ?person a dbpedia:Musician .
  ?person rdfs:label ""Nicholas Michael Curran"" .
  ?person rdfs:label ""Kim Wilson"" .
  ?person dbpprop:associatedBand ?band
}
LIMIT 1",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Musician .
  dbo:birthPlaceOf ?person dbo:CentralRegion .
  ?person rdfs:label ?birthName .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?person
WHERE {
  ?person a :Athlete .
  ?person a :SoccerPlayer .
  ?person a :SportsManager .
  ?person a :SoccerManager .
  ?person rdfs:birthdate ""1981-12-01""^^xsd:date
}",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person WHERE {
  ?child a ns:Person ;
            ns:hasParent ?parent .
  ?parent a ns:Person ;
           ns:hasChild ?grandchild .
  ?grandchild a ns:Person ;
             ns:officeHolder ;
             ns:royalty .
  ?parent ns:firstName ""Roger"" ;
          ns:lastName ""II"" ;
          ns:country ""Sicily"" .
  ?grandchild ns:firstName ""Sancho"" ;
              ns:lastName ""III"" ;
              ns:country ""Navarre"" .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"SELECT ?child ?parent WHERE {
  ?child a dbpedia-owl:Royalty ;
           dbpedia2:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
          rdfs:label ""William I of Sicily""@en .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?person
WHERE {
    ?person a dbpedia-owl:Artist .
    ?person a dbpedia-owl:MusicalArtist .
    ?person dbo:deathDate ""2020-06-18""^^xsd:date .
}",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor
WHERE {
  ?movie a dbpedia:Film.
  ?movieHasActor rdfs:label ""The Campus Queen"".
  ?actor dbpprop:starIn ?movie
}
LIMIT 1",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"A SPARQL query to retrieve this information might look like:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child_name ?shadow_alter_ego
WHERE {
  ?person a dbo:Person;
    dbo:hasParent ?parent.
  ?parent a dbo:Monarch.
  ?parent rdfs:label ""Dawit I""@en .
  ?child_name rdf:type dbo:Child;
    rdf:label ?child_name .
  ?shadow_alter_ego a dbo:CharacterProperty;
    rdf:type dbo:AlterEgo ;
    rdfs:label ?shadow_alter_ego .
  ?child_name <> ?shadow_alter_ego .
}
```

This query searches for:
- A person (`?person`) who is a child of a monarch (`?parent` with `rdfs:label ""Dawit I""@en`), 
- An alter ego (`?shadow_alter_ego`) of The Shadow (`?shadow_alter_ego a dbo:AlterEgo ; rdfs:label ?shadow_alter_ego`),
- And links the child (`?child_name`) to the shadow alter ego.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"SELECT ?person WHERE { ?person ns:birthPlace ""Jamshedpur, Jharkhand"" }",1,1,2,1,1,2,2,9,0,0,68,0,0.0,0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"The SPARQL query would look for the ship with the ID ""1605"" and then extract the owner information from the resulting dataset. Here's how the query could be constructed:

```sparql
SELECT ?owner 
WHERE {
  ?ship rdf:type dbpedia-owl:Ship .
  ?ship dbpprop:identifier ""1605"" .
  ?ship rdfs:seeAlso <http://dbpedia.org/ontology/> .
  ?owner a dbpedia-owl:Person .
}
```

This query selects the `?owner` of the ship with the identifier ""1605"". It assumes that the ship has an RDF type of `dbpedia-owl:Ship`, it has a property `dbpprop:identifier` with the value ""1605"", and it references the DBpedia ontology URL for further properties.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?father WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasFather ?father ;
            rdfs:label ""Eleonore of Austria, Queen of Poland"" .
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"SELECT ?commander ?battle WHERE {
  ?regiment ns:hasMember ?member .
  ?member a ns:MilitaryPerson; ns:hasRole ns:MilitaryRole ; ns:participatedInBattle ?battle .
  ?battle a ns:Battle .
  ?battle ns:combatant ?militaryForce .
  ?militaryForce a ns:MilitaryOrganization; ns:commandedBy ?commander
} 
WHERE {
  ?regiment rdf:type ns:Regiment .
  ?regiment ns:militaryUnitIdent ""30th (Cambridgeshire) Regiment of Foot"" .
  ?battle ns:date ""1794-05-09"" .
  ?battle ns:date ""1805-08-22"" .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","SELECT ?author
WHERE {
  ?work ""The First Glove"" rdfs:label ?title .
  ?work dc:creator ?author .
  OPTIONAL { ?author foaf:nick ?nickname }
  FILTER (lang(?title) = ""ru"" )  # Assuming the author is known under a Russian nickname
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"SELECT ?child WHERE {
  ?child a :childOf ?parent .
  ?parent a :spouseOf ?spouse .
  ?parent ns:name ""Saw Min Hla"" .
  ?spouse ns:name ""Saw Shwe Khet"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"The SPARQL query to retrieve this information from DBpedia would look like:

```sparql
SELECT ?person WHERE {
  ?person a dbpedia:Monarch ;
            dbpedia:hasParent ?grandparent ;
            dbpedia:hasChild ?child .
  ?grandparent a dbpedia:Monarch ;
             dbpedia:hasParent ?parent .
  ?child a dbpedia:Person ;
          dbpedia:hasParent ?grandchild .
  ?parent a dbpedia:Monarch .
  ?grandchild a dbpedia:Person ;
            dbpedia:hasParent ?greatGrandchild .
  ?greatGrandchild a dbpedia:Person ;
               dbpedia:hasParent ?alfonso_vi
}
WHERE {
  ?person = ""Alfonso VII of León""
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"To achieve this, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor_birthday WHERE {
  ?governor a dbo:Politician ;
            dbo:birthPlace ?region .
  ?region a dbo:Region ; dbo:isAdministrativeDivisionOf ?powell_birthplace .
  ?powell a dbo:Person ;
           dbo:name ""Paulus Powell"" ;
           dbo:birthPlace ?powell_birthplace .
}
```

This query first selects the governors who are politicians and then filters those governors to only include ones whose birth place is also a region and an administrative division of Paulus Powell's birth place.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"SELECT ?person
WHERE {
  ?person a :Person ;
            dcterms:birthPlace ""Grand Duchy of Finland"" ;
            dcterms:deathPlace ""Switzerland"" ;
            rdfs:label ?name .
}
LIMIT 1",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"The SPARQL query to retrieve this information from DBpedia would be:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?artist dbpedia-owl:associatedBandMember ?bandMember .
  ?artist rdfs:label ""David Paton"" .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","To find the necessary information, we can use the following SPARQL query:

```sparql
SELECT ?bandMember 
WHERE {
  ?producer a dbpedia-owl:Organization ;
               dbppro:isPartOf ?band .
  ?band a dbpedia:MusicBand .
  ?producer rdfs:label ""Nothing to Gein"" .
}
```

This query searches for band members (`?bandMember`) who are part of an organization (`?producer`) labeled as ""Nothing to Gein"", and where that organization is also a part of a music band (`?band`).",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"SELECT ?profession
WHERE {
  ?person a dbo:Person ;
            dbo:occupation ?profession .
  ?person rdfs:label ""Shatrughan Sinha""@en .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","SELECT ?party_member WHERE {
  ?party rdfs:label ""Political Party Name""@en.
  ?party sparql:hasMember ?member .
  ?member foaf:name ""Name of Party Member""@en .
  ?member geo:locatedIn dbpedia-owl:Location ""Westport, Connecticut"" .
}",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","The SPARQL query to find such a person would involve searching through DBpedia's data for individuals matching the name ""Harriette Arlene Lake"" who are associated with a specific landmark (presumably Mount Rushmore, given the elevation) and who are married to Roger Pryor. However, since Harriette Arlene Lake is not a well-documented historical figure, we will broaden our search to include any individuals who match parts of the description.

Here's a simplified SPARQL query that attempts to find such a person:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasSpouse [ owl:propertyValue ""Roger Pryor (actor)"" ] ;
            rdfs:label ""Harriette Arlene Lake""@en .
  ?person dbpedia-owl:birthPlace [ geo:point geo:latitude ""20.116800000000001347""^^xsd:float; geo:longitude ""????""^^xsd:float ] .
}
```

This query looks for a person with the label ""Harriette Arlene Lake"" who is married to Roger Pryor (actor) and was born in a place with a latitude of approximately 20.1168° N.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?militaryForce WHERE {
  ?commander rdf:type dbpedia-owl:Person.
  ?commander rdfs:label ""Robert Calder"".
  ?commander dbpprop:conflict ""Napoleonic Wars"" .
  ?regiment rdf:type dbpedia-owl:Regiment.
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"".
  ?regiment dbpprop:conflict ""Battle of Copenhagen, 1801"".
  ?commander dbpprop:serveIn ?regiment .
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","The SPARQL query will need to search for a triple that connects Walter B. Gibson's alter ego (The Shadow) with the properties of being a fictional character and a comics character, while also having the property of being a professional singer. Here is the SPARQL query:

```sparql
SELECT ?character WHERE {
  ?character a :comicsCharacter .
  ?character a :fictionalCharacter .
  ?character rdfs:label ""The Shadow""@en .
  ?character :occupation ""singer"" .
}
```

This query looks for a resource `?character` that is both a `:comicsCharacter` and a `:fictionalCharacter`, has the label ""The Shadow"" in English (`""The Shadow""@en`), and has the occupation of ""singer"".",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war
WHERE {
  ?officer a dbpedia-owl:Person;
    rdfs:label ""Tom Phillips""@en;
    dbpprop:conflict ""War of [?war]"" .
}",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?commander ?author WHERE {
  ?politician a :Politician;
  :residesIn ""Chappaqua, New York"";
  :isSpouseOf ?spouse
  ; :hasWritten ""An Invitation to the White House"" .
  ?spouse a :Politician; 
  :holdsOffice ?office .
  ?commander a :MilitaryOfficer; 
  :ledOperation ""Third Taiwan Strait Crisis"" .
}",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?commander a dbpedia:Person.
  ?commander rdfs:label ""Commander of French Revolutionary Wars""@fr.
  FILTER (lang(?commander) = ""fr"")
}",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:conflict ""World War I"" .
  ?person rdfs:label ""Alexander Lvovich Davydov"" .
  ?person dbpprop:awardedWith ?award .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia2:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplaceLabel .
  FILTER (lang(?birthplaceLabel) = ""en"")  # Restrict to English labels
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?tenant WHERE {
  ?city sparql:locatedIn ?region .
  ?region rdfs:label ""Galicia"" .
  ?president sparql:office ?office .
  ?office rdfs:label ""President of the Xunta de Galicia"" .
  ?electionDate rdf:type rdf:Property .
  ?president rdf:type foaf:Person .
  ?president ns:start_date ?electionDate .
  FILTER (STRFTER(?electionDate, ""2009-01-01"") AND STRTOT(""2009-12-31""))
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?militaryForce ?commander
WHERE {
  ?battle rdf:type dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?battle dbpprop:combatantSome ?militaryForce .
  ?battle dbpprop:commandedBy ?commander .
  ?commander rdfs:label ""Admiral Pierre-Charles Villeneuve"" .
  FILTER (?commander = ""The Triple X's"")
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","To achieve this, we can use SPARQL queries to extract the required information from DBpedia's dataset. Here are the queries:

1. **For the person born on 1979-11-03 who is both a soccer player and a soccer manager:**

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?team WHERE {
  ?person a dbpedia-owl:SoccerPlayer ;
            dbpedia-owl:SoccerManager ;
            rdfs:label ?birthDate .
  ?person birthDate ""1979-11-03"" .
}
```

2. **For the athlete born on the birthday of Marty Pollio (assuming Marty Pollio was born on 1979-11-03):**

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?team WHERE {
  ?athlete a dbpedia-owl:Athlete ;
             rdfs:label ?birthDate .
  ?athlete birthDate ""1979-11-03"" .
  OPTIONAL { ?athlete dbpedia-owl:playsFor ?team . }
}
```

3. **For the team associated with Sergio Agüero:**

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?team WHERE {
  ?player a dbpedia-owl:SoccerPlayer ;
            rdfs:label ?name .
  ?player name ""Sergio Agüero"" .
  OPTIONAL { ?player dbpedia-owl:playsFor ?team . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?militaryForce ?commanderName ?awardeeName ?awardedEvent
WHERE {
  ?battle battleLabel ""Battle of Fort Royal"" .
  ?battle militaryStrength ?militaryForce .
  ?battle commander ?commanderName .
  ?campaign commander ?commanderName .
  ?commanderName a :Person ;
               :hasMilitaryRank ""Admiral"" .
  ?campaign campaignTo ""French campaign in Egypt and Syria"" .
  ?awardee a :Person ;
            :award ""Knight Commander of the Order of the Bath (KCB)"" .
  ?awardedEvent a :SocietalEvent .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"The SPARQL query to retrieve this information from DBpedia would look something like this:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?person ?party WHERE {
  ?person a dbpprop:Politician ;
            dbpprop:memberOf dbpprop:Spanish_People's_Party .
  ?person rdfs:label ""Roy Barreras""@es.
}
```

This query searches for a person named Roy Barreras who is a member of the Spanish People's Party (Partido Popular in Spanish).",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"The SPARQL query to retrieve information about the Commander of the Order of the British Empire from DBpedia would be:

```sparql
SELECT ?title WHERE {
  ?award a ns:http://purl.org/dc/terms/Agent ;
         rdfs:label ""Commander of the Order of the British Empire""@en .
  ?award ns:dc.title ?title .
}
```

This query looks for resources that are labeled as ""Commander of the Order of the British Empire"" and retrieves their titles (which would likely be the formal title itself).",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?actor ?team
WHERE {
    ?actor a dbpedia:Actor ;
           dbppro:role dbpedia:footballer_soccer ;
           dbppro:position dbpedia:SoccerPlayer .
    ?actor dbppro:birthday ""1979-11-03""^^xsd:date .
    ?actor rdfs:label ?name .
    ?team a dbpedia:FootballClub ;
           dbppro:fullName ""Manchester City F.C."" .
    ?actor dbppro:playsFor ?team .
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","SELECT ?group WHERE {
  ?movie a dbpedia-owl:Film ;
    dbpedia-owl:director ""Sergei Eisenstein"" ;
    rdfs:label ""Burnt by the Sun""@en
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?person
WHERE {
  ?person a [ rdf:type dbo:Player ; dbo:role ""soccer"" ] .
  ?person a [ dcterms:publisher ; dct:title ""Soccer Manager"" ] .
  ?person dbpprop:birthday ""1979-11-03"" .
}",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","The SPARQL query will look for Bob Thompson's professional details in the context of music and then compare it with a hypothetical or another real professional's details. Here is the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?musicianDetail1 ?musicianDetail2 
WHERE {
  ?musicianDetail1 a dbpedia-owl:Musician ;
                    dbpedia-owl:bandMembers ?bandMembers1 .
  ?bandMembers1 rdf:type owl:Class.
  
  ?musicianDetail2 a dbpedia-owl:Person ;
                    rdfs:label ?personLabel2 .
  
  OPTIONAL { 
    ?musicianDetail1 rdfs:label ?personLabel1 . 
  }
  
  FILTER (lang(?personLabel1) = ""en"" || lang(?personLabel2) = ""en"") 
}
```

This query will:
- Find details about Bob Thompson as a musician (`?musicianDetail1`).
- Extract his band members (`?bandMembers1`), which are of type `owl:Class`.
- Compare these details with another person's details (`?musicianDetail2`) labeled in English.",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"The SPARQL query will be designed to find the band member(s) associated with the artist page of Bobby Shmurda (who is identified by his real name, Ackquille Jean Pollard). Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?artist dbpedia-owl:hasBandMember ?bandMember.
  ?artist a dbpedia:MusicArtist .
  ?artist rdfs:label ""Ackquille Jean Pollard""@en.
}
```

This query selects the `?bandMember` of any artist with the label ""Ackquille Jean Pollard"" (Bobby Shmurda's real name), which should return the band members associated with Bobby Shmurda.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"SELECT ?subject ?property WHERE {
  ?subject a :type .
  ?subject ?hasProperty ?value .
  OPTIONAL { ?subject rdfs:label ?name }
  FILTER (lang(?name) = ""en"") 
} 

Where:
- :type is a property that describes the type of the subject (e.g., book, disease, ship).
- ?subject represents the entities we are looking for.
- ?hasProperty represents the specific role or attribute of the subject (e.g., author, commander, owner, spouse).
- The FILTER clause ensures we only get results in English.",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?entity WHERE {
  ?entity a ns:http://www.w3.org/2002/07/owl#NamedIndividual .
  ?entity ns:locatedIn ns:https://dbpedia.org/ontology/Location .
  ?entity rdfs:label ""Zervas"" .
  ?entity rdfs:label ""Missolonghi"" .
  FILTER (lang(?entity) = ""en"")  # Filter for English language
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?warLabel ?warDescription WHERE {
  ?war a dbpedia-owl:War .
  ?war rdfs:label ?warLabel .
  ?war description ?warDescription .
  ?war ns:hasParticipant [ a owl:NamedIndividual; foaf:name ""Napoleon Zervas"" ] .
}",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?parent WHERE {
  ?child ns:father ?parent .
  ?parent a ns:politician .
  ?parent a ns:officeHolder
  AND ?child ns:mbox ""Edward Stanley""
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"A SPARQL query would typically be used with a knowledge base like DBpedia, which contains structured data about people and bands. However, since specific band member details might not be directly linked in DBpedia, we'll focus on Bobby Shmurda's birth name.

For Bobby Shmurda (whose real name is Ackquille Cordell Pollard), we can use a simple query to extract this information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthName WHERE {
  ?person rdf:type dbpedia-owl:Person ;
            rdfs:label ""Ackquille Cordell Pollard""@en .
}
```

This query selects the `birthName` of a person labeled as Ackquille Cordell Pollard in English.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?actor ?producer_film_title ?claim_to_fame_producer
WHERE {
    ?actor rdfs:label ""High Society"" . # Assuming this is the correct title for clarification
    ?actor foaf:role [ a owl:Ontology ; owl:class ""ns0:ActorRole"" ] .
    ?film1 a ns0:Film; ns0:producer ?producer_tomsawyer .
    ?film1 ns0:releasedInYear 1938 .
    ?film2 a ns0:Film; ns0:title ""High Society"" .
    ?actor ns0:actedIn ?film2 .
    ?producer_film2 ns0:producer ?producer .
    ?claim_to_fame a ns0:ClaimToFame; ns0:film ?claim_film .
    ?claim_fame_producer ns0:producer ?claim_fame .
    ?producer_film1 ns0:producer ?producer_tomsawyer .
    ?producer_film2 ns0:producer ?producer_tomsawyer
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"SELECT ?show WHERE {
  ?institution a ns:Organization ;
                 rdfs:label ?institutionLabel .
  ?awardee a ns:Person ;
            foaf:name ?awardeeName .
  ?awardee ns:award ?nobelPrize .
  ?institution ns:affiliatedWith ?awardee .
  ?show a ns:CreativeWork ;
          rdfs:label ?showLabel .
  ?institution ns:associatedWith ?show
}",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","SELECT ?person ?rank WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""Quincy Adams Gillmore""@en.
  ?person dbpprop:awardedTo ""Military unit or entity in Charleston, South Carolina"".
  ?person dbpprop:rank ?rank
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"SELECT ?commander ?show ?event WHERE {
  ?commander rdfs:label ""Charles VI, Duke of Lorraine""@en .
  ?commander ns:commandedIn <http://dbpedia.org/ontology/battle> [] .
  ?show rdfs:label ""Television Show""@en .
  ?event rdfs:label ""Societal Event""@en .
  ?show ns:hasParticipant ?commander .
  ?event ns:participatedIn ?commander .
  FILTER (lang(?commander) = ""en"") .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"" } 
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","SELECT ?name ?birth_name ?spouse WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthName ?birth_name ;
            wdt:P31 wd:tP17 .
  ?person rdfs:label ?name .
  ?person ns:spouse ?spouse .
  ?spouse a dbpedia-owl:Person ;
           dbpedia2:actorInSeries ""1,000 Dollars a Minute"" .
}
LIMIT 1",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","SELECT ?parent WHERE {
  ?person a ns:Person ;
            ns:hasParent ?parent .
  ?person ns:name ""Roger III, Duke of Apulia"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist_name WHERE {
  ?person a dbpedia-owl:Musician;
  dbpedia2:associatedBand ?band .
  ?band rdfs:label ""Nick Curran""@en.
}

AND
SELECT ?realName WHERE {
  ?band a dbpedia-owl:Band ;
  dbpedia2:name ?realName .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en.
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?name
WHERE {
  ?artist a ns:MusicArtist .
  ?bandMember a ns:BandMember .
  ?bandMember ns:hasArtist ?artist .
  ?artist ns:birthName ?name .
  ?artist ns:originallyFrom ns:Florida .
  ?bandMember ns:originallyFrom ns:Florida
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","SELECT ?band WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person dbo:birthDate ""1945-03-30"" .
  ?person rdfs:member ?band
}",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"SELECT ?player WHERE {
  ?player rdfs:label ""Nickname of Russia national football team""@en .
  ?player foaf:givenName ""Aleksandr"" .
  ?player dbo:birthDate ""1987-01-01""^^xsd:date
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Bob Thompson"" .
  ?person foaf:givenName ?name
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"To find this information, we can use a SPARQL query to search for individuals who have the property of being associated with both ""The Shadow"" (assuming this is a role or alias) and ""Frédéric Bouraly"". We will need to join relevant RDF triples from DBpedia that link these concepts.

Here's a possible SPARQL query:

```sparql
SELECT ?person
WHERE {
  ?person a :Person ;
            rdfs:label ?name ;
            dbpprop:role ""The Shadow"" .
  ?person rdfs:label ""Frédéric Bouraly"" .
}
```

This query selects individuals (`?person`) who have the label `Frédéric Bouraly` and also have the role `The Shadow`. The `rdfs:label` property is used to match names, and `dbpprop:role` is used to capture the alter ego.",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?band_name WHERE {
  ?band_name ns:name ""Kim Wilson"" .
  ?band_name rdfs:type [ rdf:type owl:Class ; rdfs:label 'Band' ] .
}",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","To find the awardee of 2023, we can use the DBpedia dataset which contains information about awards and their recipients. A SPARQL query could look like this:

```sparql
PREFIX award: <http://dbpedia.org/ontology/Award>
PREFIX person: <http://dbpedia.org/ontology/Person>

SELECT ?awardee
WHERE {
  ?award a award:Award ;
            awardYear 2023 .
  ?awardee a person:Person ;
           award:recipientOf ?award .
}
```

This query selects the `awardee` of awards with an `awardYear` of 2023, assuming that the `awardYear` property indicates the year in which the award was given.",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child rdfs:father [ owl:sameAs ?francisI ] .
  ?francisI a ns:dukeOfLorraine .
}",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","SELECT ?producer WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia:productionCompany ?producer .
  ?actor dbpprop:portraysCharacterIn ?character .
  ?character a dbpedia: FictionalCharacter .
  ?actor rdfs:label ""Kent Allard""@en .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"The SPARQL query will need to:
1. Identify movies that are works of art.
2. Check if the director or any key crew member (such as producer, writer) is associated with Los Angeles.
3. Link these movies back to the actors involved and confirm their place of residence/death.

Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?movie a dbo:Film;
    dbo:director [dbo:hasLocation ""Los Angeles, California""].
  ?actor a dbo:Person;
    rdfs:label ?actorLabel;
    dbo:residence [dbo:locatedIn ""Los Angeles, California""] .
  ?movie rdf:type dbo:Work.
  ?actor dbo:roleIn ?movie .
}
```

This query does the following:
- Selects actors (`?actor`) from movies (`?movie`) that are classified as works (`?movie a dbo:Film; dbo:director [dbo:hasLocation ""Los Angeles, California""]`).
- Ensures that the movie is associated with Los Angeles through its director.
- Checks that the actor has a residence in Los Angeles (`?actor dbo:residence [dbo:locatedIn ""Los Angeles, California""]`).
- Links the actor to their role in the movie (`?actor dbo:roleIn ?movie`).",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"SELECT ?successor WHERE {
  ?commander ns:officeHolder ?office .
  ?commander ns:politicalAffiliation ?politicalParty .
  ?commander foaf:name ""Michał Kazimierz Pac"" .
  ?conflict a dbo:MilitaryConflict .
  ?conflict rdfs:label ""Warsaw Uprising"" .
  ?successor ns:officeHolder ?office2 .
  ?successor ns:politicalAffiliation ?politicalParty2 .
  FILTER (xsd:date(?conflict) > xsd:date(""1944-08-01""))  # Warsaw Uprising started on August 1, 1944
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"SELECT ?residence WHERE {
  ?person a dbpedia:Person;
  dbpedia:nationality ?nationality;
  ?war a dbpedia:Conflict;
  dbpedia:participatedIn ?war
} 
WHERE {
  ?person rdfs:label ""Dawid Olejniczak""@pl
  ?war rdfs:label ""War of Alexander Suvorov""@en
}
AND ?nationality = ""Poland""",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"SELECT ?manager
WHERE {
  ?manager a dbpedia-owl:FootballManager ;
           dbpedia2:club Hartlepool United F.C. ;
           foaf:givenName ?first_name ;
           foaf:familyName ?last_name .
  OPTIONAL { ?manager rdfs:label ?birthplace }
  FILTER (lang(?birthplace) = ""en"")  # Assuming English language for simplicity
  AND ?birthplace str_detect(""Bristol"")
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Musician .
  ?person rdfs:label ""Pacely"" .
  ?person foaf:name ?name .
  ?musicalArtist a dbpedia:MusicalArtist .
  ?person dbpprop:musicalArtist ?musicalArtist .
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","SELECT ?royalty
WHERE {
  ?royalty a dbpedia:Person ;
            dbpedia:parent ?charles_martel_of_anjou ;
            dbpedia:child[1] ?grandchild .
  ?grandchild a dbpedia:Person ;
           dbpedia:parent ?spouse_of_stephen_iv_father ;
           dbpedia:child ?charles_martel_of_anjou .
  ?charles_martel_of_anjou a dbpedia:Royalty
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"SELECT ?war WHERE {
  ?congressional_moh_recipient a cm:MedalOfHonor_AwardedBy_US_Congress .
  ?gillmore_medal_recipient a mo:MedalOfHonor_Awarded_During_Civil_War .
  ?congressional_moh_recipient foaf:name ?moh_name .
  ?gillmore_medal_recipient foaf:name ?gillmore_name .
  ?congressional_moh_recipient wdt:P31 ?war_of_honor .
  ?gillmore_medal_recipient wdt:P31 ?civil_war
}
LIMIT 1",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"SELECT ?host WHERE {
  ?noblePrize a nobel:Prize ;
    nobel:category ""Physics"" ;
    nobel:awardedToOrganization ?host .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","SELECT ?royal WHERE {
  ?royal a :childOf :Wilhelm_Ernst.
  :Wilhelm_Ernst a :parentOf ?grandchild .
  ?grandchild a :royalty
}",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","SELECT ?bandmember ?realname WHERE {
    ?bandmember a dbpedia:Musician .
    ?bandmember dbpprop:birthDate ""1945-03-30"" .
    ?bandmember dbpprop:group dbpedia:The_Fabulous_Thunderbirds
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist
WHERE {
  ?person a dbpedia-owl:Musician ;
            rdfs:label ""James Plotkin""@en .
  ?person foaf:name ""James Plotkin"" .
  ?artist a dbpedia-owl:MusicalArtist .
  ?person rdf:type ?artist
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","SELECT ?place WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:deathPlace ?place .
  ?person rdfs:label ""Antonios Varthalitis""@en .
  ?war a dbpedia2:Conflict;
    dbpedia2:startYear 1919.
  ?war rdfs:label ""Greco-Turkish War (1919-1922)""@en .
  FILTER (?war rdf:type dbpedia2:WarOfTheAwardee)
}",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?spouse_name WHERE {
  ?actor rogerPryor <> ?spouse_name .
}

AND
SELECT ?birth_name ?party WHERE {
  ?person dbpedia-owl:birthName ?birth_name .
  ?person rdfs:memberOf [ a owl:PoliticalParty ; owl:name ""Republican Party (United States)"" ] .
  FILTER( ?person = annSothern )
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?governorLabel ?governorBirthPlace
WHERE {
  ?politician paulus.powell
  ?politician birthingPlace ?birthPlaceRegion
  ?governor a politi:Governor
  ?governor birthingPlace ?birthPlaceRegion
  ?birthPlaceRegion rdfs:label ?governorLabel
}",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","SELECT ?band
WHERE {
  ?person1 a dbpedia:Musician;
           dbpedia:associatedBand/artist ?band .
  ?person2 a dbpedia:Musician;
           dbpedia:associatedBand/artist ?band .
  ?person1 ns:name ""Rod Argent"" .
  ?person2 ns:givenName ""Darryl"" ;
            ns:familyName ""Paa Kwesi Bannerman-Martin"" ;
            ns:birthDate ""YYYY"" .
  ?band rdfs:label ?bandLabel .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"A SPARQL query to achieve this would involve querying DBpedia for the relevant information. Here's a structured approach:

1. Find the movie by searching for ""Indian movies"" and filtering by the actor Dipankar De.
2. Extract the birthplace from the actor's Wikipedia page.

Let's construct the SPARQL query accordingly:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?birthplace WHERE {
  ?actor a dbo:Actor ;
            rdfs:label ""Dipankar De""@en .
  ?actor dbpprop:actedInSomeMovie [
    a dbo:Film ;
    dbpprop:director ?director ;
    dbpprop:mainLanguage ""Indian languages""@en
  ] .
  ?director a dbo:Director ;
            rdfs:label ?directorLabel .
  FILTER (lang(?directorLabel) = ""en"")
}
```

This query searches for an actor named Dipankar De who acted in an Indian movie directed by someone whose language is English. It then retrieves the birthplace of this actor.",3,5,4,3,1,3,2,20,0,0,13,0,0.0,0
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Albrecht, Duke of Württemberg"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"The SPARQL query would involve querying the DBpedia dataset for the specific university. Here is an example of how the query might look:

```
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingDate
WHERE {
  ?university a dbpedia-owl:University ;
               dbpedia-owl:established ?foundingDate .
  ?university rdfs:label ""Federal University of Paraíba""@pt.
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","The SPARQL query will look for a person (identified by their `foaf:givenName` or similar property) who is an artist (`mwe:role`) and is located in the Central Region of Ghana (`gbv:isPartOf`). Here's how the query would be structured:

```sparql
SELECT ?name 
WHERE {
  ?artist a mwe:Role .
  ?artist rdfs:label ?name .
  ?artist gbv:isPartOf <http://dbpedia.org/ontology/Region> [ a gnv:AdministrativeDivision ; rdfs:label ""Central Region"" ] .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?commander ?show ?event WHERE {
  ?commander ns:commandedIn ""2009-10-06""^^xsd:date ; dbpedia-owl:role ""Commander"" .
  ?commander rdfs:label ?name .
  ?show ns:hasEpisode ?episode WHERE { ?episode dc:title ?title }.
  ?event a dbo:SocietalEvent; dct:isPartOf ?show .
  ?commander foaf:name ?name .
  ?name match ""George Ducas"" .
  ?show rdfs:label ?showTitle .
  ?event rdfs:label ?eventTitle
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?child WHERE {
  ?predecessor a dbpedia-owl:Monarch .
  ?child a dbpedia:Royalty .
  ?predecessor parentOf ?child
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?child ?birthplace
WHERE {
  ?child a :Toyotomi_Hideyoshi_son .
  ?child rdfs:label ""Toyotomi Hideyori""@en .
  ?birthplace a :Location ;
               rdfs:label ""Kanagawa""@en .
  ?child ns:father ?birthplace
}",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"SELECT ?character ?politician 
WHERE {
  ?character a dbpedia:ComicsCharacter; dbpedia:alter_ego ""The Shadow"".
  ?politician a dbpedia:Politician; dbpedia:role_in_fictional_work ""Ab Kya Hoga?"".
  ?character rdfs:label ?char_label.
  ?politician foaf:name ?polit_name.
  ?char_label = ""The Shadow"" .
  ?polit_name IN ( ?actor_names )
}",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"SELECT ?commander
WHERE {
  ?commander a :CommanderInRussoPolishWar .
  ?commander a :PoliticianOrOfficeHolder .
  ?commander rdfs:label ?name .
  OPTIONAL { 
    ?commander rdfs:label ?warIILabel . 
    ?warIILabel a :GreatTurkishWarCommander
  }
}
LIMIT 1",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"SELECT ?office WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia2:office ?office .
  ?person rdfs:label ""Miguel Maura""@pt
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:conflict ?war .
  ?person rdfs:label ""George Pickett""@en .
}",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?parent a ns:Person ;
            ns:p fatherOf ?child .
  ?parent ns:m name ""Roger II of Sicily"" .
  ?child ns:m name ""William II of Sicily"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","SELECT ?father WHERE {
  ?emperor Baeda Maryam I.
  ?emperor a ns:http://www.wikidata.org/prop/direct/isFatherOf ?father .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","SELECT ?father ?child WHERE {
  ?person a dbpedia:Person;
  dbpedia:parentOf ?father;
  dbpedia:child ?child .
  ?child rdfs:label ""Dawit I""@en .
  ?father rdfs:label ""Baeda Maryam I""@en
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"SELECT ?predecessor
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasSpouse ?spouse_of_child ;
           dbpedia:hasParent ?parent_of_child .
  ?spouse_of_child a dbpedia:SawMinHla_siblings .
  ?parent_of_child a dbpedia:SawMinPhyu_siblings .
  ?child a dbpedia:Royalty .
  ?parent_of_child rdfs:precedesor ?predecessor
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","SELECT ?symbol WHERE {
  ?symbol rdfs:label ""The Triple X's""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"The SPARQL query to retrieve this information would be:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child WHERE {
  ?child a rdf:Property ;
            rdfs:label ""child"" .
  ?child father :SawMinHla .
  ?child mother :PersonSpouseOf_SawMinHla .
  SOME ?royaltyChild a rdf:Property ;
               rdfs:label ""royalty"" .
  ?child ?royaltyChild
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"SELECT ?childPred WHERE {
  ?child a dbpedia-owl:Child ;
            rdfs:father ?sawShweKhet .
  ?child rdfs:predicates ?relationWithPredecessor .
  ?relationWithPredecessor a dbpedia-owl:ParentOf
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"SELECT ?parent WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:genre dbpedia:Musical_Artist ;
            foaf:based_near dbpedia:London ;
            rdfs:label ""Vera Lynn""@en .
  ?movie a dbpedia:Film ;
         dbpedia:creator ?artist ;
         rdfs:label ""Work""@en .
  ?movie2 a dbpedia:Television_Series ;
          dbpedia:creator ?artist ;
          rdfs:label ""Television Show""@en .
  ?artist ns:parent ?parent .
}",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"The SPARQL query will involve:
1. Retrieving the list of candidates for the 2003 Madrid City Council election.
2. Identifying the winner among them.
3. Extracting their residential address (which may be stored in a property related to their personal information).

Given that DBpedia provides structured data about public figures and their roles, we can use its schema to construct the query.",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relevant entities and their relationships. Here's how we can structure it:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager
WHERE {
  ?player rdfs:label ""Thomas Letsch"" .
  ?player dbpedia:P31 wd:Q12263 . # Thomas Letsch is associated with the soccer player resource for himself
  ?team dbpedia:P31 wd:Q4124 . # VfL Bochum is associated with the soccer team resource
  ?team rdfs:label ""VfL Bochum"" .
  ?team dbpedia:season ""2007-08"" .
  ?manager a dbpedia:Manager; dbpedia:P29 ?team . # The manager of the team
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"SELECT ?person ?office WHERE {
  ?person a :OfficeHolder.
  ?person a :Politician.
  ?person rdfs:label ""Central African Republic Civil War"" .
  ?person foaf:name ?name
}
LIMIT 1",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","The SPARQL query will search for Bob Thompson's musician profile and then look for the band he is a member of. Here's how you might structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?artist rdf:type dbpedia-owl:Musician .
  ?artist rdfs:label ""Bob Thompson"" .
  ?artist dbpedia-owl:associatedBandOrArtist ?band .
  ?band a dbpedia-owl:Band
}
```

This query selects the label of the band (`?band_name`) associated with the musician `?artist` who is labeled as ""Bob Thompson"".",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"SELECT ?leader ?office WHERE {
    ?election 2009.
    ?candidate office ""Presidente da Xunta de Galicia"" .
    ?candidate party ?party .
    ?office ns:hasMember ?candidate .
    ?office rdfs:label ""Mayor of Santiago de Compostela""@es .
    ?party foaf:name ?leader .
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","SELECT ?x ?y ?relation 
WHERE {
  ?x rdf:type owl:Thing .
  ?x rdfs:label ""Child of Duke Philipp of Württemberg""@de.
  ?y rdf:type owl:Thing .
  ?y rdfs:label ""Child of Philipp Albrecht, Duke of Württemberg""@de.
  ?x foaf:child ?z .
  ?y foaf:child ?w .
  ?z a ns:Person; rdfs:label ""Duke Philipp's child""@en .
  ?w a ns:Person; rdfs:label ""Philipp Albrecht's child""@en .
  ?z owl:sameIndividualAs ?w
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"Given the complexity and the lack of a direct shared party affiliation between Gustavo Petro and Roy Barreras, constructing a precise SPARQL query that directly identifies ""the entity in Colombia and party of Gustavo Petro and party of Roy Barreras"" is challenging without additional context or a broader dataset that includes political movements or coalitions.

However, if we were to attempt a query based on their individual party memberships and assuming there might be some overlap or shared involvement in broader political contexts, it could look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity a dbo:PoliticalParty ;
            rdfs:label ""Colombian political party"" .
  ?entity rdf:type dbo:EntityInColombia .
  ?gustavo_petro a dbo:Person ;
             dbo:memberOf ?party_gustavo .
  ?roy_barreras a dbo:Person ;
               dbo:memberOf ?party_roy .
  ?party_gustavo rdfs:subClassOf ?party_colombia .
  ?party_roy rdfs:subClassOf ?party_colombia .
}
```

This query attempts to find a political party (`?entity`) in Colombia (`dbo:EntityInColombia`) that is a subclass of the classes representing Gustavo Petro's and Roy Barreras' parties. However, this query might not return a specific entity due to the lack of direct shared party membership between the two individuals.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?birthplace .
  ?birthplace a dbpedia-owl:Location ;
               geo:country ""Japan"" .
  ?person rdfs:label ""Chieko Asakawa""@en .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"SELECT ?father WHERE {
  ?child a dbpedia:Royalty;
  ?child rdfs:father ?father .
  ?child rdf:type dbpedia:Person ;
  ?child rdfs:label ""Maria Theresa of Austria"" .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","SELECT ?war WHERE {
  ?laureate nobelPeacePrizeAwardedTo ?year .
  ?year wdt:P31 wd:Q14866.
  ?war rdfs:label ""World War I"" . # Assuming World War I was the significant war around 1930
}",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"SELECT ?parentFather WHERE {
  ?child Martin of Aragon .
  ?parentParent ?parent .
  ?parentFather a :Royalty .
  ?parentParent ns:father ?parentFather
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","SELECT ?actor
WHERE {
  ?movieTitle ""ATL"" .
  ?movieTitle hasActor ?actor .
}",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"The SPARQL query will involve querying the DBpedia dataset to extract the required information. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?child a dbpedia-owl:Person ;
           dbpedia-owl:predecessorOf ?saw_shwe_khet .
  ?saw_shwe_khet a dbpedia-owl:OfficeHolder .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"SELECT ?manager_name
WHERE {
    ?club dbpedia:hasManager ?manager_name .
    ?club dbpedia:season ""2006-07"" .
    ?club dbpedia:isPartOf dbpedia:2006_07_Germany_football_championship .
    ?successor_club dbpedia:hasManager ?manager_name .
    ?successor_club dbpedia:season ""2006-07"" .
    ?successor_club dbpedia:isPartOf dbpedia:Deutscher_Fußball_Bundesliga_2006-07 .
    ?manager_name a dbo:Person .
}",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainCharacter ?alter_ego .
  ?actor rdfs:label ""The Shadow""@en .
  ?actor rdfs:label ""Shelby Oaks""@en .
  ?actor dbpprop:roleInMovie ?movie
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?place WHERE {
  ?recipient a ns:Person ; ns:male ?gender .
  ?recipient ns:birthPlace ?place .
  ?place ns:isSettlement true .
  FILTER (lang(?place) = ""en"") .
  ?recipient ns:nationality ns:United_States_of_America .
  ?recipient ns:awarded ?award .
  ?award a ns:Award
}",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:birthPlace ""Middlesex"" .
  ?person rdfs:fatherOf ?child .
  ?child a dbpedia-owl:Person ; 
           rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:Musician .
  ?artist rdfs:label ""Bobby Shmurda""@en .
  ?bandMember a dbpedia:BandMember .
  ?bandMember a foaf:Person .
  ?artist dbo:birthName ""Ackquille Jean Pollard""@en .
  ?artist dbo:nativeRegion ""Florida"" .
  ?bandMember rdf:type ?bandType .
  FILTER (lang(?bandMember) = ""en"")
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"SELECT ?university ?foundationDate
WHERE {
  ?university a dbpedia-owl:University ;
               dbpedia2:founder ""Luiza Erundina"" .
  ?university a dbpedia-owl:University ;
               dbpedia2:founder ""Eleonora Menicucci"" .
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?locationLabel ?artistLabel ?parentArtistLabel
WHERE {
  ?location rdf:type dbpprop:Settlement .
  ?location rdfs:label ""English"" .
  ?artist rdf:type dbpprop:MusicalArtist .
  ?artist rdfs:label ?artistLabel .
  ?artist dbpprop:hasParent ?parentArtist .
  ?parentArtist rdf:type dbpprop:Artist .
}",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?leader
WHERE {
  ?election 2003 .
  ?electedOfficeHolder dbpedia-owl:officeHolderOfElection ?election .
  ?candidate dbpedia:memberOf dbpedia:Madrid_City_Council_@2003 .
  ?candidate rdfs:label ?name .
  ?name ns:prefLabel ""Madrid City Council election, 2003"" .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"1. For the Virginia governor:
   ```sparql
   SELECT ?governorLabel ?birthPlace WHERE {
       ?governor a dbpedia-owl:Politician; dbpprop:office ""Governor of Virginia"" .
       ?governor foaf:name ?governorLabel .
       ?governor dbpprop:birthPlace ?birthPlace
   }
   ```

2. For the awardee(s) of awards received by Vince Gilligan:
   ```sparql
   SELECT ?awardLabel ?awardeeName ?awardeeBirthPlace WHERE {
       ?awardee a dbpedia-owl:Person; foaf:name ?awardeeName .
       ?awardee dbpprop:hasAward ?award .
       ?award rdfs:label ?awardLabel .
       OPTIONAL { ?awardee dbpprop:birthPlace ?awardeeBirthPlace }
   }
   ```

3. For Cece Bell:
   ```sparql
   SELECT ?name ?birthPlace WHERE {
       ?person a dbpedia-owl:Person; foaf:name ?name .
       ?person dbpprop:birthPlace ?birthPlace
   }
   ```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person .
  ?person geo:locatedIn dbpedia:Melbourne .
  ?person rdfs:label ?name .
  OPTIONAL { 
    ?event dbpprop:deathDate ?date . 
    ?event a dbpprop:Event .
  }
  FILTER (lang(?name) = ""en"" )
}",1,1,2,1,1,2,2,9,0,0,809,0,0.0,0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","SELECT ?manager_name ?team_name ?season WHERE {
    ?manager a dbpedia:SportsManager;
        dbpprop:birthDate ""1968-08-26"" .
    ?manager ns:adminRole dbpedia:Germany .
    ?manager rdfs:label ?manager_name .
    ?team dbpprop:hasSeason ?season ;
        rdfs:label ?team_name .
    ?season a dbpedia:SoccerSeason .
    ?team ns:instanceOf ?season .
    FILTER (lang(?manager_name) = ""en"")  # Assuming English language for simplicity
}",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","SELECT ?producer WHERE {
  ?film a :Film ;
    dc:creator ?producer .
  ?fictional_character a :Character ;
    rdfs:label ""Kent Allard (print)"" .
  ?film rdf:type <http://dbpedia.org/ontology/Film> .
  ?fictional_character rdf:type <http://dbpedia.org/ontology/FictionalCharacter>
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query will look for the `birthPlace` property of each individual:

```sparql
SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?birthPlace .
}
```

This query selects the `person` and their corresponding `birthPlace` from the DBpedia dataset where the person is classified as a `Person` and has a `birthPlace`.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","SELECT ?tenant WHERE {
    ?party psoe.
    ?leader office ""2009 Galician regional election"" .
    ?party tenancy ?tenancy_in_spain .
    ?tenancy_in_spain hasTenant ?spanish_tenant
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"SELECT ?parent WHERE {
  ?charles I hun:monarchOf ""King of Hungary"" .
  ?charles rdfs:father ?parent .
  ?parent a dbo:Monarchy_Rank .
  ?parent dbo:hasParent ""Charles IV, Holy Roman Emperor"" .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?writer ?commander
WHERE {
  ?song ""Always the Love Songs"" .
  ?war ""Great Turkish War"".
  ?commander a dbpedia:Warrior.
  ?writer foaf:name ?writerName .
  ?commander rdfs:label ?commanderLabel .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","The SPARQL query to achieve these steps would be:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember1 ?bandMember2 
WHERE {
  ?artist1 a dbpedia-owl:MusicArtist ;
            rdfs:label ""David Paton""@en .
  ?associated_artist a dbpedia-owl:MusicArtist ;
                    rdfs:label ?associated_artist_label .
  ?artist1 rdfs:member ?bandMember1 .
  ?associated_artist rdfs:member ?bandMember2 .
  ?associated_artist rdfs:label ""Stuart McBeath Tosh""@en .
}
```

This query does the following:
- Selects the band members (`?bandMember1` and `?bandMember2`) of the artist associated with David Paton (`?artist1`).
- Ensures that the associated artist (`?associated_artist`) is a music artist.
- Filters for the artist labeled as ""Stuart McBeath Tosh"" to ensure consistency with the second part of the question.",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"The SPARQL query will involve selecting the appropriate resources for Richard Dix and Carolyn Jones, then querying for their `deathPlace` property. Here's how the query would look:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor ?actorLabel ?actorDeathPlace
WHERE {
  ?actor a dbpedia:Person;
         dbpedia:hasDeathPlace ?deathPlace .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"")  # Only consider English labels
}
```

This query will return the label and death place of each person in English.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"The SPARQL query would need to:
1. Retrieve the individuals associated with Alfonso IV of Aragon.
2. Filter for those who are his children.
3. Check if any of these children were recognized as royalty (e.g., through titles or positions).

A possible SPARQL query could be:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name WHERE {
  ?child a rdf:Property ;
            rdfs:label ""child"" .
  ?alfonso_iv_of_aragon a foaf:Person ;
                        foaf:name ""Alfonso IV of Aragon"" .
  ?child rdf:type [a owl:Class; rdfs:label ""royalty""] .
  ?alfonso_iv_of_aragon bro:sibling ?child .
}
```

This query looks for individuals (`?child`) who are siblings of Alfonso IV of Aragon (`?alfonso_iv_of_aragon`) and are labeled as royalty (`[a owl:Class; rdfs:label ""royalty""]`).",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","SELECT ?awardee ?award
WHERE {
  ?awardee a dbpedia-owl:Person ;
            dbpprop:age 30 .
  ?awardee rdfs:receives ?award .
}",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?royalty_spouse ?child_of_min_hla_htut ?saw_shwe_khet_child
WHERE {
  ?myat_hpone_pyo father ?father.
  ?father spous ?royalty_spouse.
  ?royalty_spouse a royalty .
  
  ?min_hla_htut parent ?parent.
  ?parent child ?child_of_min_hla_htut .

  ?saw_shwe_khet a person; child ?saw_shwe_khet_child .
}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","SELECT ?admin WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@es .
  ?officeHolder foaf:name ""Alberto Núñez Feijóo"" .
  ?officeHolder ps:secretaryGeneral ?timePeriod .
  ?admin a dbo:Government_of_Spain .
  ?officeHolder ps:officeStarts ?timePeriod
}
LIMIT 1",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","SELECT ?location ?timezone
WHERE {
  ?location rdfs:label ""Mitaka""@en .
  ?location geo:Coordinates ?coordinates .
  ?coordinates a geo:Point .
  ?timezone rdfs:label ""Japan Standard Time"" .
  ?location wdt:P31 ?timezone
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"SELECT ?player ?nickname 
WHERE {
  ?player a dbpedia:Player .
  ?player rdfs:label ?nickname .
  ?player dbpprop:club some [ dbpprop:name ?soccer_club ] .
  ?player dbpprop:teammate Denis_Kolodin .
  ?player dbpprop:teammate Aleksandr_Filimonov
}",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?person WHERE {
  ?person a ns:Person ;
            rdfs:label ""Edward George Geoffrey Smith Stanley""@en .
}",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?person ?role_in_war ?maura_office WHERE {
    ?person a :OfficeHolder; rdfs:label ?office_holder_label .
    ?person a :Politician; foaf:name ?person_name .
    ?person rdfs:seeAlso <http://dbpedia.org/ontology/PoliticalOfficer> .
    ?person ns:inDataset <http://dbpedia.org/ontology/> .
    OPTIONAL { 
        ?person ns:hasRole ?role_in_war . 
    }
    FILTER (lang(?office_holder_label) = ""en"") .
    ?mauraOffice a :Office; rdfs:label ?maura_office_label .
    ?mauraOffice ns:instanceOf <http://dbpedia.org/ontology/Organization> .
    ?person ns:hasOffice ?mauraOffice .
    ?mauraOffice ns:hasName ""Miguel Maura"" .
}
LIMIT 1",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","SELECT ?manager
WHERE {
  ?club a dbpedia-owl:SportsClub ;
           dbpprop:sportsManager ?manager .
  ?team a dbpedia-owl:SoccerTeam ;
          dbpprop:manager ?manager .
  ?team rdfs:label ""Hong Kong C"" .
}",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","SELECT ?child WHERE {
    ?child a :politician .
    ?child ns:father ?parent .
    ?parent a :Person ;
           ns:givenName ""Frederick Stanley, 16th Earl of Derby"" ;
           ns:title ""Earl of Derby"" .
    ?child ns:givenName ""Victor Stanley"" .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","SELECT ?wife
WHERE {
  ?father a ns:http://www.w3.org/2002/07/owl#Person ;
           ns:name ""Antoine, Duke of Lorraine"" .
  ?mother a ns:http://www.w3.org/2002/07/owl#Person ;
            ns:name ""Renée de Bourbon"" .
  ?father ns:parentOf ?child .
  ?child a ns:http://www.w3.org/2002/07/owl#Person ;
             ns:name ""Francis I, Duke of Lorraine"" .
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasFather dbpedia:Chiang_Ching-Kuo ;
            dbpedia2:birthDate ?birthdate .
}
LIMIT 1",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"SELECT ?person WHERE {
  ?person a :CommanderInWar.
  ?person a :DiseaseOrSocietalEvent .
  ?person ns:spouse ?wife .
  ?wife rdf:type :HillaryClinton .
  ?person rdfs:author ""Back to Work"" .
  ?person owc:owns USS_Arcadia_ID_1605
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?work ?author WHERE {
  ?work rdfs:label ""It Takes a Village""@en .
  ?work dcterms:isPartOf <http://purl.org/dc/elements/1.1/> ""Book"" .
  ?work dc:subject <http://dbpedia.org/ontology/politician> .
  ?author foaf:name ""Hillary Clinton"" .
  ?author rdfs:label ""Bill Clinton""@en .
  ?author a dbpprop:U.S._Navy_officer .
  ?work rdfs:subPropertyOf <http://dbpedia.org/ontology/written_work> .
  ?work rdfs:subClassOf <http://dbpedia.org/ontology/book> .
}",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist_name ?birth_name
WHERE {
  ?song ""Pacely"" .
  ?song musicalArtist ?artist_name .
  ?person foaf:name ?birth_name .
  ?person rdfs:label ""Joey B""@en
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:spouse [ dbpedia2:hasName ""Bill Clinton"" ] ;
            dbpedia2:authorOfBook ""Back to Work"" .
  ?person rdfs:label ?name .
  ?person foaf:commanderIn ""Third Taiwan Strait Crisis"" .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"SELECT ?leaderResidence WHERE {
  ?leader a ns:people.person;
    ns:givenName ?first_name;
    ns:familyName ?last_name;
    ns:nationality ns:uk.
  ?party a ns:organization;
    ns:name ""Ulster Unionist Party"".
  ?leader ns:membersOf ?party.
  ?leaderResidence a ns:location.
}",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?parent WHERE {
  ?child Ladislaus I of Hungary.
  ?childFather Stephen V of Hungary.
  ?parentParentOf ?childFather.
  ?parent a :Royalty .
  ?parentFather Charles of Anjou.
  ?parentMother Beatrice d'Este.
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?name WHERE {
  ?band ""The Fabulous Thunderbirds"" .
  ?bandMember ?name .
  ?bandMember ns:performer/ns:performances [ ns:hasArtistName ""Nick Curran"" ] .
  ?bandMember rdf:type dbo:Musician
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?player
WHERE {
    ?person a dbpedia:Athlete .
    ?person dbo:birthDate ""1955-02-22"" .
    ?player rdfs:label ?playerLabel .
    ?player rdfs:label ""Sergio Agüero"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace WHERE {
  ?player ns:firstName ""Sandro"" .
  ?player ns:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""it"")  # Ensure the country label is in Italian
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","SELECT ?commander
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:conflict dbpedia:Seven_Years_War ;
            dbpedia:role dbpedia:military_role ;
            dbpedia:participatedInEvent dbpedia:Event_of_Battle_of_Fort_Royal .
}
LIMIT 1",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"The SPARQL query will involve:
1. Finding the band associated with Nate Newton.
2. Extracting the organization details (such as the name and possibly the URL) of that band.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?organizationName ?organizationURL
WHERE {
  ?nateNewton a dbpedia:Musician ;
               dbpedia:isMemberOf ?band .
  ?band a dbpedia:Band ;
          rdfs:label ?bandName .
  ?band rdfs:seeAlso ?bandPage .
  ?bandPage a dbpedia:MusicArtistOrganization ;
            rdfs:label ?organizationName ;
            rdfs:comment ?organizationURL .
}
```

This query does the following:
- It finds all musicians (`?nateNewton`) who are members of bands (`?band`).
- It selects the band name (`?bandName`) from those bands.
- It uses the `rdfs:seeAlso` property to find the page for the band, which is assumed to be an organization (`?bandPage`).
- It then extracts the organization name (`?organizationName`) and optionally the comment which might contain the URL (`?organizationURL`) from that band's page.",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?alumnus a dbpedia-owl:Alumnus ;
            dbpedia2:universityMember dbpedia:Plovdiv University ""Paisii Hilendarski"" .
  ?alumnus foaf:birthplace ?birthplace .
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"SELECT ?parent WHERE {
  ?child1 a dbpedia-owl:Royalty ;
            dbpedia2:hasParent ?parent .
  ?child2 a dbpedia-owl:Person ;
            dbpedia2:hasParent ?parent .
  ?child1 ns:father ?faisal .
  ?child2 ns:father ?omar
}
WHERE {
  ?parent a dbpedia-owl:Person
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Bob Thompson"" .
  ?person foaf:name ""The Shadow""@en .
  ?person dbpprop:birthName ?birthName .
  ?character a dbpedia:FictionalCharacter .
  ?character rdfs:label ""Walter B. Gibson""@en .
  ?character dc:title ""The Shadow""@en .
  ?band rdfs:label ?bandLabel .
  ?person rdfs:seeAlso ?character .
}",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?commander WHERE {
  ?commander a ns:people.person;
  ns:givenName ""George"";
  ns:militaryBranch ""Army"";
  ns:conflict ""Great Turkish War"";
  ?commander ns:deathDate [ ns:yearInRange ""1638"" ].
  OPTIONAL { ?commander ns:successor ?successor }
}
AND {
  ?commander ns:givenName ""George"" .
  ?commander ns:militaryBranch ""General"" .
  ?commander ns:conflict ""Great Turkish War"" .
  ?commander ns:deathDate [ ns:yearInRange ""1638"" ].
  OPTIONAL { ?commander ns:reference ""Mustafa Pasha"" }
}
ORDER BY DESC(?commander/ns:militaryRank)",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?awardee ?birth_place WHERE {
  ?awardee ns:award ""Golden Sword for Bravery"" .
  ?awardee rdfs:label ?awardee_label .
  ?birth_place ns:locatedIn ?place .
  ?place rdfs:label ?place_label .
  ?awardeeLabel strlang:match ""Elena Žalinkevičaitė-Petrauskienė"" .
  ?placeLabel strlang:match ""Šilutė""
}",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"SELECT ?war WHERE {
  ?war a :disease .
  ?war a :societal_event .
  ?arcadia owner [ ns:navyShipID ""1605"" ] .
  ?arcadia a ns:ship .
  ?war rdfs:label ""Black Death"" .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?child Victor Stanley .
  ?child a ns:people.person .
  ?child ns:hasParent ?parent .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"SELECT ?residence WHERE { ?person ns:name ""David Luckman"" . ?person rdfs:seeAlso ?info . ?info a dbpedia-owl:Person . ?info dbo:residence ?residence }",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"SELECT ?country WHERE {
  ?electionLeader office ?office .
  ?office rdfs:label ""2009 Galician regional election"" .
  ?electionLeader citizenship [ owl:sharesPart ?spanishCitizen ] .
  ?spanishCitizen nationality ""Spanish"" .
  ?country <> ?office
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"SELECT ?person ?party
WHERE {
  ?person a dbpedia:Politician ;
            foaf:name ""Bruno Retailleau"" .
  ?person a dbpedia:Politician ;
            foaf:name ""Patrice Martin-Lalande"" .
}
LIMIT 2",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"SELECT ?predecessor
WHERE {
  ?child1 a dbpedia:Person;
  dbpedia:hasParent ?parent1.
  ?parent1 a dbpedia:Person;
    dbpedia:hasChild ?child2.
  ?child2 a dbpedia:Person;
    dbpedia:hasParent ?grandparent.
  ?grandparent a dbpedia:Person;
    rdfs:label ""Minye Kyawswa"" .
  ?parent1 rdfs:label ""Saw Shwe Khet"" .
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"SELECT ?office WHERE {
  ?person a :Person.
  ?person rdfs:label ""Alberto Núñez Feijóo"".
  ?office a :Office.
  ?office p:POTENTIAL_APPOINTMENT_OF ?person.
  ?office rdfs:label ""President of Equatorial Guinea"" .
  ?quiroς a :Person.
  ?quiroς foaf:based_near [ a :Country ; rdfs:label ""Equatorial Guinea"" ] .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"SELECT ?father
WHERE {
  ?politician rdf:type dbpedia-owl:Politician .
  ?politician rdfs:label ""Arthur Stanley"" .
  ?politician foaf:father ?father .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?manager
WHERE {
    ?person a dbpedia:SportsManager;
        dbpprop:birthDate ""1968-08-26"".
    ?soccerClubSeason a dbpedia:FootballLeagueSeason;
        dbpprop:seasonStartDate ?start.
    ?sportsSeason a dbpedia:SportingEventSeason;
        dbpprop:start ""??start"" .
    ?teamSeason a dbpedia:SportsTeamSeason;
        dbpprop:start ""??start"".
    ?person rdfs:label ?manager .
    ?soccerClubSeason rdfs:member ?team .
    ?sportsSeason rdfs:member ?team .
}",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","SELECT ?territoryAdmin ?royaltyInfo
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1829-04-05"";
    rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en.
  ?person dbpedia:administration ?territoryAdmin.
  ?territoryAdmin a dbpedia:TerritoryAdmin.
  FILTER (lang(?person) = ""en"")
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","SELECT ?artist ?band_member WHERE {
  ?artist rdfs:label ""Emilia"" .
  ?artist ns:member ?band_member .
}",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"SELECT ?child
WHERE {
  ?parent a dbpedia-owl:Person ;
           dbpedia-owl:hasChild ?child .
  ?parent rdf:value ""Saw Min Hla"" .
}",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"SELECT ?child WHERE {
  ?child a :Person.
  ?child ns:father [ a :Parent; ns:hasChild ?child ].
  ?child ns:birthPlace ""New York, United States"".
  ?child ns:citizenship ""United States""
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor ?role WHERE {
  ?album ""Lasso the Moon"" .
  ?album a :MusicAlbum .
  ?actor rdfs:label ?actorLabel .
  ?actor a :Person .
  ?film ""Lasso the Moon"" .
  ?film a :Film .
  ?actor rdfs:label ?actorFilmLabel .
  ?actor a :Actor .
  OPTIONAL { ?actor :role ?role }
}",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"The SPARQL query would target the relevant RDF triples that link the Aston Martin AMR1 to its designer. Assuming the designer's name is available in DBpedia, a possible SPARQL query could be:

```sparql
SELECT ?designer
WHERE {
  ?car a dbpedia:Car ;
         dbpedia:manufacturer ""Aston Martin Limited"" ;
         dbpedia:model ""AMR1"" .
  ?designer rdfs:label ?name .
}
```

This query selects the label (name) of any resource that is both a car and specifically an AMR1 model manufactured by Aston Martin Limited.",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"The SPARQL query would need to:
1. Identify Saw Shwe Khet as the starting point.
2. Find his parents (to determine his father).
3. Check if his father is a royalty.
4. Identify any children of Saw Shwe Khet.
5. Verify if any of those children are also a royalty.
6. Finally, find the spouse of the identified father who meets these criteria.

Here's a conceptual SPARQL query that could be used:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?father_spouse
WHERE {
  ?child rdf:type <http://purl.org/dc/elements/1.1/royalty> .
  ?child rdf:type <http://purl.org/dc/elements/1.1/royalty> .
  ?swekParents a rdf:Property ;
               rdfs:domain ns:Person ;
               rdfs:range ns:Person .
  ?swekParents ?child .
  ?father rdf:type <http://purl.org/dc/elements/1.1/royalty> .
  ?father_spouse a rdf:Resource .
  ?father_spouse ?father .
}
```

This query assumes the existence of specific URIs for 'royalty' and person relationships in the dataset. Adjustments may be needed based on the actual schema used by DBpedia.",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","SELECT ?bandName ?realName WHERE {
    ?bandMember a dbpedia:Musician;
               dbpedia:birthDate ""1945-03-30"".
    ?bandMember rdfs:label ?bandName.
    ?bandMember foaf:name ?realName .
    FILTER (?bandName = ""The Fabulous Thunderbirds"") 
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"SELECT ?birthPlace ?region WHERE {
  ?governor a :politician .
  ?author a :person; foaf:name ""Heidi E. Larson"" .
  ?governorBornIn ?birthPlace .
  ?authorBornIn ?birthPlace2 .
  ?region a :region; rdfs:label ?regionLabel .
  ?birthPlace a :location; rdfs:label ?birthPlaceLabel .
  ?birthPlace geo:coordinates ?coordinates .
  ?birthPlace2 a :location; rdfs:label ?birthPlace2Label .
  ?birthPlace2 geo:coordinates ?coordinates2 .
  ?birthPlace ns:locatedIn ?region .
  ?birthPlace2 ns:locatedIn ?region2
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer 
WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?work rdfs:subject ?actor .
  ?producer rdfs:label ?producerLabel .
  ?producer foaf:progeny ?work .
  ?producer rdfs:label ""Max Steiner""@en .
  ?producer ns:filmProduced ""A Star Is Born (1937 film)"" .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"The SPARQL query will need to search for the concept of ""Dikhawa"" within DBpedia's ontology. Assuming ""Dikhawa"" refers to a specific episode, character, or theme in a TV show or movie, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?theme WHERE {
  ?subject a rdf:Resource .
  ?subject rdfs:label ""Dikhawa""@en .
  ?subject rdfs:comment ?comment .
  FILTER (lang(?comment) = ""en"")  # Filter for English comments
  ?comment rdfs:label ?theme .
}
```

This query searches for resources labeled ""Dikhawa"" in English and retrieves the label of the comment associated with those resources, which should provide the theme.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"To retrieve this information, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?author_name ?author_birthplace ?governor_name ?governor_birthplace ?region_name
WHERE {
  ?author rdf:type dbpedia:P31 . # Assuming the author is a person
  ?author dbo:birthPlace ?author_birthplace .
  ?politician rdf:type dbo:P41 . # Assuming the politician is a governor
  ?politician dbo:birthPlace ?governor_birthplace .
  ?region rdf:type dbo:Q262 . # Assuming the region is a administrative region
  ?region dbo:name ?region_name .
  ?author dbo:namedBy ?author_name .
  ?politician dbo:namedBy ?governor_name .
  ?author_birthplace geo:locatedIn ?region .
}
```

This query will:
- Find the author of ""El Deafo"" (assumed to be a person, `?author`).
- Determine their birth place (`?author_birthplace`).
- Identify a governor (politician, `?politician`) from the same birth place.
- Retrieve the name of the region where Paulus Powell (assumed to be the person in question) was born (`?region_name`).",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person;
  dbpedia-owl:hasFather ?father;
  ?father a dbpedia-owl:Person;
  dbpedia-owl:hasParent ?parent
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?party ?person WHERE {
  ?roy barreras ns:memberOf ?party .
  ?daniel elahi galan ns:associatedWith ?person .
  ?party rdfs:label ""Spanish Socialist Workers' Party (PSOE)"" .
  ?person a dbo:Person
}",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"The SPARQL query would be designed to search for William Tennant within the context of Royal Navy officers and retrieve any associated numerical values that represent force or strength. Here's an example of how the query could be structured:

```sparql
SELECT ?force WHERE {
  ?person a ns:navyOfficer .
  ?person rdfs:label ""William Tennant""@en .
  ?person ns:P31 _:g1 .
  _:g1 a ns:Person ;
         ns:givenName ""William"" ;
         ns:surname ""Tennant"" ;
         ns:birthDate ""1778"" ;
         ns:deathDate ""1848"" .
}
```

This query looks for individuals (`?person`) who are classified as `navyOfficer`, have the label ""William Tennant"" in English, and are linked to a person resource with given name ""William"", surname ""Tennant"", birth date 1778, and death date 1848. The variable `?force` would be bound to any numerical value representing the force or strength associated with William Tennant.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?bandLabel ?bandURL ?isOrganization
WHERE {
  ?x a dbpedia-owl:Musician ;
      dbpprop:associatedBand/artist ?band .
  ?band rdfs:label ?bandLabel .
  ?band rdf:type dbpprop:MusicalArtist .
  ?band rdfs:label ?bandURL .
  ?band a dbpprop:Organization
}
WHERE { ?x ns:name ""Nate Newton"" }",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"SELECT ?person
WHERE {
  ?person a ns:peoplePerson .
  ?person ns:P31 dbo:hasCountryFinland .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""fi"" OR lang(?name) = ""sv"")  # Finnish or Swedish language
}",1,1,2,1,1,2,3,28,0,0,355,0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"SELECT ?predecessor
WHERE {
  ?child a dbpedia-owl:Child ;
            dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:spouse [ a dbpedia:Spouse ; dbpedia:hasSpouse ?spouse_of_saw_min_hla ] .
  ?spouse_of_saw_min_hla a dbpedia:Person ;
                       dbpedia:hasSpouse Saw Shwe Khet .
  ?child a dbpedia:Person ;
           dbpedia:hasParent Saw Min Phyu .
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?child ;
           dbpedia:isSpouseOf Saw Shwe Khet .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"The SPARQL query would involve selecting the children of the person with the identifier related to Alfonso IV of Aragon. Assuming Alfonso IV's identifier in DBpedia is `Q41298`, the query could be constructed as follows:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent rdf:type dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent owl:sameAs Q41298.
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?commander
WHERE {
  ?war the war ""American Civil War"".
  ?commander commanded ?war.
  ?commander rdfs:label ?name.
  ?name ns:prefLabel ""George Pickett"" .
}",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?bandMember
WHERE {
  ?musician a dbpedia:Musician .
  ?musician rdfs:label ""Nate Newton"" .
  ?musician dbpprop:associatedBand ?band .
  ?band a dbpedia:Band .
  ?band rdfs:label ""Drive Like Jehu"" .
  ?bandMember a dbpedia:Musician .
  ?bandMember rdf:type dbpedia:BandMember
}",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?actor ?team WHERE {
  ?film a :work ; 
  :role [ owl:hasRole ""Juan Carlos Molina (footballer)"" ] .
  ?actor a :Athlete ; 
  :sport ""soccer"" .
  ?film :director Manuel Huerga .
  ?pablo_aimar a :SoccerPlayer ; 
  :team ?team
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","SELECT ?child ?father WHERE {
    ?child a :politician .
    ?child ns:parent [ a ns:Person; ns:name ""Edward Stanley"" ] .
    ?child ns:child ?parent_of_child .
    ?parent_of_child a ns:Person; ns:name ""Frederick Stanley, 16th Earl of Derby"" .
    FILTER (xsd:date(?child) > xsd:date(""1851-01-01T00:00:00Z"")) .
    FILTER (xsd:date(?parent_of_child) < xsd:date(""1900-01-01T00:00:00Z""))
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","SELECT ?admin WHERE {
  ?party psoe.
  ?leader ten:tenantOf ?admin .
  ?leader foaf:name ""Álvaro Quirós"" .
  ?admin a nlp:Country
}",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?actor ?role1 ?alter_ego_profession
WHERE {
  ?actor rdfs:label ""Lead Actor of Dispatches from Elsewhere"" .
  ?actor foaf:name ?actorName .
  ?actor a dbo:Actor .
  ?role1 a dbo:ProfessionalRole .
  ?role1 rdfs:label ""Acting Profession"" .
  ?alter_ego_name a dbo:AlterEgoName .
  ?alter_ego_name rdfs:label ""The Shadow"" .
  ?alter_ego_profession a dbo:Profession .
  ?alter_ego_profession rdfs:label ""Crime Fighting/ Detective Work""
}
LIMIT 1",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"SELECT ?country WHERE {
  ?chancellor rdf:type dbpedia-owl:Chancellor_of_Germany.
  ?chancellor foaf:name ""Helmut Schmidt"".
  ?manager rdf:type dbpedia-owl:Manager.
  ?manager foaf:name ""Marco Rose"".
  ?manager ns:nationality ?country
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?successor WHERE {
  ?commander ns:commandedIn ""Russo-Polish_War_1654-1667"" .
  ?commander a ns:OfficeHolder .
  ?successor a ns:Person ;
           ns:office ?office ;
           ns:role ""politician"" .
  ?commander ns:successor ?successor .
  ?commander ns:participatedIn ""Great_Turkish_War"" .
  ?successor ns:hasName ""George Ducas""
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"SELECT ?producer WHERE {
  ?actor rdfs:label ""High Society Blues""@en .
  ?movie rdfs:title ""The Adventures of Tom Sawyer (1938 film)""@en .
  ?producer rdf:type foaf:Person .
  ?producer rdfs:label ?producerLabel .
  ?movie rdfs:producer ?producer .
  ?work rdfs:label ?workLabel .
  ?movie rdfs:isDefinedBy ?movieResource .
  ?work rdfs:isDefinedBy ?workResource .
  ?producer = ?movieResource .
  ?producer = ?workResource
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","A SPARQL query to retrieve this information from DBpedia would look like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?musical_artist
WHERE {
  ?album The Live Anthology.
  ?album dbo:performer [ rdf:type <> ].
  ?album dbo:composer [ rdf:type <> ].
  ?composerName ""Elorm Kabu Amenyah"".
  ?composerName rdfs:label ?composerLabel .
  ?musical_artist rdfs:label ?artistLabel .
  ?composerLabel STRING-LIKE ?artistLabel
}
```

This query selects the musical artist (`?musical_artist`) associated with the album ""The Live Anthology"" where the composer is Elorm Kabu Amenyah. It uses the DBpedia ontology to find the appropriate types for performer and composer, and then matches the label of the composer with the label of the musical artist.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?country WHERE {
    ?person a dbpedia:Person;
        dbpedia:birthPlace ?country.
    ?person rdfs:label ""Theodor Heuss""@de
}

SELECT ?manager WHERE {
    ?club a dbpedia:SportsClub;
        dbpedia:hasManager ?manager.
    ?club rdfs:label ""VfL Bochum""@de;
        dbpedia:sport ""Football (soccer)"" .
    ?club dbpedia:season 2007-08
}

SELECT ?manager WHERE {
    ?club a dbpedia:SportsClub;
        dbpedia:hasManager ?manager.
    ?club rdfs:label ""SBV Vitesse""@nl;
        dbpedia:sport ""Football (soccer)"" .
    ?club dbpedia:season 2020-21
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","The SPARQL query will involve:
1. Finding the individuals Amasa Tracy and Quincy Adams Gillmore.
2. Identifying any wars they were part of.
3. Determining the location where these events took place, specifically Charleston, South Carolina.

Here is the constructed SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?warLabel ?charlestonLocation
WHERE {
  ?tracy a dbo:Person ;
            dbo:partOfMilitaryConflict ?war .
  ?gillmore a dbo:Person ;
            dbo:partOfMilitaryConflict ?war .
  ?war rdfs:label ?warLabel .
  ?war dbr:location ?charlestonLocation .
  ?charlestonLocation rdf:type dbo:City .
  FILTER (lang(?charlestonLocation) = ""en"")  # Ensure the location is in English
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","SELECT ?author ?workTitle ?spouse
WHERE {
  ?work a dbpedia:Book .
  ?work rdfs:label ?workTitle .
  ?author dbpprop:isAuthorOf ?work .
  ?author dbpprop:isSpouseOf ?spouse .
  ?spouse a dbpprop:Politician .
  ?spouse dbpprop:residesIn dbpedia:Chappaqua, New York .
  ?author rdfs:label ""Hillary Clinton"" .
  ?spouse rdfs:label ""Bill Clinton"" .
}",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia2:birthPlace ?birthplace .
  OPTIONAL { ?person rdfs:label ""Ekaterina Zaharieva""@en . }
  OPTIONAL { ?person rdfs:label ""Sofia resident""@en . }
}",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?author WHERE {
  ?work a dbpedia-owl:WrittenWork ;
           dbpedia-owl:isBasedOnCreativeWork ?based_work ;
           dbpedia-owl:author ?author .
  ?author a dbpedia-owl:Person ;
          dbpprop:officeHolder ;
          dbpprop:residence [ geo:locatedIn dbpedia:Chappaqua, New York ] .
  ?work rdfs:label ""An Invitation to the White House""@en .
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?country WHERE {
  ?emperor Nicholas II of Russia .
  ?emperor adminstrativeDivision ?country
}",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","SELECT ?person ?band
WHERE {
  ?person a dbpedia-owl:MusicalArtist ;
            foaf:birthDate ""1945-03-30"" .
  ?person dbpphone:bandMemberOf ?band .
  ?band rdfs:label ?bandName .
  FILTER (STRSTARTS (?bandName, ""The Fabulous"")) 
}",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?parent WHERE {
  ?child a ns:people.person;
    ns:p31 ?person ;
    ns:militaryServiceMember ?militaryRole .
  ?parent a ns:people.person;
    ns:p father ?child ;
    ns:givenName ""George"" .
  ?person a ns:people.public_figure;
    ns:officeHolder ?office .
  ?office a ns:organization.institution;
    rdfs:label ""British Parliament"" .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"SELECT ?player
WHERE {
  ?work ""The First Glove"" .
  ?work rdfs:author ?player .
}",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"SELECT ?bandMember
WHERE {
  ?artist rdfs:label ""Max Cavalera""@en .
  ?bandMember a dbpprop:BandMember ;
              dbpprop:associatedWith ?artist .
  
  ?artist rdfs:label ""Chad Gray""@en .
  ?anotherBandMember a dbpprop:BandMember ;
                  dbpprop:associatedWith ?artist .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"SELECT ?band_name WHERE {
  ?band_name ns:member [ ns:name ""Kim Wilson"" ] .
  ?band_name ns:associatedWith [ ns:artist ""Nick Curran"" ] .
  SOME ?clapton_member IN ns:membersOf [ ns:band ?band_name ] .
  ?clapton_member ns:firstName ""Eric"" .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"SELECT ?person
WHERE {
  ?person a dbpedia:Monarch;
  dbpedia:hasParent ?grandparent.
  ?grandparent a dbpedia:Person;
  dbpedia:hasChild ?child_of_roger_ii;
  dbpedia:hasParent ?alfonso_vi_child.
  ?child_of_roger_ii a dbpedia:Person;
  dbpedia:hasParent ?roger_ii_of_sicily.
}
ORDER BY ?person",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"A SPARQL query to find relevant information about Amasa Tracy and Quincy Adams Gillmore from DBpedia would involve searching for these names within the dataset. Assuming that DBpedia has structured data about these individuals, their associated conflicts, or military engagements, the query might look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?conflict WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasMilitaryConflict ?conflict .
  ?conflict rdfs:label ""War of Amasa Tracy"" . 
  ?conflict rdfs:label ""Force of Quincy Adams Gillmore"" .
}
```

This query searches for individuals (`?person`) who have a military conflict (`?conflict`) labeled as both ""War of Amasa Tracy"" and ""Force of Quincy Adams Gillmore"".",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:nationality ?nationality .
  ?nationality rdfs:label ""Indian"" .
  ?person foaf:givenName ""Shobhna"" ;
            dbpedia2:birthPlace ?birthplace .
}",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"SELECT ?tenant
WHERE {
  ?tenant a :Country ;
            :name ""Spain"" ;
            :populationCount ?population .
  ?tenant rdfs:label ?label .
}",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"The SPARQL query would involve using the properties `predecessor`, `spouse`, and `child` to link the relevant individuals. Assuming these properties exist in the DBpedia ontology, the query might look something like this:

```sparql
SELECT ?person1 ?person2 ?relationship
WHERE {
  ?person1 rdfs:label ""Myat Hpone Pyo""@en .
  ?person2 rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?person1 ns:predecessor ?predecessor .
  ?predecessor a dbpedia-owl:Monarch .
  ?predecessor ns:spouse ?spouse .
  ?spouse a dbpedia-owl:Person .
  ?parent rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?parent ns:child ?child .
  ?child a dbpedia-owl:Person
}
```

This query looks for:
- `person1` (Myat Hpone Pyo) who has a predecessor (`?predecessor`) that is a monarch.
- The spouse (`?spouse`) of the predecessor of `person1`.
- A parent (`?parent`) of `person2` (Min Hla Htut of Pyakaung) who has a child (`?child`) that is `person2`.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","SELECT ?actor ?profession WHERE {
  ?actor rdfs:label ""Actor name from Dispatches from Elsewhere""@en .
  ?actor foaf:occupation ?profession .
  ?politician a dbo:Politician .
  ?politician dbo:occupation ?profession
}",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"The SPARQL query would look for the album details of ""Lotus"" by R.E.M., then extract the producer associated with that album. Here is a sample SPARQL query:

```sparql
SELECT ?producer 
WHERE {
  ?album a dbpedia-owl:MusicAlbum ;
            rdfs:label ""Lotus""@en .
  ?album dbo:recordLabel ?recordLabel .
  ?recordLabel dbo:producer ?producer .
}
```

This query searches for an album labeled ""Lotus"" in English and then looks for the producer associated with that album through its record label.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"SELECT ?child_name ?real_name WHERE {
  ?child_name a ns:Person ;
               rdfs:label ""Peter"" .
  ?child_name ns:father Alfonso IV of Aragon .
  ?child_name ns:realName ?real_name .
}",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"The following SPARQL query can be used to retrieve this information from DBpedia:

```sparql
SELECT ?deathPlace WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:conflict ""Greek War of Independence"";
    dbpprop:role ""Military Figure"" .
  ?person rdfs:label ?name.
  ?deathPlace a dbpedia-owl:Settlement;
    dbpprop:locatedIn ?location .
  ?person dcterms:isPartOf ?location .
  FILTER (regex(str(?name), ""Antonios|Napoleon|Konstantinos"")) }
```

This query looks for persons labeled with ""Antonios"", ""Napoleon"", or ""Konstantinos"" who were involved in the Greek War of Independence and finds their associated settlements.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","SELECT ?entity
WHERE {
  ?entity a dbpedia-owl:City .
  ?entity rdfs:label ""Charleston, South Carolina"" .
}",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child a ns:officeHolder .
  ?child rdfs:father ns:William_I
}",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","The SPARQL query will need to find a person who has the property `actor` and also has a role as a `director`. We can use the DBpedia dataset to construct this query. Here is the SPARQL query:

```sparql
SELECT ?person
WHERE {
  ?person a dbpedia-owl:Actor .
  ?person rdfs:label ?name .
  ?person dbpprop:role dbpprop:Director .
}
```

This query selects individuals (`?person`) who have the property `actor` and also have a label (`?name`) indicating their role as a director.",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","SELECT ?person ?band WHERE {
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person rdf:type dbpprop:Musician .
  ?person dbpprop:bandMemberOf ?band .
  ?band rdfs:label ""Uncle Murda""@en
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","The SPARQL query will need to retrieve information about the Dukes of Württemberg and specifically identify the predecessor of Carl (likely Carl Eugen, Duke of Württemberg, who was the last duke before the monarchy was abolished in 1918). We can use the DBpedia dataset which contains structured data about historical figures and their relationships.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
    ?duke dbpedia:title ""Carl, Duke of Württemberg"" .
    ?duke dbpedia:predecessor ?predecessor .
    ?predecessor rdfs:label ""Predecessor's Name""
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?artist
WHERE {
  ?person a dbpedia:Musician;
  dbpedia:name ""Nick Curran"";
  ?band rdfs:member ?person.
  ?band a dbpedia:MusicalArtist.
  ?person rdf:type dbpedia:Person.
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"SELECT ?father
WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia2:parent [ dbpedia2:hasChildNaPerson ?naod ] .
  ?person rdfs:label ""Na'od""@en .
}
LIMIT 1",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"The SPARQL query will search for Jamie T.'s profession in a knowledge base like DBpedia, which contains structured data about people and their professions. Here's the query:

```
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?profession
WHERE {
  ?person a dbpedia:Musician ;
            dbpedia:name ""Jamie T""@en .
}
```

This query selects the person (`?person`) and their profession (`?profession`) from DBpedia, where the person is identified as a Musician with the name ""Jamie T"" in English.",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","SELECT ?office WHERE {
  ?person a ns:Person ;
            ns:givenName ""Anxo"" ;
            ns:familyName ""Quintana"" ;
            ns:role [ ns:office ?office ] .
  ?office ns:instanceOf ns:Event .
  ?office ns:tenantOf [ a ns:Organization ; ns:name ""Spanish Socialist Workers' Party (PSOE)"" ] .
}",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","SELECT ?father
WHERE {
  ?person a dbpedia-owl:AlumnusOf edu:Eton_School ;
           dbppro:parentOf dbpedia:P131 ;  # Commander of the Royal Victorian Order awardee
           dbppro:childOf ?child .
  ?child a dbpedia-owl:Person;
           foaf:name ?name .
  ?person a dbpedia-owl:Politician .
  ?name rdfs:label ""Name of the child"" .  # Placeholder for actual child's name
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia:Person;
  dbpedia:P31 ?biography ;
  rdfs:label ?name .
  OPTIONAL { ?person ns:birthPlace ?birthPlace . }
}
AND
{
  ?awardee a dbpedia:Person;
  dbpedia:P31 ?award ;
  rdfs:label ?name .
  OPTIONAL { ?awardee ns:birthPlace ?birthPlace . }
}
AND
{
  ?author a dbpedia:Person;
  dbpedia:P31 ?work ;
  rdfs:label ?name .
  OPTIONAL { ?author ns:birthPlace ?birthPlace . }
}
WHERE {
  ?work a dbpedia:Book ;
  rdfs:title ""El Deafo"" .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?officeMiguel ?officeCommander
WHERE {
  ?event Angolan War of Independence.
  ?politician Manuel Pinto da Costa.
  ?officeHolder ?officeMiguel.
  ?officeRole ?officeCommander.
  ?officeHolder foaf:office ?officeMiguel.
  ?officeRole rdfs:label ""Commander"" .
  ?officeHolder rdf:type dbpedia-owl:OfficeHolder .
  ?officeRole a owl:OntologyTerm ;
               rdfs:label ""Military or Political Office"" .
  ?politician ns:office ?office.
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"SELECT ?father_name ?parent_names WHERE {
    ?politician a ns:peoplePerson.
    ?politician rdfs:label ""Arthur Stanley""@en.
    ?politician ns:hasFather ?father_name.
    ?navy_officer a ns:peoplePerson.
    ?navy_officer rdfs:label ""Victor Stanley""@en.
    ?navy_officer ns:hasParent ?parent_name1 .
    ?navy_officer ns:hasParent ?parent_name2 .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"A SPARQL query to find this information would involve querying a database like DBpedia, which contains structured data about people, including their familial relationships. Here's a sample SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name ?parent_name
WHERE {
  ?child rdf:type dbpedia-owl:Royalty .
  ?child rdf:father ?parent .
  ?parent rdfs:label ""Philip I of Castile""@en .
}
```

This query selects the name (`?child_name`) and the parent's name (`?parent_name`) for any child who is a royalty and whose father is Philip I of Castile.",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"The SPARQL query would look for individuals who are children of Saw Shwe Khet (`<PRESIDIO_ANONYMIZED_PERSON>`), and then filter those to find any who have a royal title or status. Here's how the query might be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child WHERE {
  ?child a rdf:Property ;
            rdfs:label ""child"" .
  ?child ns:parent [ ns:name ""Saw Shwe Khet"" ] .
  OPTIONAL { ?child ns:hasRole [ rdfs:label ""royalty"" ] }
}
```

This query selects all resources (`?child`) that are the child of Saw Shwe Khet (`ns:parent [ ns:name ""Saw Shwe Khet"" ]`). It then optionally filters for those children who have a role labeled as ""royalty"" (`OPTIONAL { ?child ns:hasRole [ rdfs:label ""royalty"" ] }`).",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","SELECT ?entity WHERE {
  ?entity a dbpedia-owl:Organization .
  ?entity rdfs:label ""Ottoman Empire"" .
  ?entity rdfs:subPropertyOf dbpedia:establishedInCountry ;
               dbpedia:orderEstablishedBy ""Order of the Medjidie"".
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"SELECT ?associated_artist
WHERE {
  ?member a dbpedia:Musician;
  dbpedia2:associatedBand ?band .
  ?band rdfs:label ""Khlyst (band)"" .
  ?associated_artist a dbpedia:MusicalArtist .
}",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?author ?commander_disease_event ?spouse_politician_office_holder
WHERE {
  ?author ns:author ""Steve Jobs"" .
  ?author wif:spouse ?spouse .
  ?spouse a :politician .
  ?spouse a :office_holder .
  OPTIONAL { ?commander_disease_event a :disease . }
  OPTIONAL { ?commander_disease_event a :societal_event . }
  FILTER ( ?author = ""Steve Jobs"" && ?spouse = ?spouse )
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?work WHERE {
  ?actor dbo:role ?role .
  ?role rdfs:label ""Johnny Doughboy"" .
  ?actor foaf:film ?work .
  ?work rdfs:label ""Rosemary's Baby""
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"SELECT ?commander
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:hasMilitaryRank ""Commander"" ;
            dbpedia:conflict ""War"" .
  ?commander rdfs:label ?name .
  ?name ns:prefLabel ""Bill Clinton"" .
  ?commander rdfs:isMemberOf dbpedia:Category:Diseases (OPTIONAL) .
  ?commander rdfs:isMemberOf dbpedia:Category:Societal_events (OPTIONAL) .
  ?commander owls:owns dbpedia:USS_Arcadia_(ID_1605) .
  ?author a dbpedia:Person ;
           dbpedia:hasWork ?work .
  ?work a dbpedia:Written_work , dbpedia:Book , dbpedia:Creative_work .
  ?author ns:prefLabel ""Bill Clinton"" .
  ?author owls:authors ?work
}
WHERE { ?commander != ?author }",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"To find the author of ""An Invitation to the White House"" who is both a politician and an office holder, we need to construct a SPARQL query that filters for these specific properties. Assuming the author's name is John F. Kennedy (as he was both a U.S. President, an office holder, and a politician), the SPARQL query would look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?author WHERE {
  ?book dbpedia-owl:isBasedOnWork [ rdf:type dbpedia:PBook ;
                                   dbpedia-owl:author ?author ] .
  ?author a dbpedia:Person;
          dbpedia-polyhedron:officeHolder ;
          dbpedia-ontology:politicalAffiliation ""United States Democratic Party"" .
  ?book rdfs:label ""An Invitation to the White House""@en .
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?actor ?musical_artist
WHERE {
  ?movie theMovie ""The Campus Queen"".
  ?movie hasActor ?actor .
  ?actor rdfs:label ""Cynthia Ikponmwenosa Morgan"" .
  ?movie hasMusicArtist ?musical_artist .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent ?royal_child WHERE {
  ?commander a :CommanderInSiegeOfMukha .
  ?commander a :Royalty .
  ?parent a :ParentOf ?commander .
  ?parent a :Royalty
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"A SPARQL query to DBpedia would need to search for the series by keywords related to the show. Assuming ""The Golden Master"" is a title within a larger franchise or has specific attributes like a creator or actors, we can construct a query as follows:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?title ?series WHERE {
  ?series a rdf:Property ;
    rdfs:label ""The Golden Master""@en .
  ?series rdfs:seeAlso [ dbpedia:hasCreator ""CreatorName""] .
  ?series rdfs:seeAlso [ dbpedia:hasActor ""ActorName""] .
}
```

This query looks for resources that have the label ""The Golden Master"" and then checks if these resources are related to a creator or actor through `rdfs:seeAlso` links. Replace `""CreatorName""` and `""ActorName""` with actual names if known.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"A SPARQL query to retrieve this information would need to be constructed based on available knowledge graphs and databases like DBpedia. However, since The Shadow is fictional and Baeda Maryam I is not widely documented in English-speaking resources, we might have to make some assumptions or simplify the query.

Assuming there's a real-world figure who could be analogous to The Shadow in terms of being an office holder and having a notable child:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?monarch WHERE {
  ?monarch a dbpedia-owl:OfficeHolder ;
             dbpedia-owl:hasChild [ dbpedia:parent ?childOfTheShadow ] .
  ?childOfTheShadow rdfs:label ""Baeda Maryam I""@en .
}
```

This query looks for a monarch (`?monarch`) who is an office holder (`a dbpedia-owl:OfficeHolder`) and has a child named Baeda Maryam I. The label of the child is specified to ensure we match the correct individual.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","The SPARQL query to retrieve this information would involve searching for the person's name along with keywords related to administration or governance. Here is a sample SPARQL query:

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?name ?administration WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ""Christian August Wilhelm Ferdinand"" .
  OPTIONAL { ?person dbpedia-owl:birthDate ?birthdate . }
  OPTIONAL { ?person rdfs:label ?description . }
  FILTER (regex(str(?description), 'Prince')) .
  ?person dbpedia-owl:administration ?admin .
}
```

This query searches for a person named ""Christian August Wilhelm Ferdinand"" (the birth name of Prince Christian of Schleswig-Holstein-Sonderburg-Beck) and retrieves any associated administrative information (`?admin`).",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"SELECT ?entity ?description WHERE {
  ?entity a dbpedia-owl:Person.
  ?entity rdfs:label ""Toyotomi Hidenaga""@ja.
  ?entity dbpprop:conflictIn ""Sengoku period"" .
}",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?work WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:hasClaimToFame ?claim .
  ?claim a dbpprop:WorkClaim .
  ?person rdfs:label ""Cora Sue Collins""@en .
  ?work a dbpprop:CreativeWork ;
          dbpprop:producer ?producer .
}
ORDER BY ?work",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"SELECT ?almaMater
WHERE {
  ?person a dbpedia:Politician;
    rdfs:label ""Eleonora Menicucci""@it.
  ?person foaf:name ""Eleonora Menicucci""@it.
  ?person dbo:almaMater ?almaMater.
}
LIMIT 1",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
           dbpedia-owl:birthDate ?birthDate .
  ?birthDate rdfs:label ""Koichirō""@ja.
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"The SPARQL query will look for a person named ""Marty Pollio"" and extract the date of birth from the relevant property (e.g., foaf:birthDate).

```sparql
SELECT ?birthday
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:name ""Marty Pollio"" ;
            foaf:birthDate ?birthday .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"SELECT ?childPred WHERE {
  ?child a dbpedia-owl:Child ;
            rdfs:label ""Saw Shwe Khet""@en .
  ?childPred a dbpedia-owl:PredecessorOf ;
          rdfs:label ""Predecessor of"" .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"SELECT ?spouse_of_skw ?child_smh_predecessor
WHERE {
    ?saw_shwe_khet a dbpedia-owl:Person ;
        dbpedia:hasSpouse ?spouse_of_skw .
    ?saw_min_hla a dbpedia:Person ;
        dbpedia:hasChild ?child_smh .
    ?child_smh_predecessor a dbpedia:Person ;
        dbpedia:parentOf ?child_smh .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"SELECT ?awardee ?award_name ?birthplace
WHERE {
  ?awardee rdfs:label ""Henry Clay Lewis""@en .
  ?awardee dc:subject [ a owl:Class ; rdfs:label ""literature"" ] .
  ?awardee gilmoreMedalAwarded ?award_name .
  ?birthplace a owl:Thing ;
               rdf:type owl:Settlement ;
               rdfs:label ""Birthplace""@en .
  ?birthplace geo:locatedIn [ a geo:SpatialThing ; rdfs:label ""America""@en ] .
}",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?producer
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ?producer ;
    dbpedia:actor Errol_Flynn .
  ?movie rdfs:label ""A Star Is Born (1937 film)"" .
  ?movie dbpedia:FilmYear 1937 .
  ?actor dbpedia:birthName ""Cora Sue Collins"" .
  ?actor rdfs:label ""Kent Allard"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"SELECT ?awardee
WHERE {
  ?award a sangeet-natak-akademi:award ;
         sangeet-natak-akademi:Fellowship ?awardee .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"SELECT ?awardee
WHERE {
  ?noble prizeWinner ns:awardCategory ""Physics"".
  ?noblePrizeWinner ns:hasAwardee ?awardee.
  ?awardee rdfs:label ?name.
  ?awardee ns:instanceOf dbo:NobelPrizeInPhysics.
}",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?wife
WHERE {
  ?actor dbpedia:name ""Jackie Cooper"".
  ?actor rdf:type dbpedia:Actor.
  ?actor foaf:spouse ?wife .
  ?wife rdfs:label ?wifeLabel .
  FILTER (lang(?wifeLabel) = ""en"")  # restrict to English labels
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"SELECT ?child
WHERE {
  ?alexander a dbpedia-owl:Person ;
            dbpedia2:hasChild ?child .
  ?child rdfs:label ""Child's Name"" . # Replace with actual property for child names
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"The SPARQL query will involve using the `dbpedia-owl` namespace to find the `birthPlace` of Shobhna Samarth and then determining the `country` of that place. Here's how the query would look:

```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?person dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace a dbpedia-owl:Location ;
                 dbpedia-owl:name ?name .
  ?name rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"")  # Assuming we want the English name
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"To achieve this, we will use a SPARQL query to extract the required information from DBpedia. Here's how we can structure our query:

1. Find Marcelo Sarmiento's birth date.
2. Identify soccer players and soccer managers born on that date.
3. Check which of these individuals played for Manchester City.

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?team 
WHERE {
  ?person a dbo:SoccerPlayer, dbo:SoccerManager;
    dbpprop:birthday ?birthday.
  ?birthday match (?sarmiento_birthday) .
  ?person dbpprop:role ?actorInMovie .
  ?person dbpprop:memberOf ?team .
  ?team rdfs:label ""Manchester City"" .
  FILTER (lang(?birthday) = ""en"")  # Assuming we want results in English
}
```

This query will:
- Find individuals who are both soccer players and soccer managers (`dbo:SoccerPlayer` and `dbo:SoccerManager`).
- Filter those who were born on Marcelo Sarmiento's birthday (`?birthday match ?sarmiento_birthday`).
- Identify the actor role (`dbpprop:role`) they played in ""All or Nothing: Manchester City"".
- Extract their team (`dbpprop:memberOf`).",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"SELECT ?person ?profession
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:occupation ?profession .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (regex(str(?name), ""Shatrughan Sinha"")) .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (regex(str(?name), ""The Shadow"")) .
  ?person rdfs:label ?character_name
}
ORDER BY ?profession",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?rulingPartyName ?birthName
WHERE {
  ?centralLouisiana RDFS::type [ owl:sameAs dbpedia:Central,_Louisiana ] .
  ?centralLouisiana rdfs:member ?rulingParty .
  ?rulingParty rdf:type dbpedia:PoliTI.
  OPTIONAL { ?annSothern dbpprop:birthName ?birthName }
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?entity WHERE {
  ?entity a dbpedia:Person .
  ?entity rdfs:label ""Doug Beattie"" .
  ?award a dbpedia:Award .
  ?award rdfs:name ""George H. Cameron Award""@en
}",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"The SPARQL query will need to find the `foaf:based_near` property of Doug Beattie, which indicates his residence. Here's how the query would look:

```sparql
SELECT ?residence
WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ""Doug Beattie"";
    foaf:based_near ?residence.
}
```

This query selects the `?residence` of the person named Doug Beattie.",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","SELECT ?alterEgo WHERE {
  ?character foaf:name ""Lamont Cranston"" .
  ?character rdfs:label ?characterLabel .
  ?alterEgo a dbo:Alter_EgoOf ; dbpprop:alters ?character .
  ?characterLabel rdfs:label ?characterLabel .
  FILTER (lang(?characterLabel) = ""en"") 
}",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"SELECT ?country WHERE {
  ?emperor rdf:type dbpedia-owl:Monarch .
  ?monarchName rdfs:label ""Nicholas II"" .
  ?emperor ns:nationality ?country .
  ?finland rdf:type dbpedia-owl:Grand_Duchy .
  ?finland ns:countryAdmins ?country
}",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","SELECT ?place WHERE {
  ?person a :Person;
    :name ""Alexander II"";
    :title ""Grand Duke of Finland"";
    :nativePlace ?place.
}
LIMIT 1",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"The SPARQL query to retrieve this information from DBpedia would involve querying for the parents and children relationships of these individuals. Assuming that DBpedia has structured data about these Ethiopian monarchs, we can construct a query like:

```sparql
SELECT ?child ?parent WHERE {
  ?child a dbpedia-owl:Monarch ;
            dbpedia2:father ?parent .
  ?parent a dbpedia-owl:Monarch ;
           dbpedia2:daughter ?child .
}
```

This query looks for nodes (`?child` and `?parent`) that are both monarchs (as inferred by the properties `dbpedia:Monarch` and `dbpedia2:father`/`dbpedia2:daughter`) and connects them through the appropriate familial relationships.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"SELECT ?bandMember WHERE {
  ?album a dbpedia:Album .
  ?album dbo:hasWriter ?writer .
  ?writer rdfs:label ""Filthy Friends"" .
  ?writer dbo:bandMember ?bandMember
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:awardedWith ?award .
  ?person rdfs:label ""Quincy Adams Gillmore"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"SELECT ?bandMember ?artistName WHERE {
  ?bandMember a ns:Musician; ns:role ""Band Member"" .
  ?bandMember ns:associatedWith ?stuartTosh .
  ?stuartTosh a ns:Musician; ns:role ""Associated Musical Artist"" .
  ?bandMember ns:associatedWith ?writer .
  ?writer a ns:Artist; ns:role ""Artist"" .
  ?writer ns:associatedWith [ ns:hasSoundtrack ""Wizards of Waverly Place (soundtrack)"" ] .
}",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","The SPARQL query will need to search for facts related to Alexander II and his role as the Grand Duke of Finland within the DBpedia knowledge base. Here's a possible SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?administration
WHERE {
  ?alexanderII a dbo:Monarch ;
                  dbo:reignsOver dbo:Finland .
  ?alexanderII rdfs:label ""Alexander II"" .
}
```

This query selects the `administration` of Alexander II, assuming that such information is encoded in the DBpedia ontology. It uses the `dbo:` namespace to look for facts about monarchs and their reigns over specific regions.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo
WHERE {
  ?person a dbpedia:Character ;
            dbpedia:hasAlterEgo ?alterEgo .
  ?person rdfs:label ""Walter B. Gibson""@en .
  ?alterEgo a dbpedia:FictionalCharacter .
}",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },SELECT ?person WHERE { ?person ns:birthPlace florida },1,1,2,1,1,3,3,71,0,0,971,0,0.0,0
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"SELECT ?manager
WHERE {
    ?player sportsClub ?club .
    ?club foaf:organization ?organization .
    ?organization rdfs:label ""VfL Bochum"" .
    ?player hasManager ?manager .
    ?manager ns:inLanguage ""de"" .
    ?manager ns:nationality ""DE""
}
LIMIT 1",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"SELECT ?entity
WHERE {
  ?entity a dbpedia-owl:City .
  ?entity rdfs:label ""Athens"" .
}",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?band ?award WHERE {
  ?band a dbpedia-owl:Band .
  ?band ns:location dbpedia:New_York .
  OPTIONAL { ?band rdfs:label ?award . }
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"SELECT ?actor WHERE {
  ?movie a dbpedia:Film .
  ?movieActor a dbpedia:CharacterInFilm .
  ?movieActor dbpprop:hasActor ?actor .
  ?actor foaf:spouse ?spouse .
  ?spouse a dbpedia:Person .
  ?spouse rdfs:label ""Janusz Kamiński"" .
  FILTER (fn:contains(?movieActor, ""Iliza Shlesinger"")) 
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?entity WHERE {
  ?entity a :MilitaryUnit.
  ?entity foaf:wasPartOfServingIn ?location .
  ?location geo:point ?charlestonPoint .
  ?general a n:Person;
    rdfs:label ""Quincy Adams Gillmore""@en;
    nao:hasAward ""Medal of Honor""@en .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","The SPARQL query will involve querying the DBpedia dataset for the relevant individuals and their relationships. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandchild WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia2:hasChild ?child .
  ?child a dbpedia-owl:Person ;
           dbpedia2:hasChild ?grandchild .
  ?grandchild a dbpedia-owl:Person;
             rdfs:label ""Carl, Duke of Württemberg""@de.
  FILTER (lang(?grandchild) = ""de"")  # Ensure we're looking at the right language
}
```

This query selects all grandchildren (`?grandchild`) of individuals who are parents (`?parent`) of someone who is a child (`?child`) of Albrecht, Duke of Württemberg. It then filters to find only those grandchildren who have the label ""Carl, Duke of Württemberg"" in German (lang(?grandchild) = ""de"").",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"The SPARQL query will look for songs (`foaf:track`) where there is a relationship indicating they are part of a musical work (`musicwork:partOf`). Here's the query:

```sparql
SELECT ?song 
WHERE {
  ?song a foaf:Track .
  ?song musicwork:partOf ?musicalWork .
  ?musicalWork a musicwork:MusicalWork .
  ?song rdfs:label ""T.I."" .
}
```

This query selects songs (`?song`) that are both tracks (`foaf:Track`) and part of a musical work (`musicwork:partOf`), where the song is labeled as being by T.I. (`rdfs:label ""T.I.""`).",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?successor WHERE {
  ?commander ns:role ""commander"" .
  ?commander a ns:Person ; rdfs:label ""Michał Kazimierz Pac""@pl .
  ?event a ns:Event ; rdfs:label ""Polish-Soviet War""@en .
  ?successor a ns:OfficeHolder; rdfs:label ?office_holder_label .
  ?successor ns:role ""politician"" .
  ?successor ns:role ""officeHolder"" .
  ?writer ns:author ""George Ducas""@en .
  ?commander ns:successor ?successor .
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"SELECT ?leaderResidence WHERE {
  ?politician George Savage.
  ?politician rdf:type :PoliticalOffice .
  :PoliticalPartyLeader foaf:residence ?leaderResidence
} 

Note: The ontology used here is hypothetical, as actual ontologies for political offices and party leaders in DBpedia may not exactly match this structure. The query assumes that there is a relationship between the politician and the office they hold, and then another relationship from the office to the party leader.",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?player ?manager ?club_season ?team_season ?sports_season 
WHERE {
    ?player rdfs:label ""VfL Bochum"" .
    ?player ns:season ""2006-07"" .
    ?manager ns:role ""manager"" . 
    ?club_season a ns:FootballLeagueSeason; ns:succeededBy ?successor .
    ?team_season a ns:SportsTeamSeason; ns:season ?successor .
    ?sports_season a ns:SportsSeason; ns:includes ?club_season ; ns:includes ?team_season .
}",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?territory WHERE {
  ?person a ns:Person ;
            ns:deathPlace ?place .
  ?place a ns:Location ;
           ns:isPartOf ?region .
  ?region a ns:TerritoryAdmin .
  ?person ns:hasRole [ ns:name ""Mayor of Duchy of Schleswig"" ] .
  ?region ns:administers ?person
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?parent WHERE {
  ?person a dbpedia:Person;
  dbpedia:hasParent ?parent;
  dbpedia:actor ?role_in_Judgment
}
WHERE {
  ?person rdfs:label ""Amy Arbus""@en;
  ?role_in_Judgment ""Judgment: The Trial of Julius and Ethel Rosenberg""@en
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"SELECT ?artist
WHERE {
  ?album ""The Live Anthology"".
  ?artist rdfs:label ?artistLabel .
  ?artist a dbppro:MusicalArtist .
  ?artist foaf:performerOf ?album.
}",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","SELECT ?subject WHERE { ?subject ns:name ""Afeez Oyetoro"" }",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?event ?tv_show
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasFather ?father;
    dbpedia:hasChild ?child.
  ?child a dbpedia:Event.
  ?child a dbpedia:TelevisionShow.
  ?father a dbpedia:MilitaryPerson;
    dbpedia:commanded ?regiment.
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)"" .
  ?person rdfs:label ""Cecilia Renata of Austria"" .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"SELECT ?band_name
WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en.
  ?band dbpprop:bandMember Kim_Wilson .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the entity ""Lamont Cranston"" and filtering results based on the media types ""radio"", ""film"", and ""television"". Here's how the query might look:

```sparql
SELECT ?subject ?property WHERE {
  ?subject a dbpedia-owl:Character .
  ?subject rdfs:label ""Lamont Cranston""@en .
  ?subject dct:isPartOf dcterms:medium ""radio"" .
  ?subject dct:isPartOf dcterms:medium ""film"" .
  ?subject dct:isPartOf dcterms:medium ""television"" .
}
```

This query selects the subjects (characters) labeled as ""Lamont Cranston"" and filters them to only include those that are part of media types ""radio"", ""film"", and ""television"".",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war ?commander WHERE {
  ?war a dbpedia-owl:Conflict;
    rdfs:label ""French Revolutionary Wars"".
  ?commander a dbpedia:Person;
    foaf:name ""Napoleon Bonaparte"".
  ?war ns:hasCombatant ?commander
}",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?place
WHERE {
  ?person1 a :GENERAL, :UNITED_STATES citizen ;
            :birthPlace ?place .
  ?person2 a :COLONEL, :UNITED_STATES citizen ;
            :birthPlace ?place .
  ?place a :SETTLEMENT .
  FILTER (lang(?person1) = ""en"" || lang(?person2) = ""en"")
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"SELECT ?father WHERE {
  ?spouse a dbpedia:Person;
  dbpedia:P31 wd:Q12263 .
  ?child1 a dbpedia:Person;
    dbpedia:P31 ?spouse ;
    dbpedia:P17 ?father .
  ?child2 a dbpedia:Person;
    dbpedia:P31 ?spouse ;
    dbpedia:P18 ?father .
  ?williamII a dbpedia:Person;
    dbpedia:P31 ?child2 .
  ?father a dbpedia:Person;
    dbpedia:P31 ?parentOfWilliamII
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","SELECT ?artist_name ?birth_name
WHERE {
  ?artist_name a dbpedia:Artist ;
               foaf:knows ?associated_person .
  ?associated_person a dbpedia:Person ;
                    rdfs:label ""Elorm Kabu Amenyah""@en .
  ?artist_name ns:regionDescription ""Central Region, Ghana"" .
  ?artist_name ns:musicalGenre ""Music of Ghana"" .
  ?artist_name rdfs:label ?birth_name
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","The appropriate SPARQL query would be:

```sparql
SELECT ?birthplace
WHERE {
  ?alumnus a dbo:Alumnus ;
             dbppro:university dbo:Пловдивски_университет_“_Паисий_Хилендарски” .
  ?alumnus dbo:birthPlace ?birthplace
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"The SPARQL query will look for a resource with the label ""Burnt by the Sun"" and check if it is classified as a musical artist (band), group, and organization. Here's how the query would be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?bandLabel ?bandType WHERE {
  ?bandLabel a rdf:Resource.
  ?bandLabel rdfs:label ""Burnt by the Sun""@en.
  OPTIONAL { ?bandLabel ns:instanceOf [ a owl:Class ; rdfs:label ""MusicBand""@en ] }
  OPTIONAL { ?bandLabel ns:instanceOf [ a owl:Class ; rdfs:label ""MusicalGroup""@en ] }
  OPTIONAL { ?bandLabel ns:instanceOf [ a owl:Class ; rdfs:label ""Organization""@en ] }
}
```

This query searches for resources labeled ""Burnt by the Sun"" and checks if they are instances of the classes MusicBand, MusicalGroup, or Organization.",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?player ?manager_2007-08 ?manager_2021_vitesse 
WHERE {
    ?player football:club ?vfl_bochum .
    ?vfl_bochum foaf:teamRoster [ owl:sameAs ?roster ] .
    ?roster member ?player .
    ?player rdfs:label ?player_name .
    
    ?manager_2007-08 a dbpedia-owl:FootballManager .
    ?manager_2007-08 rdfs:label ?manager_name_2007 .
    ?manager_2007-08 dbpprop:managedTeam ?vfl_bochum .

    ?manager_2021_vitesse a dbpedia-owl:FootballManager .
    ?manager_2021_vitesse rdfs:label ?manager_name_2021 .
    ?manager_2021_vitesse dbpprop:managedTeam ?team_vitesse .

    ?player_name ns:defoaf:based_near ns:Germany .
    ?manager_name_2007 ns:defoaf:based_near ns:Germany .
    ?manager_name_2021 ns:defoaf:based_near ns:Germany
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"SELECT ?grandchild
WHERE {
  ?child a dbpedia:Royalty;
  dbpedia:parent [ dbpedia:hasChild ?grandchild ];
  dbpedia:spouse [ a dbpedia:Person; rdfs:label ""Archduchess Helena of Austria"" ].
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?war WHERE {
  ?recipient a ns:Person ;
              foaf:name ?name .
  ?recipient moh:AwardedFor ?action .
  ?action a ns:MilitaryAction ;
            occurredInLocation ns:charleston_south_carolina .
  ?recipient ns:P31 ?city .
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander WHERE {
  ?commander a :royalty.
  ?commander rdfs:label ""Mukha"".
  ?commander ns:partOfEvent [ a ns:Battle; ns:name ""Siege of Mukha"" ] .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasFather ?father .
  ?person rdfs:label ""Myat Hpone Pyo""@en .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"SELECT ?artist
WHERE {
  ?album ""The Miseducation of Lauryn Hill"" .
  ?album <http://dbpedia.org/property/artist> ?artist .
}",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"The SPARQL query will involve:
1. Finding Pablo Aimar's team.
2. Using the team's `owl:hasMember` property to find other members of that team, specifically looking for Sergio Agüero.

Here is the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
SELECT ?player WHERE {
  ?pabloAimar a owl:NamedIndividual ;
               rdf:type dbpedia-owl:FootballPlayer ;
               rdfs:label ""Pablo Aimar""@es.
  ?pabloAimar owl:hasMember ?teamMembers .
  OPTIONAL { ?teamMembers a owl:NamedIndividual; rdfs:label ?teamLabel }
  FILTER (lang(?teamLabel) = ""es"" )
  BIND (replace(str(?teamLabel), "" "", """") AS ?teamName)
}
```

This query first identifies Pablo Aimar as a football player, then finds the team he was a member of. It uses an optional clause to retrieve the team's label in Spanish and binds it to `?teamName`. Finally, it filters for the team name in Spanish to ensure we're looking at the correct team.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasParent ?grandparent;
  ?grandparent a dbpedia:Person;
  dbpedia:hasSpouse ?spouse;
  ?spouse a dbpedia:Person;
  dbpedia:hasChild ?child
}
WHERE {
  ?parent ns:familyName ""Min Hla"";
  ?spouse ns:feminineGivenName ""Shwe Khet""
}
AND {
  ?grandparent ns:familyName ""Min Hla""
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia-owl:productionCompany ?producer .
  ?movie rdfs:label ""The Adventures of Tom Sawyer (1938 film)"" .
  ?movie rdfs:label ""A Star Is Born (1937 film)"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia-owl:hasMilitaryConflict ?conflict.
  ?conflict a dbpedia:War.
  FILTER (lang(?person) = ""ja"")  # Only consider Japanese individuals
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasSpouse ?spouse_of_costello .
  ?spouse_of_costello a dbpedia:Person;
    rdfs:label ""Mariclare Costello's spouse""@en .
  ?child a dbpedia:Child;
    dbpedia:parent ?person
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"A SPARQL query can be constructed to search for this information within the DBpedia dataset, which contains structured data about people, including royalty. The query would need to identify Duke Anthony Ulrich's parents and filter those who are also part of the royal family.

Here is a sample SPARQL query that could be used:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent WHERE {
  ?duke a ns:Person ;
           ns:hasParent ?parent .
  ?parent a ns:Noble ; # Assuming 'Noble' is a suitable class for royalty
           rdfs:label ?parentLabel .
  ?parentLabel LIKE '%Anthony Ulrich%' . # Searching for Anthony Ulrich's parent(s)
}
```

This query selects the `parent` of the person identified as Duke Anthony Ulrich (`?duke`) who is also a `Noble` (representing royalty) and whose label contains 'Anthony Ulrich'.",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?song ""Filthy Friends"" .
  ?song rdfs:label ?title .
  ?artist ns:performer ?song
}",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","SELECT ?leader WHERE {
  ?leader a ns:people.person;
  ns:givenName ?first_name;
  ns:surname ?last_name;
  ns:office ?office .
  ?office a ns:govvernment.administration;
  ns:country ""Spain"";
  ns:party ?political_party .
  ?political_party a ns:organization.politicalParty ;
                 ns:name ""Spanish Socialist Workers' Party (PSOE)"" .
  ?leader ns:memberOf ?political_party
}",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","SELECT ?father WHERE {
  ?child a pol:Politician .
  ?child ns:parent ?parent .
  ?parent a foaf:Person .
  ?parent ns:officeHolder ?office .
  ?parent ns:maintainer ?child .
  ?parent ns:familyMember ?grandParent .
  ?grandParent a foaf:Person .
  ?grandParent ns:officeHolder ?office .
  ?grandParent ns:maintainer ?child
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
  dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
  dbpedia:hasParent ?parent;
  dbpedia:hasGrandparent ?grandparent .
  ?grandparent a dbpedia:Person;
  dbpedia:hasSpouse [ property:familyMember ?spouse ] .
  ?parent ns:fatherOf ?child .
  ?child ns:nickname ""Charles Martel of Anjou"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","SELECT ?father
WHERE {
  ?eleonore father ?father .
  ?ceciliaRenata father ?father .
  ?ceciliaRenata parent [ owl:inverseOf ""child"" ] ?maximilianI .
  ?eleonore parent [ owl:inverseOf ""parent"" ] ?maximilianI .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?predecessor WHERE {
  ?child my:parent [ a owl:NamedIndividual; rdfs:label ""Myat Hpone Pyo"" ] .
  ?child my:father [ a owl:NamedIndividual; rdfs:label ""Saw Shwe Khet"" ] .
  ?child my:spouse [ a owl:NamedIndividual; rdfs:label ""Spouse of Saw Shwe Khet"" ] .
  ?predecessor a owl:Class; rdfs:label ""Royalty"" .
  ?child ns:parentOf ?predecessor .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"SELECT ?member WHERE { ?club a dbpedia:FootballClub ; rdfs:name ""1. FC Magdeburg"" . ?player rdf:type dbpedia:Footballer; foaf:name ?member .} UNION { SELECT ?designer WHERE { ?car a dbpedia:CarModel ; name ""Aston Martin AMR1"" . ?designer a dbpedia:Designer; rdfs:label ?designerName . }}",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?person ?profession
WHERE {
  ?person a :Actor .
  ?person a :Politician .
  ?person rdfs:label ""Ab Kya Hoga"" .
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"SELECT ?person
WHERE {
  ?person a ns:Person ;
            foaf:residence ns:location ""Sofia"" .
}",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"The SPARQL query would look for a person named ""Bobby Shmurda"" and then link that person to an artist. Here's the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?artist
WHERE {
  ?person a dbpedia-owl:MusicArtist;
           dbpedia-owl:name ""Bobby Shmurda""@en .
  ?person rdf:type dbpedia:Person .
  ?person rdfs:label ?name .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor WHERE {
  ?actor a dbpedia:Actor .
  ?actor foaf:name ""Person Name"" . # Replace ""Person Name"" with the actual name of the actor
  ?actor rdfs:label ""The Shadow""@en .
  ?actor rdfs:label ""Shatrughan Sinha""@en .
  ?actor appearedIn dbpedia:Dispatches_from_Elsewhere .
}",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","SELECT ?spouse
WHERE {
  ?charlesFather a dbpedia-owl:Royalty ;
    rdfs:father ?charles;
    rdf:type dbpedia-owl:Monarch .
  ?charles a dbpedia-owl:Person ;
    rdfs:parent ?charlesFather .
  ?spouse a dbpedia-owl:Person ;
    rdf:type dbpedia-owl:Royalty .
  ?charlesFather rdfs:father ?grandfather.
  ?grandfather a dbpedia-owl:Person .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query to retrieve this information would look like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person;
    dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Winston Chang""@en .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"SELECT ?adminOffice ?event ?party ?country
WHERE {
  ?x a dbpedia-owl:Government.
  ?x foaf:name ""Anxo Quintana"".
  ?x dbpproject:leaderOfEvent ?event.
  ?x dbpproject:administrationInCountry ?country.
  ?x dbpproject:partyMemberOf ?party.
  ?party rdfs:label ""Spanish Socialist Workers' Party"" .
  ?country foaf:name ""Spain"".
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?almaMater
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:birthDate [ strdt:day ""1985-01-01"" ] ;
            dbpprop:office dbpprop:OfficeHolderOf ""Ministra da Educação de São Paulo"" .
  ?person rdfs:label ""Eleonora Menicucci de Oliveira""@pt.
  ?person dbo:almaMater ?almaMater
}",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","SELECT ?father_name ?alter_ego
WHERE {
  ?person a dbpedia:Person;
    dbpedia:has_father ?father_name .
  ?person rdfs:label ""Baeda Maryam I""@en .
  OPTIONAL {
    ?person dbpedia:alters [ a dbpedia:AlterEgo ;
                       rdfs:label ?alter_ego_label ] .
    ?alter_ego_label rdfs:label ""Lamont Cranston""@en .
  }
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?parent WHERE {
  ?child a eg:AlumnusOf eg:EtonCollege .
  ?child eg:hasParent ?parent .
  ?parent a dbo:Politician .
  ?child eg:hasFather FrederickStanley,16thEarlOfDerby
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"The SPARQL query would look for the band R.E.M. and then extract the artist associated with it. Here's how the query could be constructed:

```sparql
SELECT ?artist WHERE {
  ?band rdfs:label ""R.E.M."" .
  ?band dbpprop:associatedBandMember ?artist .
}
```

This query selects the artist (`?artist`) of any band labeled as ""R.E.M."" (`?band rdfs:label ""R.E.M.""`). The second triple `?band dbpprop:associatedBandMember ?artist` ensures that we are looking for the artist associated with the band R.E.M.",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","SELECT ?actorSpouse
WHERE {
  ?actor a dbpedia:Actor .
  ?film a dbpedia:Film ;
            producedBy dbpedia:NatLevine .
  ?actor rdfs:memberOf dbpedia:RulingParty .
  ?landmark a dbpedia:Landmark ;
              elevation ""20.116800000000001347"" .
  ?actor dbpedia:actedIn ?film
}",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor
WHERE {
  ?film a dbpedia-owl:Film;
    dbpedia:productionYear 2013;
    dbpedia:title ""Paradise"".
  ?actor dbpedia:role ?filmRole .
  ?filmRole a dbpedia:ActorRole .
}",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?parent WHERE {
  ?father a ns:http://www.w3.org/2002/07/owl#Individual ;
           ns:name ""Francis I, Duke of Lorraine"" .
  ?mother a ns:http://www.w3.org/2002/07/owl#Individual ;
            ns:name ""Marie Eleonore of Savoy"" .
  ?parent a ns:http://www.w3.org/2002/07/owl#ParentOf ?father;
           ns:name ?parent_name .
  ?parent a ns:http://www.w3.org/2002/07/owl#Noble ;
           ns:name ?parent_name .
  FILTER (LANG(?parent_name) = ""fr"")  # Ensure the name is in French
}",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?child ns:parent ?grandparent .
  ?grandparent a dbpedia:Person .
  ?grandparent ns:spouse ?parent .
  ?parent ns:parent ?greatGrandparent .
  ?greatGrandparent a dbpedia:Person .
  OPTIONAL { ?greatGrandparent ns:child ?otherChild }
  FILTER (fn:contains(str(?otherChild), ""Philip, Despot of Romania"")) 
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","To retrieve this information, we will construct a SPARQL query that looks for the relevant entities in DBpedia. Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:hasMainActor ?actor .
  ?album a dbpedia:Album;
    dbpedia:artist ?actor .
}
```

This query searches for the main actor of any film with the title ""What You Know"" and the artist of the album ""What You Know"" by T.I.",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"SELECT ?bandMember
WHERE {
  ?bandMember a dbpedia-owl:Musician;
  dbpedia2:group dbpedia:The Alan Parsons Project.
}",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query will look for the ""birthPlace"" property associated with the entity identified by ""Vince Gilligan"". Assuming Vince Gilligan has an entry in DBpedia, the query would be:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person;
    dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Vince Gilligan""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?spouse
WHERE {
  ?charlesFather a ns:http://www.wikidata.org/prop/direct/royalty ;
               wd:Q12345 .
  ?charlesFather father ?fatherOfPhilipI .
  ?spouse a ns:http://www.wikidata.org/prop/direct/royalty ;
           wd:Q? ?
  ?mariaBytom a ns:http://www.wikidata.org/prop/direct/person ;
               wd:Q? .
  ?stephenV a ns:http://www.wikidata.org/prop/direct/person ;
             wd:Q? .
  ?charlesFather spouse ?spouse .
  ?mariaBytom parent ?fatherOfPhilipI .
  ?stephenV parent ?fatherOfPhilipI
}
ORDER BY ?spouse",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse2 ?spouse1
WHERE {
  ?child a ns:people.person;
  ?child rdfs:label ""Prince Augustus Frederick William of Prussia"";
  ?child ns:parent [ a ns:familyMember; ns:child ?grandchild ].
  ?grandchild a ns:people.person;
  ?grandchild rdfs:label ""Unknown"" ; # Placeholder for the actual grandchild's name
  ?spouse2 a ns:people.person;
  ?spouse2 ns:parent [ a ns:familyMember; ns:child ?spouse1 ].
  ?spouse1 a ns:people.person;
  ?spouse1 rdfs:label ""Unknown"" ; # Placeholder for the actual spouse's name
  ?spouse1 ns:familyRelation [ a ns:facts.factual ; ns:predicate ns:isSpouseOf; ns:subject ?child ].
  FILTER (xsd:string(?spouse1) = ""Duke of Sussex"")
}",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"SELECT ?show 
WHERE {
  ?host rdfs:label ?name .
  ?host ns:degreeEducation ?educationalInstitution .
  ?educationalInstitution rdf:type dbo:NobelPrizeWinner.
  ?educationalInstitution dbo:awardee dbo:NobelPrizeInPhysics .
  ?educationalInstitution foaf:organization ?show
}",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"SELECT ?actor WHERE {
  ?actor a ns:people.person;
  ns:givenName ""T.I."" .
  ?actor ns:music/album ?album .
  ?album ns:music/song ?song
  AND ?song a ns:music/song
}",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Rod Argent""@en
}",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"SELECT ?season WHERE {
  ?team rdfs:member ?previous_season .
  ?previous_season ns:seasonStartYear ""2006""^^xsd:gYear .
  ?previous_season ns:seasonEndYear ""2007""^^xsd:gYear .
  ?season rdfs:label ?seasonLabel .
  ?season ns:seasonStartYear (???)^^xsd:gYear .
  ?season ns:seasonEndYear (???)^^xsd:gYear
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?band
WHERE {
  ?person a dbpedia-owl:MusicalArtist ;
            rdfs:label ""Bob Thompson""@en .
  ?person foaf:name ""Bob Thompson"" .
  ?person rdfs:member ?band .
}",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace WHERE {
  ?person a dbpedia-owl:Musician .
  ?person foaf:name ""Scott LaFaro"" .
  ?person ns:birthPlace ?birthplace .
  ?person foaf:name ""Bob Crewe"" .
  ?person ns:birthPlace ?birthplace
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?actor
WHERE {
  ?actor a dbpedia:Person;
  dbpedia:P31 dbo:isMainCharacterInFilm ""Actor"";
  ?actor rdfs:seeAlso [ dbpedia:hasRole dbpedia:TelevisionSeries ].
  ?actor rdfs:label ""Richard E. Grant"".
}",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?player foaf:birthDate ?hollingsDOB .
  ?player rdfs:label ""athlete"" .
  ?player rdfs:label ""soccer player"" .
  ?player rdfs:label ""sports manager"" .
  ?player rdfs:label ""soccer manager"" .
  ?hollingsDOB a owl:DatatypeProperty .
  ?hollingsDOB STRDTIME ""1982-01-14""^^xsd:date
}
ORDER BY ?hollingsDOB",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","SELECT ?subject WHERE {
  ?subject a ?type .
  ?subject rdfs:label ""YourEntityNameHere""@en .
}",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?professional a <http://purl.org/dc/terms/Professional> .
  ?professional rdfs:label ""Photographer"" .
  ?person a <http://dbpedia.org/ontology/Person> .
  ?person rdfs:label ""Doon Arbus"" .
  ?person isParentOfSome ?professional
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Ann Sothern""@en .
  ?person foaf:name ?birthName .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","SELECT ?parent WHERE {
  ?awardee rdf:type <>.
  ?awardee rdfs:label ""Commander of the Royal Victorian Order""@en.
  ?awardee hasChild ?arthur_stanley.
  ?arthur_stanley rdf:type <>.
  ?arthur_stanley hasParent ?parent.
  ?parent a <>.
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","SELECT ?person ?birthplace ?war WHERE {
    ?person a dbpedia-owl:Person;
        rdfs:label ""Amasa Tracy""@en .
    ?person dbo:deathDate ""1850-08-05"" .
    ?person dbo:conflict ""War of Amasa Tracy"" .
    ?person dbo:commander Quincy Adams Gillmore .
    ?person dbpprop:birthPlace ?birthplace .
    ?birthplace a dbpedia-owl:Settlement
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?bandMember
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person bd:birthDate ""1945-03-30""^^xsd:date .
  ?person rdfs:member ?bandMember
}",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"SELECT ?child WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?grandparent ;
           dbpedia:isDescendantOf <http://dbpedia.org/ontology/Person>Maria_Anna_of_Bavaria .
  ?grandparent a dbpedia:Person ;
            dbpedia:hasParent ?parent ;
            dbpedia:isDescendantOf <http://dbpedia.org/ontology/Person> Maria_Anna_of_Bavaria .
  ?parent a dbpedia:Person;
           dbpedia:hasParent <http://dbpedia.org/ontology/Person>Some_Royal_Parent
}",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","SELECT ?parent_of_awardee ?grand_parent
WHERE {
    ?awardee rdfs:label ""Rodney Lees""@en .
    ?awardee ns:award ""Rodney Lees Award"" .
    ?awardee a ns:Person .
    ?parent_of_awardee a ns:Person; foaf:parent ?awardee .
    ?grand_parent a ns:Person; foaf:child ?parent_of_awardee .
    ?grand_parent rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?parent0 ?grandparent0
WHERE {
  ?child baeda_maryam_I rdfs:offspring .
  ?child ?parent0 .
  ?parent0 ?grandparent0 .
  FILTER (xsd:boolean(?parent0 rdf:type [dbo:hasType [dbo:label 'royalty']]) AND xsd:boolean(?parent0 dbo:isOfficeHolder))
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"SELECT ?child WHERE {
  ?grandparent a ns:Person ;
               ns:hasChild ?parent ;
               ns:hasChild ?child .
  ?parent a ns:Person ;
          ns:hasChild ?midChild .
  ?midChild a ns:Person
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"Given the constraints and the need to find a precise match, we will first search for any television shows or movies titled ""Battle of Vienna."" Assuming we are looking for a fictional representation rather than an exact historical reenactment, we can use DBpedia's resources to query for these titles. Here is a SPARQL query that attempts to find such entities:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?title WHERE {
  ?title a dbpedia:TelevisionShow .
  ?title rdfs:label ""Battle of Vienna""@en .
}
```

This query selects titles of television shows labeled as ""Battle of Vienna"" in English. We will run this query against DBpedia's endpoint to get the results.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"SELECT ?person ?profession WHERE {
  ?person a dbpedia-owl:Person.
  ?person rdfs:label ""Rod Argent""@en.
  OPTIONAL { ?person dbpprop:mainCareer ?professional }
  UNION
  SELECT ?person ?birthName WHERE {
    ?person a dbpedia-owl:Person.
    ?person rdfs:label ""Joey B""@en.
    OPTIONAL { ?person dbpprop:birthName ?birthName }
  }
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?artist
WHERE {
  ?artist foaf:name ""Keith Alan Caprioglio"" .
  OPTIONAL { 
    ?artist dbpprop:birthPlace ""Ghana, Central Region"" .
    ?artist rdfs:label ?musicalArtistLabel .
    ?musicalArtistLabel a dbo:MusicArtistsProperty .
  }
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"A suitable SPARQL query to find this information could involve querying the DBpedia dataset, which contains structured data about various entities including cars and their designers. The query might look something like this:

```sparql
SELECT ?designer
WHERE {
  ?car a dbpedia-owl:Car ;
         dbpedia2:manufacturer ""Aston Martin Limited"" .
  ?car rdfs:label ""Aston Martin AMR1"" .
  ?designer a dbpedia-owl:Person ;
            dbpprop:role ""Chief Designer"" .
}
```

This query selects the `designer` of a car that is both manufactured by Aston Martin and labeled as ""Aston Martin AMR1"", assuming that the role of the designer is explicitly stated or can be inferred from the properties used.",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander WHERE {
  ?event rdf:type dbpedia-owl:Battle .
  ?event rdfs:label ""Pickett's Charge"" .
  ?commander foaf:name ?name
  FILTER (lang(?name) = ""en"")
}",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","SELECT ?predecessor
WHERE {
  ?politician a dbpedia-owl:Person ;
               dbpedia-owl:officeHolder [ a owl:Office; owl:precedingOffice ?previousOffice ] .
  ?politician foaf:name ""Ada Jane Low"" .
  ?previousOffice rdfs:label ""Previous Office Name"" .
}",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"The SPARQL query will need to search the DBpedia dataset for films that include Herschel Bernardi as an actor. We can use the `dbpedia-owl` namespace to query for films and then filter by the actor Herschel Bernardi.

Here is the SPARQL query:

```sparql
SELECT ?film
WHERE {
  ?film a dbpedia-owl:Film ;
           dbpedia-owl:actor [ dbpedia:hasName ""Herschel Bernardi"" ] .
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?awardee ?birthplace ?force
WHERE {
  ?awardee rdfs:label ""Quincy Adams Gillmore Award awardee""@en .
  ?birthplace rdfs:label ""Port Tobacco, Maryland""@en .
  ?birthplace a :Settlement .
  :HenryClayLewis birhPlace ?birthplace .
  ?birthplace geo:location [ geo:country ""United States"" ] .
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:birthPlace ?birthPlace .
  ?person rdfs:label ""Cece Bell"" .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?person
WHERE {
  ?person a :royalty .
  ?person rdfs:father ?parent .
  ?parent a :royalty .
  ?person ns:commanderInEvent :Siege_of_Mukha .
}",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"SELECT ?entity WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ""Chiba, Chiba Prefecture, Japan"".
  ?war a dbpedia-owl:Conflict;
    dbpedia2:startYear 1540.
  ?battle a dbpedia-owl:Battle;
    dbpedia2:participatedIn ?war .
  ?person rdfs:label ""Yamaza Enjirō"" .
  ?battle rdfs:label ""Battle of Nagashino"" .
  ?battle rdfs:label ""Siege of Inabayama Castle"" .
}",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?person
WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:child [owl:hasChild ?grandchild] .
  ?person rdfs:parent ?parentOfPhilip .
  ?parentOfPhilip a dbpedia:Person .
  ?parentOfPhilip rdfs:spouse [owl:hasParent ?spouseOfBelaIV] .
  ?spouseOfBelaIV a dbpedia:Person .
  ?spouseOfBelaIV owl:sameAs [dbpedia:hasChild Béla_IV_of_Hungary]
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"SELECT ?child_name ?royalty_status
WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:parent [ a dbpedia:Person ; dbpedia:name ""Minye Kyawswa"" ] ;
               dbpedia:sibling [ a dbpedia:Person ; dbpedia:name ""Myat Hpone Pyo"" ] .
  ?parent a dbpedia:Person ;
           dbpedia:child ?grandchild ;
           dbpedia:parent [ a dbpedia:Person ; dbpedia:name ""Minye Kyawswa"" ] .
  ?myathpone_pyoparent a dbpedia:Person ;
                    dbpedia:child ?parent ;
                    dbpedia:spouse [ a dbpedia:Person ; dbpedia:name ?father_name ] .
  ?father a dbpedia:Person ;
           dbpedia:child ?myathpone_pyoparent ;
           dbpedia:gender ""Male"" .
  ?father_dbpedia a dbpedia:SurnameOfPerson ;
               dbpedia:value ?father_name .
  ?royalty_status rdfs:label ""Royalty""
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","SELECT ?player
WHERE {
  ?player rdfs:label ""Juan Carlos Molina""@en .
  ?player dbpprop:birthDate ""1979-11-03"" .
  ?player dbo:role ""footballer"" .
  ?player dbo:role ""athlete"" .
  ?player dbo:role ""soccer player"" .
  ?player dbo:role ""soccer manager"" .
  FILTER (STRSTARTS (?player, ""All or Nothing: Manchester City"")) .
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?spouse
WHERE {
    ?parent a dbpedia:Royalty; dbpedia:noblePerson .
    ?parent dbpedia:hasChild ?antonio_duke_of_lorraine .
    ?antonio_duke_of_lorraine a dbpedia:Monarchy_Rank; dbpedia:monarch .
    ?parent foaf:spouse ?spouse
}",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"SELECT ?producerProfession
WHERE {
  ?show rdf:type dbpedia-owl:TelevisionSeries .
  ?show rdfs:label ""Coke Studio Philippines"" .
  ?producer rdf:type dbpedia:Pseudonym .
  ?producer rdfs:label ?producerProfession .
}",3,3,4,3,1,3,3,71,0,0,46017,0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","SELECT ?royalty
WHERE {
  ?charlesFather a :father_of ?stephenV.
  ?stephenV a :parent_of ?charlesI.
  ?charlesI a :child_of ?belaIV.
  ?charlesFather a :spouse_of ?elizabethOfBosnia .
  ?elizabethOfBosnia a :parent_of ?royalty .
  ?belaIV a :grandchild_of ?stephenV .
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","SELECT ?name WHERE {
  ?artist a dbpedia-owl:Musician .
  ?artist rdfs:label ""Pacely""@en .
  ?person rdfs:label ""Joey B.""@en .
  ?artist ns:birthDate ?birthDate .
  ?person ns:givenName ?first_name .
  ?person ns:surname ?last_name
}
LIMIT 1",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:birthPlace ?birthPlace .
  ?person rdfs:label ""Cece Bell""@en .
  ?person rdfs:label ""Vince Gilligan""@en .
  ?person rdfs:label ""Glenn Youngkin""@en .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"A SPARQL query to find the author of ""Back to Work"" could look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author WHERE {
  ?book dbpedia:isbn ""978-0345524124"" .
  ?book dc:title ""Back to Work"" .
  ?book dc:author ?author .
}
```

This query searches for a book with the ISBN ""978-0345524124"" titled ""Back to Work"" and retrieves the author of that book.

For the commander in the Third Taiwan Strait Crisis, we might need to use more general queries or external databases that specialize in historical events. However, since DBpedia does not have specific entries for every individual involved in military conflicts, a direct SPARQL query might not yield results. We would typically look for a notable figure associated with this event through other means.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","SELECT ?alterEgo
WHERE {
  ?character dbo:hasAlterEgo ?alterEgo .
  ?character rdfs:label ""Kent Allard"" .
  ?character dbpprop:comicCharacterOfComic ""The Crimson Avenger""
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ""Vince Gilligan"" . }
  OPTIONAL { ?person rdfs:label ""Glenn Youngkin"" . }
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relevant individuals and their relationships. Here's how we might structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name WHERE {
  ?grandchild a rdf:Property ;
               rdfs:label ""child"" .
  ?greatGrandchild a rdf:Property ;
                    rdfs:label ""child"" .
  ?greatGrandChild a rdf:Property ;
                    rdfs:label ""parent"" .
  
  ?greatGrandChild1 rdf:type dbo:Person ;
                 dbo:hasParent ?grandchild;
                 dbo:hasParent ?greatGrandChild .
  ?greatGrandChild2 rdf:type dbo:Person ;
                dbo:hasParent ?greatGrandChild ;
                dbo:hasParent ?child_name .
  
  ?greatGrandChild1 rdfs:label ""Child of Alexander of Württemberg"" .
  ?greatGrandChild2 rdfs:label ""Royalty"" .
}",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"SELECT ?office WHERE {
  ?politician a ns:http://www.w3.org/2002/07/owl#Politician ;
               ns:name ""Alberto Ruiz-Gallardón""@es.
  ?politician ns:office ?office .
  FILTER (lang(?office) = ""es"" )
}",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"SELECT ?parent WHERE {
  ?charles_martel_of_anjou a ns:people:Person ;
                           ns:hasParent ?parent .
  ?parent a ns:Person ;
             ns:hasParent ?grandparent .
  ?grandparent a ns:Person ;
               ns:hasParent ?greatgrandparent .
  ?greatgrandparent a ns:Person ;
                 ns:hasParent ?john_of_brienne .
  ?john_of_brienne a ns:Person;
                  ns:hasParent ?john_of_brienne_and_isabella .
  ?john_of_brienne_and_isabella a ns:Person ;
                         ns:hasParent ?bela_IV .
  ?bela_IV a ns:Person;
            ns:hasParent ?hungarian_monarch .
  ?hungarian_monarch a ns:Person;
                 ns:hasParent ?holy_roman_emperor .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?player rdf:type dbpp:Person.
  ?player rdfs:label ""Ekaterina Zaharieva"".
  ?player dbpp:birthPlace ?birthplace.
}
LIMIT 1",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","The SPARQL query will need to:
1. Find movies that are both films and television shows.
2. Filter these to only include those with an author who is deceased.
3. Ensure the author is both an artist and a musical artist.

Given the complexity of these requirements, we may need to make some simplifying assumptions or use broad matching criteria. Here's a basic SPARQL query that attempts to fulfill these conditions:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie 
WHERE {
  ?movie a dbo:Film, dbo:TelevisionShow; 
  dbo:author_of_work(?movie) ?author;
  ?author a dbo:Artist, dbo:MusicalArtist;
  ?author dbo:is_deceased TRUE;
  FILTER (xsd:date(?movie) >= ""2020-06-18"")
}
```

This query:
- Selects the movie (`?movie`)
- Ensures that the movie is both a film and a television show (`?movie a dbo:Film, dbo:TelevisionShow`)
- Links the movie to its author (`?author_of_work(?movie) ?author`)
- Ensures that the author is both an artist and a musical artist (`?author a dbo:Artist, dbo:MusicalArtist`)
- Checks that the author is deceased (`?author dbo:is_deceased TRUE`)
- Filters for movies released on or after 2020-06-18",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"A SPARQL query to achieve this might look like:

```sparql
SELECT ?child WHERE {
  ?person a dbpedia:Person;
  dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person;
  dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
  rdfs:label ""Min Hla Htut""@en
}
```

This query searches for a person named ""Min Hla Htut"" (using the label in English), finds their parents, and then finds the parents of those parents to identify the grandparents.",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?commander WHERE {
  ?regiment rdf:type ns:Regiment.
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"".
  ?battle a ns:Battle.
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"".
  ?commander ns:hasCommander ?regiment .
  ?force rdf:type ns:MilitaryForce.
  ?bayne rdf:type ns:MilitaryPerson.
  ?bayne rdfs:label ""William Bayne"".
  ?force ns:participatedIn ?battle .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Cynthia Morgan""@en .
  ?person foaf:name ?birthName .
}
LIMIT 1",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","SELECT ?player ?team WHERE {
  ?player a dbpedia:Footballer .
  OPTIONAL { ?player dbppro:playsFor ?team }
  FILTER (lang(?player) = ""en"")  # Assuming English language
  SERVICE wikibase:label { 
    bd:entity ?x; wikibase:label ?label . 
  }
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"SELECT ?father ?child WHERE {
  ?father a dbpedia:Royalty .
  ?father rdfs:fatherOf ?child .
  ?child rdfs:label ""Baeda Maryam I""@en .
  ?child a dbpedia:Event_person;
    dbpedia2:participatedInEvent dbpedia:Siege_of_Mukha
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"SELECT ?work ?author WHERE {
  ?work a dbpedia-owl:ArtisticWork ;
         dbpedia-owl:creator ?author .
  ?author rdfs:label ""Aleksandr Filimonov""@en
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"The SPARQL query to retrieve the information about the war led by Admiral Sir Thomas Phillips during the Sinking of Prince of Wales and Repulse would involve selecting the relevant facts from the DBpedia dataset. Here is a sample SPARQL query:

```sparql
PREFIX dbp: <http://dbpedia.org/ontology/>

SELECT ?commander ?war WHERE {
  ?commander rdfs:label ""Admiral Sir Thomas Phillips""@en .
  ?war a dbp:Conflict ;
         dbp:involvedInBattle ""Sinking of the Prince of Wales and Repulse""@en .
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","SELECT ?person WHERE {
  ?person a :commander_in_russo_polish_war .
  ?person rdfs:label ?television_show_label .
  ?person rdfs:label ?societal_event_label .
  ?person a :politician_and_office_holder .
  ?successor ?person
} 

AND {
  ?person ns:name ""Jean Baptiste, Comte d'Arco"" .
  ?successor ns:name ?successor_name
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?parent WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:hasParent ?parent1 .
  ?person2 a dbpedia:Person;
    dbpedia:hasParent ?parent2 .
  ?parent1 ns:father ?parent .
  ?parent2 ns:father ?parent .
  ?person1 rdfs:label ""Mary Elphinstone, Lady Elphinstone"" .
  ?person2 rdfs:label ""William Gayner"" .
}",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"SELECT ?office WHERE {
  ?election 2009 Galician regional election.
  ?leader office ?office .
}",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?country WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:monarchOf ?country .
  ?person rdfs:label ""Nicholas II of Russia""@en .
}",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"SELECT ?tenant
WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:office dbpedia:P6_Leadership_of_Spain ;
            foaf:name ""Alberto Ruiz-Gallardón"" .
  ?residence a dbpedia-owl:Residence ;
             dbpedia-owl:tenant ?tenant .
}",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"To find this information using SPARQL, we would need to query the DBpedia dataset for individuals associated with the song ""Boom Shack-A-Lak"" and filter those results to find someone from Birmingham. Here's a possible SPARQL query:

```sparql
SELECT ?person WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:birthPlace dbpedia:Birmingham;
    dbo:hasComposed ""Boom Shack-A-Lak"".
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"A suitable SPARQL query for DBpedia, which is a music-related knowledge base, could be:

```sparql
SELECT ?profession WHERE {
  ?person a dbpedia-owl:Musician;
    rdfs:label ""Rod Argent""@en.
}
```

This query selects the `profession` of any person who is labeled as a `Musician` in DBpedia and has the label ""Rod Argent"" in English.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"SELECT ?bandMemberName ?birthName
WHERE {
  ?artist a dbpedia:MusicalArtist .
  ?artist dbpprop:birthName ?birthName .
  ?bandMembers a dbpedia:BandMember .
  ?artist dbpprop:isMemberOf ?bandMembers .
  FILTER (lang(?birthName) = ""en"")  # Only consider English names
  UNION
  {
    ?person a dbpprop:Person;
    dbpprop:name ?birthName.
    geo:isPartOfLocationSome ?stateOrRegion .
    ?stateOrRegion a dbpedia:AdministrativeTerritory ;
                   dbpprop:country ""United States"" .
    geo:locatedIn ?stateOrRegion
  }
}
LIMIT 1",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"SELECT ?awardee_name ?gillmore_force ?mh_war
WHERE {
  ?awardee gil:recipient_of Quincy Adams Gillmore Award .
  ?awardee foaf:name ?awardee_name .
  OPTIONAL { ?awardee rdfs:label ?gillmore_force . }
  ?awardee med:recipient_of Medal of Honor .
  ?awardee med:war_of_honor ?mh_war
}",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?actor WHERE {
  ?actor a :Actor .
  ?actor foaf:name ""Richard Grant Esterhuysen"" .
  OPTIONAL { ?actor rdfs:seeAlso ?tv_show }
  FILTER ( EXISTS { ?movie a mo:Film ; mo:actor ?actor } )
}",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"SELECT ?person WHERE { ?person ns:birthPlace ""Lahore"" . }",1,1,2,1,1,2,2,9,0,0,881,0,0.0,0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","To find this information, we can use the DBpedia dataset which contains structured data about real-world entities. We will construct a SPARQL query that searches for a war involving a female commander and then identifies the commander of that war.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?warLabel ?commanderLabel WHERE {
  ?war dbpedia:hasCommander ?commander .
  ?commander a dbpedia:Person .
  ?commander rdfs:label ?commanderLabel .
  FILTER (lang(?commanderLabel) = ""en"")  # Filter for English language
  AND ?war rdfs:label ?warLabel .
  ?war rdfs:label match "".*Triple X's.*""  # Search for a war involving a female commander named ""Triple X's""
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?person WHERE {
    ?film ""A Star Is Born (1937 film)"" a ns:film.
    ?film ns:director ?person .
    OPTIONAL { ?film ns:producer ?person }
    FILTER(STRSTARTS(?film, ""The Adventures of Tom Sawyer"")) 
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"To retrieve this information, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person_name ?birth_place_region
WHERE {
  ?person dbpedia:birthPlace ?birth_place .
  ?birth_place rdfs:label ?birth_place_label .
  ?birth_place_label ns:name ""Vince Gilligan"" .
  
  ?governor dbpedia:officeHolder ?politician .
  ?politician rdfs:label ?politician_name .
  ?politician_name ns:name ""Paulus Powell"" .

  ?region rdfs:label ?region_label .
  ?birth_place rdfs:label ?birth_place_label .
  ?region_label ns:adminDiv ?region_admin_division .
}
```

This query does the following:
- Selects the birth place and region of Vince Gilligan.
- Identifies the politician (Paulus Powell) who holds office in the same region.
- Links the region to its administrative division.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"The SPARQL query will need to search for books authored by Joe Biden where the book's country of origin is specified as ""United States"" (American). Here's a possible SPARQL query:

```sparql
SELECT ?workLabel ?workDescription WHERE {
  ?work a dbpedia-owl:Book ;
    dbpprop:author ""Joe Biden"" ;
    dbpprop:countryOfOrigin ""United States"".
}
```

This query selects the label and description of works that are books, authored by Joe Biden, and originate from the United States.",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"SELECT ?player_name
WHERE {
    ?athlete birthday ""1970-01-01""^^xsd:date .
    ?athlete rdfs:label ?player_name .
    FILTER (lang(?player_name) = ""en"")  # Assuming we are looking for English names.
    ?film rdf:type mo:Film .
    ?film mo:director ?director .
    ?actor mo:roleInFilm ?film .
    ?actor rdf:type dbo:SoccerPlayer .
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","SELECT ?bandLabel ?artistName ?associatedArtist
WHERE {
  ?bandLabel rdfs:label ""The Fabulous Thunderbirds"" .
  ?bandMember a dbppro:Musician .
  ?bandMember rdfs:label ?artistName .
  ?bandMember foaf:member ?associatedArtist .
  ?artistName ns:name ""Nicholas Michael Curran"" .
  ?associatedArtist ns:name ""Kim Wilson"" .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1972-03-05"" .
  ?person rdfs:label ""Linda Sue Cobb""@en .
  ?person wdt:P18 ?spouse .
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"The SPARQL query will use the DBpedia dataset which contains structured information about people, their roles, and related facts. We'll need to query for the offices held by Mariano Rajoy and Miguel Maura, and then determine who succeeded them as mayors of Madrid.

Here's the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?officeHolder WHERE {
  ?officeHolder a dbo:Office ;
                  dbo:officeTitle ""Mayor of Madrid"" .
  ?officeHolder rdfs:label ?officeLabel .
  OPTIONAL { ?officeHolder dbpprop:precededByOffice ?predecessorOffice }
  FILTER (lang(?officeLabel) = ""es"")  # Only consider Spanish labels
}

# Find the current office holder after Mariano Rajoy and Miguel Maura
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?currentHolder WHERE {
  ?previousHolder a dbo:Person ;
                 dbo:heldOffice ?office .
  ?office a dbo:Office ;
           dbo:officeTitle ""Mayor of Madrid"" .
  ?office rdfs:label ?officeLabel .
  OPTIONAL { ?office dbpprop:succeededByOffice ?currentHolder }
  FILTER (lang(?officeLabel) = ""es"")  # Only consider Spanish labels
}

# Combine the results to get the current office holder
CONSTRUCT {
  ?currentHolder as ?currentHolderTitle
} WHERE {
  ?previousHolder in (
    SELECT ?officeHolder WHERE {
      ?officeHolder a dbo:Office ;
                    dbo:officeTitle ""Mayor of Madrid"" .
      ?officeHolder rdfs:label ?officeLabel .
      OPTIONAL { ?officeHolder dbpprop:precededByOffice ?predecessorOffice }
      FILTER (lang(?officeLabel) = ""es"")
    }
  ) UNION
  ?currentHolder in (
    SELECT ?officeHolder WHERE {
      ?officeHolder a dbo:Person ;
                    dbo:heldOffice ?office .
      ?office a dbo:Office ;
                    dbo:officeTitle ""Mayor of Madrid"" .
      ?office rdfs:label ?officeLabel .
      OPTIONAL { ?office dbpprop:succeededByOffice ?currentHolder }
      FILTER (lang(?officeLabel) = ""es"")
    }
  )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","SELECT ?person ?role WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Robert Lamar Thompson"" .
  ?person dbpprop:producerOf dbpedia:Coke_Studio_Philippines .
}",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?person rdfs:label ""Princess Sara bint Faisal""@en .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","SELECT ?musician
WHERE {
  ?musician a dbpedia-owl:Musician .
  ?musician rdfs:label ?name .
  FILTER (lang(?name) = ""en"" )
}",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"SELECT ?person WHERE {
  ?person a :royalty .
  ?person rdfs:label ""The Shadow"" .
  ?person ns:parent ?parent .
  ?parent a :commander .
  ?parent rdfs:label ""Lamont Cranston"" .
  FILTER (lang(?person) = ""en"")  # Assuming the data is in English
}",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"SELECT ?person WHERE {
  ?child1 a dbpedia:ChildOf ; dbpedia:parent [ dbpedia:hasName ""Dawit I"" ] .
  ?grandchild a dbpedia:ChildOf ; dbpedia:parent ?child1 .
  ?grandparent a dbpedia:Royalty ; dbpedia:officeHolder .
  ?grandchild a dbpedia:ChildOf ; dbpedia:parent ?grandparent .
  ?child2 a dbpedia:ChildOf ; dbpedia:parent ""Baeda Maryam I"" .
  ?person1 rdfs:label ?person_name .
  ?person2 rdfs:label ?person_name .
  ?person_name1 ns:name ""Person Name 1"" .
  ?person_name2 ns:name ""Person Name 2"" .
  ?person1 eqv:?person_name ?person_name1 .
  ?person2 eqv:?person_name ?person_name2 .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","To find this information using SPARQL, we would need to query the DBpedia dataset for the relevant individuals and their relationships. Here's a possible SPARQL query:

```sparql
SELECT ?father WHERE {
  ?queen a dbpedia-owl:Person ;
    dbpedia2:hasParent ?father ;
    rdfs:label ""Catherine of Austria""@en .
  ?father a dbpedia-owl:Person ;
    rdfs:label ""Philip II of Spain""@en .
}
```

This query selects the `?father` of Catherine of Austria (`?queen`) who is labeled as ""Philip II of Spain"" (`?father`). It assumes that the labels are directly used in the dataset for these purposes.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player WHERE {
  ?player foaf:birthDate ?birthdate .
  ?birthdate ns:dateTime ""1985-03-22"" . # Assuming Marty Pollio's birthday is March 22, 1985
  OPTIONAL { ?player rdfs:label ?playerLabel }
  FILTER (lang(?playerLabel) = ""en"") # Filtering for English labels
  UNION
  SELECT ?player WHERE {
    ?player foaf:birthDate ?birthdate .
    ?birthdate ns:dateTime ""1986-06-13"" . # Assuming Sergio Agüero's birthday is June 13, 1986
    OPTIONAL { ?player rdfs:label ?playerLabel }
    FILTER (lang(?playerLabel) = ""en"") 
  }
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"SELECT ?predecessor
WHERE {
  ?child a dbpedia-owl:Child ;
            dbppro:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbppro:spouse ?spouse .
  ?spouse a dbpedia:Royalty .
  ?parent dbppro:predecessor ?predecessor
}",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?location WHERE {
  ?artist ns:name ""Bobby Shmurda"" .
  ?bandMember ns:memberOf ?artist .
  ?bandMember ns:birthPlace ?location
}
LIMIT 1",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","A SPARQL query would typically look for resources (in this case, movies) that have a specific attribute matching the given input. Assuming the user is looking for a movie by its title, we might construct a query like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?movie
WHERE {
  ?movie a rdf:Resource.
  ?movie rdfs:label ""Give me the movie with .""@en .
}
```

This query selects all resources (`?movie`) that have a label matching the string ""Give me the movie with "". The `@en` indicates that we are looking for labels in English.",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","The SPARQL query will involve looking up the artist information associated with Steven Kapur and then querying for the musical works (albums) linked to him. Assuming we have a basic schema where artists are linked to their works through a relation like `artist:musical_work`, the query might look something like this:

```sparql
SELECT ?work
WHERE {
  ?artist a dbpedia:Artist ;
            rdfs:label ""Steven Kapur""@en .
  ?work a dbpedia:MusicalWork ;
         dbpedia:artist ?artist .
}
```

This query selects all `?work` resources that are of type `dbpedia:MusicalWork` and are associated with an artist labeled as ""Steven Kapur"" in English.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"SELECT ?manager
WHERE {
    ?player rdfs:label ""Thomas Letsch"".
    ?player dbpprop:club VfL Bochum.
    ?player dbpprop:season ""2007-08"" .
    ?team dbpprop:manager ?manager .
    ?team a dbpprop:SportTeamSeason .
    ?team dbpprop:season ""2007-08"" .
    ?player dbpprop:joinedInYear ?year .
    ?year > 2006 . # Ensuring he was part of the team in 2007-08
    ?manager rdfs:label ?managerLabel .
    FILTER (lang(?managerLabel) = ""de"") # Assuming manager's label is in German
}",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query will look for the birthplaces of Ekaterina Zaharieva and Reneta Kamberova in the DBpedia dataset. Assuming that DBpedia has structured this information under properties like `birthPlace` or similar, the query would be:

```sparql
SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia2:birthPlace ?birthplace .
  ?person rdfs:label ""Ekaterina Zaharieva""@en .
  ?person rdfs:label ""Reneta Kamberova""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"SELECT ?leader ?location WHERE {
  ?leader a ns:Person ;
            foaf:name ""Antonios Varthalitis"" .
  ?location a ns:Place ;
             rdfs:label ?locationLabel .
  ?leader ns:P31 ?location
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"SELECT ?institution WHERE {
  ?award rdf:type ns:Prize.
  ?award rdfs:label ""Nobel Prize in Physics"".
  ?institution a ns:Organization;
    rdfs:label ?institutionLabel .
  FILTER (lang(?institutionLabel) = ""sv"")  # Ensure the label is in Swedish
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?parent WHERE {
  ?person a ns:Person ;
            ns:hasParent ?parent .
  ?person ns:name ""Francis I, Duke of Lorraine"" .
  ?parent ns:givenName ?givenName .
  ?parent ns:surname ?surname
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:firstName ""Yeshaq"" ] .
  ?child ns:child [ ns:firstName ""Baeda Maryam I"" ]
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"SELECT ?militaryForce1 ?war
WHERE {
  ?awardee knightCommanderOfTheOrderOfTheBath .
  ?awardee rdfs:label ?awardeeLabel .
  ?awardee foaf:awardedBy ?awardedBy .
  ?awardedBy a nfo:Person .
  ?war a nfo:MilitaryConflict .
  ?war rdfs:label ?warLabel .
  ?militaryForce1 a nfo:MilitaryForce .
  ?militaryForce1 ns:partOf ?war
} 

AND {
  ?williamBayne a nfo:Person .
  ?williamBayne ns:participantIn ?campaign .
  ?campaign a nfo:Event .
  ?campaign rdfs:label ?campaignLabel .
  ?militaryForce2 a nfo:MilitaryForce .
  ?militaryForce2 ns:partOf ?campaign
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","SELECT ?actor
WHERE {
  ?movie a mo:Film ;
            dc:title ""The Professional"" .
  ?actor mo:roleInFilm ?movie .
  ?actor rdfs:label ?actorLabel .
  ?actorLabel stringMatch ""football player"" .
}",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"SELECT ?player
WHERE {
  ?player foaf:birthDate ?date.
  OPTIONAL { ?player rdfs:label ?name }
  FILTER (STRFTER(?date, ""Marty Pollio"") AND (?player rdf:type [owl:sameAs dbpedia-owl:Athlete]))
}

AND
SELECT ?person
WHERE {
  ?person foaf:birthDate ?date.
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (STRFTER(?date, ""Marcelo Sarmiento"") AND (?person rdf:type [owl:sameAs dbpedia-owl:SoccerPlayer] AND ?person rdf:type [owl:sameAs dbpedia-owl:FootballManager]))
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?tenant WHERE {
  ?personName ""Álvaro Quirós"" .
  ?personLocation geo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""pt"")  # Assuming he resides in Portugal
}",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""Cynthia Morgan""@en .
  ?person foaf:givenName ?birth_name .
}
LIMIT 1",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"SELECT ?awardee ?regiment ?war ?military_force
WHERE {
  ?awardee a dbpedia:Person ;
           dbpedia:award_Knight_Commander_Order_of_the_Bath ;
           dbpedia:commander_unit dbpedia:30th_Cambridgeshire_Regiment_Foot ;
           dbpedia:conflict dbpedia:Napoleonic_Wars .
  ?regiment a dbpedia:MilitaryUnit ;
           dbpedia:regiment_number ""30th (Cambridgeshire) Regiment of Foot"" .
  ?war a dbpedia:Event ;
         dbpedia:start_date ""1792-07-15""^^xsd:date ;
         dbpedia:end_date ""1815-11-20""^^xsd:date .
  ?awardee rdfs:member ?regiment .
}",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"SELECT ?party WHERE {
  ?personName ""Roy Barreras"" .
  ?personCountry ""Colombia"" .
  ?personName ""Gustavo Petro"" .
} 

Note: This query assumes that there is a direct relation between the person's name and their party affiliation in the dataset. If the data structure is more complex, additional joins or subqueries might be necessary.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","SELECT ?birthplace
WHERE {
    ?person a :Person ;
            dcterms:deathDate ""1850-08-05"" ;
            awardingMilitaryHonour :MedalOfHonor ;
            foughtInWar :War_of_the_Indian_American_War ;
            commander :Quincy_Admans_Gillmore .
    ?birthplace a :Settlement ; 
             :country ""United_States"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionYear 1958;
    dbpedia:role ?role .
  ?role rdfs:label ""Aladdin""@en .
  ?actor dbpedia:role ?role
}",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"SELECT ?award ?recipient WHERE {
  ?recipient a ns:people.person .
  ?recipient NobelPrizeInPhysics rdfs:label ""Nobel Prize in Physics"" .
  ?recipientAward a ns:thing .
  ?recipientAward rdfs:label ?award .
  ?recipientAward ns:P31 ?recipient
}",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"The SPARQL query to find the residence of Doug Beattie might look something like this:

```sparql
SELECT ?residence WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:birthDate ""1965"";
    dbpprop:birthPlace ""Belfast, Northern Ireland"" .
  ?person rdfs:label ""Doug Beattie""@en .
  ?person foaf:based_near ?residence .
}
```

This query selects the `residence` of a person (`?person`) who:
- Is a `Person` in the DBpedia ontology,
- Was born in 1965 in Belfast, Northern Ireland,
- Has the label ""Doug Beattie"" in English,
- Is located near (`foaf:based_near`) the place of their residence.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
  dbpedia:birthName ""Kimberly Nicole Jones"";
  ?person rdfs:label ""Cynthia Morgan""@en;
  ?person foaf:role [ a owl:Ontology ; owl:class ""dbpedia:FilmRole"" ] ;
  ?person foaf:role ""The Campus Queen""@en
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?alterEgo ns:instance [ a ns:ComicBookCharacter; rdfs:label ""The Shadow"" ] .
  ?alterEgo rdfs:label ?alterEgoLabel .
  FILTER (lang(?alterEgoLabel) = ""en"" )
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","The SPARQL query will involve finding the movie ""ATL"" and then extracting the actors associated with it. Assuming ""ATL"" is correctly identified in DBpedia, the query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?movie a dbpedia-owl:Film ;
            dbpedia-owl:mainActor ?actor .
  ?movie rdfs:label ""ATL""@en .
}
```

This query selects the `?actor` of films that have ""ATL"" as their label and are classified as films in DBpedia.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","SELECT ?parent WHERE {
  ?child a :Photographer .
  ?child :father ?parent .
  ?child :mother ?parent .
  ?child :sibling ?jane .
  ?jane a :Photographer
}",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"SELECT ?eventLabel ?tvShow
WHERE {
  ?parent a :Parent;
    :name ""Archduke Rudolf of Austria"".
  ?child a :Child;
    :parent ?parent;
    :event ?event.
  ?event a :Event;
    :label ?eventLabel.
  ?tvShow a :Television_Show;
    :title ?tvShowTitle .
  ?event rdfs:subClassOf [a owl:Event].
  ?event owl:hasPart ?regiment.
  ?regiment a :Military_Regiment;
    :name ""2nd Dragoon Regiment (France)"".
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"To find the current leader of the PSOE using SPARQL, we need to query the DBpedia dataset for information about the party and its leaders. Here's the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?leader
WHERE {
  ?party rdf:type dbo:PoliticalParty ;
           dbo:name ""Spanish Socialist Workers' Party""@es.
  ?party dbo:currentLeader ?leader .
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"The SPARQL query to retrieve the real name of Peter IV of Aragon from DBpedia would be:

```
SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasRealName ?name .
  ?person rdfs:label ""Peter IV of Aragon""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","SELECT ?subject ?property WHERE {
  ?subject a ns:Organization .
  ?subject rdfs:label ""Order of the Medjidie"" .
  ?subject rdfs:comment ?comment .
  FILTER (lang(?comment) = ""en"") 
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?event  a  dbo:Battle ;
           dbo:participatedIn ""Sinking of Prince of Wales and Repulse"" .
  ?commander  a  dbo:Person ;
            dbo:role ""Commander of Royal Navy Force G"" .
}",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?recipient awardsAwardedBy ""United States Congress"" .
  ?recipient battleIn ?war .
  ?recipient rdfs:label ""Quincy Adams Gillmore"" .
}",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"The SPARQL query will involve:
1. Finding the father of Cecilia Renata of Austria.
2. Identifying his role in the Algerian War.
3. Linking this information to known societal events and television shows.

Here is the constructed SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?eventLabel ?tvShowLabel
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasFather ?father;
    dbpedia:participatedInMilitaryConflict dbpedia:Algerian_War.
  ?person rdfs:label ""Cecilia Renata of Austria""@en.
  OPTIONAL { ?father a dbpedia:Person; rdfs:label ?fatherLabel . }
  OPTIONAL { ?event a dbpedia:Event; rdfs:label ?eventLabel . }
  OPTIONAL { ?tvShow a dbpedia:Television_Series; rdfs:label ?tvShowLabel . }
  FILTER (lang(?person) = ""en"" )
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"SELECT ?name
WHERE {
  ?band ""The Fabulous Thunderbirds"".
  ?artist rdfs:label ""Nick Curran"".
  ?artist foaf:name ?name.
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?child a ns:Person ;
           ns:hasParent ?parent1 .
  ?parent1 a ns:Person ;
           ns:hasChild ?grandchild .
  ?grandchild a ns:Person ;
             ns:hasParent ?roger2 .
  ?roger2 a ns:Person ;
           ns:hasParent ?rogere .
  ?rogere a ns:Person ;
           rdfs:label ""Roger II of Sicily""@en
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"SELECT ?father ?royalty_child ?shadow_alter_ego
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent [ dbpedia:child ?royalty_child ];
    rdfs:label ""Baeda Maryam I"" .
  ?person dbpedia:hasAlterEgo ?shadow_alter_ego .
  ?person dbpedia:father ?father .
  ?person rdfs:label ""Yeshaq I"" .
}
LIMIT 1",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?recipient WHERE {
  ?recipient a dbpedia-owl:Person ;
               dbpedia2:birthPlace ?birthplace .
  ?birthplace a dbpedia-owl:Settlement ;
             rdfs:label ""Henry Clay Lewis""'s birthplace .
  ?recipient dbpprop:awardedBy ""United States Congress"" .
}",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?birthName
WHERE {
  ?artist_name StringMatch ""Bob Thompson"" .
  ?artist_name a dbpedia-owl:Musician .
  ?artist_name foaf:name ?artist_name .
  ?artist_name rdfs:label ?birthName .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"SELECT ?film WHERE {
  ?film a dbpedia-owl:Film ;
    dbpedia2:producer ?producer .
  ?producer rdfs:label ""Nat Levine"" .
}",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:OfficeHolder .
  ?person a dbpedia-owl:Politician .
  ?person rdfs:label ?name .
  ?name string-match ""Bruno Daniel Marie Paul Retailleau""
}",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","The SPARQL query will involve finding the spouse of the person identified by the name ""Arlene Lake"" in the DBpedia dataset. Here's how the query would look:

```sparql
SELECT ?spouse
WHERE {
  ?actor rdfs:label ""Arlene Lake""@en .
  ?actor dbpprop:film ""The Flying Deuces"" .
  ?actor dbo:hasSpouse ?spouse .
}
```

This query searches for a person labeled as ""Arlene Lake"" who acted in the film ""The Flying Deuces"" and then retrieves the spouse of that person.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","SELECT ?person WHERE {
  ?person a dbpedia:PartyMember ;
            dbpedia:P31 dbpedia:Republican_Party_(United_States).
  ?person dbpedia:spouse [ dbpedia:P31 ?wife ] .
  ?wife a dbpedia:Person ;
          dbpedia:actor [ dbpedia:P31 ?actor ] .
  ?actor a dbpedia:Actor ;
           dbpedia:role_in_film ""1000_Dollars_a_Minute"" .
  ?actor dbpedia:spouse [ dbpedia:P31 ?wife ] .
  ?wife rdfs:label ""Elizabeth McBride Shatner""@en
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"SELECT ?place WHERE {
  ?award a ns:Award ;
            ns:awardedBy <http://dbpedia.org/ontology/AcademyOfRecordingArtists> .
  ?award ns:hasOrigin ?origin .
  ?origin a ns:Location .
  ?origin ns:polygon ""POLYGON((X Y1 Z1 W1, X Y2 Z2 W2))"" .
  ?award ns:awardee <http://dbpedia.org/ontology/BobbyShmurda> .
  ?award ns:awardee <http://dbpedia.org/ontology/UncleMurda>
}
ORDER BY ?origin",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?charlesMartel_of_Anjou a ns:peoplePerson .
  ?charlesMartel_of_Anjou ns:father ?parent
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"SELECT ?child WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person ;
           dbpedia:hasChild ?child .
  ?child rdfs:label ""Cecilia Renata of Austria"" .
  ?parent1 rdfs:label ""Archduke Charles Joseph of Austria"" .
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"Given that DBpedia is our source of structured data, we can use SPARQL to query these relationships. However, the exact query might require iterative steps due to the complexity of lineage tracing. Here's a simplified approach:

1. Find Stephen V's predecessor.
2. Identify Stephen V's predecessor's child who became royalty.
3. Check if that child had a child and if that grandchild was also royalty.

Let's start with the first step:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?s a dbpedia-owl:Monarch; rdfs:label ""Stephen V of Hungary"" .
  ?s dbpedia-owl:precededBy ?predecessor .
}
```

This query will give us the predecessor of Stephen V.

Next, we need to find the child of the identified predecessor who became royalty. This might require additional joins and filters based on the specific lineage data available in DBpedia.

Finally, we need to trace the lineage further to see if there's a match with Charles Martel of Anjou, which would involve another complex query potentially involving multiple joins and constraints.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Robert Lamar Thompson"" .
  ?person foaf:name ""Sam Concepcion"" .
  ?person dbpprop:band ?band
}
LIMIT 1",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?artist WHERE {
  ?album a mb:Album ;
            mb:releaseDate ""2012-04-24"" ;
            mb:trackCount ""14"" .
  ?album mb:performer ?artist .
}",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?commander rdf:type dbpedia-owl:Commander.
  ?commander rdfs:label ""Siege of Padua commander"".
  ?child a dbpedia-owl:Royalty .
  ?child rdf:type foaf:Person .
  ?child rdfs:label ?child_label
}",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","SELECT ?father WHERE {
  ?person a dbpedia-owl:Monarch ;
            dbpedia-owl:hasParent ?parent .
  ?parent rdfs:label ""Charles V, Holy Roman Emperor""@en .
  ?person rdfs:label ""Catherine of Austria, Queen of Portugal""@en
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"SELECT ?entity WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ""ōmi province"" .
  ?war a dbpedia-owl:Conflict;
    dbpedia2:startYear 1540;
    dbpedia2:endYear 1547.
  ?person rdfs:label ""Yamaza Enjirō""@ja;
    foaf:name ""Yamaza Enjirō""@ja .
  ?war rdfs:label ""Toyotomi Hidenaga's war""@en .
}",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"SELECT ?birthPlace
WHERE {
  ?actor a dbo:Person ;
           rdfs:label ""Victor Saville""@en .
  ?actor dbpprop:birthPlace ?birthPlace .
}",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","SELECT ?parent1 ?parent2 WHERE {
  ?child Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne .
  ?child ns:father ?parent1 .
  ?child ns:mother ?parent2 .
  ?parent1 ns:parent ?grandparent1 .
  ?parent2 ns:parent ?grandparent2
}",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Musician;
    rdfs:label ?band_name .
  ?person foaf:givenName ?birth_name .
  ?band_name ns:member ?person .
  ?person ns:hasPlaceOfBirth [ a ns:Place ; rdf:value ""Florida"" ] .
  ?person rdfs:label ""Bobby Shmurda""@en .
  ?person ns:firstName ""Shawn"" .
  ?band_name rdfs:label ""Uncle Murda""@en .
}
ORDER BY ?birth_name",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"SELECT ?player ?season { 
  ?player a dbpedia:Footballer. 
  ?player foaf:memberOf [ a dbpedia:Sports_team ; dbpedia:club Dbpedia:VfL_Bochum ] .
  ?player dbpprop:playedFor ?teamInSeason .
  ?teamInSeason dbpprop:season ""2006-07""^^xsd:string .
  ?teamInSeason successorOf ?successorSeason .
  FILTER (lang(?season) = ""en"") 
}",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"The SPARQL query will use the DBpedia endpoint to search for these individuals and retrieve their death places. Here's how the query would be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?deathPlace WHERE {
  ?person a rdf:Resource.
  ?person rdfs:label ""Reed Howes""@en .
  ?person rdfs:label ""Carolyn Jones""@en .
  ?person rdfs:label ""Sal Mineo""@en .
  ?person wdt:P18 rdfs:label ?deathPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?manager
WHERE {
  ?manager ns:managerOfTeam ""sbv:vitesse"" .
  ?manager rdfs:label ?name .
  ?name rdfs:domain ""de"" . # Assuming 'de' denotes someone from Germany
  FILTER (lang(?name) = ""de"") # Ensuring the name is in German, indicating native status
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"To find the band member(s) of the producer of ""Nothing to Gein"", we can use the following SPARQL query:

```sparql
SELECT ?bandMember
WHERE {
  ?album <http://musicbrainz.org/artist/> ?producer .
  ?producer a <http://dbpedia.org/ontology/Producer> .
  ?producer rdfs:label ""Nothing to Gein"" .
  ?bandMember a <http://dbpedia.org/ontology/BandMember> .
}
```

This query selects the `?bandMember` resource for which there exists a relationship with a producer (`?album <http://musicbrainz.org/artist/> ?producer`) that is both an organization and a group (`?producer a <http://dbpedia.org/ontology/Producer>`), and where the producer is labeled as ""Nothing to Gein"".",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ?name.
  ?person wdt:P31 dbo:has_as_birthday Joey Jeremiah.
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?father
WHERE {
  ?person a :politician;
          :alumniOf ""Eton College"";
          :parentOf [ a :awardee; rdf:value ""Commander of the Royal Victorian Order"" ];
          :parentOf EdwardStanley,17thEarlOfDerby .
  ?person rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"SELECT ?work
WHERE {
  ?work a dbpedia-owl:Book .
  ?work dc:creator [ dbpedia2:hasName ""Bill Clinton"" ] .
}",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","SELECT ?workLabel ?politicianName ?residence ?warRole ?diseaseName ?event
WHERE {
  ?work a dbpedia:WrittenWork ;
            dbpedia:mainSubject ""It Takes a Village"" .
  ?politician a dbpedia:OfficeHolder ;
               dbpedia:office ""U.S. Secretary of State"" ;
               dbpedia:residence ""Chappaqua, New York"" .
  ?warRole a dbpedia:War ;
              dbpedia:role ""Commander in the war"" .
  OPTIONAL { ?politician rdf:type dbpedia:Politician }
  OPTIONAL { ?work rdfs:author ?politician }
  OPTIONAL { ?politician rdf:type dbpedia:U.S._Navy_Reserve }
  OPTIONAL { ?warRole rdfs:label ""disease"" }
  OPTIONAL { ?warRole rdfs:label ""societal event"" }
  FILTER (lang(?workLabel) = ""en"") .
  FILTER (lang(?politicianName) = ""en"") .
  FILTER (lang(?residence) = ""en"") .
  FILTER (lang(?diseaseName) = ""en"") .
  FILTER (lang(?event) = ""en"") .
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?awardee ?birthplace WHERE {
  ?awardee a dbpedia:Person.
  ?awardee dbpprop:awardedBy <http://anitaborg.org/awards/>.
  ?awardee dbo:countryOfBirth ""Japan"".
  ?<show_name> a dbpedia:Television_Series.
  ?<awardee_in_show> rdf:type dbpprop:AwardRecipientOf.
  ?<awardee_in_show> dbpprop:awardedBy ?<awardee>.
  ?<show_name> rdfs:label ""Anita Borg Institute Women of Vision Awards""@en.
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"The SPARQL query to retrieve this information from DBpedia would be:

```
SELECT ?birthplace
WHERE {
  ?actor Prosenjit Chatterjee.
  ?actor birthplace ?birthplace .
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:residencePlace ""Sofia"" .
  ?person foaf:birthplace ?birthplace .
}",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"SELECT ?birthPlace1 ?birthPlace2 ?birthPlace3
WHERE {
  ?person1 rdf:type dbpedia:Artist .
  ?person1 rdfs:label ""Cece Bell""@en .
  ?person2 rdf:type dbpedia:Politician .
  ?person2 rdfs:label ""Glenn Youngkin""@en .
  ?person3 rdf:type dbpedia:Person .
  ?person3 rdfs:label ""Vince Gilligan""@en .
  ?birthPlace1 rdf:type dbpedia:Location .
  ?birthPlace1 rdfs:label ?birthPlace1Label .
  ?birthPlace2 rdf:type dbpedia:Location .
  ?birthPlace2 rdfs:label ?birthPlace2Label .
  ?birthPlace3 rdf:type dbpedia:Location .
  ?birthPlace3 rdfs:label ?birthPlace3Label
}
ORDER BY ?birthPlace1Label, ?birthPlace2Label, ?birthPlace3Label",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?charlesParent a dbpedia-owl:Person ;
               rdfs:label ""Charles Martel of Anjou"" .
  ?philipDespot a dbpedia-owl:Person ;
               rdfs:label ""Philip, Despot of Romania"" .
  ?charlesParent father ?philipDespot.
  ?philipDespot spouse ?wife .
  ?parent a dbpedia-owl:Person;
           rdfs:label ?parentLabel .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?awardee_name ?medal_name ?war WHERE {
  ?awardee_person a dbpedia:Person;
    dbpedia:awarded Medal ?medal .
  ?medal rdfs:label ""Gillmore Medal""@en .
  ?awardee_person foaf:name ?awardee_name .
  OPTIONAL { ?awardee_person dbpprop:conflict ""American Revolutionary War"" }
  OR { ?awardee_person dbpprop:conflict ""World War I"" }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"SELECT ?team ?soccer_season ?sport_season WHERE {
  ?player Thomas Letsch.
  ?player wdt:P31 wd:Q12298 . # Thomas Letsch is a human
  ?soccer_club wdt:P41 ?team. # The soccer club team
  ?soccer_club rdfs:label ""Deutscher Fußball-Bundesliga"" . # Assuming Bundesliga as the soccer club season
  ?sport_season rdfs:label ""2010s"" . # Example sports season in the 2010s
  ?team wd:Q12345 ?sport_team. # The team is also a sports team
}",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"SELECT ?parent
WHERE {
  ?actor a dbpedia-owl:Actor;
         foaf:name ""Eugène Cattin"" .
  ?actor foaf:parent ?parent .
  OPTIONAL { ?actor rdfs:label ?profession . }
  
  ?actor2 a dbpedia-owl:Actor;
         foaf:name ""Allan Arbus"" .
  ?actor2 foaf:parent ?parent2 .
  OPTIONAL { ?actor2 rdfs:label ?profession . }
}",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"SELECT ?person
WHERE {
  ?child a :child_of ?grandparent .
  ?grandparent a :parent_of ?great-grandparent .
  ?great-grandparent a :child_of ?ancestor .
  ?ancestor a :offspring_of ?roger_ii .
  ?roger_ii a :father_of ?william_I
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"To retrieve this information, we can use a SPARQL query that searches for the relevant facts in DBpedia. Here's how we can structure our query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasDeath ?death .
  ?death a dbpedia:DeathEvent ;
    dbpedia:location ?deathPlace .
}
```

This query looks for individuals (`?person`) who have a `dbpedia:hasDeath` property linking to a `dbpedia:DeathEvent`, which in turn has a `dbpedia:location` property indicating the `?deathPlace`.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"SELECT ?university WHERE {
  ?university a dbpedia-owl:University .
  ?university rdfs:label ""Universidade Federal de Minas Gerais""@pt.
  ?university dbo:alumni Luiza_Erundina
}",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"The SPARQL query will look for the artist associated with the soundtrack ""Wizards of Waverly Place"" and filter out any non-musical artists or entities that are not explicitly identified as artists. Here is the SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist
WHERE {
  ?work rdf:type ns:Soundtrack.
  ?work rdfs:label ""Wizards of Waverly Place (soundtrack)"".
  ?artist a ns:MusicArtist .
  ?artist ns:hasWork ?work .
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","SELECT ?commander ?war ?event_show
WHERE {
    ?commander a :Commander;
        :led ?regiment .
    ?regiment a :MilitaryUnit ;
        :name ""2nd Dragoon Regiment"" .
    ?commander ns:childOf ?ferdinand .
    ?ferdinand a :Person ;
        :parent ?eleonore .
    ?eleonore a :Monarch ;
        :spouse ?husband .
    ?war a :War ;
        :commander ?commander .
    ?event_show a :TelevisionShow;
        :features ?war
}
WHERE {
    ?husband a :Person ;
        :name ""Ferdinand II, Holy Roman Emperor""
}",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?person WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ""United States Navy commander""@en .
  ?person ns:spouse ?authorSpouse .
  ?authorSpouse a ns:people.person .
  ?authorSpouse rdfs:label ""Pamela Paulsen""@en .
  ?authorSpouse ns:officeHolder ?officeHolder .
  ?officeHolder a ns:office .
}",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","SELECT ?tenant WHERE {
  ?person a dbpedia:OfficeHolder ;
            dbpedia2:office ?office .
  ?office a dbpedia:Building;
           dbpprop:residence ?residence .
  ?residence a dbpedia:Residence ;
             dbpprop:country ""Spain"" .
  ?person rdfs:label ""Álvaro Quirós""@es .
  ?person rdfs:label ""Alberto Núñez Feijóo""@es .
  ?office rdfs:label ""Spanish Socialist Workers' Party""@es .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"SELECT ?awardee
WHERE {
  ?awardee a dbpedia-owl:KnightCommanderOfTheOrderOfTheBath .
  ?awardee rdfs:label ?name .
  FILTER (lang(?name) = ""en"" )
}",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","SELECT ?parent ?child WHERE {
  ?child a ns:peoplePerson .
  ?child ns:father ?parent .
  ?parent ns:mother ?elvira .
  ?elvira a ns:peoplePerson .
  ?elvira ns:givenName ""Elvira"" .
  ?child ns:birthPlace ""Sicily"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?leader ?office ?location WHERE {
  ?leader a dbpedia-owl:PoliticalPartyMember ;
            dbppro:party dbpedia:Conservative Republican Party (Spain) .
  ?leader foaf:name ?name .
  ?party dbpedia:headquarters ?location .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","SELECT ?person WHERE {
  ?person a dbpedia:MusicalArtist ;
            dbpedia:bandMemberOf dbpedia:GS9 .
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?person dbo:nativeness dbpedia:Florida .
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"The SPARQL query will need to find the main actors of the movie ""Nat Levine."" Assuming ""Nat Levine"" is the title and not a person's name in this context, we can use the following query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor
WHERE {
  ?movie a rdf:Statement ;
            rdf:subject <http://dbpedia.org/resource/Nat_Levine> ; # Assuming ""Nat Levine"" is the title of the movie
            rdf:predicate rdfs:starring ;
            rdf:object ?actor .
}
```

This query selects the `?actor` from statements where the predicate is `rdfs:starring` and the subject is associated with the resource identified by `<http://dbpedia.org/resource/Nat_Levine>` (the movie ""Nat Levine"").",2,3,3,2,1,3,3,71,0,0,257,0,0.0,0
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"To retrieve this information from DBpedia, we need to construct a SPARQL query that searches for the songwriter of the song ""Boom Shack-A-Lak"". Assuming that the songwriter's name is stored in a property like `lyricsBy` or `composer`, the query might look something like this:

```sparql
SELECT ?writer
WHERE {
  ?song ""Boom Shack-A-Lak"" rdfs:label ?title .
  ?song lyricsBy ?writer .
}
```

This query selects the value of the variable `writer` for all songs labeled as ""Boom Shack-A-Lak"".",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","A SPARQL query to retrieve this information would involve querying a database that contains such data, like DBpedia. Assuming that DBpedia has structured this information in a way that allows us to find the parents of a person by their title and place of birth, the query might look something like this:

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ""Patrick Bowes-Lyon"";
    dbpedia-owl:birthPlace ""Middlesex"";
    dbpedia-owl:title ""15th Earl of Strathmore and Kinghorne"".
  ?parent a foaf:ParentOf ?person.
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"SELECT ?father WHERE {
  ?child a dbpedia:Royalty;
  ?child parents [ dbpedia:hasParent ?parent ];
  ?parent a dbpedia:Person;
  ?parent dbpedia:hasChild ?child;
  ?parent ns:familyMemberOf [ dbpedia:isPartOf dbpedia:Austrian_House_of_Habsburg ]
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:Musician;
    dbpedia:origin dbpedia:Florida .
  ?artist rdfs:label ""Bobby Shmurda""@en .
  ?artist foaf:musicalArtist ?associatedArtist .
  ?associatedArtist a dbpedia:Musician;
    dbpedia:origin dbpedia:Florida .
  ?bandMember a dbpedia:BandMember .
  ?artist rdfs:seeAlso ?band .
  ?band a dbpedia:Band .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?character a ns:FilmCharacter;
    ns:hasAlterEgo ?alterEgo .
  ?alterEgo rdfs:label ""The Shadow""@en
}",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","SELECT ?team WHERE {
  ?athlete a dbpedia:Athlete.
  ?athlete foaf:wasBornOn ""1955-02-22"".
  ?athlete dbpprop:playedFor ?team .
  ?sergio_aguero a dbpedia:Sergio_Aguero;
    dbpprop:clubMemberOf ?team
}
AND
{
  ?manager a dbpedia:SoccerManager.
  ?manager foaf:bornOn ""1979-11-03"".
  ?manager dbpprop:managedTeam ?team .
  ?aguerote a dbpedia:Sergio_Aguero;
    dbpprop:playedFor ?team
}
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?commander WHERE {
  ?show rdf:type tv:TelevisionShow .
  ?show rdfs:isDefinedBy <http://purl.org/dc/elements/1.1/> .
  ?conflict a dbpedia-owl:MilitaryConflict .
  ?conflict hasPart ?battle .
  ?battle a dbpedia-owl:Battle .
  ?battle commander ?commander .
  ?battle rdfs:label ""War of the Oranges"" .
  OR ?battle rdfs:label ""Peninsular War"" .
  FILTER ( ?show IN [ ?s ] )
}",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","SELECT ?person ?war WHERE {
  ?person foaf:name ""Koichirō"" .
  ?person rdfs:label ?nameLabel .
  ?war a owl:Thing .
  ?war rdfs:label ?warLabel .
  ?person rdf:type dbpedia-owl:Person .
  ?person dbpprop:conflict ?war
}
LIMIT 1",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasRole dbpedia:Producer ;
            dbpedia2:name ""Linda Sue Cobb""@en .
  ?person dbpedia2:spouse ?spouse .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"The SPARQL query will need to identify the band ""Khlyst"" and then extract the name of any member who is tagged as a ""musical artist"". Assuming that DBpedia uses appropriate properties for these relations, the query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?member
WHERE {
  ?band rdf:type dbpedia-owl:MusicBand .
  ?band rdfs:label ""Khlyst"" .
  ?member a dbpedia-owl:MusicalArtist .
  ?member rdf:type dbpedia-owl:BandMember .
  ?band dbpedia-owl:hasMember ?member
}",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?father.
  ?father a dbpedia:Person;
    rdfs:label ""Myat Hpone Pyo""@en;
    dbpprop:isRoyalty true.
  ?father dbpprop:spouse ?spouse.
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","SELECT ?politician WHERE {
  ?politician a dbpedia-owl:Politician .
  dbo:countryOfBirth(?politician) ""Colombia"" .
  dbo:politicalParty(?politician) ?party .
  ?party rdfs:label ""Unidad Democrática"" . # Assuming Roy Leonardo Barreras Montealegre's party is Unidad Democrática
}",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"SELECT ?office WHERE {
  ?person a ns:Person ;
            ns:hasOffice ?office .
  ?person rdfs:label ""Mariano Rajoy""@es
}",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
  dbpedia2:associatedBand ?band .
  ?band rdfs:label ?bandLabel .
  ?band ns:instance [ a dbpedia:MusicGroup ;
                    rdfs:label ?groupLabel ] .
  ?altEgo a dbpedia:FictionalCharacter;
  dbpedia2:createdBy ?creator .
  ?creator ns:inProperty dbpedia:givenName ""Walter B. Gibson"" .
  ?person rdfs:seeAlso [ a dbpedia:CreativeWork ;
                      rdfs:label ""The Shadow"" ] .
}",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor1 ?actor2
WHERE {
  ?film ""ATL"".
  ?character Shelby Oaks.
  ?actor1 ns:actor ?character1 .
  ?actor2 ns:actor ?character2 .
  ?character1 rdf:type mo:Solo.
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?child
WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasFather dbpedia:Maximilian_I_Holy_Roman_Emperor .
  ?child a dbpedia:Person;
          dbpedia:hasParent ?parent
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person foaf:givenName ?birth_name .
  ?person dbo:nativePlace ""Florida"" .
}",4,5,5,3,2,3,3,71,0,0,59,0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","SELECT ?player ?role1 ?role2 WHERE {
    ?player rdfs:label ""Player in All or Nothing: Manchester City""@en .
    ?player a ns:soccerPlayer .
    ?player a ns:athlete .

    ?player ns:birthDate ""1955-02-22""^^xsd:date .
    ?player rdfs:label ""Athlete born on 1955-02-22""@en .

    ?player ns:birthDate ""1979-11-03""^^xsd:date .
    ?player a ns:soccerPlayer .
    ?player a ns:soccerManager .
}",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","SELECT ?person ?profession ?associated_artist
WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?person dbpprop:associatedBandMember ?associated_artist }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?producer WHERE {
    ?movie a dbpedia:Film;
        dbpedia:production_company ?producer .
    ?producer rdfs:label ?name .
    ?producer ns:altLabel ""The Shadow"" .
    ?movieProperty dbpedia:yearProduced 1937 .
    ?movieProperty dbpedia:name ""A Star Is Born (1937 film)"" .
    ?movieProperty dbpedia:name ""The Adventures of Tom Sawyer (1938 film)"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"SELECT ?player
WHERE {
  ?player ns:memberOf [ ns:label ""Valencia CF"" ] .
  ?player rdfs:label ?actorLabel .
  ?player foaf:name ?playerName .
  ?film rdfs:subject ?movieTitle .
  ?film dc:creator ""Manuel Huerga"" .
  ?player rdf:type [ owl:sameAs ?soccerPlayerType ] .
}
LIMIT 1",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"SELECT ?office WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:officeName ?office .
  ?person rdfs:label ""Alberto Núñez Feijóo"" .
}",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?series rdfs:label ""The Golden Master"".
  ?series dc:title ?title .
  ?character foaf:alterEgoName ?alterEgo
}",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"SELECT ?tenant WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@es .
  ?leader foaf:name ""Alberto Núñez Feijóo"" .
  ?party rdfs:member ?leader .
  ?tenantedOffice rdfs:label ""Spain""@en .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"SELECT ?office WHERE {
  ?politician a :politician;
  :partyMemberOf ?politicalParty;
  ?politicalParty rdfs:label ""Spanish Socialist Workers' Party"";
  ?politician dbpedia-owl:memberOf ?officeHolder;
  ?officeHolder a :officeHolder;
  :electedIn ""2003 Madrid City Council election""
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person WHERE {
  ?person a dbppro:Person;
    dbppro:fieldOfStudy ?field .
  ?field rdfs:label ""Your Specific Field"" .
}",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"SELECT ?tenant
WHERE {
  ?city rdfs:label ""Madrid"".
  ?tenant ns:tenancyOf ?city .
}",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"SELECT ?commander
WHERE {
  ?commander a :Person;
    :hasMilitaryRank ?rank;
    :servedIn ?war;
    :isAffectedBy ?disease;
    :participatedIn ?event .
  ?commander :marriedTo _:spouse .
  _:spouse a :Person;
    :isAuthorOf ?book .
  ?book a :WrittenWork;
    :hasAuthor ?author .
  ?author a :Politician;
    :holdsOffice ?office .
  ?book rdf:type :Book
}
ORDER BY ?commander",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"SELECT ?work WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Ethan Iverson""@en .
  ?work rdfs:label ?workLabel .
  ?person dbo:associatedBandOrArtist ?work
}",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","The SPARQL query will involve querying the DBpedia dataset for information about Eric Clapton and The Fabulous Thunderbirds. We'll use the `dbpedia-owl` namespace to find band members and their bands.

```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?member a dbpedia-owl:Musician;
            dbpedia-owl:associatedBand ?band .
  ?band rdfs:label ?band_name .
  ?member foaf:name ""Eric Clapton"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","SELECT ?person
WHERE {
  ?person a dbpedia:Artist .
  ?person ns:regionBorn dbpedia:CentralRegion .
  ?person rdfs:label ?birthName .
  ?person dbpprop:occupation dbpprop:Writer .
  ?person dbo:featuredInAlbum ""The Live Anthology"" .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?author
WHERE {
  ?politician a :OfficeHolder;
    a :Politician .
  ?politician rdfs:label ""North Carolina Air National Guard Commander""@en .
  ?book a :WrittenWork ;
    rdfs:author ?author .
  ?book rdfs:label ""Promise Me, Dad""@en .
}",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","SELECT ?commander ?political_party WHERE {
  ?commander ns:commanded ""Pickett's Charge"" .
  ?commander a :MilitaryOfficer .
  ?political_party a :PoliticalParty .
  ?political_party rdfs:label ""Westport, Connecticut"" .
  FILTER (lang(?political_party) = ""en"") 
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"SELECT ?country WHERE {
  ?person ns:givenName ""Daniel"" .
  ?person ns:familyName ""Elahi Galán"" .
  ?person rdfs:label ?country
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"The SPARQL query would need to:
1. Identify all events that Robert Calder was involved in.
2. Filter these events to only include those that are classified as societal events.

Given the structure of DBpedia and its data, a possible SPARQL query could be:

```sparql
SELECT ?eventLabel ?force WHERE {
  ?event a dbpedia-owl:Event ;
            dbppro:hasParticipant [ a dbo:Person ; dbo:name ""Robert Calder"" ] .
  ?event rdfs:label ?eventLabel .
  ?event dbpprop:type ""societal event"" .
  OPTIONAL { ?event dbpprop:force ?force }
}
```

This query does the following:
- Selects events where Robert Calder is a participant (`dbo:name ""Robert Calder""`).
- Filters these events to only include those classified as societal events (`dbpprop:type ""societal event""`).
- Optionally includes the force of the event if available.",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"SELECT ?residence WHERE {
  ?person a dbppro:Athlete.
  dbppro:cityOfOrigin ?person ""Łódź"".
  ?person dbppro:nationality ""Poland"".
  ?person rdfs:label ?name.
  FILTER (regex(str(?name), ""Łódź"")).
  ?person dwc:birthPlace ?residence.
}",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"The SPARQL query to retrieve this information would look something like this:

```sparql
SELECT ?person_name ?artist_name 
WHERE {
  ?person rdf:type dbpedia-owl:Person .
  ?person rdfs:label ""Pacely""@en .
  ?person rdfs:label ""Joey B""@en .
  ?person dbpprop:musicalArtist ?artist_name .
}
```

This query searches for individuals (`?person`) who are labeled as ""Pacely"" and ""Joey B"" in English, and then retrieves the associated musical artist (`?artist_name`) for each of these persons.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?child WHERE {
  ?child a :Person.
  ?child :father ?parent .
  ?parent a :Actor .
  ?child :birthPlace ""New York"" .
  FILTER (STRSTARTS (?parent, ""Shirley Stoler""))
}",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty ;
         foaf:mother <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> .
}",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","Given the complexity and the need for specific relationships, we will use SPARQL to query the DBpedia dataset. Here's the constructed SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?parent_of_child WHERE {
  ?child rdf:type dbpedia-owl:Actor .
  ?child dbpedia-owl:appearedIn dbpedia:P1477.  # Herschel Bernardi's movie
  ?parent_of_child a dbpedia-owl:Person .
  ?parent_of_child rdf:type dbpedia-owl:Photographer .
  ?child rdfs:father ?parent_of_child .
}
```

This query does the following:
- Selects the `?parent_of_child` who is both a person and a photographer.
- Ensures that the child (`?child`) is an actor (`dbpedia-owl:Actor`).
- Matches the child appearing in the movie with Herschel Bernardi (`dbpedia:P1477`).",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?commander WHERE {
  ?commander a dbpedia-owl:WarLeader;
    dbpedia2:conflict ""Great Turkish War"";
    dbpprop:ledMilitaryAgainst ?opponent .
  ?opponent a dbpedia-owl:Entity ;
    rdfs:label ""George Ducas"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","SELECT ?actor 
WHERE {
  ?actor a ns:Person ;
        rdfs:label ?actorLabel .
  ?actor ns:role ?shadowRole .
  ?actor ns:role ?tvShowRole .
  ?shadowRole rdfs:label ""The Shadow"" .
  ?tvShowRole rdfs:label ""Richard E. Grant"" .
}",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasOccupation ?occupation .
  ?occupation rdfs:label ""Musical Artist"" .
  ?person ns:name ""Stuart Tosh"" .
}",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace ?countryOfWork
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasSpouse ?spouse.
  ?spouse a dbpedia:Character.
  ?person rdfs:label ""Winston Chang""@en.
  OPTIONAL { ?person ns:birthPlace ?birthPlace }
  OPTIONAL { ?spouse ns:countryOfWork ?countryOfWork }
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","A SPARQL query would look for a resource that matches the title ""George Ducas"" and then retrieves the 'author' property of that resource. Assuming ""George Ducas"" is the name of a specific work, the query might be:

```sparql
SELECT ?work ?author 
WHERE {
  ?work rdfs:label ""George Ducas""@en .
  ?work dc:creator ?author .
}
```

This query searches for resources labeled ""George Ducas"" and retrieves the creator (author) of those resources.",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"SELECT ?parent WHERE {
  ?awardee award ""Rodney Lees"" .
  ?politicianFather father ""Arthur Stanley"" .
  ?awardee ns:childOf ?politicianFather
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?deathPlace
WHERE {
  ?actor dbpprop:role ""Richard Dix"" .
  ?actor dbpprop:deathPlace ?deathPlace .
  
  ?actor dbpprop:role ""Bobby Driscoll"" .
  ?actor dbpprop:deathPlace ?deathPlace .
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?party
WHERE {
  ?politician a ns:Organization .
  ?politician a ns:PoliticalParty .
  ?politician rdfs:label ""George Savage""@en .
  ?politician mayoralElection ""1964""^^xsd:gYear .
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"The SPARQL query would look for the profession of an individual named ""Eugène Cattin"". Assuming there is a person with this name in DBpedia, the query might resemble:

```sparql
SELECT ?profession 
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasName ""Eugène Cattin"" .
}
```

This query selects the profession (`?profession`) of any `dbpedia-owl:Person` entity with the name ""Eugène Cattin"".",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?bandMember
WHERE {
  ?bandMember a dbpedia:Musician .
  ?bandMember dbpprop:isBandMemberOf dbpedia:The_Fabulous_Thunderbirds .
  ?bandMember dbpprop:associatedWith dbpedia:Eric_Clapton .
  ?bandMember rdfs:label ""Nick Curran"" .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","SELECT ?person ?party
WHERE {
  ?person a dbpedia-owl:OfficeHolder .
  ?person a dbpedia-owl:Politician .
  ?person rdfs:label ?name .
  ?person dbpprop:politicalParty ?party
}
LIMIT 2",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"The SPARQL query will involve:
1. Identifying Paulus Powell's birth place.
2. Using that information to query for the current governor of that region.

Assuming Paulus Powell is from a specific region (let's say, for example, ""Chicago"" as an illustrative case), the SPARQL query might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 dbpedia:BornIn ?birthPlace.
  ?birthPlace a dbpedia:Region.
  ?birthPlace rdfs:label ""Chicago"".
  ?governor a dbpedia:Politician;
    dbpedia:P39 dbpedia:GovernorOf ?birthPlace.
}
```

This query assumes that Paulus Powell is born in ""Chicago"", and then it looks for the governor of Chicago. The labels and properties used here are illustrative and may need adjustment based on the actual birth place of Paulus Powell.",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"SELECT ?spouse ?child WHERE {
  ?parent a :Parent;
    :hasChild ?child .
  ?child a :Person;
    :hasSpouse ?spouse .
  ?child rdfs:label ""Min Hla Htut of Pyakaung"" .
  ?parent ns:familyMember ?child
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"SELECT ?band_name WHERE {
  ?band_member a dbpedia-owl:Musician;
    rdfs:label ""Eric Clapton""@en .
  ?band_member foaf:group ?band .
  ?band rdfs:label ?band_name .
} AND {
  ?band_member a dbpedia-owl:Musician;
    rdfs:label ""Kim Wilson""@en .
  ?band_member foaf:group ?band .
  ?band rdfs:label ?band_name .
}",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty;
  dbpedia2:parent [ dbpedia2:hasParent ?albrecht ].
  ?albrecht a dbpedia:Person;
  dbpedia2:hasChild ?child .
  ?child a dbpedia:Person;
  dbpedia2:hasParent [ dbpedia2:hasParent ?helenaAndMargarete ].
  ?helenaAndMargarete a dbpedia:Person;
  dbpedia2:hasParent [ dbpedia2:hasParent ""Archduchess Helena of Austria"" ].
  dbpedia2:hasParent [ dbpedia2:hasParent ""Archduchess Margarete Sophie of Austria"" ]
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"The SPARQL query will use the DBpedia endpoint to retrieve this information. Here is the structured query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?birthPlace
WHERE {
  ?person a rdf:Resource .
  ?person rdfs:label ?name .
  ?person ns:birthPlace ?birthPlace .
}
```

This query selects the resource (which represents a person) and their birth place (`?birthPlace`) from the DBpedia dataset.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasMilitaryCareerMemberRole dbpedia:2nd_Dragoon_Regiment_France ;
            dbpedia:isFatherOf dbpedia:Eleonore_of_Austria .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:deathDate ?deathDate .
  ?deathDate a dbpprop:DeathEvent .
  ?person rdfs:label ""Carolyn Jones""@en .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","SELECT ?child_name ?father_name ?event_name ?tv_show_name
WHERE {
  ?child_name a dbpedia-owl:Person ;
               dbpprop:hasFather ?father_name .
  ?father_name a dbpedia-owl:Person ;
               rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child_name dbpprop:participatedIn ?event_name .
  ?event_name a dbpprop:Event ;
                 rdfs:label ""French Revolution""@en .
  ?event_name dbpprop:involvedMilitaryUnit ?military_unit .
  ?military_unit a dbpprop:MilitaryUnit ;
                rdfs:label ""2nd Dragoon Regiment (France)""@en .
  ?child_name dbpprop:participatedIn ?societal_event .
  ?societal_event a dbpprop:SocietalEvent .
  ?child_name appear_in ?tv_show_name .
  ?tv_show_name a dbo:TelevisionShow
}
ORDER BY ?child_name",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?parent1 ?parent2
WHERE {
  ?eugene_cattin parents ?parent1 .
  ?mariclare_costello spouse ?spouse_of_mariclare .
  ?spouse_of_mariclare children ?child_of_spouse .
  ?child_of_spouse parents ?parent2
}",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Decedent ;
            geo:locatedIn dbpedia:Taipei .
}",1,1,2,1,1,3,2,20,0,0,220,0,0.0,0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"SELECT ?actor WHERE {
  ?actor a dbpedia:Actor .
  ?actor foaf:name ""Shadow Actor"" . # Placeholder for actual actor name
  ?actor rdfs:seeAlso [ dbpedia:film_ATL ] .
  ?actor dbpedia:roleInFilm some [ a dbpedia:Film; dbpedia:title ""Movie Connecting All Individuals"" ] .
  FILTER (fn:contains(STR(?actor), ""Smartbomb"")) .
}",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","SELECT ?spouse
WHERE {
  ?actor dbo:role ""1,000 Dollars a Minute"" .
  ?actor dbo:birthName ""Harriette Arlene Lake"" .
  ?actor rdfs:member [ a rdf:Property; owl:sameAs rdf:Resource ] .
  ?actor rdf:type dbpprop:Republican_Party_United_States_member .
  ?spouse a dbo:Person .
  ?actor dbo:marriedTo ?spouse
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"SELECT ?awardee
WHERE {
  ?award a rao:Gillmore_Medal ;
         rao:awardedYear ?year .
  FILTER (?year >= 1957)  # Assuming the first Gillmore Medal was awarded in 1957
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"To find this information, we need to:
1. Identify individuals associated with the alter ego ""The Shadow"".
2. Check if they have been involved in the production of the album ""Lasso the Moon"".
3. Verify their involvement in a film titled ""Lasso the Moon"".

Given that detailed personal data about every individual's involvement in such specific projects might not be directly available in DBpedia, we will make some assumptions based on common knowledge and typical roles in media productions.

Assuming the professional is an actor or musician known for such roles:
1. We search for individuals linked to ""The Shadow"" alter ego.
2. We look for their involvement in the album ""Lasso the Moon"".
3. We verify their film credits, specifically looking for a film titled ""Lasso the Moon"".

Here's a SPARQL query that attempts to capture this information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbpedia-owl:Actor .
  ?actor rdfs:label ""The Shadow""@en .
  ?actor foaf:made dbpedia:Lasso_the_Moon.
}
```

This query selects actors (`?actor`) who have the label ""The Shadow"" in English and were involved in creating the album ""Lasso the Moon"".",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"SELECT ?person WHERE {
  ?charlesSpouse spous :spouse ?person .
  ?charlesSpouse father :parent ?grandparent .
  ?grandparent parent :parent ?greatGrandparent .
  ?greatGrandparent ns:label ""Philippe I, Duke of Orléans"" .
  ?person ns:label ""Marie Louise d'Orléans""
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","SELECT ?party
WHERE {
  ?party rdfs:label ""ruling party"" .
  ?party rdf:type owl:Thing .
  ?party foaf:organization [ a owl:Organization; rdfs:label ""Political Party""@en ] .
  ?party ns:locatedIn [ a ns:Location; rdfs:label ""Westport, Connecticut""@en ] .
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?band_name
WHERE {
  ?band rdfs:label ?band_name .
  ?band ns:member[foaf:name ""Kim Wilson""] .
  OPTIONAL { ?band ns:hasMember [foaf:name ""Nick Curran""] }
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player WHERE {
  ?player a dbpedia:Footballer .
  ?player rdfs:label ""Juan Carlos Molina""@es .
  UNION
  ?player a dbpedia:Footballer .
  ?player rdfs:label ""Sergio Agüero""@es
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Musician ;
            dbpprop:associatedBand dbpedia:The Zombies .
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?person ?party WHERE {
  ?person a dbpedia-owl:Politician .
  ?person rdfs:label ""Roy Leonardo Barreras Montealegre""@es.
  ?person foaf:birthPlace ""Colombia"" .
  ?person rdfs:member [ a owl:Organization; rdfs:label ""Partido Liberal Colombiano""@es ] .
}",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person
WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:child [ owl:oneOf ?child1 ] .
  ?child1 a dbpedia:Person .
  ?child1 rdfs:parent [ owl:sameAs ?archduke ] .
  ?archduke a dbpedia:Person .
  ?archduke rdfs:father ""Archduke Charles Louis of Austria"" .
  ?archduke rdfs:mother [ owl:sameAs ?archduchess ] .
  ?child1 rdfs:parent [ owl:sameAs ?precedessor ] .
  ?precedessor a dbpedia:Person .
  ?precedessor rdfs:child ""Carl, Duke of Württemberg"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","SELECT ?entity WHERE {
  ?entity a dbpedia-owl:Location ; dbpprop:name ""Charleston, South Carolina"" .
}

AND
SELECT ?awardee ?war WHERE {
  ?awardee rdfs:label ?awardee_label .
  ?awardee rdfs:seeAlso ?awardee_dbpedia .
  ?war a dbpedia-owl:Conflict ; dbpprop:name ""War of 1812"" .
  ?awardee rdf:type dbpprop:Person .
  ?awardee rdfs:label ?awardee_label .
  FILTER (regex(str(?awardee_label), ""Amasa Tracy"")) .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor 
WHERE {
  ?actor a :Person .
  ?actor ns:hasParent ?parent .
  ?parent ns:hasChild ?child .
  ?child a :Person; ns:hasParent ?grandparent .
  ?grandparent a :Person; ns:isFromCity ""Los Angeles, California"" .
  ?actor rdfs:label ?actor_label .
  FILTER (regex(str(?actor_label), "".*Arbus"")) .
  ?movie a :FilmWork .
  ?actor ns:starIn ?movie
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionYear 1989;
    dbpedia:castMember ?actor.
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"")  # Assuming we want the English label
}",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"SELECT ?theme WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:nationality ""Pakistani"" ;
            foaf:name ""Anumta Qureshi"" .
  ?show a dbpedia-owl:TelevisionShow ;
         dbpedia-owl:hasMainActor ?person .
}
LIMIT 1",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?entity ?date WHERE {
    ?entity foaf:founderDate ?date.
    ?date rdfs:label ""1955-12-02"".
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?person a ns:people.person;
  ?person rdfs:label ""Karl Gustav von Baggovut"" .
  ?person a ns:people.person;
  ?person rdfs:label ""Alexander Lvovich Davydov"" .
  ?war a ns:owl.war; rdfs:label ?war_label .
  ?war ns:partOf ns:history.Napoleonic_Wars
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"Given that we don't have direct access to DBpedia's latest data, I'll construct a hypothetical SPARQL query based on typical information that might be available in such a database:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?actor a ns:Actor ;
           foaf:name ""Unknown Actor Name"" ; # Replace with the actual name of the actor
           dbpedia2:role_in_film ""High Society Blues"" .
}

PREFIX dbo: <http://dbpedia.org/ontology/>

# Find if the identified actor has produced a movie
SELECT ?actor ?movie WHERE {
  ?actor a dbo:FilmProducer ;
         dbo:producedFilm ?movie .
}
```

This query first selects the actor who played in ""High Society Blues,"" then checks if this actor is also a FilmProducer in DBpedia to see if they have produced any movies.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"SELECT ?bandMember
WHERE {
  ?artist ""Mark Eitzel"" .
  ?artist rdfs:member ?bandMember .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","SELECT ?child WHERE {
  ?child a :royalty .
  ?child a :office_holder .
  ?child father :roger_ii_of_sicily .
  ?child mother :matilda_of_scotland
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","The SPARQL query will need to find the actor related to the album ""Lasso the Moon"" using DBpedia's resources. Assuming the actor's name is ""John Doe"" (as an example, the actual name should be retrieved from the data), the query would look like this:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?actor
WHERE {
  ?album dbpprop:lyrics ""Lasso the Moon"".
  ?album a dbpprop:Film.
  ?actor rdfs:label ?actorLabel .
  ?actor dbpprop:role ?role .
  ?role a dbpprop:ProfessionalRole .
}
```

This query selects the actor (`?actor`) associated with the album ""Lasso the Moon"" which is also a film and has a professional role.",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?artist ?location WHERE {
  ?artist a dbpedia-owl:MusicalArtist .
  ?artist rdfs:label ?name .
  ?location a dbpedia-owl:Settlement .
  ?location rdfs:label ?locationName .
  ?location geo:locatedIn ?geoLocation .
  ?name rdfs:label ""English"" .
  ?artist ns:nativeOrigin ?geoLocation .
  ?artist ns:musicGenre ""Pop music"" .
  ?location ns:hasArtist ?artist
}
LIMIT 1",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?spouse
WHERE {
  ?work a dbpedia:Book .
  ?work rdfs:author [ a owl:NamedIndividual; foaf:name ""Hillary Clinton"" ] .
  ?work rdfs:subject [
    a dbpedia:Event; dbpedia-ont:instance [ rdf:type owl:Thing; rdfs:label ""Third Taiwan Strait Crisis"" ];
    dbpedia-ont:partOf [ a dbpedia:EventProperty; rdfs:label ""U.S. presidential active duty military involvement"" ] 
  ] .
  ?politician a dbpedia:OfficeHolder .
  ?politician a dbpedia:Politician .
  ?author rdfs:author ?spouse .
}",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"A SPARQL query to retrieve this information from DBpedia would involve using the `dbpedia-owl` namespace to search for the character and then link that character to the corresponding actor. Here's how the query might look:

```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?character a dbpedia-owl:Character ;
               dbpedia-owl:hasActor ?actor .
  ?character rdfs:label ""The Golden Master""@en .
}
```

This query selects the `actor` of any `Character` with the label ""The Golden Master"" in English.",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?father WHERE {
    ?child a :politician .
    ?child ns:father ?father .
    ?child rdf:type :Person .
    ?child rdfs:label ""Victor Stanley""@en .
    ?child ns:parent ?parent .
    ?parent a :Person .
    ?parent ns:child ?child
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","SELECT ?writer WHERE {
  ?work a dbpedia-owl:Work ;
            dbpedia-owl:author ?writer .
  ?khmelnytsky a dbpedia:Person ;
               dbpedia:pseudonym ""Yurii Khmelnytsky"" ;
               dbpedia:role ""Commander in Great Turkish War"" .
  ?great_turkish_war a dbpedia:Event ;
                    dbpedia:partOfPeriod ""Great Turkish War"" .
  ?work dbpedia:subject ?great_turkish_war .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?parent archduchess margareteSophieOfAustria .
  ?grandchild predecessorOf ?childOfPhilippAlbrecht .
  ?childOfPhilippAlbrecht a childOf philipAlbrechtDukeOfWurttemberg
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?residence WHERE {
    ?mmanuel pinto da costa a nfo:officeHolderOf nfo:Madrid_City_Council_Election_2003 .
    ?mmanuel a nfo:Politician .
    ?mmanuel rdfs:label ""Manuel Pinto da Costa"" .
    ?mmanuel ns:tenantOf ?residence
}",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?leader ?office WHERE {
  ?politician a :PoliticalParty ;
               :name ""Miguel Maura"" .
  ?leader a :Politician ;
          :party ?politicalParty .
  ?politicalParty a :PoliticalParty ;
                 :name ""Partido Popular"" .
  ?leader :officeLocation ?office .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?spouse
WHERE {
  ?father a dbpedia:Royalty;
  ?father ns:father ?son;
  ?son a dbpedia:Prince;
  ?son ns:father ?grandfather.
  ?grandfather a dbpedia:Person;
  ?father ns:parent ?grandfather.
  FILTER (lang(?father) = ""en"")  # Assuming we are looking for information in English
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","SELECT ?parent WHERE {
  ?earl Edward Stanley ;
  ?father ?parent .
  ?parent a ns:Person ;
  rdfs:label ""Edward Stanley""@en
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?person rdfs:label ""Min Hla Htut of Pyakaung""@en .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?person WHERE {
  ?childGrandchild <http://dbpedia.org/property/isChildOf> ?grandparent .
  ?parentOffspring <http://dbpedia.org/property/isParentOf> ?royalty .
  ?grandparent <http://dbpedia.org/property/isChildOf> ?bele_IV .
  ?parentOffspring = ?childGrandchild
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","Given that DBpedia doesn't directly provide current local government party affiliations and detailed personal relationships, we'll assume hypothetical data for the purpose of demonstrating how a query might look. Here's a simplified example:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?party_member ?spouse_name
WHERE {
  ?party_member a dbpedia-owl:PoliticalOfficeHolder ;
                 dbpedia-owl:office dbpedia:Mayor_of_Central_Louisiana .
  ?actor a dbpedia:Person ;
            dbpedia:role dbpedia:Actor_in_1_000_Dollars_A_Minute .
  ?actor dbo:spouse ?spouse .
  ?party_member dbo:isMemberOfParty ?ruling_party .
  ?ruling_party rdfs:label ""The Party"" .  # Hypothetical ruling party
}
```

This query assumes that:
- There is a `Mayor_of_Central_Louisiana` office in DBpedia.
- The actor of ""1,000 Dollars a Minute"" has a spouse node linked to them.
- The ruling party in Central, Louisiana is hypothetically labeled as ""The Party.""

Please note that this query is illustrative and may not work directly due to the lack of specific data in DBpedia about local political parties and detailed personal relationships.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","SELECT ?bandMemberLabel WHERE {
  ?bandMember a dbpedia:Musician;
  dbpprop:associatedWithPerson dbpedia:Nicholas_Michael_Curran .
  ?bandMember rdf:type dbpedia:Bands_membre
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","SELECT ?commander_name ?successor_name ?author
WHERE {
  ?commander rdf:type dbpedia:Commander .
  ?commander rdfs:label ?commander_label .
  ?commander_work a dbpedia:Work ;
               rdfs:author ?author_name .
  ?successor rdf:type dbpedia:OfficeHolder .
  ?successor rdfs:label ?successor_label .
  ?commander rdfs:member ?successor .
  ?author rdfs:label ?author_name .
  ?commander_work dbo:conflict dbpedia:Russo_Polish_War_1654–1667 .
  ?author foaf:name ""George Ducas"" .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","To retrieve this information from DBpedia, we need to:
1. Query for the producer of the song ""What You Know"" by T.I.
2. Search for a movie that includes an actor with the given last name.

Here's how we can structure the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?producer_name ?actor_name WHERE {
  ?song dbpedia:artist ""T.I."" .
  ?song dbpedia:producer ?producer .
  ?movie dbpedia:filmTitle ""What You Know"" .
  ?movie dbpedia:castMember ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Assuming we want English names
}
```

This query does the following:
- Selects the producer name (`?producer_name`) and actor name (`?actor_name`) of the song ""What You Know"" by T.I.
- Filters for movies titled ""What You Know"" and retrieves the cast members (actors) from those movies.
- Uses `lang(?actor_name) = ""en""` to ensure we get English names.",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"SELECT ?person WHERE {
  ?person a dbpedia:Writer .
  ?hu_jieqing foaf:spouse ?person .
  ?hu_jieqing dbpedia:has_name ""Hu Jieqing""
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor rdfs:label ?actorLabel .
  ?actorLabel ns:match ""politician"" .
  FILTER (lang(?actorLabel) = ""en"") 
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?artist WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ xsd:dateOf ""1985-01-01"" ] .
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person dbpprop:musicalArtist ?artist
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relevant individuals and their relationships. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia-owl:Child ;
            dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           rdfs:label ""Duke Philipp of Württemberg"" .
  ?child2 a dbpedia-owl:Person ;
          rdfs:label ?grandparent_label .
  ?parent rdfs:member ?child2 .
  ?grandparent a dbpedia-owl:Person ;
             rdfs:label ""Archduchess Margarete Sophie of Austria"" .
}
```

This query selects the child (`?child`) of Duke Philipp (`?parent`) who also has a parent (`?child2`) that is a person (`dbpedia-owl:Person`) labeled as Archduchess Margarete Sophie of Austria. It ensures that the child (`?child`) is a member (`rdfs:member`) of the parent's family (`?parent`).",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?manager
WHERE {
  ?player rdfs:label ""Thomas Letsch"" .
  ?player dbppro:participantInSeason ?soccerClubSeason .
  ?soccerClubSeason dbppro:seasonStartDate ""YYYY-MM-DD"" .
  ?soccerClubSeason dbppro:manager ?manager
}",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?name ?musicalArtist
WHERE {
  ?person a dbpedia:Musician;
    foaf:name ?birthName .
  ?person ns:bornIn dbo:RegionName ""Central Region, Ghana"" .
  ?person rdfs:label ""Pacely""@en .
  ?associatedArtists a rdf:Property ;
    rdfs:domain ?person ;
    rdfs:range dbpedia:Musician .
  GRAPH ?associatedGraph {
    ?associatedArtists ?musicalArtist .
  }
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent dbpedia:name ""Toyotomi Hideyoshi"" .
}",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?musicalArtist
WHERE {
  ?person dbo:birthDate ""2006-06-15"" .
  ?person rdfs:label ""Elorm Kabu Amenyah"" .
  ?person dbpprop:musicalArtist ?musicalArtist
}
LIMIT 1",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","SELECT ?child_name ?royalty_status 
WHERE {
  ?child a :Person.
  ?child rdfs:label ?child_name .
  ?parent a :Person; owl:parentOf ?child.
  ?grandchild a :Person; owl:childOf ?child; rdfs:label ?grandchild_name .
  ?grandchild rdfs:label ""Royalty"" .
  FILTER (STRSTARTS (?child_name, ""Archduke Charles Louis of Austria"") AND STRSTARTS (?grandchild_name, ""Duke Eugen of Württemberg""))
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist;
    rdfs:label ""Robert Lamar Thompson""@en .
  ?person dbo:has_role dbpedia:AlterEgo ;
    dbpedia:alter_ego ""The Shadow""@en .
  ?person rdfs:label ""Walter B. Gibson""@en .
  ?band a dbpedia:MusicBand .
  ?person dbpedia:associated_with ?band
}",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthLocation WHERE {
  ?person a dbo:Politician;
  dbo:birthPlace ?birthLocation.
  ?person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė"".
}",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?parent a dbpedia:Person; dbpedia:hasChild ?child .
  ?grandchild a dbpedia:Person; dbpedia:hasParent ?parent .
  ?spouse a dbpedia:Person; dbpedia:hasSpouse ?partner .
  ?child2 a dbpedia:Person; dbpedia:hasParent ?spouse .
  ?child1 a dbpedia:Person; dbpedia:hasParent ?child2 .
  ?grandchild1 a dbpedia:Person; dbpedia:hasParent ?child1
}",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?commander ?author WHERE {
  ?event third_taiwan_strait_crisis .
  ?event commander ?commander .
  ?work ""An Invitation to the White House"" .
  ?work author ?author .
  ?author spouse ?spouse .
  ?spouse officeHolder .
  ?spouse politician
  FILTER ( ?author = ""Bill Clinton"")
  FILTER ( ?spouse = ""Hillary Clinton"")
}",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"SELECT ?parent WHERE {
  ?child rdf:type owl:Thing .
  ?child rdfs:label ""William II of Sicily"" .
  ?parent a dbpedia-owl:Monarch .
  ?parent rdfs:child ?child
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"SELECT ?movieTitle ?song 
WHERE {
  ?movieTitle a :Movie ;
            :actor ""Bing Crosby"" .
  ?movieTitle rdfs:label ?movieLabel .
  ?song a :Song ; 
         :lyrics ?lyrics .
  ?movieTitle ?includes ?song .
}",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"To find such a war, we need to query DBpedia for events classified as ""war"" that also have a medical condition or disease associated with them. However, since DBpedia does not directly link wars to diseases in a straightforward manner, we will need to use broader terms and infer the relationship.

A possible approach is to look for wars that have had significant health impacts on the participants, which could be indirectly linked to diseases. For example, the Vietnam War had many health issues associated with it, such as malaria and other tropical diseases.

Here's a SPARQL query that attempts to find such a war:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?war a dbpedia:War ;
         dbpedia:hasHealthConsequence some dbpedia:MedicalCondition .
}
```

This query selects all wars that have at least one medical condition as a consequence. It assumes that if a war has significant health impacts, it might be associated with specific diseases.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?royaltySpouse ?child ?child_successor
WHERE {
  ?father a dbpedia:Person;
    dbpedia:hasParent ?parent.
  ?parent a dbpedia:Person;
    rdfs:label ""Saw Shwe Khet's father""@en.
  ?royaltySpouse a dbpedia:Person;
    dbpedia:hasChild ?child.
  ?child a dbpedia:Person;
    rdfs:label ""Royalty child of Saw Shwe Khet's father""@en.
  ?child_successor a dbpedia:Person;
    dbpedia:hasParent ?child.
  ?child_successor a dbpedia:Person;
    rdfs:label ""Successor of the royalty child""@en.
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"SELECT ?spouse
WHERE {
  ?author a pol:OfficeHolder ;
            dc:author ""Hillary Clinton"" .
  ?book a book:WrittenWork ;
          dc:author ?author .
  ?author ns:spouses ?spouse .
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?manager
WHERE {
    ?player rdf:type dbpedia:Footballer.
    ?player rdfs:name ""Thomas Letsch"".
    ?team rdf:type dbpedia:SoccerTeam.
    ?team rdfs:name ""VfL Bochum"".
    ?team dbpprop:season ""2006-07"".
    ?manager a dbpedia:Person;
           dbpprop:role dbpedia:SoccerCoach.
    ?successorSeason a dbpprop:FootballLeagueSeason;
                    dbpprop:season ""After 2006-07"".
    ?successorTeam a dbpedia:SoccerClub;
                 dbpprop:hasMember ?player;
                 dbpprop:season ?successorSeason.
}",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","SELECT ?title WHERE {
  ?s a ns:tv_series .
  ?s name ""Наши парни / Nashi parni"" .
  ?s firstAiredAt ""2005-01-15T00:00:00Z""^^xsd:dateTime
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia:Person ;
            dbpedia2:birthPlace ?birthPlace .
}
LIMIT 2",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"SELECT ?artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1980-01-01"" ].
  ?person rdfs:label ""Nick Curran"".
  ?person dbo:role dbpedia:Murderer.
  ?person foaf:knows ?artist .
  ?artist a dbpedia:MusicArtist
}",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?childParent a ns:parentOf ?child .
  ?childSpouse a ns:siblingOf ?childParent .
  ?childSpouse ns:spouseOf ?childParent .
  FILTER (str(?child) = ""Maria of Bytom"") 
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"SELECT ?child WHERE {
  ?person a dbpedia:Politician .
  dbpprop:hasParent ?parent .
  dbpprop:hasChild ?child .
  [ dbpprop:locatedIn dbpedia:Taipei ].
  ?parent dbpprop:isDeceased
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace1 ?birthPlace2 ?region WHERE {
  ?governor a dbpedia-owl:Governor .
  ?governor foaf:name ""Specific Governor Name"" . # Replace with the actual name of the governor
  ?ceceBell a dbpedia-owl:Artist .
  ?ceceBell rdfs:label ""Cece Bell""@en .
  ?paulusPowell a dbpedia-owl:Person .
  ?paulusPowell foaf:name ""Paulus Powell""@en .
  ?region a dbpedia-owl:Region .
  ?region rdfs:label ""Specific Region Name""@en . # Replace with the actual region name
  ?vinceGilligan a dbpedia-owl:Person .
  ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
  ?vinceGilligan foaf:name ""Vince Gilligan""@en .
  ?awardee a dbpedia-owl:Award .
  ?awardee rdfs:label ""Specific Award""@en . # Replace with the actual award name
  ?vinceGilligan dbo:birthPlace ?birthPlace1 .
  ?governor dbo:birthPlace ?birthPlace2 .
  ?region dbo:capital ?birthPlace3 .
  ?awardee dbo:recipient ?vinceGilligan
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"The SPARQL query will need to search the DBpedia dataset for films in which Vera Lynn acted and check if those films are also classified as television shows. However, it's important to note that a film cannot simultaneously be a ""work"" (film) and a ""television show"" because these are different media formats. Therefore, we should look for films where she has appeared and see if any of those films have been referenced in DBpedia in a way that might imply television show status due to reruns or adaptations.

A possible approach is to query for Vera Lynn's film appearances and then check if any of these films have been linked to television in the DBpedia dataset. Here's a simplified SPARQL query:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?film WHERE {
  ?film a dbpprop:Film ;
            dbpprop:actor[Vera Lynn] .
}
```

This query selects films where Vera Lynn acted. To further refine this to find if any of these films are associated with television shows, we would need more complex reasoning or additional data links which might not be directly available in the DBpedia schema.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?war WHERE {
  ?war a dbpedia-owl:War .
  ?war rdfs:label ""William Bayne"" . 
  ?war rdfs:isDefinedBy dbpedia:en.
}",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia-owl:hasFather ?father .
  ?father rdfs:label ""Edward Stanley""@en .
  ?person rdfs:label ""Edward Stanley, 17th Earl of Derby""@en;
    foaf:familyMember ?child1 .
  ?child1 a dbpedia-owl:Person;
    rdfs:label ""Arthur Stanley""@en;
    foaf:parent ?grandparent
}
ORDER BY ?child1",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?person
WHERE {
  ?person a :politician .
  ?person a :office_holder .
  ?work a :book .
  ?work a :written_work .
  ?person rdfs:label ""Chappaqua, New York"" .
  ?person rdfs:label ?author_name .
}
ORDER BY ?person",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ""Charles Parsons""@en .
  ?person vc:awarded ?award
}",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","SELECT ?parent WHERE {
  ?child a dbpedia:Person;
  dbpedia:hasParent ?parent;
  ?parent a dbpedia:Royalty
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"SELECT ?name
WHERE {
  ?artist a ns:MusicArtist .
  ?bandMember a ns:MusicArtist, ns:BandMemberOf ?artist .
  ?bandMember ns:givenName ?name .
  ?artist ns:hasBandMember ?bandMember .
  ?bandMember ns:membership/ns:memberOf ns:GangstaSquad
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?country WHERE {
  ?chancellor rdf:type dbpedia:Chancellor_of_Germany.
  ?chancellor foaf:name ""Konrad Adenauer"".
  ?chancellor dwc:birthPlace ?country
}",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"SELECT ?movie WHERE {
  ?actor rdf:type <> .
  ?actor rdfs:label ""The Shadow"" .
  ?actor foaf:name ""Actor's Name"" .
  ?producer rdfs:label ""Producer's Name"" .
  ?movie rdfs:label ""The Adventures of Tom Sawyer (1938 film)"" .
  ?movie rdf:type <> .
  ?actor produced ?movie
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:hasParent ?parent .
  ?person rdfs:label ""Doon Arbus""@en .
  ?person rdfs:label ""Amy Arbus""@en .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?grandparent a dbpedia:Person ;
               dbpedia:hasParent ?parent ;
               dbpedia:hasGrandparent ?greatGrandparent .
  ?parent a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?greatGrandparent a dbpedia:Person ;
                dbpedia:hasChild ?parent .
}",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?subject ?predicate ?object WHERE {
  ?subject a ns:people.person .
  ?subject rdfs:label ""Alexander Lvovich Davydov""@ru .
  OPTIONAL { ?subject ns:combatProperty ?property . }
  FILTER (lang(?property) = ""ru"" )
}",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","SELECT ?manager_name ?manager_born
WHERE {
  ?manager a dbpedia:SportsManager ;
           foaf:givenName ""Christopher"" ;
           foaf:birthday ""1968-08-26"" .
  ?club dbpedia:SoccerTeam ;
         dbpedia:hasManager ?manager .
  ?manager rdfs:label ?manager_name .
  ?season a dbpedia:SportSeason ;
          dbpedia:code ""200x"" . # Replace '200x' with the actual season code for VfL Bochum
  ?team dbpedia:SoccerTeam ;
         dbpedia:hasManager ?manager .
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?place WHERE {
  ?place ns:locatedIn mo:United_States .
  ?place rdfs:label ""Portage des Sioux""@en .
  ?place ns:instanceOf dbo:Settlement
}

AND {
  ?gillmore a dbpedia-owl:Person;
    dbpprop:awarded Medal_of_Honor ;
    dbpprop:conflict ""American Civil War"" .
  
  ?tracy a dbpedia-owl:Person;
    dbpprop:awarded ""Brevet Brigadier General"";
    dbpprop:conflict ""American Civil War"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"A suitable SPARQL query would be one that searches for ""pacely"" within the context of musical artists. Assuming we have access to a dataset like DBpedia, which contains structured data about various entities including musicians, the following SPARQL query could be used:

```
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?artist
WHERE {
  ?song dbpprop:performer ?artist .
  ?song rdfs:label ""pacely"" .
}
```

This query searches for any song labeled as ""pacely"" and retrieves the artist associated with that song.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
  dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
  dbpedia:isRoyalty true .
  ?royalChild a dbpedia:Person;
  dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
  dbpedia:isRoyalty true
  AND ?grandchild foaf:name ""Saw Shwe Khet""
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"SELECT ?writer ?commander_successor WHERE {
  ?composer ""Always the Love Songs"" .
  ?russowarCommander a nfo:RussoPolishWar_1654_1667; successor ?successor .
  ?greatTurkishWarCommander a nfo:GreatTurkishWarCommander; predecessor ?russowarCommander .
  ?politicianOfficeHolder a nfo:PoliticianOfficeHolder; role ?role_in_russo_polish_war .
  ?politicianOfficeHolder a nfo:OfficeHolder; role ?role_in_great_turkish_war .
  ?writer ns:wiki/WMSCatalog#composer .
  ?successor ns:wiki/WMSCatalog#commander_of_Russo_Polish_War_1654_1667 .
  ?role_in_russo_polish_war rdfs:subPropertyOf nfo:role_in_war .
  ?role_in_great_turkish_war rdfs:subPropertyOf nfo:role_in_war .
  ?writer ns:wiki/WMSCatalog#?writer
  FILTER ( ?successor = ?russowarCommander )
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia-owl:Noble;
          dbpedia-owl:isMemberOf dbpedia:House_of_Bourbon
}
LIMIT 1",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?band WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Kim Wilson"" .
  ?person dbpprop:bandMemberOf ?band
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?warLabel ?tvShowLabel WHERE {
  ?war a dbpedia-owl:War .
  ?war rdfs:label ""Algerian War""@en .
  ?tvShow rdfs:label ?tvShowLabel .
  ?tvShow dc:subject ?war
}",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"The SPARQL query to retrieve this information from DBpedia would involve querying for the details of the ""Coro de la Pontificia Universidad Católica de Puerto Rico"" award and then extracting the relevant region information. Here is a possible SPARQL query:

```sparql
SELECT ?region WHERE {
  ?award a :Award ;
            :name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en ;
            :origin ?region .
}
```

This query selects the `?region` property of the award, assuming that there is a direct property linking the award to its origin region.",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","SELECT ?child
WHERE {
  ?parent a dbpedia-owl:Person ;
           dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Albrecht, Duke of Württemberg"" .
  ?child rdfs:label ""Carl, Duke of Württemberg"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"The SPARQL query will involve looking up information about both Lamont Cranston (The Shadow) and Robert Pastorelli (Johnny Doughboy), and specifically identifying a work they were associated with where a producer made a significant claim to fame. Here's how we might structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?producer 
WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor rdf:type dbpedia-owl:Actor .
  ?shadow rdfs:label ""Lamont Cranston""@en .
  ?shadow rdf:type dbpedia-owl:Character .

  ?work a dbpedia-owl:FilmOrTVEpisode ;
    dbpedia-owl:actor ?actor ;
    dbpedia-owl:producer ?producer .

  ?producer rdfs:label ?claim_to_fame .

  FILTER (lang(?producer) = ""en"") .
}
```

This query looks for a film or TV episode (`?work`) involving both ""Johnny Doughboy"" and ""Lamont Cranston,"" and then identifies the producer of that work with a notable claim to fame.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","SELECT ?landmark_name ?ruling_party
WHERE {
  ?landmark geo:coordinates [geopoint $latitude ""20.1168"" $longitude ""Longitude Value""] .
  ?landmark rdfs:label ?landmark_name .
  ?landmark rdf:type dbpedia-owl:Landmark .
  OPTIONAL { ?landmark wdt:P31 ?political_entity . }
  FILTER (lang(?political_entity) = ""en"") .
  ?political_entity rdfs:label ?ruling_party
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"The SPARQL query will involve using the DBpedia ontology to find these relations. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?director WHERE {
  ?movie a dbo:Movie;
    dbo:mainActor ?actor .
  ?actor rdfs:label ""Doon Arbus""@en .
  ?movie dbo:directedBy ?director .
  FILTER (STRSTARTS (?actor, ""Herschel"")) .
}
```

This query does the following:
- Selects the actor (`?actor`) and director (`?director`) of a movie (`?movie`).
- Ensures that the main actor is labeled as ""Doon Arbus"" in English.
- Filters for movies directed by someone whose name starts with ""Herschel"", to match Herschel Bernardi.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"SELECT ?parentSpouse WHERE {
  ?child Saw Shwe Khet .
  ?child a :royalty .
  ?parent1 :father ?child .
  ?parent1 a :royalty .
  ?parent2 :mother ?child .
  ?parent2 a :royalty
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?person WHERE {
  ?person a :royalty .
  ?person a :office_holder .
  ?person rdfs:label ""William"" .
  FILTER (lang(?person) = ""en"")  # Restrict to English language
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for Burhan Belge's birthplace. Here's how we can construct the query:

```sparql
SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Artist ;
            dbpedia-owl:birthPlace ?birthplace .
  ?person rdfs:label ""Burhan Belge""@en .
}
```",2,2,3,2,1,2,2,9,0,0,249,0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war_winner WHERE {
  ?war_winner ns:award ""Golden Sword for Bravery"" .
  ?war_winner rdfs:label ?war_label .
  ?war_label a nlp:war .
  ?war_winner foaf:name ""Karl Gustav von Baggovut"" .
}
AND
{
  ?war_winner rdfs:seeAlso dbpedia-owl:Austerlitz_Battle .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person;
          foaf:nick ?name;
          dbo:birthPlace ""Middlesex"" .
}",1,1,2,1,1,2,3,28,0,0,935,0,0.0,0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","SELECT ?party_member WHERE {
  ?landmark dbpedia:hasElevation ""20.116800000000001347"" .
  ?landmark rdfs:label ?landmarkLabel .
  ?landmark dbo:politicalParty ?party .
  ?party rdf:type dbo:PoliticalParty .
  ?partyMember foaf:spouse ?rogerPryor .
  ?rogerPryor a dbpedia:Person ;
               dbpedia:hasName ""Roger Pryor"" .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?child father ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:P31 wd:Q12298 (Stephen V of Hungary) .
  ?child mother ?grandparent_spo .
  ?grandparent_spo a dbpedia:Person ;
                    dbpedia:P31 wd:Q12297 (Louis I of Hungary)
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"Given the complexity and the need for specific data points, a direct SPARQL query might require multiple steps or sub-queries. However, here's a simplified version that attempts to gather some of the necessary information:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?managerName 
WHERE {
  ?player dbpedia:P31 wd:Q12263 . # Player associated with VfL Bochum 2006-07 season
  ?player dbpedia:P41 ?team . # Team the player was part of in 2006-07
  ?team dbpedia:P29 ?leagueSeason . # The league season of 2006-07 for VfL Bochum
  ?leagueSeason dbpedia:P31 ?sportSeason . # The sports season type (football league season)
  ?manager dbpedia:P41 ?player . # Manager who managed the player
  ?manager rdfs:label ?managerName . # Get the name of the manager
  FILTER (lang(?managerName) = ""de"" ) # Ensure the manager's name is in German
}
```

This query attempts to find the manager of a player from the 2006-07 VfL Bochum season, with the additional constraints provided in the question.",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"SELECT ?theme WHERE {
  ?person a ns:Person ;
            rdfs:label ""Anumta Qureshi""@en ;
            ns:role ?role .
  ?role a ns:TelevisionRole ;
           rdfs:label ?title .
  ?title ns:hasTheme ?theme .
}",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?producer ?work
WHERE {
  ?movie a :Film;
    :producer ?producer;
    :title ""A Star Is Born (1937 film)"" .
  ?person a :Person;
    :name ""Cora Sue Collins"";
    :claim_to_fame ?work .
  ?work a :Work;
    :title ?work_title .
  ?movie rdfs:isDefinedBy dbpedia:Schema.org.
  ?person rdfs:isDefinedBy dbpedia:Schema.org.
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"SELECT ?leader ?residence WHERE {
  ?politician a :PoliticalParty.
  ?politician rdfs:label ""George Savage"".
  ?leader a :Person;
    foaf:member ?politician;
    rdfs:label ?leaderLabel .
  ?party a :UK_Party.
  ?leader ns:hasResidence ?residence .
}",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"The SPARQL query to find Sam Concepcion's profession would look for a person with that name and then extract their profession. Assuming Sam Concepcion is a known entity in DBpedia, the query might be:

```sparql
SELECT ?profession
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Sam Concepcion""@en .
  ?person dbo:occupation ?profession .
}
```

This query selects the `profession` of any `Person` with the label ""Sam Concepcion"" in English, and then it further refines this to only those persons who have an `occupation` property.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?actress a dbpedia-owl:Actress .
  ?actress rdfs:children ?child .
}",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","The SPARQL query will look for individuals who have a primary occupation or profession associated with a certain field. Here's an example query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person
WHERE {
  ?person a foaf:Person;
    foaf:name ?name.
  OPTIONAL { 
    ?person rdf:type <>; # Replace '...' with the appropriate class for professionals in the field
    rdfs:label ?field_of_expertise .
  }
  FILTER (STRSTARTS (?field_of_expertise, ""YourFieldHere""))
}
```

Replace `""YourFieldHere""` with the specific field you're interested in.",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a :royalty; 
  :father ?parent_of_charles_martel .
  :parent_of_charles_martel a :king_of_hungary ; 
  :mother ?spouse_of_father_of_charles_martel .
  ?spouse_of_father_of_charles_martel a :wifeOf ?parent_of_charles_martel
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?place WHERE {
    ?actor a dbpedia-owl:Actor .
    ?actor foaf:name ""Sal Mineo"" .
    ?movie a dbpedia-owl:Film .
    ?movie title ""Color Me Dead"" .
    ?actor rdfs:seeAlso ?movie
} 

AND {
    ?actor a dbpedia-owl:Person .
    ?place a dbpedia-owl:Location .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relevant relationships and properties. Here is a structured SPARQL query that follows these steps:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?royalty_predecessor WHERE {
  ?spouse a dbpedia-owl:Spouse ;
            dbppro:hasChild ?child_of_spouse .
  ?child_of_spouse a dbpedia-owl:Person ;
                 dbppro:isSpouseOf ?spouse_child ;
                 rdfs:father ?min_hla_htut_or predecessorfatherof ?royalty .
  ?royalty a dbpedia-owl:Royalty .
  ?min_hla_htut_or rdfs:parent ?parent_of_min_hla_htut .
}
```

This query starts by selecting the royalty predecessor (`?royalty_predecessor`). It then identifies Saw Min Phyu's spouse (`?spouse`), finds their children (`?child_of_spouse`), and looks for those children who are spouses themselves (`?spouse_child`). From these spouse children, it traces back to find any royals (`?royalty`) and connects them to Min Hla Htut through a parent-child relationship (`?min_hla_htut_or`).",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?spouse_of_saw_shwe_khet ?child_of_saw_shwe_khet WHERE {
  ?parent1 a dbpedia:Person; rdfs:label ""Minye Kyawswa"".
  ?grandchild a dbpedia:Person; rdfs:label ""Saw Shwe Khet"".
  ?parent2 a dbpedia:Person; rdfs:label ""Child of Minye Kyawswa"".
  ?spouse_of_saw_shwe_khet a dbpedia:Person; foaf:partner ?parent2.
  ?child_of_saw_shwe_khet a dbpedia:Person; parent ?spouse_of_saw_shwe_khet.
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","The SPARQL query will look for the parents of Philip, Despot of Romania and filter results to only include those who are royals. Assuming Philip's full name is available and he lived in a time period where such records exist, the query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?parent WHERE {
  ?philip a rdf:Person .
  ?philip rdfs:father ?parent .
  ?parent a dbo:Royalty
}
```

This query selects the `parent` of each person (`?philip`) who is an individual (`a rdf:Person`) and whose father (`?parent`) is a royalty (`?parent a dbo:Royalty`).",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"SELECT ?war WHERE {
  ?recipient medalOfHonorAwarded ""Medal of Honor"" .
  ?recipient conflict ?war
}",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","The SPARQL query to find such a reference from DBpedia would involve searching for mentions of both ""Anita Borg Institute Women of Vision Awards"" and ""television show"". Assuming that DBpedia has structured data about these entities, we can construct a query like:

```sparql
SELECT ?show WHERE {
  ?show ns:instance [dbo:hasAward ""Anita Borg Institute Women of Vision Awards""] .
  ?show a dbo:TelevisionShow .
}
```

This query selects the television shows (`?show`) that have an award associated with the Anita Borg Institute Women of Vision Awards.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","A SPARQL query to find this information might look like:

```sparql
SELECT ?actor WHERE {
  ?album ""What You Know"" .
  ?album a dbpedia-owl:MusicAlbum ;
         dbpedia-owl:artist ?actor .
}
```

This query selects the `?actor` of the album with the title ""What You Know"", assuming that the album has an `dbpedia-owl:artist` property.",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","The SPARQL query will involve using the DBpedia ontology to find individuals who match these criteria. We'll look for people who have an `actor` role in at least one movie and a `role` or similar professional role in at least one television show. Here's how we might structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?actor a dbo:Actor .
  ?actor rdfs:label ?actorLabel .
  SOME { 
    ?actor dbo:role dbo:ActorInSeries ?series .
    ?series a dbo:TelevisionShow .
    ?actor rdfs:label ?actorLabel .
    FILTER (regex(str(?actorLabel), ""Richard E. Grant"")) 
  }
}",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?person
WHERE {
  ?predecessor predecessorOf Stephen V of Hungary .
  ?royalty1 childOf ?predecessor .
  ?royalty2 childOf ?royalty1 .
  ?royalty2 parentOf ?spouse .
  ?spouse spouseOf Maria of Bytom .
  ?spouse a royalty
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person rdfs:label ?birth_name .
  ?person dbpprop:associatedWith dbpedia:Pacely .
  ?person dbpprop:occupation ""writer"" .
  ?person appeardIn dbpedia:The Live Anthology
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"SELECT ?office ?party ?country ?administration_tenant ?residence_tenant
WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf dbpedia:Spanish_Socialist_Workers'_Party ;
    foaf:nationality dbpedia:Spain .
  ?person rdfs:label ""Alberto Núñez Feijóo""@es .
  ?office a dbpedia:Office;
    dbpedia:holder ?person .
  ?country a dbpedia:Country;
    dbpedia:capital ?administration_city .
  ?administration_tenant a dbpedia:Political-administration ;
    dbpedia:headOfState ?administration_head .
  ?residence a dbpedia:Residence;
    dbpedia:inhabitant ?person .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
    ?awardee awardeeOf ?award .
    ?award rdfs:label ""Rodney Lees Award""@en .
    ?awardee foaf:familyMember ?parent
} UNION {
    ?person rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
    ?person parents ?parent .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"The SPARQL query will need to:
- Retrieve the birthday of Tony Hollings from DBpedia.
- Use that date to filter individuals born on that day.
- Apply constraints to ensure they meet the specified roles.

Here is the constructed SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player
WHERE {
  ?player dbpedia:P31 wd:Q12297.  # Tony Hollings' Wikipedia page (Person:Tony_Hollings)
  ?player rdfs:label ?birthdate.  # Extract the birth date from the label (e.g., ""1980-01-01"")
  FILTER (?birthdate = ?tony_birthdate)  # Ensure the birthdate matches Tony Hollings' birthday
  ?player dbpedia:P41 wd:Q5.  # Player role (Athlete)
  ?player dbpedia:P20 wd:Q530.  # Soccer player
  ?player dbpedia:P279 wd:Q10898.  # Sports manager
  ?player dbpedia:P279 wd:Q10897.  # Soccer manager
  ?player rdfs:label ""Lai Sun Cheung"".  # Ensure they played in Lai Sun Cheung
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","SELECT ?warLabel ?nZervas ?awardee WHERE {
    ?war Label ""War of Napoleon Zervas"" .
    ?awardee awardeeOfSome ?award .
    ?award hasMention ""30th Award"" .
    ?war rdfs:label ?warLabel .
    ?war geo:location ""Athens"" .
    ?awardee a ns:https://www.w3.org/2002/07/owl#Thing
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","A SPARQL query to find the required information would involve querying the DBpedia dataset for relevant battles involving Hashiba Hidekatsu and any conflicts associated with a person named Koichirō. However, since Koichirō is not a well-documented historical figure in DBpedia, we will focus on Hashiba Hidekatsu's wars.

Here is a SPARQL query that could be used to retrieve information about battles involving Hashiba Hidekatsu:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?battle WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:participatedInConflict dbpedia:P0550704. 
  ?battle pfo:involvedParty [ a owl:Thing ; rdfs:label ""Hashiba Hidekatsu"" ] .
}
```

This query looks for battles (`?battle`) that are part of the class `dbpedia:Battle` and where the conflict involved a party with the label ""Hashiba Hidekatsu"".",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?spouse
WHERE {
  ?father a ns:Person;
  ns:givenName ""Stephen"";
  ns:familyName ""V"";
  ?wife ns:familyRelation [ ns:relType ""spouse"" ] .
  ?father ns:child[ns:parent ?child] .
  ?child a ns:Person;
  ns:givenName ""Philip"";
  ns:familyName ""I of Taranto"".
  FILTER (fn:exists (?relation) WHERE { ?child ns:parent ?relation } AND ?relation a ns:FamilyMember )
}
ORDER BY ?spouse",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?parent WHERE {
  ?child rdf:type owl:Thing .
  ?child rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"" .
  ?child ns:father ?parent .
  ?parent rdfs:label ""William Gayner"" .
  FILTER (lang(?parent) = ""en"") .
}",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?commander ?military_force WHERE {
  ?commander ns:commanded ?military_force .
  ?military_force a :military_force_type ; :name ""French Army in Egypt and Syria"" .
  ?commander a :military_officer; rdfs:label ""Napoleon Bonaparte""@fr .
  OPTIONAL { ?commander ns:navy ?navy }
  OPTIONAL { ?navy a :military_fleet; rdfs:label ""Royal Navy""@en }
}",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","SELECT ?bandMember ?artistAssociation
WHERE {
  ?bandMember a dbpedia-owl:Musician ;
               dbpprop:associatedBand The Fabulous Thunderbirds .
  ?bandMember foaf:knows ?ericClapton .
  ?bandMember rdfs:label ""Nick Curran""@en .
  OPTIONAL { ?bandMember rdf:type dbpedia-owl:Guitarist }
}
LIMIT 1",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?awardee WHERE {
  ?awardee a dbpedia:Person .
  ?awardee foaf:name ""Japanese person"" .
  ?awardee rdfs:label ?show_label .
  ?show_label a dbpedia:Television_series .
  FILTER (regex(str(?show_label), ""Anita Borg Institute Women of Vision Awards""))
}",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?artist WHERE {
  ?composer ""Wizards of Waverly Place (soundtrack)"".
  ?composer foaf:name ""Stuart McBeath Tosh"".
  ?composer a nlp:MusicArtist .
  ?artist a nlp:MusicArtist ;
           rdfs:label ?associated_artist_label .
}",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"SELECT ?parent_name
WHERE {
  ?actor spouse ?spouse .
  ?spouse parent ?parent .
  ?parent birthName ?parent_birth_name .
  ?actor ns:film/ns:role ?movie .
  ?movie director ?director .
  ?director ns:people/person ?nat_levine .
  ?nat_levine wdt:P31 ?spouse
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:hasDeathPlace ?deathPlace .
  ?person rdfs:label ""Reed Howes""@en .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:hasParent ?parent .
  ?person rdfs:label ""Victor Stanley (Royal Navy officer)"" .
  ?person rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?child ?war WHERE {
  ?child a ns:owl:sameAs <> .
  ?child ns:father ns:Person ; ns:name ""Toyotomi Hideyoshi"" .
  OPTIONAL { ?child ns:partOfEvent ?event . }
  ?event a ns:owl:Event .
  ?event ns:startDate ""1600-01-01""^^xsd:date AND
         ns:endDate ""1615-12-01""^^xsd:date .
}",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","SELECT ?actor
WHERE {
  ?movie a :film.
  ?movieStarringAudrey a :hasActor ?actor .
  ?actor a :Person .
  ?actor rdfs:label ?actorLabel .
  ?actorAppearedIn ""Roman Holiday"" .
  ?actorAppearedIn ""Breakfast at Tiffany's"" .
  ?actorAppearedIn ""Paradise"" (2013 film) .
  ?actorLabel ?actorName
}
ORDER BY ?actorName",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?commander_name ?successor_name
WHERE {
  ?commander rdf:type :Commander .
  ?commander foaf:name ?commander_name .
  ?commander rdfs:label ?commander_label .
  ?successor rdf:type :PoliticianAndOfficeHolder .
  ?successor foaf:name ?successor_name .
  ?commander wdt:P31 wd:Q1627307.
  ?commander wdt:P31 wd:Q1226696.
  ?commander rdfs:label ""Battle of Vienna commander"".
  ?successor rdfs:label ""Television Show Title"" .
  ?successor rdfs:label ""Societal Event Title"" .
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","SELECT ?militaryForce WHERE {
  ?battle a ns:Battle ;
            ns:combatant ?militaryForce .
  ?militaryForce a ns:NavalFleet .
  ?battle ns:hasCombatant ?militaryForce .
  ?battle ns:identifier ""http://dbpedia.org/ontology/Battle_of_Cape_Finisterre_1805"" .
  ?battle ns:partOfEvent ?event .
  ?event a ns:Event ;
           ns:commander ?commander .
  ?commander a ns:Person ;
            ns:nationality ""French"" .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?name ?title WHERE {
  ?person a ns:people.person .
  ?person ns:officeHolder ""Portugal"" .
  ?person ns:politicalOffice ""Commander"" .
  ?person ns:militaryConflict ""Portuguese Civil War"" .
  ?person rdfs:label ?name .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"" }
}",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","To retrieve this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?producer1 ?movie1 WHERE {
  ?person rdf:type dbpedia-owl:Actor .
  ?person rdfs:label ""Cora Sue Collins""@en .
  ?person dbpedia-owl:role_in_film [ owl:hasRole ?role ] .
  ?role a dbpedia-ontology:FilmRole .
  ?movie1 a dbpedia-ontology:Film .
  ?movie1 rdf:type [ owl:hasProperty dbpedia-ontology:producer ] .
  ?producer1 rdf:type dbpedia-ontology:FilmProducer .
  FILTER (lang(?person) = ""en"" )
}

SELECT ?producer2 ?movie2 WHERE {
  ?actor rdf:type dbpedia-owl:Actor .
  ?actor rdfs:label ""High Society Blues""@en .
  ?actor dbpedia-owl:role_in_film [ owl:hasRole ?role ] .
  ?role a dbpedia-ontology:FilmRole .
  ?movie2 a dbpedia-ontology:Film .
  ?movie2 rdf:type [ owl:hasProperty dbpedia-ontology:producer ] .
  ?producer2 rdf:type dbpedia-ontology:FilmProducer .
  FILTER (lang(?actor) = ""en"" )
}
```

This query first finds Cora Sue Collins and then identifies the film she was famous for, followed by the producer of that film. The second query does the same for the actor of ""High Society Blues"" to find their famous producing work.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"SELECT ?bandMember1 ?bandMember2
WHERE {
  ?mudvayne a dbpedia-owl:Band ;
    dbpedia-owl:hasMusicalArtist ?associatedArtist .
  ?associatedArtist a dbpedia-owl:BandOrganization .
  ?nateNewton a dbpedia:Musician ;
    dbpedia:isAssociatedWith ?mudvayne .
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?child a dbpedia:Person;
  dbpedia:parentOfAlfonso_VI_of_Le%C3%B3n_and_Castile ?grandparent .
  ?grandparent a dbpedia:Person;
  dbpedia:parentOf Roger II of Sicily
}",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"SELECT ?person
WHERE {
  ?person a :AlterEgoInSeries ;
            r:role_in_album ""What You Know"" .
}
AND
{
  ?person foaf:name ?name .
}",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?parent WHERE {
  ?child Francis I, Duke of Lorraine .
  ?child :father ?father .
  ?father :parent ?grandparent .
  ?grandparent :name ""Maria of Spain"" .
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","To find the producer of the film ""Nothing to Lose"" (1997), we can use the following SPARQL query:

```sparql
SELECT ?producer 
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:producer ?producer .
  ?movie rdfs:label ""Nothing to Lose (1997)"" .
}
```

This query selects the producer (`?producer`) of any film (`?movie`) that has the label ""Nothing to Lose (1997)"" and is identified as a Film in the DBpedia ontology.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor WHERE {
  ?movieTitle ""The Trial of Julius and Ethel Rosenberg""@en .
  ?movieTitle hasActor ?actor .
}
LIMIT 1

AND
SELECT ?parent WHERE {
  ?childName ""Doon Arbus"" .
  ?childName hasParent ?parent .
}
UNION
SELECT ?parent WHERE {
  ?childName ""Amy Arbus"" .
  ?childName hasParent ?parent .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"The SPARQL query to retrieve this information from DBpedia would involve querying for entities related to Jamsetji Tata and filtering those that are Indian. Here is a sample SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work WHERE {
  ?work a dbpedia:Company ;
            dbpedia:founder [ dbpedia:givenName ""Jamsetji"" ] ;
            dbpedia:country ""India"" .
}",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","SELECT ?actor ?parent
WHERE {
  ?actor rdfs:label ""Julius Rosenberg""@en .
  ?actor ns:role ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?parent a dbo:Parent ;
           dbp:hasChild ?child .
  ?child a dbo:Person ;
         dbp:spouse ""Mariclare Costello"" .
  ?child rdfs:label ""Poppy Montgomery""@en .
  
  ?actor rdfs:label ""Steve McCurry""@en .
  ?parent a dbo:Parent ;
           dbp:hasChild ?photo_child .
  ?photo_child a dbo:Image ;
               dbo:subjectOf ""Photographer"" .

}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","To achieve this, we will use a SPARQL query that:
1. Identifies Paulus Powell's birth place.
2. Determines the current governor of that birth place region.
3. Finds the birth place of the author of ""El Deafo,"" who is an American.

Here is the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governorLabel ?governorBirthPlace
WHERE {
  ?politician paulus.powell.
  ?politician a dbo:Politician .
  ?region rdfs:label ?regionLabel .
  ?region rdfs:type dbo:AdministrativeRegion .
  ?politician dwc:birthLocation ?birthLocation .
  ?birthLocation a dbo:Place .
  ?birthLocation rdfs:label ?birthPlaceLabel .
  ?governor dbo:officeHolder ?governor .
  ?governor a dbo:Politician .
  ?governor dwc:birthLocation ?governorBirthLocation .
  ?governorBirthLocation a dbo:Place .
  ?governorBirthLocation rdfs:label ?governorBirthPlaceLabel
}
```

This query will return the label of the governor and their birth place, based on the information about Paulus Powell and the author of ""El Deafo.""",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"SELECT ?actor
WHERE {
  ?song ""What You Know"" .
  ?album <http://dbpedia.org/property/lyrics> ?lyrics .
  ?actor rdfs:label ?lyrics .
}",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"SELECT ?author
WHERE {
  ?book rdf:type dbpedia-owl:Book .
  ?book rdfs:label ""A Picture of Britain""@en .
  ?book dc:creator ?author .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?bandMember
WHERE {
  ?album ""Nothing to Gein"" .
  ?album <http://dbpedia.org/property/producer> ?producer .
  ?producer a dbpedia-owl:Organization ;
             dbpedia-owl:isPartOf [ a dbpedia:MusicGroup; rdfs:label ""Cavalera Conspiracy"" ] .
  ?bandMember a dbpedia:MusicArtist .
}",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?player ?manager
WHERE {
    ?player rdf:type dbpedia-owl:SoccerPlayer .
    ?player foaf:memberOf [ a dbpedia:SportsClub ; rdfs:label ""VfL Bochum"" ] .
    ?player dbpprop:season 2007-08 .
    ?player dbpprop:manager ?manager
}
ORDER BY ?player",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"SELECT ?office WHERE {
  ?politician a :Politician.
  ?politician :belongsToParty :People_Party.
  ?politician :leaderOfOffice ?office .
  ?politician rdfs:label ""Miguel Maura"" .
  ?politician rdfs:label ""Mariano Rajoy"" .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award
WHERE {
  ?person a dbpedia:Person .
  ?person rdfs:label ""Vince Gilligan"" .
  ?person dbpprop:awardedWith ?award
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"SELECT ?office ?tenant
WHERE {
  ?person a dbpedia-owl:PoliticalOfficeHolder ;
            dbpprop:party dbpedia:Spanish_Socialist_Workers'_Party .
  ?person rdfs:label ?name .
  ?office rdf:type dbpedia:Government_of_Spain_Office .
  ?office rdfs:label ?office_label .
  FILTER (lang(?name) = ""es"") .
}",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"SELECT ?admin WHERE {
    ?monarch ChristianIXOfDenmark.
    ?monarch rdfs:label ""Christian IX of Denmark""@en.
    ?monarch admin:administration ?admin .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","SELECT ?spouse ?producer 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?movie a dbpedia:Film;
    dbpedia:producer ?producer ;
    dbpedia:title ""Pirates of the Caribbean"" .
  ?person rdfs:label ""Linda Bruckheimer""@en .
  ?movie rdfs:label ""Pirates of the Caribbean""@en .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?award ?awardLabel ?awardedEntity WHERE {
  ?award a ns:award .
  ?award label ?awardLabel .
  ?awardedEntity a ns: Settlement ;
                 ns: country ""United States"" .
  ?awardedEntity rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es.
}",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasSpouse ?spouse .
  ?spouse a dbpedia-owl:Person ;
           rdfs:label ""Mary Elphinstone"" .
  ?spouse a dbpedia-owl:Person ;
           rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"" .
  ?parent a dbpedia-owl:Person ;
          rdfs:label ?parent_name .
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"SELECT ?band
WHERE {
  ?member a dbpedia-owl:Musician .
  ?member rdfs:label ""Eric Clapton""@en .
  ?member dbpprop:bandMemberOf ?band .
  ?band rdfs:label ?bandLabel .
}",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?birthName WHERE {
  ?person a pol:Politician .
  ?person rdfs:label ""Eleonora Menicucci""@it .
  ?person foaf:givenName ?birthName
}",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"SELECT ?birthday
WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""Marcelo Sarmiento"".
  ?person dbpprop:birthday ?birthday.
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?entity :hasParent ?parent .
  ?entity rdf:type [ rdfs:label ""Doon Arbus"" ] .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"SELECT ?commander ?writer ?successor ?event WHERE {
  ?commander rdfs:label ""Michał Kazimierz Pac""@pl .
  ?commander ns:commandedIn <http://dbpedia.org/ontology/GreatTurkishWar> .
  ?writer foaf:name ""Unknown"" .
  ?successor a owl:Class; rdfs:label ""politician and office holder""@en .
  ?event a owl:Class; rdfs:label ""military conflict""@en .
  ?commander ns:hasSuccessor ?successor .
  ?writer ns:author ?song .
  ?song rdfs:label ""Always the Love Songs""@en
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?birthplace WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplaceLabel .
  FILTER (?birthplaceLabel IN [""Chieko Asakawa""])
  AND (OPTIONAL { ?birthplace geo:location [ geo:regionName ""Japan"" ] })
  AND (OPTIONAL { ?birthplace geo:timeZone [ owl:ontologyTerm ""Japan Standard Time"" ] })
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","SELECT ?parent WHERE {
  ?awardee rdfs:label ""Commander of the Royal Victorian Order""@en .
  ?earl rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?awardee ns:parent ?parent.
  ?earl ns:parent ?parent.
  ?parent a ns:Person
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"SELECT ?person WHERE {
  ?grandchild a :royalty .
  ?grandchild :father ?parent .
  ?parent a :royalty .
  ?parent :spouse ?charlesIIOfNaples .
  ?parent :child ?childOfBelaIV .
  ?childOfBelaIV a :royalty .
  ?childOfBelaIV :parent ?grandparent .
  ?grandparent a :royalty
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?alterEgo ns:instance [ a ns:ComicBookCharacter; rdfs:label ""The Shadow"" ] .
  ?alterEgo rdfs:label ?alterEgoLabel .
  FILTER (lang(?alterEgoLabel) = ""en"" )
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor
WHERE {
  ?movie a :film.
  ?movieActor rdfs:label ?actor .
  ?movieActor dcterms:role ?role .
  ?role ns:inProperty ""http://purl.org/dc/elements/1.1/#role"" ""The Shadow"" .
  ?movieActor foaf:actor ?richardEGrant .
  ?movie rdfs:subject ?movieID .
  ?richardEGrant a :Person;
               dcterms:occupation ?actorOccupation .
  FILTER ( ?actor = ?richardEGrant ) 
}",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Cece Bell""@en .
  ?person rdfs:label ""Vince Gilligan""@en .
}
LIMIT 2",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
  ?child rdf:type owl:Thing .
  ?child rdfs:label ""Rudolf IV"" .
  ?parent a foaf:Person .
  ?child foaf:father ?parent
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?movie WHERE {
  ?actor rdf:type dbpprop:Person ;
            dbpprop:name ""Columbus Short"" .
  ?author rdf:type dbpprop:Person ;
          dbpprop:name ""Eric Danton"" .
  ?movie rdf:type dbpprop:Film ;
         dbpprop:actor ?actor ;
         dbpprop:author ?author .
}",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Actor ;
            dbpedia-owl:role dbpedia:The_Shadow .
  ?person a dbpedia-owl:Singer ;
            rdfs:label ?singer_name .
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?parentName
WHERE {
  ?person a :Person;
    foaf:spouse ?spouse ;
    rdfs:label ""Roger Pryor""@en .
  ?spouse a :Person;
    rdfs:label ""Roger Pryor""@en .
  ?person rdfs:parents ?parentList .
  FILTER (str(?parentList) contains ""Tisha Sterling"")
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"SELECT ?timeZone
WHERE {
  ?country <> ""Japan"".
  ?country rdfs:label ?name.
  ?country wdt:P31 wd:tQ2488.
  OPTIONAL { ?country wdt:P17 ?timeZone }
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","SELECT ?childFather
WHERE {
    ?politician a pol:Politician .
    ?politician edu:alumni Eton College .
    ?politician wdt:P31 wd:Q12298.
    ?childFather a foaf:Person .
    ?childFather rdfs:father ?child .
    ?child rdfs:child ?childOfFrederickAndVictor .
    ?childOfFrederickAndVictor a wdt:P31 wd:Q12297.
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","SELECT ?grandfather
WHERE {
  ?person a :Person;
  :name ""Dorothea of Denmark, Electress Palatine"";
  :birthYear 1657;
  :father :Christian_VII_of_Denmark;
  :paternalGrandfather ?grandfather
}",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?manager_name ?player_manager_name
WHERE {
    ?vitesse_manager rdfs:label ""Manager of SBV Vitesse in 2020-21"" .
    ?bochum_player rdfs:label ""Player of VfL Bochum in 2007-08"" .
    ?vitesse_manager ns:managerOf ?vitesse_club .
    ?bochum_player ns:managedBy ?bochum_club .
    ?vitesse_club a ns:Organization ; ns:sport ""Football"" .
    ?bochum_club a ns:SportClub ; ns:sport ""Football"" .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"A SPARQL query to retrieve this information from DBpedia could involve searching for the relevant entities and relationships. Here's a possible query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?administration WHERE {
  ?monarch rdf:type dbpedia-owl:Monarch .
  ?monarch rdfs:label ""Olaf I of Denmark"" .
  ?monarch dbpedia-owl:reignStart ""913""^^xsd:gYear .
  ?monarch dbpedia-owl:end ""935""^^xsd:gYear .
  ?administration a dbpedia-owl:PoliticalAdminstration .
  ?monarch dbpedia-owl:administers ?administration
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:MusicalArtist ;
            dctermsSORTName ""Birth name"" .
  ?person ns:birthPlace ""Florida"" .
}",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },The SPARQL query will involve querying the DBpedia dataset for Hu Jieqing and then finding the spouse of the person linked to Hu Jieqing. The query will then filter the works by the identified spouse who is a writer.,2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"SELECT ?parent
WHERE {
  ?awardee rdf:type <> .
  ?awardee rdfs:label ""Rodney Lees"" . # Assuming Rodney Lees is the awardee based on the context
  ?awardee rdf:type <> .
  ?child rdf:type <> .
  ?child foaf:alumni ""Eton College"" .
  ?parent a <> .
  ?parent rdfs:label ?parent_label . # Placeholder for parent's label, replace with actual query logic if needed
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relevant relationships and descendants. Here is a structured SPARQL query that follows these steps:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandchild WHERE {
  ?parent a ns:Person ;
            ns:hasChild ?child1 .
  ?child1 a ns:Person ;
            ns:hasChild ?grandchild .
  ?parent ns:microschema:parentOf ?child1 .
  ?child1 ns:microschema:isDescendantOf ?parent .
  ?grandchild a ns:Person ;
             ns:hasParent ?child1 .
  ?grandchild ns:microschema:isDescendantOf ?child1 .
}
```

This query starts by selecting the grandchildren (`?grandchild`) of Duke Philipp of Württemberg (`?parent`). It ensures that the grandchildren are also people (`ns:Person`), and that they have Duke Philipp as their parent. The `ns:microschema:parentOf` and `ns:microschema:isDescendantOf` properties are used to establish the parent-child relationship explicitly.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","SELECT ?child WHERE {
  ?parent a ns:Person ;
            ns:p father ?grandparent .
  ?grandparent a ns:Person ;
             ns:m name ""Roger III, Duke of Apulia"" .
  ?parent ns:e marriedTo ?spouse .
  ?spouse a ns:Person ;
           ns:m name ""Beatrice of Savoy"" .
  ?child a ns:Person ;
         ns:p father ?parent
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"A SPARQL query can be constructed to search for the 30th (Cambridgeshire) Regiment of Foot in a knowledge base like DBpedia, which contains structured data about real-world entities. The query should look for instances of this regiment and their associated wars.

Here is an example SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?regiment dbpedia:P31 wd:Q12297 ; # 30th (Cambridgeshire) Regiment of Foot
  ?regiment dbpedia:E63 ?war. # war involving the regiment
}
```

This query selects the `war` associated with the instance of the 30th (Cambridgeshire) Regiment of Foot (`?regiment`) identified by its DBpedia URI (`Q12297`).",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor ?profession
WHERE {
  ?movie dispatches_from_elsewhere .
  ?actor :roleIn ?movie .
  ?shatrughan_sinha :profession ?profession .
  ?actor = ?shatrughan_sinha
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?person ?place WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ""Reed Howes""@en .
  ?person ns:deathPlace ?deathPlace .
  ?person a ns:people.person .
  ?person rdfs:label ""Richard Eyer""@en .
  ?person ns:deathPlace ?deathPlace
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"A SPARQL query can be constructed to retrieve this information from a database like DBpedia, which contains structured data about real-world entities such as historical figures. The query would look for the predecessor of Stephen V of Hungary (who was King of Hungary and Croatia between 1270 and 1272).

Here is the corresponding SPARQL query:

```sparql
SELECT ?predecessor WHERE {
  ?stephen_v a dbpedia-owl:Monarch; rdfs:label ""Stephen V of Hungary""@en .
  ?stephen_v dbpprop:reigned 1270-1272.
  ?predecessor a dbpedia-owl:Monarch; rdfs:label ?predecessor_label@en .
  ?predecessor dbpprop:reigned [ xsd:int - 1270 ].
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","A SPARQL query to retrieve this information from DBpedia might look like:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor ?role
WHERE {
  ?movie dbpedia-owl:hasActor ?actor .
  ?actor rdfs:label ?actorLabel .
  ?role rdfs:label ?roleLabel .
  ?movie rdf:type dbpedia:P4220 . # Shelby Oaks is identified by P4220 in DBpedia ontology
  ?actor rdf:type dbpedia:P42 . # Actors are identified by P42 in DBpedia ontology
  ?actor rdfs:label ""Shelby Oaks"" .
  ?role rdfs:label ""Professional in"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","SELECT ?artist_name WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ math:greaterThan ""1970-01-01"" ].
  ?person rdfs:label ?name.
  ?artist a dbpedia:MusicArtist;
    dbpedia:activeYears [ startWith ""1980"" ].
  ?person dbpprop:associatedBandMemberOf ?artist .
  ?artist rdfs:label ?band_name
}
AND
{
  ?band dbpedia:bandMembers [
    a dbpedia:MusicalArtist ;
    dbpprop:bandMember ?person
  ] .
  ?band rdfs:label ?band_name
}
WHERE {
  ?person ns:name ""Nicholas Michael Curran""
}
UNION
{
  SELECT ?band_name WHERE {
    ?band a dbpedia:Band;
      dbpedia:name ?band_name
    }
    AND
    ?band dbpprop:bandOf ?person
  }
ORDER BY ?band_name",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?grandchild WHERE {
  ?parent a dbpedia:Monarch .
  ?parent ns:childOf ?grandparent .
  ?grandparent a dbpedia:Person .
  ?grandchild a dbpedia:Royalty
  FILTER (lang(?grandchild) = ""en"")  # Assuming we are looking for English royalty
}",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"SELECT ?leader WHERE {
  ?event a dbpedia-owl:Event .
  ?event date ?date .
  ?administration a dbpedia-owl:Administration .
  ?administration leader ?leader .
  ?quintana foaf:name ""Anxo Quintana"" .
  ?quintana rdfs:seeAlso <http://dbpedia.org/ontology/> .
  FILTER (?date > ?quintana foaf:birthDate)  # Ensure the event is after Anxo Quintana's birth
}",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"The SPARQL query will need to search for the play ""Judgment: The Trial of Julius and Ethel Rosenberg"" and then find the actors associated with it. Once we have the list of actors, we can identify Eugène Cattin and then determine his parent (likely the production or the theater company).

Here is a structured SPARQL query to achieve this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?play rdf:type dbpedia-owl:Play .
  ?play rdfs:title ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?actor dbpedia-owl:roleInPlay ?play .
  ?actor rdfs:label ""Eugène Cattin""@fr
}
```

This query will find the actor named Eugène Cattin who was part of the play ""Judgment: The Trial of Julius and Ethel Rosenberg"" and then extract the parent information.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"SELECT ?office ?party
WHERE {
  ?person a dbpedia:Office_Holder ;
            dbpedia2:office ""Prime Minister of Spain"" .
  ?party a dbpedia:Political_party ;
           dbpedia2:country ""Spain"" ;
           rdfs:label ""Spanish Socialist Workers' Party""@es.
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"SELECT ?parent WHERE {
  ?officer ""Victor Stanley"" as ?name .
  ?officer rdfs:label ""Royal Navy officer"" .
  ?officer rdf:type <> .
  ?officer hasParent ?parent
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","SELECT ?child
WHERE {
  ?child a dbpedia-owl:Child ;
           rdfs:father dbpedia:Ferdinand_III,_Holy_Roman_Emperor .
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?actor WHERE {
  ?movie a :film.
  ?movie stard :leadActor ?actor .
  [ dbpedia:Roman_Holiday castMember ""Audrey Hepburn"" ] .
  [ dbpedia:Breakfast_at_Tiffany's castMember ""Audrey Hepburn"" ] .
  [ dbpedia:My_Fair_Lady castMember ""Audrey Hepburn"" ] .
  [ dbpedia:The_Five_Years_Engagement castMember ""Iliza Shlesinger"" ] .
}",4,8,5,2,2,2,3,28,0,0,1,0,0.0,0
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"A SPARQL query to find the player named ""Ye Jia"" in DBpedia might look like this:

```
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?player
WHERE {
  ?player a foaf:Person;
           foaf:name ""Ye Jia"".
}
```

This query selects the `?player` resource that is both a `foaf:Person` and has a `foaf:name` property with the value ""Ye Jia"".",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?producer WHERE {
  ?song rdfs:subject <http://dbpedia.org/ontology/Song> .
  ?song rdf:type <http://dbpedia.org/ontology/Song> .
  ?song dc:title ""Lotus"" .
  ?song dc:performer [ a owl:Ontology ; owl:intersectionOf (owl:Class rdfs:Resource) ] .
  ?band db:pseudonym ""Lotus"" .
  ?band rdfs:member ?mark_eitzel .
  ?mark_eitzel a owl:Ontology ; owl:class [ a owl:Class; rdfs:label ""Person"" ] .
  ?producer rdfs:label ?producer_label .
  ?producer a owl:Ontology ; owl:intersectionOf (owl:Class rdfs:Resource) .
}",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"SELECT ?person WHERE {
  ?person a dbpedia:Actor;
  dbpedia:roleInSeries ""Dispatches from Elsewhere"";
  ?person rdfs:label ?name.
  ?person dbpedia:birthDate ?birthdate.
  OPTIONAL { ?person dbpedia:occupation ?profession }
  FILTER (lang(?name) = ""en"") .
  ?person ns:actorOfTheShadowInVideoGame .
}",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"SELECT ?parent ?author
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?book a dbpedia:Book;
    dbpedia:writtenBy ?author .
  ?person rdfs:label ""Kate Dimbleby""@en .
  ?book rdfs:label ""A Picture of Britain""@en .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"A SPARQL query to solve this would involve querying the DBpedia dataset for information about Cynthia Morgan and then linking that information to musical artists. Here's how the query might look:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX dbpowl: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist WHERE {
  ?person dbpprop:name ""Cynthia Morgan""@en .
  ?person dbpprop:birthName ?birthName .
  ?person dbpowl:associatedBandOrArtist ?musicalArtist .
}
```

This query does the following:
- It selects the `musicalArtist` associated with a person named ""Cynthia Morgan"".
- It uses prefixes to specify the namespaces for DBpedia properties and classes.
- It assumes that Cynthia Morgan's birth name is the same as her name in the DBpedia dataset.",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:role dbpedia:PoliticalOfficer .
  ?person rdfs:label ""Russo-Polish War (1654–1667)"" .
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"SELECT ?spouse ?author
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasSpouse ?spouse .
  ?book a dbpedia-owl:Book ;
           dbpedia2:author ?author .
  ?person rdfs:label ""Hillary Clinton"" .
  ?book rdfs:label ""Back to Work"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person .
  ?person rdfs:label ?name .
  ?person geo:country ""Switzerland"" .
  ?person dbo:causeOfDeath ""Decedent"" .
}",1,1,2,1,1,2,3,28,0,0,906,0,0.0,0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"The SPARQL query will involve selecting the movie resources where the `actor` property includes ""Dipankar De"" and the `country_of_origin` property includes ""India"".

```sparql
SELECT ?movie
WHERE {
  ?movie a :Movie ;
         :actor ""Dipankar De"" ;
         :country_of_origin ""India"" .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"SELECT ?leader ?office ?residence WHERE {
    ?leader a ns:people.person;
        rdfs:label ""Conservative Republican Party (Spain) leader""@en .
    ?officeHolder a ns:people.person;
        foaf:name ""Madrid City Council election, 2003""@en;
        ns:officeHolderOffice ?office .
    ?officeHolder ns:officeHolderTerm ""2003"" .
    ?leader ns:hasResidence ?residence .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"SELECT ?artist WHERE {
  ?song ""Lotus"" rdfs:label ""Lotus""@en .
  ?song dc:creator ?producer .
  ?producer a dbpprop:Organization .
  ?producer dbpprop:associatedBand/rdfs:member ?artist
}",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:isAuthorOf ""El Deafo"";
    dbpedia:awardedWith dbpedia:Emmy_Award_for_Outstanding_Drama_Series;
    dbpedia:office dbpedia:Governor_of_Virginia .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""en"") .
}
LIMIT 3",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award
WHERE {
  ?person a ns:Person ;
           rdfs:label ""Edmund Hakewill-Smith"" .
  ?person ndb:Awards ?award.
}",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?spouse
WHERE {
  ?awardee ""Janusz Kamiński"" .
  ?awardee rdfs:receivedAward ?award .
  ?award hasWinner ?awardee .
  ?award awardeeSpouse ?spouse
}",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Occupation ;
            dbpedia2:occupation ""Photographer"" .
}",1,1,2,1,1,3,3,71,0,0,937,0,0.0,0
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"SELECT ?player
WHERE {
  ?player birthDate ""1980-01-01""^^date.
  ?player rdfs:label ?playerLabel .
  ?playerLabel ns:match ""Marty Pollio"".
  
  OPTIONAL {
    ?player ns:memberOf ?teamA .
    ?teamA rdfs:label ""Team of Pablo Aimar"" .
  }
  
  OPTIONAL {
    ?player ns:memberOf ?teamB .
    ?teamB rdfs:label ""Team of Sergio Agüero"" .
  }
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent_of_Amy, ?child_of_Allan WHERE {
  ?parent_of_Amy rdfs:label ""Leonard Spiegel""@en;   # Assuming Leonard Spiegel is the parent of Amy Arbus
  ?child_of_Allan a dbpedia:Actor;                 # Allan Arbus' child
  ?child_of_Allan dbo:hasParent ?parent_of_allan.    # Allan Arbus as the parent
  ?child_of_Allan dbo:location ""Los Angeles, California""@en;   # The child is from Los Angeles
  ?child_of_Allan dbo:role dbpedia:ActorInFilm;   # The child is an actor in a film
  ?child_of_Allan rdfs:label ""John Doe""@en.          # Placeholder name for the child (replace with actual data)
}

LIMIT 1;
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","SELECT ?artist WHERE {
  ?person a dbpedia:Musician;
  dbpedia2:birthDate ""1957-03-31"";
  dbpedia2:name ""Nicholas Michael Curran"" .
  ?band rdfs:label ""The Fabulous Thunderbirds"".
  ?person dbpedia2:memberOf ?band
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"SELECT ?tenant ?office WHERE {
  ?city capitalOf ?country .
  ?office location ?city .
  ?office headOfGovernment ?person .
  ?person name ""Mariano Rajoy"" .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"The SPARQL query will search for the artist associated with Cynthia Morgan within the DBpedia dataset. Assuming Cynthia Morgan is a musician and has an entry in DBpedia, the query might look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?artist
WHERE {
  ?person a dbpedia-owl:Musician ;
            dbpedia-owl:hasAlbum ""Cynthia Morgan EP"" .
  ?person rdfs:label ""Cynthia Morgan""@en .
}
```

This query selects the artist (`?artist`) of any person (`?person`) who is labeled as ""Cynthia Morgan"" and has an album titled ""Cynthia Morgan EP"".",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"SELECT ?awardee
WHERE {
  ?awardee a ns:peoplePerson .
  ?awardee rdfs:label ""New York (state)"" .
  ?awardee ns:award some [ ns:awardLabel ""Nobel Prize"" ] .
  # Add more specific award conditions here if necessary
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","SELECT ?parent_name
WHERE {
  ?parent a :Person;
    foaf:parentOf ?tisha .
  ?tisha a :Person;
    rdfs:label ""Tisha Sterling""@en;
    owl:sameAs <http://www.example.com/TishaSterling> .
  ?parent a :PartyMember;
    rdf:type :RulingParty .
  ?parent rdfs:label ""Parent's Name""@en .
  FILTER (xsd:float(?mountain_elevation) = 20.116800000000001347)
}",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"SELECT ?entity
WHERE {
  ?entity a dbpedia-owl:Entity ;
            dbpprop:partOf dbpedia:Sultanate_of_Ottoman_Empire .
}",1,1,2,1,1,2,2,9,0,0,247,0,0.0,0
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?actor ?movie_artist
WHERE {
  ?movie a dbpedia:Movie ;
            dbpedia:star ?actor .
  ?actor rdfs:label ""Afeez Oyetoro""@en .
  ?movie rdf:type dbpedia:Film .
  ?movie_artists a dbpedia:MusicArtist ;
               dbpedia:album ?album .
  ?album rdfs:label ""Cynthia Morgan""@en .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?author rdf:type <http://purl.org/dc/elements/1.1/Agent#Politician> .
  ?author rdf:type <http://purl.org/dc/elements/1.1/OfficeHolder> .
  ?author foaf:name ""Chiang Kai-shek"" .
  ?author rdfs:label ""An Invitation to the White House"" .
  ?author dc:description ""Involved in Third Taiwan Strait Crisis"" .
  ?author spous:spouse ?spouse
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor ?parent_profession ?parent_name ?child_of_allan_arbus
WHERE {
  ?movie the :Trial_of_Julius_and_Ethel_Rosenberg.
  ?actor rdfs:label ?actor_label .
  ?profession rdfs:label ?profession_label .
  ?eugene_cattin rdfs:parent ?parent_profession .
  ?allan_arbus rdfs:child ?child_of_allan_arbus .
  ?parent_profession ns:inDataset dbpedia-owl.
  ?actor foaf:role ?movie .
  ?profession owl:sameAs ?profession_label .
  ?child_of_allan_arbus rdfs:child ?child_of_allan_arbus
}
LIMIT 1",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","The SPARQL query to retrieve this information would look like:

```sparql
SELECT ?singer ?band WHERE {
  ?singer rdfs:label ""Robert Lamar Thompson"" .
  ?singer dbpprop:isMemberOf ?band .
  ?band rdfs:label ""The Temptations"" .
}
```

This query searches for a person labeled ""Robert Lamar Thompson"" and finds the band they are a member of, which should be ""The Temptations"".",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"To retrieve this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?person dbpedia:birthPlace ?location .
  ?location rdfs:label ?locationLabel .
  ?locationLabel ns:prefLabel ""Saint Petersburg""@en .
  ?person a dbpedia:Person ;
            dbpedia:nationality ?country
  FILTER (?locationLabel != ""Saint Petersburg"") 
} 
 UNION {
  ?person dbpedia:birthPlace ?location .
  ?location rdfs:label ?locationLabel .
  ?locationLabel ns:prefLabel ""Fermo""@it .
  ?person a dbpedia:Person ;
            dbpedia:nationality ?country
  FILTER (?locationLabel != ""Fermo"") 
}
```

This query first looks for the country associated with the birthplace of Nicholas II (Saint Petersburg) and then separately looks for the country associated with the birthplace of Sandro Bertaggia (Fermo). The `UNION` clause combines the results from both queries.",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?office WHERE {
  ?politician a dbpedia-owl:PoliticalPartyMember ;
               dbpedia2:party dbpedia:Conservative Republican Party (Spain) ;
               foaf:name ?name .
  ?politician rdfs:label ?office.
  ?name ns:prefLabel ""José Luis Álvarez"" .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?actor ?birthplace WHERE {
  ?movie a mousetrap:Movie ;
            mousetrap:hasActor ?actor .
  ?actor a owl:sameAs <http://dbpedia.org/ontology/Person> .
  ?movie mousetrap:features ?cast .
  ?cast a rdf:BNode ;
          rdf:type mousetrap:Role ;
          mousetrap:roleName ""Dipankar De"" .
  ?cast a rdf:BNode ;
          rdf:type mousetrap:Role ;
          mousetrap:roleName ""Ebrahim Alkazi"" .
  ?actor a owl:sameAs <http://dbpedia.org/ontology/Person> .
  ?actor mousetrap:birthPlace ?birthplace
}",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","SELECT ?person ?war ?location WHERE {
  ?person a :Person ;
            foaf:name ""Koichirō Takahashi"" .
  OPTIONAL { ?person rdfs:label ?war_label . }
  ?location a :Location ;
            rdfs:label ""Kōriyama, Fukushima, Japan"" .
  FILTER (regex(str(?war_label), ""Takahashi"")) .
  ?person ns:partOf ?location .
}",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthName ?name .
  ?person rdfs:label ""Pacely""@en.
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","The SPARQL query would involve looking for entities that are connected to both ""Hong Kong C Football Club"" and broader sports team/club concepts. Here's how we might structure the query:

```sparql
SELECT ?entity 
WHERE {
  ?entity a dbpedia:SportsTeam .
  ?entity a dbpedia:SoccerClub .
  ?entity rdfs:label ""Hong Kong C"".
  ?entity dbpprop:affiliatedWith dbpedia:Hong_Kong_C_Football_Club .
}
```

This query selects entities that are both a sports team and a soccer club, have ""Hong Kong C"" in their label, and are affiliated with Hong Kong C Football Club.",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","SELECT ?member WHERE {
  ?central geo:locatedIn dbpedia-owl:Central,_Louisiana .
  ?central rdfs:isDefinedBy dbpedia:PropertyPage .
  ?rulingParty dbpedia:P31 dbpedia:Republican_Party_of_the_United_States .
  ?member a dbpedia:OfficeHolder ;
           dbpedia:P31 ?rulingParty .
}",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","SELECT ?author
WHERE {
  ?work a book .
  ?work a work .
  ?politician a politician .
  ?politician an office_holder .
  ?politician foaf:residence Chappaqua, New York .
  ?politician a commander_in_war .
  ?politician owds:ownerOf <> .
  ?author rdfs:label ?authorLabel .
  ?work dc:creator ?author
}",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"SELECT ?office WHERE {
  ?x a :PoliticalOffice; :leader ?x.
  ?x :inAdministrationDuringEvent ?event.
  ?event a :PoliticalEvent .
  ?x :residesInCountry :Spain .
  ?x a :SpanishCitizen
}",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"SELECT ?person ?birth_place WHERE {
  ?person a dbpedia:Person;
  ?person rdfs:label ""Glenn Youngkin""@en;
  ?person foaf:birthPlace ?birth_place.
  
  ?person a dbpedia:Person;
  ?person rdfs:label ""Vince Gilligan""@en;
  ?person dbo:awardedFor ""List of awards and nominations received by Vince Gilligan"";
  ?person foaf:birthPlace ?birth_place.
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","SELECT ?role ?producer 
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:starring janet_gaynor .
  ?movie dbpedia:production_company ?producer .
  ?role rdfs:label ""Street Angel"" .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"SELECT ?party WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ""Roy Barreras""@en .
  ?person rdfs:label ?party . 
} 

AND

SELECT ?party WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ""Sofía Petro""@en .
  ?person rdfs:label ?party . 
}

AND

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#

CONSTRUCT {
  ?person a dbo:OfficeHolder ;
    dbo:office ?party .
} 
WHERE {
  ?person a dbo:Person ;
    rdfs:label ?party .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"SELECT ?author ?parentLabel ?artistLabel ?musicalArtistLabel WHERE {
  ?book A ns:http://purl.org/dc/elements/1.1/ dc:author ?author .
  ?author ns:foaf.parent ?parent .
  ?parent a ns:http://www.w3.org/2002/07/owl#Thing .
  ?parent ns:ontologies owl:sameAs [ ns:label ""http://purl.org/ontology/bio/Person"" ] .
  ?parent ns:ns1_artisticType ns:hasValue ""Artist"" .
  ?parent ns:ns1_artisticType ns:hasValue ""Musical Artist"" .
  ?author ns:foaf.nationality ns:literal[""London""] .
  ?author ns:ns1_artisticType ns:hasValue ""Artist"" .
  ?author ns:ns1_artisticType ns:hasValue ""Musical Artist"" .
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?character ?profession
WHERE {
  ?character a dbpedia:Actor .
  OPTIONAL { ?character rdfs:label ?name }
  FILTER (regex(str(?name), ""The Shadow"")) .
  OPTIONAL { ?character rdfs:label ?name2 }
  FILTER (str(?name2) = ""Clark Gable"") .
}",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"The SPARQL query will use the DBpedia dataset to search for a Spanish citizen from Spain and then retrieve their residence (which should be their country). Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?person a dbo:Person;
    dbo:nationality dbo:ES; # This represents a person from Spain (ES)
    dbo:residence ?country. # This will retrieve the country where the person resides
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"The SPARQL query will look for the band associated with the musician Bob Thompson (or possibly The Shadow if his stage name is more commonly known). We'll use DBpedia's resources to find this information. Here's a possible query:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX dbpowl: <http://dbpedia.org/ontology/>

SELECT ?band_name WHERE {
  ?person a dbpprop:Musician .
  ?person rdfs:label ""Bob Thompson""@en .
  ?person foaf:name ""Bob Thompson""@en .
  ?person dbpprop:associatedBand ?band .
  ?band a dbpowl:Band
}
```

This query looks for a musician named Bob Thompson and then finds the band associated with them.",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","SELECT ?child WHERE {
  ?child a dbpedia:Person ;
    dbpedia:hasParent ?parent ;
    dbpedia:hasFather ?father .
  ?parent dbpedia:firstName ""Charles"" ;
    dbpedia:lastName ""Louis"" ;
    dbpedia:title ""Duke of Bourbon"" .
  ?parent dbpedia:hasChild ?child
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
             dbpedia:name ""Archduke Karl Stephan of Austria"" .
  ?parent dbpedia:name ""Archduchess Margarete Sophie of Austria"" .
  ?child a dbpedia:Royalty .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?father WHERE {
  ?person a ns:Person ;
            ns:hasFather ?father ;
            ns:officeHolder ""King of Judah"" .
  ?father a ns:Person ;
          ns:royalty true .
  ?person ns:name ""Na'od""
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"SELECT ?person
WHERE {
  ?person a dbpedia:Person ;
            dbpprop:alterEgo ""The Shadow"" .
  ?person rdfs:label ?name .
  ?person dbpprop:associatedBand ""Bob Thompson (musician)"" .
  ?person dbpprop:role ""producer of Coke Studio Philippines"" .
}",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia2:birth_name ""Linda Bruckheimer"";
    owl:sameAs ?linda .
  ?linda rdfs:label ""Linda Bruckheimer""@en;
    dbpedia2:spouse ?spouse .
}",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","SELECT ?militaryForce1 ?militaryForce2 WHERE {
  ?battle dbpedia:instanceOf dbpedia:Battle .
  ?battle dbpedia:participatingMilitaryUnit ?militaryForce1 .
  ?war dbpedia:instanceOf dbpedia:War .
  ?war dbpedia:involvedMilitaryUnit ?militaryForce2 .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?war rdfs:label ""Napoleonic Wars"" .
  ?person dbpedia:givenName ""William"" .
  ?person foaf:name ""Bayne, William"" .
  ?militaryForce1 a dbpedia:NavalFleet .
  ?militaryForce2 a dbpedia:NavalFleet
}",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"SELECT ?tenant WHERE {
  ?city Santiago de Compostela.
  ?city tenant ?tenant.
}
AND {
  ?person Álvaro Quirós.
  ?person residenceCountry ?country.
}
AND {
  ?person Alberto Núñez Feijóo.
  ?person office ?office.
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"SELECT ?child1Pred ?child2Pred WHERE {
  ?child1 a dbpedia:Person; dbpedia:hasParent ?parent1.
  ?child2 a dbpedia:Person; dbpedia:hasParent ?parent2.
  ?parent1 dbpedia:hasChild ?child1.
  ?parent2 dbpedia:hasChild ?child2.
  OPTIONAL { ?child1 foaf:brother ?child2 }.
  OPTIONAL { ?child1 foaf:sister ?child2 }.
  OPTIONAL { ?child2 foaf:brother ?child1 }.
  OPTIONAL { ?child2 foaf:sister ?child1 }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"SELECT ?birthplace ?institution
WHERE {
  ?writer birthPlace ?birthplace.
  ?writer ns:inScheme dbo.
  ?mathematician almaMater ?institution.
  ?mathematician ns:inScheme dbo.
  ?birthplace geo:location [ geo:country ""India"" ].
  ?institution a edu:University.
  ?institution location [ geo:country ""United Kingdom"" ]
}",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"SELECT ?manager_name ?manager_nationality
WHERE {
    ?manager managingTeam ?team .
    ?team rdfs:label ""SBV Vitesse 2020-21"" .
    ?manager rdfs:label ?manager_name .
    ?manager ns:nationality ?manager_nationality .
    ?manager_nationality a dbo:Country ;
                   rdf:type dbo:GermanRepublic .
    ?leader dbo:office ""Chancellor of Germany"" .
    ?leader ns:nationality ?leader_nationality .
    ?manager_nationality owl:sameAs ?leader_nationality
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","SELECT ?almaMater
WHERE {
  ?person a :Politician .
  ?person foaf:birthDate ""1955-12-02"" .
  ?person rdfs:label ?name .
  FILTER (regex(str(?name), ""Eleonora Menicucci"")) .
  ?person dbpedia-owl:almaMater ?almaMater
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"SELECT ?producer1 WHERE {
  ?movie1 a dbpedia:Film;
  dbpedia:mainActor ""Johnny Doughboy"" .
}
AND
SELECT ?producer2 WHERE {
  ?work a dbpedia:Work;
  dbpedia:actor ?actor;
  ?actor rdfs:label ""High Society Blues"" .
}
AND
?producer1 rdfs:label ""High Society Blues"";",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"The query will involve:
1. Identifying the wars involving Konstantinos Ventiris and Napoleon Zervas.
2. Finding an entity related to one of these wars in Athens.

Given that DBpedia contains structured data about historical events and entities, we can use SPARQL to extract this information.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?band WHERE {
  ?person a dbpedia:MusicalArtist;
  dbpedia2:associatedBandMember some ?clapton_member .
  ?clapton_member a dbpedia:Musician;
  dbpedia2:band ?band
}
AND ?person rdfs:label ""Nick Curran""@en",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","A SPARQL query to DBpedia would look for an entity related to George Ducas and the Great Turkish War. We need to search for a work authored by George Ducas that mentions a commander in the context of the Great Turkish War. Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?work WHERE {
  ?work a dbpedia-owl:WrittenWork ;
           dbpedia-owl:author ""George Ducas"" ;
           dbpedia-owl:subject ""Great Turkish War"" .
}
```

This query selects works that are both written by George Ducas and have the Great Turkish War as their subject.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?royaltySpouse
WHERE {
  ?parent a :Parent;
    rdfs:label ""Philip's Parent"" .
  ?spouseOfParent a :SpouseOfParent;
    owl:inverseOf :parentOfSpouse ;
    rdfs:label ""Spouse of Philip's Parent"" .
  ?spouseOfSpouse a :SpouseOfSpouse;
    owl:inverseOf :spousesWith ;
    rdfs:label ""Spouse of Maria of Bytom's Spouse"" .
  ?parent a :Royalty .
  ?spouseOfParent a :Royalty .
  ?spouseOfSpouse a :Royalty .
  ?parent foaf:father ?parentFather .
  ?spouseOfParent foaf:sparqlPredicate ?marriageRelation .
  ?spouseOfSpouse foaf:sparqlPredicate ?marriageToSpouseRelation .
  ?parentFather a :Royalty .
  ?marriageRelation a :MarriageRelationBetweenRoyalties .
  ?marriageToSpouseRelation a :MarriageRelationBetweenRoyalties
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?entity ?birth_place ?is_country
WHERE {
  ?entity rdfs:label ""Little Hat Jones"" .
  ?entity wdt:P18^^xsd:string ?birth_place .
  ?birth_place a wdt:P31^^xsd:string .
  ?birth_place rdfs:label ?birth_label .
  ?birth_label a wdt:P497^^xsd:string . # Class of countries
}",2,3,3,2,1,2,2,9,0,0,63421,0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"SELECT ?country WHERE {
  ?novel ""Cat Country"" .
  ?novel rdfs:isDefinedBy ?publisher .
  ?publisher foaf:basedLocation ?country
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
  dbpedia:birth_name ""Linda Bruckheimer"";
  dbpedia:producer ""12 Strong"";
  ?person wdt:P31 wd:Q122780.
  ?spouse a dbpedia:Person;
  dbpedia:name ?name .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?person rdfs:label ""Amy Arbus"" .
  FILTER (lang(?person) = ""en"")  # Assuming the label is in English
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?mayorParty
WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor foaf:name ?mayorName .
  ?mayor rdfs:label ?partyLabel .
  ?mayorParty rdfs:label ?partyName .
  ?mayorParty owl:sameAs ?officialParty .
}
LIMIT 1",2,2,3,2,1,2,3,28,0,1,2,0.0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","SELECT ?subject ?predicate ?object WHERE {
  ?subject a :TelevisionShow .
  ?subject rdfs:isDefinedBy <http://www.example.com/television_shows> .
  ?subject ns:features ?event .
  ?event a :SocietalEvent .
  ?subject ns:hasParticipant ?warCommander .
  ?warCommander a :HistoricalPerson ;
               foaf:name ""Jean Baptiste, Comte d'Arco"" .
  ?object a :Writer ;
          rdfs:label ""George Ducas""@en .
  ?event rdfs:label ""Battle of Marengo""@en .
  ?warCommander ns:participatedIn ?battle .
  ?battle a :War
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?parent WHERE {
  ?child a :royalty .
  ?child :hasParent ?parent .
  ?parent a :noble .
}",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","The SPARQL query will involve querying the DBpedia dataset for information about Archduchess Helena and Albrecht, Duke of Württemberg, specifically focusing on their children and their predecessors. Here is a structured approach to formulating the query:

1. Retrieve the individuals (nodes) representing Archduchess Helena and Albrecht, Duke of Württemberg.
2. Find the spouses and children associated with these nodes.
3. Identify the specific child node(s) based on the given criteria.
4. Determine the predecessor of each identified child node.

Here is a sample SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child ?predecessor WHERE {
  ?spouse a dbpedia-owl:Person ;
            dbpedia-owl:hasSpouse ?partner .
  ?partner a dbpedia-owl:Person ;
            rdfs:label ""Albrecht, Duke of Württemberg""@de .
  ?child a dbpedia-owl:Person ;
           dbpedia-owl:hasParent ?parent ;
           rdfs:label ?name .
  ?parent a dbpedia-owl:Person ;
          rdfs:label ?parent_name .
  ?predecessor a dbpedia-owl:Person ;
             rdfs:label ?predecessor_name .
  FILTER (?parent_name StringMatch ""Albrecht, Duke of Württemberg"") .
  BIND (substring(str(?name), 0, 3) AS ?child_name)
  FILTER (STRSTARTS (?child_name, ""Alb""))  # Assuming the child's name starts with ""Alb""
}
ORDER BY ?predecessor_name
LIMIT 1
```

This query retrieves the necessary information from DBpedia to identify the child of Albrecht, Duke of Württemberg and their predecessor. The `StringMatch` function is used to filter for a name starting with ""Alb"" (assuming this is the correct initial for the child in question), and then it orders by the predecessor's name to return the first match.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:father dbpedia:Roger_II_of_Sicily .
  ?person rdfs:mother dbpedia:Elvira_of_Castile
}",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"SELECT ?actor WHERE {
  ?song ""What You Know"" .
  ?artist T.I. .
  ?video_artwork depictionOf ?song .
  ?actor rdfs:label ?actorLabel .
}

This query looks for the actor associated with the song ""What You Know"" by T.I., considering that the video artwork depiction is a key piece of information linking the song to its visual representation.",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"The SPARQL query to retrieve this information would involve selecting the ""birth name"" property of the entity associated with the label ""Bobby Shmurda"". Assuming that the birth name is recorded in the appropriate properties, the query might look like this:

```sparql
SELECT ?birthName
WHERE {
  ?person a dbpedia-owl:Musician ;
            dbpprop:birthName ?birthName .
  ?person rdfs:label ""Bobby Shmurda"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"SELECT ?father_name ?alter_ego
WHERE {
  ?person a dbpedia:Person;
  dbpedia:has_father ?father_name .
  ?person rdfs:label ""Baeda Maryam I""@en .
  OPTIONAL { ?person ns:altName ?alter_ego . }
}
LIMIT 2",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"Given that DBpedia provides structured data about entities like people and political parties, we can construct a SPARQL query to extract this information. Assuming John McDermott's death place is New York City (a common assumption given his American identity and the era), we would need to find the ruling party of New York City in 1959.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?rulingParty WHERE {
    ?john_mcdermott a dbpedia:Person;
        dbpedia:deathPlace dbpedia:New_York_City .
    1959 dbpedia:year ?year .
    dbpedia:Political_party_of_New_York_City ?rulingParty IN NFO:politicalPartiesOf ?year
}
```

This query does the following:
- It selects the ruling party (`?rulingParty`) of New York City (`dbpedia:New_York_City`) in the year 1959 (`1959 dbpedia:year ?year`).
- It uses a `IN` clause to filter for parties that were in power during that year, based on the `NFO:politicalPartiesOf` property.",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?location WHERE {
  ?s a dbpedia-owl:Settlement ;
    dbpprop:locatedIn dbpedia:England ;
    rdfs:label lang:en ?locationLabel .
}",1,3,2,1,1,3,2,20,0,0,6,0,0.0,0
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player ?club WHERE {
  ?player a dbpedia:Footballer .
  ?player rdfs:label ""Juan Carlos Molina""@es.
  ?player rdfs:label ""Sergio Agüero""@es.
  ?player dbpprop:playsFor ?club
}
AND
{
  ?player a dbpedia:Footballer .
  ?player rdfs:label ""Pablo Aimar""@en.
  ?player dbpprop:playsFor ?club
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","To find this information, we need to:
1. Identify the person with the name ""Richard Grant Esterhuysen"".
2. Check if they are also known as ""Shatrughan Sinha"".
3. Determine if they have been involved in acting in movies and television shows.

Given these steps, a SPARQL query could be constructed as follows:

```sparql
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor 
WHERE {
  ?actor a rdf:Person ;
           rdfs:label ""Richard Grant Esterhuysen""@en .
  ?actor rdfs:label ""Shatrughan Sinha""@en .
  OPTIONAL { 
    ?actor a n:ActorInFilm ; 
            n:filmTitle ?movie_title .
    ?actor a n:ActorInTVShow ; 
            n:seriesTitle ?tv_show_title .
  }
}
```

This query looks for a person labeled ""Richard Grant Esterhuysen"" who is also labeled ""Shatrughan Sinha"". It then checks if this person has the roles of an actor in film (with `n:ActorInFilm`) and an actor in television show (`n:ActorInTVShow`), with optional filters for specific titles of the movie and TV show.",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace
WHERE {
    ?person a dbo:Person ;
            rdfs:label ?name .
    ?movie a dbpedia-owl:Film ;
           dbpprop:role ?actorRole .
    ?actorRole a dbo:CharacterRole ;
               dbpprop:actor ?actor .
    ?actor a dbo:Person ;
           rdfs:label ?actorName .
    ?person ns:deathPlace ?deathPlace .
    ?movie dbpprop:filmYear 1958 .
    ?actorRole p:PPlayedBy ?actor .
    FILTER (STRSTARTS (?actorName, ""Carolyn"")) .
    FILTER (STRSTARTS (?actorName, ""Reed"")) .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"SELECT ?person ?profession WHERE {
    ?person a dbpedia-owl:Person;
        dbpprop:occupation ?profession .
    SERVICE wikibase:label { 
        bd:hungarianLabel ?label ;
        bd:additionalProperty ?property ;
        bd:scope ?text . 
    }
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:SoccerPlayer .
  ?person a dbpedia-owl:SoccerManager .
  ?person foaf:birthDate ""1977-02-27""^^xsd:date .
}",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?battle WHERE {
  ?battle a dbpedia-owl:Battle ;
            dbpedia2:partOfMilitaryConflict [ a dbpedia2:MilitaryConflict ; dbpedia2:combatant dbpedia:Hashiba_Hidekatsu ]
}",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"SELECT ?settlement WHERE {
  ?settlement a dbpedia-owl:Settlement ;
               geonames:timeZone ""EET"" .
}",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","The SPARQL query will look for actresses with notable acting careers. We'll use properties such as `role` to find the roles they have played and `awards` to identify any significant recognition. Here's a sample query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actress
WHERE {
  ?actress a dbpedia-owl:Actress ;
               dbpedia-owl:hasRoleSome [ a rdf:BNode; rdfs:label ?role ] ;
               dbpedia-owl:awarded [ a rdf:BNode; rdfs:label ?award ] .
  FILTER (STRSTARTS (?role, ""actress "") || STRSTARTS (?award, ""Oscar ""))
}
```

This query selects actresses (`?actress`) who have roles (`?role`) labeled as ""actress"" and awards (`?award`) labeled as ""Oscar"". The `FILTER` clause ensures that we only get actresses who are explicitly labeled as such in their roles and who have won an Oscar.",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"The SPARQL query would be designed to find the spouse of the person with the label ""Renée of Bourbon"". Assuming Renée of Bourbon has a well-defined entry in DBpedia, we can use the following SPARQL query:

```sparql
SELECT ?spouse 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?person rdfs:label ""Renée of Bourbon"" .
}
```

This query selects the spouse (`?spouse`) of any person (`?person`) labeled as ""Renée of Bourbon"", assuming that such a label exists in DBpedia.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","SELECT ?parent WHERE {
  ?child a dbpedia-owl:Child ;
            rdfs:label ""Lady Alexandra Bowes-Lyon""@en .
  ?child a dbpedia-owl:Child ;
            rdfs:label ""Lord Patrick Bowes-Lyon""@en .
  ?parent a foaf:Person ;
           rdfs:label ?parentLabel .
}",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?work WHERE {
  ?work a dbpedia-owl:Book ;
    rdfs:author [ dbpedia2:hasName ""Hillary Clinton"" ] .
}",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasSpouse ?spouse .
  ?person rdfs:label ""Hillary Clinton"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"SELECT ?artist WHERE {
  ?album a dbpedia:Album ;
            dbpedia:hasPerformingArtist ?artist .
  ?artist a dbpedia:Musician;
           dbpedia:genre ""Pop music"" .
  ?album rdfs:label ""The Live Anthology"".
  FILTER (STRSTARTS (?album, ""Pacely"")).
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?parent yeshaq I.
  ?parent a ns:royalty .
  ?child a ns:offspringOf ?parent .
}",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Emilia Yancheva Valeva""@en .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"SELECT ?actor ?movie ?parent_relationship WHERE {
  ?actor rdfs:label ""Herschel Bernardi"" .
  ?actor rdf:type dbpprop:Person .
  ?movie dbpprop:mainActor ?actor .
  ?movie rdfs:label ?movie_title .
  ?parent_relationship a dbpprop:ParentOfRelation .
  ?parent_relationship subject ?actor .
  ?parent_relationship object ?child .
  ?child rdfs:label ""Doon Arbus"" .
  ?child rdfs:label ""Amy Arbus"" .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"The SPARQL query to find the album of ""What You Know"" by T.I. would look for the album details associated with the song ""What You Know"". Assuming that DBpedia has structured its data in a way that songs are linked to their albums, the query might involve looking up the artist, the song title, and then finding the corresponding album.

Here is a sample SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?album WHERE {
  ?song ""What You Know"" .
  ?song dbo:hasAlbum ?album .
}
```

This query selects the album (`?album`) where the song ""What You Know"" is associated with it through the `dbo:hasAlbum` property.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?parent WHERE {
  ?child1 a :Lady_Elphinstone .
  ?child2 a :Earl_of_Strathmore_and_Kinghorne .
  ?child1 father ?father1 .
  ?child2 father ?father2 .
  ?father1 rdfs:label ""Parent of Mary Elphinstone"" .
  ?father2 rdfs:label ""Parent of Patrick Bowes-Lyon"" .
  ?child1 birthplace ?region1 .
  ?child2 birthplace ?region2 .
  ?region1 rdfs:label ""Region of William Gayner's birthplace"" .
  ?region2 rdfs:label ""Country of William Gayner's birthplace""
}",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
  ?person a ns:Person ;
            ns:givenName ""Edward"" ;
            ns:familyName ""Stanley"" ;
            ns:title [ ns:hasValue ""17th Earl of Derby"" ] .
  ?parent a ns:Person ;
          ns:givenName ?parentGivenName ;
          ns:familyName ?parentFamilyName .
  ?person ns:father ?parent .
  FILTER (xsd:date(?parent_birthDate) < xsd:date(""1834-01-01""))
}
ORDER BY ?parentBirthDate DESC",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"SELECT ?entity WHERE {
  ?entity a dbpedia-owl:Location ;
            dbpedia2:country ""Japan"" .
}",1,1,2,1,1,3,2,20,0,0,8916,0,0.0,0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?battle WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasMilitaryConflict ?battle.
  ?battle rdfs:label ?battleLabel .
  ?battle rdfs:isDefinedBy dbpedia:Japan .
  ?person dbpedia:familyRelation ""brother of"" ?otherPerson .
  ?otherPerson rdfs:label ""Toyotomi Hideyoshi"" .
  OR ?person rdfs:familyRelation ""son of"" ?otherPerson .
  ?otherPerson rdfs:label ""Toyotomi Hideyoshi""
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"SELECT ?militaryForce WHERE {
    ?battle rdf:type dbpedia-owl:Battle .
    ?battle rdfs:label ""Vienna, 1683"".
    ?militaryForce a dbpedia-owl:MilitaryForce .
    ?militaryForce rdf:type [ owl:subClassOf dbpedia:European_military_forces ] .
}",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award
WHERE {
  ?person a ns:Person ;
            won NobelPrizeAward ?award .
  ?person rdfs:label ""Rainer Weiss"" .
}",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?warLabel ?entity WHERE {
  ?war a dbpedia-owl:War .
  ?war combatant [ owl:hasMember ""Amasa Tracy"" ] .
  ?war location dbpedia:Charleston, South Carolina .
  ?entity a dbpedia:Entity .
  ?entity rdfs:label ?entityLabel
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?parent WHERE {
  ?commander rdf:type <http://purl.org/dc/elements/1.1/#Commander> .
  ?arthur_stanley a politician; rdfs:father ?father .
  ?father a politician; foaf:parent ?grandparent .
  ?grandparent a officeHolder .
  ?commander ns:childOf ?grandparent
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"The SPARQL query will search for the information related to the musical work ""Apache Indian"" and extract the writer's name. Here's how we can construct the query:

```sparql
SELECT ?writer
WHERE {
  ?work a dbpedia-owl:MusicalWork ;
          dbpprop:author ?writer .
  ?work rdfs:label ""Apache Indian"".
}
```

This query selects the `writer` of any `MusicalWork` that has the label ""Apache Indian"" and is authored by `?writer`.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"SELECT ?author ?spouse
WHERE {
  ?work rdf:type <http://purl.org/dc/elements/1.1/Work> .
  ?work rdfs:label ""An Invitation to the White House""@en .
  ?author a <http://dbpedia.org/ontology/Person> .
  ?author rdfs:label ""Bill Clinton""@en .
  ?spouse a <http://dbpedia.org/ontology/OfficeHolder> .
  ?spouse rdfs:label ""politician""@en .
  ?author ns:authorOf ?work .
}",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","SELECT ?person ?profession WHERE {
  ?person a dbpedia-owl:Actor.
  ?person foaf:name ""Shatrughan Sinha"".
  ?person rdfs:label ?occupation .
  ?movie a dbpedia-owl:Film.
  ?movie hasActor ?person.
  FILTER (lang(?movie) = ""en"") .
  ?show a dbpedia-owl:TelevisionSeries.
  ?show hasActor ?other_person .
  ?other_person foaf:name ""Richard E. Grant"".
  FILTER (lang(?show) = ""en"")
}",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"The SPARQL query will involve querying the DBpedia dataset for individuals related to Constance of Burgundy and Roger II of Sicily, focusing on their children and checking for royal titles. Here's how the query might look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia2:hasSpouse [ rdf:type dbpedia:Person ;
                                dbpedia2:firstName ""Roger"" ;
                                dbpedia2:lastName ""II of Sicily"" ] ;
            dbpedia2:hasChild ?child .
  ?child a dbpedia:Person ;
           rdfs:label ?royaltyTitle .
  ?child rdfs:subclassOf [ a owl:Class ; rdfs:label ""Royalty"" ] .
}
```

This query selects the child (`?child`) of Constance of Burgundy (represented as having a spouse with the first name ""Roger"" and last name ""II of Sicily"") who has a label (`?royaltyTitle`) indicating royalty and is a subclass of the class ""Royalty"".",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"SELECT ?party WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:memberOf ?party .
  ?person rdfs:label ""Gustavo Petro""@es
}",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"The SPARQL query would be designed to search for Saw Shwe Khet and then retrieve the spouse information from the relevant property in the database. Assuming that Saw Shwe Khet is a person and has a `spouse` property, the query might look like this:

```sparql
SELECT ?person ?spouse 
WHERE {
  ?person a dbpedia:Person .
  ?person rdfs:label ""Saw Shwe Khet""@en .
  ?person dbpprop:spouse ?spouse .
}
```

This query selects the person (`?person`) and their spouse (`?spouse`) from the DBpedia dataset, filtering for individuals labeled as ""Saw Shwe Khet"" and retrieving their spouses.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?office1 ?office2 WHERE {
  ?politician1 a ns:Person; rdfs:label ""Mariano Rajoy""@es.
  ?politician1 ns:office ?office1 .
  ?politician2 a ns:Person; rdfs:label ""Alberto Ruiz-Gallardón""@es.
  ?politician2 ns:residence ?residence .
  ?tenant a ns:Organization; rdfs:label ""Tenants""@en.
  ?residence ns:tenantedBy ?tenant .
  ?politician3 a ns:Person; rdfs:label ""Miguel Maura""@es.
  ?politician3 ns:memberOf ?party .
  ?party a ns:Organization; rdfs:label ""PP""@es .
  ?office2 a ns:Office; rdfs:label ""Office""@en .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"SELECT ?child WHERE {
  ?child a dbpedia:Person.
  ?child rdfs:label ?name.
  ?name contains ""Prince"" .
  ?child ns:father ?parent.
  ?parent ns:spouse ?spouse_of_father.
  ?spouse_of_father ns:parent ?grandparent.
  ?grandparent a dbpedia:Person.
  ?grandparent rdfs:label ?title.
  FILTER (regex(str(?title), ""Prince|Princess""))
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?person ?profession
WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""Sam Concepcion""@en.
  BIND(""Filipino singer and actor"" AS ?profession_concepcion)
  
  ?person a dbpedia:Character.
  ?person rdfs:label ""The Shadow""@en.
  OPTIONAL { ?person rdfs:comment ?comment }
  BIND(str(?comment) AS ?profession_shadow)
}
ORDER BY ?profession",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?parent ?child WHERE {
  ?child a dbpedia:Person;
  dbpedia:father ?parent;
  ?parent dbpedia:offspring [ dbpedia:hasParent ?grandparent ]
  AND ?grandparent a dbpedia:Person;
  dbpedia:parent ?maximilian
}
WHERE {
  ?child rdfs:label ""Isabella of Austria""
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"SELECT ?child2 WHERE {
  ?parent a ns:Person ;
            ns:hasChild ?child1 .
  ?child1 a ns:Person ;
           ns:hasChild ?child2 .
}
LIMIT 1",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","SELECT ?name WHERE {
  ?person a dbpedia:Person;
  ?person rdfs:label ""The Shadow""@en;
  ?bandName rdfs:label ""Thompson's Encyclopedia""@en;
  ?person foaf:name ?name
}",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
    ?child a pol:Politician;
    ?child ns:father ?father .
    ?father ns:mother ?mother .
    ?mother ns:hasChild ?child .
    ?father rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:hasPlayerRole ?player .
  ?person rdfs:label ""Aleksandr Filimonov""@en .
}",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"SELECT ?royalty WHERE {
  ?grandchild a ns:Person ;
    rdfs:child ?child .
  ?child a ns:Person ;
    rdfs:parent ?parent .
  ?parent a ns:Person;
    rdf:type ns:Royalty
  ?grandchild ns:familyName ""Hpone Pyo"" .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","Given that DBpedia provides structured data about historical events and their associated military forces, a SPARQL query to find the military forces for these individuals would look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:participatedInMilitaryConflict ?war .
  ?war a dbpedia:MilitaryConflict;
    dbpedia:conflictStarts ?start ;
    dbpedia:militaryForces ?militaryForce .
  ?person rdfs:label ""Robert Calder"" .
  ?person rdfs:label ""William Bayne"" .
}
```

This query selects the military force associated with each war in which Robert Calder and William Bayne participated, assuming that they have labels matching their historical identities in DBpedia.",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?tenant WHERE {
  ?politician rdfs:label ""2003 Madrid City Council election"" .
  ?politician rdfs:label ""office holder in Central African Republic Civil War"" .
  ?politician foaf:name ?name .
  ?residence rdfs:label ?address .
  ?politician dwc:role [ a dcterms:Role; rdfs:label ""Commander"" ] .
  ?name ns:prefLabel ""Madrid City Council election, 2003"" .
  ?name ns:match ""Central African Republic Civil War"" .
}
LIMIT 1",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","SELECT ?person WHERE { ?person a dbpedia-owl:Person ; dbpedia-owl:birthDate ""Linda Sue Cobb"" }",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"SELECT ?eventLabel ?entityLabel WHERE {
  ?event <http://purl.org/dc/terms/instance> _:battle .
  _:battle a dbpedia-owl:Battle ;
            dbpedia2:partOfMilitaryConflict [ a dbpedia2:MilitaryConflict ; dbpedia2:combatant ?entity ] .
  ?entity a dbpedia-owl:Person ;
         dbpedia2:name ""Hashiba Hidekatsu"" .
}",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","SELECT ?child WHERE {
    ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           dbpedia:hasGrandparent ?grandparent .
    ?parent a dbpedia:Person ;
           dbpedia:hasParent ?greatGrandparent .
    ?grandparent a dbpedia:Person ;
           dbpedia:hasParent ?greatGreatGrandparent .
    ?greatGreatGrandparent a dbpedia:Person ;
           dbpedia:hasChild ?child_of_Alexander .
    ?child_of_Alexander dbpedia:birthdate BEFORE ""1828-01-01""^^xsd:date
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?entity WHERE {
  ?entity a ns:owlfindiri .
  ?entity rdfs:label ""Poland"" .
  ?entity ns:partOfEvent [ a ns:Event; ns:hasCombatant ""Russia""; ns:hasCombatant ""Alexander Suvorov""] .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","The SPARQL query would involve querying the DBpedia dataset for individuals associated with the film ""Judgment: The Trial of Julius and Ethel Rosenberg"", filtering those who have both the roles of Photographer and actor, and then identifying their parents. Here's a possible SPARQL query:

```sparql
SELECT ?person ?parent WHERE {
  ?person a dbpedia-owl:Actor;
            dbpedia2:role dbpedia2:Photographer .
  ?person wdt:P31 ?parent.
  ?person rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"The SPARQL query will involve querying DBpedia for the relevant information:
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band_member_name ?birth_name ?awarded_title
WHERE {
  ?artist a dbpedia-owl:MusicalArtist ;
            dbpedia-owl:birthName ?birth_name ;
            dbpedia-owl:origin ?origin .
  ?origin a dbpedia-owl:Region ;
             rdf:type <http://www.wikidata.org/prop/dcterms/type/316> ; # Award
             rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es.
  ?artist dbpedia-owl:bandMember ?band_member_name .
  ?band_member_name a dbpedia-owl:BandMember ;
                   rdf:type <http://www.wikidata.org/prop/dcterms/type/279> ; # Musician
                   rdfs:label ""Uncle Murda""@en.
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?war a dbpedia-owl:Conflict;
  dbpedia2:commander ""Alexander Suvorov"".
}",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"SELECT ?office1 ?office2 ?politician WHERE {
    ?politician a :OfficeHolder; :is_politician true .
    OPTIONAL { ?politician :office ?office1 . }
    OPTIONAL { ?commander a :MilitaryOfficer; :office ?office2 . }
    OPTIONAL { ?residence a :Residence; :tenant ?politician . }
    FILTER (YEAR(?election) = 2003) .
    # Assuming Madrid's mayor's residence is the relevant residence
    ?politician rdfs:label ""Madrid City Council"" .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","SELECT ?spouse
WHERE {
  ?person a :Person;
    :father ?father;
    :spouse ?spouse .
  ?father ns:name ""George I of Greece"" .
  ?person ns:name ""Philip I, Prince of Taranto"" .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"SELECT ?leader
WHERE {
  ?party rdfs:label ""Πανελλήνιος Πάρτης"" .
  ?party foaf:member ?leader .
  ?leader rdf:type dbo:PoliticalPartyLeader .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"SELECT ?predecessor_name ?birth_place
WHERE {
  ?mark_tournier ns:birthPlace ?birth_place .
  ?person ns:deathPlace ?birth_place .
  ?person a ns:Person ;
            ns:name ?predecessor_name ;
            ns:deathDate ?death_date .
  FILTER (STR(?death_date) = ""before"" STR(?mark_tournier birthDate))
}
ORDER BY ?predecessor_name, ?birth_place",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"SELECT ?tenant ?office WHERE {
  ?tenant ns:office ?office .
  ?office rdfs:label ""Madrid"" .
  ?tenant foaf:name ""Alberto Núñez Feijóo"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"A SPARQL query to retrieve the actor(s) of the movie ""Color Me Dead"" from DBpedia could look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?movie a dbo:Film;
    rdf:title ""Color Me Dead"".
  ?movie dbo:hasActor ?actor.
}
```

This query selects the `?actor` of any movie with the title ""Color Me Dead"".",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?actor a dbpedia:Actor .
  ?actor rdfs:label ""Roger Pryor"" .
  ?actor dbpprop:hasSpouse ?spouse
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?person
WHERE {
  ?child a :royalty .
  ?child a :office_holder .
  ?child :father ?spouse .
  ?spouse :wife ?mother .
  ?mother a :Constance_of_Burgundy .
  ?reference a :royalty .
  ?reference a :office_holder .
  ?reference_child a :child_of ?reference .
  ?child a :child_of ?reference_child .
  ?child :father ?spouse
}
ORDER BY ?person",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }",{sparql_query},5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""George Pickett"".
  ?person dbpprop:partyMemberOf dbpedia:Republican_Party_(United_States).
  ?event a dbpedia:Event.
  ?event rdfs:label ""The Battle of Gettysburg"" @prefix dbpprop: <http://dbpedia.org/property/> . # Example event related to Pickett
  ?person dbpprop:commanderIn ?event .
}",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"Given the complexity and the need for specific relational data, a precise SPARQL query would require detailed knowledge graphs and might involve multiple joins across different resources. Here's a simplified example that assumes we have access to such a database:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?actor rdfs:actor ?movie .
  [ a dbpedia-owl:Film; rdfs:title ""Judgment: The Trial of Julius and Ethel Rosenberg"" ] .
}
```

This query looks for the actor who played in a movie titled ""Judgment: The Trial of Julius and Ethel Rosenberg"". 

For the second part, to find the parents of the child of Mariclare Costello's spouse, we would need more specific relational data. Assuming we have a way to identify her spouse and their child, the query might look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

# Identify Mariclare Costello's spouse
SELECT ?spouse WHERE {
  ?mariclareCostello rdfs:spouse ?spouse .
}

# Find the child of the identified spouse
SELECT ?child WHERE {
  ?spouse rdfs:hasChild ?child .
}

# Trace back to find the parents of the identified child
SELECT ?parent1, ?parent2 WHERE {
  ?child rdf:type dbpedia-owl:Person .
  ?child dbpedia-owl:hasParent ?parent1 .
  ?parent1 dbpedia-owl:hasParent ?parent2 .
}
```

These queries are simplified and may need adjustments based on the actual structure of the knowledge base used.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"SELECT ?actor ?birthplace WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ?actorLabel .
  ?movie a :Film .
  ?movie title ""Akaler Shandhaney"" .
  ?actor :actedIn ?movie .
  FILTER (lang(?actorLabel) = ""ar"")  # Assuming the actor is Arabic
}",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","SELECT ?bandMember ?artistName WHERE {
  ?bandMember a dbpedia:Musician ;
               dbpedia:genre ""Rock music"" .
  ?bandMember rdfs:seeAlso ?associatedArtist .
  ?associatedArtist a dbpedia:Musician .
  ?associatedArtist rdfs:label ""Stuart McBeath Tosh"" .
  ?associatedArtist rdfs:label ""Billy Lyall"" .
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","To find the necessary data, we will use a SPARQL query against the DBpedia dataset, which contains structured information about many real-world entities, including landmarks and their associated political entities (ruling parties).

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmarkLabel ?rulingPartyLabel
WHERE {
  ?landmark dbpedia:hasElevation ""20.116800000000001347"" .
  ?landmark dbpedia:ruledBy ?rulingParty .
  ?rulingParty rdfs:label ?rulingPartyLabel .
  FILTER (lang(?rulingPartyLabel) = ""en"")  # Filter for English labels
}
```

This query searches for a landmark with an elevation of ""20.116800000000001347"" and retrieves the label of that landmark as well as the label of the ruling party that governed it.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","SELECT ?person WHERE {
  ?person a ns:people.person .
  ?person foaf:name ""Charleston, South Carolina"" .
  ?person rdfs:label ?gillmore_medal_awarded .
  ?person rdf:type ns:military_personnel .
  ?person ns:partOfEvent ?tracy_war .
  ?tracy_war a ns:historical_event .
  FILTER (lang(?person) = ""en"")  # Assuming the person's name is in English
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"SELECT ?awardee
WHERE {
  ?awardee a dbpedia-owl:AwardRecipient ;
            dbpprop:awardedFor ""Bravery"" .
  ?awardee rdfs:label ?name .
  FILTER (lang(?name) = ""en"") 
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","SELECT ?band
WHERE {
  ?person a dbpedia:Musician .
  ?person rdfs:label ""Robert Lamar Thompson"" .
  ?person foaf:name ?name .
  ?band a dbpedia:Band .
  ?person dbpprop:birthDate ?birthDate .
  FILTER (?birthDate > ""YYYY-MM-DD"")  # Assuming we need a birth date after a certain year to confirm the person's identity
}",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"SELECT ?player WHERE {
  ?team rdf:type dbpedia-owl:FootballTeam .
  ?team rdfs:label ""Hong Kong C Team"" .
  ?manager a dbpedia:Manager ;
            dbpedia:role dbpedia:SoccerManager .
  ?player a dbpedia:Player ;
           dbpedia:club ?ye_jia_team .
  ?ye_jia_team rdf:type dbpedia:FootballTeam .
}",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"SELECT ?region WHERE {
  ?region wdt:P361 wd:Q12245.
  ?region rdfs:label ?label .
  ?label rdfs:domain ns:https://www.wikidata.org/prop/direct/region
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Robert Lamar Thompson"" .
  ?person foaf:knows ?shadow .
  ?shadow a dbpedia:Musician .
  ?shadow rdfs:label ""The Shadow"" .
  FILTER (fn:contains(?shadow, ""band"")) .
}",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","SELECT ?person ?managerRole ?soccerClubName ?soccerSeason ?sportSeason ?sportsTeamSeason 
WHERE {
    ?person rdf:type dbpedia-owl:SportsManager .
    ?person foaf:birthDate ""1968-08-26""^^xsd:date .
    ?person rdfs:label ?managerRole .
    ?soccerClubName a dbpedia-owl:SoccerTeam .
    ?soccerSeason a dbpedia-owl:FootballSeason .
    ?sportSeason a dbpedia:SportsSeason .
    ?sportsTeamSeason a dbpedia:SportsTeamSeason .
    ?person rdfs:label ?soccerClubName .
    ?soccerClubName manager ?person .
    FILTER (lang(?managerRole) = ""de"" )  # Ensuring the manager role is in German
}",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"SELECT ?band_name WHERE {
  ?artist1 a dbpedia-owl:Musician;
    rdfs:label ""Nick Curran""@en.
  ?band2 a dbpedia-owl:Band;
    dbpedia:band_members ?artist1.
} 
AND {
  ?artist2 a dbpedia-owl:Musician;
    rdfs:label ""Kim Wilson""@en.
  ?band3 a dbpedia-owl:Band;
    dbpedia:band_members ?artist2.
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"The SPARQL query will look for the band ""Uncle Murda"" and extract its members. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?member
WHERE {
  ?band dbpedia-owl:hasMember ?member .
  ?band rdfs:label ""Uncle Murda"" .
}
```

This query selects all members (`?member`) of bands (`?band`) that have the label ""Uncle Murda"".",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"SELECT ?actor WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ""The Shadow"" .
  ?actor appearedInMovieWith ?movie .
  ?movie a :Film .
  ?movie castMember ?richardEGrant .
  ?actor alsoActedIn ?otherFilmWithShatrughanSinha .
  ?otherFilm a :Film .
  ?otherFilm castMember Shatrughan_Sinha
}",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"The SPARQL query will look for the death places of the individuals ""Sal Mineo"" and ""Carolyn Jones"". Assuming that DBpedia has structured this information under properties like `deathPlace` or similar, the query would be:

```sparql
SELECT ?deathPlace WHERE {
  ?person a dbo:Person;
    dbo:name ""Sal Mineo""@en .
  ?person a dbo:Person;
    dbo:name ""Carolyn Jones""@en .
  ?person dbo:deathPlace ?deathPlace
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"SELECT ?spouse
WHERE {
  ?author a :politician;
         a :office_holder;
         wdt:P569 wd:Q1229850. # Hillary Clinton
  ?author rdfs:label ?authorLabel.
  ?book a wdt:P361 wd:Q1229850. # Book about Hillary Clinton
  ?book dc:author ?author.
  ?author ns:spouse ?spouse.
  ?author ns:military_service wd:Q1229838. # Third Taiwan Strait Crisis
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"SELECT ?awardee ?achievement WHERE {
  ?awardee a rgs:Person ;
            rsf:votedFor Gillmore_Medal .
  ?awardee ns:hasAchievement ?achievement .
  ?achievement a rdf:Property ;
             rdfs:label ""Force of contribution"" .
}",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"SELECT ?parent_name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parent_name .
  ?person rdfs:label ""Tisha Sterling"" .
}",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"The SPARQL query to retrieve the band members of Human Remains from DBpedia would look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?band dbpedia-owl:hasBandName ""Human Remains"" .
  ?band rdf:type dbpedia-owl:MusicArtist .
  ?bandMember a dbpedia-owl:Person ;
               dbpedia-owl:givenName ?givenName ;
               dbpedia-owl:surname ?surname .
}
```

This query selects the `?bandMember` resource(s) where the band has the name ""Human Remains"", and the band is of type `MusicArtist`. It further filters for resources that are of type `Person` and have both a given name (`dbpedia-owl:givenName`) and a surname (`dbpedia-owl:surname`).",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","SELECT ?musician WHERE {
  ?musician a ns:Musician .
  ?musician foaf:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?musician rdfs:label ?associated_artist .
  ?associated_artist a ns:Musician .
  ?associated_artist foaf:name ""Elorm Kabu Amenyah"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"SELECT ?actor1 ?role1 ?songTitle ?workTitle
WHERE {
  ?actor1 rdfs:label ""Alec Baldwin"" .
  ?actor1 ns:role ""The Shadow"" .
  ?songTitle a n:track .
  ?workTitle a n:musical_work .
  ?songTitle ns:title ""Live in Atlanta"" .
  ?workTitle ns:title ""Live in Atlanta"" .
  ?actor1 ns:appearsIn ?songTitle .
  ?actor1 ns:role ?role1 .
  ?songTitle a ns:track .
  ?workTitle a n:musical_work .
  ?actor2 rdfs:label ""Scott Michael Campbell"" .
  ?actor2 ns:role ?role2 .
  ?songTitle a ns:track .
  ?workTitle a n:musical_work .
  ?songTitle ns:title ""Live in Atlanta"" .
  ?actor2 ns:appearsIn ?songTitle .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"SELECT ?bandMember
WHERE {
  ?bandMember a dbpedia-owl:Musician;
    dbpprop:genre ""Hip hop"";
    dbpprop:group ""Uncle Murda"".
  ?bandMember foaf:wasBornIn [ geo:country ""Puerto Rico"" ].
  geo:isPartOf [ a geo:Region; rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" ].
}",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"SELECT ?mayor
WHERE {
  ?municipality dbpedia-owl:hasMayor ?mayor .
  ?municipality rdfs:label ""Duchy of Schleswig"" .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","A SPARQL query would look for the writer associated with a specific work titled ""George Ducas"". Assuming the work is a novel or a piece of literature, the query might be structured as follows:

```sparql
SELECT ?writer WHERE {
  ?work a dbpedia-owl:CreativeWork ;
    dbpedia-owl:author ?writer .
  ?work rdfs:label ""George Ducas""@en .
}
```

This query searches for a CreativeWork (which includes books, movies, etc.) labeled as ""George Ducas"" and retrieves the author of that work.",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","SELECT ?title WHERE {
  ?person a dbpedia-owl:Actor .
  ?person foaf:name ""George Ducas"" .
  ?person rdfs:seeAlso <http://www.imdb.com/name/> .
  ?movie a dbpedia-owl:Film
  FILTER (?person in [rdf:type dbo:Person; rdfs:label ?title])
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"The SPARQL query will need to search for Álvaro Quirós within a dataset that includes information about ""One Tree Hill"" characters and their respective residences. Assuming there is a dataset available with such information, the query might look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?characterName ?residence
WHERE {
  ?character rdf:type dbpedia-owl:Character .
  ?character rdfs:label ""Álvaro Quirós""@es .
  ?character dwc:residence ?residence .
}
```

This query selects the character name and residence of any character labeled ""Álvaro Quirós"" in a language tag that includes ""es"" (Spanish), which is likely for the Spanish version of ""One Tree Hill"".",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:hasParent ?parent .
  ?parent a ns:Royalty .
  ?person a ns:Royalty .
  ?person ns:participatedInEvent ns:SiegeOfMukha .
  ?person ns:alterEgo ""The Shadow"" .
  ?person ns:father ?child .
  ?child ns:name ""Baeda Maryam I"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","SELECT ?actor WHERE {
  ?actor rdfs:label ""Richard Grant Esterhuysen""@en .
  ?actor dbpprop:occupation ""Actor"" .
  ?actor dbpprop:role_in_film ""Character in 'Ab Kya Hoga'"" .
  ?actor rdf:type dbo:TelevisionShowActor .
  ?actor a dbo:Politician
}",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","SELECT ?child_name ?child_details
WHERE {
  ?parent a dbpedia-owl:Person ;
           rdfs:label ""Ferdinand II, Holy Roman Emperor"".
  ?child a dbpedia-owl:ChildOf ?parent .
  ?child rdfs:label ?child_name .
  OPTIONAL { ?child ns:familyName ?child_details }
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?governorLabel ?governorBirthPlace
WHERE {
  ?governor a dbpedia-owl:Politician ;
            dbpedia2:office ""Governor of Virginia"" .
  ?governor foaf:name ?governorLabel .
  ?governor dbpprop:birthPlace ?governorBirthPlace
}
LIMIT 1",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?charles ii of neapoli ns:hasSpouse ?spouse .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"SELECT ?artist WHERE {
  ?artist a dbpedia-owl:MusicalArtist ;
            dbpedia-owl:bandMemberOf dbpedia:Alan_Parsons_Project .
  ?artist rdfs:label ?name .
  FILTER (regex(str(?name), ""Wizards of Waverly Place"")) .
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty ;
         dbpprop:parent [ dbpprop:hasParent ?mariaAnnaOfBavaria ] .
  ?mariaAnnaOfBavaria a dbpedia-owl:Person ;
                    dbpprop:birthDate ""1574"" .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"SELECT ?child WHERE {
  ?child a pol:Politician .
  ?child ns:childOf ?parent .
  ?parent a edu:EtonCollegeAlumnus
}",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","SELECT ?band WHERE {
  ?artist rdf:type dbppro:MusicalArtist .
  ?artist foaf:name ""Nicholas Michael Curran"" .
  ?artist rdfs:member ?band .
  ?band a dbpedia-owl:Band
  AND ?band rdfs:label ""The Fabulous Thunderbirds""
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?city ?nickname 
WHERE {
  ?city ns:hasNickname ""The Heart of Pakistan"".
  ?city ns:hasNickname ""Paris of the East"".
  ?city ns:hasNickname ""City of Gardens"".
  ?city ns:hasNickname ""City of Literature"".
  ?city a ns: Settlement.
  ?city rdfs:label ""Lahore"".
}",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"The SPARQL query would be designed to extract the manager of SBV Vitesse for the 2020–21 season. Assuming the manager is recorded in the relevant DBpedia resources, the query might look something like this:

```sparql
SELECT ?manager
WHERE {
  ?team dbpedia:hasManager ?manager .
  ?team dbpprop:season ""2020-2021"" .
  ?team rdfs:label ""SBV Vitesse"" .
}
```

This query selects the manager (`?manager`) of any resource that:
- Has a manager (`?manager` property),
- Is labeled as ""SBV Vitesse"" (`rdfs:label` predicate),
- Had the season ""2020-2021"" (`dbpprop:season` predicate).",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ""Manuel Pinto da Costa""@pt .
  ?person ns:officeHolder ""Prime Minister of Portugal"" .
  ?person ns:militaryConflict ""Carnation Revolution"" .
}",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"SELECT ?office1 WHERE { ?person a dbpedia:Politician ; dbpedia:partyMemberOf dbpedia:Partido_P Popular ; dbpedia:office ?office1 . }
AND {
  ?office1 rdfs:label ?office_label .
  ?office_label a owl:sameAs [ dbo:hasOffice ""Alberto Ruiz-Gallardón"" ] .
}

SELECT ?office2 WHERE { ?person a dbpedia:Politician ; dbpedia:partyMemberOf dbpedia:Partido_P Popular ; dbpedia:office ?office2 . }
AND {
  ?office2 rdfs:label ?office_label .
  ?office_label a owl:sameAs [ dbo:hasOffice ""Mariano Rajoy"" ] .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"SELECT ?parent WHERE {
  ?child princes_faisal_binhussein .
  ?child rdfs:parents ?parent .
  ?parent a owl:Thing .
  ?parent rdf:type owl:RoyalPerson .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"SELECT ?deathPlace WHERE {
  ?actor dbo:role ?role .
  ?role rdfs:label ""Kim Min-jun"" .
  ?actor dbpprop:deathPlace ?deathPlace
}
LIMIT 1",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"The SPARQL query to retrieve this information from DBpedia would involve looking for the entity associated with Dawid Olejniczak and then checking its country property. Here's how the query could look:

```sparql
SELECT ?country WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:residence dbo:CountryOfResidence(?country) .
  ?person rdfs:label ""Dawid Olejniczak""@pl .
}
```

This query selects the country where Dawid Olejniczak resides (`?country`), assuming that he is a person (`?person a dbpedia-owl:Person`) and that his residence (`dbpedia2:residence dbo:CountryOfResidence(?country)`) is in a country (`?country`).",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"A SPARQL query to retrieve this information might look like:

```sparql
PREFIX award: <http://dbpedia.org/ontology/Award>
PREFIX person: <http://dbpedia.org/ontology/Person>

SELECT ?birthplace WHERE {
  ?awardee a award:Award ;
            person:nationality ""Japanese"" .
  ?awardee rdfs:seeAlso ?info .
  ?info a person:Person ;
          foaf:name ?name ;
          dc:birthplace ?birthplace .
}
```

This query uses the prefixes for the ontology terms related to awards and persons. It selects the birthplace of any person who is both an award recipient (with nationality Japanese) and has a `foaf:name` and `dc:birthplace`.",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?altEgo WHERE {
  ?altEgo a :Person.
  ?altEgo rdfs:label ""Lamont Cranston""@en.
  ?altEgo :hasAlterEgo ?shadow.
  ?shadow a :Superhero.
  ?shadow rdfs:label ""The Shadow""@en.
  ?shadow :originatesFrom ""The Shadow radio series"".
  ?parent a :Royalty.
  ?parent rdfs:label ""Yeshaq I""@en.
  ?child a :Person.
  ?child rdfs:label ""Baeda Maryam I""@en.
  ?child :hasParent ?parent
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?office1 ?politician1 WHERE {
  ?politician1 a ns:people.person; rdfs:label ""Alberto Ruiz-Gallardón""@es.
  ?politician1 ns:office ?office1.
}
AND
SELECT ?office2 ?commander2 WHERE {
  ?commander2 a ns:people.person; rdfs:label ?commanderLabel.
  ?commander2 ns:office ?office2.
  OPTIONAL { ?commander2 ns:conflict ""Central African Republic Civil War"" . }
}
ORDER BY ?office1, ?office2",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","SELECT ?person
WHERE {
  ?child1 a dbpedia:Royalty ;
           dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
          dbpedia:hasChild ?charlesMartel .
  ?charlesMartel a dbpedia:Charles_Martel_of_Anjou ;
               dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Royalty ;
              dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person ;
            dbpedia:hasParent ?philipDespot .
  ?charlesMartel a dbpedia:Charles_Martel_of_Anjou .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"SELECT ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:residenceCountry ?country_of_residence .
  ?party a dbpedia:PoliticalParty;
    dbpedia:headquarterLocation ?country_of_administration .
  ?person rdfs:label ""Álvaro Quirós"" .
  ?party rdfs:label ""Spanish Socialist Workers' Party (PSOE)"" .
}",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","The SPARQL query to achieve this would be:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?person
WHERE {
  ?person a rdf:Resource .
  ?person rdf:type owl:Thing .
  OPTIONAL { 
    ?person rdf:type ns:Actor . 
  }
  OPTIONAL { 
    ?person rdfs:label ?name .
    FILTER (regex(str(?name), ""and"")) 
  }
  OPTIONAL { 
    ?person ns:occupation ?profession .
    FILTER (str(?profession) = ""Actor"") 
  }
  UNION
  {
    ?person a rdf:Resource .
    ?person rdf:type owl:Thing .
    OPTIONAL { 
      ?person rdf:type ns:Actor . 
    }
    OPTIONAL { 
      ?person rdfs:label ?name .
      FILTER (regex(str(?name), ""Actor"")) 
    }
    OPTIONAL { 
      ?person ns:occupation ?profession .
      FILTER (str(?profession) != ""Actor"") 
    }
  }
}
```

This query looks for individuals (`?person`) who have either been actors (`OPTIONAL { ?person rdf:type ns:Actor }`) or have a label that includes the word ""and"" (`FILTER (regex(str(?name), ""and""))`). Additionally, it checks if they have an occupation other than acting (`FILTER (str(?profession) != ""Actor"")`).",2,2,3,1,2,3,3,71,0,0,4210,0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","SELECT ?spouse
WHERE {
  ?actor dbpedia:role ""1000 Dollars a Minute"" .
  ?actor foaf:memberOf dbpedia:PiratePartySweden .
  ?landmark dbpedia:Eiffel Tower .
  ?actor dbpedia:heightInMetres 20.116800000000001347 .
  ?spouse a dbo:Person ;
           dbpedia:familyRelation ""spouse of"" ?actor
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"The SPARQL query to retrieve this information would look for individuals who have both ""composer"" or ""music composer"" roles and also have an entry as an ""artist"" in the DBpedia dataset. Here's how we might construct such a query:

```sparql
PREFIX dbppro: <http://dbpedia.org/ontology/>

SELECT ?writer
WHERE {
  ?writer a dbppro:Artist ;
            dbppro:role dbppro:MusicComposer .
  OPTIONAL { ?writer dbppro:hasWork dbpedia:musicAlbum [ a dbppro:Soundtrack; rdfs:label ""Wizards of Waverly Place (soundtrack)""] }
}
```

This query selects individuals (`?writer`) who are both artists (`a dbppro:Artist`) and music composers (`dbppro:role dbppro:MusicComposer`). It also includes an optional clause to filter for those who have a work that is labeled as the ""Wizards of Waverly Place (soundtrack)"".",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"SELECT ?band WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Kim Wilson"" .
  ?person dbpprop:bandMemberOf ?band
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"SELECT ?person ?birthplaceCountry
WHERE {
  ?person a :Actor ;
            foaf:bornIn ?birthplace .
  ?birthplace a :City;
             rdfs:label ""Jamshedpur"" .
}
LIMIT 1",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person WHERE {
  ?person a dbppro:Person;
    dbppro:fieldOfStudy ?field .
  ?field rdfs:label ""Your Specific Field"" .
}",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","To find this information, we need to:
1. Identify the person with the name ""Richard Grant Esterhuysen"".
2. Check if they have been involved in acting (actor) and television work (television show).
3. Find a movie associated with this individual.

Given that DBpedia contains structured data about people, roles, and media, we can construct a SPARQL query to extract the necessary information.",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"SELECT ?politician ?officeHolder WHERE {
  ?commander rdfs:label ""Michał Kazimierz Pac"" .
  ?battle rdfs:label ""Battle of Vienna (1678)"" .
  ?battle a dbpedia-owl:War .
  ?commander ns:commandedIn ?battle .
  ?politician rdfs:label ?politicianLabel .
  ?officeHolder rdfs:label ?officeHolderLabel .
  ?politician ns:isOfficeHolderOf ?officeHolder .
  ?politician a dbpedia:Poltician
  FILTER (lang(?politicianLabel) = ""en"")
}",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","SELECT ?band WHERE {
  ?person1 a dbpedia:Musician;
           dbpedia:memberOf ?band .
  ?person2 a dbpedia:Musician;
           dbpedia:memberOf ?band .
  ?person1 rdfs:label ""Kim Wilson"";
           dbo:genre ""Blues rock"".
  ?person2 rdfs:label ""Nick Curran"";
           dbo:genre ""Blues rock"".
  ?band rdfs:label ""The Fabulous Thunderbirds"" .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"SELECT ?associated_artist WHERE {
  ?bandMember a dbpedia:Musician;
  dbpedia:is_a_part_of dbpedia:The Alan Parsons Project;
  ?bandMember rdfs:label ""Stuart Tosh""@en .
  ?bandMember a dbpedia:Musician;
  dbpedia:is_a_part_of dbpedia:The Alan Parsons Project;
  ?bandMember rdfs:label ""Billy Lyall""@en .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","The SPARQL query should start by identifying Na'od and then use the `broader` property to trace up the family tree. We will also filter for individuals who are both royalty and office holders. Here's how we might construct the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?person WHERE {
  ?person a rdf:Resource.
  ?person rdfs:label ""Na'od""@en .
  
  ?person broader ?parent .
  ?parent broader ?grandparent .

  ?person rdfs:label ""Royalty"" .
  ?person rdfs:label ""Office Holder"" .
  
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for English labels
}
```

This query starts by selecting all resources labeled as ""Na'od"" in English. It then uses the `broader` property to trace up the family tree, filtering for individuals who are both labeled as ""Royalty"" and ""Office Holder"".",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"The SPARQL query will look for the band ""Mudvayne"" and extract the members from the relevant DBpedia resource.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?band rdf:type dbpedia-owl:MusicBand .
  ?band rdfs:label ""Mudvayne"" .
  ?bandMember a dbpedia-owl:Musician .
  ?bandMember rdf:type dbpedia-owl:BandMemberOf ?band .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"SELECT ?conflictLabel ?showLabel
WHERE {
    ?person a dbpedia:Person;
        dbpedia:P31 wd:Q12297.
    ?person rdfs:label ?conflictLabel.
    ?person rdfs:label ?showLabel.
    FILTER (regex(str(?conflictLabel), ""Maria I of Portugal""))
    FILTER (str(?showLabel) = ""Maria I of Portugal"")
}",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?royaltyFather a dbpedia:Monarch .
  ?royaltyMother a dbpedia:RoyaltyPerson .
  ?child a dbpedia:Person .
  ?child rdfs:father ?royaltyFather .
  ?child rdfs:mother ?royaltyMother
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?archduchess a dbpedia-owl:Person ;
               dbpedia2:hasSpouse ?spouse ;
               rdfs:label ""Archduchess Helena of Austria"" .
  ?spouse a dbpedia-owl:Person ;
          dbpprop:isRoyalty true .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","The SPARQL query to retrieve this information from DBpedia should focus on the band ""Uncle Murda"" and extract details about its members, specifically Ackquille Jean Pollard (Uncle Murda), and then determine the location associated with this band. Here is a possible SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band ?bandLocation WHERE {
  ?band rdfs:label ""Uncle Murda""@en .
  ?band dbpediahasMember [ dbpedia:birthPlace ""New York"" ] .
  ?band ns:memberName ""Ackquille Jean Pollard""@en
}
```

This query looks for a band labeled ""Uncle Murda"" in English, finds members born in New York (which should be Ackquille Jean Pollard), and then returns the location associated with this band.",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","SELECT ?spouse
WHERE {
  ?actor dbpedia:name ""Jackie Cooper"".
  ?actor dbpedia:wife ?spouse.
  ?spouse rdfs:label ""Harriette Arlene Lake""@en.
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:partOfMilitaryUnit ?militaryForce.
  ?person rdfs:label ""Robert Calder""@en;
    dbpedia:birthDate ""1762"";
    dbpedia:deathDate ""1845"".
  ?event a dbpedia:Event;
    dbpedia:partOfHistoricalPeriod ""Napoleonic Wars""@en.
  ?societalEvent a dbpedia:SocietalEvent.
  ?person rdfs:label ""William Bayne""@en;
    dbpedia:birthDate ""c.1749"";
    dbpedia:deathDate ""1818"".
  ?war a dbpedia:MilitaryConflict;
    rdfs:label ""French campaign in Egypt and Syria""@en.
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","Given the complexity and the need for specific information, a direct SPARQL query might require multiple steps or subqueries. Here's an outline of how we could approach it:

1. **Find the film associated with Manuel Huerga**:
   - Use `dbpedia-owl` to find films related to Manuel Huerga.

2. **Identify the soccer player in the film who is also Juan Carlos Molina**:
   - Filter the results from step 1 to find a soccer player and check if it matches Juan Carlos Molina.

3. **Determine the team this player was part of**:
   - Extract the team information from the identified player's DBpedia page.

4. **Find a soccer player and manager born on 1979-11-03**:
   - Use `dbpedia-owl` to find individuals matching these criteria.

5. **Ensure all individuals are linked appropriately through DBpedia resources**:
   - Verify that all the extracted information is correctly linked through DBpedia URLs.

Due to the complexity and the need for precise data, a single SPARQL query might not suffice. Instead, we may need to execute multiple queries or use a combination of queries and logical operations. Here's a simplified version of what some of these queries might look like:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?film dbo:actor ?player .
  ?player a dbo:SoccerPlayer .
  ?player dbo:role dbo:ActorRoleInFilm ?film .
  ?film rdfs:label ""Title of the film with Manuel Huerga"" .
  FILTER (?player = ""Juan Carlos Molina"") 
}

# Further queries to find the team and the manager born on 1979-11-03
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","SELECT ?person WHERE {
  ?person a dbpedia:MusicalArtist .
  ?bandMembers a dbpedia:BandMemberOf ; dbpedia MEMBER_OF ?person .
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person ns:birthPlace ""Florida""@en .
  ?bandMembers rdfs:label ""Bobby Shmurda""@en .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?bandMember
WHERE {
  ?bandMember a dbpedia:Musician .
  dbpedia:P31(?bandMember, dbpedia:Person) AND
  dbpedia:birthDateOf(?bandMember) >= ""1985-01-01""^^xsd:date AND
  dbpedia:birthPlaceOf(?bandMember) = ""Florida"" 
  UNION
  ?bandMember a dbpedia:BandMember .
  dbpedia:P31(?bandMember, dbpedia:Person) AND
  dbpedia:birthDateOf(?bandMember) >= ""1985-01-01""^^xsd:date AND
  dbpedia:birthPlaceOf(?bandMember) = ""Florida""
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:director ""Ted Post"";
    dbpedia:castMember ?actor .
  ?actor rdfs:label ""The Shadow""@en .
}",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?bandMember
WHERE {
  ?band rdfs:label ""Cavalera Conspiracy"".
  ?band a dbo:MusicBand.
  ?bandMember a dbo:MusicArtist .
  ?bandMember foaf:name ?bandMemberName
}
LIMIT 1",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"SELECT ?actor WHERE {
  ?movie a dbpedia:Film.
  ?movie star ?actor .
  ?actor rdfs:label ""Shelby Oaks""@en.
}
AND
SELECT ?artist WHERE {
  ?song a dbpedia:MusicAlbum.
  ?song performedBy ?artist .
  ?artist rdfs:label ""T.I.""@en.
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
    rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?commander ?showTitle ?eventTitle ?ducasWork ?author
WHERE {
  ?commander rdfs:label ""Jean Baptiste, Comte d'Arco"" .
  ?commander wdt:P31 wd:Q12263 . # Fronde (French Civil War)
  ?showTitle a wdt:P569; rdfs:label ?showTitleLabel .
  ?eventTitle a wdt:P279; rdfs:label ?eventTitleLabel . # Event related to Jean Baptiste, Comte d'Arco
  ?ducasWork a wdt:P571; rdfs:label ?ducasWorkLabel; dc:author ?author .
  ?author rdfs:label ""George Ducas"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?leader rdf:type ns:Person.
  ?leader rdfs:label ""Leader of National Party of Greece"".
  ?war a ns:War.
  ?leader ns:participatedIn ?war
}",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?parent WHERE {
  ?child a eg:AlumnusOf eg:EtonCollege .
  ?child eg:hasParent ?parent .
  ?parent a foaf:Person .
  ?parent rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer
WHERE {
  ?movie a dbpedia:Film.
  ?movie hasProducer ?producer .
  ?producer rdfs:label ""Warner Bros.""@en .
  FILTER (lang(?producer) = ""en"") 
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"SELECT ?awardee
WHERE {
  ?nomination awardLabel ""List of awards and nominations received by Janusz Kamiński"" .
  ?awardee ns:peopleName ?name .
  ?awardee rdfs:label ""Janusz Kamiński"" .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","SELECT ?child WHERE {
  ?grandchild a dbpedia:Person ;
               dbpedia:P31 dbpedia:ChildOf ?parent ;
               dbpedia:P17 dbpedia:PredecessorOf ?anotherGrandchild .
  ?anotherGrandchild a dbpedia:Person ;
                dbpedia:P31 dbpedia:ChildOf ?firstGrandchild .
  ?firstGrandchild a dbpedia:Person ;
                 dbpedia:P31 dbpedia:ChildOf ?parent .
  ?parent a dbpedia:Person;
           dbpedia:P29 ""Duke Philipp of Württemberg"" .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","SELECT ?commander
WHERE {
  ?event battleName ""Battle of Cape Finisterre"" .
  ?event year 1805 .
  ?commander a ns:https://www.w3.org/2002/07/owl#Person ;
            rdfs:label ?name .
  
  ?war a ns:https://dbpedia.org/ontology/War .
  ?war hasCombatant ?militaryForce .
  ?militaryForce a ns:https://www.wikidata.org/propose/entity/Q12345 .
  ?commander rdfs:member ?militaryForce .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"SELECT ?player ?team
WHERE {
  ?player dbpprop:birthDate ?dob.
  ?player rdfs:label ?playerLabel .
  ?player dbpprop:role dbpprop:athlete .
  ?player dbpprop:memberOf ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (STR(?dob) = ""1980-01-01"") .
  ?playerLabel STRLANG:beginsWith ""Marty Pollio"" .
  ?teamLabel STRLANG:beginsWith ""Pablo Aimar's team""
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"SELECT ?person
WHERE {
  ?person a ns:Person ;
            ns:nationality ns:SpanishCitizen ;
            ns:country ns:Spain .
}",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor 
WHERE {
  ?actor :hasChild ?child .
  ?child :father ?spouseOfMariclare .
  ?spouseOfMariclare :isSpouseOf ?mariclareCostello .
  ?actor :location ""Los Angeles, California"" .
  ?actor :roleInMovie ""The Movie Title"" .
  ?mariclareCostello :roleInMovie ""Another Role in the Same Movie""
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","SELECT ?parent1 ?parent2
WHERE {
    ?awardee1 rdfs:label ""Rodney Lees"" .
    ?awardee1 dbpprop:award ""Rodney Lees Award"" .
    ?awardee1 dbpprop:awardedBy ?awardeeGroup1 .
    ?awardeeGroup1 foaf:groupMember ?parent1 .

    ?childOfFrederick rdfs:label ""Child of Frederick Stanley, 16th Earl of Derby"" .
    ?childOfFrederick dbpprop:childOf ?child .
    ?child dbpprop:father ?parent2 .
    ?child dbpprop:mother ?parent3 .

    ?parent1 a foaf:Person .
    ?parent2 a foaf:Person .
    ?child a foaf:Person
}
ORDER BY ?parent1, ?parent2",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"The SPARQL query will look for an entity with the given name ""Frédéric Bouraly"" and then retrieve the value of the property ""profession"".

```sparql
SELECT ?person ?profession 
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Frédéric Bouraly""@fr .
  ?person rdf:type dbo:Artist . # Assuming Frédéric Bouraly is an artist, adjust type as necessary
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","To find this information, we can use a SPARQL query that searches for actors who have been associated with the role of The Shadow in movies or television. We will use the DBpedia dataset which contains structured information about movies and actors.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor
WHERE {
  ?movie a rdf:Statement ;
            rdf:subject <http://dbpedia.org/ontology/Movie> ;
            rdf:predicate dbpedia:mainActor ;
            rdf:object ?actor .
  ?actor rdfs:label ""The Shadow""@en .
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","SELECT ?subject WHERE {
  ?subject a ns:filmCharacter .
  ?subject rdfs:label ""Наши парни"" .
  ?subject appearingIn [ ns:film ""Aleksandr Filimonov""] .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"SELECT ?governor_name ?governor_birth_place ?vince_gilligan_birth_place
WHERE {
  ?governor a dbpedia-owl:Politician ;
            dbpedia2:office ""Governor of Virginia"" .
  ?governor rdfs:label ?governor_name .
  ?vince_gilligan a dbpedia:Person ;
               dbpedia2:birthPlace ?vince_gilligan_birth_place .
  ?governor_name = ?vince_gilligan
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","SELECT ?father WHERE {
  ?prince a ns:Person ;
            ns:hasFather ?father .
  ?prince ns:name ""Philip I, Prince of Taranto"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","SELECT ?parent WHERE {
  ?awardee rdfs:father ?father .
  ?father rdf:type foaf:Person .
  ?father ns:office ?office .
  ?office a n:PoliticianOffice .
  ?earl_derby rdfs:child ?awardee .
  ?earl_derby ns:parent ?mother .
  ?wife_of_earl_derby ns:parent ?mother
}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?person
WHERE {
  ?person a :politician .
  ?person a :office_holder .
  ?person ns:spouse ""Hillary Clinton"" .
  ?person ns:residence ""Chappaqua, New York"" .
  ?work a :book .
  ?commander rdfs:label ?commander_label .
  ?author rdfs:label ?author_label .
  ?work dc:creator ?author .
  ?work dct:isPartOf [ a dcterms:Collection ; dct:title ""Third Taiwan Strait Crisis"" ] .
  ?person ns:commander ?commander
}
WHERE {
  ?commander rdfs:label ?commander_label .
  FILTER (lang(?commander_label) = ""en"")
}",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?commander a dbpedia:Person ;
            dbpedia:P31 wd:Q15163 .
}",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?war ?militaryForce WHERE {
  ?person a ns:people.person;
    rdfs:label ""William Bayne""@en.
  ?person ns:serviceBranch ns:RoyalNavy.
  ?war a ns:war;
    ns:participatedIn ?person.
  ?war ns:militaryForce ?militaryForce.
}",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:awardedBy ?awardingAuthority .
  ?awardingAuthority a dbpedia-owl:Organization ;
                    rdfs:label ""British Army""@en .
  ?person rdfs:label ""Charles Parsons""@en .
  FILTER (lang(?person) = ""en"") .
  ?award a dbpedia-owl:Award
}",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"The SPARQL query would be designed to search for Emilia's band members within the DBpedia dataset. Assuming Emilia (singer) has a well-defined entry in DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?bandMember
WHERE {
  ?artist dbpprop:genre ""Pop music"" .
  ?artist dbpprop:name ""Emilia"" .
  ?artist rdfs:member ?bandMember .
}
```

This query selects the `?bandMember` of any artist with the name ""Emilia"" who has the genre ""Pop music"". The `rdfs:member` property is used to link artists to their band members.",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?parent WHERE {
  ?charles_martel_of_anjou a ns:people/person;
  ?charles_martel_of_anjou father ?parent .
  ?parent a ns:people/person.
  
  ?charles_ii_of_neapoli a ns:people/person;
  ?charles_ii_of_neapoli spouse ?spouse .
  ?spouse a ns:people/person.
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer
WHERE {
  ?show rdf:type dbpedia-owl:TelevisionSeries .
  ?show rdfs:label ""Coke Studio Philippines"" .
  ?producer a dbpedia-owl:FilmProducingCompany .
  ?producer rdfs:label ?producerLabel .
  FILTER (lang(?producerLabel) = ""en"")  # Assuming English language
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"SELECT ?country WHERE {
  ?athlete a dbpedia:Athlete ;
            dbpedia:nationality dbpedia:Poland ;
            dbpedia:residence dbpedia:Łódź ;
            dbpedia:conflict dbpedia:Russo_Turkish_War_1768_1774 .
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor ?parent WHERE {
  ?actor rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?actor dbpprop:roleInFilm/TvShow ?role .
  ?role a dbo:FilmOrTVEpisode .
  ?parent a dbo:Person ;
           dbpprop:hasChild ?actor
} 

AND {
  ?actor rdfs:label ""Doon Arbus""@en .
  ?actor dbo:birthDate ""1953""^^xsd:gYear .
  ?parent a dbo:Person ;
          dbpprop:hasParent ?grandparent
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"SELECT ?office1 ?politician1 WHERE {
  ?politician1 a dbpedia-owl:Politician;
    foaf:name ""Miguel Maura""@en.
  ?politician1 rdfs:member [ a dbpedia-owl:PoliticalParty ;
                           rdfs:label ?party_name ].
  ?party_name a dbpedia-owl:PoliticalParty .
  ?office1 a dbo:Office; rdfs:label ?office_label1
} 

SELECT ?office2 ?politician2 WHERE {
  ?politician2 a dbpedia-owl:Person;
    foaf:name ""Unknown Commander""@en.
  ?politician2 rdfs:member [ a dbpedia-owl:Organization ;
                           rdfs:label ""Central African Republic"" ].
  ?office2 a dbo:Office; rdfs:label ?office_label2
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"Given the complexity of the query and the need for specific data retrieval, a direct SPARQL query might involve multiple steps:

1. Identify Doon Arbus in the DBpedia dataset.
2. Find any familial relationships (parents) associated with Doon Arbus.
3. Retrieve information about movies Doon Arbus has been involved with.
4. From those movies, identify the actors and check if they meet the criteria of being deceased and having lived in Los Angeles.

However, due to the complexity and the need for potentially detailed data extraction, a simplified SPARQL query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia-owl:hasParent ?parent.
  ?parent a dbpedia-owl:Person;
    rdfs:label ?parentLabel .
  
  ?movie a dbpedia-owl:Movie;
    dbpedia-owl:actor ?actor .
  
  ?actor a dbpedia-owl:Actor;
    foaf:name ?actorName ;
    owl:sameAs ?person .
  
  FILTER (lang(?actorName) = ""en"")  # Assuming English language for simplicity
  FILTER (xsd:string(?parentLabel) > 0)  # Parent has a label (indicating they are a person)
  FILTER (xsd:literal(?actorName) = ""Doon Arbus"")  # Check if Doon Arbus is the actor
  FILTER (?actorName contains ""Los Angeles"" )  # Actor lived in Los Angeles
}
```

This query attempts to find an actor named Doon Arbus who has a parent living in Los Angeles and has acted in a movie. It uses several SPARQL filters to narrow down the results based on the given conditions.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace
WHERE {
  ?awardee award ""Emmy Award for Outstanding Drama Series"" .
  ?author_work book ""El Deafo"" .
  ?politician office ""Governor of Virginia"" .
  ?awardee ns:birthPlace ?birthPlace .
  ?author_work ns:author ?author .
  ?politician ns:name ?politician_name
}
ORDER BY ?birthPlace",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?spouse WHERE {
  ?actor a dbpedia-owl:Actor .
  ?actor rdfs:label ""Roger Pryor"" .
  ?actor dbpprop:politicalPartyMemberOf ?party .
  ?party rdfs:label ""Ruling party in Central, Louisiana"" .
  ?spouse a dbpedia-owl:Person .
  ?actor wdt:P31 ?spouse
}

SELECT ?birthName WHERE {
  ?person a dbpedia-owl:Person .
  ?person rdfs:label ""Ann Sothern"" .
  ?person foaf:name ?birthName
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?actor
WHERE {
  ?series rdfs:label ""Tinsel"".
  ?series dbpprop:mainActor ?actor .
  ?actor foaf:name ?actorName
}
LIMIT 1",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"SELECT ?residence ?office WHERE {
  ?politician a :Politician.
  ?politician ns:name ""Alberto Ruiz-Gallardón"".
  ?politician rdf:type :Conservative_Republican_Party_(Spain).
  ?politician foaf:residence ?residence.
  ?politician foaf:office ?office.
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?name
WHERE {
  ?person ns:givenName ""Pacely"" .
  ?person rdfs:label ?name .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?birthPlace .
  ?person rdfs:label ""Vince Gilligan""@en .
  ?person rdfs:label ""Cece Bell""@en .
  ?person rdfs:label ""Glenn Youngkin""@en
}
ORDER BY ?birthPlace",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"SELECT ?unit WHERE {
  ?event ""Pickett's Charge"" .
  ?unit a dbpedia-owl:MilitaryUnit .
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","The SPARQL query will need to identify the relevant information about the award and its recipient. Given that the award is associated with the Pontificia Universidad Católica de Puerto Rico, we can start by querying their database for related awards and their recipients. Additionally, we need to filter for the recipient being an American and a settlement (which might imply they are from a specific town or city).

Here's a possible SPARQL query:

```sparql
PREFIX award: <http://example.com/awardSchema#>
PREFIX person: <http://example.com/personSchema#>

SELECT ?awardName ?recipientName ?recipientPlaceOfBirth
WHERE {
  ?award award:awardedTo ?recipient .
  ?recipient person:nationality ""American"" .
  ?recipient person:birthLocation ?recipientPlaceOfBirth .
  ?recipient a award:ActorAwardRecipient .
  ?recipient parent :actor ?actorParent .
  ?actorParent a person:Actress
}
```

This query assumes the existence of appropriate schemas (`awardSchema` and `personSchema`) that define the relationships between awards, recipients, their nationality, place of birth, and their parent's profession. The query selects the name of the award (`?awardName`), the name of the recipient (`?recipientName`), and the place of birth of the recipient (`?recipientPlaceOfBirth`).",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"SELECT ?person
WHERE {
  ?person a :Person ;
            :birthPlace ?birthLocation .
  ?birthLocation a :Location;
                :country ?country_of_birth .
  ?country_of_birth rdfs:label ""Sandro Bertaggia's birth country""@en .
  ?person a :Person ;
           :diedIn ?deathLocation .
  ?deathLocation a :Location;
               :country ?country_of_death .
  ?country_of_death rdfs:label ""Same as the country of birth""@en .
}",2,3,3,2,1,2,3,28,0,0,906,0,0.0,0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?eventLabel ?tvShow
WHERE {
    ?war a dbpedia:War .
    ?war rdfs:label ?eventLabel .
    ?war dbpprop:commander [ owl:inverseOf dbpprop:child_of ] ?parent .
    ?parent a dbpedia:Person ;
           rdfs:father ?grandParent .
    ?grandParent a dbpedia:Monarch ;
                 rdfs:son ?parent .
    ?parent ns:memberOf dbpedia:2nd_Dragoon_Regiment .
    ?tvShow a dbpedia:Television_Series .
    ?war dbpprop:part_ofDbpedia:Societal_event .
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","A SPARQL query would need to:
1. Use the DBpedia dataset to find Reneta Kamberova's details.
2. Search for an alumnus of Пловдивски университет „Паисий Хилендарски“ and extract their birthplace.

Here is a sample SPARQL query that attempts to fulfill these requirements:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthplace
WHERE {
  ?person a dbo:Alumnus ;
            dbo:alumniOf <http://dbpedia.org/ontology/University> .
  ?person rdfs:label ?name.
  ?name ns:prefLabel ""Reneta Kamberova""@en .
  ?person dbo:birthPlace ?birthplace
}
```

This query looks for an individual who is labeled as ""Reneta Kamberova"" and is an alumnus of the university with the identifier from DBpedia's ontology. It then selects their birthplace.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent [ dbpedia:isA dbpedia:Person ; dbpedia:name ""Princess Muna al-Hussein"" ] ;
            rdfs:label ?royaltyLabel .
  FILTER (lang(?royaltyLabel) = ""en"")  # restrict to English language
}",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","The SPARQL query would look something like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia2: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia2:Person ;
            dbpedia2:name ""George Hamilton Cameron"" .
}
```

This query selects the `person` resource that has the `name` property set to ""George Hamilton Cameron"".",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"A SPARQL query to find such a commander would involve querying the DBpedia dataset for individuals associated with the United States Navy and a specific war. However, due to the logical inconsistency in the question, we will assume a reasonable interpretation: finding a significant commander who was involved in a notable war.

Here's a simplified SPARQL query that could be used:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?commander a dbpedia-owl:Person ;
             dbpedia-owl:hasMilitaryServiceMemberOf dbpedia:United_States_Navy ;
             rdfs:label ?name .
  OPTIONAL { 
    ?commander rdfs:label ?war_involvement . 
    ?war_involvement a dbpedia:War .
  }
}
```

This query selects individuals (`?commander`) who are members of the United States Navy (`dbpedia:United_States_Navy`). It also looks for optional information about their involvement in a war (`?war_involvement`), which should be a `dbpedia:War`.",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:isAuthorOf <http://dbpedia.org/ontology/Work#El_Deafo>;
    dbpedia:office dbpedia:Governor_of_Virginia .
  ?person rdfs:label ?nameLabel .
  FILTER (lang(?nameLabel) = ""en"") .
  ?birthPlace a dbpedia:SpatialThing;
    dbpedia:isLocatedInRegion ?region .
  ?region a dbpedia:AdministrativeTerritory;
    dbpedia:hasGovernor ?governor .
  ?governor rdfs:label ?governorLabel .
  FILTER (regex(?governorLabel, ""Youngkin"")) .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?region rdfs:label ""Eastern European Time"" .
  ?region wdt:P421 wd:Q12345.
  ?resident dwc:birthLocation ?birthplace .
  ?region dwc:isPartOf wd:Q456789.
}",3,4,4,3,1,3,2,20,0,0,142,0,0.0,0
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"SELECT ?commander ?officeHolder ?politicianOffice ?politicalPartyLeader
WHERE {
    ?commander a :Commander .
    ?commander a :Office_Holder .
    ?commander a :Politician .
    ?officeHolder rdfs:label ""Central African Republic Civil War"" .
    ?politicianOffice a :Office .
    ?politicalPartyLeader a :Political_Party_Leadership .
    ?politicalPartyLeader rdfs:label ""Miguel Maura"" .
    ?commander foaf:is_a ?officeHolder .
    ?officeHolder ns:tenantOf [ a ns:Building ; rdfs:label ""Madrid""] .
    ?commander ns:has_member ?politicalPartyLeader
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"SELECT ?actor ?team WHERE {
  ?actor a ns:0.12277434353276134 dbo:SoccerPlayer .
  ?actor a ns:0.0dbo:Athlete .
  ?actor rdfs:label ?actorLabel .
  ?actorLabel string-interpolate ""Pablo Aimar"" .
  ?actor dbpprop:clubMemberOf ?team .
  ?team a ns:0.0dbo:FootballClub .
  FILTER (STR(?actorLabel) = ""Juan Carlos Molina"")
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"SELECT ?artist_name WHERE {
  ?artist_name ns:performer ?curran .
  ?curran rdfs:label ""Nick Curran"" .
}
AND
SELECT ?band_name ?band_members WHERE {
  ?band_name rdfs:label ""The Fabulous Thunderbirds"" .
  ?band_members ns:member ?clapton .
  ?clapton rdfs:label ""Eric Clapton"" .
}
ORDER BY ?artist_name, ?band_name",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?manager_name
WHERE {
  ?manager rdf:type dbpedia:Manager .
  ?manager rdfs:label ""West Germany"" .
  ?manager ns:managerOfSoccerClub ?vfl_bochum_2007 .
  ?manager ns:managerOfSoccerClub ?sbt_vitesse_2021 .
}",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"SELECT ?person
WHERE {
  ?person ns:birthPlace ?place.
  ?place rdfs:label ""Helsinki"".
  ?person ns:nativeOriginOrance ?originRegion.
  ?originRegion a :GrandDuchyOfFinland .
  ?originRegion a :RussianEmpire .
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"Given that Michał Kazimierz Pac was part of the Polish-Lithuanian Commonwealth's military forces during the Swedish Deluge (Chmielnicki Uprising), we can use DBpedia to query for this information. The SPARQL query will look for the military units involved in the event ""Swedish Deluge"".

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:partOfMilitaryConflict dbpedia:Swedish_Deluge .
  ?person foaf:name ""Michał Kazimierz Pac"" .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","SELECT ?awardee ?birthplace WHERE {
  ?awardee a skos:Concept .
  ?awardee rdfs:label ?awardeeLabel .
  ?awardee ns:hasFellowship ""Sangeet Natak Akademi Fellowship"" .
  ?awardee ns:awardYear ?yearAwarded .
  ?awardee foaf:birthPlace ?birthplace
}",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"SELECT ?spouse
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:hasSpouse ?spouse .
  ?person rdfs:label ""Carrie Johnson""@en .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?place ?type ?location WHERE {
  ?place rdfs:label ""Port Tobacco, Maryland"" .
  ?place rdfs:type ?type .
  ?type a dbo:Settlement .
  ?place geo:locatedIn dbpedia-owl:United_States .
  ?place rdfs:label ""Stockbridge, Massachusetts"" .
  ?place rdfs:type ?type .
  ?type a dbo:Settlement .
  ?place geo:locatedIn dbpedia-owl:United_States
}",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","SELECT ?party
WHERE {
  ?municipality ""name"" ""Central, Louisiana"".
  ?municipality ""mayorParty"" ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?war WHERE {
  ?greekLeader a ns:Person ;
               ns:leaderOf ns:NationalPartyOfGreece ;
               ns:basedIn ns:Athens .
  ?war a ns:War .
  ?greekLeader ns:participatedIn ?war
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?associated_artist
WHERE {
  ?bandMember rdf:type dbppro:Musician.
  ?bandMember rdfs:member ?band .
  ?band a dbppro:Band .
  ?band rdfs:label ""Burnt by the Sun""@en .
  ?associated_artist a dbppro:Artist .
  ?bandMember foaf:isPrimaryMusicalArtist ?associated_artist
}",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?childParent
WHERE {
  ?child a dbpedia:Person;
  dbpedia:hasFather ?father .
  ?father rdfs:label ""Allan Arbus""@en .
  ?child rdfs:label ""Child of Allan Arbus""@en .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"SELECT ?player ?manager
WHERE {
  ?player dbpprop:hasClub [ a dbpprop:SoccerClub ;
                           dbpprop:name ""FC St. Pauli"" ] .
  ?player foaf:memberOf [ a dbpprop:FootballTeam ;
                          dbpprop:name ""FC St. Pauli"" ] .
  ?manager dbpprop:manages [ a dbpprop:SoccerClub ;
                           dbpprop:name ""FC St. Pauli"" ] .
  ?player rdfs:label ""Thomas Letsch""@de.
}",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","SELECT ?party WHERE {
  ?politician a ns:people.person;
    rdfs:label ""Roy Leonardo Barreras Montealegre""@es.
  ?politician ns:memberOf ?party .
  ?politician ns:father ?father .
  ?father a ns:people.person;
    rdfs:label ""Sofía Petro""@es.
  ?father ns:memberOf ?father_party
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:politicalAffiliation dbpprop:Republican_Party_of_Louisiana .
  SERVICE wikibase:label { 
    bd:entity ?label . 
  }
  FILTER (lang(?label) = ""en"") 
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?officer a ns:people.person;
    rdfs:label ""William Bayne""@en;
    nao:role ""Royal Navy officer"";
    ns:serveInConflict ?war.
}",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","SELECT ?commander ?show ?work_writer
WHERE {
  ?commander rdfs:label ""Leopold I"" .
  ?show rdfs:label ""The Name of the Rose"" .
  ?work_writer foaf:name ""George Ducas"" .
  ?work_writer a nfo:Work.
  ?work_writer dc:creator ?commander .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
  dbpedia:hasSpouse ?spouse ;
  dbpedia:name ""Caroline Louise Bevan Symonds"" .
}",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"SELECT ?person
WHERE {
  ?person a dbpedia:Artist .
  ?person rdfs:label ""Joey B""@en .
  ?person dbpprop:role dbpedia:Musician .
  ?person dbpprop:role dbpedia:Writer .
  ?person dbo:performerInAlbum dbpedia:The Live Anthology
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?child ?parent WHERE {
    ?child a ns:people.person .
    ?child ns:father ?parent .
    ?parent ns:microformat-person.type ""politician"" .
    ?child ns:vcard.fn _:fn .
    _:fn ns:vcard.local ""Frederick Stanley, 16th Earl of Derby""
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","The SPARQL query will involve querying the DBpedia dataset for information about these films and their actors. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainCharacter ?role.
  ?role rdfs:label ""Rustlers' Rhapsody""@en .
  ?actor rdfs:label ?actorName .
}
UNION
{
  SELECT ?actor WHERE {
    ?movie a dbpedia:Film;
      dbpedia:mainCharacter ?role.
    ?role rdfs:label ""Actor""@en .
    ?actor rdfs:label ?actorName .
  }
}
```

This query first selects the actor for the film ""Rustlers' Rhapsody"" by looking for the main character of the movie and checking if its label is ""Rustlers' Rhapsody"". It then unionizes this with a similar query for the film ""Actor"", searching for the main character's label as ""Actor"".",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"SELECT ?entity WHERE {
  ?entity a :Ottoman_Empire_officer .
  ?entity rdfs:label ?name .
  ?entity foaf:awarded ?award .
  ?award a :Military_Award
}",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?person WHERE {
  ?person a dbpedia:Person;
  dbpedia:producedWork some dbpedia:MusicAlbum ;
  dbpedia:claim_to_fame dbpedia:""Cora Sue Collins"" .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","The SPARQL query to retrieve the information about Пловдивски университет „Паисий Хилендарски“ would involve querying for resources with the appropriate labels and properties. Assuming the university has an entry in DBpedia, a basic query might look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?university
WHERE {
  ?university a dbo:University .
  ?university rdfs:label ""Пловдивский университет ""Паисий Хилендарски"""" .
}
```

This query selects all resources that are classified as a university (`dbo:University`) and have the label ""Пловдивский университет ""Паисий Хилендарски"" in Russian.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"The SPARQL query to retrieve the entity in the United States could be constructed as follows:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbo:Country ;
            dbo:name ""United States"" .
}
```

This query selects all entities (`?entity`) that are of type `dbo:Country` and have the name ""United States"".",1,1,2,1,1,2,2,9,0,0,63421,0,0.0,0
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""Cynthia Ikponmwenosa Morgan""@en .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"SELECT ?leader ?office WHERE {
  ?politician a :PoliticalPerson.
  ?politician :affiliatedWith :Party .
  :Party a :PoliticalParty .
  ?residence a :Residence .
  ?politician :residesIn ?residence .
  :Alberto_Ruiz_Gallardón a :Person; :hasResidence ?residence .
  ?leader a :Politician; foaf:member :Party .
  ?leader :office ?office
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthplace .
  ?birthplace rdfs:label ?birthplaceLabel .
  FILTER (lang(?birthplaceLabel) = ""ru"" ) .
  ?region a dbpedia:Region;
    geo:locatedIn Russia;
    timeZone dbpedia:EET
}",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"The SPARQL query will look for movies where Richard E. Grant acted (`:actor ""Richard E. Grant""`) and then filter those results to see if any of the movies are also classified as television shows (`:isBasedOnTelevisionShow true`).

```sparql
SELECT ?movie 
WHERE {
  ?movie a :Movie ;
         :actor ""Richard E. Grant"" ;
         :isBasedOnTelevisionShow true .
}
```",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor1 ?actor2 WHERE {
  ?film1 a dbpedia:Film;
    dbpedia:mainActor ?actor1 .
  ?film2 a dbpedia:Film;
    dbpedia:mainActor ?actor2 .
  ?januszkamiinski a dbpedia:Person;
    dbpedia:sibling ?sibling .
  ?sibling rdfs:label ""spouse""@en
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"SELECT ?person ?profession
WHERE {
  ?person a dbpedia:Person;
  dbpedia2:hasAlterEgo [ dbpedia2:alterEgoOf ""The Shadow"" ] .
  ?person dbpedia2:isBandMemberOf [ a dbpedia2:MusicGroup; dbpedia2:name ""Bob Thompson (musician)"" ] .
  OPTIONAL { ?person rdfs:label ?profession }
}",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","SELECT ?entity ?force WHERE {
  ?entity a dbpedia:Person ;
            dbpedia2:awardedBy dbpedia:Quincy_Admits_Gillmore_Award .
  OPTIONAL { ?entity rdfs:label ?name }
  FILTER (lang(?name) = ""en"") .
  ?entity dbpedia2:conflictWar ?war .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person .
  ?person geo:locatedIn dbpedia:Los_Angeles .
  OPTIONAL { 
    ?person rdfs:label ?name; 
    ?name a nlp:NamedEntity ;
           nlp:namedEntType foaf:Person . 
  }
  FILTER (lang(?name) = ""en"") 
}",1,1,2,1,1,3,3,71,0,0,2883,0,0.0,0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"The SPARQL query to retrieve this information from DBpedia would be:

```sparql
SELECT ?child_name WHERE {
  ?child a dbpedia-owl:Royalty ;
            dbpedia2:hasParent ?parent .
  ?parent a dbpedia:Person ;
          rdfs:label ""Peter IV of Aragon""@en .
}
```

This query selects the name (`?child_name`) of any child (`?child`) who is also a royalty (`?child a dbpedia:Royalty`) and has Peter IV of Aragon as their parent (`?parent a dbpedia:Person ; rdfs:label ""Peter IV of Aragon""@en`).",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","SELECT ?commander ?father_of_ferdinand_IV
WHERE {
  ?commander a :MilitaryLeader;
  :led_Army_during_Thirty_Years_War .
  :ferdinand_III hreo :hasSon ?ferdinand_IV .
  ?ferdinand_IV a :ChildOf :ferdinand_III .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","The SPARQL query will involve querying the DBpedia dataset for individuals who match these criteria. We'll use the `dbpedia-owl` namespace for properties related to family relations and roles.

```sparql
PREFIX dbpedia-owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person a dbpedia-owl:Royalty .
  ?person rdfs:father ?grandparent .
  ?grandparent a dbpedia-owl:OfficeHolder .
  ?grandparent rdfs:child ?parent .
  ?parent rdfs:child ?question
}
```

This query looks for individuals (`?person`) who are royals (`?person a dbpedia-owl:Royalty`), have a father (`?person rdfs:father ?grandparent`) who is an office holder (`?grandparent a dbpedia-owl:OfficeHolder`), and where that father is in turn a child of someone (`?grandparent rdfs:child ?parent`) who is the parent of the person in question (`?parent rdfs:child ?question`).",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"To find the actor of Shelby Oaks, we can use the following SPARQL query:

```sparql
SELECT ?actor WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia-owl:mainCharacter ?character .
  ?character rdfs:label ""Shelby Oaks""@en .
}
```

This query searches for films (`dbpedia:Film`) where the main character's label is ""Shelby Oaks"". It assumes that the main character of a film is typically referred to in the RDF data available on DBpedia.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?actor WHERE {
  ?actor a ns:film.actor; film:role ?role_in_ATL .
  ?actor ns:alterEgoInSeries ""The Golden Master"" .
  ?actor ns:appearInSeries ""Shelby Oaks""
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?child WHERE {
  ?child a dbpedia:Person ;
    dbpedia:parent ?parent ;
    dbpedia:royalty true ;
    dbpedia:officeHolder true .
  ?parent a dbpedia:Person;
    rdfs:label ""William I of England"" .
}",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","SELECT ?bandLabel WHERE {
  ?band dbpprop:name ""The Fabulous Thunderbirds"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?person
WHERE {
  ?person a :CommanderInWar .
  ?person a :Disease .
  ?person a :SocietalEvent .
  ?person rdfs:label ""USS Arcadia (ID-1605)"" .
  ?person wif:spouse ?authorSpouse .
  ?authorSpouse a foaf:Person .
  ?author a :PoliticianAndOfficeHolder .
  ?author rdfs:label ""An Invitation to the White House"" .
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"SELECT ?name
WHERE {
  ?person a dbpedia-owl:Alumnus ;
            dbpedia-owl:alumniOf <http://dbpedia.org/ontology/university> ?university .
  ?university rdfs:label ""Plovdiv University \""Paisii Hilendarski\"""" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?bandMember ?state WHERE {
  ?artist dbpedia:name ""Ackquille Jean Pollard"" .
  ?artist dbpedia:birthPlace ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?artist dbpedia:genre ""Hip hop"" .
  ?bandMember a dbpedia:Musician; dbpedia:memberOf ?band .
  ?band rdfs:label ?bandLabel .
  ?bandLabel ns:prefLabel ?state .
}",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:name ""Harriette Arlene Lake""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","The SPARQL query will involve joining two datasets: one for the children of Albrecht, Duke of Württemberg and another for the children of Archduke Charles Louis of Austria. We'll use the DBpedia dataset which contains structured information about these individuals.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?child a dbpedia-owl:Person;
           dbpedia-owl:hasParent ?parent .
  ?parent rdfs:label ""Albrecht, Duke of Württemberg"" .
  ?child rdfs:label ""Archduke Charles Louis of Austria"" .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthDate ""1993-04-12"" ;
            rdfs:label ""Emilia Yancheva Valeva""@en .
  ?person dbpedia:bandMember ?bandMember.
}",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:birthPlace ?birthplace .
  ?person rdfs:label ""Chieko Asakawa""@en .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?wife
WHERE {
  ?author ""Michael Dukakis"" .
  ?author rdf:type <http://purl.org/dc/elements/1.1/officeHolder> .
  ?author foaf:spouse ?wife .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","SELECT ?person WHERE {
  ?person ns:name ""Harriette Arlene Lake"" .
  ?person rdfs:member rdf:resource=""http://www.rdf.org/ontologies/rdfs#Party"" . # Representing Republican Party membership
  ?person ns:spouse ?actor .
  ?actor ns:occupation ""actor"" .
  ?actor ns:film/ns:producer ""Nat Levine"" .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"SELECT ?person ?profession
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:occupation ?profession .
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"SELECT ?spouse ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent.
  ?parent a dbpedia:Person;
    rdfs:label ""Min Hla Htut of Pyakaung""@en.
  ?person dbpedia:hasSpouse ?spouse.
  ?spouse a dbpedia:Person;
    rdfs:label ?royalty_label@en.
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent.
  ?child rdfs:label ""Child of Min Hla Htut of Pyakaung""@en.
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"SELECT ?actor WHERE {
  ?actor a :politician .
  ?actor ns:roleInSeries ""Ab Kya Hoga"" ?role .
  ?role a :TheShadow
}",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?force WHERE {
  ?person a dbpedia:Person;
    dbpedia:medal_of_honor ""Congressional Medal of Honor"";
    dbpedia:recipient_of_the_medal ""Band of Brothers (TV series)"";
    dbpedia:birthplace ""Madison, Kentucky"";
    dbpedia:full_name ""Quincy Adams Gillmore""
  }.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Person ;
           dbpedia:hasChild ?grandchild .
  ?parent ns:fatherOf ?child .
  ?child ns:sonOf Alfonso_VI_of_León_and_Castile .
  ?grandchild ns:nieceOf Roger_III_Duke_of_Apulia
}",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"SELECT ?parent WHERE {
  ?child <http://dbpedia.org/property/birthDate> ?birthDate .
  ?child <http://dbpedia.org/ontology/hasParent> ?parent .
  ?parent <http://dbpedia.org/ontology/isRoyal> true
  AND ?parent = ?child's father
  AND ?child = ""Princess Aisha bint Faisal""
}",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","SELECT ?parent2 WHERE {
    ?child parent ?parent1 .
    ?parent1 a :politician , :office_holder .
    ?parent2 a :politician , :office_holder .
    ?child ns:father ?parent1
}",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"SELECT ?person WHERE {
    ?person a dbpedia-owl:Athlete .
    ?person bd:birthDate ""1965-01-01""^^xsd:date .
}",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"SELECT ?writer
WHERE {
  ?song ""Always the Love Songs"" rdfs:label ?title .
  ?song dc:creator ?writer .
}",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
    ?child Edward Stanley.
    ?child parent ?parent.
    ?parent a pol:Politician; officeHolder .
    ?parent foaf:knows ?grandparent.
    ?grandparent a rvo:CommanderOfTheRoyalVictorianOrder .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the commander of the Portuguese Colonial War
SELECT ?commander WHERE {
  ?conflict dbpedia:identifier ""Portuguese Colonial War"" .
  ?conflict dbpedia:participatedIn ?militaryRole .
  ?militaryRole a dbpedia:MilitaryConflict .
  ?conflict rdfs:label ""Portuguese Colonial War"" .
  ?commander a dbpedia:OfficeHolder; dbpedia:role ""Commander of Portuguese Colonial War"" .
}

# Query for the leader of the Conservative Republican Party (Spain)
SELECT ?leader WHERE {
  ?party dbpedia:name ""Conservative Republican Party (Spain)"" .
  ?party dbpedia:politicalPartyLeader ?leader .
  ?leader a dbpedia:OfficeHolder; dbpedia:title ""Leader of the Conservative Republican Party"" .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:office ""Chief Justice of the Supreme Court of Judicature in Victoria"" ;
            foaf:name ""George Hamilton Cameron"" .
  ?person rdfs:received ?award.
}",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"A SPARQL query to solve this would involve querying the DBpedia dataset for information about characters named Johnny Doughboy and then extracting the actor associated with that character. Here's a possible SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?character rdf:type dbpedia-owl:Actor .
  ?character rdfs:label ""Johnny Doughboy"" .
  ?character dbpedia-owl:role ?role .
  ?role a dbpedia-owl:FilmCharacter .
}
```

This query selects the `?actor` of any character with the label ""Johnny Doughboy"" who is also an `Actor` in the DBpedia ontology and has a role that is a `FilmCharacter`.",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"SELECT ?leader
WHERE {
  ?election 2009.
  ?election dbo:region ""Galicia"".
  ?party dbo:winningParties ?election .
  ?party rdfs:label ?partyLabel .
  ?leader dbo:officeHolder ?party .
  ?partyLabel rdfs:label ?partyName .
  FILTER (lang(?partyName) = ""es"")
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?spouse
WHERE {
  ?author a :politician;
         a :office_holder;
         foaf:written [""An Invitation to the White House""; ""Back to Work (book)""];
         dc:participatedIn ""Third Taiwan Strait Crisis"" .
  ?author ns:author ?book.
  ?book ns:title ""An Invitation to the White House"".
  ?book ns:author ?author.
  ?author ns:written ""Back to Work (book)"".
  ?spouse a :person;
          foaf:marriageRelation ?author.
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?author ?authorSpouse ?disease ?societal_event WHERE {
  ?author a :politician; rdfs:label ""Author's Name""@en .
  ?author rdfs:isDefinedBy <http://dbpedia.org/ontology/> .
  ?book1 a nfo:Book ; rdfs:title ""An Invitation to the White House""@en .
  ?book2 a nfo:Book ; rdfs:title ""Back to Work (book)""@en .
  ?author wdt:P31 ?book1 .
  ?author wdt:P31 ?book2 .
  ?authorSpouse a foaf:Person; owl:hasBrother ?author .
  OPTIONAL { ?author foaf:marriedTo ?authorSpouse }
  FILTER (lang(?author) = ""en"" )
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language ""en"" .
  }
  ?owner a nfo:OfficeHolder; rdfs:label ""Owner's Name""@en .
  ?owner wdt:P31 ?USS_Arcadia .
  ?disease a nco:Disease; rdfs:label ""Disease""@en .
  ?societal_event a nco:SocietalEvent; rdfs:label ""Societal Event""@en .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","SELECT ?character WHERE {
  ?character a dbpedia:Character .
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgoOf ?ego .
  ?ego a dbpedia:Person;
    foaf:name ""Walter B. Gibson""@en .
  ?ego dbo:roleInWork ?role .
  ?role a dbpedia:FictionalCharacter .
  ?role rdfs:label ""Robert Lamar Thompson""@en
}",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"SELECT ?militaryForce WHERE {
  ?battle rdf:type dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Fort Royal"" .
  ?battle dbpprop:militaryForces ?militaryForce
}",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?spouse
WHERE {
  ?paternal_grandmother a dbpedia-owl:Royalty ;
                       dbpedia2:wife ?wife .
  ?wife a dbpedia:Person ;
          rdfs:label ""Queen Elisabeth of Romania""@en .
  ?spouse a dbpedia:Person ;
           rdfs:label ""Spouse of Queen Elisabeth""@en .
}",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","SELECT ?child ?parent
WHERE {
  ?child a dbpedia:Royalty ;
           dbpedia2:hasParent ?parent .
  ?parent dbpedia:childOf Archduchess_Margarete_Sophie_of_Austria .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"SELECT ?character WHERE {
  ?character a dbpedia:ComicsCharacter .
  ?character rdfs:label ?name .
  ?name string-match ""Batman"" .
  OPTIONAL { ?character dbpprop:profession ?profession }
  FILTER ( ?profession = ""detective"" OR ?profession = ""boxer"" )
}",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:birthDate ?birthDate ;
            dbpprop:profession ""Writer"" ;
            dbpprop:roleInAlbum ""The Live Anthology""
}
AND ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"SELECT ?person ?tenant ?office
WHERE {
  ?person a dbpedia:OfficeHolder ;
            dbpedia2:role dbpedia:P68 ""President of the Congress of Deputies"" .
  OPTIONAL { ?person dbpedia2:residence ?tenant }
  OPTIONAL { ?person dbpedia2:office ?office }
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?manager
WHERE {
  ?player rdf:type dbpedia:Footballer .
  ?player rdfs:label ""Jamie McCunnie"" .
  ?player foaf:memberOf [ a dbpedia:Sports_team ; dbpedia:homeGround ""Bristol City Football Club"" ] .
  ?team rdf:type dbpedia:Soccer_team .
  ?manager rdfs:label ?managerLabel .
  ?team dbpedia:hasManager ?manager
  FILTER (lang(?managerLabel) = ""en"")
}",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"SELECT ?workLabel ?author
WHERE {
  ?work a dbpedia-owl:WrittenWork .
  ?work a dbpedia-owl:ArtisticWork .
  ?work rdfs:author ?author .
  ?author foaf:name ""Joe Biden"" .
  ?work rdfs:label ?workLabel .
  FILTER (lang(?workLabel) = ""en"")  # restrict to English language works
}",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?player a ns:http://purl.org/dc/terms/Agent .
  ?player ns:pertainsTo/ns:isMemberOf ns:http://dbpedia.org/ontology/sportClub .
  ?player ns:pertainsTo/ns:isMemberOf ns:http://dbpedia.org/ontology/soccerTeam
}",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?player rdfs:label ""Lai Sun Cheung"".
  ?player foaf:givenName ""Lai"".
  ?player dbo:hasPlayerID ?player_id.
  ?player_id rdf:type dbpprop:Person .
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?person
WHERE {
  ?person a :child_of <http://dbpedia.org/ontology/Child> .
  ?person a :societal_event ; 
  :participated_in_war ;
  :featured_in_tv_show .
  ?person :father_of _:grandchild .
  _:grandchild a :parent_of <http://dbpedia.org/ontology/Archduke_Charles_Joseph_of_Austria> .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award WHERE {
  ?boxer a ns:boxer;
    rdfs:label ""Rodney Lees""@en .
  ?boxer ns:winTitle ?title .
  ?title rdfs:label ?award
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","The SPARQL query will involve searching for George Ducas within the context of the Russo-Polish War and then identifying his successor who fits the criteria of being a politician and office holder. We'll use DBpedia's resources to extract this information.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:OfficeHolder;
            dbpedia:PolskaCitizen ;
            dbpedia:conflict ""Russo-Polish War (1654–1667)"" .
  ?person foaf:name ""George Ducas"" .
  ?person rdfs:seeAlso <http://dbpedia.org/page/George_Ducas> .
  ?successor a dbpedia:OfficeHolder;
            dbpedia:PolskaCitizen ;
            dbpedia:conflict ""Russo-Polish War (1654–1667)"" .
  ?person dbpedia:precededBy ?successor
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace1 ?governorName ?region
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1.
  ?person2 a dbpedia:Politician;
    dbpedia:office ""Governor of Illinois"";
    dbpedia:term_start_date ""1979-01-01"" .
  ?region a dbpedia:Region;
    dbpedia:name ""Illinois"".
  ?person3 a dbpedia:Person;
    dbpedia:nationality ""United States citizen""; 
    dbpedia:birthPlace ?birthPlace1.
  ?person2 dbpedia:represent_region ?region.
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?author_name ?birth_place 
WHERE {
  ?author_name a ns:people.person .
  ?author_name foaf:nationality ns:US .
  ?author_name rdfs:label ""Cece Bell"" .
  OPTIONAL { ?author_name ns:birthPlace ?birth_place }
  UNION
  {
    ?author_name a ns:people.person .
    ?author_name rdfs:label ""Vince Gilligan"" .
    OPTIONAL { ?author_name ns:birthPlace ?birth_place }
  }
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"SELECT ?entity WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:countryOfOrigin ?country
} 
WHERE { ?person rdfs:label ""Daniel Elahi Galán"" }",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"SELECT ?player ?team
WHERE {
  ?player foaf:givenName ""Sergio"" .
  ?player rdfs:label ""Agüero"" .
  ?player dbpproject:birthDate ?marcelo_birthday .
  ?marcelo_sarmiento dbpproject:birthday ?marcelo_birthday .
  ?team dbpproject:club ?player
}
WHERE {
  ?marcelo_sarmiento dbpproject:name ""Marcelo Sarmiento"" .
  ?marcelo_sarmiento dbpproject:birthday ?marcelo_birthday
}
ORDER BY ?marcelo_birthday",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpprop:birthName ?birthName ;
    rdfs:label ?artistName .
  ?person ns:altName ""The Shadow"" .
  ?person ns:mbox ""robert.lamar.thompson@domain.com"" . # Placeholder email, adjust as needed
  FILTER (regex(str(?birthName), ""Robert Lamar"") && str(?birthName) = ?artistName)
}",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?commander a :MilitaryPerson.
  ?commander ns:serviceNumber ""010626"".
  ?commander rdfs:label ?name.
  FILTER (lang(?name) = ""zh"")  # Ensure the name is in Chinese
}",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","The SPARQL query will search for the band ""The Fabulous Thunderbirds"" and specifically the member ""Kim Wilson"". We'll use the `dbpedia-owl` namespace to query for band members. Here's the appropriate SPARQL query:

```sparql
SELECT ?band ?member WHERE {
  ?band a dbpedia-owl:MusicBand ;
            dbpedia-owl:hasMember ?member .
  ?member rdfs:label ""Kim Wilson"" .
  ?band rdfs:label ""The Fabulous Thunderbirds"" .
}
```

This query looks for bands (`?band`) that have a member (`?member`) labeled as ""Kim Wilson"", and specifically selects the band labeled as ""The Fabulous Thunderbirds"".",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"SELECT ?successor WHERE {
  ?politician rdf:type dbpedia:Politician .
  ?politician foaf:name ""Patrice Martin-Lalande"" .
  ?politician rdfs:member [ a owl:Ontology ; owl:class rdf:Resource ] .
  ?politician dbpprop:office dbpedia:French_National_Assembly .
  ?successor rdf:type dbpedia:Politician .
  ?successor foaf:name ?name .
  ?successor dbpprop:succeededBy ?politician
}",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?birthPlace .
  ?person rdfs:label ""Cece Bell"" .
  ?person rdfs:label ""Glenn Youngkin"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"Given that DBpedia provides structured data about these individuals, we can use SPARQL to query this information. Here's how we might construct the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?grandchild 
WHERE {
  ?parent a rdf:Statement ;
            rdf:predicate ns:hasChild ;
            rdf:subject ?child .
  ?child a owl:Individual ;
         ns:name ""Roger II of Sicily"" .

  ?grandchild a owl:Individual ;
             ns:name ""William I of Sicily"" ;
             rdfs:father ?parent.
  
  ?parent ns:hasSpouse ?spouse .
  ?spouse a owl:Individual ;
           ns:name ""Constance of Burgundy"" .

  ?grandchild ns:isDescendantOf ?parent .
}
```

This query does the following:
- It selects all grandchildren (`?grandchild`) of Roger II (`?parent`).
- It ensures that these grandchildren are named ""William I of Sicily"".
- It verifies that their parents (the children of Roger II) are married to someone named ""Constance of Burgundy"".",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?charles_I_of_hungary a dbpedia-owl:Monarch ;
                  dbpedia:father ?father .
  ?father a dbpedia:Person ;
          rdfs:label ""Charles I of Hungary""@en ;
          dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch ;
           rdfs:label ""Charles I of Hungary""@en .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"The SPARQL query will look for Pablo Aimar's team using his name and known attributes related to his career. Assuming Pablo Aimar played for more than one team, we'll need to account for multiple team memberships. Here is a basic SPARQL query that could be used:

```sparql
SELECT ?team
WHERE {
  ?player rdf:type dbpedia-owl:FootballPlayer .
  ?player rdfs:label ""Pablo Aimar"" .
  ?player dbpprop:memberOf ?team
}
```

This query selects the teams (`?team`) that Pablo Aimar (`?player`) is a member of according to the DBpedia schema.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor
WHERE {
  ?s a tv:season.
  ?s hasActor ?actor .
  ?actor rdfs:label ""Dispatches from Elsewhere""@en.
}",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:Athlete .
  ?person ns:nationality dbo:P31 dbpedia:Nationality_Polish .
  ?person dwc:birthPlace dbo:Locality_Locality_Old_School_Region_Lodz
}",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"SELECT ?country WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:office dbpedia:President_of_Germany ;
            foaf:name ""Theodor Heuss"" .
  ?person rdfs:label ?countryLabel .
  ?countryLabel ns:prefLabel ?country
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","SELECT ?person ?award ?region ?state ?settlement 
WHERE {
  ?person ns:hasWonAward ?award .
  ?award rdfs:label ""Oscar for Best Live Action Short Film"" .
  ?award ns:awardedTo ?person .
  ?region ns:locatedInCoroDeLaPontificiaUniversidadCatolicacaPuertoRico .
  ?state ns:locatedIn Puerto_Rico .
  ?settlement rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?person ns:hasBirthPlace ?settlement
}",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"SELECT ?person WHERE {
  ?charlesII_of_neapols a ns:people.person;
    rdfs:label ""Charles II of Naples""@en;
    ns:father ?father_of_charlesII;
    ns:sibling ?sibling_of_charlesII .
  ?sibling_of_charlesII a ns:people.person;
    rdfs:label ?royalty_sibling_label@en;
    ns:parent ?parent_of_sibling .
  ?parent_of_sibling a ns:people.person;
    rdfs:label ?predecessor_of_stephenV@en;
    ns:child ?charles_I_of_hungary .
  ?charles_I_of_hungary a ns:people.person;
    rdfs:label ""Charles I of Hungary""@en;
    ns:parent ?parent_of_charlesI .
  ?parent_of_charlesI a ns:people.person;
    rdfs:label ?father_of_charlesI@en;
    ns:sibling ?spouse_of_charlesII .
}
WHERE {
  ?father_of_charlesII ns:parent ?parent_of_neapols .
  ?parent_of_neapols a ns:people.person;
    rdfs:label ""Some Parent of Charles II""@en
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","SELECT ?manager_name
WHERE {
  ?sport_manager rdf:type dbpedia:SportsManager .
  ?sport_manager foaf:birthDate ""1968-08-26"" .
  ?sport_manager rdfs:label ?name .
  ?team rdfs:label ?teamName .
  ?team dbpprop:season ""2007-08 VfL Bochum season"" .
  ?manager_rdf:type dbpedia:SoccerClubManager .
  ?player rdfs:label ?playerName .
  ?player dbpprop:club ?team .
  ?manager rdfs:member ?player .
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?spouse ?book WHERE {
  ?person a dbpedia:Person;
    dbpedia:isSpouseOf ?spouse .
  ?person dbpedia:hasWritten ?book .
  ?spouse rdfs:label ""Hillary Clinton""@en .
  ?book rdfs:label ""Book authored by Bill Clinton""@en
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"SELECT ?person ?party WHERE {
  ?person a dbpedia:Person;
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (regex(str(?name), ""Roy Barreras"")) .
  OPTIONAL { ?person dbpprop:politicalPartyMemberOf ?party }
  FILTER (str(?party) = ""Spanish Socialist Workers' Party"" @en) # Assuming Roy Barreras is a member of PSOE
  UNION
  {
    ?father a dbpedia:Person;
    OPTIONAL { ?father rdfs:label ?name }
    FILTER (regex(str(?name), ""Sofía Petro"")) .
    OPTIONAL { ?father dbpprop:politicalPartyMemberOf ?party }
    FILTER (str(?party) = ""Spanish Socialist Workers' Party"" @en) # Assuming the father of Sofía Petro is a member of PSOE
  }
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query to find the birthplace of Smita Patil would look for the `birthPlace` property associated with her `dbpedia-owl:instanceOf` a person (`foaf:Person`). Here is the query:

```
SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            foaf:name ""Smita Patil"" .
  ?person rdfs:label ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"SELECT ?leader_name ?office_spain ?war_commander_name ?commander_office
WHERE {
  ?leader rdf:type dbpedia-owl:PoliticalLeader .
  ?party dbpprop:partyName ""Conservative Republican Party (Spain)"" .
  ?leader pfo:leads ?party .
  ?office_spain a dbpedia-owl:Office .
  ?war_commander rdf:type dbpedia:WarCommander .
  ?war_commander foaf:organization ?political_affiliation .
  ?political_affiliation a dbpedia:PoliticalAffiliation .
  ?war_commander rdfs:label ?commander_name .
  FILTER (lang(?commander_name) = ""en"") 
}
LIMIT 1",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"The SPARQL query will need to:
1. Identify Michał Kazimierz Pac's role(s) and the specific event or military conflict he was involved in.
2. Find the successor of Michał Kazimierz Pac in that specific role within that event or conflict.

Given the complexity and the need for precise information, a direct SPARQL query without additional context might be challenging. However, assuming we have the necessary predicates and properties defined in the DBpedia ontology, a simplified query could look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor 
WHERE {
  ?person a dbo:OfficeHolder; dbo:role dbo:MilitaryCommander .
  ?person dbo:partOfEvent dbo:EventWithMilitaryConflict ""Michał Kazimierz Pac's Conflict"" .
  ?successor a dbo:OfficeHolder; dbo:role dbo:MilitaryCommander .
  ?successor dbo:partOfEvent ?conflict .
  ?person rdfs:label ""Michał Kazimierz Pac"" .
  ?conflict rdfs:label ""Specific Military Conflict"" .
}
```

This query assumes that there are properties like `dbo:OfficeHolder`, `dbo:MilitaryCommander`, `dbo:partOfEvent`, and `rdfs:label` which are used to describe roles, office holders, events, and labels in DBpedia. The exact query might need adjustments based on the actual schema of DBpedia.",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?alterEgo WHERE {
  ?alterEgo a ns:http://purl.org/dc/elements/1.1/ dc:alternativeOf ""The Shadow""@en .
  ?alterEgo ns:familyMember [ ns:parent ns:Person ; ns:name ""Yeshaq I"" ] .
}",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty ;
    rdfs:label ?name .
  ?parent a dbpedia-owl:Person ;
    rdfs:label ""Princess Aisha bint Faisal"" .
  ?child rdfs:father ?parent .
}
LIMIT 1",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"SELECT ?character WHERE {
  ?character a dbpedia:ComicBookCharacter .
  ?character rdfs:label ""The Shadow"" .
  ?character dbpprop:occupation dbpprop:music_producer .
}",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember 
WHERE {
  ?artist dbpprop:associatedBandMember ?bandMember .
  ?artist a dbo:MusicalArtist .
  ?artist rdfs:label ""Bobby Shmurda""@en .
  ?artist dbo:birthName ""Ackquille Khari Pollard"" .
  ?region a dbo:Region .
  ?region rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es .
  ?region dbpprop:locatedIn <http://dbpedia.org/ontology/Location> ?location .
  ?location a dbo:State .
  ?location rdfs:label ""Puerto Rico""@en .
  ?location dbpprop:hasCapital ?capital .
  ?capital a dbo:CapitalOf .
  ?capital rdfs:label ""San Juan""@en .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child father ns:father ?roger_ii_of_sicily .
  ?roger_ii_of_sicily a ns:monarch .
  ?child ns:parent/ns:sibling ?william_I_of_sicily .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasAssociatedBand/Artist ?associated_artist.
  ?person rdfs:label ""Stuart McBeath Tosh"" .
  ?person rdfs:label ""Billy Lyall"" .
}",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"The SPARQL query will involve querying DBpedia for the relevant information about VfL Bochum, its managers, and players during the 2007–08 season.

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerName ?managerOfBirth
WHERE {
    ?club dbpprop:name ""VfL Bochum"".
    ?club rdfs:member ?player.
    ?player a foaf:Person; foaf:firstName ?firstName; foaf:surname ?lastName.
    ?player dbpprop:managedBy ?manager.
    ?manager a foaf:Person; foaf:name ?managerName; foaf:surname ?managerSurname.
    ?manager dbpprop:nationality ""Germany"".
    FILTER (?player/ns:firstName = ""VfL Bochum"" && ?manager/ns:surname = ?lastName)
    BIND (concat(?managerName, "" "", ?managerSurname) AS ?managerName)
}
```

This query looks for:
- The manager (`?manager`) of VfL Bochum.
- The manager's birthplace (`?managerOfBirth`), inferred to be Germany due to the `FILTER` clause.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?royaltyParent
WHERE {
  ?philip_father a :Person ;
               :father ?uncle_or_parent ;
               :spouse :maria_of_bytom .
  :maria_of_bavaria a :Person ;
               :spouse :francis_joseph_of_saxony .
  ?uncle_or_parent a :Royalty .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor
WHERE {
  ?film rdf:type dbpprop:Film.
  ?film rdfs:label ""ATL"".
  ?actor dbpprop:roleInFilm ?film .
}",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","The SPARQL query to retrieve this information would look for the entity Ackquille Jean Pollard in the context of Florida and his band membership with Uncle Murda. Here is the SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person ?birthplace ?bandmember
WHERE {
  ?person a dbpedia-owl:Musician ;
            dbpedia-owl:birthPlace ?birthplace .
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person foaf:grouping [ a owl:NamedIndividual ; foaf:name ""Uncle Murda"" ] .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","SELECT ?person WHERE {
    ?person a dbpedia:Person ;
               dbpedia:P31 dbpedia:SoccerPlayer ;
               dbpedia:P31 dbpedia:SoccerManager .
    ?person dbo:birthDate ""1979-11-03""^^xsd:date .
    OPTIONAL { ?person rdfs:label ?name }
    FILTER (lang(?name) = ""en"")  # Assuming we are looking for names in English
}

AND

SELECT ?athlete WHERE {
    ?athlete a dbpedia:Person ;
               dbo:birthDate ""1979-11-03""^^xsd:date .
    OPTIONAL { ?athlete rdfs:label ?name }
    FILTER (lang(?name) = ""en"")  # Assuming we are looking for names in English
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","SELECT ?person ?birthplace ?admin_area WHERE {
  ?person a dbpedia-owl:Person.
  ?person rdfs:label ""Sandro Bertaggia""@it.
  ?birthplace a dbpedia-owl:GeographicLocation.
  ?birthplace rdfs:label ?birthplace_label .
  ?admin_area a dbpedia-owl:PoliticalAdminArea.
  ?admin_area rdfs:label ?admin_area_label .
  ?person birthplace ?birthplace.
  ?admin_area administratedBy ?person.
  FILTER (lang(?birthplace_label) = ""it"" AND ?admin_area_label = ""Grand Duchy of Finland"")
}",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","SELECT ?person WHERE { ?person a dbpedia-owl:Actor } AND ?person rdfs:label ""George Ducas""@en",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"SELECT ?birthday
WHERE {
  ?person rdf:type dbppro:Person.
  ?person rdfs:label ""Tony Hollings"".
  ?person dbppro:birthday ?birthday.
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","SELECT ?commander
WHERE {
  ?commander ns:commandedIn <http://dbpedia.org/ontology/Algerian_War> .
  ?commander rdfs:label ""Jacques Massu""@fr.
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"The SPARQL query will involve joining multiple triples related to the individuals mentioned in the question. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?royaltySpouse
WHERE {
  ?charlesII a dbpedia-owl:Monarch;
               dbpedia-owl:reigns [ rdf:label ""Charles II of Naples"" ].
  ?charlesII father ?fatherOfCharlesII.
  ?fatherOfCharlesII a dbpedia-owl:Person;
                    dbpedia-owl:hasChild ?childOfBelaIV.
  ?childOfBelaIV a dbpedia-owl:Royalty;
                  dbpedia-owl:hasParent ?parentOfChild.
  ?mariaBytom a dbpedia-ontology:Person;
                dbpedia-ontology:spouse [ a dbpedia-ontology:Marriage; 
                                         dbpedia-ontology:partner ?royaltySpouse ].
  ?childOfBelaIV childOf ?childOfBelaIV.
  ?royaltySpouse a dbpedia-ontology:Royalty.
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?workLabel ?author
WHERE {
  ?work a dbpedia-owl:WrittenWork .
  ?work dc:creator ?author .
  ?author a dbpedia-owl:Person .
  ?author rdfs:label ""Korean War commander"" .
  ?author rdfs:label ""Korean War office holder"" .
  FILTER (lang(?author) = ""ko"")
}",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"The SPARQL query will involve:
1. Finding the entity corresponding to the book ""Smartbomb"".
2. Extracting the author of this book.
3. Searching for any movie roles played by this author under the alias ""The Shadow"".

Here is the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?book rdf:type dbo:Book.
  ?book rdfs:author ?author.
  ?author dbpprop:hasRoleSome ?role .
  ?role rdfs:label ""The Shadow"" .
  ?book dbo:hasTitle ""Smartbomb"".
}",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
           dbpprop:deathDate ""1850-08-05"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","SELECT ?bandmember WHERE {
  ?artist rdfs:label ""Phantomsmasher""@en .
  ?bandmembers rdf:type foaf:Person .
  ?bandmembers rdfs:label ?bandmemberLabel .
  ?band rdfs:label ?bandName .
  ?band a nfo:Organization .
  ?band a nfo:Group .
  ?bandmember rdf:type ?band .
  ?bandmember rdfs:label ?bandMemberLabel
}",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Bob Thompson""@en .
  ?person foaf:name ""Bob Thompson"" .
  ?person dbo:hasPerformedWith dbpedia:Sam_Concepcion .
}",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"SELECT ?person
WHERE {
  ?person a :childOf <http://dbpedia.org/ontology/Parent> <http://dbpedia.org/ontology/Duke_Antony_Ulrich_of_Brunswick>.
  ?person a :spouseOf <http://dbpedia.org/ontology/Spouse> <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia>.
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"SELECT ?admin ?territory WHERE {
    ?admin a dbpedia-owl:PoliticalAdminArea .
    ?admin rdfs:label ""Christian IX of Denmark's administration"" .
    ?territory a dbpedia-owl:Territory .
    ?admin geonames:locatedIn ?territory .
    ?territory rdfs:label ""Copenhagen""
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?territory WHERE {
  ?person a ns:Person;
    ns:deathPlace ?place .
  ?administration a ns:GovernmentAdministration;
    ns:headOfState ?king .
  ?king a ns:Monarch ;
    ns:reignStart ""1863-01-01""^^xsd:date ;
    ns:name ""Christian IX of Denmark"" .
  ?place ns:polygon ?coordinates .
  ?administration ns:locatedAt ?place
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?player a dbpedia-owl:SoccerPlayer .
  ?player foaf:memberOf [ a dbpedia-owl:FootballClub; rdfs:label ""Denis Kolodin"" ] .
}",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"The SPARQL query will involve using the DBpedia vocabulary to find Denis Kolodin linked to a soccer team and then retrieve the team's nickname. Here is the query:

```
PREFIX dbppro: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerNickname
WHERE {
  ?player dbppro:hasMemberRole dbppro:SoccerPlayer .
  ?player foaf:name ""Denis Kolodin"" .
  ?player dbppro:playsFor ?team .
  ?team rdf:type foaf:Organization .
  ?team rdfs:label ?teamNickname .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Person;
    foaf:name ""Abraham Lincoln"" .
  ?person rdfs:memberOf dbpedia:Republican_Party_(United_States) .
  FILTER (xsd:date ?time <= 1863-07-03T00:00:00Z)
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","SELECT ?predecessor
WHERE {
  ?child  a dbpedia-owl:Child ;
            rdfs:father dbpedia:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?child  rdfs:label ""Ulrich"" .
  ?predecessor a dbpedia-owl:Person ;
             rdfs:preceding-sibling ?child .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"SELECT ?awardee
WHERE {
  ?awardee a ns:people.person .
  ?awardee won an award awarded by emmy.
  ?awardee rdfs:label ""Vince Gilligan"" .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","SELECT ?subject WHERE {
  ?subject a ?type .
  ?subject rdfs:label ""YourEntityNameHere""@en .
}",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"SELECT ?war WHERE { ?person a dbpedia-owl:Warrior ; dbpedia:partOfMilitaryConflict ?war } UNION
SELECT ?deathPlace WHERE { ?person a dbpedia:Person ; dbpedia:deathPlace ?deathPlace }",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","SELECT ?successor_name ?george_ducas_reference
WHERE {
  ?successor_name a dbo:Monarch ;
                  dbo:succeededBy ?ivan_the_terrible .
  ?ivan_the_terrible a dbo:Person ;
                 rdfs:label ""Ivan IV Vasilyevich"" .
  OPTIONAL { ?successor_name dbo:hasRelationWith dbo:George_Ducas ?george_ducas_reference }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"SELECT ?person ?office WHERE {
  ?person rdfs:label ""Alberto Ruiz-Gallardón""@es.
  ?person foaf:homepage ?homepage.
  ?office rdfs:label ?officeLabel .
  ?office geo:location ?location .
} 

AND {
  ?person rdfs:label ""Miguel Maura""@es.
  ?person foaf:homepage ?homepage.
  ?office rdfs:label ?officeLabel .
  ?office geo:location ?location .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?officeHolder
WHERE {
  ?officeHolder ns:memberOf [ ns:name ""People's Party (Spain)"" ] .
  ?officeHolder rdfs:label ?yearElected .
  ?officeHolder dbpprop:officeHolderOfMadridCityCouncil ?electionYear .
  ?officeHolder dbpprop:termStarts ""2003-11-23"" .
  FILTER (STR(?yearElected) = ""2003"")
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"SELECT ?name ?award
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:awardedBy dbpedia:RoyalSwedishAcademyOfSciences ;
            rdfs:label ?name .
  ?person dbpedia:winningAward ?award .
  ?award rdfs:label ""Max Born Award"" .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","SELECT ?actor WHERE {
  ?song ""Whatever You Like"" .
  ?album rdf:type dbpedia-owl:MusicAlbum .
  ?movie rdf:type dbpedia:Film .
  ?song rdfs:isDefinedBy ?album .
  ?album artist ?actor .
}",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","The SPARQL query will involve:
1. Finding George Ducas in the context of the Russo-Polish War.
2. Identifying his successor.
3. Finding television shows and societal events related to Jean Baptiste, Comte d'Arco.

Here is the constructed SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor ?tv_show ?societal_event 
WHERE {
  ?commander rdf:type dbo:OfficeHolder.
  ?commander dbo:roleInConflict ""Russo-Polish War (1654–1667)"".
  ?commander foaf:name ""George Ducas"".
  ?commander successor ?successor .
  ?tv_show a dbo:TelevisionShow.
  ?tv_show rdfs:label ?tv_show_label .
  ?societal_event a dbo:SocietalEvent.
  ?societal_event rdfs:label ?societal_event_label .
  ?tv_show rdf:type <> .
  ?societal_event rdf:type <> .
  ?successor rdfs:label ?successor_label .
  FILTER (lang(?tv_show_label) = ""en"" ) .
  FILTER (lang(?societal_event_label) = ""en"" ) .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?commander ?war WHERE {
  ?commander rdfs:label ""The Triple X's""@en.
  ?commander rdf:type dbpedia-owl:military_personnel .
  ?war a dbpedia-owl:Military_conflict .
  ?war rdfs:label ""World War II""@en.
  ?force a dbpedia-owl:Event .
  ?force rdfs:label ""Societal event""@en.
  ?commander rdf:type dbpedia-owl:member_of ?force .
}",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","SELECT ?subject WHERE {
  ?subject a ns:Painting .
  ?subject rdfs:label ""Der Blau"" .
  ?subject createdBy ?artist
}",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"SELECT ?spouse ?fatherParents
WHERE {
  ?renée spouse ?spouse .
  ?dorothea father ?father .
  ?father parents ?fatherParents .
  ?father = <P31FREderick V, HOLY ROMAN EMPeror> .
  ?father = <P31FREmaria THEResa of HUNGary and BOhemia>
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander WHERE {
  ?campaign ""French campaign in Egypt and Syria"" ;
    commander ?commander .
  ?battle ""Battle of Cape Finisterre (1805)"" ;
    commander ?commander .
}
LIMIT 1",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
           rdfs:label ""Richard Grant Esterhuysen""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?movie ?producer WHERE {
  ?movie a dbpedia:Film;
  dbpedia:producer ?producer .
  ?producer rdfs:label ""Linda Bruckheimer""@en .
  ?movie rdfs:subject ?award .
  ?award a dbpedia:FilmAwards ;
    dbpedia:awardee Ian Gregson .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?war1Label ?war2Label ?ventiris ?leaderName ?athensEntity WHERE {
  ?war1 a dbpedia-owl:War .
  ?war1 rdfs:label ?war1Label .
  ?ventiris a foaf:Person .
  ?ventiris rdfs:label ""Konstantinos Ventiris"" .

  ?war2 a dbpedia-owl:War .
  ?war2 rdfs:label ?war2Label .
  ?leaderName a foaf:Person .
  ?leaderName rdfs:label ""Leader of National Party of Greece"" .
  ?athensEntity a owl:Thing .
  ?athensEntity rdfs:label ""Athens"" .

  ?ventiris wdt:P31 ?war1 .
  ?leaderName wdt:P31 ?war2 .
  ?athensEntity wdt:P31 ?war2
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?spouse_of_saw_shwe_khet ?child_of_min_hla_htut WHERE {
  ?saw_shwe_khet a :Parent ;
                 :hasChild ?min_hla_htut .
  ?min_hla_htut a :Child ; 
               :hasParent ?saw_shwe_khet .
  ?min_hla_htut :location [ owl:locatedIn ""Pyakaung"" ] .
  ?myat_hpone_pyo a :PredecessorOf ?min_hla_htut .
  ?spouse_of_saw_shwe_khet a :SpouseOf ?saw_shwe_khet
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"SELECT ?parent WHERE {
  ?child af:father ?parent .
  ?child af:mother ?parent
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasSpouse [ a dbpedia:Person; rdfs:label ""Odo II, Duke of Burgundy"" ] ;
            dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty .
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?person a dbpedia:Person;
  dbpedia:has_role dbpedia:Actor ;
  dbpedia:role ?role .
  ?role rdfs:label ""Nick Curran""@en .
  ?person foaf:name ""Nick Curran"" .
  OPTIONAL { ?person ns:isPartOf ?band . }
  FILTER (lang(?role) = ""en"")
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"The SPARQL query will involve querying the DBpedia dataset for individuals who meet the specified conditions:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author
WHERE {
  ?person a rdf:Person;
    rdfs:label ?name;
    geo:country ""United States"";
    geo:state ""North Carolina"";
    militaryServiceBranch ""North Carolina Air National Guard"";
    officeHolder ;
    dc:creator ?book.
  ?book a book.
}
```

This query selects the `author` of any book (`dc:creator`) created by a person (`?person`) who:
- Is a person (`rdf:Person`)
- Has a label (`rdfs:label`) indicating their name (to ensure we get the correct individual)
- Is from the United States (`geo:country ""United States""`)
- Is from North Carolina (`geo:state ""North Carolina""`)
- Served in the North Carolina Air National Guard (`militaryServiceBranch ""North Carolina Air National Guard""`)
- Held office (`officeHolder`)
- Has a book (`?book`) as their creation.",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"The SPARQL query will need to search for a person who:
- Is the alter ego of The Shadow (a fictional character).
- Is the father of Na'od.
- Is the child of Dawit I.
- Is a royalty and an office holder.

Given that The Shadow is a fictional character from the pulp novels and later media, we might need to interpret ""alter ego"" in a broad sense. For Na'od's father, we look for someone in the lineage of Solomon, as Na'od is one of Solomon's sons. Dawit I was the first emperor of Ethiopia, so we need to find a person who fits into this historical context and also holds royal and official titles.

Here is the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:OfficeHolder ;
            dbo:isFatherOfNaod ?naod ;
            dbo:hasAlterEgo The_Shadow .
  ?person a dbo:Royalty .
  ?person rdfs:label ?name .
  FILTER (regex(str(?name), ""Solomon"")) .
}
```

This query looks for a person (`?person`) who:
- Is an office holder (`dbo:OfficeHolder`).
- Is the father of `Naod` (`dbo:isFatherOfNaod`).
- Has The Shadow as an alter ego (interpreted loosely here).
- Is a royalty (`dbo:Royalty`).
- Has a label that matches ""Solomon"" (`FILTER (regex(str(?name), ""Solomon""))`).",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a ns:peoplePerson .
  ?child rdfs:father [ owl:propertyValue ""Peter IV of Aragon"" ] .
  ?child ns:royalty
}",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","SELECT ?event ?show
WHERE {
    ?person a dbpedia:Person;
        dbpedia:parentFamilyMember [ dbpedia:givenName ""Ferdinand III, Holy Roman Emperor"" ] .
    ?person dbpedia:childOf [ dbpedia:parentFamilyMember [ dbpedia:givenName ""Ferdinand III, Holy Roman Emperor"" ] ].
    ?person a dbpedia:Event;
        dbpedia:participatedInMilitaryAction [ dbpedia:unit ""2nd Dragoon Regiment (France)"" ] .
    ?event a dbpedia:SocietalEvent .
    ?show a dbpedia:TelevisionShow .
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"SELECT ?author
WHERE {
  ?book a dbpedia-owl:Book ;
         dbpedia-owl:author ?author .
  ?book rdfs:label ""Back to Work""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?birthPlace .
  ?person rdfs:label ""Cece Bell""@en .
  ?person rdfs:label ""Glenn Youngkin""@en .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","SELECT ?player ?team
WHERE {
    ?player rdfs:label ""Juan Carlos Molina""@en .
    ?player dbpprop:birthDate ""1979-11-03""^^xsd:date .
    ?player dbpprop:role ""footballer"" .
    ?player dbpprop:role ""manager"" .
    ?team dbpprop:associatedWith ?player .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","A typical SPARQL query to find this information might look like:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:isPolitician .
  ?person rdf:type dbpedia:Person ;
            rdfs:label ?name .
  ?name ns:match ""Bruno Daniel Marie Paul Retailleau"" .
}
```

This query selects the `party` of any `Person` who is also an `OfficeHolder` and a `Politician`, filtering by the name ""Bruno Daniel Marie Paul Retailleau"".",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"SELECT ?residence WHERE { ?person rdf:type dbppro:Person . ?person rdfs:label ""Alberto Ruiz-Gallardón"" . ?person dwc:birthPlace ?residence }",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"SELECT ?president WHERE {
  ?president a ns:http://purl.org/dc/terms/Agent .
  ?president ns:memberOf ns:https://www.w3.org/2002/05/owl#Socialist_Party_of_Spain .
  ?president ns:officeHolder ns:https://dbpedia.org/ontology/Head_of_State_of_Spain
}",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"The SPARQL query will use the DBpedia service to retrieve this data. Here's how the query would be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?birthPlace WHERE {
  ?person a rdf:Person;
    rdfs:label ?name .
  ?person ns:birthPlace ?birthPlace .
}
```

This query selects the `birthPlace` property of any person (`?person`) whose label is given by `?name`. This should return the birth places for both Cece Bell and Vince Gilligan.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","SELECT ?artistName ?bandMembers
WHERE {
  ?artist a dbpedia-owl:MusicArtist ;
            rdfs:label ?artistName .
  ?bandMember a dbpedia-owl:BandMember ;
             dbpedia-owl:birthDate ""1945-03-30"" ;
             dbpedia-owl:memberOf ?band .
  ?band a dbpedia-owl:MusicBand ;
         dbpedia-owl:hasMember ?bandMember .
  ?artist rdfs:seeAlso ?band .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","To find this information, we need to:
1. Identify the actor from ""High Society Blues"".
2. Determine their profession.
3. Find movies they have been part of where they also worked as a producer.

Given that DBpedia provides structured data about people, movies, and their roles, we can construct a SPARQL query to extract this information.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?father WHERE {
  ?child rdf:type <http://purl.org/dc/elements/1.1/role#Royalty> .
  ?child rdfs:father ?father .
  ?father rdf:type <http://dbpedia.org/ontology/Royalty> .
  FILTER (STR(?child) = ""Saw Shwe Khet"")
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"The SPARQL query will involve:
1. Finding movies associated with Herschel Bernardi.
2. Identifying characters from those movies.
3. Checking if one of those characters is named Eugène Cattin and identifying their actor.

Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia-owl:mainActor ?actor .
  ?actor rdfs:label ""Herschel Bernardi""@en .
  SOME { 
    ?character a dbpedia-owl:CharacterOfFilmIn ?movie ;
      dbpedia-owl:name ""Eugène Cattin""@fr .
    ?actor dbpedia-owl:hasParent ?character
  }
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","SELECT ?grandfather
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent;
    dbpedia:hasGrandparent ?grandparent.
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?midParent.
  ?midParent a dbpedia:Person;
    dbpedia:hasParent Maximilian_I,_Holy_Roman_Emperor .
  ?grandparent a dbpedia:Person;
    dbpedia:hasParent Frederick_III,_Holy_Roman_Emperor .
  ?person dbpedia:id ""Dorothea_of_Denmark_Electress_Palatine"" .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"The SPARQL query will look for the band ""The Fabulous Thunderbirds"" and extract the real names of its members. Assuming that the band members' real names are stored under properties such as `foaf:name` or similar, the query might be structured as follows:

```sparql
SELECT ?name
WHERE {
  ?band ""The Fabulous Thunderbirds"".
  ?band member [ a owl:Ontology ; rdfs:label ""http://xmlns.com/owl/1.0/"" ].
  ?bandMember foaf:name ?name .
}
```

This query selects the `name` of any individual (`?name`) who is a member of the band ""The Fabulous Thunderbirds"" and has a `foaf:name` property.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","SELECT ?person ?profession WHERE {
  ?person rdfs:label ""Rod Argent""@en .
  ?person ns:occupation ?profession .
  
  ?person rdfs:label ""Joey B""@en .
  ?person ns:associatedBand/artist ?musicalArtist .

  ?person rdfs:label ""Elorm Kabu Amenyah""@en .
  ?person ns:musicalGenre ?genre .
  ?genre a [ ns:inScheme ""musicBrainzSchema"" ] .
}",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?child_name ?parent_name
WHERE {
  ?child rdf:type dbpedia:Person .
  ?child rdfs:label ""Allan Arbus's child"" . # Placeholder for actual child name and relation to Photography
  ?child dbpprof:profession ""Photographer"" .
  ?parent rdf:type dbpedia:Person .
  ?child rdf:type dbpedia:ChildOf ?parent .
  ?parent rdf:type dbpedia:ParentOf ?child
}",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?parent WHERE {
  ?child rdf:type <http://purl.org/dc/elements/1.1/relatio_n#royalty> .
  ?child rdfs:father ?parent .
  ?child rdfs:mother ?parent .
  ?child owl:sameIndividualAs <http://dbpedia.org/resource/Muna_al_Hussein>
}",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"The SPARQL query will need to search for information related to Apache Indian and specifically identify the title of his most famous musical work. We can use the DBpedia dataset which contains structured data about various entities, including musicians and their works.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work
WHERE {
  ?work a dbpedia:MusicAlbum ;
         dbpedia:artist ApacheIndian.
  ?work rdfs:label ?title .
  FILTER (lang(?title) = ""en"")  # Filter for English titles
}
```

This query selects all musical works (`?work`) that are associated with the artist `ApacheIndian` and retrieves the label (`?title`) of each work, filtering for English titles.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?producer WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor ""Al Strobel"";
    dbpedia:producer ?producer .
  ?movie2 a dbpedia:Film;
    dbpedia:actor ""Janet Gaynor"";
    dbpedia:producer ?producer2 .
}
AND
{
  ?movie1 rdfs:label ""The Kid from Brooklyn"".
  ?movie2 rdfs:label ""Seven Days in May"".
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","SELECT ?actor WHERE {
  ?movie a tv:series .
  ?movie star:role ?actor .
  ?actor foaf:name ?actorName .
  ?actorName ns:match ""Richard E. Grant"" .
  ?actor rdfs:label ""The Shadow (video game)"" .
}",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","The SPARQL query to retrieve information about the Nobel Prize in Physics from DBpedia would look like this:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?prize
WHERE {
  ?prize a dbpedia-owl:NobelPrize ;
           dbpedia-owl:category ""Physics"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"The SPARQL query will involve:
1. Finding Juan Carlos Molina and his associated footballer details.
2. Identifying the birthday of Marcelo Sarmiento.
3. Searching for individuals who are both soccer players and athletes born on Marcelo Sarmiento's birthday.
4. Determining which team they played for.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"To extract this information from DBpedia, we can use the following SPARQL queries:

1. For the French campaign in Egypt and Syria:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?military_force WHERE {
  ?campaign dbpedia:operational_unit ?military_force .
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?commander dbpedia:participatedIn ?campaign
}
```

2. For the military actions involving Robert Calder and William Bayne:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?robert_calder ?calder_military_force ?william_bayne ?bayne_military_force WHERE {
  ?event a dbpedia:Event .
  ?event dbpedia:participatedIn ?military_conflict .
  ?military_conflict a dbpedia:MilitaryConflict .
  ?robert_calder dbpedia:commander ?military_conflict .
  ?calder_military_force rdfs:label ""Robert Calder""@en .
  ?william_bayne dbpedia:participatedIn ?event .
  ?bayne_military_force rdfs:label ""Royal Navy""@en
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"SELECT ?artist WHERE {
  ?artist a ns:MusicArtists; rdfs:label ""Martin Betts""@en .
  ?artist ns:memberOf ns:Bands/foaf:member [ a ns:MusicalArtist ; rdfs:label ""Human Remains""@en ] .
}",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","The SPARQL query to retrieve information about Peter IV of Aragon from DBpedia would look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?title WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasName ?name;
    dbpedia:hasTitle ?title.
  ?person rdfs:label ""Peter IV""@en.
}
```

This query selects the name and title of any person labeled as ""Peter IV"" in DBpedia, ensuring we get information about the specific individual we're interested in.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"SELECT ?commander ?showTitle ?eventTitle
WHERE {
  ?battle <http://dbpedia.org/property/start_date> ""2013-09-26"" .
  ?battle <http://dbpedia.org/property/event> ?event .
  ?battle <http://dbpedia.org/property/military_force> ?militaryForce .
  ?militaryForce rdfs:label ""Polish-Lithuanian Commonwealth"" .
  ?commander foaf:performedInRole ?role IN [ rdf:type owl:Thing ; rdfs:label ""Commander in the Battle of Vienna"" ] .
  ?showTitle a dbpedia-owl:TelevisionShow .
  ?eventTitle a dbpedia-owl:Event .
  ?commander ns:actor ?showTitle .
  ?commander ns:partOf ?eventTitle
}",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","SELECT ?person WHERE {
  ?person a dbpedia:Person .
  ?person foaf:birthPlace dbpedia:Florida .
  ?person rdfs:label ""Ackquille Jean Pollard""@en
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","SELECT ?grandchild WHERE {
  ?child1 a dbpedia:Person;
  dbpedia:parentOf ?grandchild .
  ?child1 dbpedia:hasParent ?father .
  ?father a dbpedia:Person;
  dbpedia:parentOf ?mother .
  ?mother a dbpedia:Person;
  dbpedia:spouse ?mariaAnnaOfBavaria
}
WHERE {
  ?mariaAnnaOfBavaria dbo:birthDate ""1574-07-01""
  ?father dbo:hasParent ?grandParent .
  ?grandParent a dbpedia:Person;
  dbpedia:parentOf ?emperorFerdinand
}
AND ?emperorFerdinand dbo:hasTitle ""Holy Roman Emperor""",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"SELECT ?person WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Sam Concepcion"" .
}",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"SELECT ?city ?country WHERE {
  ?city ns:locatedIn ?region .
  ?region rdfs:label ""Santiago de Compostela"" .
  ?region ns:country ?country_of_region .
  ?country_of_region rdfs:label ?country .
  ?country_of_region ns:citizen ?spanish_person .
  ?spanish_person ns:nationality ""Spanish"" .
  ?country rdfs:label ?tenant_country
}",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","SELECT ?actor
WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ?name .
  ?actor foaf:name ?name .
  [ a ns:owl:Sao ;
    ns:predicate ns:role ;
    ns:value ?shadow_role ] .
  [ a ns:owl:Sao ;
    ns:predicate ns:role ;
    ns:value ?actor_role ] .
}",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"SELECT ?institution
WHERE {
  ?governor a dbpedia-owl:OfficeHolder ;
            dbpedia-owl:office dbpedia:Governor_of_Georgia .
  ?governor foaf:name ""Brian Kemp"" .
  ?institution a dbpedia:Organization .
}",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?parent WHERE {
  ?child princes_faisal_bin_hussein ;
    rdfs:father ?parent .
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?grandparent.
  ?grandparent a dbpedia:Person;
    rdfs:label ""Albrecht, Duke of Württemberg"";
    dbpedia:hasChild ?child.
  ?parent a dbpedia:Person;
    rdfs:label ""Archduchess Margarete Sophie of Austria"".
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","SELECT ?actor WHERE {
  ?actor rdf:type ns:Person .
  ?actor rdfs:label ""Afeez Oyetoro"" .
  ?actor ns:roleInSeries some [ a ns:CreativeWork; ns:hasActor ?actor ] .
  FILTER (fn:contains(?actor, ""Friday Night Lights"")) .
  ?actor ns:appearedInMovie some [ a ns:Movie; ns:actor ?actor ]
}",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"SELECT ?child WHERE {
  ?child a dbpedia:Person.
  dbpedia:P31_of_(person)_Stephen_V_of_Hungary ?child .
  dbpedia:Pfather_of_(person)_Charles_Martel_of_Anjou ?child
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"SELECT ?actor ?team_pablo_aimar ?birthdate_athlete 
WHERE {
    ?actor a ns:people.person;
        ns:givenName ?first_name;
        ns:familyName ?last_name;
        ns:microformatPersonType ""player"" .
    ?actor ns:role ""actor"" in ns:vcard#ROLE .
    ?actor ns:birthDate ?birthdate .
    ?team_pablo_aimar a ns:thing; rdfs:label ""Manchester City F.C."" .
    ?actor ns:memberOf ?team_pablo_aimar .
    ?birthdate_athlete a ns:people.person;
        ns:birthday ?birthdate .
    ?birthdate_athlete ns:microformatPersonType ""athlete"" .
    ?birthdate_athlete ns:birthDate ?birthdate
}
WHERE {
    FILTER (STR(?birthdate) = ""2000-04-01"")
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:givenName ?first_name ;
            ns:surname ?last_name ;
            ns:birthPlace ns:location ""Florida"" .
  GRAPH <> {
    ?person a n:bandMemberOf n:artist [ ns:name ""Uncle Murda"" ] .
  }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:child ?grandchild ] .
  ?grandchild ns:parent [ ns:child ?greatGrandchild ] .
  ?greatGrandchild ns:parent Roger II of Sicily
}",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist_name
WHERE {
  ?artist_name a dbpedia:MusicalArtist .
  ?artist_name foaf:name ""Bob Thompson"" .
  SOME { ?bandMember a dbpedia:Musician; foaf:name ""Sam Concepcion"" } .
  ?artist_name rdfs:member ?bandMember
}",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?actor ?role_in_movie ?role_in_show WHERE {
  ?actor a ns:people.person .
  ?actor ns:name ""Richard Grant Esterhuysen"" .
  ?actor ns:appearanceInMovie ""The Shadow"" .
  ?actor ns:appearanceInTelevisionShow ?role_in_show .
}",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?musicalArtist WHERE {
  ?character dbo:hasConnectionToTVSeries dbpedia:Dallas .
  ?character rdfs:label ""Billy Lyall"" .
  OPTIONAL { ?character rdf:type ?type . }
  FILTER (?type = ""Person"") .
  ?character foaf:knows ?artist .
  ?artist a dbo:Musician
}",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","SELECT ?parent WHERE {
  ?child a ns:peoplePerson .
  ?child ns:hasParent ?parent .
  ?child ns:awardedRole [ a ns:royalHonor; rdfs:label ""Commander of the Royal Victorian Order"" ] .
  ?parent ns:microformatPerson/ns:name ""Frederick Stanley, 16th Earl of Derby"" .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","The query will involve searching for a movie (or television show) with the appropriate release date and details about the artists involved. We'll use DBpedia's resources to find this information.

Here is the SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?movie 
WHERE {
  ?movie a rdf:Statement ;
         rdfs:label ?title .
  
  ?movie ns:hasReleaseDate ""2020-06-18""^^xsd:date .
  
  ?movie ns:director ?director .
  ?director ns:deathDate ""after 2020-06-18"" .
  
  ?movie ns:genre ""Musical"" .
  ?movie ns:role ""Artist"" .
}

LIMIT 1
```

This query selects the movie with the label (title), released on June 18, 2020, directed by someone who died after that date, categorized as a musical genre, and featuring an artist role. The `LIMIT 1` clause ensures we get only one result.",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"The SPARQL query will involve:
1. Finding Jamie McCunnie's teams.
2. Extracting the manager(s) of those teams.

Here is the SPARQL query:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager
WHERE {
  ?player dbpprop:memberOf [ a dbo:SoccerTeam; rdfs:label ""Jamie McCunnie's team"" ] .
  ?team rdf:type dbo:SoccerClub .
  ?team foaf:manager ?manager .
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","SELECT ?award
WHERE {
  ?person a dbpedia-owl:Person ;
            rdfs:label ""George Hamilton Cameron""@en .
  ?person dbpprop:awardedWith ?award .
}",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?film WHERE {
  ?work a dbo:Film;
  dbo:author ?author .
  ?author rdfs:label ""Manuel Huerga"" .
}",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"SELECT ?tenant ?office WHERE {
  ?event a :Event.
  ?event subject :Anxo Quintana .
  ?event object :Santiago de Compostela .
  ?event rdfs:label ""Anxo Quintana's administration event"" .
  OPTIONAL { ?event rdf:type :AdministrationEvent. }
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty .
  ?child rdfs:father dbpedia:Antoine_Duke_of_Lorraine
}",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"SELECT ?bandMember
WHERE {
  ?artist a dbpedia:MusicArtist ;
            dbpedia2:associatedBand/Group ?associatedBand .
  ?associatedBand rdfs:label ?bandLabel .
  ?bandMember a dbpedia:Musician ;
             dbpedia2:memberOf ?associatedBand .
  ?bandLabel string-match ""Bobby Shmurda""
}",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"SELECT ?governor_name ?governor_birthplace
WHERE {
  ?governor a dbpedia-owl:Politician ;
            dbpedia2:birthPlace ?birthplace .
  ?birthplace a dbpedia-owl:Region ;
               dbpedia2:administrativeDivisionOf ?region .
  ?region a dbpedia-owl:AdministrativeTerritory ;
             rdfs:label ""Alabama"" .
  FILTER (lang(?governor_name) = ""en"") .
  ?region rdfs:label ""Alabama"" .
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"SELECT ?awardee ?award
WHERE {
  ?awardee a np:Person ;
            np:nobel_prize_category ""Physics"" ;
            np:nobel_prize_year ?year .
  OPTIONAL { ?awardee rdfs:label ?name }
  FILTER (lang(?name) = ""en"") 
}",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:father dbpedia:Archduke_Rudolf_of_Austria .
  ?person rdfs:mother dbpedia:Archduchess_Margarete_Sophie_of_Austria
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"The SPARQL query will involve querying the DBpedia dataset for individuals related to Jamsetji Tata and checking their place of birth against India. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpprop: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbpprop:Person ;
            dbpprop:nationality ""IN"" ; # Nationality of the person
            foaf:knows ?jamsetjit_tata .
  ?jamsetjit_tata a dbpprop:Organization ;
                    dbpprop:name ""Tata Group"" . # Name of the organization
}
```

This query selects individuals (`?person`) who are of Indian nationality (`dbpprop:nationality ""IN""`), and who know someone (`?jamsetjit_tata`) identified as being the Tata Group (`?jamsetjit_tata a dbpprop:Organization ; dbpprop:name ""Tata Group""`).",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Politician .
  ?person rdfs:father [ owl:propertyValue ""Frederick Stanley, 16th Earl of Derby"" ] .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","SELECT ?person WHERE {
    ?person a dbpedia:Person;
        dbpedia:birthDate ""1955-02-22"";
        dbpedia:occupation dbpedia:athlete.
}
AND
{
    ?actor a dbpedia:Actor;
        dbpedia:roleInFilm ""All or Nothing: Manchester City"";
        dbpedia:occupation dbpedia:soccerPlayer .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?person WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person foaf:name ""Stuart McBeath Tosh"" .
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","SELECT ?child WHERE {
  ?parent a dbpedia:Person;
  dbpedia:hasChild ?child;
  ?child rdfs:label ""Ferdinand III, Holy Roman Emperor""@en.
  ?parent rdfs:label ""Ferdinand II, Holy Roman Emperor""@en.
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?person rdfs:label ""Linda Miller (actress)"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?professional_in_singer ?alter_ego_professional WHERE {
  ?person a dbpedia:Person;
  dbpedia2:birth_name ""Robert William Thompson"";
  ?person rdfs:label ?singer_pro; # Professional in Singer
  ?person foaf:alterEgo ?alter_ego; # Alter ego
  ?band dbpedia:band_members ?person.
  OPTIONAL { ?person rdf:type dbpedia:Musician }
}",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"SELECT ?office_of_quintana ?country_of_quirós
WHERE {
  ?quintana office ?office_of_quintana .
  ?quintana adminRole ""Event"" .
  ?quirós residence ?country_of_quirós .
  ?quirós tenantOf ?city_of_santiago .
  ?city_of_santiago name ""Santiago de Compostela""
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"SELECT ?spouse ?child ?predecessor WHERE {
  ?spouse a dbpedia-owl:Person ;
    dbpedia2:familyRelation [ a dbpedia2:FamilyRelation; dbpedia2:relatesTo ?child ] .
  ?child a dbpedia-owl:Person;
    dbpedia2:parent ?spouse .
  ?child a dbpedia-owl:Person; rdfs:label ""Saw Min Phyu""@en .
  ?predecessor a dbpedia-owl:Person; rdfs:label ""royalty""@en .
  FILTER (regex(str(?predecessor), ""King"") // Ensuring the predecessor is a king/monarch)
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"SELECT ?award WHERE {
  ?award a :Award .
  :Coro_de_la_Pontificia_Universidad_Catolica_Puerto_Rico rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es.
  ?award ns:hasLocation ?location .
  ?location a :Settlement .
  FILTER (lang(?location) = ""es"") .
}",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"The SPARQL query will be constructed to find the country of Spain and then extract its tenant:

```sparql
SELECT ?country WHERE {
  ?country rdfs:label ""Spain"" .
  ?country ns:tenantOf ?santiago .
  ?santiago foaf:locatedIn ?compostela .
  ?compostela ns:name ""Santiago de Compostela""
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"SELECT ?player1 ?team1 WHERE {
  ?player1 a dbpedia:Footballer .
  ?player2 a dbpedia:SoccerPlayer .
  ?manager a dbpedia:SoccerManager .
  ?player1 rdfs:label ""Juan Carlos Molina""@es.
  ?player2 rdfs:label ""Sergio Agüero""@es.
  FILTER (dateOfBirth(?player1) = dateOfBirth(?manager))
  AND (?player1 != ?manager)
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?spouse_name ?parent_birth_name
WHERE {
  ?actor rogerPryor .
  ?actorSpouse ?spouse_name .
  ?actorParent ?parent_name .
  ?actorParent rdfs:father ?actor .
  ?actorParent foaf:givenName ?parent_birth_name .
  ?actorSpouse a dbpedia-owl:ActorSpouse ;
           dbpedia2:hasParent ?actorParent
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?player WHERE {
  ?player ns:role ""soccerPlayer"" .
  ?player ns:role ""athlete"" .
  ?player rdfs:label ?name .
  FILTER (regex(str(?name), ""Manchester City"")) 
}",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","SELECT ?grandfather
WHERE {
  ?catherine a :Person;
    :name ""Catherine of Austria, Queen of Portugal"";
    :father ?father_of_catherine .
  ?father_of_catherine a :Person;
    :name ?parent_name_of_father .
  ?parent_of_dorothea a :Person;
    :name ""Dorothea of Denmark, Electress Palatine"";
    :mother ?mother_of_dorothea .
  ?mother_of_dorothea a :Person;
    :name ?mother_of_dorothea .
  ?dorothea a :Person;
    :name ""Dorothea of Denmark, Electress Palatine"";
    :parent ?parent_of_dorothea
  }
  ?father_of_catherine :child ?catherine .
  ?parent_of_dorothea :child ?dorothea
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"A SPARQL query to find this information would involve querying for the actor associated with the character Shelby Oaks and then checking if this actor has the alter ego of The Shadow. Here is a possible SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor
WHERE {
  ?character rdf:type dbpedia-owl:Character ;
            dbpedia2:actor ?actor .
  ?actor rdfs:label ?name .
  ?actor ns:altName ""The Shadow"" .
}
```

This query selects the actor (`?actor`) associated with the character Shelby Oaks (`?character`), checks if the actor's label (`?name`) includes the term ""The Shadow"" in their altNames.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?person WHERE {
  ?child1 a dbpedia:Person;
  dbpedia:hasParent ?parent1;
  ?parent1 a dbpedia:Person;
  dbpedia:hasSpouse ?spouse1;
  ?spouse1 a dbpedia:Person;
  dbpedia:hasChild ?grandchild1 .
  ?grandchild1 a dbpedia:Person;
  dbpedia:hasParent ?child2 .
  ?child2 a dbpedia:Person;
  dbpedia:hasSpouse ?spouse2 .
  ?spouse2 a dbpedia:Person
}
WHERE {
  ?parent1 rdf:type dbpedia:Monarch
  AND ?spouse1 rdf:type dbpedia:Monarch
}",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","SELECT ?child
WHERE {
  ?father fatherOf ?cecilia .
  ?father fatherOf ?eleonore .
  ?cecilia motherOf ?child .
  ?eleonore motherOf ?child
}
LIMIT 1",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"SELECT ?artist_name ?birth_name
WHERE {
  ?artist a dbpedia:Musician ;
            dbpedia:associatedBandMember ?band .
  ?band a dbpedia:MusicalArtist ;
         dbpedia:origin dbpedia:Florida .
  ?artist foaf:name ?artist_name .
  ?artist dbo:birthName ?birth_name .
  ?band rdfs:label ""Bobby Shmurda"" .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"SELECT ?actor ?alter_ego WHERE {
  ?characterName a dbpedia-owl:Character.
  ?characterName rdfs:label ""ATL""@en.
  ?actor a dbpedia-owl:Actor .
  ?actor foaf:name ?actorName .
  ?seriesTitle a dbpedia-owl:Film.
  ?seriesTitle rdfs:label ""The Golden Master""@en.
  ?alter_ego a dbpedia-owl:Alter_Ego .
  ?characterName dbpprop:portrayedBy ?actorName .
  ?characterName dbpprop:alterEgo ?alter_ego
}",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?royalty_child WHERE {
  ?child a dbpedia:Person;
  dbpedia:parent [ dbpedia:hasChild ?archduchess_sophie ];
  ?archduchess_sophie a dbpedia:Person;
  dbpedia:parent [ dbpedia:hasName ""Albrecht, Duke of Württemberg"" ].
  ?child dbpedia:hasParent ?royalty_parent.
  ?royalty_parent a dbpedia:Person;
  dbpedia:hasChild ?child
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?force WHERE {
  ?person a :MilitaryLeader .
  ?person rdfs:label ""Manuel Pinto da Costa"" .
  ?person ns:conflict foaf:name ""Angolan Civil War"" .
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"SELECT ?person
WHERE {
  ?person a :disease .
  ?person a :societal_event_of_United_States_Navy .
  ?person ns:spouse_of Hillary Clinton .
  ?person rdfs:label ?name .
  FILTER (regex(str(?name), ""Commander [A-Z]"")) 
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","SELECT ?person WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasParent ?grandparent ;
            dbpedia:hasChild ?greatgrandchild .
  ?grandparent a dbpedia:Person;
             dbpedia:hasParent ?parent ;
             dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
           dbpedia:hasParent ?greatgrandchild .
  ?parent a dbpedia:Person;
           dbpedia:hasParent ?ancestor .
  ?ancestor a dbpedia:Person;
            dbpedia:hasParent Alexander_of_Wuerttemberg
}
LIMIT 1",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"A SPARQL query would look for a person with the name ""Eugène Cattin"" and then find their parent (usually their father in the context of historical figures).

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?parent WHERE {
  ?person a foaf:Person;
    foaf:name ""Eugène Cattin"";
    rdfs:label ?profession .
  ?person rdf:type dbo:Artist .
  ?parent a dbo:ParentOf ;
    dbo:child ?person .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },The SPARQL query will search for movies involving Afeez Oyetoro and then check if these movies are part of a larger TV show series. We'll use DBpedia's resources to extract this information.,1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?spouse
WHERE {
  ?father a ns:Person;
  ?father rdfs:label ""John Hunyadi""@en .
  ?mother a ns:Person;
  ?mother rdfs:label ""Elizabeth""@en .
  ?mother ns:parent ?child .
  ?child a ns:Person;
  ?child rdfs:label ""Philip, Despot of Romania""@en .
  ?spouse a ns:Person;
  ?spouse rdfs:label ?spouse_label
}
ORDER BY ?spouse_label",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?officeHolderName ?officeCentralAfricaWar ?mauraOffice
WHERE {
  ?officeHolderOffice a dbo:Office ;
    rdfs:label ?officeCentralAfricaWar .
  ?officeHolderOffice dbo:officeHolder ?officeHolderName .
  ?officeHolderOffice a dbo:Politician .
  ?officeHolderOffice dbo:office ?mauraOffice .
  FILTER (lang(?officeCentralAfricaWar) = ""fr"")  # Assuming the relevant information is in French
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?predecessor
WHERE {
  ?child a dbpedia:Person ;
           dbpedia:hasParent ?parent ;
           dbpedia:spouse [ dbpedia:is spouse of <P31> ] .
  ?parent a dbpedia:Royalty .
  ?parent dbpedia:hasChild ?child .
  ?predecessor a dbpedia:Person ;
               dbpedia:hasParent ?child
}",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","SELECT ?person
WHERE {
  ?person a :royalty .
  ?person father :Stephen_V_of_Hungary .
  ?person mother :Mary_of_Habsburg .
  ?father child :Philip_Despot_of_Romania
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","SELECT ?child WHERE {
  ?child a :royalty .
  ?child :father ?parent .
  ?parent a :king_of_castile .
  ?parent ns:fatherOf ?grandparent .
  ?grandparent a :person ;
               ns:sonOf ?philip_i
}
ORDER BY ?child",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = ""en"") .
  ?birthPlace geo:countryName ""United States"" .
  ?birthPlace geo:regionName ""Wisconsin""
}",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","A SPARQL query to find this information would involve querying the DBpedia dataset, which contains structured data about comics and their adaptations. We need to find a character from ""The Shadow"" comic series that has been portrayed by an actor in ""The Shadow"" video game. Here's how we might structure our query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?character WHERE {
  ?character a dbpedia-owl:ComicCharacter ;
               dbpedia-owl:appearsIn dbpedia:EventLocation :The_Shadow_Video_Game .
  ?character rdfs:label ?actor .
  FILTER (lang(?character) = ""en"")  # Assuming we want results in English
}
```

This query selects characters that are comic characters (`?character a dbpedia-owl:ComicCharacter`) appearing in ""The Shadow"" video game (`dbpedia-owl:appearsIn dbpedia:EventLocation :The_Shadow_Video_Game`). It also links these characters to an actor (`?character rdfs:label ?actor`) and filters for results in English.",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"SELECT ?awardee ?birthplace WHERE {
  ?awardee a dbpedia-owl:Person.
  ?awardee dbo:awardCategory ""Anita Borg Institute Women of Vision Awards"".
  ?awardee foaf:nationality ""Japanese"".
  ?awardee rdfs:seeAlso <http://dbpedia.org/ontology/> .
  ?birthplace geo:location ?geoLocation .
  ?geoLocation a dbpedia-owl:GeoLocation .
} LIMIT 1",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"SELECT ?composer
WHERE {
  ?work ""Apache Indian"" .
  ?work com:author ?composer .
  ?composer a dbpedia-owl:Person .
  ?composer rdfs:label ?name .
  FILTER (lang(?name) = ""en"")  # Search for English names
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","A SPARQL query to achieve this might look for the person with the given name and birth date, then retrieve their parents. Here's how the query could be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia-owl:birthDate ""14 November 1900"";
    dbpedia-owl:givenName ""Mary Frances"" ;
    dbpedia-owl:surname ""Bowes-Lyon"".
  ?person dbpedia-owl:hasParent ?parent.
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"SELECT ?commander ?battle WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfMilitaryConflict [ a dbpedia:Military_conflict ; dbpedia:involvedParty ""French forces"" ] .
  ?commander a dbpedia:Person ;
           dbpedia:engagedInCombat ?battle .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"SELECT ?parent ?child
WHERE {
  ?spouseSpouseOfCostello foaf:spouse ?spouse .
  ?spouseSpouseOfCostello dbo:hasChild ?child1 .
  ?child1 a dbpedia-owl:Person ;
           rdfs:label ""Amy Arbus"" .
  ?parentParentOfChild ?child1 .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"A SPARQL query to retrieve this information from DBpedia could be constructed as follows:

```sparql
SELECT ?commander
WHERE {
  ?war great turkish war.
  ?war start ""1593-01-01""^^xsd:date.
  ?war end ""1606-12-31""^^xsd:date.
  ?commander a ns:Person ;
             foaf:name ?name .
  ?commander ns:commandedIn ?war
}
```

This query selects the `name` of any person (`?commander`) who:
1. Was involved in a war with the label ""great turkish war"" (note that exact date ranges are used to match the period 1593-01-01 to 1606-12-31).
2. Commanded in that war.",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?person WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ""The Shadow""@en .
  ?person ns:actor ?actor
} LIMIT 1",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty ;
         dbpedia:parent [ dbpedia:hasName ""Philipp Albrecht, Duke of Württemberg"" ] ;
         dbpedia:child [ dbpedia:hasName ?grandchild ]
  }
  FILTER (lang(?child) = ""de"")
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?person ?team ?season ?sport_season ?sport_team_season
WHERE {
  ?person a dbpedia:SportsManager ;
            dbpedia:birthDate ""1968-08-26"" .
  ?person rdfs:seeAlso ?soccer_profile .
  ?soccer_profile a dbpedia:SoccerPlayer .
  ?team a dbpedia:SoccerTeam ;
         dbpedia:season ?team_season .
  ?sport_season a dbpedia:SportsSeason .
  ?sport_team_season a dbpedia:SportsTeamSeason .
  ?person rdfs:label ?name .
  ?team rdfs:label ?team_name .
  ?team_season rdfs:label ?team_season_name .
  ?sport_season rdfs:label ?sport_season_name .
  FILTER (regex(str(?name), "".*\\sSoccer"")) 
}
ORDER BY ?person",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","SELECT ?war WHERE {
  ?awardee award ""30 pieces of silver"" .
  ?awardee battle ?battle .
  ?battle location ""Athens"" .
}",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:parent [ ns:firstName ""William"" ; ns:lastName ""I"" ; ns:role ""of Sicily"" ] .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","SELECT ?actor ?producer 
WHERE {
  ?movie a :Film.
  ?movie stard :mainActor ?actor .
  ?movie prod:producer ?producer .
  ?actor foaf:name ""Janet Gaynor"" .
  OPTIONAL { ?movie rdfs:label ?title }
  FILTER (regex(str(?title), ""7th Heaven"")) 
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:P31 dbpedia:ChildOf <http://dbpedia.org/ontology/Person> .
  ?grandchild a dbpedia:Person ;
             dbpedia:P31 dbpedia:ChildOf ?parent .
  ?grandchild rdfs:label ""Royalty"" . 
  ?parent rdfs:label ""Child of Maria Anna of Bavaria and Maximilian I, Duke of Bavaria"" .
  FILTER (xsd:date(?grandchild_birthDate) > xsd:date(""1638-12-09""))  # Ensure the grandchild was born after Maria Anna's death
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","SELECT ?child
WHERE {
  ?parent a dbpedia-owl:Person ;
           dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
}",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","SELECT ?person
WHERE {
    ?person a dbpedia-owl:Person ;
            dbppro:birthDate ""1981-12-01""^^xsd:date ;
            dbppro:role dbpedia:athlete ;
            dbppro:role dbpedia:soccerPlayer ;
            dbppro:role dbpedia:sportsManager ;
            dbppro:role dbpedia:soccerManager .
}",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the Knight Commander of the Order of the Bath award recipients and then identifying their associated military force. Assuming we have a person resource with properties related to awards and military service, the query might look like this:

```sparql
SELECT ?person ?militaryForce 
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:awarded [ a dbpedia2:Award ; rdfs:label ""Knight Commander of the Order of the Bath"" ] .
  ?person dbpprop:militaryServiceMemberOf ?militaryForce .
}
```

This query selects the person resource associated with the Knight Commander of the Order of the Bath award and then retrieves the military force they were a member of.",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?band WHERE {
  ?band ns:genre ""rock"" .
  ?band rdfs:isMemberOf [ a owl:Class ; rdfs:label ""bands from New York (state)"" ] .
  ?award a owl:Class ; rdfs:label ""region, American, state, settlement"" .
  ?award ns:hasMember ?band .
}",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?successor WHERE {
  ?commander a pol:OfficeHolder; pol:role ""Commander""; pol:office ""Military Commander of the Polish-Lithuanian Commonwealth Forces in the Great Turkish War"" .
  ?commander foaf:name ""Michał Kazimierz Pac"" .
  ?successor a pol:Politician; pol:role ""Office Holder""; pol:office ""Successor Military Commander of the Polish-Lithuanian Commonwealth Forces in the Great Turkish War"" .
  ?commander rdfs:seeAlso <http://dbpedia.org/ontology/Commander> .
  ?successor rdfs:seeAlso <http://dbpedia.org/ontology/OfficeHolder>
}
LIMIT 1",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?person ?band ?awarded_for
WHERE {
  ?person a dbpedia:Person ;
            dbpedia:birthPlace [ a dbpedia:Location ; dbpedia:name ""New York"" ] ;
            rdfs:label ""Ackquille Jean Pollard""@en .
  ?band a dbpedia:Band ;
         dbpedia:members ?person .
  ?awarded_for a dbpedia:Award .
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?band rdfs:label ""Bobby Shmurda""@en .
  ?awarded_for rdfs:label ""Native of New York""@en .
}",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"SELECT ?manager
WHERE {
  ?player rdfs:label ""Thomas Letsch"".
  ?team dbpedia-owl:hasMember ?player .
  ?team rdfs:label ""Soccer club"" .
  ?season dbpedia:seasonClass ""Sports season"" .
  ?team dbpedia:season ?season .
  ?manager rdfs:label ?managerLabel .
  ?manager ns:inScheme dbo .
  ?country dbpedia:hasHeadOfState ?president .
  ?president rdfs:label ""Theodor Heuss"" .
  FILTER (lang(?managerLabel) = ""de"")  # Manager is native to Germany
}",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","SELECT ?militaryForce WHERE {
  ?war a dbpedia-owl:War.
  ?williamBayne a dbpedia:Person;
    dbpprop:awarded db:KnightCommanderOfTheOrderOfTheBath .
  ?awardee a dbpedia:Person;
    dbpprop:recipientOfMilitaryHonor ?militaryForce .
  ?war rdfs:subPropertyOf [a dbpprop:MilitaryConflict].
  ?awardee dbpprop:participatedIn ?war
}",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?actor1 ?actor2 ?spouse
WHERE {
  ?film1 a :Film ;
            hasActor ?actor1 .
  ?film2 a :Film ;
            hasActor ?actor2 .
  :Janusz_Kaminski a :Person ;
            hasAward ?award .
  ?award a :AwardsAndNominations .
  ?spouse a :SpouseOfPerson;
           isSpouseOf ?Janusz_Kaminski
}
WHERE {
  ?film1 = ""Always"" (1989 film) .
  ?film2 = ""Paradise"" (2013 film)
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","SELECT ?awardee
WHERE {
  ?awardee a dbpedia-owl:Person ;
    rdfs:label ?name ;
    dbo:awarded [ a dbo:HonoraryOrder ; dbo:order ""Commander of the Royal Victorian Order"" ] .
}",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?parent WHERE {
  ?child a dbpedia-owl:Child ;
            rdfs:father ?father .
  ?father a dbpedia:PoliTic ;  # Assuming there's a class for politicians in DBpedia
            rdfs:label ?name .
  ?child rdfs:label ""Frederick Stanley, 16th Earl of Derby"" . # Name of the child
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor WHERE {
  ?movie a :film.
  ?movie stard :audrey_hepburn .
  ?movie cast ?actor .
  ?actor a :person;
    foaf:name ?actor_name
}
LIMIT 1",2,4,3,2,1,2,3,28,0,0,62,0,0.0,0
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent_of_doon, ?actor_in_movie_with_herschel_bernardi, ?profession_of_eugene_cattin
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Doon Arbus""@en .
  ?parent_of_doon a dbpedia:Parent ;
    rdfs:label ?parent_name .
  
  ?movie a dbpedia:Film;
    rdfs:title ?title;
    dbpprop:actor Herschel_Bernardi .
  
  ?actor_in_movie_with_herschel_bernardi a dbpedia:Actor ;
    rdfs:label ?actor_name;
    dbpprop:roleInFilm ?movie .
  
  ?eugene_cattin a dbpedia:Person;
    rdfs:label ""Eugène Cattin""@fr .
  
  ?eugene_cattin dbpprop:profession ?profession .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?child dbpprop:parent [ dbpprop:hasParent ?grandparent ] .
  ?grandparent dbpprop:hasChild ?child .
  ?grandparent dbpprop:firstName ""Elvira""^^xsd:string .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Musician;
    rdfs:label ""Nicholas Michael Curran""@en.
  ?person foaf:name ""Nicholas Michael Curran"" .
  ?musicalArtist a dbpedia:MusicGroup;
    rdfs:label ?musicalArtistLabel .
}

AND
SELECT ?bandName WHERE {
  ?person a dbpedia:Musician;
    rdfs:label ""Kim Wilson""@en.
  ?person foaf:name ""Kim Wilson"" .
  ?band a dbpedia:Band;
    rdfs:label ?bandName .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor WHERE {
  ?movie a mousetrap:Film ;
            mousetrap:star ?actor .
  ?actor a mousetrap:TelevisionShowRole .
  [ dbpedia2:actor ?actor ] foaf:name ""Richard E. Grant"" .
}",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","SELECT ?bandLabel WHERE {
  ?person a dbpedia:MusicalArtist ;
            dbpedia:birthDate ""1945-03-30"" .
  ?bandMember a dbpedia:BandMember ;
             dbpedia:associatedWithPerson ?person .
  ?persona a dbpedia:MusicianPersona ;
            dbpedia:personaOf ?bandMember .
  ?bandMember rdfs:label ?bandLabel .
  ?persona rdfs:label ""Nick Curran"" .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?deathPlace WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:deathDate ?deathDate .
  ?deathDate a owl:DatatypeProperty;
    rdfs:value ""YYYY-MM-DD"" .
  ?person rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"To achieve this, we will use the DBpedia dataset which contains structured information about people, including their roles in films and their occupations. Here's a SPARQL query that should help us find the required information:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?actor a dbo:SoccerPlayer ;
           dbo:isAthlete yes ;
           dbo:roleInFilm ?film .
  ?film a dbo:Film ;
          dbo:director ?director .
  ?director rdf:type dbo:Person ;
            dbo:name ""Manuel Huerga"" .
}
```

This query selects actors who are both soccer players and athletes (`dbo:SoccerPlayer` and `dbo:isAthlete yes`) and who have played a role in a film directed by someone named Manuel Huerga (`?director rdf:type dbo:Person ; dbo:name ""Manuel Huerga""`).",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","SELECT ?adminCountry ?soccerSeason ?teamSeason WHERE {
    ?person a dbpedia:Person;
        dbpedia:birthDate ""1968-08-26"".
    ?person rdfs:label ?name.
    ?name ns:prefLabel ""Theodor Heuss""@de.
    ?person ns:birthPlace ?adminCountry .
    ?soccerManager a dbpedia:SoccerManager;
        dbpedia:birthDate ""1968-08-28"" @en . # Assuming the manager was born on 26th August 1968
    ?soccerManager rdfs:label ?name.
    ?name ns:prefLabel ?managerName .
    ?soccerSeason a dbpedia:SoccerSeason;
        dbpedia:startYear ""1968"" ;
        dbpedia:endYear ""1969"" . # Example season, adjust as needed
    ?teamSeason a dbpedia:FootballLeagueSeason;
        dbpedia:seasonName ?teamSeasonName .
    ?soccerManager ns:managerOfTeam ?team.
    ?soccerSeason rdfs:label ?soccerSeasonName .
    ?teamSeason rdfs:label ?teamSeasonName .
    ?soccerManager ns:managerOf ?team .
}",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"SELECT ?office1 WHERE {
  ?person1 a :politician;
  :office ?office1;
  [ a ns:owl2#Restriction ;
    owl:cardinality ""1"" ] .
  ?person1 ns:memberOrganization/ns:party ?party.
  ?party a ns:organization ; 
    rdfs:label ""Conservative Republican Party (Spain)"" .
}
AND {
  ?person2 a :politician;
  :office ?office2;
  [ a ns:owl2#Restriction ;
    owl:cardinality ""1"" ] .
  ?person2 ns:memberOrganization/ns:party ?party.
  ?party a ns:organization ; 
    rdfs:label ""People's Party (Spain)"" .
}
ORDER BY ?office1, ?office2",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"SELECT ?father
WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""Cecilia Renata""@en;
    foaf:familyMember ?child .
  ?child a dbpedia-owl:Person;
    rdfs:label ""Renata of Austria""@en;
    foaf:parent ?parent .
  ?parent a dbpedia-owl:Person;
    rdfs:label ?parent_name .
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"A SPARQL query to retrieve this information from DBpedia would involve querying for details about Rear Admiral Amasa M. Tracy and the War of 1812. Here's a possible SPARQL query:

```sparql
SELECT ?force WHERE {
  ?admiral a dbpedia:Person ;
            dbpedia:rank ""Rear Admiral"" ;
            dbpedia:war ""War of 1812"" .
  ?admiral rdfs:label ?name.
  ?war a dbpedia:Conflict ;
         dbpedia:startYear 1812 ;
         dbpedia:endYear 1812 .
  ?admiral rdf:type dbpedia:MilitaryPerson ;
          dbpedia:partOfMilitaryConflict ?war .
}
```

This query looks for a person with the rank ""Rear Admiral"" who was involved in the War of 1812, and then it connects that person to the war to infer the force involved.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"SELECT ?author WHERE { ?book ""Smartbomb"" . ?author wdt:Publisher ?publisher . }",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?actor ?movie ?role WHERE {
  ?actor a dbppro:Person;
    dbppro:hasDecedent true;
    dbp:residence dbpedia:Los_Angeles .
  
  ?actor dbppro:hasFamilyMember ?family_member .
  ?family_member a dbppro:ProfessionalRole ;
                 dbppro:role dbpedia:Mentor .
  
  ?actor rdfs:label ?actor_label .
  ?movie a dbppro:Film;
    dbppro:mainActor ?actor .
  
  ?actor dbppro:hasRoleIn ?movie .
}",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"The SPARQL query will involve:
1. Finding the entity `William Gayner`.
2. Determining the birthplace (region and country).
3. Linking this birthplace to its native inhabitant.

Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?native WHERE {
  ?william gayner :birthPlace ?birthLocation .
  ?birthLocation a dbpedia:Region ; dbpedia:hasCountry ?country .
  ?birthLocation natives ?native .
  ?native rdfs:label ""William Gayner"" .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"The SPARQL query will involve using the `foaf:birthdate` property to find individuals born on a specific date (Tony Hollings' birthday) and then filtering those results to only include individuals who have the properties `sport:soccerPlayer`, `sportsManager`, and `soccerManager`.

Here is the SPARQL query:

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia2: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbpedia2:SoccerPlayer .
  ?person a dbpedia2:SportsManager .
  ?person a dbpedia2:SoccerManager .
  ?person foaf:birthdate ""1985-03-14""^^xsd:date .  # Assuming Tony Hollings' birthday is on March 14, 1985
}",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?place WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:birthPlace ?place .
  ?place a dbpedia-owl:Region .
  ?place rdfs:label ""United States""
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","SELECT ?award_name ?recipient ?recipient_entity ?recipient_military_force
WHERE {
  ?award_name a dbpedia:Award .
  ?award_name rdfs:label ""Gillmore Medal""@en .
  ?recipient a dbpedia:Person .
  ?recipient foaf:name ?recipient_name .
  ?recipient_entity a dbpedia:City .
  ?recipient_entity rdfs:label ""Charleston, South Carolina""@en .
  ?recipient_military_force a dbpedia:MilitaryBranch .
  ?recipient_military_force foaf:member ?recipient
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","SELECT ?child_name ?parent_name WHERE {
  ?child_name a :royalty; :is_office_holder ;# indicate child is royalty and office holder
  ?parent_name a :royalty; :is_office_holder ;# indicate parent is royalty and office holder
  ?child_name father : ?parent_name .
  ?parent_name mother : :Elvira_of_Castile_Queen_of_Sicily .
  ?child_name name ""William I""^^xsd:string
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"SELECT ?artist WHERE {
  ?song ""Filthy Friends"" .
  ?songPerformingArtists ?artist .
  ?artist ns:name ?name .
  ?artist rdfs:label ?label .
  FILTER (regex(str(?label), ""Nirvana"")) .
  OPTIONAL { ?song ns:performer ?artist }
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"To find this information, we need to:
1. Identify individuals associated with the alter ego ""The Shadow"".
2. Check if any of these individuals share the same profession as Shatrughan Sinha.
3. Return the details of such an individual.

A SPARQL query that could be used to retrieve this information might look like:

```sparql
SELECT ?person 
WHERE {
  ?person a :alter_ego ""The Shadow"" .
  ?person rdfs:label ?name .
  ?person foaf:profession ?profession .
  ?profession rdfs:label ""Indian politician and film actor"" .
}
```

This query searches for individuals (`?person`) who have the alter ego ""The Shadow"", have a label (`?name`) that identifies them, and have a profession (`?profession`) that matches ""Indian politician and film actor"".",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","SELECT ?settlement WHERE {
    ?person a ns:people.person .
    ?person dcterms:birthLocation ?settlement .
    ?person ns:militaryAward/ns:medalOfHonor ?award .
    ?award a ns:militaryAward .
    FILTER (xsd:date(?person deathDate) = ""1850-08-05"") .
    ?award property:noun ?settlement .
    ?settlement rdfs:label ?label .
    ?label a ns:language ""en"" .
    ?settlement ns:populationSize < 10000 . # Assuming a small settlement
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"SELECT ?entity WHERE {
  ?entity a dbpedia-owl:Location ;
            dbpedia2:country ""Japan"" .
}",1,1,2,1,1,2,3,28,0,0,104,0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"SELECT ?associated_artist
WHERE {
  ?associated_artist a dbpedia:Musician;
  dbpedia2:worked_with|R.E.M.;
  ?associated_artist rdfs:label ?name.
}",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?artist_name ?band_name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1945-03-30"";
    dbpedia:musicalArtist ?artist_name .
  OPTIONAL { ?person rdfs:seeAlso ?band_page . }
  ?band_page a dbpedia:Band;
    dbpedia:bandMember ?person .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?actor WHERE {
  ?actor a :Actor .
  [ a :movie; setLocation ""Los Angeles""; decedent ""Doon Arbus"" ] .
  ?actor parents ?parent .
  ?parent a :Person;
         foaf:name ""Leonard Nimoy"" .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthplace WHERE {
  ?bob_crewe ns:birthPlace ?birthplace .
  ?ethan_iverson rdfs:label ""Ethan Iverson""@en .
  ?album rdfs:artist ?ethan_iverson .
  ?album a n:MusicAlbum
}",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","SELECT ?militaryForce WHERE {
  ?war a :MilitaryConflict;
  ?war a :Event;
  ?war rdfs:label ""French campaign in Egypt and Syria"";
  ?war participant ?militaryForce.
  ?militaryForce a :MilitaryUnit .
  ?war involed :William_Bayne
}",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","SELECT ?party_member ?spouse_name
WHERE {
  ?ruling_party rdfs:label ""Central, Louisiana"" .
  ?actor foaf:name ?actor_name .
  ?film dbpprop:producer ""Nat Levine"" .
  ?actor rdf:type <g:Actor> .
  ?actor <> ?actor_name .
  ?spouse foaf:name ?spouse_name .
  ?actor <> ?actor_name .
  ?film dbpedia-owl:film ?film_id .
  ?party_member foaf:name ?party_member_name .
  ?spouse foaf:partner ?party_member
}
LIMIT 1",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"SELECT ?spouse
WHERE {
  ?work a book.
  ?author ""Bill Clinton"".
  ?author a pol:Politician .
  ?author a odr:OfficeHolder .
  ?work rdfs:label ""It Takes a Village"".
  ?work dc:creator ?author .
  ?spouse a foaf:Person .
  ?spouse a pol:Politician .
  ?spouse a odr:OfficeHolder
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","SELECT ?person WHERE {
  ?person a ns:people.person .
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person ns:birthPlace ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?person a ns:musicianRole/ns:bandMember .
  ?person ns:origin ""Puerto Rico"" .
}",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?militaryForce WHERE {
  ?person a ns:Person ;
            ns:hasRole [ a ns:militaryRole ; rdfs:label ""Military Officer"" ] ;
            rdfs:label ""Robert Calder""@en .
  ?person ns:serviceMemberOf ?militaryForce .
}",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"SELECT ?spouse
WHERE {
  ?author ""Bill Clinton"" .
  ?spouse a :Politician ; rdfs:label ?spouse_label .
  ?work ""An Invitation to the White House"" .
  ?work a :WrittenWork , :Book , :Work .
  ?author foaf:marries ?spouse .
}",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","SELECT ?administration
WHERE {
  ?person a :EmperorOf Russia .
  ?person1 a :Person ; foaf:name ""Nicholas II"" .
  ?person2 a :Person ; foaf:name ""Alexander II"" .
  ?administration a :Country .
  ?person1 adminLocation ?administration .
  ?person2 adminLocation ?administration
}",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"The SPARQL query to find this information would involve querying the DBpedia dataset for athletes from Łódź and filtering those who are Polish.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?athlete a dbo:Athlete;
    dbo:nationality dbo:POLAND .
  ?athlete dba:residence dbo:Łódź .
}
```

This query selects the country of residence (`?country`) for athletes (`?athlete`) who are Polish (`dbo:POLAND`) and reside in Łódź (`?athlete dba:residence dbo:Łódź`).",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","The SPARQL query will look for a person named ""Joey B"" and then extract their birth name (which is typically found in the ""birth_name"" property).

```sparql
SELECT ?birthName WHERE {
  ?person a dbpedia-owl:Musician ;
            rdfs:label ""Joey B""@en .
  ?person foaf:givenName ?birthName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"SELECT ?person WHERE {
  ?person a dbpedia:Royalty .
  ?person rdfs:child [dbpedia:hasParent ?grandparent] .
  ?grandparent a dbpedia:Person ;
               dbpedia:hasParent [dbpedia:hasParent Duke Philipp of Württemberg; dbpedia:hasName ""Elector Frederick II Eugene of Württemberg""] .
  ?grandparent rdfs:child [dbpedia:hasParent Archduke Charles Louis of Austria; dbpedia:hasName ""Infante Ferdinand Johann Baptiste of Austria""]]
}",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"SELECT ?child
WHERE {
  ?parent a dbpedia:Person ;
           dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person ;
               dbpedia:name ""Archduke Rudolf of Austria"" .
  ?parent dbpedia:name ""Elisabeth of Bohemia"" .
  ?child a dbpedia:Person ;
          dbpedia:hasParent ?parent
}",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?father WHERE {
  ?parent a :politician, :office_holder .
  ?parent ns:father ?father .
  ?child a :royal_navy_officer .
  ?child ns:son ?parent .
  ?parent ns:has_son ?child
}
WHERE {
  ?parent ns:name ""Edward Stanley, 17th Earl of Derby"" .
  ?child ns:name ""Victor Stanley (Royal Navy officer)"" .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","SELECT ?player ?name ?birthDate ?clubs WHERE {
  ?player rdfs:label ?name .
  ?player dbppro:memberOf [ a dbppro:FootballClub; rdfs:label ""1. FC Magdeburg"" ] .
  ?player dbppro:goalCount ?goals .
  ?clubs rdfs:label ""1. FC Magdeburg"" .
}",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"SELECT ?actor WHERE {
  ?film a ns:Film ;
    ns:producer ?producer .
  ?producer foaf:name ""Nat Levine"" .
  ?actor ns:pols partyMember ""Republican Party (United States)"" .
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?force WHERE {
  ?person a ns:Person ;
            ns:hasMilitaryForce ?force .
  ?force a ns:MilitaryForce .
  
  ?person ns:givenName ""Quincy Adams"" ;
            ns:familyName ""Gillmore"" .
  
  ?person ns:birthPlace [ a ns:Place ; ns:name ""Lexington"" ] .
  
  ?place a ns:Settlement ;
           ns:locatedIn ns:Country ""United States of America"" .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee_name ?gillmore_force ?medal_of_honor_war WHERE {
  ?awardee rdf:type dbo:MedalOfHonorAwardee .
  ?awardee rdfs:label ?awardee_name .
  OPTIONAL { ?awardee dbo:war ?medal_of_honor_war }
  FILTER (lang(?awardee_name) = ""en"")  # Only consider English language pages
} UNION {
  ?awardee rdf:type dbo:GillmoreMedalAwardee .
  ?awardee rdfs:label ?awardee_name .
  OPTIONAL { ?awardee dbo:unit ?gillmore_force }
  FILTER (lang(?awardee_name) = ""en"")  # Only consider English language pages
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?father
WHERE {
  ?child baedaMaryamI a :Child .
  ?child :father ?father .
  ?father a :Royalty .
  ?father a :OfficeHolder
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","The SPARQL query to find the required information might look something like this:

```sparql
SELECT ?personName ?artistName WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person dbpprop:associatedWith ?artist .
  ?artist a dbpedia-owl:MusicalArtist .
  ?artist rdfs:label ""$pacely""@en
}
```

This query searches for a Musician named ""Darryl Paa Kwesi Bannerman-Martin"" and finds the associated Musical Artist named ""$pacely"".",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","SELECT ?player ?manager
WHERE {
  ?club dbpedia:hasManager ?manager .
  ?manager rdfs:label ""Hong Kong FC manager""@en .
  ?manager rdf:type dbpedia:SoccerCoach .
  ?team dbpedia:hasClub ?club .
  ?team rdfs:label ""Hong Kong FC""@en .
  ?player rdfs:label ""Ye Jia""@en .
  ?player dbpedia:memberOf ?team
}",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","SELECT ?alterEgo WHERE {
  ?person a dbpedia:Person;
    dbpedia:realName ""Kent Allard"";
    dbpedia:role ""The Question"";
    dbpedia:work [""Cora Sue Collins""].
  OPTIONAL { ?person rdfs:label ?alterEgo }
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"The SPARQL query will need to:

1. Identify the episode of ""All or Nothing: Manchester City"" that includes Pablo Aimar.
2. Extract the players involved in that episode.

Assuming we have a dataset with information about episodes and players, the SPARQL query might look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?episode rdf:type dbpedia:Event.
  ?episode dc:title ""All or Nothing: Manchester City"".
  ?player db:actorInRole ?role .
  ?role a dbpedia:ActorRole .
  ?player rdfs:label ""Pablo Aimar"" .
  ?player db:sport ""soccer"" .
}
```

This query looks for episodes of ""All or Nothing: Manchester City"" featuring Pablo Aimar, then selects the player who acted in that role and is labeled as ""Pablo Aimar"" and plays soccer.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"Given that DBpedia provides structured data about films and actors, a SPARQL query would involve looking up Aleksandr Filimonov's works and then identifying the actors associated with those works. Here is a general template for such a query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?work a dbpedia:Film;
    dbpedia:writtenBy [ dbpedia:author ""Aleksandr Filimonov"" ].
  ?actor dbpedia:portrayedIn ?work .
}
```

This query selects the actor (`?actor`) who portrayed in any film (`?work`) written by Aleksandr Filimonov.",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"SELECT ?commander WHERE {
  ?commander a ns:people.person;
  ns:givenName ""George"";
  ns:familyName ""Pickett"";
  ns:militaryBranch ns:confederate_army;
  ns:engagedInMilitaryAction ns:pickets_charge
}",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ?producer .
  ?actor dbpprop:roleInFilm ?character ;
            dbpprop:film ?movie .
  ?character a dbpedia:Character; dbpprop:name ""The Shadow"" .
  FILTER (lang(?character) = ""en"")  # Assuming the query should return results in English
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:hasAlterEgo ""The Mask"" .
  ?person ns:producedFilm ?film .
  ?film ns:starredActress janetGaynor
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?work ?author WHERE {
  ?work a :book .
  ?work rdfs:label ""My Life"" . # Assuming ""My Life"" is one of Bill Clinton's works
  ?work dc:creator ?author .
  ?author foaf:name ""Bill Clinton"" .
  
  ?disease a :disease .
  :society rdfs:label ""HIV/AIDS"" .
  ?disease rdf:type :disease .

  ?event a :war .
  :unitedStatesNavy rdfs:label ""United States Navy"" .
  ?event rdf:type :war .

  ?spouse a :person .
  ?spouse foaf:name ""Hillary Clinton"" .
  ?spouse ns:marriedTo ?partner .
  ?partner foaf:name ""Hillary Clinton"" .
}",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"The SPARQL query would be designed to search for the ""power"" or ""force"" attribute associated with the person Quincy Adams Gillmore in the DBpedia dataset. Assuming that such a direct property does not exist, we might look for related properties or descriptions that could imply force in a military context.

Here's an example of how we might structure our SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?property WHERE {
  ?person a dbpedia:Person ;
            dbpedia:hasMilitaryService ?military_service .
  ?military_service rdfs:label ""Quincy Adams Gillmore"" . # Assuming we need to match the name
}
```

This query looks for a person named Quincy Adams Gillmore and retrieves any property related to their military service, which might include information about their force or power.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","SELECT ?movie WHERE {
  ?movie a dbpedia:Film;
  dbpedia:producer ?producer ;
  dbpedia:actor janet_gaynor ;
  ?producer rdfs:label ""Cecil B. DeMille"" .
  OPTIONAL { ?movie rdfs:label ?title }
  FILTER (regex(str(?title), ""The Adventures of Tom Sawyer"")) 
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"SELECT ?birthPlace
WHERE {
  ?awardee dbpprop:award ""Emmy Award for Outstanding Drama Series"" .
  ?awardee foaf:birthPlace ?birthPlace .
  FILTER (lang(?birthPlace) = ""en"") 
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","SELECT ?musicalArtist
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:birthDate ""1945-03-30"" .
  ?bandMember a dbpedia-owl:BandMember ;
              dbpedia-owl:memberOf ?person .
  ?musicalArtist a dbpedia-owl:MusicalArtist ;
               dbpedia-owl:associatedWith ?bandMember .
  ?person rdfs:label ""Nick Curran""@en .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","SELECT ?altEgo WHERE {
  ?altEgo a :radio_character;
  :alter_ego_of ?main_character .
  ?main_character foaf:name ""Lamont Cranston""@en.
  ?main_character rdfs:label ""The Shadow""@en.
  ?main_character dbo:parent ""Dawit I"" .
}",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","The SPARQL query would look for individuals who have both the `foaf:birthDate` property set to November 3, 1979 (`1979-11-03`) and who are associated with the `soccerManager` role (`soccerManager`) and also have a `role` property indicating they were a soccer player (`soccerPlayer`). Here is the SPARQL query:

```sparql
SELECT ?person
WHERE {
  ?person a :SoccerPlayer .
  ?person a :SoccerManager .
  ?person foaf:birthDate ""1979-11-03"" .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","SELECT ?child
WHERE {
  ?parent a dbpedia:Person ;
           dbpedia:hasChild ?child .
  ?child rdfs:label ""Karl Wilhelm Ferdinand""@de.
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?artist_name ?band_member_name
WHERE {
  ?artist Phantomsmasher .
  ?artist rdfs:label ?artist_name .
  ?bandMember a dbpedia-owl:BandOrMusicGroup ;
            dbpproject:hasBandMember ?band_member .
  ?band_member a dbpedia-owl:Person ;
             rdfs:label ?band_member_name .
  ?artist dbo:associatedWith ?band .
  ?bandMember foaf:memberOf ?band
}
ORDER BY ?artist_name",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"A conceptual SPARQL query to retrieve the necessary data involves multiple steps and relations, as outlined above.",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?awardee_name ?birthplace_fellowship ?birthplace_actor
WHERE {
  ?awardee_name a dbpedia-owl:Person ;
                dbpedia2:awardRecipientOf dbo:SangeetNatakAkademiFellowship .
  ?actor_name a dbpedia-owl:Person ;
               dbpedia2:role dbpedia:ActorRoleInFilm ""Akaler Shandhaney"" .
  ?awardee_name foaf:name ?awardee_name .
  ?actor_name foaf:name ?actor_name .
  ?awardee_name ns:birthPlace ?birthplace_fellowship .
  ?actor_name ns:birthPlace ?birthplace_actor
}",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?warLabel ?militaryForce WHERE {
    ?w William Bayne.
    ?r 30th (Cambridgeshire) Regiment of Foot.
    ?conflict a nlp:Conflict.
    ?conflict rdfs:label ?warLabel.
    ?conflict a nlp:Napoleonic_Wars.
    ?conflict ns:partOfSituations [ a ns:Military_conflict; ns:participant ?militaryForce ] .
}",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"SELECT ?almaMater WHERE {
  ?person a dbpedia-owl:Person;
    dbpprop:hasAlmaMater ?almaMater .
  ?person rdfs:label ""Chennupati Jagadish""@en .
  FILTER (lang(?almaMater) = ""en"") .
  ?almaMater geo:locatedIn dbpedia-owl:Andhra Pradesh .
}",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"SELECT ?alterEgo WHERE {
  ?character a ns:FilmCharacter;
    rdfs:label ""The Shadow""@en;
    foaf:alterEgo ?alterEgo.
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Politician .
  ?person foaf:name ""Ada Jane Low"" .
}",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","SELECT ?player ?sport ?film ?team WHERE {
  ?player bornDate ""1955-02-22"" .
  ?player sport ?sport1 .
  ?player sport soccer .
  ?player film:role [ property:label ""soccer player/athlete"" ] .
  ?film work:creator ""Manuel Huerga"" .
  ?team member ?player .
  ?player rdfs:label ?playerLabel .
  ?team rdfs:label ""Pablo Aimar""
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"SELECT ?producer 
WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor foaf:name ?name .
  ?actor dc:role ""The Shadow""@en .
  ?work rdfs:label ""A Star Is Born (1937 film)""@en .
  ?producer rdfs:label ?producer_name .
  ?producer dc:role ?role .
  ?producer ns:producedBy ?work
  FILTER (?name = ""Johnny Doughboy"" OR ?name = ""The Shadow"")
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"SELECT ?birthName WHERE {
  ?person a dbpedia-owl:Person;
    rdfs:label ""John Boxer""@en .
  ?person foaf:givenName ?birthName .
}",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","SELECT ?author WHERE {
  ?work ""El Deafo"" .
  ?work rdfs:author ?author .
  ?author ns:language ""en"" .
  ?author ns:nationality ""USA""
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"SELECT ?country WHERE {
  ?writer dc:birthPlace ?country;
  ?writer rdfs:label ""Lao She""@zh.
} UNION {
  ?child dc:offspring ?politician;
  ?politician foaf:name ""Hsiao-ho"";
  ?child rdfs:label ""Chiang Ching-kuo""@zh;
  ?child dc:birthPlace ?country
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"SELECT ?child ?parent
WHERE {
  ?child a dbpedia:Person ;
            dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person ;
           dbpedia:isA dbpedia:Royalty .
  ?child rdfs:label ""Faisal bin Hussein"" .
  ?parent rdfs:label ""Faisal bin Hussein""
}",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"The SPARQL query will look for the time zone of Japan and its associated region. Here's how you can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?region WHERE {
  ?country ex:timeZone ?tzID.
  ?tzID rdfs:label ""Japan Standard Time"" .
  ?tzID rdfs:comment ""Asia/Tokyo"".
  ?country rdfs:label ?region
}
```

This query selects the region (`?region`) of any country (`?country`) that has a time zone (`?tzID`) labeled as ""Japan Standard Time"" and whose comment describes it as being in ""Asia/Tokyo"".",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"To construct the SPARQL query, we need to use DBpedia resources. Here is a structured approach:

1. Find the film associated with Manuel Huerga.
2. Identify soccer players and managers in this film.
3. Determine Marcelo Sarmiento's birthday.
4. Construct a query to link these individuals.

Let's assume ""El Señor de los Cielos"" (The Lord of the Heavens) is the film associated with Manuel Huerga, as it is one of his notable works.

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?player ?manager 
WHERE {
  ?film rdf:type dbpedia-owl:Film ;
            dbpedia-owl:actor Manuel_Huerga .
  ?soccerPlayer rdf:type dbpedia-owl:SoccerPlayer;
               dbpedia-owl:actedInRoleIn ?film .
  ?manager rdf:type dbpedia-owl:SoccerManager;
              dbpedia-owl:playedFor ?soccerTeam .
  ?soccerPlayer foaf:wasBornOn ?birthday.
  ?birthday rdf:type rdf:Property .
  ?birthday rdf:value ""1982-03-22"" # Marcelo Sarmiento's birthday assumed here
  FILTER ( ?birthday = ?sarmientoBirthday )
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","SELECT ?actorSpouseName
WHERE {
  ?actor <starredIn> ""1,000 Dollars a Minute"" .
  ?actorSpouseName a :Person ;
                  foaf:spouseOf ?actor .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?child a ns:Person ;
           ns:hasParent ?parent .
  ?parent a ns:Person ;
            ns:hasSpouse Elvira_of_Castile_Queen_of_Sicily ;
            ns:hasChild ?child
}",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","SELECT ?actor WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ""Richard Grant Esterhuysen"" .
  ?actor :portrayedCharacter ""The Shadow"" .
  OPTIONAL { ?actor :appearedInTVShow ?tv_show }
}",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?person WHERE {
    ?person a :alterEgoOfTheShadow .
    ?person a :producer_of ""A Star Is Born (1937 film)"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","The SPARQL query will involve querying the DBpedia dataset for the relevant individuals and their relationships. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?child_name WHERE {
  ?child_name a ns:Person ;
               ns:hasParent ?parent .
  ?parent a ns:Person ;
           ns:name ""Roger II of Sicily"" .
  
  ?child_name ns:hasSpouse ?spouse ;
                 ns:hasChild ?grandchild .
  ?grandchild a ns:Person ;
             ns:name ""William I of Sicily"" ;
             ns:isRoyalty true .
  ?spouse a ns:Person ;
           ns:name ""Elvira of Castile"" .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"SELECT ?settlement WHERE {
  ?settlement a dbpedia-owl:Settlement ;
               geonames:timezoneOffset dbpedia:Eastern_European_Time .
}",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?awardee ?award ?birthplaceLabel ?entityLabel
WHERE {
  ?awardee a ns:Person ;
            dcterms:birthLocation ?birthplace .
  ?birthplace a ns:Place ;
             rdfs:label ?birthplaceLabel .
  ?awardee awardeeOf ?award .
  ?award a ns:Award .
  ?entityLabel a ns:Organization ;
               rdfs:label ?entityLabel .
  ?awardee ns:serviceFor ?entityLabel
}
WHERE {
  ?awardee deathDate ""1850-08-05""^^xsd:date
}",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","SELECT ?person WHERE {
  ?person a :COMMANDER_OF_FRENCH_FORCES_DURING_ALGERIAN_WAR .
  ?person a :FATHER_OF_ELEONORE_OF_AUSTRIA, QUEEN_OF_POLAND .
  ?person rdfs:label ""Jacques Massu""@fr
  FILTER (lang(?person) = ""fr"")
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?duke  a  dcterms:birthDate ?birth_date .
  ?duke  a  dcterms:father ?parent .
  ?parent  a  dbo:Person ;
           a  dbo:Noble ;
           rdfs:label ""Frederick III of Hohenzollern""@en
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?warLabel ?entity WHERE {
  ?alexander lv:conflict ?war.
  ?war rdfs:label ?warLabel .
  ?war rdf:type dwc:Conflict .
  ?entity a dwc:EntityInPlace .
  ?entity rdfs:label ?entityLabel .
  FILTER (lang(?entityLabel) = ""ru"" )
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Biography ;
            dbpedia-owl:hasChild ?child .
  ?child rdfs:label ""Baeda Maryam I's child""@en.
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","SELECT ?party WHERE {
  ?politician ""Roy Leonardo Barreras Montealegre"" as ?name .
  ?politician rdf:type dbpedia-owl:Politician .
  ?politician foaf:name ?name .
  ?politician rdfs:label ?party
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE {
  ?mariaSpouse spousS ?maria .
  ?maria spow ?mariaOfBytom .
  ?mariaOfBytom rdfs:label ""Maria of Bytom"" .
  ?mariaSpouse rdf:type foaf:Person .
  ?mariaSpouse dc:title ?title .
  ?title rdfs:label ""Royalty"" .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"The query will look for a work titled ""a work"" by Joe Biden and then retrieve the author of that work. Assuming there is only one such work, the SPARQL query would be:

```
SELECT ?author
WHERE {
  ?work a dbpedia-owl:WrittenWork ;
           dbpedia-owl:author ?author .
  ?work rdfs:label ""a work"" .
  ?work dbo:creator ""Joe Biden"" .
}",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor WHERE {
  ?movie a dbpedia:Film .
  ?actor dbpprop:starIn ?movie .
  ?actor rdfs:label ""Iliza Shlesinger""@en .
  ?movie rdfs:title ""Inside Out""@en
}",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?war1 ?war2
WHERE {
    ?awardee war ?war1 .
    ?leader war ?war2 .
    ?awardee ns:recipientOf NobelPeacePrizeAwardNumber ""30"" .
    ?leader ns:office ""Leader of the National Party of Greece"" .
    ?war1 rdfs:label ?war1_label .
    ?war2 rdfs:label ?war2_label
}
ORDER BY ?war1_label, ?war2_label",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","The SPARQL query will involve joining multiple triples to connect these relations. Here's how we can structure it:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?royalty WHERE {
  ?commander a dbpedia-owl:Royalty ;
               dbpedia-owl:partOfEvent dbpedia:Event_Siege_of_Mukha .
  ?royalty a dbpedia-owl:Child ;
            dbpedia-owl:parent ?commander .
  ?royalty a dbpedia-owl:Royalty .
  ?royalty dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia-owl:Royalty ;
               dbpedia-owl:partOfEvent dbpedia:Event_Siege_of_Mukha;
               dbpedia:hasChild ?baeda_maryam .
  ?baeda_maryam a dbpedia:Person ;
               dbpedia:hasParent ?royalty
}
```

This query will:
1. Select the royalty who is a child of a commander involved in the Siege of Mukha.
2. Ensure that this royalty is also a royalty themselves.
3. Identify the parent (grandparent) of this royalty, which should be the same commander.
4. Verify that the identified royalty is indeed the father of Baeda Maryam I.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"SELECT ?father WHERE {
  ?child a dbpedia-owl:Child ;
            dbpedia2:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           dbpedia2:hasParent ?grandparent .
  ?grandparent a dbpedia-owl:Person ;
               dbpedia2:name ""Maximilian I Joseph of Bavaria"" .
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
  ?child <father> ?parent .
  ?child <son> <Person> . 
  ?parent <name> ""Frederick Stanley"" .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","SELECT ?subject ?property ?object
WHERE {
  ?subject a :COMMANDER_IN_WAR .
  ?subject rdfs:label ""George Ducas"" .
  ?object a :WARRIOR .
  ?object rdfs:label ""George Ducas"" .
  OPTIONAL { ?object rdf:type :TELEVISION_SHOW }
  OPTIONAL { ?object rdf:type :SOCIAL_EVENT }
  FILTER (lang(?object) = ""en"" )
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"The SPARQL query will look for resources that are associated with the team ""1. FC Magdeburg"" using properties that indicate membership or roster information.

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?player
WHERE {
  ?player a dbpprop:member_of dbpprop:1_F_C_Magdeburg .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?person ?war WHERE {
  ?person a dbpedia:Person.
  ?person rdfs:label ""Amasa Tracy"".
  OPTIONAL { ?person dbpedia:P31 ?war }
}",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"SELECT ?child1 ?child2 WHERE {
  ?child1 a ns:http://www.wikidata.org/prop/direct/child_of ; wd:Q12345.
  ?child1 ns:parent ?parent.
  ?parent a ns:http://www.wikidata.org/prop/direct/monarch .
  ?child2 a ns:http://www.wikidata.org/prop/direct/child_of ; wd:Q67890.
  ?child2 ns:parent ?child1.
  ?child2 wd:Q12345
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"The query will involve looking up Janet Gaynor's roles in DBpedia and then identifying the producers of the films where she played The Shadow. Here is a structured SPARQL query to achieve this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?producer
WHERE {
  ?movie a dbpedia-owl:Film;
    dbpedia-owl:roleOfActor [ rdf:_1 ?actor ] .
  ?actor rdfs:label ""Janet Gaynor""@en .
  ?actor dbpedia:character ?character .
  ?character a dbpedia-owl:Character ;
    dbpedia-owl:actor ?actor ;
    rdfs:label ""The Shadow""@en .
  ?movie dbpedia:producer ?producer
}
```

This query does the following:
1. Selects the producer of any film (`?movie`) where Janet Gaynor (`?actor`) played the character `The Shadow`.
2. Ensures that Janet Gaynor is labeled as the actor for the movie.
3. Confirms that The Shadow is the character she played in that movie.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"SELECT ?almaMater WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasAlmaMater ?almaMater .
  ?person rdfs:label ""Eleonora Menicucci"" .
}
AND
SELECT ?foundingDate WHERE {
  ?university a dbpedia-owl:University ;
               dbpedia2:established ?foundingDate .
  ?university rdfs:label ""Federal University of Paraíba"" .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"SELECT ?entity WHERE { ?entity a :CameronAward . }
PREFIX : <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?leader a dbo:PoliticalLeader ;
            dbo:partyMemberOf :UlsterUnionistParty .
  ?leader dwc:address ?residence .
}",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","SELECT ?bandMember
WHERE {
  ?band dbpprop:genre ""rock"".
  ?band rdfs:label ""Burnt by the Sun"".
  ?band dbo:members ?bandMember.
}",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"SELECT ?person WHERE {
  ?person a ns:Person ;
            ns:role ""The Shadow"" .
  ?person ns:appearedIn ""ATL"" .
}",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","A SPARQL query to find the musical artist associated with Cynthia Ikponmwenosa Morgan might involve querying for her Wikipedia page and then extracting the relevant information. Here is a sample SPARQL query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia2: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist
WHERE {
  ?person dbpedia2:birthDate ?birthdate .
  ?person rdfs:label ?name .
  ?person rdf:type dbpedia2:Person .
  ?person dbpedia2:associatedBandOrArtist ?musicalArtist .
  FILTER (lang(?name) = ""en"")  # Assuming the name is in English
}
```

This query selects the `musicalArtist` associated with a person (`?person`) who has a birth date (`?birthdate`), an English label (`?name`), and is of type `Person` in the DBpedia ontology. The filter ensures we only consider names in English.",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"SELECT ?child WHERE {
  ?grandparent a ns:Person ;
               ns:father ?parent .
  ?parent a ns:Person ;
            ns:child ?child .
  ?child a ns:Person ;
          ns:child ?grandchild .
  ?grandchild a ns:Person ;
             ns:name ""William II of Sicily"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"The SPARQL query will involve querying the DBpedia dataset for the children of Alfonso VI and then querying those results for their own children. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child1 .
  ?child1 a dbpedia-owl:Person ;
           dbpedia-owl:hasChild ?grandchild .
}
```

This query starts by selecting the `grandchild` of any `Person` (identified by `dbpedia-owl:Person`) who is also a child of another `Person` (identified by `dbpedia-owl:hasChild`).",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?child
WHERE {
  ?child a dbpedia:Royalty .
  ?child a dbpedia:OfficeHolder .
  ?child rdfs:father ?grandparent .
  ?grandparent a dbpedia:Person .
  ?grandparent rdfs:parent ?parent .
  ?parent a dbpedia:Person .
  ?parent rdfs:offspring ?child .
  ?parent ns:familyMemberOf Yeshaq I
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"The SPARQL query will look for an entity with the property `isPartOf` linked to ""United Kingdom"". Here's the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity rdf:type dbo:Country ;
            dbo:name ""United Kingdom"" .
}
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commander
WHERE {
  ?commander a :MilitaryPerson.
  :hasLed ""Pickett's Charge"" .
  ?commander rdfs:label ?name.
}",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"SELECT ?militaryForce WHERE {
    ?war a dbpedia-owl:Conflict .
    ?war rdfs:label ""Algerian War"" .
    ?militaryForce a dbpedia:MilitaryForce .
    ?militaryForce rdfs:label ?militaryLabel .
    FILTER (?militaryLabel = ""French Army"") }
}",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","SELECT ?awardee ?award
WHERE {
  ?awardee ns:award [ ns:name ""Nobel Prize in Physics"" ].
  ?awardee rdfs:member [ a owl:Class; rdfs:name ""Royal Swedish Academy of Sciences"" ].
}",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"SELECT ?parent
WHERE {
  ?child a dbpedia:Person ;
  dbpedia:hasParent ?parent ;
  dbpedia:name ""Amy Arbus"" .
  ?parent a dbpedia:Person ;
  dbpedia:hasSpouse ?spouse ;
  dbpedia:hasChild ?child .
  ?spouse a dbpedia:Person ;
  dbpedia:name ""Mariclare Costello"" .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?territory WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?placeLabel .
  ?placeLabel ns:language ""da"" .
  ?person foaf:name ""Christian Ditlev Ammentorp Hansen"" .
  FILTER (lang(?placeLabel) = ""da"")
}",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpprop:birthPlace ?birthPlace .
  FILTER ( ?person = ""Vince Gilligan"" ) || ?person = ""Glenn Youngkin""
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"SELECT ?parent ?royalty_child
WHERE {
  ?prince omar_bin_faisal a :Person ;
                  :father ?parent .
  ?parent a :RoyaltyPerson .
  ?parent :hasChild ?child .
  ?child a :Royalty ; 
         :name ""Princess Aisha bint Faisal"" .
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthLocation .
  ?birthLocation rdfs:label ?countryName .
  ?manager a dbpedia:Manager;
    dbpedia:managedTeam ?team .
  ?team rdfs:label ?teamName .
  ?teamName ""SBV Vitesse"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","SELECT ?actor ?actorSpouse
WHERE {
  ?actor rdfs:label ""1,000 Dollars a Minute""@en .
  ?actor foaf:name ""Ann Sothern""@en .
  ?actor rdf:type dbpprop:member_of dbpprop:Republican_Party_United_States .
  ?actor spous:spouse ?actorSpouse
}
LIMIT 1",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"SELECT ?bandMember
WHERE {
  ?band rdfs:member ?bandMember.
  ?band rdf:type dbo:Band .
  FILTER (STRSTARTS (?band, ""Stone Sour"") OR STRSTARTS (?band, ""Mudvayne""))
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?entity WHERE {
  ?person a dbpedia-owl:Person ;
    foaf:name ""Daniel Elahi Galán"" .
  ?person rdfs:label ?country .
  ?person dbo:politicalPartyMemberOf ?party .
  ?party a dbpedia-owl:PoliticalParty .
  ?party rdfs:label ?party_name
} 

AND {
  ?person2 a dbpedia-owl:Person ;
    foaf:name ""Gustavo Petro"" .
  ?person2 rdfs:label ?country2 .
  ?person2 dbo:politicalPartyMemberOf ?party2 .
  ?party2 a dbpedia-owl:PoliticalParty .
  ?party2 rdfs:label ?party_name2
}

AND {
  ?country ?country_label ?entity .
  ?party ?party_label ?entity .
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"The SPARQL query will look for the `band` property related to the person with the given name ""Bob Thompson"" (musical artist) and the alias ""The Shadow"". Here is the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person a dbpedia-owl:MusicalArtist;
           rdfs:label ""Bob Thompson""@en.
  ?person foaf:alterEgo ""The Shadow""@en.
  ?person dbpedia-owl:band ?band .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Philipp Albrecht, Duke of Württemberg"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","SELECT ?person ?war WHERE {
  ?person a dbpedia-owl:U.S._Military_Honoree .
  ?person foaf:name ""Quincy Adams Gillmore"" .
  OPTIONAL { ?person rdfs:seeAlso <http://www.history.com/people/quincy-adams-gillmore> }
  AND { ?war a dbpedia-owl:War } 
  AND { ?war rdfs:label ""American Civil War"" }
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?person rdfs:label ""Tisha Sterling""@en
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer 
WHERE {
  ?work a dbpedia:Work.
  ?actor dbpprop:roleIn ?work .
  ?movie a dbpedia:Movie.
  ?actor dbpprop:roleIn ?movie .
  ?producer rdfs:label ?name
}
UNION {
  SELECT ?producer2 
  WHERE {
    ?collins_work a dbpedia:Work.
    ?actor dbpprop:roleIn ?collins_work .
    ?producer2 rdfs:label ?name
  }
}
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"SELECT ?rank ?birthPlaceLabel ?war ?medal_of_honor_winner
WHERE {
  ?quincy_adams_gillmore a ns:people.military_personnel.
  ?quincy_adams_gillmore rank ?rank .
  ?quincy_adams_gillmore servedIn ?war .
  ?war rdfs:label ?warLabel .
  ?medal_of_honor_winner a ns:awards_and_prizes.medal_of_honor.
  ?medal_of_honor_winner battle ?battle .
  ?battle rdfs:label ?battleLabel .
  ?battleLocation a ns:geo.Location .
  ?battleLocation rdfs:type ""settlement"" .
  ?quincy_adams_gillmore birthPlace ?birthPlace .
  ?birthPlace geo:locatedIn ?birthPlaceLocation .
  ?birthPlaceLocation rdfs:label ?birthPlaceLabel .
  ?henry_clay_lewis a ns:people.person .
  ?henry_clay_lewis birthPlace ?birthPlace
}
ORDER BY ?war",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","The SPARQL query will need to:
1. Identify the actor of ""Dispatches from Elsewhere"".
2. Verify that Shatrughan Sinha is associated with acting or this specific profession.

Here's a possible SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?tvSeries ""Dispatches from Elsewhere"" .
  ?actor rdfs:role ?tvSeries .
  ?actor foaf:name ""Shatrughan Sinha"" .
}
```

This query selects the actor (`?actor`) of the TV series ""Dispatches from Elsewhere"" (`?tvSeries`), where the actor's name is Shatrughan Sinha (`?actor foaf:name ""Shatrughan Sinha""`).",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?person WHERE {
  ?person a pol:Politician .
  ?person foaf:name ""Roy Leonardo Barreras Montealegre"" .
  ?person dbpprop:birthDate ?birthDate
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","SELECT ?person WHERE {
  ?person a dbpedia-owl:Person ;
    dbpedia-owl:surname ""Lake"" ;
    dbpedia-owl:givenName ""Harriette Arlene"" ;
    dbpedia:spouse [ a dbpedia:Person ; rdfs:label ""Roger Pryor (actor)""] .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"SELECT ?predecessorLabel ?fatherSpouseName
WHERE {
  ?person a dbpedia-owl:Royalty;
         foaf:familyMember ?father .
  ?father a dbpedia-owl:Person;
         foaf:name ?fatherName ;
         rdfs:label ?fatherLabel .
  ?person rdfs:precedesor ?predecessor .
  ?fatherSpouse a dbpedia-owl:Person;
           foaf:sparqlEndpoint ?spouseEndpoint .
  FILTER (lang(?fatherLabel) = ""en"")  # Assuming we want results in English
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"SELECT ?successorName ?authorName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 wd:Q12298.
  ?person rdfs:label ?successorName.
  ?person dbo:politicalSuccessor ?successorOf.
  ?song a dbpedia:MusicAlbum;
    dbpedia:P570 ""Always the Love Songs"".
  ?song dc:creator ?authorName.
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"SELECT ?entity WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthPlace ?birthplace .
  ?birthplace a dbpedia-owl:Settlement ;
    geo:country ""United States of America"" .
  ?person rdfs:label ""Henry Clay Lewis""@en .
}",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia:Person;
  dbpedia:P31 ?award.
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"") .
  ?award a dbpedia:Award .
  ?award rdfs:label ?awardName .
  ?awardName contains ""Vince Gilligan"" OR ?awardName contains ""Cece Bell"" OR ?awardName contains ""Virginia Governor"".
  ?person geo:birthPlace ?birthPlace
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"The SPARQL query to find such a commander would involve searching for a person linked to the Algerian War, with additional properties indicating their role as a commander and their presence in media representations. Here is a sample SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?commander a dbpedia:Event ;
               dbpedia:conflict Algerian_War ;
               dbpedia:role dbpedia:Commander ;
               dbpedia:in_fictional_works dbpedia:Television_Series .
}
```

This query looks for individuals (`?commander`) who are classified as events related to the Algerian War (`dbpedia:conflict Algerian_War`), have the role of a commander (`dbpedia:role dbpedia:Commander`), and are featured in fictional works such as television series (`dbpedia:in_fictional_works dbpedia:Television_Series`).",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?parent
WHERE {
  ?child a :politician .
  ?child a :office_holder .
  ?child an :alumnus_of :EtonCollege .
  ?child :father ?grandparent .
  ?grandparent a :politician .
  ?grandparent a :office_holder .
  ?grandparent an :alumnus_of :EtonCollege
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","A SPARQL query to retrieve information about the Sangeet Natak Akademi Fellowship from DBpedia might look like this:

```sparql
SELECT ?name ?award ?description WHERE {
  ?award a ns:Organization ;
         rdfs:label ""Sangeet Natak Akademi""@en .
  ?award ns:awardee ?recipient .
  ?recipient a ns:Person ;
            rdfs:label ?name .
  OPTIONAL { ?recipient ns:P31 ?schema }.
  FILTER (lang(?description) = ""en"") 
}
```

This query selects the name of the recipient, the award itself, and a description of the award. It filters for English language descriptions and looks for resources that are both an organization (representing the Sangeet Natak Akademi) and have a label in English.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"SELECT ?person
WHERE {
  ?person a ns:Person ;
            ns:birthPlace rdfs:Resource .
}
LIMIT 1",1,1,2,1,1,2,3,28,0,0,5475,0,0.0,0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"SELECT ?person WHERE {
  ?person ns:birthPlace ""Birmingham"" .
  ?person rdfs:label ?name.
}",1,1,2,1,1,3,2,20,0,0,1531,0,0.0,0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"SELECT ?office_miguel_maura, ?tenant_alberto_ruiz_gallardón, ?office_commander WHERE {
  ?office_miguel_maura a dbpedia-owl:OfficeHolder ;
    dbpedia2:has_office ?office.
  ?tenant_alberto_ruiz_gallardón a foaf:residence ;
    rdfs:seeAlso ?office_commander .
  ?office_commander a dbpedia-owl:Politician;
    dbpedia2:participatedInConflict ""Central African Republic Civil War"" .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"The SPARQL query will search for Anumta Qureshi's roles in TV shows. Here's the query:

```
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?show
WHERE {
  ?person a rdf:Person;
    rdfs:label ""Anumta Qureshi""@en .
  ?person rdf:type dbpedia-owl:Actor ;
    owl:sameAs ?show .
  ?show a dbpedia-owl:TelevisionSeries .
}
```

This query selects the TV show (`?show`) where Anumta Qureshi (`?person`) has acted, assuming that there is an `owl:sameAs` relationship linking her as an actor to the TV show.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?person WHERE {
  ?person a :Disease .
  ?person a :SocietalEvent .
  ?person rdfs:label ?name .
  ?arcadia owneR ?person .
  ?clinton spousOf ?person .
  ?name = ""War Commander""
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"SELECT ?award ?band WHERE {
  ?award rdfs:label ""Region AND State AND Settlement""@en .
  ?award ns:isPartOf <http://dbpedia.org/ontology/Award> .
  ?band dbpprop:origin ""New York"" .
  ?award dbpprop:awardee ?band
}",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","To find this information, we can use a SPARQL query to search for facts about Napoleon Zervas within the context of wars. We will look for statements that link him to specific battles or wars and check if he was awarded in any of those conflicts.

A possible SPARQL query could be:

```sparql
SELECT ?warLabel ?award WHERE {
  ?n Zervas a nlp:Person ;
            foaf:name ""Napoleon Zervas"" ;
            rdfs:label ""Ναπολέων Ζεβρέας""@gr ;
            owl:sameAs <http://dbpedia.org/ontology/Person> .
  ?war a nlp:War ;
         nlp:conflict ""30"" .
  ?n participatedIn ?war .
  OPTIONAL { ?war rdfs:label ?warLabel . }
  OPTIONAL { ?war ns:award ?award . }
}
```

This query looks for a person named Napoleon Zervas and finds the wars he participated in. It then checks if any of these wars have an associated award label.",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?person ?award ?band
WHERE {
  ?person a :MusicalArtist ;
            :birthName ?birthName ;
            :origin ?origin .
  ?origin a :Place ;
            :name ?awardName ;
            :country ""United States"" ;
            :state ""New York"" .
  ?band a :Band ;
         :origin ?origin .
}",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"Given the constraints and the lack of explicit data, a direct SPARQL query might not yield the exact answer without additional context or data. However, assuming there's a dataset that links bands and their members, a hypothetical query could look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist WHERE {
  ?james_plotkin a dbpedia:Musician ;
                    dbpedia:band_members some [a dbpedia:BandMember ;
                                        dbpedia:band dbpedia:Human_Remains]
  .
  ?human_remains a dbpedia:Band ;
                 dbpedia:members some ?member .
  ?member a dbpedia:Musician ;
           dbpedia:associated_artist ?associated_artist .
}
```

This query attempts to find musicians associated with bands that include James Plotkin as a member, specifically looking for those who are also members of Human Remains.",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"The SPARQL query will use the DBpedia ontology to find the birth places of Yamaza Enjirō, Toyotomi Hidenaga, and Hashiba Hidekatsu, and then check for common birth places. Here's how we can structure the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""ja"")  # Assuming we are looking for Japanese names
}
```

This query will return the birth places of Yamaza Enjirō, Toyotomi Hidenaga, and Hashiba Hidekatsu. We then need to check if there is any common birth place among them.",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","SELECT ?commander
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:partOfEvent dbpedia:Event ;
            dbpedia:commander ?commander .
  ?battle rdfs:label ""Battle of Fort Royal"" .
  ?figure a dbpedia:Person ;
           dbpedia:hasMilitaryForce ?military_force .
  ?military_force a dbpedia:MilitaryForce ;
               dbpedia:commander ?commander .
  ?figure rdfs:label ""The Triple X's"" .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player ?team 
WHERE {
    ?player a dbo:SoccerPlayer ;
            dbo:birthDate ""1977-02-22"" .
    ?player a dbo:SoccerManager .
    ?player rdfs:label ?team
}
```

This query selects players who are also managers, born on February 22, 1977, and retrieves their team labels.

Next, we need to find athletes born on February 22, 1955. We'll adjust the query accordingly:",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"SELECT ?administrationPeriod WHERE {
  ?monarch ""Christian IX of Denmark"" nao:adminStartYear ?administrationPeriod .
  ?monarch ""Olaf I of Denmark"" nao:adminStartYear ?administrationPeriod
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"The SPARQL query to retrieve this information from DBpedia would involve using the properties related to the event and the war. We can use the `event` property to link the specific event (Pickett's Charge) to the broader conflict (the American Civil War).

```sparql
SELECT ?war WHERE {
  ?charge a dbpedia-owl:HistoricalEvent ;
    dbpedia-owl:eventType dbpedia:Picketts_Charge ;
    dbpedia:involvedInConflict ?war .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","SELECT ?parent WHERE {
  ?actor rdf:type dbpedia:Actor .
  ?movie dbpprop:mainCharacter ?actor .
  ?actor rdfs:label ""Photographer and actor"" .
  ?parent a dbpedia:Person ;
           dbpprop:parentOf ?actor
} UNION {
  SELECT ?parent WHERE {
    ?model rdfs:label ""Doon Arbus"" .
    ?parent a dbpedia:Person ;
             dbpprop:parentOf ?model
  }
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:starredSaul_Goodman .
  ?movie dbpedia:featuresActor ?actor .
  ?actor rdfs:agent ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Amy Arbus"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"SELECT ?parent ?royalty WHERE {
  ?person a dbpedia-owl:Royalty ;
            dbpedia-owl:father ?parent .
  ?person rdfs:label ""Isabella of Austria""@en .
  ?person ns:childOfEvent <http://dbpedia.org/ontology/Siege> .
  ?event a dbpedia-owl:Siege;
           dbpedia-owl:endTime ""1509-04-29""^^xsd:date
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"SELECT ?war WHERE {
  ?recipient ns:medalOfHonor ""Medal of Honor"" .
  ?recipient rdfs:label ""Henry Clay Lewis"" .
  ?recipient foaf:birthPlace ?place .
  ?place a :Settlement .
  ?place rdfs:label ""Louisville, Kentucky"" .
  FILTER (lang(?place) = ""en"")  # Ensure the place is in English
}",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?child a dbpedia:Person;
  dbpedia:hasParent ?parent;
  [ dbpedia:isPartOf dbpedia:RoyalFamily ].
  ?child rdfs:label ""Princess Muna al-Hussein"" .
  ?child rdfs:label ""Princess Sara bint Faisal"" .
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","SELECT ?musician ?artist WHERE {
  ?musician a dbpedia-owl:Musician .
  ?musician foaf:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?musician rdfs:label ?name .
  ?artist a dbpedia-owl:MusicalArtist .
  ?musician rdfs:seeAlso ?artist .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","SELECT ?film WHERE {
  ?film a :movie .
  ?film star :Audrey_Hepburn .
  FILTER (?film = ""Roman Holiday"")
}",1,3,2,1,1,2,3,28,0,0,15,0,0.0,0
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","SELECT ?party_member
WHERE {
  ?location geo:locatedIn dbpedia-owl:Central_Louisiana .
  ?ruling_party rdfs:label ?party_label .
  ?current_ruling_political_party rdfs:member ?party_member .
  ?current_ruling_political_party p:POLITICAL_PARTY_OF ?location
}
AND {
  ?tisha_sterling dbpedia:hasParent ?parent .
  ?parent foaf:name ?parent_name .
  ?roger_pryor foaf:sparqlEndpoint ?sparql_endpoint .
  ?parent rdfs:label ?parent_label .
  ?parent_label strmatch ""Roger Pryor"" .
}
ORDER BY DESC(?party_member)",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"To retrieve this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?producer1 ?movie1 WHERE {
  ?actor dbo:roleInFilm dbpedia-owl:High_Society_Blues .
  ?movie1 a dbpedia-owl:Movie ;
            dbpedia-owl:mainActor ?actor .
  ?producer1 dbpedia-owl:producedFilm ?movie1
}
```

This query first finds the actor who starred in ""High Society Blues"", then identifies the movie in which this actor was the main character, and finally retrieves the producer of that movie.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"The SPARQL query will need to:
1. Identify the film ""Million Dollar Baby"" (1937) produced by Nat Levine.
2. Extract the main actors from this film.
3. Find the spouse of the actor who played the male lead in this film.

Here is the corresponding SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?actorSpouse
WHERE {
  ?film rdf:type dbo:Film;
    dbo:producer dbo:Person ;
    dbo:name ""Million Dollar Baby"";
    dbo:releaseDate ""1937-01-01"" .
  
  ?actor rdf:type dbo:Actor;
    rdf:subject <http://dbpedia.org/resource/Name_of_the_actor_from_Million_Dollar_Baby/> .
  
  ?actor dbo:spouse ?actorSpouse
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"SELECT ?spouse
WHERE {
  ?author a dbpedia-owl:OfficeHolder ;
            dbpedia2:isAuthorOf <http://example.com/Back_to_Work> .
  ?author a dbpedia-owl:Politician ;
            rdfs:label ?authorLabel .
  ?author foaf:marriedTo ?spouse .
  ?author rdfs:label ""An Invitation to the White House"" .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"SELECT ?actor WHERE {
  ?actor rdfs:label ""The Golden Master""@en .
  ?actor dbpprop:appearedInMovie ""Mystic River"" .
  ?movieDirector dbpprop:directedBy ""Clint Eastwood"" .
}",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","SELECT ?father_name WHERE {
  ?politician Arthur Stanley.
  ?politician father ?father_name.
  ?earl_of_derby Frederick Stanley, 16th Earl of Derby.
  ?child_of_earl_of_derby a child .
  ?child_of_earl_of_derby parent ?father_name
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"SELECT ?child WHERE {
  ?parent a dbpedia:Person ;
            dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
            dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
             dbpedia:isKing true .
  ?child a dbpedia:Person;
           dbpedia:childOf ?parent .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"SELECT ?spouse
WHERE {
  ?child a dbpedia:Royalty;
         dbpedia2:parent [ dbpedia2:givenName ""Princess Antoinette"" ] .
  ?child dbpedia:hasSpouse ?spouse .
}",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","SELECT ?band
WHERE {
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:label ""Robert Lamar Thompson"" .
  ?person foaf:name ""Robert Lamar Thompson"" .
  ?person dbpprop:band ?band .
  ?band a dbpedia:Band
}",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person WHERE {
  ?person a dbppro:Person ;
            dbppro:occupation ?occupation .
  ?occupation rdfs:label ""Your Specific Profession"" .
}",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child father ?philip_I_of_castile
}",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"SELECT ?place WHERE {
  ?person1 a dbpedia-owl:Person.
  ?person1 rdfs:label ""Antonios Varthalitis""@en.
  ?person1 dbo:deathPlace ?dpl1 .
  ?person2 a dbpedia-owl:Person.
  ?person2 rdfs:label ""Konstantinos Ventiris""@en.
  ?person2 dbo:deathPlace ?dpl2 .
  ?dpl1 rdf:type dbpedia-owl:Settlement .
  ?dpl2 rdf:type dbpedia-owl:Settlement
}
ORDER BY ?dpl1",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","SELECT ?actor ?team ?athlete WHERE {
    ?actor a dbpedia:Actor; dbpprop:role dbpedia:football_player .
    ?actor dbpprop:playsFor dbpedia:Manchester_City_F.C. .
    ?actor a dbpedia:SportPerson; dbpprop:sport ""Football"" .
    ?team rdfs:label ""Valencia CF""@es .
    ?athlete a dbpedia:Athlete; dbpprop:birthday ""1955-02-22"" .
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?tenant ?office_of_commander WHERE {
  ?politician a dbo:OfficeHolder; dbo:role dbo:Politician .
  ?politician dbo:residence ?tenant .
  ?commander a dbo:OfficeHolder; dbo:role dbo:Commander .
  ?conflict a dbo:MilitaryConflict .
  ?conflict rdfs:label ""Portuguese Civil War"" .
  ?force a dbo:MilitaryForce .
  ?politician dbo:participatedIn ?conflict .
  ?commander dbo:participatedIn ?conflict .
  ?politician dbo:officeHolder ?office_of_commander
}",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"SELECT ?musicalArtist WHERE {
  ?band dbpedia:name ""Simple Minds"" .
  ?band rdfs:member ?musicalArtist
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"The SPARQL query will involve querying the DBpedia dataset for information about Roy Barreras and filtering it to find details related to his team or club in Colombia. Here's how the query might look:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity WHERE {
  ?person a foaf:Person;
    dbpprop:birthDate ""1969-10-01"";
    dbpprop:nationality ""Colombian"" .
  ?person rdfs:seeAlso <http://dbpedia.org/page/Roy_Barrera> .
  ?team a dbpprop:FootballClub ;
        dbpprop:basedInCountry ""Colombia"" .
  ?person dbpprop:memberOf ?team .
}
```

This query looks for a person named Roy Barreras born on October 1, 1969, who is of Colombian nationality. It then finds the football club (`?team`) that this person (`?person`) is a member of, ensuring that the club is based in Colombia.",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","SELECT ?parent WHERE {
  ?person1 a :Person;
    :name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"";
    :father ?father1 .
  ?person2 a :Person;
    :name ""Hon. Mary Frances Bowes-Lyon"";
    :father ?father2 .
  ?father1 ns:familyMember ?father2 .
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","SELECT ?artist WHERE {
  ?person a dbpedia:Musician;
    dbpprop:bandMemberOf dbpedia:Eric_Clapton .
  ?person rdfs:label ""Nicholas Michael Curran"" .
  ?person foaf:musicalArtistOf ?artist .
  ?artist a dbpedia:Musician;
    dbpprop:bandMemberOf dbpedia:The_Fabulous_Thunderbirds
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","SELECT ?parent WHERE {
    ?person a dbpedia-owl:Person;
        dbpedia-owl:hasFather ?parent .
    ?person rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","SELECT ?person
WHERE {
    ?person a :athlete .
    ?person a :soccerPlayer .
    ?person a :sportsManager .
    ?person a :soccerManager .
    ?person rdfs:label ""1981-12-01""^^xsd:date .
    ?person rdfs:label ""Hong Kong C Team"" . 
}",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","SELECT ?leader WHERE {
  ?party psoe .
  ?party foaf:member ?leader .
  ?leader rdf:type foaf:Person .
  ?election galicianElection 2009 .
  ?leader rdfs:label ""Name of the Leader""@es
}",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"SELECT ?author
WHERE {
  ?work ""The First Glove"" .
  ?work rdfs:author ?author .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?battle rdf:type dbpedia-owl:BattleEvent.
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"" .
  ?militaryForce1 a dbpedia:MilitaryForce; dbpedia:partOf ?battle .
  
  ?william_bayne a dbo:Person;
    dbpprop:navy_officer ;
    rdfs:label ""William Bayne"" .
  
  ?war a dbpedia:Event.
  ?william_bayne dbpprop:participatedIn ?war .
  ?war dbpprop:military_force ?militaryForce2 .
}",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?profession
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:occupation ?profession .
  ?person rdfs:label ""Shatrughan Sinha""@en .
}",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?awardee_name ?awardee_birthplace WHERE {
  ?awardee_name a s:Person;
    ns:award ""Sangeet Natak Akademi Fellowship"";
    ns:birthPlace ?awardee_birthplace
}

AND
?awardee_name IN ( ?patil )
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"The SPARQL query will involve querying the DBpedia dataset for individuals who have both `foaf:role` properties indicating they are `soccerPlayer` and `soccerManager`, and whose `dbo:birthdate` matches Marcelo Sarmiento's date of birth (`1990-03-22`). Once such a person is found, we will retrieve their `team`.",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"SELECT ?person
WHERE {
  ?person ns:name ?name .
  ?person rdfs:type [ rdf:_* [""artist""] ] .
  ?person rdfs:type [ rdf:_* [""musical artist""] ] .
  ?person dbpprop:birthPlace ""London"" .
}",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"SELECT ?band_name WHERE {
  ?artistName a dbpedia-owl:Musician.
  ?artistName rdfs:label ""Nick Curran""@en.
  ?bandMember a dbpedia-owl:BandMember.
  ?bandMember a foaf:Person.
  ?bandMember rdfs:label ""Eric Clapton""@en.
  ?band a dbpedia-owl:MusicGroup.
  ?bandMember rdf:type ?band.
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?party WHERE {
  ?father rdf:type dbpedia-owl:Politician .
  ?mother rdf:type dbpedia-owl:Person .
  ?Sofia_Petro rdfs:child[1] ?father .
  ?Daniel_Elahi_Galan ns:country ""Colombia"" .
  ?father foaf:name ""Sofía Petro's father"" .
  ?party rdfs:label ?partyLabel .
  ?father pfo:member ?party
}",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"The SPARQL query will need to:
1. Retrieve movies featuring Iliza Shlesinger (`:movie` with `:actor` of `iliza shlesinger`).
2. Filter those movies to only include ones directed by Janusz Kamiński (`:director` of `janusz kamiński`).
3. Check if the actor in these movies is married to Janusz Kamiński (`:actor` and `:spouse` of `janusz kamiński`).

Here's the SPARQL query:

```sparql
SELECT ?actor 
WHERE {
  ?movie a :film; 
  :actor iliza shlesinger .
  ?movie :director janusz kamiński .
  ?actor :spouse janusz kamiński .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce WHERE {
  ?wBayne a dbpedia:RoyalNavyOfficer; dbpedia:conflict Napoleonic_Wars.
  ?rCalder a dbpedia:MilitaryPerson; dbpedia:conflict ""American Revolutionary War"".
  ?militaryForce a dbpedia:MilitaryForce; dbpedia:event ?conflict
  FILTER (?conflict IN [""Napoleonic Wars"", ""American Revolutionary War""])
}",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?warLabel ?warDescription WHERE {
  ?war a dbpedia-owl:War .
  ?war rdfs:label ?warLabel .
  ?war description ?warDescription .
  ?war ns:hasParticipant [ a owl:NamedIndividual; foaf:name ""Konstantinos Ventiris"" ] .
  ?war ns:hasParticipant [ a owl:NamedIndividual; foaf:name ""Napoleon Zervas"" ] .
}",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","SELECT ?parent WHERE {
  ?awardee rdf:type nao:Person.
  ?awardee rdfs:label ""Commander of the Royal Victorian Order"".
  ?awardee a ns:ukontents#Politician.
  ?awardee ns:hasChild ?child.
  ?child rdfs:label ""Frederick Stanley, 16th Earl of Derby"".
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor WHERE {
  ?actor a :Actor .
  ?actor rdfs:label ""Richard E. Grant"" .
  ?actor ns:film ""Ab Kya Hoga"" .
  ?actor a :TelevisionShowActor .
  ?actor a :Politician
}",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","SELECT ?person ?role ?administration WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1824-04-22"" .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"") .
  ?person dbpedia:role dbpedia:Title ""Duke of Schleswig"" .
  ?person dbpedia:administration ?admin
}",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","SELECT ?father
WHERE {
  ?child a dbpedia-owl:Child ;
            dbpedia:parent [ dbpedia:hasName ""Ferdinand II, Holy Roman Emperor"" ] ;
            dbpedia:father ?father .
  ?child dbpedia:name ""Ferdinand Maximilian Joseph"" .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
           rdfs:label ""Charles V, Holy Roman Emperor"" .
  ?person rdfs:label ""Isabella of Austria"" .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","SELECT ?university_name ?founding_date WHERE {
  ?politician a :POLITICIAN.
  ?politician rdfs:label ""Eleonora Menicucci de Oliveira""@pt.
  ?politician edu:almaMater ?university .
  ?university a :UNIVERSITY.
  ?university foaf:founder ?founding_date .
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"SELECT ?person
WHERE {
  ?person a :Person ;
            :nativePlace ""Jamshedpur, India"" .
  ?person a :Person ;
            :nativePlace ""India"" .
}",2,2,3,1,2,2,2,9,0,0,21,0,0.0,0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"SELECT ?bandMember WHERE {
  ?artist a dbpedia:Musician;
    dbpedia:genre ""Pop music"";
    dbpedia:birthPlace ""Bulgaria"".
  ?artist rdfs:label ""Emilia (singer)"".
  ?artist foaf:knows ?collaborator .
  ?collaborator a dbpedia:Musician;
    dbpedia:role ""Jamie T""
}",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","SELECT ?fortName ?fortStrength
WHERE {
  ?fortName a dbpedia-owl:Fortification ;
            dbpprop:locatedIn <geo:Charleston_South_Carolina>.
  ?fortName rdfs:label ?fortLabel .
  ?fortStrength rdfs:literalValue ""force"" .
  ?fortLabel STRING-MATCH ""Quincy Adams Gillmore""
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"The SPARQL query will involve using the `foaf:associatedWith` property twice. Here's how it can be structured:

```sparql
SELECT ?secondArtist
WHERE {
  ?firstArtist a music:Album .
  ?firstArtist foaf:associatedWith ?associatedArtist1 .
  ?associatedArtist1 foaf:associatedWith ?secondArtist
}
```

This query starts by selecting the `?secondArtist` (the final associated artist). It then navigates through the relationship from James Plotkin's album (`music:Album`) to his associated artist (`?associatedArtist1`), and finally from that artist to their associated artist (`?secondArtist`).",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","SELECT ?person
WHERE {
    ?person a dbpedia-owl:SoccerPlayer .
    ?person a dbpedia-owl:SoccerManager .
    ?person birthDate ""1979-11-03""^^xsd:date .
    ?person a dbpedia-owl:Athlete .
    FILTER (STRFTIME(""ISO"", ?person_birth_date) = ""1955-02-22"")
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"The SPARQL query will involve querying DBpedia for individuals who have been tagged with the role of actor in the movie ""All or Nothing: Manchester City"" and then checking if these individuals have the properties `sport.soccerPlayer` and/or `sport.athlete`. Here's how the query might look:

```sparql
SELECT ?actor
WHERE {
  ?actor dbpprop:role ""actor"" IN [dbpedia-owl:film ""All or Nothing: Manchester City""] .
  ?actor a dbpprop:SportPerson .
  ?actor rdfs:label ?actorLabel .
  ?actor ns:sportSchemes/ns:sport ""soccer"" .
  ?actor ns:sportSchemes/ns:sport ""athlete"" .
}
```

This query does the following:
- Selects individuals (`?actor`) who have the role of ""actor"" in the movie ""All or Nothing: Manchester City"".
- Checks if these individuals are classified as a `SportPerson` (which includes athletes and sports players).
- Adds conditions to check if they are labeled with the labels ""soccer player"" and ""athlete"".",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"SELECT ?awardee
WHERE {
  ?award rdf:type dbpedia-owl:Award .
  ?award rdfs:label ""Rodney Lees Award"" .
  ?awardee dbpprop:recipientOf ?award
}",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"SELECT ?work WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasAuthor ?author .
  ?author rdfs:label ""Cora Sue Collins"" .
  ?work rdfs:label ?title .
  ?work dbpedia-owl:isWorkOf ?author
} LIMIT 1",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"SELECT ?child WHERE {
  ?parent a ns:Person ;
            ns:p father ?parent_father ;
            ns:m ?child .
  ?parent_father ns:givenName ""Roger"" .
  ?child ns:givenName ""William"" .
}",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child WHERE {
  ?child a ns:people.person .
  ?child rdfs:father ns:people_person#Peter_IV_of_Aragon .
  ?child ns:birthPlace ""Aragón, Kingdom of"" .
  OPTIONAL { ?child ns:microformat-person-title ?royaltyTitle }
  FILTER (lang(?royaltyTitle) = ""en"")  # Assuming titles are in English
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"SELECT ?spouse ?producer
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:hasSpouse ?spouse .
  ?movie a dbpedia-owl:Film;
    dbpedia2:producer ?producer ;
    rdfs:label ""12 Strong""@en .
}
LIMIT 1",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"The SPARQL query will need to:
1. Identify the `children` of `Béla IV of Hungary`.
2. Filter those children to only include those with a `royalty` status.

Assuming that there is a property in DBpedia for royalty and a property linking individuals to their parents, the query might look something like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty ;
           dbpedia-owl:hasParent ?parent .
  ?parent a dbpedia-owl:Person ;
          rdf:type dbpedia:Patriarch_of_Hungary ;
          rdfs:label ""Béla IV of Hungary"" .
}
```

This query selects all `?child` resources that are classified as `Royalty` and have a parent (`?parent`) which is labeled as ""Béla IV of Hungary"".",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?person ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia2:hasBirthPlace ?birthPlace .
  ?birthPlace a dbpedia-owl:Place .
  ?person rdfs:label ""Vince Gilligan""@en .
  ?person rdfs:label ""Heidi Ewing""@en .
  ?person rdfs:label ""Glenn Youngkin""@en
}
ORDER BY ?birthPlace",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","To find this information, we need to:
1. Identify the actor from ""ATL (film)""
2. Find any movies they have acted in alongside the specified actress.
3. Check if one of those movies is ""The Golden Master"".

Given that ""ATL (film)"" stars Justin Timberlake and the actress in question is likely Jessica Biel (based on common pairings), we can construct a SPARQL query to find relevant data.",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"SELECT ?theme WHERE {
  ?song a dbpedia-owl:MusicSingle.
  ?song rdfs:label ""Dikhawa"".
  ?song dbpprop:lyricist ?lyricist.
  ?lyricist foaf:givenName ""Azeem"".
  ?song dbpprop:nativePlace ""Lahore"".
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"SELECT ?entity WHERE {
  ?entity a dbpedia-owl:Person .
  ?entity foaf:birthplace ?birthplace .
  ?birthplace geo:location [ geo:timeZone ""Etc/GMT+9"" ] .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?militaryForce WHERE {
  ?event rdfs:label ""French campaign in Egypt and Syria"" .
  ?event a :MilitaryEvent .
  ?societalEvent rdfs:label ""Robert Calder"" .
  ?societalEvent a :SocietalEvent .
  ?calder rdf:subject ?militaryForce .
  ?militaryForce a :MilitaryForce
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?entityLabel ?warName ?description WHERE {
  ?entity a dbpedia-owl:War .
  ?entityLabel rdfs:label ""Konstantinos Ventiris"" .
  ?entityLabel rdfs:label ""leader of National Party of Greece"" .
  ?entity warDescription ?description
}",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"SELECT ?bandMember WHERE {
  ?project a dbpedia-owl:MusicProject ;
            dbpedia-owl:hasBandMember ?bandMember .
  ?bandMember a dbpedia:Person ;
             dbpedia:hasName ""Stuart Tosh"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","SELECT ?person
WHERE {
  ?person a :commander_in_the_thirty_years_war .
  ?person rdfs:father ?grandparent .
  ?grandparent rdfs:child :ferdinand_ii_holy_roman_emperor .
  ?grandparent rdfs:child :eleonore_of_austria .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","SELECT ?party WHERE {
  ?person a dbpedia:Politician;
  dbpedia:P31 wd:Q10898 (Roy Leonardo Barreras Montealegre);
  dbpedia:P31 wd:Q10497 (Gustavo Petro)
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"SELECT ?subject ?property ?object
WHERE {
  ?subject a :MilitaryForce .
  ?subject rdfs:label ""French Navy"" .
  ?subject ns:partOfEvent ?event .
  ?event a :SocietalEvent .
  ?event ns:hasCombatant ?combatant .
  ?combatant a :MilitaryForce;
           rdfs:label ""British Royal Navy"" .
  ?event ns:ledBy ?commander .
  ?commander a :Person;
            rdfs:label ""Robert Calder"" .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"SELECT ?royalty_grandchild WHERE {
    ?predecessor KingOf <http://dbpedia.org/ontology/monarchyType> ?kingdom .
    ?kingdom rdfs:label ""King of Hungary"" .
    ?child a dbpedia-owl:ChildOf ?predecessor .
    ?child rdfs:label ""royalty"" .
    ?grandchild a dbpedia-owl:ChildOf ?child .
    ?grandchild rdfs:label ""royalty""
}",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"The SPARQL query will involve querying the DBpedia dataset for the artist or band related to the album ""Sappy"", and then retrieving the band members of that artist or band. Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?album rdf:type dbpedia-owl:Album .
  ?album rdfs:label ""Sappy"" .
  ?writer dbpedia-owl:hasWriter ?artist .
  ?artist a dbpedia-owl:MusicArtist .
  ?artist dbpedia-owl:members ?bandMembers .
}
```

This query does the following:
1. Selects the band member (`?bandMember`) of the artist (`?artist`) who wrote the album (`?album`) titled ""Sappy"".
2. Ensures that `?album` is an instance of `dbpedia-owl:Album`.
3. Ensures that `?album` has a label of ""Sappy"".
4. Connects the writer to the artist through the relationship `dbpedia-owl:hasWriter`.
5. Asserts that the artist (`?artist`) is a `dbpedia-owl:MusicArtist`.
6. Retrieves the members (`?bandMembers`) of the artist.",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"To achieve this, we can use the following SPARQL queries:

For Scott LaFaro:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthplace WHERE {
  ?person dbpedia:name ""Scott LaFaro"" .
  ?person dbpedia:birthPlace ?birthplace
}
```

For Lauryn Hill's writer (artist):
1. First, identify the artist of ""The Miseducation of Lauryn Hill"":
```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?album WHERE {
  ?album rdf:type dbpedia:Album .
  ?album rdfs:artist ?artist .
  ?artist rdfs:name ""The Miseducation of Lauryn Hill""
}
```

2. Once the artist is identified, retrieve their birthplace:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthplace WHERE {
  ?artist dbpedia:name ""Artist Name"" . # Replace ""Artist Name"" with the actual name retrieved from the previous query
  ?artist dbpedia:birthPlace ?birthplace
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?subject ?property ?value
WHERE {
  ?subject a ns:navyofficer .
  ?subject rdfs:label ""William Tennant""@en .
  ?subject ns:rank ""Captain""@en .
  ?subject ns:militaryConflict ""Sinking of Prince of Wales and Repulse"" .
  ?subject ns:commanderOf ?vessel .
  ?vessel a ns:vessel; rdfs:label ""Prince of Wales""@en .
  ?vessel ns:status ""sunk""@en
}
ORDER BY ?property",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?birthPlace
WHERE {
  ?person a dbpedia-owl:Person ;
           dbpedia2:hasOccupation dbpedia:Cartoonist ;
           foaf:name ""Cece Bell"" .
  ?person dbpedia2:birthPlace ?birthPlace .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?spouse
WHERE {
  ?author a :politician , :office_holder .
  ?author ns:name ""Hillary Clinton"" .
  ?book a :written_work .
  ?book ns:title ""Living History"" .
  ?author ns:author_of ?book .
  ?author ns:sibling ?spouse .
  ?spouse a :person .
  OPTIONAL { ?spouse ns:familyRelation ""spouse of"" ?author }
  FILTER ( ?author ns:role ""Secretary of State"" ) .
  ?author ns:serveInMilitaryBranch ""United States Navy"" .
}",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Actor .
  ?person dbpprop:hasProfession dbpedia:Doctor
}",2,2,3,1,2,2,3,28,0,0,4210,0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?band_member1 ?band_member2 WHERE {
  ?artist1 a dbpedia:Musician;
    dbpedia:genre ""Hip hop"";
    dbpedia:birth_name ?birth_name;
    dbpedia:origin dbpedia:New_York_States;
    rdfs:label ""Uncle Murda""@en
  ?band_member1 a dbpedia:BandMember;
    dbpedia:member ?artist1
  ?artist2 a dbpedia:Musician;
    dbpedia:birth_name ?birth_name;
    dbpedia:origin dbpedia:New_York_States;
    rdfs:label ""Bobby Shmurda""@en
  ?band_member2 a dbpedia:BandMember;
    dbpedia:member ?artist2
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"SELECT ?war WHERE {
  ?recipient a dbpedia-owl:Person.
  ?recipient rdfs:receivesAward [ a owl:NamedIndividual; rdf:type owl:Award; rdfs:label ""United States Congress Award"" ].
  ?recipient foaf:name ?name .
  ?war a dbpedia-owl:WarConflict.
  ?recipient rdf:partOf ?war .
  ?war rdfs:label ?war_label
}
LIMIT 1",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?commander WHERE {
    ?regiment rdf:type :Regiment.
    ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"".
    ?battle a :Battle.
    ?battle rdfs:label ""Battle of Fort Royal"".
    ?commander ns:commanderOf ?battle .
    ?calder a :Person.
    ?calder ns:participatedIn ?battle .
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Person ;
           rdfs:label ""Caroline Louise Bevan Symonds""@en .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?commander ?author ?spouse_political_office
WHERE {
  ?work a book.
  ?author foaf:spouse ?spouse .
  ?author rdfs:label ""Bill Clinton""@en .
  ?work rdfs:author ?author .
  ?spouse a person.
  ?spouse officeHolder .
  ?spouse politicalOffice ""U.S. Senator from New York""@en .
  ?commander rdfs:label ""Joseph W. Prueher""@en .
  ?work dc:creator ?author
}
ORDER BY ?author",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?parent WHERE {
  ?person a dbpedia-owl:Person ;
            dbpedia-owl:hasParent ?parent .
  ?person rdfs:label ""Archduchess Margarete Sophie of Austria"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"The SPARQL query to retrieve this information from DBpedia would be:

```
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1918-10-11"";
    dbpedia:birthPlace ""Los Angeles, California, USA"".
  FILTER (lang(?name) = ""en"")  # Filter for English names
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?actor ?producer WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor foaf:role ""Jeff Conaway"" .
  ?film rdfs:label ""Grease""@en .
  ?producer rdfs:label ""David O. Selznick""@en .
  ?film dc:director ""William A. Wellman"" .
  ?film dc:producer ?producer
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"SELECT ?character WHERE {
  ?character a ns:ComicBookCharacter .
  ?character alterEgo ""Walter B. Gibson"" .
  ?character fictionalCharacter TRUE
}",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"To construct a SPARQL query, we need to identify the appropriate resources and properties in DBpedia that relate to these individuals and their awards. Assuming Vince Gilligan's most notable award is related to ""Breaking Bad,"" we can search for this show and its creators. For Glenn Youngkin, we will look for his political career details.

Here's a SPARQL query that attempts to find the birth places:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith [ dbpedia:award ""Vince Gilligan Award"" ] .
  ?person2 a dbpedia:Person;
    dbpedia:awardedWith [ dbpedia:award ""Glenn Youngkin Award"" ] .
  ?person foaf:givenName ""Vince"";
    dbo:birthPlace ?birthPlace1 .
  ?person2 foaf:givenName ""Glenn"";
    dbo:birthPlace ?birthPlace2 .
}
```

This query looks for individuals named Vince and Glenn who have been awarded with the Vince Gilligan Award and the Glenn Youngkin Award respectively, and then retrieves their birth places.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","SELECT ?parent WHERE {
  ?person a :Person ;
            :name ""Mary Frances Bowes-Lyon"" ;
            :birthDate ""1908-11-10"" ;
            :parents ?parent .
}
LIMIT 1",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?militaryForce1 ?conflict1 WHERE {
  ?awardee knightCommanderOfTheOrderOfTheBath.
  ?awardee rdfs:label ?awardeeLabel.
  ?conflict1 a dbpedia-owl:MilitaryConflict.
  ?awardee rdfs:seeAlso ?conflictDetails.
  ?conflictDetails dbpedia:Preamble ""Knight Commander of the Order of the Bath"".
  ?militaryForce1 a dbpedia:MilitaryForce.
  ?conflict1 rdf:type ?conflictType.
  ?militaryForce1 rdf:type ?militaryForceType WHERE {
    ?awardeeLabel = ""William Bayne""
  }
}",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"SELECT ?person
WHERE {
  ?person a :Person ;
            dcterms.deceasedAt [ owl:propertyValue ""Melbourne"" ] ;
            dbpprop.predecessorOf Ada_Watson .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child ?parent WHERE {
  ?child a ns:royalty.
  ?child ns:father ?parent .
  ?parent a ns:monarch .
  ?parent ns:name ""Charles VI"" .
  FILTER (xsd:date(?child) = ""1707-01-01T00:00:00Z"")
}",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","To find the athlete born on 1955-02-22:
```sparql
SELECT ?player WHERE { ?player dbpprop:birthDate ""1955-02-22"" } .
```

To find teams with both a soccer player and a soccer manager born on 1955-02-22, we need to:
1. Identify soccer players born on 1955-02-22.
2. Identify soccer managers born on 1955-02-22.
3. Find the team they are associated with.

Assuming Marcelo Sarmiento is one of those individuals (as his birthday is given), we can use his information to link teams:

```sparql
PREFIX dbpprop: <http://dbpedia.org/property/>

# Find soccer players born on 1955-02-22
SELECT ?player WHERE { ?player a dbpprop:SoccerPlayer ; dbpprop:birthDate ""1955-02-22"" } .

# Find soccer managers born on 1955-02-22
SELECT ?manager WHERE { ?manager a dbpprop:SoccerManager ; dbpprop:birthDate ""1955-02-22"" } .

# Assume Marcelo Sarmiento is one of these players or managers
?marcelo a dbpprop:SoccerPlayer ; dbpprop:birthDate ""1955-02-22"" .
?marcelo a dbpprop:SoccerManager ; dbpprop:birthDate ""1955-02-22"" .

# Find the team they are associated with
SELECT ?team WHERE {
  ?player dbpprop:playsFor ?team .
  ?manager dbpprop:managesTeam ?team
} .
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","SELECT ?child
WHERE {
  ?child a ns:people.person .
  ?child ns:father ns:PersonPredicate2(""Ferdinand II, Holy Roman Emperor"") .
  ?child ns:militaryRole ns:MilitaryRolePredicate3(""commander in Thirty Years' War"")
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","To find this information, we need to:
1. Identify the commander of the Siege of Padua.
2. Search for children of this commander who were royalty.
3. Confirm their parentage as described.

Given that DBpedia provides structured data about historical figures and events, a SPARQL query can be constructed to extract this information. However, without direct access to DBpedia's endpoint, I'll outline the query structure:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?commander a dbpedia-owl:Commander ;
               dbpedia-owl:participatedInBattle ""Siege of Padua"" .
  ?child a dbpedia-owl:Royalty ;
          dbpedia-owl:hasParent ?commander .
  ?child rdf:type dbpedia-owl:Person ;
          dbpedia-owl:hasChild ?catherine;
          dbpedia-owl:hasChild ?isabella .
}
```

This query looks for:
- `?commander` who is a `Commander` and participated in the `Siege of Padua`.
- `?child` who is a `Royalty` and has `?commander` as a parent.
- Ensuring that `?child` also has children `?catherine` and `?isabella`, which are known to be Catherine of Austria and Isabella of Austria respectively.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"SELECT ?office WHERE { ?person a dbo:OfficeHolder; rdfs:label ""Alberto Núñez Feijóo"" . }
PREFIX dbo: <http://dbpedia.org/ontology/>

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?building a dbo:Building ;
            dbo:locatedIn ""Santiago de Compostela"" .
  ?building dbo:tenants ?tenant .
}
LIMIT 2",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?birthplace WHERE {
  ?person a ns:Person ;
            foaf:name ""Henry Clay Lewis"" .
  ?birthplace a ns:Place ;
             rdfs:label ?birthplace_label .
  ?birthplace geo:location ?birthplace_geo .
  FILTER (lang(?birthplace_label) = ""en"") .
  ?awardee a ns:Person ;
            foaf:name ?awardee_name .
  ?award a rdf:Property ;
           rdfs:label ""Gillmore Medal"" .
  ?war a ns:Event ;
         rdfs:label ?war_label .
  ?awardee ns:P31 ?award .
  ?war ns:P31 ?tracy .
  ?birthplace ns:P31 ?awardee .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?person ?military_force WHERE {
  ?person a dbpedia:Person ;
            rdfs:label ?name .
  ?person ns:award ""Knight Commander of the Order of the Bath"" ;
           dbpedia2:military_branch ?military_branch .
  ?military_branch a dbpedia:MilitaryBranch ;
               rdfs:label ?branch_name .
  OPTIONAL { ?military_branch ns:part_of ?navy_or_army }
}
AND {
  ?event a dbpedia:Event ;
         rdfs:label ?event_label .
  ?event ns:participant ?person ;
            dbpedia2:military_force ?military_force .
  ?military_force a dbpedia:MilitaryForce ;
               rdfs:label ?force_name .
  OPTIONAL { ?military_force ns:part_of ?navy_or_army }
}
WHERE {
  ?event = ""Battle of Fort Royal""
}
ORDER BY ?person",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"The SPARQL query to retrieve this information would involve querying the DBpedia dataset for the relevant individuals associated with GS9 and their birth names. Here's how the query could be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person_name
WHERE {
  ?person a dbpedia-owl:Musician ;
            dbpedia-owl:birthName ?person_name ;
            dbpedia:originatesFrom dbpedia:Florida .
  ?person rdf:type dbpedia-owl:Artist .
  ?person a dbpedia-owl:MusicGroupMember ;
          dbpedia-owl:group dbpedia:GS9 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","To retrieve this information from DBpedia, we can use the following SPARQL queries:

1. For the actor of the ""What You Know"" music video:
```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/ontology/musicalWork> ?work ""What You Know"" .
  ?work <http://dbpedia.org/property/hasMusicVideo> ?video .
  ?video <http://dbpedia.org/ontology/performer> ?actor .
}
```

2. For the professional of the ""What You Know"" music video:
```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/ontology/musicalWork> ?work ""What You Know"" .
  ?work <http://dbpedia.org/property/hasMusicVideo> ?video .
  ?video <http://dbpedia.org/ontology/producer> ?producer .
}
```

3. For the actor of the album ""Shelby Oaks"":
```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/ontology/album> ?album ""Shelby Oaks"" .
  ?album <http://dbpedia.org/property/hasCoverArt> ?cover_artwork .
  ?cover_artwork <http://dbpedia.org/ontology/depictsPerson> ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"SELECT ?officeMiguel ?officeMariano ?tenantRuizGallardon
WHERE {
  ?person a dbpedia:OfficeHolder ;
            dbpedia2:office ?officeMiguel .
  ?person a dbpedia:OfficeHolder ;
            dbpedia2:office ?officeMariano .
  ?residence a dbpedia:Residence ;
             dbpedia2:tenant ?tenantRuizGallardon .
  ?person rdfs:label ""Miguel Maura""@en .
  ?person rdfs:label ""Mariano Rajoy""@en .
  ?person rdf:type dbo:SpanishPolitician .
  ?residence rdf:type dbo:Residence in Madrid .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"SELECT ?player
WHERE {
  ?person a dbpedia:Person;
    dbpprop:birthDate ?dob.
  OPTIONAL { ?person dbpprop:athlete ?athlete }
  FILTER (STR(?dob) = ""Marty Pollio"" )
  UNION
  {
    ?actor a dbpedia:Actor; dbpprop:role ?role .
    ?role valueString ""soccer player"" .
    OPTIONAL { ?actor dbpprop:athlete ?athlete }
  }
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?person
WHERE {
  ?person a dbpedia-owl:OfficeHolder .
  ?person a dbpedia-owl:Politician .
  ?person rdfs:label ?name .
  ?person dbpprop:conflict ""Central African Republic Civil War"" .
  FILTER (lang(?name) = ""fr"")  # Assuming the person's name is in French
}",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"SELECT ?actor
WHERE {
  ?movie a dbpedia:Movie ;
            dbpedia:director ?director .
  ?actor dbpprop:mainActorOf ?movie .
  ?director rdfs:label ""Dipankar De"" .
  ?movie rdfs:label ""Indian""
}",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor WHERE {
  ?actor rdfs:label ""Paradise (2013 film)"" .
  ?actor ns:spouse ?spouse .
  ?spouse rdfs:label ""Janusz Kamiński"" .
  ?actor rdf:type <> .
  ?actor foaf:actedWith Audrey_Hepburn .
}",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"SELECT ?actor WHERE {
  ?actor a dbpedia:Actor .
  [dbpedia:P31 dbpedia:Always (1989 film)] rdfs:label ""Always"" .
  [dbpedia:P32 ?movie] rdfs:label ""Some movie with Iliza Shlesinger"" .
  ?movie a dbpedia:Film .
  [dbpedia:actor ?actor2] rdfs:label ""Iliza Shlesinger"" .
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?child a dbpedia-owl:Royalty ;
         dbpedia2:parent [ a dbpedia2:Person; rdfs:label ""Roger III, Duke of Apulia"" ] ;
         dbpedia2:mother [ a dbpedia2:Person; rdfs:label ""Elvira of Castile"" ] ;
         dbpedia2:father [ a dbpedia2:Person; rdfs:label ""William I of Sicily"" ] .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","To find this information, we can use the following SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?partyMember WHERE {
  ?landmark dbpedia-owl:hasElevation ""20.116800000000001347"" .
  ?landmark rdfs:label ?landmarkLabel .
  ?rulingParty dbpedia:P6C8F9D7B-E0A5-4F3F-B1F2-8B5F6FBBCC4 .
  ?rulingParty rdfs:label ?rulingPartyLabel .
  ?partyMember a dbpedia:P31F9E91D-A6D7-4C6F-BE96-8B5F6FBBCC4 .
  ?partyMember foaf:name ?partyMemberName .
  FILTER (lang(?landmarkLabel) = ""en"" )  # Assuming the question is in English
}
```

This query does the following:
1. Selects landmarks with an elevation of ""20.116800000000001347"".
2. Retrieves the label of these landmarks.
3. Identifies the ruling party based on the DBpedia ID.
4. Retrieves the label of the ruling party.
5. Selects a party member associated with the identified ruling party, ensuring the information is in English.",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?artistProfession WHERE {
  ?album The Live Anthology.
  ?artist rdfs:label ?artistLabel .
  ?artist dbpprof:occupation ?artistProfession .
  FILTER (?artistLabel = ""The Live Anthology"") 
}",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"SELECT ?character
WHERE {
  ?character a dbpedia-owl:Character ;
               dbpedia2:appearsIn [ a dbpedia:Film; rdfs:label ""Basic Instinct"" ] .
  ?character rdfs:name ""Nick Curran"".
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","A SPARQL query to find the required landmark could be constructed as follows:

```sparql
SELECT ?landmark WHERE {
  ?landmark rdfs:label ?name .
  ?landmark geo:altitude ""20.116800000000001347""^^xsd:double .
  ?landmark a dbpedia-owl:Landscape ;
         dbpedia2:hasName ?name
}
```

This query selects landmarks (`?landmark`) that have a label (`?name`), an altitude of ""20.116800000000001347"" (a very specific value which might be a mistake or require clarification), and are classified as landscapes (`a dbpedia-owl:Landscape`) in DBpedia.",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"SELECT ?producer
WHERE {
  ?film a dbpedia-owl:Film;
    dbpedia-owl:productionCompany ?producer .
  ?film rdfs:label ""The Adventures of Tom Sawyer (1938 film)"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?war ?birthplace WHERE {
    ?person a dbpedia-owl:Person.
    dbpedia2:Amasa_Tracy rdfs:label ""Amasa Tracy"".
    ?person rdfs:label ?name.
    ?person dbpprop:deathDate ""1850-08-05"".
    ?person dbpprop:birthPlace ?birthplace.
    ?birthplace a dbpedia-owl:Settlement.
    ?war rdfs:label ?warName.
    ?person rdf:type dbpedia2:ParticipantInMilitaryConflict .
    ?war rdf:type dbpedia2:MilitaryConflict
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","SELECT ?alter_ego WHERE {
    ?character a rdf:Property;
        rdfs:label ""Lamont Cranston""@en .
    ?character foaf:name ""Lamont Cranston""@en .
    ?character rdfs:altLabel ?alter_ego .
    FILTER (lang(?alter_ego) = ""en"") .
    ?parent a dbo:Person ;
        dbo:father ?grandfather ;
        dbo:child ?child .
    ?child a dbo:Person ;
        rdfs:label ""Baeda Maryam I""@en .
    ?grandfather a dbo:Person ;
        dbo:name ""Dawit I""@en .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?actor ?deathPlace
WHERE {
  ?actor a ns:film.actor .
  ?actor ns:role ?roleInColorMeDead .
  ?actor ns:role ?roleInSkyRanger_1928_film .
  ?roleInColorMeDead rdfs:label ""Color Me Dead"" .
  ?roleInSkyRanger_1928_film rdfs:label ""The Sky Ranger (1928 film)"" .
  ?actor deathPlace ?deathPlace
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor WHERE {
  ?actor rdfs:label ""The Shadow""@en .
  ?actor foaf:role [ a owl:Ontology ; owl:class ""http://purl.org/dc/elements/1.1/Role"" ] .
  ?movie rdf:type mo:Film .
  ?movie mo:star ?actor .
  ?movie mo:featuringPerson [ a owl:Ontology ; owl:property ""http://dbpedia.org/ontology/performer"" ] .
  ?movie mo:director ""Tip"" .
  FILTER ( str(?movie) = ""What You Know"" )
}",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf [ a dbpedia:MusicalGroup; rdfs:label ""The Fabulous Thunderbirds"" ] .
  ?person rdf:_1 Nicholas Michael Curran.
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"Given the information above, we can construct a SPARQL query to retrieve the required data from DBpedia. Here's how we might structure it:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?admin1 ?admin2 ?territory
WHERE {
  ?person1 rdf:type dbpedia:Monarch .
  ?person1 rdfs:label ""Christian IX of Denmark"" .
  ?person2 rdf:type dbpedia:Monarch .
  ?person2 rdfs:label ""Olaf I of Denmark"" .
  ?death_place a dbpedia:SpatialThing .
  ?death_place rdfs:label ""Christian Ditlev Ammentorp Hansen"" .
  ?admin1 dbpedia:ruledOver ?death_place .
  ?admin2 dbpedia:ruledOver ?death_place .
  FILTER (NOT ( ?admin1 = ?admin2 ))
}
```

This query looks for monarchs labeled as ""Christian IX of Denmark"" and ""Olaf I of Denmark"", finds their respective administrations (`?admin1` and `?admin2`), and then checks for settlements (`?territory`) associated with the death place of Christian Ditlev Ammentorp Hansen.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","SELECT ?person
WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"A SPARQL query to retrieve this information from DBpedia would involve querying for Ada Watson and then finding the predecessor based on the relationship of ""predecessor"" or similar terms. However, since DBpedia's schema might not directly provide a straightforward property for ""predecessor,"" we may need to infer this from other properties such as ""officeHolder"" and related predicates.

Here is a conceptual SPARQL query that could be used:

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?Ada_Watson a dbpedia-owl:OfficeHolder ;
                 dbpedia-owl:office_start ""Start date of Ada Watson's role"";
  ?Ada_Watson foaf:precededBy ?predecessor .
}
```

This query assumes that there is a `dbpedia-owl:office_start` property for the start date of Ada Watson's role and a `foaf:precededBy` property indicating who preceded her. Adjustments may be needed based on the actual schema used by DBpedia.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"SELECT ?movie ?title WHERE {
  ?movie a :Film .
  :filmCreator ?person .
  :person de ""Los Angeles"" .
  FILTER (lang(?title) = ""en"")  # Assuming the title is in English
}",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?deathPlace
WHERE {
  ?person a dbpedia-owl:Person;
    dbpedia2:birthDate ""1835"";
    dbpedia2:deathDate ""1907"";
    geo:locatedIn ?location .
  ?location a dbpedia-owl:Settlement .
  ?person rdfs:label ""Antonios Varthalitis"" .
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"SELECT ?bandMember WHERE {
  ?songwriter ""No Alternative"" ;
  ?songwriter ""Michael Stipe"" ;
  ?bandMember a dbpedia:BandMember ;
  ?bandMember rdf:type dbpedia:Musician
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","SELECT ?child WHERE {
  ?child a dbpedia:Royalty ;
           dbpedia2:parent ?archduke ;
           dbpedia2:hasParent ?spouse .
  ?spouse a dbpedia:Person ;
          dbpedia2:partner ?archduchess .
  ?archduchess a dbpedia:Person ;
            dbpedia2:parent ?albrecht .
  ?albrecht a dbpedia:Person ;
           dbpedia2:child ?other_child
}
ORDER BY ?child",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?commander ?military_force WHERE {
  ?commander ns:commanded ?campaign.
  ?campaign rdfs:label ""French campaign in Egypt and Syria"".
  ?military_force ns:participatedIn ?battle.
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)"".
  ?commander ns:hasRole ""navy officer"" .
  ?military_force a ns:MilitaryForce .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","SELECT ?commander ?show ?event ?writer 
WHERE {
  ?commander rdfs:label ""Jean Baptiste, Comte d'Arco"".
  ?show rdfs:label ""The Tudors"" .
  ?event rdfs:label ""St. Bartholomew's Day Massacre"" .
  ?writer rdfs:label ""Bob Dylan"" .
  ?commander log:partOfEvent ?event .
  ?show includesLog:reference ?event .
  ?writer ns:author ""Always the Love Songs""
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"To retrieve this information, we can use a SPARQL query that searches for these actors and their respective roles in DBpedia, which is a knowledge base derived from Wikipedia. Here's how the SPARQL query would look:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor WHERE {
  ?movie a rdf:Statement ;
            rdf:subject ?role ;
            rdf:predicate dbpedia-owl:male_lead_role .
  ?role ns:label ""Shelby Oaks""@en .
  ?album a dbpedia:Album ;
           rdfs:label ""What You Know""@en ;
           dc:title ""What You Know""@en .
  ?artist a dbpedia:Musician ;
           rdfs:label ""T.I.""@en ;
           foaf:name ""Tip Harris""@en .
  ?role a dbpedia:Character ;
         rdfs:label ""The Shadow""@en ;
         dct:actor ?actor .
}
```

This query searches for:
- The male lead role (`?role`) associated with Shelby Oaks.
- The album ""What You Know"" by T.I. (`?album`).
- The actor who played the character ""The Shadow"" in any media.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?child WHERE {
  ?child a ns:royalty .
  ?child ns:father ?father .
  ?father ns:parent [ ns:offspring ?elvira ] .
  ?elvira a ns:person ;
           ns:mother [ ns:parent ns:Urraca_of_Portugal ] ;
           ns:surname ""of Castile"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?person WHERE {
  ?mark_tournier ns:birthPlace ?place .
  ?place rdfs:label ""Settlement""@en .
  ?person ns:birthPlace ?place .
  ?person a dbo:Person .
  ?person dbo:deceased
}",2,3,3,2,1,2,2,9,0,0,809,0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"SELECT ?spouse
WHERE {
  ?constance a dbpedia-owl:Person ;
               dbpedia-owl:hasSpouse ?spouse .
  ?spouse a dbpedia-owl:Person;
           dbpedia-owl:isA dbpedia:Royalty .
  ?constance rdfs:label ""Constance of Burgundy""@en.
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"SELECT ?child WHERE {
  ?child a dbpedia:Royalty .
  ?parent a dbpedia:Person .
  ?parent rdfs:father ?child .
  ?parent ns:name ""William I of Sicily"" .
  ?child ns:name ""William III of Sicily"" .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?show ?event WHERE {
    ?show rdf:type skos:Concept .
    ?show rdfs:label ?label .
    ?event a owl:Event .
    ?event rdfs:label ?eventLabel .
    ?event ns:involvesPerson Jean_Baptiste_Comte_d_Arc .
    ?show ns:hasEpisode ?episode .
    ?episode rdf:type fr:ÉpisodeTelevision .
    ?event rdfs:label ""Italian Wars"" .
    ?show rdfs:label ?showLabel .
    FILTER (regex(str(?showLabel), ""Jean Baptiste, Comte d'Arco"")) .
    FILTER (regex(str(?eventLabel), ""Battle of Preveza"") OR
           regex(str(?eventLabel), ""Italian Wars""))
}",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"SELECT ?governorLabel ?birthPlace
WHERE {
  ?governor a dbpedia-owl:Politician ;
            dbpedia2:office ""Governor of Virginia"" .
  ?governor foaf:name ?governorLabel .
  ?governor dbpprop:birthPlace ?birthPlace .
}
LIMIT 1",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"The SPARQL query will involve querying DBpedia for information about Manuel Huerga's films and then filtering to find actors who are both athletes (soccer players) and have been associated with those films.

Here is the constructed SPARQL query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor 
WHERE {
  ?film dbpedia-owl:director Manuel_Huerga .
  ?film dbpedia-owl:mainActor ?actor .
  ?actor rdf:type owl:sportsPerson .
  FILTER ( ?actor rdfs:label LIKE '%soccer%' )  # Adjust this filter to match soccer player labels
}",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"SELECT ?manager
WHERE {
  ?player rdfs:label ""Thomas Letsch"" .
  ?player dbppro:club VfL Bochum .
  ?season dbpedia-owl:sportsSeason ?sportSeason .
  ?team dbpedia:hasManager ?manager .
  ?team a dbpedia:SportTeam .
  ?season dbpedia:SportEventPeriod ?soccerSeason .
  ?soccerSeason rdfs:label ""Football season"" .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"SELECT ?writer WHERE {
  ?writer a ns:people.person;
    ns:givenName ?first_name;
    ns:surname ?last_name;
    ns:role ?role1 .
  ?role1 a ns:militaryRole;
    rdfs:label ""Commander in the Great Turkish War"";
    ns:conflict ""Great Turkish War"" .
  ?writer ns:work ?song .
  ?song a ns:creativeWork ;
    rdfs:label ""Always the Love Songs"" .
  ?writer ns:successor ?khmelnytsky .
  ?khmelnytsky a ns:person;
    ns:givenName ""Yurii"";
    ns:surname ""Khmelnytsky""
}
ORDER BY ?first_name, ?last_name",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist
WHERE {
  ?member a dbpedia:Musician .
  ?member foaf:group dbpedia:Khlyst_Band .
  ?member rdfs:label ?name .
  ?artist a dbpedia:MusicalArtist .
  ?member dbo:associatedWith ?artist .
  FILTER (lang(?name) = ""en"")  # Assuming we want the name in English
}",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"SELECT ?player WHERE {
  ?player a dbpedia:Person.
  OPTIONAL { ?player dbpedia:sport ""Soccer"" }.
  OPTIONAL { ?player rdfs:label ?actor_label . }
  FILTER (lang(?actor_label) = ""es"") .
  ?player dbpedia:role dbpedia:Actor .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"The movie ""Ab Kya Hoga"" (also known as ""What Might Happen"") does not have a widely recognized actor associated with it, as it might be an independent or lesser-known film. However, assuming we are looking for an actor who has played in a similar genre or has a profile that mentions being a politician, we can use DBpedia to search for relevant information.

A SPARQL query could look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbpedia-owl:Actor ;
           dbpedia-owl:occupation [ rdf:type owl:Class ; rdfs:label ""Politician"" ] .
  ?actor foaf:name ""Unknown Actor Name from Ab Kya Hoga"" .
}
```

This query searches for actors (`?actor`) who are classified as politicians (`[ rdf:type owl:Class ; rdfs:label ""Politician"" ]`) and have the name associated with the movie ""Ab Kya Hoga.""",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?player ?manager WHERE {
    ?player a ns:http://www.w3.org/2002/07/owl#Thing .
    ?player ns:hasMember ?manager .
    ?manager a ns:http://dbpedia.org/ontology/SportsClub .
    ?season ns:hasSuccessor ?nextSeason.
    ?nextSeason ns:startDate ""2007-08"" .
    ?teamSeason a ns:http://dbpedia.org/ontology/SportingEventSeason .
    ?teamSeason ns:seasonOf ?sportSeason .
    ?sportSeason a ns:http://dbpedia.org/ontology/Sport .
    ?teamSeason ns:hasMember ?player
}",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"SELECT ?work
WHERE {
  ?work a :WrittenWork .
  ?work dc:author [ a dbo:Person ; dbp:name ""Douglas MacArthur"" ] .
  OPTIONAL { ?work rdfs:isDefinedBy <http://dbpedia.org/ontology/> }
}",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"To construct a SPARQL query, we need to know the specific awards and their associated awardees. However, since detailed award data might not be directly available in DBpedia with explicit links to birth places, we will make some assumptions based on publicly known facts:

1. Vince Gilligan's ""Breaking Bad"" won multiple awards, including at least one Primetime Emmy Award for Outstanding Drama Series.
2. Cece Bell has received awards for her comic work.

Given these assumptions, a simplified SPARQL query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee ?birthPlace WHERE {
  ?awardee a rdf:Resource .
  ?awardee rdfs:label ""Vince Gilligan""@en .
  ?awardee rdfs:label ""Cece Bell""@en .
  OPTIONAL { ?awardee dbpedia2:birthPlace ?birthPlace }
}
```

This query selects the award winners (`?awardee`) and their birth places (`?birthPlace`). The `OPTIONAL` clause allows for flexibility in cases where the birth place information is not directly available.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"SELECT ?entity WHERE {
  ?entity a :Poland .
  ?entity rdfs:label ""Commander"" .
  ?entity foaf:name ?name .
  ?conflict a :MilitaryConflict .
  ?conflict a nfo:War .
  ?conflict timePeriodStart ""1778-01-01""^^xsd:date .
  ?conflict participant ?portugal .
  ?portugal rdfs:label ""Portugal"" .
  ?entity rdf:type :MilitaryPerson .
  ?entity foaf:wasInvolvedIn ?conflict
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"SELECT ?place WHERE {
  ?politician a dbo:Person.
  ?politician rdfs:label ""Elena Žalinkevičaitė-Petrauskienė"".
  ?politician dbpprop:birthPlace ?birthPlace1 .
  ?militaryLeader a dbo:Person.
  ?militaryLeader rdfs:label ""Alexander Lvovich Davydov"".
  ?militaryLeader dbpprop:birthPlace ?birthPlace2 .
  ?birthPlace1 = ?birthPlace2
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"SELECT ?award WHERE {
  ?award a :Region .
  ?award a :American .
  ?award a :StateOrProvince .
  ?award a :Settlement .
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
}",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?artist WHERE {
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Stuart Tosh"" .
  UNION
  ?person a dbpedia-owl:Musician .
  ?person rdfs:label ""Billy Lyall"" .
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"SELECT ?spouse ?royalty WHERE {
  ?person a dbpedia:Person;
  dbpedia:parentOf ?minye_kyawswa ;
  dbpedia:childOf ?myat_hpone_pyo .
  ?myat_hpone_pyo a dbpedia:Spouse ;
  dbpedia:isPartOf dbpedia:Royalty
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"SELECT ?player
WHERE {
  ?player a dbpedia-owl:Person ;
           rdfs:label ""Ye Jia""@en .
  ?player a dbpedia-owl:Person ;
           rdfs:label ""Lai Sun Cheung""@en .
}",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"SELECT ?member WHERE {
  ?partyMember rdf:type dbpprop:PoliticalPartyMember .
  ?partyMember rdfs:label ""Republican Party (United States)"" .
  ?partyMember foaf:name ?member
}
AND
{
  ?annSothern foaf:name ""Ann Sothern"" .
  ?annSothern dbpedia2:birth_name ?birthName
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","SELECT ?author WHERE {
  ?author a ns:people.person .
  ?author ns:P31 dbo:hasParent ?parent .
  ?parent a ns:thing.Living_Thing .
  ?parent ns:location ns:municipality ""United States"" .
  FILTER (lang(?author) = ""en"") 
}",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            rdfs:label ""Roger III, Duke of Apulia"" .
  ?parent dbo:hasParent ?grandparent .
  ?grandparent a dbpedia-owl:Person ;
             rdfs:label ""Roger II of Sicily"" .
  ?child a dbpedia-owl:Child ; 
         rdfs:label ?child_label .
}",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"SELECT ?predecessor WHERE {
  ?child a :Child .
  ?child :parent [ :parent ?grandparent ] .
  ?grandparent a :Royalty .
  ?spouse :spouseOf ?parent_of_child .
  ?parent_of_child a :Person .
  ?parent_of_child :parent ?grandparent
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"SELECT ?child WHERE {
  ?parent a dbpedia-owl:Person ;
            dbpedia-owl:hasChild ?child .
  ?parent rdfs:label ""Duke Philipp of Württemberg"" .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"SELECT ?member
WHERE {
  ?band dbpedia:isBandOf ?artist .
  ?band rdfs:label ""Burnt by the Sun"" .
  ?artist dbpedia:hasBandMember ?member .
}",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"SELECT ?profession WHERE { ?person a ns:people.person . ?person rdfs:label ""Rod Argent""@en . ?person ns:occupation ?profession } UNION { SELECT ?artist WHERE { ?musician a ns:people.person . ?musician rdfs:label ""Pacey""@en . ?musician ns:musicGenre ""rock""@en . ?musician ns:associatedBandMember ?artist } }",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war ?recipient WHERE {
  ?war a dbpedia-owl:War .
  ?recipient a dbpedia:Person .
  ?recipient rdfs:label ""Recipient of the Golden Sword for Bravery""@en .
  ?recipient foaf:country ""Russian Empire"" .
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?child_name ?parent_name WHERE {
  ?child_name a :royalty; :is_office_holder .
  ?child_name :father ?parent_name.
  ?parent_name ns:familyMember ?child_name.
  ?parent_name a :royalty; :is_office_holder .
  ?child_name ns:parent ?parent_name.
  ?parent_name = ""Roger III, Duke of Apulia"" .
  FILTER (lang(?child_name) = ""en"")  # Assuming we are looking for English names
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"SELECT ?parent WHERE {
  ?charlesFather a dbpedia-owl:Monarch ;
    dbpedia2:father ?sigismund .
  ?sigismund a dbpedia:Person ;
    rdfs:label ""Sigismund of Luxemburg"" .
  ?sigismund a dbo:HolyRomanEmperor .
  ?parent a dbo:Royalty
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?governorLabel ?governorBirthPlace ?awardLabel ?awardeeName ?awardeeBirthPlace
WHERE {
  ?governor a dbpedia-owl:Politician ;
            dbpedia:office ""Governor of Virginia"" .
  ?awardee a dbpedia-owl:Person ;
            dbpedia:recipientOf [ a dbpedia:Award; rdfs:label ""Vince Gilligan Award""] .
  ?governor foaf:name ?governorName .
  ?awardee foaf:name ?awardeeName .
  ?governor birthPlace ?governorBirthPlace .
  ?awardee birthPlace ?awardeeBirthPlace
}
ORDER BY ?governorBirthPlace, ?awardeeBirthPlace",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?person WHERE {
    ?person a dbpedia-owl:SocietalEvent;
        dbpedia-owl:Event ;
        dbpedia:television_shows/episode_of ?tv_show .
    ?person rdfs:label ""2nd Dragoon Regiment (France)"".
}",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"SELECT ?manager
WHERE {
  ?team dbpedia:hasManager ?manager .
  ?team rdfs:label ""SBV Vitesse"" .
  ?team dbpedia:season ""2020-21"" .
  UNION
  { 
    ?team dbpedia:hasManager ?manager .
    ?team rdfs:label ""VfL Bochum"" .
    ?team dbpedia:season ""2020-21"" 
  }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"SELECT ?predecessor WHERE {
  ?child a dbpedia:Child ;
            dbpedia:parent [ a dbpedia:Person ; dbpedia:name ""Minye Kyawswa"" ] ;
            dbpedia:sibling [ a dbpedia:Person ; dbpedia:name ""Saw Shwe Khet"" ] ;
            dbpedia:parent [ a dbpedia:Person ; dbpedia:name ""Saw Shwe Khet"" ] ;
            dbpedia:predecessor ?predecessor
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","SELECT ?child ?father
WHERE {
  ?child a :politician .
  ?child ns:father ?father .
  ?child rdfs:label ""Arthur Stanley""@en .
  ?child ns:parent ?grandParent .
  ?grandParent a :EarlOfDerby .
  ?grandParent ns:identifier ""Frederick Stanley, 16th Earl of Derby""@en
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
