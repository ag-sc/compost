id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alexander II, Grand Duke of Finland's native place
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativePlace ?alexanderNativePlace .
  
  # Sandro Bertaggia's birthplace (country)
  dbr:Sandro_Bertaggia dbo:birthPlace ?bertaggiaBirthPlace .
  FILTER(isURI(?bertaggiaBirthPlace) && strstarts(str(?bertaggiaBirthPlace), ""http://dbpedia.org/resource/""))

  # Nicholas II of Russia's native place
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nicholasNativePlace .

  # Person who is a native of Alexander II's administration and died at Sandro Bertaggia's birthplace
  ?person dbo:nationality ?alexanderNativePlace .
  ?person dbo:deathPlace ?bertaggiaBirthPlace .

  # Person who is also a native of Nicholas II's administration
  ?person dbo:nationality ?nicholasNativePlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace ?place .
  
  ?place rdfs:label ""Central Region, Ghana""@en .

  OPTIONAL { ?person dbp:profession dbr:Writer . }
  OPTIONAL { ?person dbo:associatedBandOrMusicalArtist dbr:The_Live_Anthology . }
  OPTIONAL { ?person dbo:associatedBandOrMusicalArtist dbr:$pacely . }

  ?person foaf:name ?birthName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actor ?profession
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgoName ?alterEgo .

  # Actor of the film ""Lasso the Moon""
  dbr:Lasso_the_Moon dbo:starring ?actor .

  # Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?profession .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Step 1: USS Arcadia (ID-1605) owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Step 2: War that is a disease and societal event related to the owner
  ?war dbo:relatedTo ?owner ;
       rdf:type dbo:Disease, dbo:SocietalEvent .

  # Step 3: Commander in the war
  ?war dbo:commander ?commander .

  # Step 4: Bill Clinton's work that is a book
  dbr:Bill_Clinton dbo:work ?billWork .
  ?billWork rdf:type dbo:Book, dbo:WrittenWork .

  # Step 5: Author of the work (should be Bill Clinton)
  ?billWork dbo:author dbr:Bill_Clinton .

  # Step 6: Spouse of the author who is a politician and office holder
  dbr:Bill_Clinton dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician, dbo:OfficeHolder .

  # Step 7: Hillary Clinton's book
  ?hillaryBook dbo:author dbr:Hillary_Clinton ;
               rdf:type dbo:Book, dbo:WrittenWork .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify the author of ""An Invitation to the White House"" who is a politician and office holder
  ?author dbo:title dbr:An_Invitation_to_the_White_House ;
          a dbo:Politician ;
          dbo:officeHolder true .

  # Step 2: Find the commander in the war that is both a disease and societal event
  ?war dbo:disease true ;
       dbo:societalEvent true .
  
  ?owner dbo:owns dbr:USS_Arcadia_(ID-1605) .
  ?work dbo:author ?owner ;
        a dbo:Book ;
        dbo:title ?title .

  # Step 3: Identify the author of this work
  ?commander dbo:commandedInWar ?war ;
             dbo:authoredWork ?work .

  # Step 4: Find the resident of Chappaqua, New York who is a politician and office holder
  ?resident dbo:residence dbr:Chappaqua,_New_York ;
            a dbo:Politician ;
            dbo:officeHolder true .
  
  # Step 5: Get the spouse of this resident
  ?resident dbo:spouse ?spouse .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Constance of Burgundy's spouse and their child who is royalty
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  ?spouse dbo:child ?grandChild .
  ?grandChild a dbo:Monarch .

  # William I of Sicily's child who is royalty and their father
  dbr:William_I_of_Sicily dbo:child ?royalChild1 .
  ?royalChild1 a dbo:Monarch .
  ?royalChild1 dbo:father ?fatherOfRoyalChild1 .

  # Roger II of Sicily's child who is royalty and their parent
  dbr:Roger_II_of_Sicily dbo:child ?royalChild2 .
  ?royalChild2 a dbo:Monarch .
  ?royalChild2 dbo:parent ?parentOfRoyalChild2 .

  # Final relationship
  ?grandChild dbo:child ?finalPerson .
  ?fatherOfRoyalChild1 = ?finalPerson .
  ?parentOfRoyalChild2 = ?spouse .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?awardeeBirthPlace WHERE {
  # Find an Indian movie featuring Dipankar De
  ?movie dbo:starring dbr:Dipankar_De ;
         dbo:country dbr:India .

  # Get the birthplace of one of its actors
  ?movie dbo:starring ?actor .
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Find an awardee of Sangeet Natak Akademi Fellowship and their birthplace
  ?awardee dbo:honoraryTitle dbr:Sangeet_Natak_Akademi_Fellowship ;
          dbp:birthPlace ?awardeeBirthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeLabel ?awardLabel ?hostInstitutionLabel
WHERE {
  # Find Nobel Prize in Physics awardees
  ?nobelPrize a dbo:NobelPrize ;
              dbo:field dbr:Physics ;
              dbo:laureate ?awardee .

  # Get awards of the awardee
  ?awardee dbo:award ?award .
  
  # Find host institutions that are educational
  ?nobelPrize dbo:hostInstitution ?hostInstitution .
  FILTER EXISTS { ?hostInstitution a dbo:EducationalOrganization }

  # Bind labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person dbo:officeHolderOf dbr:Korean_War .
  ?person dbo:authorOf ?work .
  ?work a dbo:Book ;
        dbo:country dbr:United_States_of_America .

  ?person dbo:commanderIn dbr:North_Carolina_Air_National_Guard .
  ?person dbo:politician true .

  FILTER (isLiteral(?author))
}
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show ?institution WHERE {
  # Find Rainer Weiss and his Nobel Prize in Physics award
  ?weiss a dbo:AwardWinner ;
         dbo:award dbr:Nobel_Prize_in_Physics .

  # Find the institution associated with the award show
  ?awardEvent dbo:organizer ?institution ;
              dbo:recipient ?weiss .
  
  # Ensure the institution is an educational institution
  ?institution a dbo:EducationalInstitution .

  # Get the name of the event/show
  ?awardEvent rdfs:label ?show .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember
WHERE {
  # Find John McDermott's death place
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  FILTER (strstarts(str(?deathPlace), ""http://dbpedia.org/resource/"") && 
          ?deathPlace a dbo:Settlement) .

  # Identify George Pickett's war
  ?georgePickett dbo:commanderInWar ?war .
  FILTER (?war a dbo:SocietalEvent) .

  # Determine the ruling party during that war
  ?rulingParty dbp:country ?country ;
               dbp:timePeriod ?timePeriod .
  FILTER EXISTS { ?war dbo:location ?country . }
  FILTER EXISTS { ?war dbo:date ?date .
                 ?timePeriod dbo:startYear ?startYear ;
                             dbo:endYear ?endYear .
                 FILTER (?startYear <= ?date && ?date <= ?endYear) }

  # Find a party member who is both a political party and an organization
  ?partyMember dbo:memberOfParty ?rulingParty ;
               a dbo:PoliticalParty, dbo:Organization .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Father of Cecilia Renata of Austria
  ?father dbo:spouse dbr:Cecilia_Renata_of_Austria .
  
  # Child of the father of Cecilia Renata of Austria
  ?child dbo:parent ?father .

  # Parent of Archduke Charles Joseph of Austria
  ?parent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .

  # Commander in the Algerian War
  ?commander dbo:militaryConflict dbr:Algerian_War .
  
  # Overlapping entity that is a societal event, an event, and a television show
  ?entity dbo:type dbr:Societal_event ;
          dbo:type dbr:Event ;
          dbo:type dbr:Television_show .

  # The entity must be related to the military force of the Algerian War
  ?entity dbo:militaryForce ?commander .
  
  # Ensure the entity is connected through the relationships identified
  FILTER (?child = ?parent && ?commander = ?father)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavaria_(1574) dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch .

  # Find the father of these royal children
  ?royalChild dbo:parent ?father .

  # Determine the commander in the Thirty Years' War
  ?commander dbo:child ?father ;
             dbo:occupation dbr:Thirty_Years'_War_commander .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Maria Anna of Bavaria (born 1574)
  ?mariaAnna a dbo:Person ;
             dbp:birthYear ""1574""^^xsd:gYear ;
             dbo:spouse ?husband .

  # Child of Maria Anna
  ?child1 dbo:parent ?mariaAnna ;
          dbo:parent ?husband .

  # Father of the child (likely husband)
  ?father dbo:parent ?child1 .

  # The father's child who is royalty and a commander in war
  ?royalChild dbo:parent ?father ;
              a dbo:Monarch, dbo:MilitaryPerson ;
              dbo:commanderOf ?war .

  # War as societal event, event, and television show
  ?war a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .

  # Military force of Algerian War
  ?algerianWar dbo:militaryForce ?militaryForce ;
               a dbo:MilitaryConflict .
  FILTER(?algerianWar = dbr:Algerian_War)

  # Commander in the Algerian War
  ?royalChild dbo:commanderOf ?algerianWar .

  # Ferdinand III, Holy Roman Emperor's child
  ?ferdinandIII a dbo:Person ;
                dbp:name ""Ferdinand III, Holy Roman Emperor"" .
  ?child2 dbo:parent ?ferdinandIII .

  # The father of the child of Ferdinand III
  ?fatherOfChild2 dbo:parent ?child2 .

  # Linking the two parts
  FILTER(?father = ?fatherOfChild2)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDuke ?spouseOfChildOfAntoinette
WHERE {
  # Duke Anthony Ulrich of Brunswick's child who is royalty
  ?childOfDuke a dbo:RoyalFamily ;
               dbo:parent dbr:Duke_Anthony_Ulrich_of_Brunswick .

  # Spouse of the child of Duke Anthony Ulrich
  ?spouseOfChildOfDuke dbo:spouse ?childOfDuke .

  # Princess Antoinette's child who is royalty
  ?childOfAntoinette a dbo:RoyalFamily ;
                    dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .

  # Spouse of the child of Princess Antoinette
  ?spouseOfChildOfAntoinette dbo:spouse ?childOfAntoinette .

  # The spouse of the spouse of the child of Princess Antoinette
  ?spouseOfSpouseOfChildOfAntoinette dbo:spouse ?spouseOfChildOfAntoinette .

  # Final condition: The child of Duke Anthony Ulrich is also the spouse of the spouse of the child of Princess Antoinette
  FILTER (?spouseOfChildOfDuke = ?spouseOfSpouseOfChildOfAntoinette)
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find an award associated with George H. Cameron
  ?award dbo:recipient dbr:George_H._Cameron .
  
  # Identify the political party of George Savage (politician)
  ?party dbo:member dbr:George_Savage_(politician) ;
         a dbo:PoliticalParty .

  # Find the leader of this political party
  ?leader dbo:positionTitle ""Leader""@en ;
          dbo:memberOf ?party .

  # Determine the residence of the leader
  ?leader dbo:residence ?residence .

  # Ensure the entity is both an organisation and a political party
  ?entity rdf:type dbo:Organization, dbo:PoliticalParty .
  
  # Link the award to the residence through the entity
  ?award dbo:location ?residence ;
         dbo:awardedBy ?entity .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Step 1: Identify The Shadow character and related TV show
  dbr:The_Shadow dbo:basedOn dbr:Richard_Grant_Esterhuysen .
  
  # Step 2: Find the television series based on The Shadow
  ?tvShow dbo:genre dbr:Crime_drama_television_series ;
          dbo:character dbr:The_Shadow .

  # Step 3: Identify actors in this TV show
  ?tvShow dbo:actor ?actor .

  # Step 4: Find actor who is also a politician
  ?actor dbo:profession dbr:Politician .

  # Step 5: Ensure the actor has acted in a movie
  ?movie dbo:starring ?actor .
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Step 1: Find Maria of Bytom's spouse
  ?maria a dbo:Spouse;
         rdfs:label ""Maria of Bytom""@en.
  
  # Step 2: Find Charles II of Naples' spouse
  ?charles a dbo:Spouse;
           rdfs:label ""Charles II of Naples""@en.

  # Step 3: Common spouse
  ?commonSpouse a dbo:Spouse;
                dbo:spouse ?maria;
                dbo:spouse ?charles.
  
  # Step 4: Child of the common spouse
  ?child dbo:parent ?commonSpouse.

  # Step 5: Predecessor of Stephen V of Hungary
  ?stephenV a dbo:Monarch;
            rdfs:label ""Stephen V of Hungary""@en.
  
  ?predecessor dbo:successor ?stephenV.

  # Step 6: Child of the predecessor's child
  ?childOfPredecessorChild dbo:parent ?predecessorChild.
  ?predecessorChild dbo:parent ?predecessor.

  # Step 7: Check if both are royalty
  FILTER EXISTS { ?commonSpouse a dbo:Monarch }
  FILTER EXISTS { ?childOfPredecessorChild a dbo:Monarch }

  # Step 8: Father of the common spouse
  ?father dbo:parent ?commonSpouse.

  # Step 9: Parent of this father
  ?parentOfFather dbo:parent ?father.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorOfParadise ?movieWithAudreyHepburn ?spouseOfAwardee
WHERE {
  # Find the actor of ""Paradise"" (2013)
  dbr:Paradise_(film)_2013 dbo:starring ?actorOfParadise .
  FILTER EXISTS { ?actorOfParadise dbo:birthDate ?date . FILTER(YEAR(?date) < 2024) }

  # Find a movie featuring Audrey Hepburn
  ?movieWithAudreyHepburn dbo:starring dbr:Audrey_Hepburn ;
                          rdf:type dbo:Film .

  # Find awards or nominations received by Janusz Kamiński
  ?award dbo:recipient dbr:Janusz_Kamiński .
  
  # Find the spouse of an awardee related to Janusz Kamiński
  ?awardee dbo:spouse ?spouseOfAwardee .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Identify William Bayne
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne"" .

  # Find the military conflict (World War I)
  ?worldWar1 a dbo:MilitaryConflict, dbo:Event ;
             rdfs:label ?conflictLabel .
  
  FILTER(CONTAINS(LCASE(?conflictLabel), ""world war i""))

  # Identify the Triple Entente as a societal event
  ?tripleEntente a dbo:SocietalEvent, dbo:Event ;
                 rdfs:label ?ententeLabel .

  FILTER(CONTAINS(LCASE(?ententeLabel), ""triple entente""))

  # Find the military force associated with World War I
  ?militaryForce dbo:partOfMilitaryConflict ?worldWar1 .

  # Ensure William Bayne is a commander in this conflict and awarded Knight Commander of the Order of the Bath
  ?bayne dbo:militaryCommanderIn ?worldWar1 ;
         dbo:awardedOrder dbr:Knight_Commander_of_the_Order_of_the_Bath .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace rdf:type dbo:Settlement ;
              dbp:country ""United States""^^xsd:string .

  # Quincy Adams Gillmore's award
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
  
  # Force associated with the awardee of the award
  ?force dbo:commander ?awardee ;
         dbp:name ?forceName .
  
  # War related to the award given by United States Congress
  ?war dbo:participatingMilitaryUnit ?force ;
       dbo:award ?congressAward .

  FILTER (?birthPlace = ?entity)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Find GS9 member who is an artist and a musical artist
  ?gs9Member dbo:type dbr:GS9 .
  ?gs9Member dbo:memberOf dbr:GS9 .
  ?gs9Member dbo:occupation dbr:Artist .
  ?gs9Member dbo:occupation dbr:MusicalArtist .

  # Step 2: Find person with the same birth name
  ?person dbp:birthday ?birthday .
  ?person dbp:birthName ?birthName .
  FILTER (?person != ?gs9Member)
  ?gs9Member dbp:birthName ?sameBirthName .
  FILTER (?birthName = ?sameBirthName)

  # Step 3: Person must be a native of Florida and a musical artist
  ?person dbo:nativePlace dbr:Florida .
  ?person dbo:type dbr:MusicalArtist .

  # Step 4: Find award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:recipient dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?award dbo:type dbr:Region .
  ?award dbo:type dbr:American .
  ?award dbo:type dbr:State .
  ?award dbo:type dbr:Settlement .

  # Step 5: Find band member of the associated musical artist
  ?associatedArtist dbo:award ?award .
  ?bandMember dbo:memberOf ?associatedArtist .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find awardees of Anita Borg Institute Women of Vision Awards
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  # Ensure the awardee is Japanese
  ?awardee dbo:nationality dbr:Japan .

  # Get the birthplace of the awardee
  ?awardee dbo:birthPlace ?birthPlace .

  # Find entities related to the time zone in Kiyosu, Japan
  ?timeZoneRegion rdfs:label ""Kiyosu""@en .
  ?birthPlace dbo:locatedIn ?region .
  ?region rdfs:subClassOf* dbo:AdministrativeTerritory .

  # Ensure the entity is related to a television show
  ?entity dbo:wikiPageWikiLink dbr:Category:Television_shows .
  
  # Link the entity to the awardee's birthplace or region
  ?entity dbo:locatedIn ?region .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?stephenV dbo:predecessor ?predecessor .
  
  # Step 2: Parent of the father, that is a royalty, of Charles I of Hungary
  ?charlesI dbp:father ?fatherCharlesI .
  ?fatherCharlesI dbp:father ?grandfatherCharlesI .
  ?grandfatherCharlesI dbo:nationality ?royalty .

  # Step 3: Spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania
  ?philip dbp:father ?fatherPhilip .
  ?fatherPhilip dbp:father ?grandfatherPhilip .
  ?grandfatherPhilip dbo:nationality ?royalty2 .
  
  ?predecessor dbp:spouse ?spousePredecessor .
  ?spousePredecessor dbp:child ?parentOfFatherCharlesI .

  # Find the child of the child that is a royalty
  ?parentOfFatherCharlesI dbp:child ?childOfChild .
  ?childOfChild dbo:nationality ?royalty3 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?ceceBellBirthPlace ?awardeeBirthPlace
WHERE {
  # Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?powellBirthPlace .
  
  # Governor of Paulus Powell's birthplace
  ?region a dbo:AdministrativeRegion ;
          dbp:name ?regionName ;
          dbo:country ?country .
  FILTER(?region = ?powellBirthPlace)
  ?governor dbo:governmentRole ?role .
  ?role dbo:officeHolder ?person .
  ?person dbo:birthPlace ?governorBirthPlace .
  
  # Cece Bell's birthplace
  dbr:Cece_Bell dbo:birthPlace ?ceceBellBirthPlace .

  # Awardee related to Vince Gilligan's Peabody Award for ""Breaking Bad""
  dbr:Vince_Gilligan dbo:awardReceived ?peabodyAward .
  ?awardee dbo:awardReceived ?relatedAward .
  FILTER(?relatedAward = ?peabodyAward)
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse ?personWithBirthName
WHERE {
  # Step 1: Find the landmark with elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Step 2: Find the ruling party in the location of that landmark
  ?location dbo:location ?landmark .
  ?party dbo:country ?location ;
         dbo:isRulingParty true .

  # Step 3: Find a member of this ruling party
  ?member dbo:memberOf ?party .
  BIND(?member AS ?partyMember)

  # Step 4: Identify the actor from ""1,000 Dollars a Minute""
  dbr:""1,000_Dollars_a_Minute"" dbo:actor ?actor .

  # Step 5: Find the spouse of this actor
  ?actor dbp:spouse ?spouse .
  BIND(?spouse AS ?spouse)

  # Step 6: Identify Tisha Sterling's parent and their birth name
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .

  # Step 7: Find a person with that birth name
  ?person foaf:name ?birthName .
  BIND(?person AS ?personWithBirthName)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?professionalInSingerAndBand ?alterEgo
WHERE {
  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?person .
  ?person rdfs:label ?birthName .

  # Find Walter B. Gibson's fictional character creation
  dbr:Walter_B._Gibson dbo:creation ?fictionalCharacter .
  ?fictionalCharacter rdf:type dbo:FictionalCharacter ;
                     dbo:wikiPageDisambiguates ?comicsCharacter .
  
  # Get the professional in Singer and band of Bob Thompson's birth name
  ?person dbo:profession ?professionalInSingerAndBand .

  # Get the alter ego related to Walter B. Gibson's creation
  ?fictionalCharacter dbo:alterEgo ?alterEgo .
}
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Find Tisha Sterling's parent and their birth name
  ?parent dbp:child dbr:Tisha_Sterling ;
          dbp:birthName ?birthName .

  # Step 3: Identify a person who is a member of the Republican Party (United States)
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  
  # Ensure this person's birth name matches Tisha Sterling's parent's birth name
  FILTER (?birthName = ?person.dbp:birthName)

  # Step 4: Determine the actor involved in the film related to Nat Levine
  ?film dbo:actor ?actor .

  # Step 5: Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthday ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  # Find the team season managed by this person
  ?teamSeason dbo:manager ?person ;
              rdf:type dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason .

  # Identify the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succ ?successorSeason ;
                                        rdf:type dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason .

  # Find the manager of this successor team
  ?successorSeason dbo:manager ?manager .

  # Ensure the manager is also a sports club, organization, and soccer club
  ?manager rdf:type dbo:SportsClub, dbo:Organization, dbo:SoccerClub .

  # Identify the administration (country) of the leader of West Germany
  dbr:West_Germany dbo:leader ?leader .
  ?leader dbp:nationality ?country .

  # Ensure the manager is native to this country
  ?manager dbp:nativePlace ?country .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royaltyChild
WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Child of the parent who is royalty
  ?royaltyChild dbo:parent ?parent .
  FILTER EXISTS { ?royaltyChild a dbo:Monarch } 

  # Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?philippChild dbo:child dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?predecessor dbo:successor ?philippChild .

  # Child of the child of the child of Alexander of Württemberg
  ?alexanderGrandchild dbo:parent ?grandparent .
  ?grandparent dbo:parent ?greatGrandparent .
  ?greatGrandparent dbo:parent dbr:Alexander_of_W%C3%BCrttemberg .

  # Ensure the royalty child is the predecessor
  FILTER (?royaltyChild = ?predecessor)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfPerson ?associatedArtistNickCurran ?realNameBandKimWilson
WHERE {
  # Person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Band of this person
  ?bandMember dbo:bandMemberOf ?bandOfPerson ;
              dbo:member ?person .

  # Nick Curran and his associated musical artists
  ?nickCurran foaf:name ""Nick Curran"" ;
              dbo:associatedMusicalArtist ?associatedArtistNickCurran .
  
  # Kim Wilson's real name and band
  ?kimWilson foaf:name ""Kim Wilson"" ;
             dbo:bandMemberOf ?bandKimWilson .
  ?bandKimWilson rdfs:label ?realNameBandKimWilson .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?vinceGilliganBirthPlace
WHERE {
  # Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?powellBirthPlace .
  
  # Governor of the region where Paulus Powell was born
  ?region dbo:administrativeRegion ?powellBirthPlace ;
          dbo:governor ?governor .
  ?governor a dbo:Politician ;
            dbp:birthPlace ?governorBirthPlace .

  # Author of El Deafo (Cece Bell)
  dbr:Cecily_Bell dbo:nationality dbr:United_States ;
                  dbo:birthPlace ?authorBirthPlace .
  
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?associatedArtist ?bandMember ?bandAssociatedArtist ?realName
WHERE {
  # Step 1: Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find associated musical artist of this person as persona of Nick Curran
  OPTIONAL {
    ?association dbo:associatedWith dbr:Nick_Curran .
    ?person ?p ?association .
    ?association dbo:associatedWith ?associatedArtist .
  }

  # Step 3: Identify the band member and their associated musical artist
  OPTIONAL {
    ?bandMember dbo:memberOf ?band ;
                dbo:birthDate ""1945-03-30""^^xsd:date ;
                rdf:type dbo:MusicalArtist .
    ?band dbo:associatedWith ?bandAssociatedArtist .
  }

  # Step 4: Reference the real name of The Fabulous Thunderbirds
  OPTIONAL {
    ?member dbo:memberOf dbr:The_Fabulous_Thunderbirds ;
            dbp:realName ?realName .
  }
}
```",8,10,9,3,3,3,3,71,0,2,1,0.0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent
WHERE {
    # Step 1: Princess Muna al-Hussein's child who is a royalty
    ?childMuna dbo:spouse ?muna .
    FILTER (str(?muna) = ""Princess_Muna_al-Hussein"") .
    
    # Ensure the child is a royalty
    ?childMuna dbp:title ?titleMuna .
    FILTER regex(str(?titleMuna), ""Prince|Princess"", ""i"") .

    # Step 2: That child's parent (who is also a royalty)
    ?parent1 dbo:spouse ?childMuna .
    
    # Ensure the parent is a royalty
    ?parent1 dbp:title ?titleParent1 .
    FILTER regex(str(?titleParent1), ""King|Queen"", ""i"") .

    # Step 3: Princess Aisha bint Faisal's parent who is a royalty
    ?childAisha dbo:spouse ?aisha .
    FILTER (str(?aisha) = ""Princess_Aisha_bint_Faisal"") .
    
    # Ensure the child is a royalty
    ?childAisha dbp:title ?titleChildAisha .
    FILTER regex(str(?titleChildAisha), ""Prince|Princess"", ""i"") .

    # Step 4: That parent's child who is a royalty
    ?parent2 dbo:spouse ?childAisha .
    
    # Ensure the parent is a royalty
    ?parent2 dbp:title ?titleParent2 .
    FILTER regex(str(?titleParent2), ""King|Queen"", ""i"") .

    # Step 5: Determine the common parent of both identified royals from steps 2 and 4
    ?commonParent dbo:spouse ?parent1 ;
                 dbo:spouse ?parent2 .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Allan Arbus and his child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Parent of the child
  ?parent dbo:child ?child .

  # The parent is an actor in a movie that is a work
  ?parent dbo:profession dbr:Actor ;
          dbo:film dbr:Movie_Work .

  # Person decedent at Los Angeles
  ?parent dbp:deathPlace dbr:Los_Angeles, California .

  # Parent of a professional in the profession of Eugène Cattin
  ?professional dbo:profession dbr:Eugène_Cattin ;
                dbo:parent ?parent .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace
WHERE {
  # Governor of Virginia
  ?governor dbo:office dbr:Governor_of_Virginia ;
           dbo:birthPlace ?governorBirthPlace .

  # Author of ""El Deafo""
  dbr:C._E._Bell dbo:nationality dbr:United_States ;
                dbo:birthPlace ?authorBirthPlace .

  # Awardee associated with Vince Gilligan
  ?award dbo:recipient ?awardee .
  ?award dbo:creator dbr:Vince_Gilligan .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent
WHERE {
  # Mariclare Costello's spouse and their child's parent
  ?spouse a dbo:Spouse; 
          dbo:spouse dbr:Mariclare_Costello .
  ?child dbo:parent ?spouse.
  ?parent1 dbo:child ?child.

  # Eugène Cattin's profession and the professional's parent
  ?eugeneCattin a dbo:Person;
                foaf:name ""Eugène Cattin""@en.
  ?profession dbo:field dbr:Eug%C3%A8ne_Cattin .
  ?professional dbo:occupation ?profession.
  ?parent2 dbo:child ?professional.

  # Actor of Judgment: The Trial of Julius and Ethel Rosenberg and their parent
  ?judgmentFilm a dbo:Film;
                foaf:name ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?actor dbo:actedIn ?judgmentFilm.
  ?parent3 dbo:child ?actor.

  # Find the common parent
  FILTER (?parent1 = ?commonParent)
  FILTER (?parent2 = ?commonParent)
  FILTER (?parent3 = ?commonParent)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  # Find Denis Kolodin's nickname
  ?denis dbr:Denis_Kolodin .
  ?denis dbo:nickname ?nickname .

  # Find the work by Aleksandr Filimonov and the player mentioned in it
  ?work dbo:author dbr:Aleksandr_Filimonov .
  ?work dbo:mainsubject ?player .

  # Check if the nickname is a soccer club
  ?nickname rdfs:label ?clubLabel .
  FILTER (CONTAINS(LCASE(?clubLabel), ""soccer"") || CONTAINS(LCASE(?clubLabel), ""football""))

  # Ensure the player and the club are related
  ?player dbo:team ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (?teamLabel = ?clubLabel)
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist WHERE {
  # Find Cynthia Morgan's birth name
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
  
  # Find Afeez Oyetoro's movie/show
  dbr:Afeez_Oyetoro dbo:actedIn ?movie .

  # Find the person with the same birth name as Cynthia Morgan who is associated with the movie/show
  ?person foaf:name ?birthName .
  ?person dbo:associatedMusicalArtist ?musicalArtist .
  
  # Ensure the person is linked to the movie/show
  ?movie dbo:actor ?person .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the war associated with specific roles
  ?war dbo:awardee ?person1 .
  ?person1 dbo:awardNumber ""30""^^xsd:string .
  ?war dbo:leader ?person2 .
  ?person2 dbo:party dbr:National_Party_of_Greece .

  # Ensure the death place is related to the war
  ?deathPlace dbo:location ?entity .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Step 1: Identify the alter ego in ""The Golden Master"" series
  ?series dbo:title ""The Golden Master""@en .
  ?character dbo:partOfSeries ?series ;
             dbo:alterEgo ?professional .

  # Step 2: Find the author of ""Smartbomb"" and a movie they acted in
  dbr:Smartbomb dbo:author ?author .
  ?movie dbo:starring ?author .

  # Step 3: Connect to T.I.'s album and song
  ?album dbo:artist dbr:T.I. ;
         dbo:track ?song .
  ?song a dbo:Songs ;
        foaf:name ?songName .

  # Ensure the song is also considered a musical work
  ?musicalWork dbo:title ?songName ;
               a dbo:MusicalWork .

  # Combine conditions to find the professional
  FILTER(?professional = ?character)
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego in comics
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Paul McGann, actor of ""Withnail & I"" (movie and TV show)
  dbr:Paul_McGann dbo:profession dbr:Actor ;
                 dbo:film dbr:Withnail_&_I .

  # Richard E. Grant in the same film
  dbr:Richard_E._Grant dbo:profession dbr:Actor ;
                      dbo:film dbr:Withnail_&_I .

  # Manoj Joshi, actor and politician from ""Ab Kya Hoga""
  dbr:Manoj_Joshi dbo:profession dbr:Actor ;
                  dbo:politicalParty ?party .
  
  # The shared profession
  ?professional dbo:profession dbr:Actor .
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find the award associated with Edmund Hakewill-Smith
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Edmund_Hakewill-Smith"" .

  # Identify societal events and military conflicts related to the Sinking of Prince of Wales and Repulse
  ?event dbo:type ?eventType .
  FILTER (?eventType IN (dbr:Societal_event, dbr:Military_conflict))
  ?event dbo:reference dbr:Sinking_of_Prince_of_Wales_and_Repulse .

  # Determine the commander involved in these events
  ?awardee dbo:commanderOf ?force .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?retailleauParty ?successorParty
WHERE {
  # Find Bruno Daniel Marie Paul Retailleau's party
  dbr:Bruno_Retailleau dbo:party ?retailleauParty .

  # Find Patrice Martin-Lalande's successor who is a politician and French
  dbr:Patrice_Martin-Lalande dbo:succeededBy ?successor .
  ?successor rdf:type dbo:Politician ;
             dbp:nationality ""French""^^xsd:string .

  # Get the party of the successor
  ?successor dbo:party ?successorParty .
}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Tisha Sterling and her parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" ;
         dbo:parent ?parent .
  
  ?parent dbo:birthName ?birthName .

  # Nat Levine's film product
  ?film dbo:producer ?natLevine ;
        dbo:actor ?actor .
  
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine"" .

  # Actor's spouse
  ?actor dbo:spouse ?spouse .

  # Landmark at elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:rulingParty ?party .
  
  ?party dbo:member ?person .

  FILTER (?spouse = ?person)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather WHERE {
  # Baeda Maryam I and his child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Parent of the child who is royalty
  ?royalParent dbo:parent ?child .
  ?royalParent a dbo:Monarch .

  # Commander in Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander a dbo:Monarch .

  # Parent of the commander who is royalty
  ?commanderParent dbo:parent ?commander .
  ?commanderParent a dbo:Monarch .

  # The Shadow's alter ego (Laurie J. Collins)
  dbr:Laurie_J._Collins dbo:alterEgo dbr:The_Shadow .

  # Father of the royal parent
  ?grandfather dbo:parent ?royalParent .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent
WHERE {
  # For Francis I, Duke of Lorraine
  ?child1 dbo:parent dbr:Franz_I,_Duke_of_Lorraine .
  ?child1 a dbo:Monarch .
  
  ?spouse1 dbo:spouse dbr:Franz_I,_Duke_of_Lorraine .
  ?spouse1 a dbo:Monarch ;
           dbo:nobleTitle ?title1 .

  ?father1 dbo:parent ?spouse1 .
  
  # For Antoine, Duke of Lorraine
  ?child2 dbo:parent dbr:Antoine,_Duke_of_Lorraine .
  ?child2 a dbo:Monarch .
  
  ?spouse2 dbo:spouse dbr:Antoine,_Duke_of_Lorraine .
  ?spouse2 a dbo:Monarch ;
           dbo:nobleTitle ?title2 .

  ?father2 dbo:parent ?spouse2 .

  # Find the common parent
  ?commonParent dbo:child ?father1 .
  ?commonParent dbo:child ?father2 .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceReedHowes ?actorColorMeDead ?deathPlaceActorColorMeDead ?actorAladdin1958 ?deathPlaceActorAladdin1958
WHERE {
  # Reed Howes death place
  dbr:Reed_Howes dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Reed_Howes dbo:deathPlace ?deathPlaceReedHowes . }

  # Actors of Color Me Dead and their death places
  ?colorMeDeadFilm a dbo:Film ;
                  dbo:title ""Color Me Dead"" ;
                  dbo:starring ?actorColorMeDead .
  OPTIONAL { ?actorColorMeDead dbo:deathPlace ?deathPlaceActorColorMeDead . }

  # Actors of Aladdin (1958 film) and their death places
  ?aladdinFilm a dbo:Film ;
               dbo:title ""Aladdin"" ;
               dbo:releaseDate ?releaseDate ;
               FILTER(YEAR(?releaseDate) = 1958) .
  ?aladdinFilm dbo:starring ?actorAladdin1958 .
  OPTIONAL { ?actorAladdin1958 dbo:deathPlace ?deathPlaceActorAladdin1958 . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Saw Shwe Khet's child who is royalty
  ?childShweKhet dbo:parent ?fatherShweKhet .
  ?childShweKhet dbp:title ""Royalty"" .

  # Father of that child who is royalty and his spouse
  ?fatherShweKhet dbp:title ""Royalty"" .
  ?spouseShweKhet dbo:spouse ?fatherShweKhet .
  
  # Saw Min Phyu's spouse who is royalty
  ?childMinPhyu dbo:parent ?spouseMinPhyu .
  ?spouseMinPhyu dbp:title ""Royalty"" .

  # Predecessor of the child of Saw Min Phyu's spouse
  ?predecessor dbo:succeededBy ?childMinPhyu .

  # Child of the parent of the child of Minye Kyawswa
  ?minyeChild dbo:parent ?grandParent .
  ?grandChild dbo:parent ?grandParent .

  # Ensure the spouse is a predecessor and fits all conditions
  FILTER (?spouseShweKhet = ?predecessor)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInManager WHERE {
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:birthDate ""1981-12-01""^^xsd:date .

  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
  
  ?manager dbo:playerIn ?person .

  ?reference a dbo:Organization ;
             a dbo:SportsClub ;
             a dbo:SportsTeam ;
             a dbo:SoccerClub ;
             dbp:country dbr:Hong_Kong_C .

  ?manager dbo:manages ?reference .

  BIND(?manager AS ?playerInManager)
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelPartyLeaderOffice ?manuelConflictCommanderOffice ?madridResidenceTenant
WHERE {
  # Miguel Maura's political party and its leader's office
  dbr:Miguel_Maura dbo:memberOf ?party .
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leader .
  ?leader dbo:office ?miguelPartyLeaderOffice .

  # Manuel Pinto da Costa's military conflict and his commander role
  dbr:Manuel_Pinto_da_Costa dbo:commanderIn ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?commander .
  ?commander dbo:office ?manuelConflictCommanderOffice .

  # Leader of the 2003 Madrid City Council election and their residence tenant
  dbr:Madrid_City_Council_election_2003 dbo:leader ?madridLeader .
  ?madridLeader dbo:residence ?residence .
  ?residence dbo:tenant ?madridResidenceTenant .
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceElDeafo ?birthPlaceAwardee ?governorBirthPlace
WHERE {
  # El Deafo Author
  ?author dbo:nationality dbr:United_States_of_America ;
          dbo:work dbr:El_Deafo .
  ?author dbp:birthPlace ?birthPlaceElDeafo .

  # Vince Gilligan Awardee
  ?award dbo:recipient ?awardee .
  ?award dbo:creator dbr:Vince_Gilligan .
  ?awardee dbp:birthPlace ?birthPlaceAwardee .

  # Paulus Powell's Birth Place
  ?powell dbp:birthPlace ?region ;
          rdf:type dbo:Person .
  ?region a dbo:Region ;
          dbo:administrativeRegion ?adminRegion .
  ?governor dbo:office dbr:Governor_of_?adminRegion ;
            dbp:birthPlace ?governorBirthPlace .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?grandfather ?child ?parent ?commander
WHERE {
  # Lamont Cranston is The Shadow
  dbr:The_Shadow dbo:aliasName dbr:Lamont_Cranston .
  
  # Find the alter ego of Lamont Cranston (The Shadow)
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Grandfather who is royalty
  ?grandfather dbo:child ?parent1 .
  ?parent1 dbo:child ?alterEgo .
  ?grandfather a dbo:Monarch .

  # Parent of the commander who is royalty
  ?commander dbo:child ?parent2 .
  ?parent2 a dbo:Monarch .

  # Child of the parent (royalty) of the commander
  ?child dbo:parent ?parent2 .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor
WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Determine the parent of this child (could be spouse or another)
  ?parent dbo:child ?child .
  
  # Step 4: Identify Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?profession .

  # Step 5: Find a professional in this profession
  ?professional dbo:profession ?profession .

  # Step 6: Identify the parent of this professional
  ?parent2 dbo:child ?professional .
  
  # Ensure the parents from steps 3 and 6 are the same person
  FILTER (?parent = ?parent2)

  # Step 7: Find a movie that Herschel Bernardi acted in
  dbr:Herschel_Bernardi dbo:actedIn ?movie .

  # Step 8: Ensure the movie is a work
  ?movie rdf:type dbo:Film .
  
  # Step 9: Match the actor with the parent from steps 3 and 6
  ?movie dbo:starring ?actor .
  FILTER (?actor = ?parent)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Philip, Despot of Romania
  ?philip a dbr:Philip_Despot_of_Romania .
  
  # Parent who is royalty
  ?parent dbo:child ?philip ;
          a dbo:RoyalFamilyMember .

  # Father of the parent (grandfather)
  ?grandfather dbo:child ?parent .

  # Spouse of the grandfather
  ?spouse dbo:spouse ?grandfather .

  # Step 2: Spouse of Maria of Bytom
  ?maria a dbr:Maria_of_Bytom .
  
  ?spouseMaria dbo:spouse ?maria .
  
  # Father of this spouse who is royalty
  ?royalFather dbo:child ?spouseMaria ;
               a dbo:RoyalFamilyMember .

  # Child of this father
  ?child dbo:parent ?royalFather .

  # Step 3: Predecessor of Stephen V of Hungary
  ?stephenV a dbr:Stephen_V_of_Hungary .
  
  ?predecessor dbo:successor ?stephenV .
  
  # Child of this predecessor who is royalty
  ?royalChild dbo:parent ?predecessor ;
              a dbo:RoyalFamilyMember .

  # Combine conditions to find the final entity
  FILTER(?child = ?royalChild)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Identify Bill Clinton as the resident of Chappaqua, New York and spouse of Hillary Clinton
  dbr:Bill_Clinton dbo:residence dbr:Chappaqua,_New_York .
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton .

  # Confirm his role in the Gulf War
  dbr:Gulf_War dbo:commander dbr:Bill_Clinton .

  # Identify ""My Life"" as a book authored by Bill Clinton
  ?work dbo:author dbr:Bill_Clinton .
  ?work rdf:type dbo:Book .
  ?work rdfs:label ""My Life""@en .
  
  BIND(dbr:Bill_Clinton AS ?author)
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?alterEgoReference ?royaltyOfficeHolder
WHERE {
  # Dawit I's child
  ?dawitI a dbr:Dawit_I ;
          dbo:spouse ?mother .
  ?childOfDawitI dbo:parent ?dawitI .

  # Lamont Cranston's alter ego
  ?lamontCranston a dbr:Lamont_Cranston ;
                  dbo:fictionalAlterEgo ?theShadow .
  ?alterEgoReference rdfs:label ""The Shadow""@en .

  # Baeda Maryam I's child and the father of that child
  ?baedaMaryamI a dbr:Baeda_Maryam_I ;
               dbo:spouse ?motherBaeda .
  ?childOfBaedaMaryamI dbo:parent ?baedaMaryamI .
  ?fatherOfChild dbp:royalty ?isRoyalty ;
                 dbo:officeHolder ?isOfficeHolder ;
                 dbo:parent ?childOfBaedaMaryamI .

  # Ensure the father is a royalty and an office holder
  FILTER(?isRoyalty = true && ?isOfficeHolder = true)

  # Linking all parts together
  BIND(?alterEgoReference AS ?referenceToAlterEgo)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?siege dbo:event = dbr:Siege_of_Padua .
  ?commander dbo:commanded ?siege .
  ?child dbo:parent ?commander ;
         a dbo:Royal .

  ?isabella dbo:father ?person ;
            rdfs:label ""Isabella of Austria""@en .
  
  ?philipChild dbo:father ?person ;
               a dbo:Royal ;
               dbo:mother dbr:Philip_I_of_Castile .

  FILTER(?child = ?person)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child who is a politician
  ?child1 rdf:type dbo:Politician .

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent2 .

  # Parent who is both a politician and an office holder
  ?parent2 rdf:type dbo:Politician ;
           rdf:type dbo:OfficeHolder .

  # Child of this parent
  ?parent2 dbo:child ?child2 .

  # Awardee of the Rodney Lees Award related to this child
  ?awardee dbo:award dbr:Rodney_Lees_Award .
  ?awardee dbo:parent ?child2 .

  # The father of the initial child (from Frederick Stanley)
  ?child1 dbo:father ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  dbr:François_I,_Duke_of_Lorraine a dbo:Person .

  # Step 2: Find his spouse who is royalty and noble
  ?spouse dbo:spouse dbr:François_I,_Duke_of_Lorraine .
  ?spouse a dbo:Monarch ;
         dbo:nobleTitle ?title .
  
  FILTER EXISTS { ?title dbo:isMemberOfClass dbr:Nobility }

  # Step 3: Identify their child who is royalty
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:François_I,_Duke_of_Lorraine ;
         a dbo:Monarch .

  # Step 4: Determine the father's parent (grandparent)
  ?father dbo:parent ?child .
  ?grandparent dbo:parent ?father .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader a dbo:HeadOfState ;
          dbo:nationality dbr:Germany ;
          dbo:country dbr:West_Germany .

  # Step 2: Determine the country administered by this leader
  ?country dbo:administrativeCapital ?capital ;
           dbo:headOfState ?leader .

  # Step 3: Find the person born on 1968-08-26, who is a sports manager and native of the identified country
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality ?country ;
          a dbo:SportsManager ;
          dbo:managerOf dbr:VfL_Bochum .

  # Step 4: Identify the manager of the team
  ?team dbo:seasonType dbp:soccerClubSeason ;
        dbo:seasonType dbp:sportsSeason ;
        dbo:seasonType dbp:sportsTeamSeason ;
        dbo:manager ?person .
  
  BIND(?person AS ?manager)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
    # Step 1: Find Hu Jieqing's spouse who is a writer
    dbr:Hu_Jieqing dbo:spouse ?spouse .
    ?spouse rdf:type dbo:Writer .

    # Step 2: Determine the country related to the work of this writer
    ?work dbo:author ?spouse ;
          dbo:country ?countryOfWork .

    # Step 3: Find the person decedent at Taipei
    ?decedent dbo:deathPlace dbr:Taipei .

    # Step 4: Identify the child of this person who is a politician
    ?decedent dbo:child ?politician .
    ?politician rdf:type dbo:Politician .

    # Step 5: Get the birthplace of this politician
    ?politician dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce WHERE {
  # Find William Bayne and his award
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en ;
         dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Find the French campaign in Egypt and Syria as an event
  ?campaign a dbo:MilitaryConflict, dbo:Event ;
            rdfs:label ?campaignLabel .
  
  FILTER(CONTAINS(LCASE(?campaignLabel), ""french campaign egypt syria""))

  # Find the commander of this campaign
  ?commander a dbo:Person ;
             dbo:commandedMilitaryForce ?militaryForce ;
             dbo:participatedIn ?campaign .

  # Ensure the military force is part of a societal event
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:hasParticipant ?militaryForce .
  
  # Link to William Bayne through the award and campaign
  ?bayne dbo:awardedBy ?award .
  ?campaign dbo:partOf ?war .

  FILTER(?commander != ?bayne) # Ensure commander is not William Bayne himself

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent
WHERE {
    # Step 1: Rodney Lees' award
    ?award dbo:recipient dbr:Rodney_Lees .
    
    # Step 2: Awardee's parent
    ?awardee dbo:recipient ?award .
    ?parent dbo:child ?awardee .

    # Step 3: Eton College alumnus
    ?alumnus dbo:almaMater dbr:Eton_College .

    # Step 4: Child who is a politician
    ?politicianChild dbo:parent ?alumnus .
    ?politicianChild rdf:type dbo:Politician .

    # Step 5: Parent of the politician child
    ?politicianParent dbo:child ?politicianChild .

    # Step 6: Frederick Stanley's child
    ?frederickChild dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby .

    # Step 7: Parent of Frederick Stanley's child
    ?frederickParent dbo:child ?frederickChild .

    # Find the common parent
    FILTER (?parent = ?politicianParent && ?parent = ?frederickParent)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Parent of the child who is royalty
  ?parent dbo:parent ?child .
  ?parent a dbo:Monarch .

  # Commander in Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander a dbo:Monarch .
  
  # Parent of the commander who is royalty
  ?commanderParent dbo:parent ?commander .
  ?commanderParent a dbo:Monarch .

  # Alter ego of Lamont Cranston (The Shadow)
  ?alterEgo rdfs:label ""The Shadow""@en .
  ?alterEgo dbo:alterEgo dbr:Lamont_Cranston .

  # The father of the parent who is royalty
  ?grandfather dbo:parent ?parent .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shelbyActor ?albumActor ?alterEgo
WHERE {
  # Shelby Oaks and its actor
  dbr:Shelby_Oaks dbo:actor ?shelbyActor .

  # T.I.'s song or musical work and its album
  ?work dbo:artist dbr:T.I. ;
        a dbo:Songs .
  ?work dbo:album ?album .
  
  # Actor of the album
  ?album dbo:actor ?albumActor .

  # The Golden Master series alter ego
  ?series dbo:alterEgo ?alterEgo .
  FILTER (str(?series) = ""The_Golden_Master"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfFather WHERE {
  # Myat Hpone Pyo's father
  ?myatHponePyo dbo:child ?father .
  
  # Father's spouse who is royalty
  ?father dbo:spouse ?spouseOfFather .
  ?spouseOfFather a dbo:Monarch .  # Assuming 'dbo:Monarch' denotes royalty

  # Saw Min Phyu's spouse and their child
  ?sawMinPhyu dbo:spouse ?spouseSawMinPhyu .
  ?spouseSawMinPhyu dbo:child ?childOfSpouseSawMinPhyu .

  # Predecessor of the child of Saw Min Phyu's spouse
  ?predecessor dbo:successor ?childOfSpouseSawMinPhyu .

  # Child of the parent of the child of Minye Kyawswa
  ?minyeKyawswa dbo:child ?childMinyeKyawswa .
  ?parentChildMinyeKyawswa dbo:child ?childMinyeKyawswa .
  ?grandchildParentChildMinyeKyawswa dbo:child ?parentChildMinyeKyawswa .

  # Linking the predecessor to the grandchild
  ?predecessor = ?spouseOfFather .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalInMusic ?associatedArtistLesaneParishCrooks ?artistCentralGhana
WHERE {
  # Rod Argent's profession
  dbr:Rod_Argent dbo:profession dbr:Musician .
  
  # Tupac Shakur (Lesane Parish Crooks)
  dbr:Tupac_Shakur dbp:birthName ""Lesane Parish Crooks""@en .

  # Associated musical artist of Lesane Parish Crooks
  ?associatedArtistLesaneParishCrooks dbo:associatedMusicalArtist dbr:Tupac_Shakur .
  
  # Artist from Central Region, Ghana
  ?artistCentralGhana dbo:nativePlace dbr:Central_Region_(Ghana) ;
                     dbo:occupation dbr:Musician .

  # Professional in the profession of Rod Argent (musician)
  ?professionalInMusic dbo:profession dbr:Musician .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplaceEntity ?awardName WHERE {
  # Part 1: Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?birthplace .
  
  # Get the entity of the birthplace
  ?birthplace rdfs:label ?birthplaceLabel .
  FILTER(LANG(?birthplaceLabel) = 'en')
  BIND(dbr:?birthplaceLabel AS ?birthplaceEntity)

  # Part 2: Find Charles Parsons' award
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
  
  # Get the name of the award
  ?award rdfs:label ?awardName .
  FILTER(LANG(?awardName) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?party1 ?party2
WHERE {
  # Daniel Elahi Galán's country of birth
  dbr:Daniel_Elahi_Galán dbo:nationality ?country .

  # Roy Leonardo Barreras Montealegre's political party
  dbr:Roy_Leonardo_Barreras_Montealegre dbp:party ?party1 .

  # Politician from the same country as Daniel Elahi Galán and in the same party as Roy Leonardo Barreras Montealegre
  ?entity dbo:nationality ?country .
  ?entity dbp:party ?party1 .
  
  # Sofía Petro's father's political party
  dbr:Sofía_Petro dbo:father ?father .
  ?father dbp:party ?party2 .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warNapoleonZervas ?warAwardee30 ?deathPlaceSettlement WHERE {
  # Wars involving Napoleon Zervas
  ?person dbo:name ""Napoleon Zervas""@en .
  ?person dbo:participatedInWar ?warNapoleonZervas .

  # Awardee of 1930 and their associated war
  ?awardee dbo:awardReceived ?award .
  ?award dbp:date ""1930""^^xsd:gYear .
  ?awardee dbo:participatedInWar ?warAwardee30 .

  # Antonios Varthalitis' death place
  ?varthalitis dbo:name ""Antonios Varthalitis""@en .
  ?varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
  BIND(?deathPlace AS ?deathPlaceSettlement)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnusBirthplace ?residentBirthplace WHERE {
  # Find alumni of Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  
  # Get their birthplaces
  ?alumnus dbp:birthPlace ?alumnusBirthplace .

  # Find regions with Eastern European Time
  ?region dbo:timeZone dbr:Eastern_European_Time ;
          dbo:resident ?resident .

  # Ensure the resident's birthplace is a settlement
  ?resident dbp:birthPlace ?residentBirthplace .
  FILTER EXISTS { ?residentBirthplace a dbo:Settlement }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  ?season1 dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .
  
  # Thomas Letsch's management role in that season
  ?teamSeason dbo:manager dbr:Thomas_Letsch ;
              dbo:participatedIn ?season1 .

  # Ensure the manager is native to Germany
  ?manager dbo:nationality dbr:Germany ;
           rdfs:label ""Thomas Letsch""@en .
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the child of Minye Kyawswa
  ?childMinyeKyawswa dbo:parent dbr:Minye_Kyawswa .
  
  # Find the child of Saw Shwe Khet
  ?childSawShweKhet dbo:parent dbr:Saw_Shwe_Khet .

  # Identify the predecessor relationship
  ?predecessor dbo:succeededBy ?childSawShweKhet .
  ?childMinyeKyawswa dbo:succeededBy ?predecessor .

  # The father is a royalty and child of Saw Shwe Khet
  ?father dbo:parent dbr:Saw_Shwe_Khet ;
          rdf:type dbo:Monarch .

  # The father is also the parent of the predecessor
  ?father dbo:child ?predecessor .

  # Find the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Find Emilia Yancheva Valeva's DBpedia resource
  ?emilia a dbo:Person ;
          foaf:name ""Emilia Yancheva Valeva""@en .

  # Step 2: Identify Jamie T's profession
  dbr:Jamie_T dbo:profession ?jamieTProfession .

  # Step 3: Find band membership of Emilia that matches Jamie T's profession
  ?emilia dbo:bandMemberOf ?band .
  ?band dbo:member ?bandMember .
  ?bandMember dbo:profession ?bandMemberProfession .

  FILTER (?bandMemberProfession = ?jamieTProfession)
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Find works authored by Joe Biden that are books and American
  ?work dbo:author dbr:Joe_Biden ;
        a dbo:Book ;
        dbo:country dbr:United_States .

  # Find the commander in the Korean conflict who is also an author of such a work
  ?officeHolder dbo:position dbr:Commander_in_the_Korean_War ;
               dbo:author ?work .
  
  # Return the author of the work
  ?work dbo:author ?author .
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?spouse WHERE {
  # Step 1: Identify the landmark with elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.1168""^^xsd:float .

  # Step 2: Find ruling party member associated with the landmark
  ?landmark dbo:locatedInCountry ?country .
  ?partyMember dbo:memberOfParty ?rulingParty ;
               dbo:officeHolder ?office ;
               dbp:country ?country .
  ?rulingParty dbo:isRulingPartyOf ?country .

  # Step 3: Identify film produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Step 4: Determine actor of the film
  ?actor dbo:actedInFilm ?film .

  # Step 5: Find spouse of the actor
  ?spouse dbo:spouse ?actor ;
          rdfs:label ?spouseLabel .

  # Step 6: Match with person born as Ann Sothern's birth name
  ?person dbp:birthName ""Anne Sothern""^^xsd:string .
  FILTER(?partyMember = ?person)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child ?margareteSophie .
  
  # Child of the child of Duke Philipp of Württemberg
  ?philippChild dbo:child ?grandchildPhilipp .
  
  # Spouse of Archduchess Helena of Austria
  ?helena dbo:spouse ?spouseHelena .
  
  # Child of the spouse of Archduchess Helena of Austria
  ?spouseHelenaChild dbo:child ?childSpouseHelena .
  
  # Predecessor relationship
  ?grandchildPhilipp dbo:predecessor ?childSpouseHelena .
  
  # Ensure all are royalty
  FILTER (?margareteSophie rdf:type dbo:RoyalFamilyMember)
  FILTER (?philippChild rdf:type dbo:RoyalFamilyMember)
  FILTER (?spouseHelena rdf:type dbo:RoyalFamilyMember)
  FILTER (?grandchildPhilipp rdf:type dbo:RoyalFamilyMember)
  
  # Find the child of the parent (i.e., grandchild of Margarete Sophie) who is royalty
  ?parentChild dbo:child ?childOfParent .
  ?childOfParent dbo:child ?childOfChild .
  
  FILTER (?childOfChild rdf:type dbo:RoyalFamilyMember)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childWar ?yamazaBirthplaceEntity ?koichiroWar
WHERE {
  # Toyotomi Hideyoshi's child and their war
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  ?child dbo:participatedIn ?childWar .

  # Yamaza Enjirō's birthplace entity
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:location ?yamazaBirthplaceEntity .

  # Koichirō's war
  ?koichiro dbo:birthName ""Koichirō""^^xsd:string .
  ?koichiro dbo:participatedIn ?koichiroWar .
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  # Find Snoop Dogg's birth name
  dbr:Snoop_Dogg dbo:birthName ?snoopBirthName .
  
  # Find Joey Badass's birth name
  dbr:Joey_Badass dbo:birthName ?joeyBirthName .

  # Find the writer of ""The Live Anthology"" who is also a musical artist
  ?writer dbo:profession dbr:Musical_artist ;
          dbo:work ?liveAnthology .
  
  # Ensure the work is ""The Live Anthology""
  FILTER(STRSTARTS(LCASE(?liveAnthology), LCASE(""the live anthology"")))

  # Find the associated musical artist with both birth names
  ?musicalArtist dbo:associatedWith ?snoopBirthName ;
                 dbo:associatedWith ?joeyBirthName .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?constance a dbo:Monarch ;
             dbo:spouse ?rogerII .
  
  ?child1 dbo:parent ?constance, ?rogerII ;
         a dbo:Monarch .

  ?child1 dbo:spouse ?spouse .

  ?royalChild dbo:parent ?spouse ;
              a dbo:Monarch .

  ?williamI a dbo:Monarch ;
            dbr:William_I_of_Sicily .
  
  ?child2 dbo:parent ?williamI ;
          dbo:spouse ?spouse .

  ?referencePerson dbo:officeHolder ?office ;
                   a dbo:Monarch ;
                   dbo:parent ?child2 .

  ?royalChild dbo:father ?father .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native
WHERE {
  # Find the producer of ""Storm in a Teacup"" (film)
  ?film dbo:producer ?producer .
  FILTER(STRSTARTS(LCASE(?film), LCASE(""storm_in_a_teacup_(film)"")))

  # Find Steven Kapur's musical work
  ?kapur dbo:profession dbr:Composer ;
         dbo:work ?musicalWork .
  FILTER(CONTAINS(LCASE(?kapur), LCASE(""steven_kapur"")))
  
  # Ensure the producer is also a writer of the musical work
  ?producer dbo:writer ?musicalWork .

  # Find the birthplace of the producer
  ?producer dbp:birthPlace ?birthPlace .

  # Determine who is native to that place
  ?native dbo:nativeLabel ?nativeLabel ;
          dbo:nationality ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?countryOfWork
WHERE {
  # Find Chiang Ching-kuo and his child who is a politician
  dbr:Chiang_Ching-kuo dbo:child ?politician .
  ?politician rdf:type dbo:Politician .

  # Get the birthplace of this politician
  ?politician dbo:birthPlace ?birthPlace .

  # Find Hu Jieqing and her spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?writerSpouse .
  ?writerSpouse rdf:type dbo:Writer .

  # Get the country associated with the work of this writer
  ?writerSpouse dbo:workLocation ?countryOfWork .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Step 1: Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        a dbo:Film .

  # Step 2: Find players in the film who are soccer players and athletes
  ?film dbo:actor ?player .
  ?player dbo:sport dbr:Soccer ;
          a dbo:Athlete .

  # Step 3: Find person born on Marcelo Sarmiento's birthday, who is a soccer player and manager
  ?person dbp:birthday ?birthday ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_Manager .
  ?marceloSarmiento dbp:birthday ?birthday ;
                    a dbo:Person .

  # Step 4: Ensure this person was part of the team for the film
  ?film dbo:team ?person .

  # Step 5: Identify an athlete born on February 22, 1955
  ?athlete dbp:birthday ""1955-02-22""^^xsd:date ;
           a dbo:Athlete .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego in comics
  VALUES (?shadowAlterEgo) { dbr:Lamont_Cranston }

  # Actor-politician from Ab Kya Hoga
  VALUES (?actorPolitician) { dbr:Manoj_Tiwari }

  # Richard Grant Esterhuysen (Richard E. Grant)
  VALUES (?richardGrant) { dbr:Richard_E._Grant }

  # Find a professional who is an actor and matches the criteria
  ?professional dbo:profession dbr:Actor .
  
  # Check if this professional has any connection to the above entities
  OPTIONAL {
    ?professional dbo:alterEgo ?shadowAlterEgo .
  }
  OPTIONAL {
    ?professional dbo:actorInFilmOrTV ?richardGrant .
  }
  OPTIONAL {
    ?professional dbo:actorInFilmOrTV ?actorPolitician .
  }

  # Ensure at least one connection exists
  FILTER (?shadowAlterEgo || ?richardGrant || ?actorPolitician)
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .

  # Parent's father (Dorothea's grandfather)
  ?parent dbo:father ?grandfather .

  # Grandfather is royalty and commander in Siege of Padua
  ?grandfather a dbo:Monarch ;
              dbo:occupation dbr:Siege_of_Padua .

  # Philip I of Castile and his child who is royalty
  dbr:Philip_I_of_Castile dbo:child ?child .
  ?child a dbo:Monarch .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?force ?settlement WHERE {
  # Awardee of an award by the United States Congress
  ?awardee dbo:award dbr:United_States_Congress_Award .
  
  # War related to the awardee
  ?awardee dbo:participatedInWar ?war .

  # Force associated with Quincy Adams Gillmore's award
  ?gillmoreAwardRecipient dbo:award dbr:Award_of_Quincy_Adams_Gillmore .
  ?gillmoreAwardRecipient dbo:servedWithForce ?force .

  # Person deceased on 1850-08-05
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .

  # Ensure the person is related to the awardee or Gillmore's award recipient
  FILTER (?awardee = ?person || ?gillmoreAwardRecipient = ?person)

  # Settlement and American entity in the birthplace
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfVictorStanley
WHERE {
  # Step 1: Victor Stanley (Royal Navy officer)
  ?victorStanley a dbo:MilitaryPerson ;
                 foaf:name ""Victor Stanley"" ;
                 dbo:spouseOrPartner ?parentOfVictorStanley .

  # Step 2: Alumnus of Eton College
  ?alumnus dbr:Eton_College dbo:alumni ?childPolitician .
  
  # Step 3: Child who is a politician
  ?childPolitician a dbo:Politician ;
                  dbo:parent ?politicianParent .

  # Step 4: Politician and office holder
  ?politicianParent a dbo:Politician, dbo:OfficeHolder .

  # Step 5: Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?childOfPolitician .
  
  # Linking the parent from step 4 to step 5
  ?politicianParent dbo:parent ?childOfPolitician .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  # Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland 
    dbo:nativePlace ?nativePlace ;
    dbo:deathPlace dbr:Switzerland .

  # Nicholas II of Russia
  dbr:Nicholas_II_of_Russia 
    dbo:nationality ?nationality .
  
  FILTER (?nativePlace = ?nationality)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander ?successor ?michałKazimierzPacRole
WHERE {
  # Find the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:creator ?writer .

  # Find a commander in the Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?battle dbo:commander ?commander .

  # Find the successor who is a politician and office holder
  ?successor dbo:predecessor ?commander ;
             a dbo:Politician ;
             dbo:officeHolder ?office .

  # Michał Kazimierz Pac's role or connection
  ?michałKazimierzPacRole dbr:Micahel_Kazimierz_Pac .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?election dbo:electionDate ?date ;
            dbo:winner ?leader ;
            dbo:region dbr:Galicia .

  FILTER(YEAR(?date) = 2009)

  ?leader dbo:nationality dbr:Spain ;
          dbo:officeHolderOf ?office .

  ?office dbo:positionTitle ""Leader""@en .
  
  ?tenant dbo:residenceCountry ?country ;
          dbo:nationality dbr:Spain ;
          dbo:administration ?admin .

  FILTER(?country rdf:type dbo:Country)

  ?admin dbo:head ?leader .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Alfonso VI of León and Castile's great-grandchild
  ?alfonsoVI a dbo:Monarch ;
             foaf:name ""Alfonso VI of León and Castile""@en .
  
  ?alfonsoVIChild dbo:spouse|dbo:child ?alfonsoVII .
  ?alfonsoVII dbo:spouse|dbo:child ?alfonsoVIII .
  ?alfonsoVIII dbo:spouse|dbo:child ?greatGrandchild .

  # Roger II of Sicily's child through his parent
  ?rogerII a dbo:Monarch ;
           foaf:name ""Roger II of Sicily""@en .
  
  ?parentOfRogerII dbo:child ?rogerII .
  ?parentOfRogerIIChild dbo:spouse|dbo:child ?rogerIIChild .

  # Reference to William I
  ?williamI a dbo:Monarch ;
            foaf:name ""William I""@en .
  
  ?officeHolder dbo:monarch ?williamI ;
                a dbo:OfficeHolder .

  ?fatherOfOfficeHolder dbo:spouse|dbo:child ?officeHolder .

  # Find the common individual
  FILTER (?greatGrandchild = ?rogerIIChild)
  FILTER (?greatGrandchild = ?fatherOfOfficeHolder)

  BIND(?greatGrandchild AS ?individual)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfFaisalChild ?parentOfMunaGrandchild
WHERE {
  # Find a child of Prince Faisal bin Hussein who is royalty
  ?faisalChild dbo:child <http://dbpedia.org/resource/Faisal_bin_Hussein> .
  ?faisalChild rdf:type dbp:Royal .

  # Find the parent of that child (who is royalty)
  ?parentOfFaisalChild dbo:parent ?faisalChild .
  
  # Find a child of Princess Muna al-Hussein who is royalty
  ?munaChild dbo:child <http://dbpedia.org/resource/Muna_al-Hussein> .
  ?munaChild rdf:type dbp:Royal .

  # Find a child of that child (who is royalty)
  ?grandchild dbo:child ?munaChild .
  ?grandchild rdf:type dbp:Royal .

  # Find the parent of the second child (who is royalty)
  ?parentOfMunaGrandchild dbo:parent ?grandchild .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's office of commander in a military conflict and societal event
  ?commanderOffice dbo:positionTitle ?title .
  ?commanderOffice dbo:agent dbr:Manuel_Pinto_da_Costa .
  ?conflict dbo:participant ?commanderOffice .
  ?conflict rdf:type [ 
    a dbo:MilitaryConflict ;
    a dbo:SocietalEvent
  ] .

  # Leader of the Conservative Republican Party (Spain) in 2003 Madrid City Council election
  ?leader dbr:Conservative_Republican_Party_(Spain)/dbo:member .
  ?election dbo:electedOfficeHolder ?leader .
  ?election dbo:date ""2003""^^xsd:gYear .
  ?residence dbo:resident ?leader .

  # Linking the commander's office to the leader's residence
  ?commanderOffice dbo:location ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Step 1: Find Bob Thompson's birth name and ensure he is a musical artist
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbp:birthName ?birthName .

  # Step 2: Identify The Shadow as a fictional character created by Walter B. Gibson
  ?shadow a dbo:FictionalCharacter, dbo:ComicsCharacter ;
          dbo:creator dbr:Walter_B._Gibson ;
          foaf:name ""The Shadow"" .

  # Step 3: Determine the producer of Coke Studio Philippines and their profession
  ?producer dbp:profession ?profession ;
            dbp:worksFor dbr:Coke_Studio_Philippines .

  # Ensure the birth name matches with The Shadow's alter ego creation
  ?alterEgo foaf:name ?birthName ;
             dbo:creator ?shadow .

  # Ensure the producer's profession is related to music (e.g., musician, band)
  FILTER(?profession = ""Musician"" || ?profession = ""Band"")

  # Find the band associated with Bob Thompson
  ?band a dbo:MusicalBand ;
        dbo:member ?bob .
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Player is an actor in the film and also a soccer player
  ?player dbo:actorIn ?film ;
          rdf:type dbo:SoccerPlayer .

  # Find Marty Pollio's birthday
  ?martyPollio dbp:birthday ?birthdayMartyPollio ;
               rdf:type dbo:Person .
  
  # Player is associated with someone born on Marty Pollio's birthday
  ?player dbo:spouse ?personBornOnMartyBirthday ;
          ?film dbo:actor ?personBornOnMartyBirthday .

  # Find Marcelo Sarmiento's birthday
  ?marceloSarmiento dbp:birthday ?birthdayMarceloSarmiento ;
                    rdf:type dbo:SoccerPlayer, dbo:SoccerManager .
  
  # Player is part of a team managed by someone born on Marcelo Sarmiento's birthday
  ?team dbo:manager ?marceloSarmiento ;
        dbo:player ?player .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's office of commander in a military conflict
  ?commanderOffice dbo:officeHolder dbr:Manuel_Pinto_da_Costa ;
                   dbo:position ""Commander"" ;
                   dbo:relatedEvent ?militaryConflict .
  
  # Ensure the military conflict is also a societal event
  ?militaryConflict rdf:type dbo:SocietalEvent .

  # Alberto Ruiz-Gallardón's residence
  ?residence dbo:tenant dbr:Alberto_Ruiz-Gallardón .

  # Leader's office of a political party related to Miguel Maura
  ?partyLeaderOffice dbo:officeHolder ?leader ;
                     dbo:position ""Leader"" .
  
  ?politicalParty dbo:leader ?leader ;
                  rdf:type dbo:PoliticalParty .
  
  ?politicalParty dbr:Miguel_Maura .

  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .

  # Link the residence and office of the leader
  ?residence dbo:location ?partyLeaderOffice .

  # Filter to ensure all conditions are met
  FILTER (?commanderOffice = ?partyLeaderOffice)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Find Nate Newton and his associated musical artist
  dbr:Nate_Newton (dbo:musicalArtist) ?artist .

  # Step 2: Check if the artist is associated with ""Nothing to Gein""
  OPTIONAL { ?album dbo:title ""Nothing to Gein"" .
             ?album dbo:performer ?artist } .

  # Step 3: Find the producer of ""Nothing to Gein"" who is an organization and a group
  ?producer (dbo:producedAlbum) ?album ;
            rdf:type dbo:Organization, dbo:Group .

  # Step 4: Identify band members of this producer
  ?bandMember dbo:memberOf ?producer .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the war/military conflict involving ""The Triple X's""
  ?tripleXsEvent a dbo:MilitaryConflict ;
                 dbo:participatingMilitaryForce ?tripleXsForce .

  # Find the event involving Robert Calder
  ?calderEvent a dbo:Event, dbo:SocietalEvent ;
               dbo:participatingMilitaryForce ?calderForce .

  # Find the war/military conflict involving William Bayne
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:commander ?commander .

  # Link these events/forces to find common commander
  FILTER(?tripleXsEvent = ?calderEvent)
  FILTER(?tripleXsForce = ?calderForce)
  FILTER(?calderEvent = ?bayneWar)

  # Assuming ""The Triple X's"" is a known entity in DBpedia, replace with actual resource if available
  ?tripleXsEvent dbr:KnownResourceForTripleXs .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantCountry
WHERE {
  # Anxo Quintana's office as a leader in an event related to the Spanish Socialist Workers' Party
  ?event dbo:leader dbr:Anxo_Quintana .
  ?event dbo:organization dbr:Spanish_Socialist_Workers'_Party .

  # The tenant of this administration must be Spanish
  ?tenant dbp:nationality dbr:Spain .
  
  # The residence should be a country
  ?tenant dbo:residence ?country .
  ?country rdf:type dbo:Country .

  # Link the tenant to the event
  ?event dbo:member ?tenant .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Step 1: Identify Alfonso IV of Aragon
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?mother .
  
  # Step 2: Find his children who are royalty
  ?child dbo:parent dbr:Alfonso_IV_of_Aragon ;
         a dbo:Monarch .

  # Step 3: Identify Martin of Aragon's parent
  dbr:Martin_of_Aragon dbo:parent ?martinParent .
  
  # Step 4: Determine the father of this parent
  ?martinParent dbo:father ?grandFather .

  # Step 5: Find the child of this father who is royalty
  ?royalChild dbo:parent ?grandFather ;
              a dbo:Monarch .

  # Ensure the child found in step 2 and step 5 are the same
  FILTER (?child = ?royalChild)

  # Get the real name of the child
  ?child rdfs:label ?childName .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego in comics
  VALUES (?alterEgo) { dbr:Lamont_Cranston }

  # Richard E. Grant (Richard Grant Esterhuysen)
  VALUES (?richardGrant) { dbr:Richard_E._Grant }
  
  # Shatrughan Sinha's profession
  ?sinha dbo:profession dbr:Actor .

  # Find the actor who played in a movie that is also a television show
  ?movie dbo:type dbr:Film .
  ?movie dbo:starring ?actor .
  ?tvShow dbo:type dbr:Television_Show .
  ?tvShow dbo:basedOn ?movie .

  # Ensure the actor matches Richard E. Grant's profession and Shatrughan Sinha's profession
  ?actor dbo:profession dbr:Actor ;
         dbp:name ?name .

  FILTER (?name = ""Richard E. Grant"" || ?name = ""Shatrughan Sinha"")

  # Find the professional who matches all criteria
  ?professional dbo:alterEgo ?alterEgo .
  ?professional dbo:actorIn ?movie .
  ?professional dbo:profession dbr:Actor .

  FILTER (?professional != ?richardGrant && ?professional != ?sinha)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfPerson1945 ?associatedArtistCurran ?realNameBandKimWilson
WHERE {
  # Step 1: Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthday ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Get the band of this person
  ?bandOfPerson1945 dbo:member ?person .

  # Step 3: Identify Nicholas Michael Curran and find his associated musical artists
  dbr:Nicholas_Michael_Curran dbo:birthday ?curranBirthday ;
                              rdf:type dbo:MusicalArtist .
  
  ?associatedBandCurran dbo:member dbr:Nicholas_Michael_Curran .
  ?associatedArtistCurran dbo:band ?associatedBandCurran .

  # Step 4: Determine the real name of the band of Kim Wilson
  dbr:Kim_Wilson dbo:birthday ?wilsonBirthday ;
                rdf:type dbo:MusicalArtist .
  
  ?bandOfKimWilson dbo:member dbr:Kim_Wilson .
  ?realNameBandKimWilson rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = ""en"")
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:dateOfDeath ?deathDate .
  
  FILTER (?deathDate = ""2020-06-18""^^xsd:date)

  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?location .

  ?location a dbo:Settlement ;
            dbp:country dbr:England .

  ?work dbo:author ?person ;
        a dbo:Film ;
        a dbo:TelevisionShow .

  ?parent dbo:child ?person .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Linda Sue Cobb
  ?linda a dbo:Person ;
         foaf:name ""Linda Sue Cobb""@en .
  
  # Identify her spouse
  ?linda dbo:spouse ?spouse .

  # Find movies produced by the spouse
  ?movie dbo:producer ?spouse ;
         dbo:award ?award .

  # Check if the award is related to Ian Gregson
  ?award dbo:recipient dbr:Ian_Gregson .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?currentManager WHERE {
  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthday ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  # Check if this person was the manager in the 2007–08 VfL Bochum season
  ?playerSeason dbo:manager ?person ;
                dbo:sportTeam dbr:VfL_Bochum_Season_2007-08 .

  # Ensure the player is part of a soccer club
  ?playerSeason rdf:type dbo:SoccerClub .

  # Find the current manager of that soccer club
  ?currentSeason dbo:manager ?currentManager ;
                 dbo:sportTeam dbr:VfL_Bochum .

  # Ensure the person is native to Germany (leader of West Germany)
  ?person dbp:nationality dbr:Germany .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find members of Khlyst who are musical artists
  ?member dbo:bandMemberOf dbr:Khlyst_(band) .
  ?member a dbo:MusicalArtist .

  # Step 2: Find associated musical artist of these members
  ?member dbo:associatedWith ?associatedArtist .
  
  # Step 3: Identify bands and groups related to Burnt by the Sun
  dbr:Burnt_by_the_Sun dbo:reference ?group .
  ?group a dbo:Band ;
         a dbo:Group ;
         a dbo:Organization .

  # Step 4: Find band members of these associated artists who are in such bands/groups
  ?associatedArtistMember dbo:bandMemberOf ?associatedArtist .
  ?associatedArtistMember dbo:bandMemberOf ?group .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Step 2: Identify the award related to New York
  ?award dbo:location dbr:New_York_(state) .
  ?award dbo:type dbr:Region ;
         dbo:type dbr:State ;
         dbo:type dbr:Settlement .

  # Step 3: Find the band from New York that won this award
  ?band dbo:awardsReceived ?award ;
        dbo:hometown dbr:New_York_City .

  # Step 4: Determine the musical artist associated with GS9
  ?member dbo:associatedBand ?band ;
          dbo:memberOf dbr:GS9 ;
          rdf:type dbo:MusicalArtist .
  
  # Linking all parts together
  ?person dbp:birthday ?birthName .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?person ?actor WHERE {
  # Find the team of Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?team .

  # Find Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbp:birthday ?marceloSarmientoBirthday .

  # Find a person who is both a soccer player and manager, born on Marcelo Sarmiento's birthday
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = YEAR(?marceloSarmientoBirthday) && MONTH(?birthDate) = MONTH(?marceloSarmientoBirthday) && DAY(?birthDate) = DAY(?marceloSarmientoBirthday))
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:occupation dbr:Soccer_manager .

  # Find a film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .

  # Find an actor who is also a soccer player and athlete in that film
  ?actor dbo:role ?film .
  ?actor dbo:occupation dbr:Soccer_player .
  ?actor dbo:occupation dbr:Athlete .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  # Bobby Shmurda's associated musical artist and their band member who is a musical artist
  ?artist dbo:associatedBandMember ?bandMember .
  ?artist dbo:birthName ?bobbyShmurdaAssociatedArtist .
  ?bobbyShmurda dbr:Bobby_Shmurda ;
                dbo:associatedMusicalArtist ?artist .
  
  # Person born as the birth name of a native of Florida who is a musical artist
  ?person dbp:birthName ?nativeOfFloridaBirthName .
  ?nativeOfFlorida dbo:nativePlace ?place .
  ?place rdfs:label ""Florida""@en .
  ?person dbo:birthName ?bobbyShmurdaAssociatedArtist .

  # Native of the award's region (American state and settlement in New York)
  ?award dbo:recipient ?bandFromNY .
  ?region dbo:state ?americanState ;
          dbo:settlement ?newYorkSettlement .
  ?americanState rdfs:label ""New York""@en .
  ?newYorkSettlement rdfs:label ?nySettlementLabel .
  
  # Awardee band from New York (state)
  ?bandFromNY dbo:nativePlace dbr:New_York_City ;
              dbo:awardReceived ?award .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  
  ?gillmoreAward dbo:recipient ?person ;
                 rdfs:label ""Gillmore Medal""@en .

  ?gillmoreAward dbo:militaryForce ?force .

  ?congressAward dbo:recipient ?person ;
                 dbo:givenBy dbr:United_States_Congress .
  
  ?congressAward dbo:war ?war .

  ?person dbo:birthPlace ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:United_States .

  BIND(?settlement AS ?entity)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?force
WHERE {
  # Find wars involving a commander related to the Sinking of Prince of Wales and Repulse
  ?sinking dbo:partOf ?militaryConflict .
  ?militaryConflict dbo:relatedTo ?war .
  
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?sinking .

  # Find force associated with an awardee of the Commander of the Order of the British Empire
  ?awardee dbo:awardReceived dbr:Commander_of_the_Order_of_the_British_Empire .
  ?force dbo:commandedBy ?awardee .

  FILTER(?militaryConflict = dbr:Sinking_of_Prince_of_Wales_and_Repulse)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Determine the parent of this child (either Mariclare or her spouse)
  ?parent dbo:parent ?child .
  
  # Step 4: Identify Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .

  # Step 5: Find a professional in that same field
  ?professional dbo:profession ?eugeneProfession .

  # Step 6: Determine the parent of this professional
  ?parent2 dbo:parent ?professional .
  
  # Step 7: Identify the decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            dbo:causeOfDeath ?cause .

  # Step 8: Find a work (movie) associated with this decedent
  ?work dbo:creator ?decedent .
  
  # Step 9: Determine the actor of that movie
  ?actor dbo:actedIn ?work .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find Yurii Khmelnytsky and his successor
  ?yuriikhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  
  ?successor dbo:succeededBy ?yuriikhmelnytsky .

  # Find the commander in the Battle of Vienna
  ?battle dbr:Battle_of_Vienna ;
         dbo:commander ?commander .

  # Link the successor to the commander role
  ?successor = ?commander .

  # Find a writer associated with these figures or events
  ?writer dbo:wikiPageWikiLink ?successor .
  ?writer dbo:wikiPageWikiLink ?battle .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalChild WHERE {
  # Step 1: Find child of Ferdinand Albert II who is royalty
  ?childFerdinand dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  FILTER EXISTS { ?childFerdinand dbo:royalty true . }

  # Step 2: Find spouse of this child
  ?spouse1 dbo:spouse ?childFerdinand .

  # Step 3: Find child of Princess Antoinette who is royalty
  ?childAntoinette dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  FILTER EXISTS { ?childAntoinette dbo:royalty true . }

  # Step 4: Find spouse of this child
  ?spouse2 dbo:spouse ?childAntoinette .

  # Step 5: Find parent of the first identified child and their child
  ?parentChildFerdinand dbo:child ?childFerdinand .
  ?finalChild dbo:parent ?parentChildFerdinand .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?war ?countryResidence
WHERE {
  # Find a commander involved in the French Revolutionary Wars
  ?commander dbo:nationality dbr:Poland ;
            dbo:occupation dbr:Military_person ;
            dbo:participatedInWar ?war .
  
  FILTER regex(str(?war), ""French Revolutionary War"", ""i"")

  # Find an athlete from Łódź who is Polish
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź ;
           dbo:occupation dbr:Athlete .

  # Link the athlete to a residence that is a country
  ?athlete dbo:residence ?countryResidence .
  
  FILTER (isBlank(?countryResidence) || 
          (str(?countryResidence) = str(dbo:Country)))

  # Ensure the commander and athlete are related through nationality or another logical link
  OPTIONAL { ?commander dbp:nativeOf dbr:Łódź }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: GS9 members who are artists and musical artists
  ?gs9Member dbo:type dbr:MusicalArtist ;
             dbo:memberOf dbr:GS9 ;
             dbo:occupation dbr:Artist .

  # Step 2: Associated musical artists of the GS9 member
  ?associatedArtist dbo:associatedBandOrMusician ?gs9Member ;
                   a dbo:MusicalArtist .

  # Step 3: Band members of the associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist ;
              a dbo:MusicalArtist .

  # Step 4: Awards related to New York State
  ?award dbo:type dbr:Region ;
         dbp:country ""United States""^^xsd:string ;
         dbo:stateOrProvince dbr:New_York_(state) ;
         dbo:settlement dbr:New_York_City .

  # Step 5: Awardees who are bands
  ?awardee dbo:award ?award ;
           a dbo:Band .

  # Step 6: Native artists from Florida
  ?nativeArtist dbo:nationality dbr:United_States ;
                dbo:birthPlace dbr:Florida ;
                a dbo:MusicalArtist .

  # Step 7: Match birth names
  ?awardee dbp:birthName ?birthName .
  ?nativeArtist dbp:birthName ?birthName .

  # Final condition to ensure all criteria are met
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 2: Identify Pickett's Charge war
  dbr:Picketts_Charge dbo:partOfWar ?war .

  # Ensure it is a societal event
  ?war rdf:type dbo:SocietalEvent .

  # Step 3: Determine the military force involved in Pickett's Charge
  dbr:Picketts_Charge dbo:militaryForce ?militaryForce .

  # Step 4: Find a ruling party member that is a political party and organization in the death place
  ?partyMember rdf:type dbo:PoliticalParty ;
               dbo:memberOfParliament ?rulingParty .
  
  ?rulingParty dbp:country ?deathPlaceCountry .
  
  FILTER(?deathPlaceCountry = ?deathPlace)
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War and its commander
  ?war dbo:participatingMilitaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  # Commander is a societal event, an event, and a television show
  ?commander rdf:type dbo:SocietalEvent ;
             rdf:type dbo:Event ;
             rdf:type dbo:TelevisionShow .

  # Maria Anna of Bavaria (born 1574) and her child who is royalty
  dbr:Maria_Anna_of_Bavaria_(1574-1616) dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Royalty .

  # Archduke Charles Joseph of Austria's parent and their father
  ?archdukeParent dbo:parentOf dbr:Archduke_Charles_Joseph_of_Austria ;
                  dbo:father ?commander .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Find wars associated with William Bayne
  ?war dbo:militaryConflictOf dbr:William_Bayne_(Royal_Navy_officer) .
  
  # Step 2: Find military forces of these wars
  ?force dbo:participatedIn ?war .

  # Step 3: Find awardees of Knight Commander of the Order of the Bath involved in these forces' wars
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?awardeeWar dbo:militaryConflictOf ?force .
  
  # Step 4: Find military forces of the awardee's war
  ?awardeeForce dbo:participatedIn ?awardeeWar .

  # Step 5: Identify ""The Triple X's"" and their associated wars
  ?tripleX dbr:The_Triple_X_s .
  ?tripleXWar dbo:militaryConflictOf ?tripleX .
  
  # Step 6: Find the military force of ""The Triple X's"" war
  ?tripleXForce dbo:participatedIn ?tripleXWar .

  # Step 7: Find the commander in the war involving ""The Triple X's""
  ?commander dbo:commanderOf ?tripleXForce .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:spouse ?margarete .
  ?margarete rdfs:label ""Margarete Sophie of Austria""@en .

  # Predecessor of Carl, Duke of Württemberg
  ?predecessor dbp:successor ?carl .
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .

  # Child of the child of the child of Alexander of Württemberg
  ?alexander dbo:child ?grandchild1 .
  ?grandchild1 dbo:child ?grandchild2 .
  ?grandchild2 dbo:child ?childOfChild .
  ?alexander rdfs:label ""Alexander of Württemberg""@en .

  # Ensure the child is a royalty
  ?childOfChild rdf:type dbo:Monarch .

  # Link parent and predecessor
  FILTER (?parent = ?predecessor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find Janusz Kamiński's awards and nominations
  ?award dbo:recipient dbr:Janusz_Kamiński .
  
  # Step 2: Identify movies that are works and films with Audrey Hepburn and Iliza Shlesinger
  ?movie dbo:starring dbr:Audrey_Hepburn ;
         dbo:starring dbr:Iliza_Shlesinger ;
         a dbo:Film .

  # Step 3: Find actors in these movies
  ?actor dbo:actedIn ?movie .
  
  # Step 4: Get the spouse of one such actor
  ?actor dbp:spouse ?spouse .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Predecessor of Stephen V of Hungary
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Parent of the father (royalty) of the spouse of Maria of Bytom
  ?spouseOfMaria dbo:spouse dbr:Maria_of_Bytom .
  ?fatherOfSpouse dbo:child ?spouseOfMaria .
  ?parentOfFather dbo:child ?fatherOfSpouse .
  
  # Spouse of the father of Philip I, Prince of Taranto
  ?fatherOfPhilip dbo:child dbr:Philip_I,_Prince_of_Taranto .
  ?spouseOfFather dbo:spouse ?fatherOfPhilip .

  # Find the child of the child (who is royalty)
  ?parentOfFather dbo:child ?royalParent .
  ?royalParent dbo:child ?child .
  ?child dbo:child ?childOfChild .
  
  FILTER (?predecessor = ?parentOfFather && ?spouseOfFather = ?royalParent)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember ?writer ?album
WHERE {
    # Step 1: Find an artist associated with R.E.M.
    dbr:R.E.M. dbo:associatedMusicalArtist ?artist .
    
    # Step 2: Check if this artist has any band members
    ?artist dbo:bandMember ?bandMember .

    # Step 3: Identify the writer of the album ""Sappy""
    dbr:Sappy dbo:writer ?writer ;
              a dbo:MusicalWork, dbo:Album .
    
    # Step 4: Check if this writer is a band member of the artist found in step 1
    ?bandMember dbo:member ?artist .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Golden Master Series alter ego
  ?series dbr:The_Golden_Master_Series ;
          dbo:character ?alterEgo .
  
  # Actor of the album of What You Know (T.I. song)
  ?album dbo:title ""What You Know"" ;
         dbo:actor ?actor1 .

  # Movie with the author of Smartbomb
  ?book dbr:Smartbomb ;
        dbo:author ?author .
  ?movie dbo:starring ?author ;
         dbo:starring ?actor2 .

  # Ensure all roles are played by the same professional
  FILTER (?alterEgo = ?actor1 && ?actor1 = ?actor2)
}
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?force ?writer
WHERE {
  # Find Jean Baptist, Comte d'Arco as a commander in a war that is also a TV show and societal event
  ?war dbo:type dbr:War .
  ?war dbo:isBasedOn dbr:Television_Show .
  ?war dbo:relatedEvent dbr:Societal_Event .
  ?commander dbo:commanded ?war .
  ?commander rdfs:label ""Jean Baptist, Comte d'Arco""@en .

  # Find the successor who is a politician and office holder
  ?successor dbo:succeededBy ?commander .
  ?successor dbo:type dbr:Politician .
  ?successor dbo:officeHolder true .

  # The force or conflict involving Michał Kazimierz Pac
  ?force dbo:participatedIn ?war .
  ?force dbo:member dbr:Micahel_Kazimierz_Pac .

  # Reference to the writer of a work by George Ducas
  ?work dbo:author dbr:George_Ducas .
  ?writer dbo:authored ?work .
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Administration of Spanish Socialist Workers' Party
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Tenant of the administration
  ?administration dbo:member ?tenant ;
                  dbo:politicalParty ?party .

  # Residence of Álvaro Quirós as a country
  ?alvaro dbo:residence ?country .
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  FILTER (isLiteral(?country) && lang(?country) = ""en"" && contains(str(?country), ""Country""))

  # Office of the leader of the administration as an event
  ?anxo dbo:office ?event ;
        dbo:positionTitle ?title .
  ?anxo rdfs:label ""Anxo Quintana""@en .
  FILTER (isLiteral(?title) && lang(?title) = ""en"" && contains(str(?title), ""leader""))

  # Ensure the tenant is common across all conditions
  FILTER (?tenant = ?alvaro)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kimBand ?claptonBandMember ?associatedArtist ?nickPersona
WHERE {
  # Kim Wilson's band
  dbr:Kim_Wilson dbo:band dbr:?kimBand .

  # Eric Clapton's band member and associated artist
  ?claptonBandMember dbo:memberOf dbr:Eric_Clapton .
  ?associatedArtist dbo:associatedMusicalArtist ?claptonBandMember .

  # Nick Curran as a musical artist
  dbr:Nick_Curran dbo:birthPlace ?nickBirthPlace ;
                  rdf:type dbo:MusicalArtist .
  ?nickPersona dbo:personaOf dbr:Nick_Curran .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?album rdf:type dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  ?film rdf:type dbo:Film ;
        rdfs:label ""The Shadow""^^xsd:string .

  ?actor rdf:type dbo:Actor ;
         dbo:profession dbr:Acting .

  ?work dbo:album ?album ;
        dbo:actor ?actor .

  ?shadowWork dbo:film ?film ;
              dbo:alterEgo dbr:Lamont_Cranston ;
              dbo:actor ?actor .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  # Step 1: Find Bob Thompson's birth name
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson"" ;
       dbp:birthday ?birthDate .
  
  OPTIONAL { ?bob dbp:birthName ?birthName . }
  
  # Step 2: Identify The Shadow's alter ego professional
  ?shadowAlterEgo a dbo:Person ;
                  dbp:alterEgo ""The Shadow"" ;
                  foaf:name ?professionalName .

  # Step 3: Find the producer of Coke Studio Philippines and their band
  ?producer a dbo:Musician ;
            dbo:profession ?profession ;
            dbo:band ?band .
  
  ?cokeStudio dbr:Coke_Studio_Philippines ;
              dbo:producer ?producer .

  # Step 4: Link these entities to find the common musical artist
  ?musicalArtist a dbo:MusicalArtist ;
                 foaf:name ?birthName ;
                 dbo:profession ?professionalName ;
                 dbo:band ?band .
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInCountry (GROUP_CONCAT(DISTINCT ?partyRoy; separator="", "") AS ?partiesOfRoyAndFather)
WHERE {
  # Daniel Elahi Galán's country
  OPTIONAL { 
    dbr:Daniel_Elái_Galán dbo:nationality ?country .
    ?person dbo:birthPlace ?country .
    BIND(?person AS ?entityInCountry)
  }

  # Roy Barreras' party
  OPTIONAL {
    dbr:Roy_Barreras dbo:party ?partyRoy .
  }
  
  # Sofía Petro's father's party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?fatherSofia .
    ?fatherSofia dbo:party ?partyFather .
    BIND(?partyFather AS ?partyRoy) # Reuse variable for concatenation
  }
}
GROUP BY ?entityInCountry
```",5,5,6,2,3,2,3,28,0,1,1,0.0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Philip, Despot of Romania and his parent who is royalty
  ?philip a dbr:Philip,_Despot_of_Romania ;
          dbo:parent ?parent_philip .
  
  FILTER EXISTS { ?parent_philip dbo:occupation dbr:Royalty }
  
  # Step 2: Identify the grandparent of Philip who is royalty
  ?grandparent_philip dbo:child ?parent_philip .
  FILTER EXISTS { ?grandparent_philip dbo:occupation dbr:Royalty }

  # Step 3: Identify a child of Béla IV of Hungary who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?child_belav .
  FILTER EXISTS { ?child_belav dbo:occupation dbr:Royalty }
  
  # Step 4: Identify the grandchild of Béla IV who is royalty and has a parent who is royalty
  ?grandchild_belav dbo:parent ?child_belav ;
                   dbo:occupation dbr:Royalty .
  
  FILTER EXISTS { ?grandchild_belav dbo:parent ?parent_grandchild_belav }
  FILTER EXISTS { ?parent_grandchild",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton's book author who is a politician and office holder
  ?book dbo:author ?author .
  ?author dbo:occupation dbr:Politician .
  ?author dbo:officeHolder true .

  # Spouse of the author who is also a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse dbo:occupation dbr:Politician .
  ?spouse dbo:officeHolder true .

  # Commander in the war (disease and societal event)
  ?war rdf:type dbo:Disease, dbo:SocietalEvent .
  ?commander dbo:commanded ?war .
  
  # Owner of USS Arcadia who authored a work
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
  ?owner dbo:author ?work .

  # Resident of Chappaqua, New York, who is a politician and office holder
  ?resident dbo:residence dbr:Chappaqua,_New_York .
  ?resident dbo:occupation dbr:Politician .
  ?resident dbo:officeHolder true .

  # Connect the entities through their roles
  ?author = ?commander .
  ?owner = ?resident .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?powell dbo:birthPlace ?region .
  FILTER (STRSTARTS(STR(?region), ""http://dbpedia.org/resource/"") && 
          ((?region dbp:type dbr:Region) || (?region dbp:type dbr:AdministrativeRegion)))

  # Step 2: Find the birth place of an awardee related to Vince Gilligan
  ?gilligan dbo:awardReceivedBy ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Step 3: Find the author of El Deafo reference
  ?elDeafoReference dbo:author ?author .
  FILTER (STRSTARTS(STR(?author), ""http://dbpedia.org/resource/"") && 
          (?author dbp:nationality dbr:United_States))

  ?author dbo:birthPlace ?authorBirthPlace .

  # Step 4: Find the governor of Paulus Powell's birth place
  ?region dbo:governor ?governor .
  FILTER (STRSTARTS(STR(?governor), ""http://dbpedia.org/resource/"") && 
          (?governor dbp:occupation dbr:Politician))

  # Get the birthplace of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Saw Min Phyu's spouse
  ?spouse dbo:spouse ?sawMinPhyu .
  
  # Child of the spouse that is a royalty
  ?child dbo:child ?spouse ;
         dbp:royalty ""true""^^xsd:boolean .

  # Predecessor of this child
  ?predecessor dbo:predecessorOf ?child .

  # Parent of Min Hla Htut of Pyakaung
  ?parent dbo:parent ?minHlaHtut .
  
  # Spouse of the father (that is a royalty) of the child (that is a royalty) of Saw Shwe Khet
  ?father dbp:royalty ""true""^^xsd:boolean ;
          dbo:child ?sawShweKhetChild .
  ?sawShweKhetChild dbp:royalty ""true""^^xsd:boolean .

  ?spouse2 dbo:spouse ?father .

  # Linking the two parts
  FILTER(?parent = ?spouse)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Hon. Mary Frances Bowes-Lyon's parents
  VALUES (?mary) { dbr:Mary_Frances_Bowes-Lyon }
  
  ?mary dbo:childOf ?parent .
  
  # Claude Bowes-Lyon's children
  VALUES (?claude) { dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne }
  
  ?child dbp:father ?claude ;
         dbo:mother ?parent .

  # Filter for native of Middlesex
  ?parent dbo:birthPlace dbr:Middlesex .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find Kent Allard's alter ego (fictional character)
  ?character dbo:alterEgoOf dbr:Kent_Allard_(print) .

  # Step 2: Find the actor of ""High Society Blues"" and their claim to fame
  ?movie dbo:title ""High Society Blues""@en .
  ?actor dbo:starring ?movie ;
         dbo:claimToFame ?fameWork .

  # Step 3: Find the producer of Cora Sue Collins' notable work
  ?collinsWork dbo:producer ?professional ;
               dbo:claimToFame ?collinsFame .
  ?collins dbr:Cora_Sue_Collins ;
           dbo:work ?collinsWork .

  # Combine conditions to find the professional
  FILTER(?character = ?fameWork || ?character = ?collinsFame)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Step 1: Find Tony Hollings' birthday
  ?tonyHollings a dbo:Person ;
                dbp:birthday ?birthday .

  FILTER (str(?tonyHollings) = ""Tony_Hollings"") .

  # Step 2: Find the player with the same birthday and roles
  ?player a dbo:Person, dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          dbp:birthday ?birthday .

  # Step 3: Check if this player is also a manager of an organization
  ?organization a dbo:Organization, dbo:SportsClub, dbo:SportsTeam, dbo:SoccerClub ;
                dbp:name ""Hong Kong C"" ;
                dbo:manager ?player .
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find member of Khlyst (band) who is a musical artist
  ?member dbo:memberOf dbr:Khlyst_(band) .
  ?member rdf:type dbo:MusicalArtist .

  # Step 2: Find associated musical artist of this member
  ?associatedArtist dbo:associatedBandMember ?member .
  
  # Step 3: Find band that is an organization and group associated with Burnt by the Sun (band)
  ?burntBySunBand dbo:associatedBandMember dbr:Burnt_by_the_Sun_(band) .
  ?burntBySunBand rdf:type dbo:MusicalGroup, dbo:Organization .

  # Step 4: Find a band member of this band who is also a musical artist
  ?finalArtist dbo:memberOf ?burntBySunBand .
  ?finalArtist rdf:type dbo:MusicalArtist .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find the work related to ""Johnny Doughboy""
  ?work dbo:character dbr:Johnny_Doughboy .
  
  # Find the producer of that work
  ?work dbo:producer ?producer .

  UNION

  # Find the movie associated with Janet Gaynor
  ?movie dbo:starring dbr:Janet_Gaynor ;
         a dbo:Film .

  # Find the producer of that movie
  ?movie dbo:producer ?producer .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Find William Bayne's military role in a war
  ?bayne dbr:William_Bayne .
  ?bayne dbo:militaryConflict ?war .
  
  # Identify the regiment involved in that war
  ?regiment dbr:""30th_(Cambridgeshire)_Regiment_of_Foot"" .
  ?regiment dbo:militaryConflict ?war .

  # Find the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Identify societal event related to the awardee
  ?societalEvent dbo:relatedTo ?awardee .

  # Find military force associated with both events
  ?militaryForce dbo:event ?war ;
                dbo:societalEvent ?societalEvent .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?band ?character
WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?professional .

  # Bob Thompson (musician) and his band
  ?person foaf:name ""Bob Thompson"" .
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""bob thompson""))
  ?person dbo:occupation dbr:Musician .
  ?person dbo:musicalBand ?band .

  # Walter B. Gibson's creation
  dbr:Walter_B._Gibson dbo:creatorOf ?character .
  ?character a dbo:FictionalCharacter ;
             dbo:wikiPageRedirects dbr:Comics_character .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Archduchess Helena of Austria
  ?spouse a dbo:Spouse; 
          dbo:spouse dbr:Archduchess_Helena_of_Austria.
  
  ?childHelena a dbo:Child;
               dbo:parent ?spouse;
               dbo:royalty true.

  # Step 2: Archduke Charles Louis of Austria
  ?childCharles a dbo:Child;
                dbo:parent dbr:Archduke_Charles_Louis_of_Austria;
                dbo:royalty true.
  
  ?grandchildCharles a dbo:Child;
                     dbo:parent ?childCharles;
                     dbo:royalty true.

  # Step 3: Alexander of Württemberg
  ?greatGrandchildAlexander a dbo:Child;
                            dbo:parent ?grandchildAlexander1;
                            dbo:royalty true.
  
  ?grandchildAlexander1 a dbo:Child;
                        dbo:parent ?grandchildAlexander2;
                        dbo:royalty true.

  ?grandchildAlexander2 a dbo:Child;
                        dbo:parent dbr:Alexander_of_Württemberg;
                        dbo:royalty true.

  # Find the predecessor of the child from step 1
  ?predecessor dbo:successor ?childHelena.
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2 WHERE {
  # Actor of ""High Society Blues""
  ?actor dbo:starring dbr:High_Society_Blues .
  
  # Producer of the claim to fame (work) of this actor
  ?work dbo:creator ?actor .
  ?work dbo:producer ?producer1 .

  # This actor is professionally linked to ""The Shadow""
  ?actor dbo:profession dbr:The_Shadow .

  # Actor of ""Johnny Doughboy""
  ?actor2 dbo:starring dbr:Johnny_Doughboy .

  # Producer of the claim to fame (work) of this second actor
  ?work2 dbo:creator ?actor2 .
  ?work2 dbo:producer ?producer2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Individuals who received the ""Golden Sword for Bravery"" in the Russian Empire
  ?person dbo:award dbr:Order_of_the_Golden_Sword_for_Bravery .
  ?person dbo:nationality dbr:Russian_Empire .

  UNION

  # Individuals awarded 25 times (assuming a property or count exists)
  {
    SELECT DISTINCT ?person WHERE {
      ?person dbo:numberOfAwards ?count .
      FILTER (?count = ""25""^^xsd:string) 
    }
  }

  # Ensure the person is common in both groups
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dispatchesActor ?politicianActor ?abKyaHogaActor ?comicsCharacter
WHERE {
  # Actor of ""Dispatches from Elsewhere""
  ?dispatchesSeries dbo:title ""Dispatches from Elsewhere""@en .
  ?dispatchesSeries dbo:actor ?dispatchesActor .

  # Politician who is also an actor
  ?politicianActor a dbo:Politician ;
                  dbo:occupation dbr:Actor .

  # Actor of ""Ab Kya Hoga"" and their alter ego
  ?abKyaHogaSeries dbo:title ""Ab Kya Hoga""@en .
  ?abKyaHogaSeries dbo:actor ?abKyaHogaActor .
  ?abKyaHogaActor dbo:alterEgo ?comicsCharacter .

  # Comics character related to ""The Shadow (video game)""
  ?shadowGame dbo:title ""The Shadow (video game)""@en .
  ?shadowGame dbo:character ?comicsCharacter .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfAward
WHERE {
  # Step 1: Find a band from New York (state)
  ?band dbo:location dbr:New_York_(state) .
  
  # Step 2: Identify the awardee of this band who is also a person born as the birth name of a musical artist native to Florida
  ?award dbo:recipient ?awardee .
  ?band dbo:award ?award .
  ?awardee dbp:birthName ?birthName .

  # Step 3: Find a musical artist from Florida who shares this birth name and is a band member of Uncle Murda
  ?musicalArtist dbo:nativePlace dbr:Florida ;
                dbp:birthName ?birthName .
  ?musicalArtist dbo:bandMember dbr:Uncle_Murda .

  # Step 4: The award should be associated with a region that is also an American state and settlement
  ?award dbo:location ?nativeOfAward .
  ?nativeOfAward rdf:type dbo:State ;
                 rdf:type dbo:Settlement ;
                 dbo:country dbr:United_States_of_America .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Hillary Clinton's book related to a disease and societal event involving the US Navy
  ?book dbo:author dbr:Hillary_Clinton ;
        dbo:subject ?disease ;
        dbo:subject ?societalEvent .
  
  # Disease and societal event are related to the US Navy
  ?disease dbo:relatedTo dbr:United_States_Navy ;
           rdf:type dbo:Disease .
  ?societalEvent dbo:relatedTo dbr:United_States_Navy ;
                 rdf:type dbo:SocietalEvent .

  # Commander is the spouse of Hillary Clinton and involved in the book
  ?commander dbo:spouse dbr:Hillary_Clinton ;
             dbo:positionHeld ?office ;
             dbo:residence dbr:Chappaqua,_New_York .
  
  # Commander is a politician and office holder
  ?office rdf:type dbo:PoliticalOffice .

  # Ensure the commander is related to the book's context
  ?book dbo:subject ?commander .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfFather WHERE {
    # Step 1: Find Saw Shwe Khet's royal child
    ?child dbo:parent dbr:Saw_Shwe_Khet .
    ?child a dbo:Monarch .

    # Step 2: Identify the father of this royal child
    ?father dbo:spouse ?mother .
    ?child dbo:parent ?father .

    # Step 3: Find if the father has a royal spouse
    ?spouseOfFather dbo:spouse ?father .
    ?spouseOfFather a dbo:Monarch .

    # Step 4: Identify Saw Min Hla's child and predecessor relationship
    ?childMinHla dbo:parent dbr:Saw_Min_Hla .
    ?predecessor dbo:succeeds ?childMinHla .

    # Step 5: Find the spouse of Saw Min Phyu who is royalty
    ?spouseOfMinPhyu dbo:spouse dbr:Saw_Min_Phu .
    ?spouseOfMinPhyu a dbo:Monarch .

    # Step 6: Identify the child of this royal spouse
    ?childOfSpouse dbo:parent ?spouseOfMinPhyu .

    # Step 7: Match the predecessor condition
    FILTER (?predecessor = ?child)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?actor ?spouse WHERE {
  # Step 1: Identify the ruling party in Central, Louisiana
  ?centralLocation dbo:location dbr:Central,_Louisiana .
  ?rulingParty dbo:government ?centralLocation .

  # Step 2: Find films produced by Nat Levine and an actor from these films
  ?film dbo:producer dbr:Nat_Levine .
  ?film dbo:actor ?actor .

  # Step 3: Determine the birth name of a parent of Tisha Sterling
  ?tishaSterling dbp:parent ?parent .
  ?parent foaf:name ?birthName .

  # Step 4: Find the party member who is also the spouse of the actor
  ?partyMember dbo:memberOf ?rulingParty ;
              dbo:spouse ?actor .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Assuming T.I.'s well-known movie is ""ATL""
  dbr:ATL dbo:starring ?actor .
  
  # T.I.'s album, assuming it's ""Trap Muzik""
  dbr:Trap_Muzik dbo:artist dbr:T.I. ;
                 dbo:track ?song .

  # Assuming the song is also a musical work
  ?song rdf:type dbo:Songs .

  # Finding the alter ego in ""The Golden Master"" series
  # This part is ambiguous, but let's assume it refers to a character like ""Master P""
  dbr:The_Golden_Master_Series dbo:character dbr:Master_P .
  
  # Assuming Master P has an alter ego or professional persona
  dbr:Master_P foaf:name ?alterEgo .

  # Find the actor associated with this alter ego's work
  ?album dbo:artist dbr:Master_P ;
         dbo:track ?work .
  ?work rdf:type dbo:Songs .
  
  dbr:Master_P dbo:starring ?actor .
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  # Step 1: Find Cynthia Morgan's birth name
  dbr:Cynthia_Morgan dbo:birthName ?birthName .

  # Step 2: Identify Afeez Oyetoro and his movie/show
  dbr:Afeez_Oyetoro dbo:film ?movie .
  
  # Step 3: Find the associated musical artist
  ?movie dbo:musicalArtist ?musicalArtist .
  
  FILTER(?birthName = ?associatedPerson)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?eleonoraBirthName ?eleonorAlmaMater ?luizaAlmaMater ?foundingDate
WHERE {
  # Eleonora Menicucci's birth name and alma mater
  dbr:Eleonora_Menicucci dbo:birthName ?eleonoraBirthName .
  dbr:Eleonora_Menicucci dbo:almaMater ?eleonorAlmaMater .

  # Luiza Erundina's alma mater and its founding date
  dbr:Luiza_Erundina dbo:almaMater ?luizaAlmaMater .
  ?luizaAlmaMater a dbo:University ;
                 dbp:foundingDate ?foundingDate .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Find musical artist associated with ""Wizards of Waverly Place (soundtrack)""
  ?writer dbo:work dbr:Wizards_of_Waverly_Place_(soundtrack) .
  ?writer a dbo:MusicalArtist .

  # Step 2: Find associated musical artist of Stuart Tosh
  ?stuartToshAssociatedArtist dbo:associatedWith dbr:Stuart_Tosh .
  
  # Step 3: Find band members of the associated musical artist of David Paton
  ?davidPatonAssociatedArtist dbo:associatedWith dbr:David_Paton .
  ?bandMember dbo:memberOf ?davidPatonAssociatedArtist .
  ?davidPatonAssociatedArtist a dbo:Band .

  # Step 4: Find common artists
  FILTER (?writer = ?stuartToshAssociatedArtist && ?writer = ?davidPatonAssociatedArtist)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?foundingDate
WHERE {
  OPTIONAL {
    ?person a dbo:Politician ;
            foaf:name ""Eleonora Menicucci""@en ;
            dbp:birthName ?birthName .
    ?person dbo:almaMater ?almaMater .
  }

  dbr:Federal_University_of_Para%C3%ADba dbo:foundingDate ?foundingDate .
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Stuart Mcbeath Tosh's associated musical artist
  ?tosh a dbo:Person ;
        foaf:name ""Stuart Mcbeath Tosh"" .
  ?band dbo:member ?tosh .
  ?band dbo:musicalArtist ?artist .

  UNION

  # David Paton's associated musical artist
  ?paton a dbo:Person ;
         foaf:name ""David Paton"" .
  ?band2 dbo:member ?paton .
  ?band2 dbo:musicalArtist ?artist .

  UNION

  # Writer of Wizards of Waverly Place (soundtrack) who is also a musical artist and an artist
  ?soundtrack dbr:Wizards_of_Waverly_Place_(soundtrack) ;
              dbo:composer ?writer .
  ?writer a dbo:Person, dbo:MusicalArtist, dbo:Artist .

  FILTER(?artist = ?writer)
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaName ?tokyoRegion ?timeZoneReference
WHERE {
  # Mitaka in Tokyo
  dbr:Mitaka a dbo:PopulatedPlace ;
             rdfs:label ?mitakaName ;
             dbo:partOf dbr:Tokyo .

  # Tokyo's region
  dbr:Tokyo dbo:region dbr:Kantō .

  # Time zone for Japan
  dbr:Japan dbo:timeZone dbr:Japan_Standard_Time .
  
  BIND(""Kanto"" AS ?tokyoRegion)
  BIND(dbr:Japan_Standard_Time AS ?timeZoneReference)

  FILTER (lang(?mitakaName) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  ?spouse dbo:spouse dbr:Constance_of_Burgundy .
  ?child dbo:parent ?spouse .
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:royalty true .
  ?fatherChild dbo:parent ?grandchild .
  ?fatherChild dbo:royalty true .
  ?reference dbo:officeHolder ?office .
  ?reference dbo:royalty true .
  ?reference dbo:relatedTo dbr:William_I .
  ?parentOfReference dbo:child ?reference .
  ?rogerParent dbo:child dbr:Roger_III,_Duke_of_Apulia .
  ?parentOfReference dbo:parent ?rogerParent .
  ?fatherChild = ?reference .
  BIND(?grandchild AS ?result)
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?deathPlace WHERE {
  # Aladdin (1958)
  VALUES (?film) { dbr:Aladdin_(1958_film) }
  
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbo:deathPlace ?deathPlace .
  }

  UNION

  # Color Me Dead
  VALUES (?film) { dbr:Color_Me_Dead_(film) }
  
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbo:deathPlace ?deathPlace .
  }

  UNION

  # The Sky Ranger (1928)
  VALUES (?film) { dbr:The_Sky_Ranger_(1928_film) }
  
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbo:deathPlace ?deathPlace .
  }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?targetIndividual
WHERE {
  # Alexander of Württemberg's great-grandchild who is royalty
  ?alexander dbo:birthYear ""1804""^^xsd:gYear .
  ?alexander dbo:deathYear ""1881""^^xsd:gYear .
  ?child1 dbo:childOf ?alexander .
  ?grandchild1 dbo:childOf ?child1 .
  ?greatGrandchild1 dbo:childOf ?grandchild1 .
  
  # Parent of Archduchess Margarete Sophie and their great-grandchild who is royalty
  ?parentMargarete dbp:child ?margareteSophie .
  ?child2 dbo:childOf ?parentMargarete .
  ?grandchild2 dbo:childOf ?child2 .
  ?greatGrandchild2 dbo:childOf ?grandchild2 .
  
  # Spouse of Archduchess Helena and their child who is royalty
  ?helena dbp:spouse ?spouseHelena .
  ?child3 dbo:childOf ?spouseHelena .
  
  # Predecessor of the spouse's child who is royalty
  ?predecessor dbo:successor ?child3 .

  # Ensure all individuals are royalty
  ?greatGrandchild1 dbp:royalty ""true""^^xsd:boolean .
  ?greatGrandchild2 dbp:royalty ""true""^^xsd:boolean .
  ?child3 dbp:royalty ""true""^^xsd:boolean .

  # Find the intersection of these conditions
  FILTER (?greatGrandchild1 = ?targetIndividual && ?greatGrandchild2 = ?targetIndividual)
  FILTER (?predecessor = ?targetIndividual)
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childWar ?ieyasuWar WHERE {
  # Toyotomi Hideyoshi's child involved in a war
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  ?child dbo:nationality dbr:Japan .
  ?childWar dbo:participant ?child ;
           dbo:location dbr:Japan .

  # Tokugawa Ieyasu (Koichirō) involved in a war
  ?ieyasu dbr:Tokugawa_Ieyasu ;
         rdfs:label ""Matsudaira Takechiyo""@en .
  ?ieyasu dbo:nationality dbr:Japan .
  ?ieyasuWar dbo:participant ?ieyasu ;
             dbo:location dbr:Japan .

}",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?caroline a dbo:Person ;
            foaf:name ""Caroline Louise Bevan Symonds""@en .
  
  ?caroline dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""john boxer""))
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthplace
WHERE {
  # Step 1: Identify the person based on awards and death date
  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:honoredWith dbr:Medal_of_Honor .

  # Step 2: Find the award associated with Quincy Adams Gillmore
  ?award dbo:recipient ?person ;
         dbo:awardee dbr:Quincy_Adams_Gillmore .
  
  # Step 3: Determine the force of the awardee
  ?force dbo:member ?person .

  # Step 4: Find the war associated with the Medal of Honor
  ?war dbo:recipient ?person ;
       dbo:honoredWith dbr:Medal_of_Honor .

  # Step 5: Identify the birthplace as a settlement in America
  ?person dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States .

  # Step 6: Find an entity in the birthplace
  ?entityInBirthplace dbo:location ?birthplace .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?decedent WHERE {
  # Find Ada Jane Low's birthplace and predecessor in politics
  ?adaJaneLow a dbo:Politician ;
              foaf:name ""Ada Jane Low"" ;
              dbp:birthPlace ?birthPlaceAda .
  
  ?predecessor a dbo:Politician ;
               dbo:successorOf ?adaJaneLow .

  # Find Mark Tournier's birthplace and decedent
  ?markTournier a dbo:Person ;
                foaf:name ""Mark Tournier"" ;
                dbp:birthPlace ?birthPlaceMark .
  
  ?decedent a dbo:Person ;
            dbo:deathPlace ?birthPlaceMark .

}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplaceResident ?birthplaceAlumnus
WHERE {
  # Find regions with Eastern European Time
  ?region dbo:timeZone dbr:Eastern_European_Time .

  # Find residents of these regions
  ?resident dbo:residence ?region .
  
  # Get birthplaces of these residents
  ?resident dbp:birthPlace ?birthplaceResident .

  # Find alumni of Plovdiv University ""Paisius of Hilendar""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisius_of_Hilendar .
  
  # Get birthplaces of these alumni
  ?alumnus dbp:birthPlace ?birthplaceAlumnus .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team1 ?athlete2 ?actor3 WHERE {
  # Find Marcelo Sarmiento's birthday
  VALUES (?marceloBirthday) { (dbr:Marcelo_Sarmiento dbo:birthday) }
  
  # Find a soccer player and manager born on Marcelo Sarmiento's birthday
  ?person1 dbo:birthday ?marceloBirthday ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:team ?team1 .

  # Find Marty Pollio's birthday
  VALUES (?martyBirthday) { (dbr:Marty_Polio dbo:birthday) }
  
  # Find an athlete born on Marty Pollio's birthday
  ?person2 dbo:birthday ?martyBirthday ;
          rdf:type dbo:Athlete .

  # Find the actor from ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?actor3 dbo:role dbr:All_or_Nothing:_Manchester_City ;
          rdf:type dbo:SoccerPlayer, dbo:Athlete .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find the birth name of $pacely and get their associated musical artist
  ?person1 dbo:birthName ?birthNamePacely .
  FILTER (str(?birthNamePacely) = ""Paul Michael Glaser"") # Assuming $pacely is Paul Michael Glaser
  ?person1 dbo:associatedMusicalArtist ?artist1 .

  # Find a native of Central Region, Ghana and get their associated musical artist
  ?person2 dbp:nativePlace dbr:Central_Region_(Ghana) .
  ?person2 dbo:birthName ?birthNameNative .
  ?person2 dbo:associatedMusicalArtist ?artist2 .

  # Ensure the person is an artist
  ?person1 a dbo:Musician ;
           rdfs:label ?labelPerson1 FILTER (lang(?labelPerson1) = ""en"") .

  ?person2 a dbo:Musician ;
           rdfs:label ?labelPerson2 FILTER (lang(?labelPerson2) = ""en"") .

  # Find the writer of ""The Live Anthology"" and their profession
  ?writer dbo:work dbr:The_Live_Anthology .
  ?writer dbo:profession ?professionWriter .
  
  # Ensure the writer is a musical artist
  FILTER EXISTS { ?writer a dbo:Musician }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?successor WHERE {
  # Commander in the Battle of Vienna
  ?battle dbo:participatedInMilitaryForce dbr:Battle_of_Vienna .
  ?battle dbo:commander ?commander .

  # Commander is also a television show and societal event
  ?commander dbo:wikiPageRedirects ?tvShow .
  ?commander dbo:wikiPageRedirects ?event .

  # Writer of the work of George Ducas
  ?work dbo:author dbr:George_Ducas .
  ?work dbo:relatedWork ?relatedWork .
  ?relatedWork dbo:creator ?commander .

  # Successor in Russo-Polish War (1654–1667)
  ?war dbo:participatedInMilitaryForce dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?war dbo:successor ?successor .
  
  # Successor is a politician and office holder
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party WHERE {
  # Find awards associated with George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  
  # Find the leader of the party and their residence
  ?leader dbo:positionTitle ""Leader""@en ;
          dbo:affiliation ?party .
  ?leader dbo:residence ?residence .

  # Ensure the entity is a political party
  ?party a dbo:PoliticalParty .

  # Find George Savage's affiliation with the party
  dbr:George_Savage_(politician) dbo:affiliation ?party .

  FILTER (isBlank(?award)) # Ensure we are not retrieving specific award instances
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?royalty ?parent ?commander ?event WHERE {
  # Maria Anna of Bavaria's children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbo:spouse ?husband .
  
  ?husband dbo:child ?child .

  # Find the father of that child (likely the husband)
  ?child dbo:father ?father .

  # Check if any child is royalty
  OPTIONAL { ?child dbo:title ?royalty . FILTER regex(?royalty, ""King|Queen|Prince|Princess"", ""i"") }

  # Parent of Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Find a commander in war from these parents' lineage
  OPTIONAL { ?parent dbo:militaryCommander ?commander . FILTER regex(?commander, ""war"", ""i"") }

  # Societal event related to the 2nd Dragoon Regiment (France)
  OPTIONAL {
    dbr:2nd_Dragoon_Regiment_(France) dbo:event ?event .
    ?event a dbo:SocietalEvent ;
           a dbo:Event ;
           dbo:mediaBroadcast ?tvShow .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Spouse's child
  ?spouse dbo:child ?child .

  # Photographer who is a professional and has the same parent (spouse)
  ?photographer a dbo:Photographer ;
               foaf:name ?name ;
               dbo:parent ?spouse .

  # Person decedent at Los Angeles related to the chain
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            dbo:parent ?spouse .

  # Movie (work) involving this person as an actor
  ?movie dbo:actor ?decedent .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child dbr:Parent1 .
  
  dbr:Parent1 dbo:child ?politicianOfficeHolder .
  
  ?politicianOfficeHolder a dbo:Politician ;
                        a dbo:GovernmentOfficial .

  ?politicianOfficeHolder dbo:child ?childOfParent .
  ?childOfParent a dbo:Politician .

  ?awardee dbo:title dbr:Commander_of_the_Royal_Victorian_Order ;
          dbo:parent ?parentOfAwardee .

  ?alumnus dbr:Eton_College dbo:alumni .
  
  ?alumnus dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  ?politicianChild dbo:parent ?fatherOfPoliticianChild .

  ?parentOfAwardee = ?fatherOfPoliticianChild .
  
  ?parentOfChild = ?politicianOfficeHolder .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationPrinceChristian ?administrationMayor ?territoryAdminCopenhagen
WHERE {
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck and his administration
  OPTIONAL {
    ?person rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
    ?person dbo:positionHeld ?administrationPrinceChristian .
  }

  # Find the Mayor of Duchy of Schleswig and their administration
  OPTIONAL {
    ?mayor rdfs:label ""Mayor of Duchy of Schleswig""@en .
    ?mayor dbo:positionHeld ?administrationMayor .
  }

  # Find territories administered from Copenhagen
  OPTIONAL {
    ?territory dbo:administrativeCenter dbr:Copenhagen .
    ?territory dbo:administeredBy ?administrationCopenhagen .
    BIND(?administrationCopenhagen AS ?territoryAdminCopenhagen)
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  # Step 1: Find the producer of ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:producer ?producer .

  # Step 2: Determine the birthplace of the producer
  ?producer dbp:birthPlace ?birthPlace .

  # Step 3: Identify musical works by Apache Indian
  dbr:Apache_Indian dbo:musicalWork ?musicalWork .

  # Step 4: Find the writer of those works
  ?musicalWork dbo:writer ?writer .
  
  FILTER(?birthPlace = ?producerBirthPlace)
}
```

This query assumes that DBpedia has structured data for these entities and relationships. Adjustments might be necessary based on actual data availability.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_manager .

  # This person should also be an actor in a film by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?person .
  
  # Find Marty Pollio's birthday
  ?marty dbp:birthday ?birthdayMarty .

  # Find the athlete who is also a soccer player and born on Marty Pollio's birthday
  ?athlete dbo:birthday ?birthdayMarty ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Athlete .
  
  # This athlete should be in the same film
  ?film dbo:starring ?athlete .

  # Get the team of the person born on 1979-11-03
  ?person dbo:team ?team .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Find David Luckman's residence
  ?davidLuckman dbo:nationality ?residence .
  
  # Ensure the club is a sports club and specifically a soccer club
  ?club dbo:type dbr:Soccer_club ;
        dbo:manager ?davidLuckman .

  # Jamie McCunnie is managed by this club
  ?jamieMcCunnie dbo:managedBy ?club .

  # Get the native place of the residence (city or country)
  ?residence dbo:nativeName ?nativePlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Claude Bowes-Lyon's child
  ?child dbo:spouse|dbo:child dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # Step 2: Find the parent of this child
  ?parent dbo:child ?child .

  # Step 3: Determine William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?gaynerBirthPlace .
  ?gaynerBirthPlace a dbo:Region ;
                   dbo:country ?gaynerCountry .

  # Step 4: Match the parent's native place with William Gayner's birthplace
  ?parent dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:Region ;
               dbo:country ?nativeCountry .
  
  FILTER (?nativePlace = ?gaynerBirthPlace && ?nativeCountry = ?gaynerCountry)

  # Step 5: Ensure the parent is also a parent of Hon. Mary Frances Bowes-Lyon
  ?parent dbo:child dbr:Hon._Mary_Frances_Bowes-Lyon .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find actors in High Society Blues
  ?actor dbo:actedIn dbr:High_Society_Blues .
  
  # Find the claim to fame of these actors (either a movie or work)
  ?actor dbo:claimToFame ?fameWork .
  
  # Ensure the claim to fame is either a movie or a work
  FILTER EXISTS { ?fameWork a dbo:Film . } || 
               FILTER EXISTS { ?fameWork a dbo:CreativeWork . }
  
  # Find the producer of this claim to fame
  ?fameWork dbo:producer ?producer .
  
  UNION
  
  # Repeat for Johnny Doughboy
  ?actor2 dbo:actedIn dbr:Johnny_Doughboy .
  ?actor2 dbo:claimToFame ?fameWork2 .
  FILTER EXISTS { ?fameWork2 a dbo:CreativeWork . }
  ?fameWork2 dbo:producer ?producer .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Step 1: Identify the writer of ""The Live Anthology""
  ?writer dbo:work dbr:The_Live_Anthology .
  
  # Step 2: Ensure this person is also a musical artist
  ?writer dbo:occupation dbr:Musical_artist .

  # Step 3: Find their birth name and match it with an artist from Central Region, Ghana
  ?writer foaf:name ?birthName .
  ?ghanaArtist foaf:name ?birthName ;
               dbo:nationality dbr:Ghana ;
               dbo:regionOfOrigin dbr:Central_Region_(Ghana) .

  # Step 4: Ensure this person is associated with Elorm Kabu Amenyah
  ?professional dbo:associatedMusicalArtist dbr:Elorm_Kabu_Amenyah .
  
  # Link the professional to the writer
  ?professional = ?writer
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Vera_Lynn ;
         dbo:parentWork ?parent .

  ?parent dbo:artist ?artist .
  ?artist rdf:type dbo:MusicalArtist .

  ?location dbo:native dbr:?artist ;
            rdf:type dbo:Settlement ;
            dbo:country dbr:England .

  ?movie dbo:author ?author .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find actors of ""High Society Blues""
  ?actor dbo:starring dbr:High_Society_Blues .
  
  # Find the claim to fame (work) of these actors and their producers
  ?work dbo:actor ?actor ;
        a dbo:Film .
  ?producer1 dbo:producedAtLocation ?work .

  # Find actors of ""Johnny Doughboy""
  ?actor2 dbo:starring dbr:Johnny_Doughboy .
  
  # Find the claim to fame (work) of these actors and their producers
  ?work2 dbo:actor ?actor2 ;
         a dbo:Film .
  ?producer2 dbo:producedAtLocation ?work2 .

  # Ensure the producer is the same for both works
  FILTER (?producer1 = ?producer2)

  # Find fictional character ""Kent Allard"" and their alter ego's professional role
  dbr:Kent_Allard dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?professional .

  # Ensure the producer is also this professional
  FILTER (?producer1 = ?professional)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?nativeCountry .

  # Person born on 1968-08-26 who is a sports manager
  ?manager a dbo:SportsManager ;
          dbo:birthday ""1968-08-26""^^xsd:date .

  # Successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:successor ?successorSeason .

  # The manager managed a player in this successor season
  ?player a dbo:SoccerClub ;
          dbo:manager ?manager ;
          dbo:participatedInSportSeason ?successorSeason .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Step 1: Find Nate Newton's associated band that is both an organization and a musical artist (band)
  dbr:Nate_Newton dbo:musicalArtist ?nateBand .
  
  FILTER EXISTS { ?nateBand a dbo:MusicalArtist . }
  FILTER EXISTS { ?nateBand a dbo:Organization . }

  # Step 2: Find the producer of ""Nothing to Gein"" that is both an organization and a group
  dbr:Nothing_to_Gein dbo:producer ?producer .
  
  FILTER EXISTS { ?producer a dbo:Organization . }
  FILTER EXISTS { ?producer a dbo:Group . }

  # Step 3: Find the band member of this producer who is also a band member of Nate Newton's associated band
  ?bandMember dbo:member ?nateBand ;
              dbo:member ?producer .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Shirley Stoler's profession
  dbr:Shirley_Stoler dbo:occupation ?profession .

  # Find awards related to this profession
  ?award dbo:relatedTo ?profession .
  
  # Awardee from New York (state)
  ?person dbo:awardReceived ?award ;
          dbo:nationality <http://dbpedia.org/resource/United_States> ;
          dbo:birthPlace ?place .

  # Ensure the place is a settlement in New York
  ?place rdf:type dbo:Settlement ;
         dbp:country ""United States""^^xsd:string ;
         dbp:state ""New York (state)""^^xsd:string .

  # Find the child of this awardee
  ?person dbo:child ?child .
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?militaryConflict ?author
WHERE {
  # Find the commander of the Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?battle dbo:commander ?commander .

  # Check if the commander is linked to a television show or societal event
  OPTIONAL { ?commander dbo:wikiPageRedirects ?tvShow . }
  OPTIONAL { ?commander dbo:socialEvent ?event . }

  # Find the successor who is a politician and office holder
  ?successor dbo:predecessor ?commander .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder ?office .

  # Connect Michał Kazimierz Pac to his military conflict
  ?militaryConflict dbr:Military_conflict_of_Micha%C5%82_Kazimierz_Pac .
  ?militaryConflict dbo:commander ?paczCommander .

  # Link George Ducas as an author
  ?author dbr:George_Ducas ;
          rdf:type dbo:Writer .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?nativePlace WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:awardedTo dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # The native place of the award should be an American settlement
  ?award dbo:nativePlace ?nativePlace .
  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativePlace a dbo:PopulatedPlace . } &&
          EXISTS { ?nativePlace dbo:country dbr:United_States_of_America . })

  # Shirley Stoler's professional relationship with the award
  ?award dbo:child dbr:Shirley_Stoler .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?force ?award ?birthplace WHERE {
  # Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:militaryConflict ?war .

  # Quincy Adams Gillmore's force and award
  dbr:Quincy_Adams_Gillmore dbo:commanded ?force .
  OPTIONAL { dbr:Quincy_Adams_Gillmore dbo:award ?award . }

  # Person deceased on 1850-08-05
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthplace .

  # Ensure birthplace is an American settlement
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardeeBirthplace ?actorBirthplace WHERE {
  # Part 1: Awardee of Sangeet Natak Akademi Fellowship
  ?awardee dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  ?awardee dbp:birthPlace ?awardeeBirthplace .

  # Part 2: Indian Movie with Dipankar De
  ?movie dbo:starring dbr:Dipankar_De ;
         dbo:country dbr:India .
  ?actor dbo:starring ?movie .
  ?actor dbp:birthPlace ?actorBirthplace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Step 1: Find the nickname of the Russia national football team
  dbr:Russia_national_football_team dbo:nickname ?nickname .

  # Step 2: Find players associated with this team
  ?teamMember dbp:memberOfTeam ?team .
  ?team rdfs:label ?teamLabel .
  
  FILTER (CONTAINS(LCASE(?teamLabel), LCASE(""russia national football team"")) || CONTAINS(LCASE(?nickname), LCASE(""russia national football team"")))
  
  # Step 3: Find players who are also writers
  ?player dbo:nationality dbr:Russia ;
          dbo:occupation dbr:Writer .

  # Step 4: Check if the player has written works by Aleksandr Filimonov
  ?work dbo:author ?player .
  ?work dbo:title ?title .
  
  FILTER EXISTS {
    ?work dbo:wikiPageWikiLink dbr:Aleksandr_Filimonov
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?royaltyChildOfYeshaqI ?fatherOfDescendant

WHERE {
  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Yeshaq I's child who is royalty
  dbr:Yeshaq_I dbo:child ?royaltyChildOfYeshaqI .
  ?royaltyChildOfYeshaqI a dbo:Monarch .

  # Baeda Maryam I's descendant
  dbr:Baeda_Maryam_I dbo:child ?childOfBaedaMaryamI .
  ?childOfBaedaMaryamI dbo:father ?fatherOfDescendant .
  ?fatherOfDescendant a dbo:Monarch ;
                     dbo:officeHolder ?office .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant
WHERE {
  # Spanish Socialist Workers' Party administration
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Tenant of the administration
  ?admin dbo:office ?party ;
         dbo:country dbr:Spain .
  ?tenant dbo:positionHeld ?admin .

  # Spanish citizen's residence country
  ?citizen dbo:nationality dbr:Spain .
  ?residence dbo:country ?citizenResidenceCountry .
  
  # Office of Alberto Núñez Feijóo
  ?feijoo dbo:office ?office ;
          rdfs:label ""Alberto Núñez Feijóo""@en .
  
  # Ensure the tenant is connected to all these elements
  FILTER (?citizenResidenceCountry = dbr:Spain) 
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild ?realName
WHERE {
  # Martin of Aragon's parent
  ?martinParent a dbo:Person ;
                dbo:child dbr:Martin_of_Aragon .

  # Father of Martin of Aragon's parent (Martin's grandfather)
  ?grandfather a dbo:Person ;
              dbo:spouse ?martinParent ;
              dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch .

  # Peter IV of Aragon's real name
  dbr:Peter_IV_of_Aragon rdfs:label ?realName .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?commander ?tvShow ?country
WHERE {
  # Maria I of Portugal and her associated war
  dbr:Maria_I_of_Portugal dbo:spouse ?husband .
  ?husband dbo:role ?role .
  ?role dbo:associatedWith ?war .

  # Commander in the force, linked to a TV show and military conflict
  ?commander dbo:role ?militaryRole .
  ?militaryRole dbo:associatedWith ?war .
  ?commander dbo:wikiPageRedirects ?tvShow .
  
  # Polish athlete from Łódź and their residence country
  dbr:Łódź dbo:nativePlace ?athlete .
  ?athlete dbp:nationality dbr:Poland .
  ?athlete dbo:residence ?country .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory
WHERE {
  # Find death place of Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" ;
          dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find mayor's administration for Duchy of Schleswig
  ?schleswig dbr:Duchy_of_Schleswig ;
             dbo:mayor ?mayor .
  ?mayor dbo:administers ?administration .

  # Find birthplace of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?prince a dbo:Person ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ;
          dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is administered by royalty
  ?birthPlace dbo:administeredBy ?royalty .

  # Match territories
  FILTER (?deathPlace = ?administration || ?birthPlace = ?administration)
  BIND(?administration AS ?territory)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelOffice ?manuelConflict ?manuelOffice
WHERE {
  # Find Miguel Maura's political party and office in Madrid
  ?party dbo:member dbr:Miguel_Maura .
  ?office dbo:officeHolder dbr:Miguel_Maura ;
          dbo:location dbr:Madrid .

  # Find Manuel Pinto da Costa's military conflict and commander role
  ?conflict dbo:militaryConflict dbr:Manuel_Pinto_da_Costa .
  ?commanderOffice dbo:officeHolder dbr:Manuel_Pinto_da_Costa ;
                   dbo:title ""Commander""^^xsd:string .

  # Return the offices
  BIND(?office AS ?miguelOffice)
  BIND(?conflict AS ?manuelConflict)
  BIND(?commanderOffice AS ?manuelOffice)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthplace WHERE {
  # Find the awardees of the Anita Borg Institute Women of Vision Awards
  ?award dbo:recipient ?awardee .
  FILTER CONTAINS(LCASE(?award), ""anita borg institute women of vision awards"") .

  # Ensure the awardee is Japanese and associated with a television show
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:profession dbr:Television_Show .

  # Find the birthplace of the awardee
  ?awardee dbp:birthPlace ?birthplace .

  # Ensure the region is Japan Standard Time
  ?region dbo:timeZone dbr:Japan_Standard_Time .
  ?birthplace dbo:locatedIn ?region .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Step 1: Find Ian Gregson's award
  ?award dbo:recipient dbr:Ian_Gregson .
  
  # Step 2: Find Linda Bruckheimer's birth name
  dbr:Linda_Bruckheimer dbp:birthName ?birthName .

  # Step 3: Identify the spouse of the person with that birth name
  ?person dbp:birthName ?birthName .
  ?spouse dbo:spouse ?person .

  # Step 4: Find a movie produced by this spouse
  ?movie dbo:producer ?spouse .

  # Step 5: Determine the producer of that movie
  ?movie dbo:producer ?producer .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Identify ""The Shadow"" as a fictional character created by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Find the real person associated with ""The Shadow""
  ?person dbp:fictionalAlterEgo dbr:The_Shadow .
  ?person foaf:name ""Robert Lamar Thompson""@en .

  # Determine the band Robert Lamar Thompson was part of
  ?band dbo:member ?person .

  # Confirm connection to Alex Gonzaga, producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer dbr:Alex_Gonzaga .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Check if this person is associated with The Fabulous Thunderbirds or Nick Curran
  OPTIONAL {
    ?association dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
    ?person ?p1 ?association .
  }
  
  OPTIONAL {
    ?persona dbp:alsoKnownAs ""Nick Curran"" ;
             dbo:associatedBand ?band .
    ?person ?p2 ?persona .
  }

  # Return the band
  BIND(?band AS ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Step 1: Find the producer of ""Lotus"" (R.E.M. song)
  ?producer a dbo:Band ;
            dbo:genre dbr:Alternative_rock ;
            dbo:producedBy dbr:Lotus_(song) .

  # Step 2: Find an associated musical artist of this producer
  ?artist dbo:associatedMusicalArtist ?producer .

  # Step 3: Find the writer of the album ""Sappy""
  ?album a dbo:MusicalWork, dbo:Album ;
         dbp:title ""Sappy"" .
  ?writer dbo:wrote ?album .

  # Step 4: Identify band members of this writer
  ?bandMember dbo:memberOfBand ?writer .

  # Step 5: Find the associated musical artist of these band members
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGoldenSwordAwardee ?warOf25thAnniversaryAwardee ?birthPlaceEntity WHERE {
  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .

  # Find awardees of the Golden Sword for Bravery and their wars
  ?goldenSwordAwardee dbo:award ?goldenSwordAward .
  ?goldenSwordAward rdfs:label ""Golden Sword for Bravery""@en .
  ?goldenSwordAwardee dbo:militaryConflict ?warOfGoldenSwordAwardee .

  # Find awardees of the 25th anniversary award and their wars
  ?anniversaryAwardee dbo:award ?anniversaryAward .
  ?anniversaryAward rdfs:label ""25th Anniversary Award""@en .
  ?anniversaryAwardee dbo:militaryConflict ?warOf25thAnniversaryAwardee .

  # Ensure the awardees are related to Elena's birthplace
  OPTIONAL { ?goldenSwordAwardee dbo:birthPlace ?birthPlaceEntity }
  OPTIONAL { ?anniversaryAwardee dbo:birthPlace ?birthPlaceEntity }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # The Shadow's alter ego
  VALUES (?alterEgo) { dbr:Lamont_Cranston }

  # Douglas Rushkoff, author of Smartbomb
  ?rushkoff dbo:author dbr:Smartbomb .
  ?rushkoff foaf:name ""Douglas Rushkoff"" .

  # T.I.'s song and album
  ?song dbo:title ""Whatever You Like"" ;
        dbo:album dbr:Paper_Trail .
  
  # Find movies related to Douglas Rushkoff
  ?movie dbo:writer ?rushkoff .
  
  # Find actors in the movie
  ?movie dbo:starring ?actor .

  # Find music videos or albums related to T.I.'s song
  ?album dbo:title dbr:Paper_Trail .
  ?musicVideo dbo:song ?song ;
              dbo:starring ?actor .
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfAwardee
WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Find the parent of the awardee
  ?awardee dbo:recipient ?award ;
          dbo:parent ?parentOfAwardee .

  # Step 3: Find an alumnus of Eton College who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College ;
           rdf:type dbo:Politician .
  
  # Step 4: Find the child's parent who is a politician and office holder
  ?child dbo:parent ?alumnus ;
         dbo:parent ?politicianParent .
  ?politicianParent rdf:type dbo:Politician ;
                    dbo:officeHolder true .

  # Step 5: Find Edward Stanley, 17th Earl of Derby's parent who is a politician and office holder
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?derbyParent .
  ?derbyParent rdf:type dbo:Politician ;
               dbo:officeHolder true .

  # Final condition to match the parent from Step 2 with the parent from Step 5
  FILTER (?parentOfAwardee = ?derbyParent)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant1 ?tenant2 ?tenant3 WHERE {
  # Leader of 2003 Madrid City Council Election
  ?election dbr:Madrid_City_Council_election,_2003 .
  ?officeHolder dbo:electedDuring ?election ;
               a dbo:OfficeHolder .
  ?officeHolder dbo:residence ?residence1 .
  ?residence1 dbo:tenant ?tenant1 .

  # Commander in Central African Republic Civil War
  ?war dbr:Central_African_Republic_Civil_War .
  ?commander dbo:participatedIn ?war ;
             a dbo:OfficeHolder, dbo:Politician .
  ?commander dbo:residence ?residence2 .
  ?residence2 dbo:tenant ?tenant2 .

  # Leader of the Party of Miguel Maura
  ?miguelMaura dbr:Miguel_Maura .
  ?party dbo:leader ?politicianLeader ;
         dbo:member ?miguelMaura .
  ?politicianLeader a dbo:Politician .
  ?politicianLeader dbo:residence ?residence3 .
  ?residence3 dbo:tenant ?tenant3 .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalEntity
WHERE {
  # Constance of Burgundy's spouse and their royal child
  ?spouse dbo:spouse dbr:Constance_of_Burgundy .
  ?child1 dbo:parent ?spouse ;
          a dbo:Monarch .

  # Child of the above child (grandchild of Constance)
  ?grandchild dbo:parent ?child1 ;
              a dbo:Monarch .

  # William I's reference who is royalty and an office holder
  ?reference dbo:officeHolderOf dbr:William_I ;
             a dbo:Monarch .

  # Parent of Roger II of Sicily's royal child
  ?royalChild2 dbo:parent ?parentRogerII ;
               a dbo:Monarch .
  ?parentRogerII dbo:child dbr:Roger_II_of_Sicily .

  # The final entity should be the common link
  ?finalEntity dbo:parent ?grandchild ;
               dbo:parent ?reference ;
               dbo:parent ?parentRogerII .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry
WHERE {
  # Anxo Quintana's involvement in an event as a leader of an administration
  ?event dbo:leader dbr:Anxo_Quintana .
  
  # The tenant of the administration is associated with the Spanish Socialist Workers' Party
  ?administration dbo:member dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:office ?event .

  # Find a residence that is a country
  ?citizen dbo:nationality dbr:Spain ;
           dbo:residence ?residenceCountry .
  
  # The citizen must be Spanish and from Spain
  ?residenceCountry rdf:type dbo:Country ;
                    dbp:officialLanguage ""Spanish""@en .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find Tupac Shakur by birth name
  ?tupac a dbo:Person ;
         dbo:birthName ""Lesane Parish Crooks"" .
  
  # Find Joey Badass by birth name
  ?joey a dbo:Person ;
        dbo:birthName ""Jo-Vaughn Virginie Scott"" .

  # Identify Rod Argent as a musician
  dbr:Rod_Argent a dbo:Musician .

  # Get associated musical artists for Tupac Shakur
  ?tupac dbo:musicalArtist ?artist1 .
  
  # Get associated musical artists for Joey Badass
  ?joey dbo:musicalArtist ?artist2 .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedMusicalArtist dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # The native place of the award must be a region, American, state, and settlement
  ?award dbo:nativePlace ?nativePlace .
  ?nativePlace rdf:type dbo:Region ;
               dbo:country dbr:United_States_of_America ;
               rdf:type dbo:State ;
               rdf:type dbo:Settlement .

  # Find the person born as Bobby Shmurda
  ?person dbo:birthName ""Bobby Shmurda"" .
  
  # This person is a band member of an associated musical artist
  ?person dbo:bandMember ?associatedArtist .
  ?award dbo:associatedMusicalArtist ?associatedArtist .

  # The associated musical artist has a member who is both an artist and a musical artist of GS9
  ?member dbo:musicalArtist dbr:GS9 ;
          rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .
  ?associatedArtist dbo:bandMember ?member .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?politicianRole ?workWithRichardEGrant
WHERE {
  # Actor of ""Ab Kya Hoga""
  ?abKyaHogaWork dbo:title ""Ab Kya Hoga""@en .
  ?abKyaHogaWork dbo:starring ?actor .

  # Actor is also a politician
  ?actor dbo:occupation dbr:Politician .

  # Works with Richard E. Grant
  ?workWithRichardEGrant dbo:starring ?actor ;
                         dbo:starring dbr:Richard_E._Grant .

  # Professional in the alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  ?professional dbo:occupation ?shadowAlterEgo .
  FILTER (?actor = ?professional)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfAward
WHERE {
  ?awardee dbo:nationality dbr:United_States ;
           dbo:birthPlace dbr:New_York_(state) .
  
  ?parent dbo:occupation dbr:Actress ;
          dbo:child ?awardee .

  ?award dbo:recipient ?awardee ;
         dbo:nativeOf ?nativeOfAward .

  FILTER (dbo:settlement(?nativeOfAward))
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Konstantinos Ventiris' wars
  OPTIONAL { 
    dbr:Konstantinos_Ventiris dbo:participatedInWar ?war1 .
  }

  # Leader of National Party of Greece's wars
  OPTIONAL {
    dbr:Leader_of_National_Party_of_Greece dbo:participatedInWar ?war2 .
  }
  
  # Ensure the settlement is related to these wars
  FILTER (?deathPlace = ?settlement)
  OPTIONAL { ?war1 dbo:location ?settlement . }
  OPTIONAL { ?war2 dbo:location ?settlement . }
}
```",5,6,6,2,3,2,3,28,0,1,1,0.0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceEntity
WHERE {
  # Step 1: Identify the person who died on 1850-08-05
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)

  # Step 2: Determine the birthplace of this person
  ?person dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Step 3: Find entities related to wars and forces
  OPTIONAL {
    ?medalOfHonorAwardee dbo:awardee ?person ;
                         dbo:conflict ?war .
  }
  
  OPTIONAL {
    ?gillmoreMedalAwardee dbo:awardee ?person ;
                          dbo:militaryUnit ?force .
  }

  # Return the birthplace entity
  BIND(?birthplace AS ?birthplaceEntity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?partyMember ?birthName
WHERE {
  # Find Roger Pryor (actor) and his spouse
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" ;
         dbo:spouse ?spouse .

  # Find the landmark with elevation 20.1168
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Determine the ruling party at this landmark
  ?partyMember dbo:memberOf ?rulingParty ;
               foaf:name ?name .

  # Find Tisha Sterling's parent and their birth name
  ?tisha dbr:Tisha_Sterling ;
         dbo:parent ?parent .
  ?parent dbp:birthName ?birthName .

  # Combine conditions to find the person who matches all criteria
  FILTER(?spouse = ?partyMember)
  FILTER(?name = ?birthName)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2 WHERE {
  # Find associated musical artist of Stuart McBeath Tosh (Tosh)
  dbr:Tosh dbo:musicalArtist ?associatedArtist1 .

  # Find the writer who is an artist and band member of The Alan Parsons Project
  dbr:Alan_Parsons dbo:bandMember dbr:The_Alan_Parsons_Project ;
                   dbo:occupation dbr:Soundtrack_writer ;
                   dbo:occupation dbr:Musician .

  # Find associated musical artist of this writer (Alan Parsons)
  dbr:Alan_Parsons dbo:musicalArtist ?associatedArtist2 .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?laurynBirthPlace ?workBirthPlace WHERE {
  # Lauryn Hill's birthplace
  dbr:Lauryn_Hill dbo:birthPlace ?laurynBirthPlace .

  # Ethan Iverson's work and its birthplace
  ?work dbo:musicalArtist dbr:Ethan_Iverson ;
        dbo:locationCreated ?workBirthPlace .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Richard E. Grant
  dbr:Richard_E._Grant a dbo:Actor ;
    foaf:name ""Richard Grant Esterhuysen""@en .

  # The Shadow (video game) and its comics character
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow_(comics_character) .
  
  # Richard E. Grant's role in a TV show/movie as The Shadow
  ?tvShow dbo:actor dbr:Richard_E._Grant ;
          dbo:genre dbr:Television_show .

  # Ensure the role is related to The Shadow character
  ?role dbo:character dbr:The_Shadow_(comics_character) .
  ?tvShow dbo:hasPart ?role .

  # Return the actor
  BIND(dbr:Richard_E._Grant AS ?actor)
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory
WHERE {
  # Find death place of Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" ;
          dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find territories administered by Olaf I of Denmark
  ?olaf a dbo:Person ;
        foaf:name ""Olaf I of Denmark"" ;
        dbo:administers ?territory .

  # Find administration of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?prince a dbo:Royalty ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ;
          dbp:birthday ?birthday .
  
  ?administeredBy a dbo:Person ;
                  dbo:administers ?territory .

  # Ensure the person is royalty
  ?administeredBy dbo:royalty ?prince .

  # Link territories to the death place of Hansen
  FILTER(?territory = ?deathPlace)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerAStarIsBorn ?claimToFameWork ?alterEgoCharacter
WHERE {
  # Producer of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Actor from Johnny Doughboy
  dbr:Johnny_Doughboy dbo:actor ?actor .
  
  # Claim to fame work of the actor
  ?claimToFameWork dbo:starring ?actor .
  
  # Alter ego/fictional character related to Kent Allard
  dbr:Kent_Allard dbo:fictionalCharacter ?alterEgoCharacter .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfLeader ?officeOfCommander ?tenantResidence
WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               dbo:partyAffiliation ?politicalParty .

  FILTER (str(?miguelMaura) = ""Miguel_Maura"")

  # Find the leader of that political party and their office
  ?leader a dbo:Politician ;
          dbo:office ?officeOfLeader ;
          dbo:partyAffiliation ?politicalParty .

  # Find the commander in the Central African Republic Civil War
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:office ?officeOfCommander ;
             dbo:participatedInMilitaryConflict dbr:Central_African_Republic_Civil_War_(2012–present) .

  # Find Alberto Ruiz-Gallardón's residence tenant
  ?albertoRuizGallardon a dbo:Politician ;
                       dbo:residence ?residence .
  
  FILTER (str(?albertoRuizGallardon) = ""Alberto_Ruiz-Gallardón"")

  ?tenantResidence dbo:resident ?residence .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .
  
  ?player a dbo:SoccerClub, dbo:Organization ;
          dbo:manager ?person .

  ?season1 a dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
           dbp:succeededBy ?season2 .
  ?season2 dbp:team dbr:VfL_Bochum_season_2006%E2%80%9307 .

  ?team a dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
        dbp:team ?player ;
        dbp:manager ?manager .
  
  FILTER(?season1 = dbr:VfL_Bochum_season_2006%E2%80%9307)
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # The Shadow's alter ego
  VALUES (?alterEgo) { (dbr:Lamont_Cranston) }

  # Cora Sue Collins' claim to fame and its producer
  ?collins dbo:claimToFame ?work .
  ?work dbo:producer ?producer .

  # High Society Blues actor and their produced work
  dbr:High_Society_Blues dbo:actor ?actor .
  ?actor dbo:producedWork ?anotherWork .
  ?anotherWork dbo:producer ?producer .

  # The professional is the producer common to both works
  FILTER (?alterEgo = ?producer)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  # Find the album ""Lasso the Moon""
  ?album rdfs:label ""Lasso the Moon""@en .
  
  # Ensure it is a film and a work
  ?album dbo:type dbr:Film ;
         dbo:type dbr:Work .

  # Find the actor associated with this album
  ?album dbo:actor ?actor .

  # Get Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?bouralyProfession .

  # Ensure the actor shares the same profession as Frédéric Bouraly
  ?actor dbo:profession ?actorProfession .
  
  FILTER (?actorProfession = ?bouralyProfession)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?conflict ?force1 ?force2 WHERE {
  # Find the military conflict and force related to William Bayne
  ?bayne dbo:militaryConflict ?conflict .
  ?bayne dbo:commanded ?force1 .

  # Find the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Find the event and societal context for Robert Calder
  ?calder dbo:militaryConflict ?event .
  ?event dbo:societalEvent ?societalEvent .

  # Find the force related to Robert Calder's event
  ?calder dbo:commanded ?force2 .

  # Filter to ensure we are looking at naval officers
  FILTER EXISTS { ?bayne a dbr:Royal_Navy_officer }
  FILTER EXISTS { ?calder a dbr:Royal_Navy_officer }

  # Linking the forces through their commanders or events
  OPTIONAL { ?commander dbo:militaryConflict ?event }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?institution 
WHERE {
  # Part 1: Birth place of Little Hat Jones that is a country
  dbr:Little_Hat_Jones dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  BIND(?birthPlace AS ?country)

  # Part 2: Institution in the administration of Brian Kemp
  dbr:Brian_Kemp dbo:officeHolder ?position .
  ?position dbo:organization ?institution .
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Stuart Mcbeath Tosh's associated musical artist
  ?stuart a dbo:MusicalArtist ;
          foaf:name ""Stuart Mcbeath Tosh"" .
  
  # Find David Paton's associated musical artist
  ?david a dbo:MusicalArtist ;
         foaf:name ""David Paton"" .
  
  # Find Billy Lyall's associated musical artist
  ?billy a dbo:MusicalArtist ;
         foaf:name ""Billy Lyall"" .

  # Find the person who is a band member of both David Paton's and Billy Lyall's associated artists
  ?person a dbo:MusicalArtist ;
          dbo:bandMemberOf ?davidBand ;
          dbo:bandMemberOf ?billyBand .
  
  # Ensure this person is also associated with Stuart Mcbeath Tosh's artist
  ?stuartBand a dbo:MusicalArtist ;
              dbo:bandMember ?person .

  FILTER(?davidBand = ?david && ?billyBand = ?billy)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Maria I of Portugal's wars
  ?maria dbo:wikiPageDisambiguates ?disambiguation .
  FILTER (strstarts(str(?disambiguation), ""Maria_I_of_Portugal"")).
  
  ?disambiguation dbo:participatedInMilitaryConflict ?war .

  # Dawid Olejniczak's residence country
  dbr:Dawid_Olejniczak dbo:nationality ?nationality .
  ?nationality dbo:countryName ?residenceCountry .

  # War as a TV show and military conflict
  ?war rdf:type dbo:MilitaryConflict .
  ?war dbo:wikiPageWikiLink ?tvShow .
  ?tvShow rdf:type dbo:TelevisionSeries .
  
  # Ensure the war is related to Maria I of Portugal's context
  ?maria dbo:birthPlace dbr:Portugal .

  # Filter wars that are linked to both contexts
  FILTER EXISTS { ?war dbo:wikiPageWikiLink ?disambiguation }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse1 .
  
  # Children of Béla IV
  ?child dbo:parent dbr:Béla_IV_of_Hungary ;
         dbo:parent ?spouse1 .

  # Child of the child (royalty)
  ?childOfChild dbo:parent ?child ;
                a dbo:Monarch .

  # Father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?fatherOfPhilip .
  
  # Spouse of the father of Philip I (who is also parent of the child's parent)
  ?childOfChild dbo:spouse ?fatherOfPhilip .

  # Parent of the father of Philip I
  ?parentOfFather dbo:child ?fatherOfPhilip ;
                  a dbo:Monarch .

  # Spouse of Maria of Bytom
  dbr:Maria_of_Bytom dbo:spouse ?spouseMaria .
  
  # Father of the spouse of Maria of Bytom
  ?parentOfSpouse dbo:child ?spouseMaria .

  # The parent of the father of Philip I is also the parent of the spouse of Maria of Bytom
  FILTER(?parentOfFather = ?parentOfSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Saw Min Phyu's spouse and their child
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  ?child dbo:parent ?spouse .
  
  # Predecessor of the child (parent of the child)
  ?predecessor dbo:parent ?child .

  # Ensure Saw Min Phyu's spouse and their child are royalty
  ?spouse a dbo:Monarch .
  ?child a dbo:Monarch .

  # Min Hla Htut's parent and their child
  ?minHlaParent dbo:parent dbr:Min_Hla_Htut_of_Pyakaung .
  ?minHlaChild dbo:parent ?minHlaParent .

  # Ensure Min Hla Htut's parent is royalty
  ?minHlaParent a dbo:Monarch .

  # Myat Hpone Pyo's father and his spouse
  ?myatHponeFather dbo:child dbr:Myat_Hpone_Pyo .
  ?spouseOfFather dbo:spouse ?myatHponeFather .

  # Ensure Myat Hpone Pyo's father is royalty
  ?myatHponeFather a dbo:Monarch .

  # The predecessor must be the same as the spouse of Myat Hpone Pyo's father
  FILTER (?predecessor = ?spouseOfFather)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?theme WHERE {
  # Find shows associated with Anumta Qureshi
  ?person dbo:birthPlace dbr:Lahore .
  ?person foaf:name ""Anumta Qureshi"" .

  # Find the theme of the show
  ?show dbo:performer ?person ;
        dbo:theme ?theme .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .

  # Parent is a commander in the Siege of Padua
  ?parent dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""siege of padua""))

  # Father of this parent
  ?parent dbo:father ?father .

  # Ensure father is royalty
  ?father a dbo:Monarch .

  # Father of Catherine of Austria, Queen of Portugal
  ?father dbo:child dbr:Catherine_of_Austria,_Queen_of_Portugal .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Duke Philipp of Württemberg's grandchild
  ?philippChild dbo:child dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?grandchild1 dbo:child ?philippChild .

  # Philipp Albrecht, Duke of Württemberg's great-grandchild
  ?albrechtChild dbo:child dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?greatGrandchild dbo:child ?albrechtChild .
  
  # Archduchess Margarete Sophie of Austria's grandparent's great-grandchild
  ?margareteParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?grandchild2 dbo:child ?margareteParent .
  ?greatGrandchild2 dbo:child ?grandchild2 .

  # Conditions for the person we are looking for
  ?person dbo:child ?grandchild1 .
  ?greatGrandchild dbo:parent ?person .
  FILTER (?person != dbr:Duke_Philipp_of_W%C3%BCrttemberg && ?person != dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg)
  
  # Ensure the person is royalty and matches the grandchild of Margarete's parent
  ?greatGrandchild2 dbo:parent ?person .
  FILTER (STRSTARTS(STR(?person), ""http://dbpedia.org/resource/Category:Royalty""))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfFinland ?decedent ?birthCountryBertaggia ?adminCountryNicholasII
WHERE {
  # Person native to Grand Duchy of Finland
  ?nativeOfFinland dbo:nativePlace dbr:Grand_Duchy_of_Finland .

  # Sandro Bertaggia's birthplace that is a country
  dbr:Sandro_Bertaggia dbo:nativePlace ?birthCountryBertaggia .
  FILTER (isLiteral(?birthCountryBertaggia) && datatype(?birthCountryBertaggia) = xsd:string)

  # Person who died at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthCountryBertaggia .

  # Nicholas II of Russia's native administration (country)
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?adminCountryNicholasII .
  FILTER (isLiteral(?adminCountryNicholasII) && datatype(?adminCountryNicholasII) = xsd:string)

  # Ensure the decedent lived after Sandro Bertaggia was born
  OPTIONAL { dbr:Sandro_Bertaggia dbo:birthDate ?bertaggiaBirth . }
  OPTIONAL { ?decedent dbo:deathDate ?decedentDeath .
             FILTER (?decedentDeath > ?bertaggiaBirth) }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?realNameAlfonsoIVChild
WHERE {
  # Find Peter IV of Aragon's father and his child who is a royalty
  dbr:Peter_IV_of_Aragon dbo:father ?father .
  ?father dbo:child ?childOfFather .
  FILTER EXISTS { ?childOfFather dbo:royalty true }

  # Find Alfonso IV of Aragon's child who is a royalty and their real name
  dbr:Alfonso_IV_of_Aragon dbo:child ?alfonsoIVChild .
  FILTER EXISTS { ?alfonsoIVChild dbo:royalty true }
  ?alfonsoIVChild rdfs:label ?realNameAlfonsoIVChild .
  FILTER (LANG(?realNameAlfonsoIVChild) = ""en"")
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild ?relatedRoyalty ?rogerParent
WHERE {
  # Step 1: Find Alfonso VI's children
  ?alfonsoChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  
  # Step 2: Find grandchildren (children of those children)
  ?grandchild dbo:parent ?alfonsoChild .

  # Step 3: Identify a royalty and office holder related to William I
  ?relatedRoyalty dbo:royalty true ;
                 dbo:officeHolder true ;
                 dbp:spouseOrPartner dbr:William_I_of_Aquitaine .
  
  # Step 4: Connect this person to Roger III, Duke of Apulia
  ?rogerParent dbo:parent dbr:Roger_III,_Duke_of_Apulia .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgoRealName ?bandName ?producerName WHERE {
  # Find the real name of The Shadow's alter ego
  OPTIONAL { 
    dbr:The_Shadow dbo:birthName ?alterEgoRealName .
  }

  # Find Robert Lamar Thompson's band and confirm he is a musical artist
  OPTIONAL {
    dbr:Robert_Lamar_Thompson dbp:band ?bandResource .
    ?bandResource rdfs:label ?bandName .
    FILTER (LANG(?bandName) = 'en')
  }
  
  # Find the producer of Coke Studio Philippines
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?producerResource .
    ?producerResource dbp:name ?producerName .
    FILTER (LANG(?producerName) = 'en')
  }

  # Ensure Robert Lamar Thompson is a musical artist
  OPTIONAL {
    dbr:Robert_Lamar_Thompson dbo:profession dbr:Musical_artist .
  }
}
```",7,8,8,3,3,3,3,71,0,3,4,0.0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?realName ?associatedArtist
WHERE {
  # Eric Clapton's band
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton"" .
  
  ?claptonMember dbo:memberOfBand ?band ;
                 dbo:member ?clapton .

  # The Fabulous Thunderbirds' real name
  ?fabulousThunderbirds a dbo:MusicalArtist ;
                        foaf:name ""The Fabulous Thunderbirds"" .
  
  ?fabulousThunderbirds dbo:realName ?realName .

  # Nick Curran's associated musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  
  ?nickCurran dbo:associatedBandOrchestra ?associatedArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Anxo Quintana's leadership event
  ?event dbo:leader dbr:Anxo_Quintana .
  
  # The administration associated with the event
  ?administration dbo:event ?event ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .

  # Office held by Anxo Quintana in that administration
  ?office dbo:positionHeldBy dbr:Anxo_Quintana ;
          dbo:administration ?administration .
  
  # Álvaro Quirós's residence country
  ?residenceCountry dbo:resident dbr:Álvaro_Quirós .

  FILTER (?residenceCountry = ?administration)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author1 ?work1 ?author2 ?book
WHERE {
  # Joe Biden's written work
  ?work1 a dbo:CreativeWork ;
         dbo:author dbr:Joe_Biden .

  # Commander in North Carolina Air National Guard who is an American author of a book
  ?person a dbo:Politician, dbo:OfficeHolder ;
          dbo:officeLocation dbr:North_Carolina_Air_National_Guard ;
          dbo:work ?book .
  
  ?book a dbo:Book, dbo:CreativeWork ;
        dbp:country ""United States""^^xsd:string .

  # Linking the person to their authorship
  ?person dbo:author ?author2 .
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAthens ?warOfLeader ?warOfAwardee
WHERE {
  # Entity in Athens
  ?entityInAthens dbo:location dbr:Athens .
  
  # Leader of National Party of Greece and their war involvement
  ?leader dbp:party dbr:National_Party_of_Greece ;
          dbo:memberOf ?nationalParty .
  ?warOfLeader dbo:participated ?leader .

  # Awardee in 1930 (assuming Nobel Prize)
  ?awardee dbo:award dbr:Nobel_Prize_in_<Category> ;
           dbo:year <1930> .
  ?warOfAwardee dbo:participated ?awardee .

}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the children of Saw Shwe Khet who are royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child a dbo:Monarch .

  # Find the parent of Min Hla Htut of Pyakaung
  ?minHlaHtutParent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .

  # Ensure the child is also a predecessor of another child of Saw Shwe Khet
  ?predecessor dbo:succeededBy ?child .
  ?predecessor dbo:parent dbr:Saw_Shwe_Khet .

  # Find the father of this child who is royalty
  ?father dbo:spouse ?mother .
  ?father a dbo:Monarch .
  ?child dbo:parent ?father .

  # Get the spouse of this father
  ?spouse dbo:spouse ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorRustlers ?actorShadow ?frédéricProfession
WHERE {
  # Actor in Rustlers' Rhapsody
  ?film dbo:title ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actorRustlers .

  # Actor for The Shadow
  ?character foaf:name ""The Shadow""@en .
  ?filmShadow dbo:starring ?actorShadow .
  ?filmShadow dbo:character ?character .

  # Profession of Frédéric Bouraly
  ?frédéric dbo:foafName ""Frédéric Bouraly""@en .
  ?frédéric dbo:profession ?frédéricProfession .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander ?successor
WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvShow dbo:title ""Always the Love Songs""@en .
  ?tvShow dbo:creator ?writer .

  # Find the commander related to the Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?battle dbo:commander ?commander .

  # Find the successor in the Russo-Polish War who is a politician and office holder
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?war dbo:successor ?successor .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .

  # Ensure the commander and successor are related
  ?commander dbo:succeededBy ?successor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenantSantiago ?countryResidence ?officeAnxoQuintana
WHERE {
  # Tenant of Santiago de Compostela
  OPTIONAL { 
    dbr:Santiago_de_Compostela dbo:location ?tenantSantiago .
  }

  # Residence as a country for Spanish citizens
  OPTIONAL {
    ?person dbp:nationality dbr:Spain ;
            dbo:residence ?countryResidence .
    FILTER (isLiteral(?countryResidence) && datatype(?countryResidence) = xsd:string)
  }
  
  # Office related to Anxo Quintana's administration event
  OPTIONAL {
    ?event dbo:agent dbr:Anxo_Quintana ;
           dbo:office ?officeAnxoQuintana .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
    # Step 1: Find Myat Hpone Pyo's predecessor
    ?myatHponePyo dbo:predecessor ?predecessor .
    FILTER (str(?myatHponePyo) = ""Myat_Hpone_Pyo"") .

    # Step 2: Find Minye Kyawswa's child
    ?minyeKyawswa dbo:child ?childMinyeKyawswa .
    FILTER (str(?minyeKyawswa) = ""Minye_Kyawswa"") .

    # Step 3: Find the parent of this child
    ?parentChildMinyeKyawswa dbo:child ?childMinyeKyawswa .

    # Step 4: Identify Saw Shwe Khet's royal child
    ?sawShweKhet dbo:child ?royalChildSawShweKhet .
    FILTER (str(?sawShweKhet) = ""Saw_Shwe_Khet"") .
    FILTER EXISTS { ?royalChildSawShweKhet a dbo:RoyalPerson } .

    # Step 5: Find the father of this royal child
    ?fatherRoyalChildSawShweKhet dbo:child ?royalChildSawShweKhet .

    # Step 6: Identify the spouse of this father
    ?spouseFatherRoyalChildSawShweKhet dbo:spouse ?fatherRoyalChildSawShweKhet .

    # Step 7: Combine these",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander ?spouse ?politician ?book
WHERE {
  # Step 1: Find the author of ""Back to Work""
  dbr:Back_to_Work_(book) dbo:author ?author .

  # Step 2: Find a commander associated with a war that is both a disease and societal event
  ?war dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""world war i"") || CONTAINS(LCASE(?name), ""flu"")) .
  ?commander dbo:commanded ?war .

  # Step 3: Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Step 4: Find the spouse of the owner
  ?owner dbo:spouse ?spouse .

  # Step 5: Find the politician and office holder who is the spouse
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .

  # Step 6: Identify their work that is a book written by Hillary Clinton
  ?politician dbo:work ?book .
  FILTER(STRSTARTS(STR(?book), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?book dbo:author dbr:Hillary_Clinton } )
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Constance of Burgundy's spouse and their child who is royalty
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Constance_of_Burgundy.
  
  ?child1 dbo:parent ?spouse;
          a dbo:RoyalFamilyMember.

  # Roger II of Sicily's royal child and their parent
  ?royalChild2 dbo:parent dbr:Roger_II_of_Sicily;
               a dbo:RoyalFamilyMember.
  
  ?parent2 dbo:child ?royalChild2.

  # William II of Sicily's father
  ?fatherWilliam2 dbo:child dbr:William_II_of_Sicily.

  # Find the common entity
  FILTER (?child1 = ?commonEntity && ?parent2 = ?commonEntity)
  FILTER (?commonEntity = ?fatherWilliam2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?scientist WHERE {
  # Yandamuri Veerendranath's birthplace
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .

  # Australian Laureate Fellowship awardee's alma mater
  ?awardee dbp:almaMater ?almaMater ;
           dbo:awardReceived dbr:Australian_Laureate_Fellowship .

  # The entity must be both the birthplace and alma mater
  FILTER (?birthPlace = ?almaMater)

  # The scientist is Australian and associated with the alma mater/birthplace
  ?scientist a dbo:Scientist ;
             dbo:nationality dbr:Australia ;
             dbo:affiliation ?almaMater .

  # Ensure the scientist is linked to the birthplace/alma mater
  FILTER (?birthPlace = ?almaMater)
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?skyRangerActorDeathPlace ?colorMeDeadActorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # John Wayne (The Sky Ranger) death place
  dbr:John_Wayne dbo:birthName ""Marion Robert Morrison"" .
  dbr:John_Wayne dbo:deathPlace ?skyRangerActorDeathPlace .

  # George Raft's (Color Me Dead) death place
  dbr:George_Raft dbo:deathPlace ?colorMeDeadActorDeathPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentDoonArbus ?parentProfessionEugeneCattin ?actorMovie

{
  # Parent of Doon Arbus
  {
    SELECT ?parentDoonArbus WHERE {
      dbr:Doon_Arbus dbo:parent ?parentDoonArbus .
    }
  }

  # Parent of the professional in the profession of Eugène Cattin
  {
    SELECT ?professionEugeneCattin ?parentProfessionEugeneCattin WHERE {
      dbr:Eugène_Cattin dbo:occupation ?professionEugeneCattin .
      ?person dbp:occupation ?professionEugeneCattin .
      ?person dbo:parent ?parentProfessionEugeneCattin .
    }
  }

  # Actor of the movie, that is a work, with the person decedent at Los Angeles
  {
    SELECT ?actorMovie WHERE {
      ?movie dbo:starring ?actor .
      ?actor dbo:deathPlace dbr:Los_Angeles .
      ?movie rdf:type dbo:Film .
    }
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .

  # Step 2: Find their children who are politicians
  ?child dbo:parent ?alumnus .
  ?child dbo:occupation dbr:Politician .

  # Step 3: Identify the parent of an awardee of Commander of the Royal Victorian Order
  ?awardee dbp:honours ""Commander of the Royal Victorian Order""@en .
  ?child dbo:parentOf ?awardee .

  # Step 4: Find the child of Frederick Stanley, 16th Earl of Derby
  ?frederickChild dbo:parent dbr:Fredrick_Stanley,_16th_Earl_of_Derby .

  # Step 5: Identify the parent of this child
  ?child2 dbo:parentOf ?frederickChild .
  
  # Ensure the politician is also a parent in step 3 and 5
  FILTER (?child = ?child2)

  # Step 6: Find the father of the politician
  ?father dbo:spouse ?mother .
  ?father dbo:parentOf ?child .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luisesSpouse .
  ?luisesSpouse dbo:spouse ?spouseOfSpouse .
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?childOfFerdinandAlbert .
  FILTER (?spouseOfSpouse = ?childOfFerdinandAlbert)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent
WHERE {
  # Find commander in Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander a dbo:RoyalFamilyMember .

  # Find parent of the commander (also royalty)
  ?parent dbo:child ?commander .
  ?parent a dbo:RoyalFamilyMember .

  # Find child of Baeda Maryam I
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I .

  # Find father of the father (royalty and office holder) of this child
  ?fatherOfFather dbo:child ?parent .
  ?fatherOfFather a dbo:RoyalFamilyMember ;
                  dbo:officeHolder ?office .

  # Get the child of the parent we are interested in
  ?childOfParent dbo:parent ?parent .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?parentOfProfessional WHERE {
  # Allan Arbus' child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?child dbo:childOf ?allanArbus .

  # Parent of Allan Arbus' child
  ?parentOfChild dbo:spouseOrPartner ?allanArbus ;
                 rdfs:label ?parentLabel .

  FILTER (lang(?parentLabel) = 'en')

  # Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  ?profession dbr:Eug%C3%A8ne_Cattin/dbo:occupation .

  # Professional in the same profession as Eugène Cattin
  ?professional a dbo:Person ;
                dbo:occupation ?profession ;
                foaf:name ?name .

  FILTER (lang(?name) = 'en')

  # Parent of the professional
  ?parentOfProfessional dbo:spouseOrPartner ?professional ;
                       rdfs:label ?parentLabel2 .

  FILTER (lang(?parentLabel2) = 'en')

  # Herschel Bernardi's movie and co-actor
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?coActor dbo:starring ?movie ;
           foaf:name ?actorName .

  FILTER (lang(?actorName) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:An_Invitation_to_the_White_House dbo:author dbr:Michelle_Obama .
  
  OPTIONAL { dbr:Michelle_Obama dbo:officeHolderOf ?office . }
  
  OPTIONAL { dbr:Michelle_Obama dbo:spouse ?spouse . }

  FILTER EXISTS { ?office rdf:type dbo:PoliticalOffice }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerJanet ?alterEgoShadow ?producerJohnny
WHERE {
  # Janet Gaynor's famous movie and its producer
  ?movieJanet dbo:starring dbr:Janet_Gaynor .
  ?movieJanet dbo:producer ?producerJanet .

  # The Shadow's alter ego
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  ?shadowAlterEgo rdfs:label ?alterEgoShadow FILTER (lang(?alterEgoShadow) = 'en') .

  # Johnny Doughboy's actor and the producer of his work
  ?actorJohnny dbo:starring dbr:Johnny_Doughboy .
  ?workJohnny dbo:producer ?producerJohnny .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor1DeathPlace ?carolynJonesDeathPlace ?actor2DeathPlace WHERE {
  # Actor of ""The Sky Ranger"" (1928)
  ?film1 rdfs:label ""The Sky Ranger""@en .
  ?film1 dbo:starring ?actor1 .
  ?actor1 dbo:deathPlace ?actor1DeathPlace .

  FILTER(STRSTARTS(STR(?film1), STR(dbr:)))

  # Carolyn Jones' death place
  dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .

  # Actor of ""Aladdin"" (1958)
  ?film2 rdfs:label ""Aladdin""@en .
  ?film2 dbo:starring ?actor2 .
  ?actor2 dbo:deathPlace ?actor2DeathPlace .

  FILTER(STRSTARTS(STR(?film2), STR(dbr:)))
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildRoyalty
WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Identify Philip, Despot of Romania's parent and their father's spouse
  dbr:Philip_Despot_of_Romania dbo:parent ?philipParent .
  ?philipParent dbo:father ?philipGrandfather .
  ?philipGrandfather dbo:spouse ?grandmother .

  # Step 3: Identify Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?charlesParent .

  # Step 4: Find the child of the predecessor and then their child who is a royalty
  ?predecessor dbo:child ?child .
  ?child dbo:child ?childOfChild .
  
  FILTER EXISTS { ?childOfChild dbo:royalty true } # Assuming 'royalty' is a property indicating royal status

  # Ensure the grandmother is related to Charles Martel's parent
  ?grandmother = ?charlesParent .

  # Return the child of the child who is royalty
  BIND(?childOfChild AS ?childOfChildRoyalty)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?spouse ?commander WHERE {
  # Find the author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .
  
  # Ensure the author is Bill Clinton
  ?author rdfs:label ""Bill Clinton""@en .

  # Find the spouse who is a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Identify the war related to a disease and societal event
  ?war dbo:name ?eventName .
  ?war rdf:type dbo:Disease ;
       dbo:societalEvent true .

  # Find the commander of USS Arcadia (ID-1605) in that war
  dbr:USS_Arcadia_(ID-1605) dbo:commander ?commander .
  ?commander dbo:participatedInWar ?war .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?deathPlaceSettlement ?mayorAdministration
WHERE {
  # Christian IX of Denmark and his administration
  dbr:Christian_IX_of_Denmark dbo:positionHeld ?administrationChristianIX .

  # Christian Ditlev Ammentorp Hansen's death place, ensuring it is a settlement
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
  BIND(?deathPlace AS ?deathPlaceSettlement)

  # Duchy of Schleswig and its mayor's administration
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
  ?mayor dbo:positionHeld ?mayorAdministration .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Philip, Despot of Romania and his royal parent
  ?philip a dbr:Philip_Despot_of_Romania ;
          dbo:parent ?royalParent .
  
  FILTER EXISTS { ?royalParent dbo:occupation dbr:Royalty } .

  # Step 2: Find the spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .

  # Step 3: Identify Maria of Bytom's spouse and their child whose father is royalty
  ?mariaSpouse a dbr:Maria_of_Bytom ;
               dbo:spouse ?childFather .
  
  FILTER EXISTS { ?childFather dbo:occupation dbr:Royalty } .

  # Step 4: Connect the relationships
  ?childFather dbo:parent ?royalParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find Kent Allard's alter ego as a fictional character
  dbr:Kent_Allard (dbo:fictionalAlterEgo) ?alterEgo .
  
  # Identify the professional linked to this alter ego
  ?alterEgo dbo:profession ?professional .

  # Ensure this professional produced works for Cora Sue Collins
  ?collinsWork dbo:producer ?professional ;
               dbo:actor dbr:Cora_Sue_Collins .

  # Ensure this professional also produced a movie for Janet Gaynor
  ?gaynorMovie dbo:producer ?professional ;
               dbo:actor dbr:Janet_Gaynor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find the player who is a sports manager and soccer manager of Hong Kong C Team
  ?team dbr:Hong_Kong_C_Team .
  ?manager dbo:position ""sports manager""@en ;
           dbo:position ""soccer manager""@en ;
           dbo:member ?player .

  # Ensure the player is an athlete, soccer player, sports manager, and soccer manager
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  # Match the birthday of the player with Tony Hollings' birthday
  ?player dbo:birthday ?birthday .
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional
WHERE {
  # Step 1: Get Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Step 2: Find the producer of Coke Studio Philippines and their profession
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer a dbo:Person ;
            dbo:profession ?producerProfession .

  # Step 3: Find the band associated with a person born as Bob Thompson's birth name who is a musical artist
  ?person dbo:birthName ?birthName ;
          a dbo:MusicalArtist ;
          dbo:band ?band .

  # Step 4: Find the professional in both the identified profession and band
  ?professional a dbo:Person ;
                dbo:profession ?producerProfession ;
                dbo:band ?band .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .

  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip .
  ?parent dbo:nationality dbr:Royal_Family .

  # Step 3: Find the spouse of this parent
  ?spouse dbo:spouse ?parent .

  # Step 4: Identify Béla IV of Hungary
  ?bela a dbo:Person ;
        foaf:name ""Béla IV of Hungary""@en .

  # Step 5: Find his child who is royalty
  ?child dbo:child ?bela .
  ?child dbo:nationality dbr:Royal_Family .

  # Step 6: Find the parent of this child's father (who is royalty)
  ?father dbo:child ?child .
  ?grandparent dbo:child ?father .

  # Step 7: Identify Charles I of Hungary
  ?charles a dbo:Person ;
           foaf:name ""Charles I of Hungary""@en .

  # Step 8: Find his father who is royalty
  ?charlesFather dbo:child ?charles .
  ?charlesFather dbo:nationality dbr:Royal_Family .

  # Ensure all entities are connected through the described relationships
  FILTER(?grandparent = ?charlesFather)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?hostInstitution WHERE {
  # Find Rainer Weiss as an awardee of the Nobel Prize in Physics
  ?person dbo:awardedNobelPrizeInPhysics dbr:Nobel_Prize_in_Physics_for_the_direct_detection_of_gravitational_waves .
  
  # Ensure the person is Rainer Weiss
  ?person rdfs:label ""Rainer Weiss""@en .

  # Get the award details
  ?award dbo:recipient ?person ;
         a dbo:Award .

  # Find the host institution of the award ceremony
  ?award dbo:awardedBy ?hostInstitution .
  
  # Ensure the host is an educational institution
  ?hostInstitution rdf:type dbo:EducationalOrganization .
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  # Henry Clay Lewis birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:United_States .

  # Find awards given by United States Congress
  ?award dbo:awardingBody dbr:United_States_Congress ;
         dbo:recipient ?recipient .

  # War associated with the recipient of the award
  ?recipient dbo:participatedInWar ?war .

  # Gillmore Medal awardee's force
  ?gillmoreRecipient dbo:awardReceived dbr:Gillmore_Medal .
  ?gillmoreRecipient dbo:militaryForce ?force .

  # Find common entity
  FILTER(?birthPlace = ?entity || ?war = ?entity || ?force = ?entity)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor ?writer WHERE {
  # Identify the Great Turkish War
  VALUES ?war { dbr:Great_Turkish_War }

  # Find the commander involved in this war
  ?commander dbo:participatedIn ?war .
  
  # Determine the successor who is a politician and office holder
  ?successor dbo:succeededBy ?commander ;
            a dbo:Politician ;
            dbp:officeHolder ""true""^^xsd:boolean .

  # Link to the writer of George Ducas' work
  dbr:George_Ducas dbo:authorOf ?work .
  ?writer dbo:authorOf ?work .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderResidence ?awardEntity WHERE {
  # Part 1: Residence of the leader of Ulster Unionist Party
  ?party dbo:leader ?leader .
  ?party rdfs:label ""Ulster Unionist Party""@en .
  
  OPTIONAL { ?leader dbp:residence ?leaderResidence . }
  
  # Part 2: Entity in the award of George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  ?award dbo:name ?awardName .
  ?award dbo:entity ?awardEntity .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?band ?fictionalCharacter
WHERE {
  # Step 1: Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?profession .

  # Step 2: Find a musical artist born as Robert Lamar Thompson in the same band
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person dbo:profession ?profession .
  ?person dbo:musicalArtist ?band .
  
  # Step 3: Identify Walter B. Gibson's fictional character that is also a comics character
  dbr:Walter_B._Gibson dbo:creatorOf ?fictionalCharacter .
  ?fictionalCharacter rdf:type dbo:FictionalCharacter ;
                     dbo:wikiPageWikiLink dbr:Comics .
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfSibling
WHERE {
    # Step 1: Identify Roger III and his parent
    ?rogerIII a dbo:Duke ;
              foaf:name ""Roger III, Duke of Apulia""@en .
    
    ?parent dbo:spouse ?rogerIII ;
            dbo:child ?sibling .

    # Step 2: Find the sibling who is royalty
    ?sibling a dbo:Royalty .

    # Step 3: Identify Constance of Burgundy and her spouse's child
    dbr:Constance_of_Burgundy dbo:spouse ?constanceSpouse .
    
    ?constanceChild dbo:childOf ?constanceSpouse ;
                    dbo:childOf ?constance ;
                    a dbo:Royalty .

    # Step 4: Identify William I of Sicily and his child
    dbr:William_I_of_Sicily dbo:child ?williamChild .
    
    ?williamChild a dbo:Royalty .

    # Step 5: Find the father of William's royal child, matching the sibling from step 2
    ?father dbo:spouse dbr:Constance_of_Burgundy ;
            dbo:child ?constanceChild ;
            dbo:child ?williamChild .
    
    FILTER (?sibling = ?father)
    
    # Return the sibling who is also the father of William's child
    BIND(?sibling AS ?childOfSibling)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Find the administration of the Spanish Socialist Workers' Party
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  # Find the leader of the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  ?leaderPosition dbo:officeHolder ?tenant .
  ?leaderPosition dbo:relatedElection ?election .

  # Find the residence country of Álvaro Quirós
  dbr:Álvaro_Quirós dbo:residenceCountry ?country .

  # Ensure the tenant is associated with all these entities
  ?administration dbo:officeHolder ?tenant .
  ?tenant dbo:nationality ?nationality .
  FILTER (LCASE(STR(?nationality)) = ""spanish"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfYeshaq1 WHERE {
  # Yeshaq I's child who is royalty
  ?yeshaq1 dbr:Yeshaq_I .
  ?yeshaq1 dbo:spouse ?parent .
  ?parent dbo:child ?childOfYeshaq1 .
  ?childOfYeshaq1 a dbo:Monarch .

  # Baeda Maryam I's child and their father
  ?baedaMaryam1 dbr:Baeda_Maryam_I .
  ?baedaMaryam1 dbo:spouse ?parent2 .
  ?parent2 dbo:child ?childOfBaedaMaryam1 .
  
  ?fatherOfChildOfBaedaMaryam1 dbo:child ?childOfBaedaMaryam1 .
  ?fatherOfChildOfBaedaMaryam1 a dbo:Monarch .
  ?fatherOfChildOfBaedaMaryam1 dbo:officeHolder ?office .

  # Connection to Lamont Cranston
  ?alterEgo dbr:Lamont_Cranston .
  
  # Assuming some logical connection or property linking the entities
  FILTER(?childOfYeshaq1 = ?fatherOfChildOfBaedaMaryam1)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?producer ?bandMember WHERE {
  # The Shadow and its alter ego Lamont Cranston
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Noel Cabangon as a producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer dbr:Noel_Cabangon .

  # Bob Thompson and his band Hotdog
  dbr:Hotdog dbo:member dbr:Bob_Thompson .
  
  # Linking professions (musician/producer)
  OPTIONAL { dbr:Lamont_Cranston dbo:profession ?characterProfession . }
  OPTIONAL { dbr:Noel_Cabangon dbo:profession ?producerProfession . FILTER(?producerProfession = ""Musician"" || ?producerProfession = ""Producer"") }
  OPTIONAL { dbr:Bob_Thompson dbo:profession ?bandMemberProfession . FILTER(?bandMemberProfession = ""Musician"") }

  # Ensuring the professions match
  FILTER((?characterProfession = ""Musician"" && ?producerProfession IN (""Musician"", ""Producer"")) || (?bandMemberProfession = ""Musician""))
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember WHERE {
  # Step 1: Find Tisha Sterling's parent and their birth name
  ?tishaSterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .

  # Step 2: Find the actor from ""1,000 Dollars a Minute"" and their spouse
  dbr:""1,000_Dollars_a_Minute"" dbo:actor ?actor .
  ?actor foaf:mbox ?actorEmail .
  ?actor dbo:spouse ?spouse .

  # Step 3: Determine the ruling party in Central, Louisiana
  dbr:Central,_Louisiana dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Step 4: Find a member of that party who matches the birth name and is married to the actor's spouse
  ?partyMember dbo:birthName ?birthName ;
               dbo:memberOfPoliticalParty ?rulingParty ;
               foaf:mbox ?spouseEmail .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find T.I.'s album that is a song and musical work
  ?album dbo:artist dbr:T.I. ;
         a dbo:Album ;
         dbo:song ?song .
  
  # Step 2: Identify the actor associated with this album
  ?actor dbo:actedIn ?album .

  # Step 3: Find the movie where this actor is involved and has an alter ego ""The Shadow""
  ?movie dbo:starring ?actor ;
         dbo:character dbr:The_Shadow .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residenceCountry
WHERE {
  ?person dbo:nationality dbr:Spanish ;
          dbo:country dbr:Spain .
  
  ?office dbo:positionTitle ""Leader""@en ;
          dbo:organization dbr:Spanish_Socialist_Workers'_Party ;
          dbo:holder ?person .

  ?election dbo:electionDate ?date ;
            dbo:winner ?person ;
            dbo:region dbr:Galicia ;
            dbo:date ?year .
  
  FILTER(YEAR(?year) = 2009)

  ?person dbo:residenceCountry ?residenceCountry .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?managerName ?playerManagerName WHERE {
  # Thomas Letsch's management role in the 2007–08 VfL Bochum season
  ?letsch a dbo:FootballManager ;
          foaf:name ""Thomas Letsch"" .
  
  ?season dbo:sport dbr:Soccer ;
          dbo:team dbr:VfL_Bochum_season_2007%E2%80%9308 .

  ?letsch dbo:managedTeam ?season .

  # Manager of the player in VfL Bochum during that season
  ?player dbo:playsFor dbr:VfL_Bochum ;
          dbo:manager ?playerManager .
  
  ?playerManager foaf:name ?playerManagerName .

  # Native country of the leader of West Germany
  ?leader dbp:nativePlace ?country ;
          dbo:position dbr:Chancellor_of_Germany ;
          dbo:country dbr:West_Germany .

  ?letsch dbp:nativePlace ?country .
  
  ?letsch foaf:name ?managerName .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?writer WHERE {
  # Find Jean Baptiste d'Arco as a commander in a war that is both a TV show and societal event
  ?war dbo:type dbr:War .
  ?war dbo:genre dbr:Television_show .
  ?war dbo:societal_event true .
  ?commander dbo:commanded ?war .
  ?commander rdfs:label ""Jean Baptiste d'Arco""@en .

  # Find the successor who is a politician and office holder
  ?successor dbo:predecessor ?commander .
  ?successor dbo:type dbr:Politician .
  ?successor dbo:officeHolder true .

  # Ensure Michał Kazimierz Pac is involved in this force/military conflict
  ?force dbo:type dbr:Military_conflict .
  ?force dbo:participant dbr:Michał_Kazimierz_Pac .
  ?commander dbo:commanded ?force .

  # Reference the writer of ""Always the Love Songs""
  ?writer dbo:work dbr:Always_the_Love_Songs .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Philipp Albrecht, Duke of Württemberg's child
  ?philippChild dbo:child dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Child of that child
  ?grandchild dbo:child ?philippChild .

  # Alexander of Württemberg (1804-1881) descendant three generations down
  ?alexanderChild dbo:child dbr:Aleksandr_von_W%C3%BCrttemberg .
  ?alexanderGrandchild dbo:child ?alexanderChild .
  ?alexanderGreatGrandchild dbo:child ?alexanderGrandchild .

  # Archduke Charles Louis of Austria descendant two generations down who is royalty
  ?archdukeChild dbo:child dbr:Charles_Louis,_Archduke_of_Austria .
  ?archdukeGrandchild dbo:child ?archdukeChild .
  ?archdukeGrandchild dbo:royalty true .

  # Find common individual fitting both descriptions
  FILTER (?grandchild = ?alexanderGreatGrandchild && ?grandchild = ?archdukeGrandchild)

  # Predecessor of the identified individual
  ?predecessor dbo:successor ?grandchild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?youngkinBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Glenn Youngkin's birth place
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .

  # Vince Gilligan's award and awardee's birth place
  OPTIONAL {
    dbr:Vince_Gilligan dbo:award ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Reference to El Deafo and author's birth place
  OPTIONAL {
    ?reference dbo:wikiPageRedirects dbr:El_Deafo .
    ?reference dbo:author ?author .
    FILTER (lang(?author) = 'en') # Ensure the reference is in English
    ?author dbo:nationality dbr:United_States .
    ?author dbo:birthPlace ?authorBirthPlace .
  }
}
```",7,8,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child is a politician
  ?child1 dbo:occupation dbr:Politician .

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent2 .

  # Parent is a politician and office holder
  ?parent2 dbo:occupation dbr:Politician .
  ?parent2 dbo:officeHolder true .

  # Common child who is a politician and an awardee of the Commander of the Royal Victorian Order
  ?child1 dbo:awardeeOf dbr:Commander_of_the_Royal_Victorian_Order .
  
  # The father of this common child
  ?child1 dbo:father ?father .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonProfession WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?sinhaProfession .
  
  # Richard Briers' profession and alter ego
  dbr:Richard_Briers dbo:occupation ?briersProfession ;
                     foaf:name ""The Shadow""@en .

  # Ensure both have the same profession
  FILTER(?sinhaProfession = ?briersProfession)
  
  # Bind the common profession to a variable
  BIND(?sinhaProfession AS ?commonProfession)
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies authored by Douglas Coupland
  ?movie dbo:author dbr:Douglas_Coupland .
  
  # Find actors in those movies
  ?movie dbo:starring ?actor .

  # Find albums titled ""Urban Legend""
  ?album rdfs:label ""Urban Legend""@en .
  
  # Identify artists of the album
  ?album dbo:artist ?artistActor .

  # Check if any actor is common between the movie and the album
  FILTER (?actor = ?artistActor)
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBirthPlace ?awardeeBirthPlace WHERE {
  # Find the actor associated with ""Akaler Shandhaney""
  ?film dcterms:title ""Akaler Shandhaney""@en .
  ?film dbo:starring ?actor .

  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find awardees of Sangeet Natak Akademi Fellowship
  ?awardee dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  
  # Get the birthplace of these awardees
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Medal of Honor awardee's war
  ?medalAwardee dbo:award dbr:Medal_of_Honor .
  ?medalAwardee dbo:servedInMilitaryConflict ?war .

  # Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryForce ?force .

  # Find the entity that matches both conditions
  FILTER (?birthPlace = ?entity || ?war = ?entity || ?force = ?entity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Maximilian I, Holy Roman Emperor and his children
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?maxChild .

  # Dorothea of Denmark's parent (mother)
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?dorotheasMother .

  # Philip I of Castile and his royal child
  dbr:Philip_I,_King_of_Castile dbo:child ?philipChild .
  FILTER EXISTS { ?philipChild a dbo:Monarch }  # Ensure the child is royalty

  # Conditions to find the individual
  FILTER (?maxChild = ?dorotheasMotherFather && ?maxChild = ?philipsChildsFather)
  
  # Dorothea's mother's father (Maximilian I's child)
  ?dorotheasMother dbo:parent ?dorotheasMotherFather .

  # Philip's royal child's father
  ?philipChild dbo:father ?philipsChildsFather .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?soccerPlayer ?team
WHERE {
  # Step 1: Find Marty Pollio's birthday
  VALUES ?martyPollio (dbr:Marty_Polio) .
  
  ?martyPollio dbo:birthday ?birthday .

  # Step 2: Find an athlete born on that date
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthday .

  # Step 3: Identify Manuel Huerga's film
  VALUES ?manuelHuerga (dbr:Manuel_Huerga) .
  
  ?film dbo:director ?manuelHuerga ;
        a dbo:Film .

  # Step 4: Find a soccer player in that film
  ?soccerPlayer dbo:occupation dbr:Soccer_player ;
                dbo:birthDate ?birthday ; # Ensure they are an athlete born on the same date
                dbo:film ?film .

  # Step 5: Find Pablo Aimar's team
  VALUES ?pabloAimar (dbr:Pablo_Aimar) .
  
  ?pabloAimar dbo:team ?team .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's office of commander in a military conflict
  ?manuelPinto dbo:officeOfCommander ?officeOfCommander .
  
  ?officeOfCommander dbo:type ?conflictType .
  FILTER (?conflictType IN (dbr:Military_Conflict, dbr:Societal_Event)) .

  # Ensure Manuel Pinto da Costa is a politician and office holder
  ?manuelPinto dbo:occupation dbr:Politician ;
               dbo:officeHolder true .

  # Residence of the leader from the 2003 Madrid City Council election
  ?madridElectionLeader dbo:residence ?leaderResidence .
  
  ?madridElectionLeader dbo:electedDuring dbr:2003_Madrid_City_Council_election ;
                        dbo:officeHolder true .

  # Office of Miguel Maura
  ?miguelMauraOffice dbo:officeHolder ?miguelMaura .
  ?miguelMauraOffice dbo:residence ?leaderResidence .

  # Linking the residence to the office of Manuel Pinto da Costa
  ?manuelPinto dbo:tenantOfResidence ?leaderResidence .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Maria Anna of Bavaria and her child
  dbr:Maria_Anna_of_Bavaria dbo:spouse ?husband .
  ?husband dbo:child ?child .

  # The father of the child is Maria Anna's husband
  ?father dbr:Maria_Anna_of_Bavaria#spouse .

  # Check if the child is royalty
  ?child a dbo:Monarch .

  # Find someone who was a commander in war
  ?commander dbo:militaryCommanderOf ?war .
  
  # Link to 2nd Dragoon Regiment (France) as an event and societal event, also related to a TV show
  ?event dbo:participatedIn ?war ;
         a dbo:SocietalEvent , dbo:Event ;
         dbo:depicts ?tvShow .

  dbr:2nd_Dragoon_Regiment_(France) dbo:participatedIn ?event .

  # Connect to Ferdinand III's child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinandChild .
  ?father dbr:Maria_Anna_of_Bavaria#spouse ;
          dbo:child ?ferdinandChild .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Find Linda Bruckheimer's birth name
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .

  # Step 2: Find the person born with that birth name
  ?person dbo:birthName ?birthName .
  
  # Step 3: Determine their spouse
  ?person foaf:mbox ?spouseEmail .
  ?spouse foaf:mbox ?spouseEmail .
  
  # Step 4: Identify a movie produced by this spouse and find its producer
  ?movie dbo:producer ?spouse ;
         dbo:productionCompany ?company .
  ?company dbo:founder ?producer .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:force dbr:Quincy_Adam_Gillmore .
  
  ?person dbo:birthPlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbp:country dbr:United_States .

  ?award dbo:awardee ?person ;
         dbo:givenBy dbr:United_States_Congress .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?project WHERE {
  # The Shadow's alter ego in comics
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor ;
                       dbo:profession dbr:Politician .

  # Richard E. Grant and a project with Shatrughan Sinha
  ?project dbo:starring dbr:Richard_E._Grant .
  ?project dbo:starring dbr:Shatrughan_Sinha .

  # Ensure the project is a movie or TV show
  ?project rdf:type ?type .
  FILTER (?type IN (dbr:Film, dbr:TelevisionShow))
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find a person who is a musical artist
  ?person a dbo:MusicalArtist .

  # This person was born with the birth name of someone native to Florida
  ?person dbo:birthName ?birthName .
  ?nativePerson dbo:nativePlace dbr:Florida .
  ?nativePerson dbo:birthName ?birthName .

  # The award is associated with a region, American state, and settlement
  ?award dbo:recipient ?person .
  ?region rdf:type dbo:Region ;
          dbo:country dbr:United_States ;
          dbo:stateOrProvince ?state ;
          dbo:settlement ?settlement .
  ?award dbo:location ?region .

  # The person is connected to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro a dbo:MusicalArtist ;
        dbo:member ?person .
  FILTER (str(?coro) = ""Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico"")

  # The person is a band member of the musical artist associated with Bobby Shmurda
  ?bobbyShmurda a dbo:MusicalArtist ;
                dbo:associatedBandMember ?bandMember .
  FILTER (str(?bobbyShmurda) = ""Bobby_Shmurda"")
  ?person dbo:member ?bandMember .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the album associated with T.I.'s song ""What You Know""
  ?song dbo:title ""What You Know"" ;
        dbo:artist dbr:T.I. ;
        dbo:album ?album .

  # Find actors involved in that album
  ?album dbo:performer ?actor .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfBirthPlace ?musicalWorkArtist WHERE {
  # Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .

  # Native of the birth place
  ?person dbo:nativeOf ?birthPlace .
  BIND(?person AS ?nativeOfBirthPlace)

  # Steven Kapur's musical work
  dbr:Steven_Kapur dbo:work ?musicalWork .
  FILTER(STRSTARTS(STR(?musicalWork), ""http://dbpedia.org/resource/Category:Musical_works""))

  # Artist of the musical work
  ?musicalWork dbo:artist ?artist .
  BIND(?artist AS ?musicalWorkArtist)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?universityLuiza ?foundingDateLuiza ?universityEleonora ?foundingDateEleonora 
WHERE {
  # Luiza Erundina's alma mater
  dbr:Luiza_Erundina dbo:almaMater ?universityLuiza .
  ?universityLuiza a dbo:University ;
                  dbp:foundingDate ?foundingDateLuiza .

  # Eleonora Menicucci de Oliveira's alma mater
  dbr:Eleonora_Menicucci_de_Oliveira dbo:almaMater ?universityEleonora .
  ?universityEleonora a dbo:University ;
                     dbp:foundingDate ?foundingDateEleonora .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchildOfPhilipp ?royalGrandchildOfCharlesLouis ?predecessor
WHERE {
  # Duke Philipp of Württemberg's grandchild
  ?philipp dbo:spouse ?spouse1 .
  ?spouse1 dbo:child ?child1 .
  ?child1 dbo:child ?grandchildOfPhilipp .

  # Archduke Charles Louis of Austria's royal grandchild
  ?charlesLouis dbo:spouse ?spouse2 .
  ?spouse2 dbo:child ?child2 .
  ?child2 dbo:child ?royalGrandchildOfCharlesLouis .
  FILTER EXISTS { ?royalGrandchildOfCharlesLouis rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember }

  # Archduchess Helena of Austria's step-grandchild
  ?helena dbo:spouse ?spouse3 .
  ?spouse3 dbo:child ?stepChild .
  ?stepChild dbo:child ?stepGrandchild .

  # Predecessor relationship (assuming temporal or hierarchical)
  ?royalGrandchildOfCharlesLouis dbo:predecessor ?predecessor .
  FILTER EXISTS { ?predecessor rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
    # Step 1: Minye Kyawswa's child
    ?childMinyeKyawswa dbo:parent dbr:Minye_Kyawswa .
    
    # Step 2: Parent of Minye Kyawswa's child
    ?parentChildMinyeKyawswa dbo:child ?childMinyeKyawswa .

    # Step 3: Spouse of Saw Shwe Khet
    ?spouseSawShweKhet dbo:spouse dbr:Saw_Shwe_Khet .
    
    # Step 4: Predecessor of the spouse's child
    ?childSpouseSawShweKhet dbo:parent ?spouseSawShweKhet .
    ?predecessorChildSpouseSawShweKhet dbo:successor ?childSpouseSawShweKhet .

    # Step 5: Saw Min Phyu's spouse and their child
    ?spouseSawMinPhyu dbo:spouse dbr:Saw_Min_Phu .
    ?childSpouseSawMinPhyu dbo:parent ?spouseSawMinPhyu .

    # Final condition: The entity must be a royalty and match both conditions
    ?entity rdf:type dbo:Royalty ;
            rdfs:label ?label ;
            (dbo:parent|dbo:successor) ?predecessorChildSpouseSawShweKhet ;
            dbo:child ?childSpouseSawMinPhyu .
}
ORDER BY ?label",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Eleonore of Austria
    dbr:Eleonore_of_Austria_queen_of_Poland dbo:parent ?mother .
    
    # Her father
    ?mother dbo:spouse ?father .

    # Maria Anna of Bavaria (born 1574)
    dbr:Maria_Anna_of_Bavaria_(1574-1616) dbo:child ?child .
    
    # The child's father is Eleonore's father
    ?child dbo:parent ?mother .
    ?mother dbo:spouse ?father .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nickCurranArtist ?kimWilsonBand ?bandMemberBand ?personBorn1945
WHERE {
  # Nick Curran's associated musical artist
  OPTIONAL {
    ?nickCurran dbr:Nick_Curran .
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranArtist .
  }

  # Kim Wilson's band and its real name
  ?kimWilson dbr:Kim_Wilson .
  ?kimWilson dbo:band ?kimWilsonBand .
  ?kimWilsonBand dbp:realName ?realName .

  # Person born on 1945-03-30 who is a musical artist
  OPTIONAL {
    ?personBorn1945 dbo:birthDate ""1945-03-30""^^xsd:date ;
                    a dbo:MusicalArtist .
    ?personBorn1945 dbo:band ?bandMemberBand .
    ?bandMemberBand dbo:member ?bandMember .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfPhotographer ?parentOfAllanChild ?actorInMovie
WHERE {
  # Find a photographer and their parent
  ?photographer dbo:occupation dbr:Photography.
  ?photographer dbo:parent ?parentOfPhotographer.

  # Find Allan Arbus's child and their parent
  dbr:Allan_Arbus dbo:child ?allanChild.
  ?allanChild dbo:parent ?parentOfAllanChild.

  # Find a movie where an actor died in Los Angeles
  ?movie dbo:starring ?actorInMovie.
  ?decedent dbo:deathPlace dbr:Los_Angeles.
  ?decedent foaf:name ?actorName.
  FILTER EXISTS { ?actorInMovie foaf:name ?actorName }

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianChild ?parentOfAwardee WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Find a child who is a politician
  ?child dbo:occupation dbr:Politician .
  
  # Parent of the politician child (should be Frederick Stanley)
  ?politicianChild dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # Awardee of Rodney Lees award and their parent
  ?awardee dbo:awardReceived dbr:Rodney_Lees_Award .
  ?awardee dbo:parent ?parentOfAwardee .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Dizzee Rascal as a writer of ""The Live Anthology"" and a musical artist
  ?dizzeeRascal dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?dizzeeRascal foaf:name ""Dizzee Rascal""@en .
  ?work dbo:title ""The Live Anthology""@en ;
        dbo:writer ?dizzeeRascal .
  ?dizzeeRascal a dbo:MusicalArtist .

  # Tupac Shakur's birth name
  ?tupac dbo:birthName ?birthNameTupac .
  ?tupac foaf:name ""2Pac""@en .

  # Associated musical artists with Tupac Shakur
  ?association dbo:associatedMusicalArtist ?person ;
               dbo:musicalArtist1 ?tupac .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  # Hillary Clinton's book
  ?book dbo:author dbr:Hillary_Clinton ;
        a dbo:Book .

  # Spouse of Hillary Clinton who is also an author and politician
  ?spouse dbo:spouse dbr:Hillary_Clinton ;
          dbo:occupation dbr:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:author ?book .

  # Author related to the spouse
  ?author dbo:spouse ?spouse ;
          dbo:occupation dbr:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:writtenWork ?work .
  
  # Third Taiwan Strait Crisis commander
  ?commander dbo:commanded dbr:Third_Taiwan_Strait_Crisis ;
             dbo:spouse ?spouse .

}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Na'od's father
  ?naod a dbo:Person ;
        dbo:father ?fatherNaod .

  # Father of the father (Grandfather) who is royalty and an office holder
  ?fatherNaod dbo:father ?grandfather .
  ?grandfather a dbo:Royalty ;
              dbo:officeHolder ?office .

  # Commander in Siege of Mukha
  ?commander a dbo:Person ;
             dbp:role ""Commander"" ;
             dbo:participatedIn <http://dbpedia.org/resource/Siege_of_Mukha> .

  # Parent of the commander who is royalty
  ?parentCommander dbo:father ?commander .
  ?parentCommander a dbo:Royalty .

  # Alter ego of The Shadow
  ?shadowAlterEgo dbp:alterEgo ""The Shadow"" .

  # Linking all parts together
  FILTER(?grandfather = ?parentCommander)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Find a person with the same birth name who is a musical artist
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation dbr:Musical_artist .

  # Ensure this person has a profession like Sam Concepcion's
  ?sam dbp:profession ?concepcionProfession .
  ?person dbo:profession ?concepcionProfession .

  # Ensure this person has an alter ego like The Shadow
  ?shadow dbp:alterEgo dbr:The_Shadow .
  ?person dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo rdfs:label ""The Shadow""@en .

  # Find the band associated with this person
  ?person dbo:band ?band .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?barrerasParty ?galanCountry ?petroParty
WHERE {
  # Roy Leonardo Barreras Montealegre's party
  ?barreras dbo:birthName ""Roy Leonardo Barreras Montealegre""@en .
  ?barreras dbo:partyAffiliation ?barrerasParty .

  # Daniel Elahi Galán's country
  ?galan dbo:birthPlace ?place .
  ?place dbp:country ?galanCountry .

  # Gustavo Petro's party
  ?petro dbo:birthName ""Gustavo Petro""@en .
  ?petro dbo:partyAffiliation ?petroParty .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?war ?tvShow WHERE {
  # George Ducas as a commander
  dbr:George_Ducas dbo:commanderOf ?force .
  
  # Successor who is a politician and office holder
  ?successor dbo:succeededBy dbr:George_Ducas ;
             rdf:type dbo:Politician, dbo:OfficeHolder .

  # Michał Kazimierz Pac related to force, event, and military conflict
  ?force dbo:commandedBy dbr:Michał_Kazimierz_Pac ;
         a dbo:MilitaryConflict .

  # Commander in the war linked to a television show and societal event
  ?war dbo:commander dbr:Michał_Kazimierz_Pac ;
       dbo:relatedEvent ?tvShow .
  
  # Battle of Vienna as a military force
  ?force dbo:partOf dbr:Battle_of_Vienna .

  # Ensure the war is also linked to a television show and societal event
  ?war rdf:type dbo:SocietalEvent, dbo:TelevisionShow .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Find the deceased person
  ?deceased a dbo:MusicalArtist ;
            dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)

  # Step 2: Find the work authored by this person
  ?work dbo:author ?deceased ;
        a dbo:Film ;  # Assuming both movie and television show are categorized under Film
        a dbo:TelevisionShow .

  # Step 3: Identify the native of London who is an artist and musical artist
  ?native dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London ;
          a dbo:Artist, dbo:MusicalArtist ;
          dbp:works ?work .

  # Step 4: Find the parent of this native
  ?native dbo:parent ?parent .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonParent
WHERE {
  # Princess Aisha bint Faisal's parent who is a royalty
  ?princessAisha dbo:parent ?parent1 .
  ?parent1 rdf:type dbo:Monarch .

  # Prince Faisal bin Hussein's child who is a royalty
  ?princeFaisal dbp:child ?child2 .
  ?child2 rdf:type dbo:Monarch .

  # Find the common parent of these two royals
  ?parent1 dbo:parent ?commonParent .
  ?child2 dbo:parent ?commonParent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Ab_Kya_Hoga a dbo:TelevisionShow .

  ?showActor dbo:actor dbr:Ab_Kya_Hoga .
  
  ?showActor dbo:occupation dbr:Politician .

  ?showActor rdfs:label ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerTomSawyer ?producerClaimToFame
WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:director ?director .
  ?director dbo:worksFor ?productionCompany .
  ?productionCompany dbo:president ?producerTomSawyer .

  # Actor of ""High Society Blues""
  dbr:High_Society_Blues dbo:starring ?actor .
  
  # Claim to Fame (a notable work by the actor)
  ?actor dbo:film ?claimToFameWork .
  
  # Alter ego of Kent Allard
  dbr:Kent_Allard dbo:fictionalAlterEgo ?alterEgoCharacter .
  ?alterEgoCharacter dbo:profession ?professional .

  # Producer of the claim to fame
  ?claimToFameWork dbo:producer ?productionCompanyClaimToFame .
  ?productionCompanyClaimToFame dbo:president ?producerClaimToFame .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1Band ?artist2Band ?realName
WHERE {
  # Find Nicholas Michael Curran and his band
  ?person1 dbo:name ""Nicholas Michael Curran""@en .
  ?person1 dbo:birthDate ?date1 .
  ?person1 dbo:occupation dbr:Musical_artist .
  ?person1 dbo:musicGroup ?artist1Band .

  # Find the person born on 1945-03-30 and their band
  ?person2 dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person2 dbo:occupation dbr:Musical_artist .
  ?person2 dbo:musicGroup ?artist2Band .

  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:realName ?realName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?movieAudreyHepburn ?movieIlizaShlesinger
WHERE {
  # Find Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Find movies with Audrey Hepburn as an actor
  ?movieAudreyHepburn a dbo:Film ;
                     dbo:starring dbr:Audrey_Hepburn ;
                     rdf:type dbo:Work .
  
  # Find movies with Iliza Shlesinger as an actor
  ?movieIlizaShlesinger a dbo:Film ;
                        dbo:starring dbr:Iliza_Shlesinger ;
                        rdf:type dbo:Work .

}
```",5,9,6,2,3,2,3,28,1,28,0,0.034482758620689655,1.0,0.06666666666666667
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthplace WHERE {
  # Find awardees of Anita Borg Institute Women of Vision Awards who are Japanese
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbp:nationality dbr:Japan .

  # Get the birthplace of these awardees
  ?awardee dbo:birthPlace ?birthplace .

  # Find the time zone region for Kiyosu
  dbr:Kiyosu dbo:timeZoneRegion ?region .

  # Ensure the birthplace is in the same time zone region as Kiyosu
  ?birthplace dbo:timeZoneRegion ?region .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?alterEgo WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander a dbo:Monarch ;
             dbo:placeOfBirth dbr:Siege_of_Mukha ;
             dbo:spouse ?parent .

  # Ensure the commander is royalty
  ?commander dbo:royalHouse ?royalHouse .

  # Find the parent of this commander who is also royalty
  ?parent a dbo:Monarch ;
          dbo:child ?child .

  # Ensure the parent is royalty
  ?parent dbo:royalHouse ?royalHouse .

  # The child should be the father of Baeda Maryam I
  ?child dbo:spouse dbr:Baeda_Maryam_I .

  # Reference to Lamont Cranston's alter ego
  BIND(""The Shadow"" AS ?alterEgo)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  ?successorSeason dbo:succeeds dbr:VfL_Bochum_2006%E2%80%9307_season .
  
  # Ensure it's a football league season, sports team season, and sports season
  ?successorSeason rdf:type dbo:FootballLeagueSeason ;
                   rdf:type dbo:SportsTeamSeason ;
                   rdf:type dbo:SportsSeason .

  # Find the manager of a player in this successor season
  ?player dbo:playsFor ?club .
  ?club rdf:type dbo:SoccerClub ;
        rdf:type dbo:Organization ;
        rdf:type dbo:SportsClub .
  
  ?manager dbo:manages ?player .
  
  # Ensure the manager is associated with Thomas Letsch's team
  ?letschTeamSeason dbo:managedBy dbr:Thomas_Letsch .
  ?letschTeamSeason rdf:type dbo:SoccerClubSeason ;
                    rdf:type dbo:SportsSeason ;
                    rdf:type dbo:SportsTeamSeason .

  ?manager dbo:manages ?letschPlayer .
  ?letschPlayer dbo:playsFor ?letschTeam .

  # Ensure the manager is from Germany (Theodor Heuss's native country)
  ?manager dbo:nationality dbr:Germany .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentAmyArbus ?childOfSpouse ?movie
WHERE {
  # Parent of Amy Arbus
  ?amyArbus dbo:birthName ""Amy Arbus""@en.
  ?amyArbus dbo:parent ?parentAmyArbus.

  # Spouse of Mariclare Costello
  ?mariclareCostello dbo:birthName ""Mariclare Costello""@en.
  ?mariclareCostello dbo:spouse ?spouse.

  # Child of the spouse
  ?childOfSpouse dbo:parent ?spouse.

  # Actor of a movie with decedent at Los Angeles
  ?childOfSpouse dbo:film ?movie.
  ?movie dbo:location dbr:Los_Angeles.
  ?decedent dbo:deathPlace dbr:Los_Angeles.
  ?movie dbo:actor ?childOfSpouse.
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInAgüeroTeam ?playerInAthleteTeam
WHERE {
  # Find the team of the person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  dbr:Sergio_Agüero dbo:playsFor ?team1 .
  
  ?person1 dbp:birthday ?birthdaySarmiento ;
           dbo:occupation ?occupation1 .
  FILTER (?birthdaySarmiento = ""1984-02-02""^^xsd:date) # Marcelo Sarmiento's birthday
  FILTER (CONTAINS(LCASE(?occupation1), ""soccer player"") && CONTAINS(LCASE(?occupation1), ""manager""))

  # Find the player in the team of the person born on Marty Pollio's birthday who is an athlete
  ?person2 dbp:birthday ?birthdayPollio ;
           dbo:playsFor ?team2 .
  FILTER (?birthdayPollio = ""1970-01-15""^^xsd:date) # Marty Pollio's birthday
  FILTER (CONTAINS(LCASE(?occupation1), ""athlete""))

  ?playerInAgüeroTeam dbo:playsFor ?team1 .
  ?playerInAthleteTeam dbo:playsFor ?team2 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAlbrecht WHERE {
  # Step 1: Find a child of Albrecht, Duke of Württemberg
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Step 2: Find the grandchild (child of the child) that is royalty
  ?grandchild dbo:parent ?albrechtChild .
  ?grandchild a dbo:Monarch .

  # Step 3: Identify the parent of Archduchess Margarete Sophie of Austria
  ?margareteParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Step 4: Find the spouse of Archduchess Helena of Austria and their child who is royalty
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?childOfHelenaSpouse dbo:parent ?helenaSpouse .
  ?childOfHelenaSpouse a dbo:Monarch .

  # Step 5: Find the predecessor of the child of Helena's spouse
  ?predecessor dbo:successor ?childOfHelenaSpouse .

  # Combine to find the correct individual
  FILTER (?grandchild = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice ?tenantResidence
WHERE {
  # Office of the Commander in Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?commanderOffice .
  ?war dbr:Central_African_Republic_Civil_War ;
       dbo:hasParticipant ?commander .

  # Office of the Leader of Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:partyLeaderOf dbr:Conservative_Republican_Party_(Spain) ;
          dbo:officeHolderOf ?leaderOffice .

  # Tenant of the Residence of the Leader in 2003 Madrid City Council Election
  ?election dbr:2003_Madrid_City_Council_election ;
            dbo:electedOfficial ?leader .
  ?residence dbo:tenant ?leader .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Elorm Kabu Amenyah is Shatta Wale
  dbr:Shatta_Wale dbo:birthName ""Elorm_Kabu_Amenyah""@en .
  
  # Find an artist from Central Region, Ghana
  ?person dbp:nativePlace dbr:Central_Region_(Ghana) ;
          a dbo:MusicalArtist .

  # Rod Argent's profession is musician
  dbr:Rod_Argent dbo:profession dbr:Musician .
  
  # Ensure the person from Central Region is also a musician
  ?person dbo:profession dbr:Musician .

  # Get associated artists
  ?artist1 dbo:associatedMusicalArtist ?person ;
           a dbo:MusicalArtist .
  ?artist2 dbo:associatedMusicalArtist ?person ;
           a dbo:MusicalArtist .
  
  FILTER(?artist1 != ?artist2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?nickname WHERE {
  # Find the writer of ""The First Glove""
  ?book dbo:author ?writer .
  
  FILTER (str(?book) = ""The_First_Glove"")

  # The player is also this writer
  ?player dbo:nationality dbr:Russia ; # Assuming Denis Kolodin is Russian
          foaf:name ""Denis Kolodin"" ;
          dbo:wikiPageRedirects ?writer .

  # The nickname of the player is a soccer club
  ?player dbo:nickname ?nickname .
  
  FILTER EXISTS { 
    ?club rdf:type dbo:SoccerClub .
    ?club rdfs:label ?nickname .
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Elorm Kabu Amenyah's associated musical artist
  OPTIONAL { 
    ?elorm dbo:birthName ""Elorm Kabu Amenyah""@en .
    ?elorm dbo:associatedMusicalArtist ?artist .
  }

  # Joey B's birth name and associated musical artist
  OPTIONAL {
    ?joey dbo:birthName ?joeyBirthName .
    FILTER(CONTAINS(LCASE(?joeyBirthName), ""joey b""))
    ?joey dbo:associatedMusicalArtist ?artist .
  }

  # Writer of The Live Anthology who is also a musical artist
  OPTIONAL {
    ?anthology dbo:writer ?writer .
    FILTER(STRSTARTS(STR(?anthology), STR(dbr:The_Live_Anthology)))
    ?writer dbo:profession dbr:Musical_artist .
    ?writer dbo:associatedMusicalArtist ?artist .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeWar ?baggovutWar ?birthPlaceEntity
WHERE {
  # Find an awardee of the Golden Sword for Bravery and their associated war
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:militaryConflict ?awardeeWar .

  # Find Karl Gustav von Baggovut's associated war
  dbr:Karl_Gustav_von_Baggovut dbo:militaryConflict ?baggovutWar .

  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find entities related to the birthplace
  ?birthPlaceEntity dbo:location ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?professionalRole
WHERE {
  # Step 1: Find T.I.'s album that includes a song and musical work
  ?album dbo:artist dbr:T.I. ;
         dbo:genre ?genre .
  
  ?song dbo:album ?album ;
        rdf:type dbo:Songs .

  ?musicalWork dbo:album ?album ;
               rdf:type dbo:MusicalWorks .

  # Step 2: Find the actor of this album's work
  ?actor dbo:actedIn ?work .
  ?work dbo:album ?album .

  # Step 3: Identify the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Step 4: Find the movie involving both the actor and the author
  ?movie dbo:starring ?actor ;
         dbo:writer ?author .

  # Step 5: Determine the professional role of this actor in that movie
  ?actorRole dbo:roleName ?professionalRole .
  ?actorRole dbo:actor ?actor ;
             dbo:inMovie ?movie .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?bayneWar ?bayneCommander ?tripleXWar
WHERE {
  # Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts ?battle;
    dbo:participatingMilitaryUnit ?battleMilitaryForce.

  # Military conflict/event involving William Bayne
  ?bayneWar dbo:reference ?bayneReference.
  ?bayneReference foaf:name ""William Bayne""@en.
  ?bayneWar dbo:commander ?bayneCommander.

  # War involving ""The Triple X's""
  ?tripleXFigure foaf:name ""The Triple X's""@en.
  ?tripleXWar dbo:reference ?tripleXReference;
    dbo:participatingMilitaryUnit ?tripleXFigure.
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Saw Shwe Khet's child
  ?sawChild dbo:childOf dbr:Saw_Shwe_Khet .
  
  # Minye Kyawswa's grandchild
  ?minyeParent dbo:childOf dbr:Minye_Kyawswa ;
               dbo:child ?minyeGrandchild .

  # Myat Hpone Pyo's spouse's father
  ?myatSpouse dbo:spouse dbr:Myat_Hpone_Pyo .
  ?father dbo:parentOf ?myatSpouse .

  # Find the individual who is a royalty and fits all these relationships
  ?individual dbo:childOf ?sawChild ;
              dbo:childOf ?minyeGrandchild ;
              dbo:spouseOfFather ?father ;
              a dbo:Royalty .

  # Predecessor of this individual
  ?predecessor dbo:successor ?individual .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Pickett's Charge commander
  ?charge dbo:commandedBy ?commander .
  
  # Pickett's Charge is part of the American Civil War
  ?charge dbo:partOf dbr:American_Civil_War .

  # The American Civil War is a societal event
  dbr:American_Civil_War rdf:type dbo:SocietalEvent .

  # Commander was part of a military force in the war
  ?commander dbo:militaryServiceIn dbr:Confederate_States_Army .

  # Ruling party in Westport, Connecticut
  ?party dbp:location dbr:Westport,_Connecticut ;
         rdf:type dbo:PoliticalParty .
  
  # Commander is a member of this ruling party
  ?commander dbo:memberOf ?party .
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent
WHERE {
  # Roger II of Sicily
  ?roger2 dbo:child ?child1 .
  
  # Child of Roger II who is royalty and parent of another child
  ?child1 a dbo:Royalty ;
          dbo:parent ?parent1 .

  # Parent's child (grandchild of Roger II) who is royalty
  ?parent1 dbo:child ?child2 .
  
  # This child is the father of another child, who is royalty and an office holder
  ?child2 a dbo:Royalty ;
          dbo:hasChild ?fatherChild .

  # Father's child (great-grandchild of Roger II) who is royalty and an office holder
  ?fatherChild a dbo:Royalty ;
               dbo:officeHolder ?office1 ;
               dbp:reference ?williamI .
  
  # Reference to William I and child of Elvira of Castile
  ?williamI dbo:child ?elviraChild .
  ?elviraChild dbo:parent dbr:Elvira_of_Castile .

  # The initial query asks for the child of the parent of the first child
  ?parent1 dbo:child ?childOfParent .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find the landmark with the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.116800000000001347""^^xsd:float .

  # Step 2: Find the ruling party associated with this landmark's location
  ?landmark dbo:location ?location .
  ?location dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Step 3: Identify Nat Levine's film products
  dbr:Nat_Levine dbo:filmProduction ?film .

  # Step 4: Determine the actor of these films
  ?film dbo:actor ?actor .

  # Step 5: Find the spouse of these actors
  ?actor dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum in the 2007–08 season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:season dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Manager of the player, who is an organization and a sports club and soccer club
  ?manager dbo:manages ?player ;
           rdf:type dbo:SportsClub ;
           rdf:type dbo:SoccerClub ;
           dbp:nativeCountry dbr:Germany .

  # The manager's native country is Germany (Theodor Heuss was President of Germany)
  ?theodorHeuss dbo:country dbr:Germany .
  
  # Manager managed a team during a specific season
  ?teamSeason dbo:season ?someSeason ;
              rdf:type dbo:SoccerClubSeason ;
              rdf:type dbo:SportsTeamSeason .

  ?manager dbo:manages ?teamSeason .

  # The manager is born on 1968-08-26 and is a sports manager
  ?person dbp:birthday ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .
  
  ?manager rdfs:label ?person .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Films produced by Nat Levine
  ?film dbo:producer ?natLevine .
  ?natLevine rdfs:label ""Nat Levine""@en .

  # Actor in the film
  ?film dbo:starring ?actor .

  # Spouse of the actor
  ?actor dbp:spouse ?person .

  # Check if person is a party member in Central, Louisiana
  OPTIONAL {
    ?person dbo:memberOf ?party .
    ?party dbo:location dbr:Central,_Louisiana .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist
WHERE {
  # Puff Daddy's birth name
  dbr:Puff_Daddy dbo:birthName ?puffDiddyBirthName .
  
  # Find a musician from Central Region, Ghana
  ?musician dbo:birthPlace ?centralRegionGhana ;
            dbp:nativeName ?nativeName ;
            dbo:profession dbr:Musician .

  FILTER (CONTAINS(LCASE(?centralRegionGhana), ""central region"") &&
          CONTAINS(LCASE(?nativeName), ""ghana""))

  # Find associated musical artists
  OPTIONAL { ?artist dbo:associatedMusicalArtist ?puffDiddyBirthName . }
  OPTIONAL { ?artist dbo:associatedMusicalArtist ?musician . }

  FILTER (?artist != dbr:Puff_Daddy && ?artist != ?musician)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Arthur Stanley's father
  VALUES (?arthur) { dbr:Arthur_Stanley_(politician) }
  ?arthur dbo:father ?father1 .

  # Awardee of Rodney Lees and their parent
  ?award dbo:recipient ?awardee .
  FILTER CONTAINS(LCASE(?award), ""rodney lees"") .
  ?awardee dbo:parent ?parent2 .

  # Edward Stanley, 17th Earl of Derby's child's parent
  VALUES (?edward) { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  ?edward dbo:child ?child .
  ?child dbo:parent ?parent3 .
  FILTER EXISTS { ?parent3 a dbo:Politician . }
  FILTER EXISTS { ?parent3 dbo:officeHolder ?office } .

  # Find the common entity
  VALUES (?commonEntity) {
    ?father1
    ?parent2
    ?parent3
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?designer WHERE {
  # Part 1: Member of Der Blau
  OPTIONAL {
    ?derBlau a dbo:Group .
    ?derBlau dbo:member ?member .
    FILTER (str(?derBlau) = ""Der_Blau"") # Assuming ""Der_Blau"" is the resource name
  }

  # Part 2: Designer of Aston Martin AMR1
  OPTIONAL {
    dbr:Aston_Martin_AMR1 dbo:designer ?designer .
  }
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Find a band member of the associated musical artist
  ?artist dbo:associatedBandMember ?bandMember .
  ?bandMember dbp:name ?name .
  
  # Ensure this person is also a musical artist
  ?bandMember dbo:occupation dbr:Musical_artist .

  # Award related to New York (state)
  ?award dbo:location dbr:New_York_(state) ;
         dbo:recipient ?awardeeBand .

  # Awardee band that is native of the award's region
  ?awardeeBand dbo:nativeCountry dbr:United_States ;
               dbo:nativePlace ?region .
  
  # Ensure the person matches all criteria
  FILTER(?name = ?birthName)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team
WHERE {
  # Step 1: Find person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_Manager .

  # Step 2: Find Marty Pollio's birthday
  ?marty dbp:birthday ?birthdayMarty .
  FILTER (?marty = dbr:Marty_Polio)

  # Step 3: Find athlete with the same birthday as Marty Pollio
  ?athlete dbo:birthday ?birthdayMarty .

  # Step 4: Find actor from ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?actor dbo:film dbr:All_or_Nothing:_Manchester_City ;
         dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .

  # Determine the team associated with these individuals
  OPTIONAL { ?person dbo:team ?team . }
  OPTIONAL { ?athlete dbo:team ?team . }
  OPTIONAL { ?actor dbo:team ?team . }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?personBorn1955 ?team
WHERE {
  # Actor in ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?show dbr:All_or_Nothing:_Manchester_City .
  ?show dbo:actor ?actor .
  ?actor dbo:sport ?soccerPlayer .
  FILTER (?soccerPlayer = dbr:Soccer)
  ?actor dbo:occupation ?athlete .
  FILTER (?athlete = dbr:Athlete)

  # Person born on 1955-02-22 who is an athlete
  ?personBorn1955 dbp:birthday ""1955-02-22""^^xsd:date .
  ?personBorn1955 dbo:sport ?athlete1955 .
  FILTER (?athlete1955 = dbr:Athlete)

  # Marcelo Sarmiento's birthday and team of the person born on that date
  ?marceloSarmiento dbp:birthday ?birthdayMarcelo .
  ?teamPerson dbp:birthday ?birthdayMarcelo .
  ?teamPerson dbo:sport ?soccerManager .
  FILTER (?soccerManager = dbr:Soccer)
  ?teamPerson dbo:occupation ?manager .
  FILTER (?manager = dbr:Soccer_manager)
  ?teamPerson dbo:memberTeam ?team
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force ?awardee WHERE {
  # Find the commander of HMS Prince of Wales and HMS Repulse during their sinking
  ?event dbo:agent ?commander .
  ?event dbo:subjectOf ?sinkingEvent .
  ?sinkingEvent rdfs:label ""Sinking of HMS Prince_of_Wales_and_HMS_Repulse""@en .

  # Identify the military force involved in this event
  ?force dbo:member ?commander .
  ?force rdfs:label ?forceLabel .

  # Find the awardee of Edmund Hakewill-Smith's award
  ?award dbo:recipient ?awardee ;
         dbo:givenBy dbr:Edmund_Hakewill-Smith .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Step 1: Identify a native of Florida who is a musical artist
  ?native dbo:birthPlace dbr:Florida ;
          a dbo:MusicalArtist ;
          dbp:birthdayBirthName ?birthName .

  # Step 2: Find band members of this native's associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist .
  
  # Ensure the associated artist is linked to the native
  ?native dbo:associatedBand ?associatedArtist .

  # Step 3: The associated artist must have a member who is both an artist and a musical artist from GS9
  ?gs9Member dbo:memberOf ?associatedArtist ;
             a dbo:MusicalArtist, dbo:Artist .
  ?gs9Member dbp:memberOfGS9 true .

  # Step 4: Match the birth name of the person we are looking for with the native's birth name
  ?person dbo:birthdayBirthName ?birthName ;
          dbo:birthPlace dbr:Florida ;
          a dbo:MusicalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?tvShow ?societalEvent ?successor
WHERE {
  # Find works by George Ducas
  ?work dbo:author dbr:George_Ducas .
  
  # Identify the commander role associated with George Ducas
  ?commanderRole dbo:agent dbr:George_Ducas ;
                 a dbo:MilitaryCommander .

  # Find Jean Baptist, Comte d'Arco's television show and societal event
  ?tvShow dbo:creator dbr:Jean_Baptist_Comte_d'Arco .
  ?societalEvent dbo:organizer dbr:Jean_Baptist_Comte_d'Arco .

  # Relate the commander role to Jean Baptist, Comte d'Arco
  ?commanderRole2 dbo:agent dbr:Jean_Baptist_Comte_d'Arco ;
                  a dbo:MilitaryCommander .

  # Find successor in Russo-Polish War (1654–1667)
  ?successor dbo:officeHolder true ;
             dbo:politicalAffiliation ?affiliation .
  
  FILTER EXISTS {
    ?war dbo:dateStart ?startDate .
    ?war dbo:dateEnd ?endDate .
    FILTER (?startDate >= ""1654-01-01""^^xsd:date && ?endDate <= ""1667-12-31""^^xsd:date)
    ?successor dbo:relatedEvent ?war
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?war ?birthPlace
WHERE {
  # Toyotomi Hideyoshi's child
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  
  # War involving the child of Toyotomi Hideyoshi
  ?child dbo:participatedIn ?war .

  # Yamaza Enjirō's birth place
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # War involving Toyotomi Hidenaga
  ?warHidenaga dbo:participant dbr:Toyotomi_Hidenaga .
  
  # Ensure the war is common between child and Hidenaga
  FILTER (?war = ?warHidenaga)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?force 
WHERE {
  # Find the award given by United States Congress related to Charleston, SC
  ?award dbo:awardedBy dbr:United_States_Congress ;
         dbo:location dbr:Charleston,_South_Carolina .

  # Get the awardee of this award
  ?person dbo:recipientOf ?award .

  # Find the war associated with this person
  ?person dbo:participatedInWar ?war .

  # Find Quincy Adams Gillmore and his awards
  dbr:Quincy_Adam_Gillmore dbo:recipientOf ?gillmoreAward .

  # Get the force associated with Quincy Adams Gillmore's award
  ?force dbo:member dbr:Quincy_Adam_Gillmore ;
         dbo:participatedInWar ?war .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthPlace ?countryOfWork
WHERE {
  # Find a person who died in Taipei
  ?decedent dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ""Taipei""@en .

  # Find their child who is a politician
  ?child dbo:parent ?decedent ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Get the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .

  # Find the country related to Lao She's work
  ?laoShe dbo:name ""Lao She"" ;
          dbo:workLocation ?workLocation .
  ?workLocation rdfs:label ?countryOfWork .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Alexander of Württemberg's lineage
  ?alexanderChild dbo:child dbr:Alexander_of_W%C3%BCrttemberg ;
                  dbo:child ?secondLevelGrandchild .
  ?secondLevelGrandchild dbo:child ?thirdLevelGrandchild .

  # Archduchess Margarete Sophie of Austria's child
  ?margareteChild dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Find a common individual in both lineages
  ?commonIndividual rdf:type dbo:Person ;
                   dbo:parent ?secondLevelGrandchild ;
                   dbo:parent ?margareteChild .

  # Archduchess Helena of Austria's spouse and their child
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?helenaSpouseChild dbo:child ?helenaSpouse .

  # Predecessor of the child of Helena's spouse
  ?predecessor dbo:succ ?helenaSpouseChild .

  # Ensure the individual is royalty
  ?commonIndividual rdf:type dbo:Royalty ;
                    dbo:predecessor ?predecessor .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Governor of Virginia
  ?governor dbo:officeHolderOf dbr:Governor_of_Virginia .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Author of El Deafo (Cece Bell)
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .

  # Vince Gilligan
  dbr:Vince_Gilligan dbo:birthPlace ?awardeeBirthPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Edward Stanley, 17th Earl of Derby and his parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent1 .

  # Awardee of Rodney Lees award and their parent
  ?awardee dbo:award dbr:Rodney_Lees_Award ;
          dbo:parent ?parent2 .
  
  # Alumnus of Eton College who is a politician and their child
  ?alumnus dbo:almaMater dbr:Eton_College ;
           dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Ensure all these entities share the same parent
  FILTER (?parent1 = ?parent2 && ?parent1 = ?parent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?event
WHERE {
  # Find the war involving the 30th (Cambridgeshire) Regiment of Foot
  ?war dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Find the commander of that war
  ?war dbo:commander ?commander .

  # Find the military force associated with William Bayne
  ?bayneForce dbo:member dbr:William_Bayne .
  ?bayneForce dbo:participatedIn ?militaryConflict .
  ?militaryConflict rdf:type dbo:MilitaryConflict .
  
  # Find the event related to Robert Calder
  ?calderEvent dbo:agent dbr:Robert_Calder .
  ?calderEvent rdf:type dbo:Event .

  # Ensure military force is part of a war
  ?militaryConflict dbo:militaryForce ?militaryForce .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the book associated with Hillary Clinton
  ?book dbo:author ?author .
  ?book a dbo:Book .
  ?book dbo:subject dbr:Hillary_Clinton .

  # Ensure the author is also an office holder and politician
  ?author dbo:officeHolderOf ?office .
  ?author dbo:spouse ?spouse .
  ?author a dbo:Politician .

  # Link to societal event involving United States Navy
  ?event dbo:commander dbr:United_States_Navy .
  ?event a dbo:SocietalEvent .
  ?author dbo:relatedTo ?event .

  # Ensure the author is also linked to Bill Clinton's work
  ?work dbo:author ?author .
  ?work a dbo:Book .
  ?work dbo:subject dbr:Bill_Clinton .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName ?associatedArtist WHERE {
  # Find the band associated with Kim Wilson
  dbr:Kim_Wilson dbo:musicalBand ?band .
  
  # Get the real name of the band
  ?band rdfs:label ?bandName .

  # Find artists associated with both Kim Wilson and Nick Curran
  OPTIONAL {
    ?artist dbo:associatedMusicians dbr:Kim_Wilson .
    ?artist dbo:associatedMusicians dbr:Nick_Curran .
    ?artist rdfs:label ?associatedArtist .
  }
  
  FILTER (lang(?bandName) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find William Gayner's birthplace
  ?williamGayner a dbo:Person ;
                 dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace dbo:type dbr:Region ;
              dbo:country ?country .
  
  # Identify Patrick Bowes-Lyon's parent
  ?patrickBowesLyon a dbo:Person ;
                    dbp:parent ?commonParent .

  # Identify Hon. Mary Frances Bowes-Lyon's parent
  ?maryFrancesBowesLyon a dbo:Person ;
                        dbp:parent ?commonParent .

  # Find the native of the birthplace who is also a parent to both
  ?native dbo:nativePlace ?birthPlace ;
          dbp:parentOf ?patrickBowesLyon, ?maryFrancesBowesLyon .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William I of Sicily's children who are royalty
  ?child dbo:parent dbr:William_I_of_Sicily ;
         a dbo:Monarch .

  # Alfonso VI of León and Castile's grandchildren
  ?grandChild dbo:parent ?intermediateParent ;
              dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  
  # Roger II of Sicily's lineage connection
  ?rogerChild dbo:parent ?rogerParent ;
              a dbo:Monarch .

  # Connecting the child to all conditions
  ?child = ?grandChild .
  ?child = ?rogerChild .

  # Finding the father of this specific child
  ?father dbo:parent ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Find band members of Cavalera Conspiracy
  ?cavaleraConspiracy a dbo:Band ;
                     dbo:member ?member1 .

  # Step 2: Find an organization associated with Cavalera Conspiracy and its band members
  ?associatedOrg a dbo:MusicalArtist, dbo:Organization ;
                 dbo:bandMember ?member2 .
  
  # Link the associated organization to Cavalera Conspiracy
  ?cavaleraConspiracy dbo:associatedWith ?associatedOrg .

  # Step 3: Find a producer that is an organization and a group related to ""Nothing to Gein""
  ?producer a dbo:Producer, dbo:Organization, dbo:Group ;
            dbo:produced dbr:Nothing_to_Gein .
  
  # Step 4: Find the band member of this producer
  ?producer dbo:bandMember ?member3 .

  # Final condition: The band member should be common in both steps
  FILTER (?member2 = ?member3)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vinceAwardeeBirthPlace ?governorBirthPlace ?paulusRegionGovernor ?ceceBellBirthPlace
WHERE {
  # Vince Gilligan's award
  dbr:Vince_Gilligan dbo:award dbr:Award_Name .

  # Birthplace of the awardee
  dbr:Award_Name dbo:recipient ?awardee .
  ?awardee dbp:birthPlace ?vinceAwardeeBirthPlace .

  # Governor of the birthplace region (assuming it's a US state)
  ?vinceAwardeeBirthPlace dbo:stateGovernor ?governor .
  ?governor rdf:type dbo:Politician .

  # Paulus Powell's birthplace and its governor
  dbr:Paulus_Powell dbp:birthPlace ?paulusBirthPlace .
  ?paulusBirthPlace dbo:administrativeRegion ?region .
  ?region dbo:stateGovernor ?paulusRegionGovernor .
  ?paulusRegionGovernor rdf:type dbo:Politician .

  # Cece Bell's birthplace
  dbr:Cece_Bell dbp:birthPlace ?ceceBellBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyRoy ?partyFather
WHERE {
  # Find Roy Leonardo Barreras Montealegre's political party
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:nationality dbr:Colombia ;
    dbo:politicalParty ?partyRoy .

  # Find Sofía Petro's father and his political party
  OPTIONAL {
    ?sofiaPetro dbo:father ?father .
    ?father dbo:politicalAffiliation ?partyFather .
  }
  
  # Assuming Sofía Petro is a known entity in DBpedia
  dbr:Sofía_Petro dbo:father ?father .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneForce ?regimentConflict ?commander ?awardee ?forceEvent
WHERE {
  # William Bayne's military force
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryService ?bayneForce .

  # 30th (Cambridgeshire) Regiment of Foot's conflict and commander
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?commander .
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:militaryConflict ?regimentConflict .

  # Awardee of Knight Commander of the Order of the Bath and their force
  ?awardee dbo:title ""Knight Commander of the Order of the Bath""@en ;
           dbo:militaryService ?forceEvent .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Iliza Shlesinger's movies
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  
  # Find the actor of ""Always"" (1989 film)
  dbr:Always_(film) dbo:starring ?alwaysActor .
  
  # Ensure the movie involves both actors
  ?movie dbo:starring ?alwaysActor .
  
  # Identify Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
  
  # Ensure the spouse is also in the same movie
  ?movie dbo:starring ?spouse .
  
  # Find other actors in this movie
  ?movie dbo:starring ?actor .
  
  # Filter out known actors to find others
  FILTER(?actor != dbr:Iliza_Shlesinger && ?actor != ?alwaysActor && ?actor != ?spouse)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata dbo:father ?father1 .
  dbr:Cecilia_Renata_of_Austria dbo:father ?father1 .

  # Ferdinand III, Holy Roman Emperor's child who was a commander
  ?ferdinandChild dbo:child ?commander .
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinardChild .
  ?commander dbo:militaryCommanderOf ?algerianWar .

  # The person is the father of Ferdinand III's child
  ?father1 dbo:child ?ferdinandChild .

  # This person must be associated with a societal event, an event, a television show, and the Algerian War
  ?person dbo:societalEvent ?event .
  ?person dbo:event ?event .
  ?person dbo:televisionShow ?tvShow .
  ?algerianWar rdf:type dbo:MilitaryConflict .

  # Ensure the person is the same as the father identified earlier
  FILTER (?father1 = ?person)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfShobhna ?nativeOfWorkJamsetji
WHERE {
  # Shobhna Samarth's birthplace that is a country
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace dbo:nativeName ?nativeOfShobhna .

  # Jamsetji Tata's work that is Indian
  dbr:Jamsetji_Tata dbo:occupation ?work .
  ?work dbo:country dbr:India .
  ?work dbo:nativeName ?nativeOfWorkJamsetji .
}
```",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  # Athlete born on 1955-02-22 who played with the above person
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date ;
           rdf:type dbo:Athlete .
  
  # Connection between the soccer player/manager and the athlete (e.g., team)
  ?team dbo:member ?person1, ?athlete .

  # Actor who is a soccer player and an athlete
  ?actor rdf:type dbo:SoccerPlayer, dbo:Athlete .

  # Film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vinceGilliganBirthPlace ?governorBirthPlace ?authorBirthPlace WHERE {
  # Vince Gilligan's awards and nominations
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  
  # Find awardees of Vince Gilligan's awards/nominations
  ?award dbo:recipient ?awardee .
  ?award dbo:nominee ?vinceGilligan .

  # Birthplace of the awardee(s)
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
  
  # Paulus Powell's birthplace
  ?paulusPowell dbo:birthPlace ?region .
  VALUES ?paulusPowell { dbr:Paulus_Powell }
  
  # Governor of the region where Paulus Powell was born
  ?governor dbo:governmentRole ?role .
  ?role dbp:office ""Governor""@en .
  ?governor dbo:birthPlace ?governorBirthPlace .
  FILTER(?region = ?governor.dbpo:administrativeRegion)

  # Author of El Deafo
  ?elDeafo dbo:author ?author .
  VALUES ?elDeafo { dbr:El_Deafo }
  
  # Birthplace of the author
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hashibaWar ?yamazaBirthPlace ?koichiroPerson ?koichiroWar
WHERE {
  # Hashiba Hidekatsu's war involvement
  OPTIONAL { 
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?hashibaWar .
  }

  # Yamaza Enjirō's birthplace
  OPTIONAL {
    dbr:Yamaza_Enjirō dbo:birthPlace ?yamazaBirthPlace .
  }

  # Person born as Koichirō and their war involvement
  OPTIONAL {
    ?koichiroPerson dbo:birthName ""Koichirō""@ja ;
                    dbo:participatedIn ?koichiroWar .
  }
}
```",5,5,6,2,3,2,3,28,0,2,2,0.0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?person dbo:memberOf dbr:Spanish_Socialist_Workers'_Party .

  ?administration dbo:country dbr:Spain ;
                  dbo:politicalGroup dbr:Spanish_Socialist_Workers'_Party .

  ?office dbo:startDate ?start ;
          dbo:endDate ?end ;
          dbo:positionHeldBy ?person ;
          a dbo:Event .

  FILTER EXISTS { ?administration dbo:member ?person }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Actor of ""1,000 Dollars a Minute""
  dbr:""1,000_Dollars_a_Minute"" dbo:actor ?actor .
  
  # Spouse of the actor
  ?actor dbp:spouse ?spouse .

  # Landmark at elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:governingBody ?rulingParty .

  # Person who is the spouse of the actor and a party member
  ?spouse dbp:partyMemberOf ?rulingParty .
  
  # Ensure the person matches the birth name condition
  ?person dbp:birthday ?birthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?artist 
WHERE {
  # Step 1: Find the producer of ""Lotus"" by R.E.M.
  dbr:Lotus (R.E.M. song) dbo:producer ?producer .
  
  # Ensure the producer is an organization, band, and group
  ?producer a dbo:Organization ;
           a dbo:Band ;
           a dbo:Group .

  # Step 2: Find associated musical artist of this producer
  ?producer dbo:musicalArtist ?associatedArtist .

  # Step 3: Identify the writer of ""No Alternative""
  dbr:No_Alternative dbo:writer ?writer .
  
  # Find a band member related to this writer
  ?bandMember dbo:memberOf ?writerBand ;
              dbo:memberOf ?writerGroup .

  # Step 4: Link associated musical artist with an artist
  ?associatedArtist dbo:artist ?artist .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?awardeeBirthPlace
WHERE {
  # Birth place of Cece Bell, author of ""El Deafo""
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .

  # Birth place of Glenn Youngkin, governor of Virginia
  dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace ;
                     dbo:officeHolderOf dbr:Governor_of_Virginia .

  # Birth place of Vince Gilligan's awardee (Breaking Bad Emmy winner)
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Acting_Performance_by_a_Male_in_a_Drama_Series .
  ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Acting_Performance_by_a_Male_in_a_Drama_Series ;
           dbo:birthPlace ?awardeeBirthPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherFather ?yeshaqChild WHERE {
  # Na'od's grandfather who is royalty and an office holder
  ?naodFather dbo:parent dbr:Na'od .
  ?naodGrandfather dbo:parent ?naodFather .
  ?naodGrandfather a dbo:Monarch ; 
                  dbo:officeHolder ?office .

  # Father of Na'od's grandfather
  ?grandfatherFather dbo:parent ?naodGrandfather .

  # Yeshaq I's parent who is royalty
  ?yeshaqParent dbo:parent dbr:Yeshaq_I .
  ?yeshaqParent a dbo:Monarch .

  # Child of Yeshaq I's parent
  ?yeshaqChild dbo:parent ?yeshaqParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalEntity WHERE {
  # Charles I of Hungary
  ?charlesI a dbr:Charles_I_of_Hungary ;
            dbo:father ?fatherOfCharlesI .

  # Father's parent who is royalty
  ?fatherOfCharlesI dbo:parent ?grandfatherOfCharlesI .
  ?grandfatherOfCharlesI a dbo:Monarch .

  # Philip I, Prince of Taranto
  ?philipI a dbr:Philip_I,_Prince_of_Taranto ;
           dbo:father ?fatherOfPhilipI .

  # Spouse of Philip's father
  ?spouseOfFatherOfPhilipI dbo:spouse ?fatherOfPhilipI .
  
  # Stephen V of Hungary and his predecessor
  ?stephenV a dbr:Stephen_V_of_Hungary ;
            dbo:predecessor ?predecessorOfStephenV .

  # Child of the predecessor who is royalty
  ?childOfPredecessor dbo:parent ?predecessorOfStephenV .
  ?childOfPredecessor a dbo:Monarch .

  # Final entity: Parent of Charles I's father (royalty) and spouse of Philip I's father
  ?finalEntity = ?grandfatherOfCharlesI ;
                = ?spouseOfFatherOfPhilipI .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOffice ?residence ?commanderOffice
WHERE {
  # Conservative Republican Party (Spain) and its leader
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  ?leader dbo:positionHeld ?office ;
          dbo:memberOf ?party ;
          rdf:type dbo:Politician .

  ?office dbo:officeName ?leaderOffice .

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .

  # Manuel Pinto da Costa's military conflict and commander position
  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent ;
            dbo:commander ?pintoDaCosta .
  
  ?pintoDaCosta rdf:type dbo:Politician, dbo:OfficeHolder ;
                rdfs:label ""Manuel Pinto da Costa""@en .

  ?office2 dbo:positionHeldBy ?pintoDaCosta ;
           dbo:officeName ?commanderOffice .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .

  # Alexander II, Grand Duke of Finland's administration and native country
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativeCountry dbr:Russian_Empire .
  dbr:Finland dbo:countryAdministeredBy dbr:Alexander_II,_Grand_Duke_of_Finland .

  # Find a person who died in the same country as Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthCountry .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Ackquille Jean Pollard is a member of GS9
  dbr:Ackquille_Jean_Pollard dbo:memberOf dbr:GS9 .

  # Find the birthplace of Ackquille Jean Pollard
  dbr:Ackquille_Jean_Pollard dbp:birthPlace ?birthPlace .

  # The birthplace is a region that is also an award-winning state and settlement in America
  ?birthPlace a dbo:State ;
             a dbo:Settlement ;
             dbo:country dbr:United_States_of_America ;
             dbp:award ?award .

  # Find the band associated with this award-winning region (New York)
  ?award dbp:awardee ?band .
  
  # The band is from New York
  ?band dbo:location dbr:New_York_(state) .

  # Find a band member of this band who is also a musical artist
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicalArtist .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?entityInBirthPlaceWar ?davydovWar
WHERE {
  # Find the awardee of 25 (assuming a placeholder entity for now)
  ?awardee dbo:award ""25""^^xsd:string .
  
  # War associated with the awardee
  ?awardee dbo:participatedIn ?warOfAwardee .

  # Birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Entity in the birth place related to a war
  ?entityInBirthPlaceWar dbo:location ?birthPlace ;
                        dbo:participatedIn ?birthPlaceWar .

  # War associated with Alexander Lvovich Davydov
  dbr:Aleksandr_Davydov dbo:participatedIn ?davydovWar .
  
  # Ensure the wars are related or connected in some way
  FILTER(?warOfAwardee = ?birthPlaceWar)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
    # Konrad Adenauer as leader of West Germany
    dbr:Konrad_Adenauer a dbo:Politician ;
                        dbo:nationality dbr:Germany .

    # Thomas Letsch as manager of 2020–21 SBV Vitesse season
    dbr:Thomas_Letsch a dbo:SoccerManager ;
                      dbo:managedTeam dbr:SBV_Vitesse_2020-21_season .

    # Player managed by Thomas Letsch who played for a club that is also an organization and soccer club
    ?player dbo:manager dbr:Thomas_Letsch ;
            dbo:playsFor ?club .
    ?club a dbo:SoccerClub, dbo:Organization .

    # Successor of 2006–07 VfL Bochum season
    dbr:VfL_Bochum_2007-08_season dbo:succeeds dbr:VfL_Bochum_2006-07_season ;
                                  dbo:team dbr:VfL_Bochum .

    # Find the native place of Konrad Adenauer
    ?nativePlace dbo:nativePlace dbr:Konrad_Adenauer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residentBirthplace ?alumnusBirthplace WHERE {
  # Find residents of Sofia and their birthplaces
  ?person dbo:residence dbr:Sofia .
  ?person dbo:birthPlace ?residentBirthplace .

  # Find alumni of Пловдивски университет „Паисий Хилендарски“ and their birthplaces
  ?alumnus dbo:almaMater dbr:Plovdiv_University_of_Saint_Paisius_of_Hilendar .
  ?alumnus dbo:birthPlace ?alumnusBirthplace .
}",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?warMilitaryConflict ?conflictMilitaryForce
WHERE {
  # Battle of Fort Royal military forces
  dbr:Battle_of_Fort_Royal dbo:militaryConflicts [
    ?battleMilitaryForce a dbo:MilitaryUnit ;
                         dbo:participatedIn dbr:Battle_of_Fort_Royal .
  ] .

  # Horatio Nelson's involvement in wars
  dbr:Horatio_Nelson_1st_Viscount_Nelson dbo:awardedBy dbr:Knight_Commander_of_the_Order_of_the_Bath ;
                                         dbo:commanded [
                   ?warMilitaryConflict a dbo:MilitaryConflict ;
                                       dbo:participatedIn ?conflictMilitaryForce .
                 ] .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Ciara
  dbr:Ciara a dbo:MusicalArtist ;
             foaf:name ""Ciara""@en .

  # Bow Wow
  dbr:Bow_Wow a dbo:Actor ;
              foaf:name ""Bow Wow""@en .

  # Find works where both have acted
  ?work dbo:starring dbr:Ciara .
  ?work dbo:starring dbr:Bow_Wow .

  # Get associated musical artists from these works
  ?work dbo:musicalArtist ?artist .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalAlterEgo WHERE {
  # Step 1: Identify the alter ego in The Golden Master series
  ?character a dbo:TelevisionSeries ;
             rdfs:label ""The Golden Master""@en .
  
  # Assuming the character has an alter ego property or related professional role
  ?character dbo:alterEgo ?professionalAlterEgo .

  # Step 2: Find the author of Smartbomb
  ?smartbombAuthor dbo:author dbr:Smartbomb ;
                  rdfs:label ?authorLabel .
  
  # Step 3: Identify a movie the author acted in
  ?movie dbo:starring ?smartbombActor ;
         dbo:actor ?smartbombAuthor .

  # Step 4: Find actors from ATL
  ?atlFilm dbo:starring ?atlActor ;
           rdfs:label ""ATL""@en .
  
  # Step 5: Check for common actor
  FILTER (?smartbombActor = ?atlActor)

  # Ensure the professional alter ego is related to the common actor
  ?professionalAlterEgo dbo:actor ?commonActor .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  ?movie dbo:actor ?actor .

  ?person dbo:parentOf ?photographer ;
          dbo:child ?mariclareChild .

  ?photographer dbo:profession dbp:Photographer .

  ?spouse dbo:spouse dbr:Mariclare_Costello .
  ?spouse dbo:child ?mariclareChild .

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War commander
  ?war dbo:participatingMilitaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  # Ensure the war is a societal event, an event, and a television show
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event ;
       dbo:televisionShow dbr:Algerian_War .

  # Algerian War entity
  ?war rdfs:label ""Algerian War""@en .

  # Commander is child of Ferdinand II, Holy Roman Emperor
  ?commander dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # Commander is father of the child of the parent of Archduke Charles Joseph of Austria
  ?archduke rdfs:label ""Archduke_Charles_Joseph_of_Austria""@en .
  ?parent dbo:child ?archduke ;
          dbo:father ?commander .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist ?bandMemberBand ?kimWilsonBandRealName
WHERE {
  # Nicholas Michael Curran's associated musical artist
  ?curran a dbo:MusicalArtist ;
          rdfs:label ""Nicholas Michael Curran""@en .
  
  OPTIONAL { ?curran dbo:associatedBand ?artist . }
  
  # Eric Clapton's band members and their bands
  ?clapton a dbo:MusicalArtist ;
           rdfs:label ""Eric Clapton""@en .
  
  ?bandMember dbo:member ?clapton ;
              dbo:bandMember ?member .
  
  OPTIONAL { ?member dbo:associatedBand ?bandMemberBand . }
  
  # Kim Wilson's band real name
  ?kimWilson a dbo:MusicalArtist ;
             rdfs:label ""Kim Wilson""@en .
  
  ?kimBand dbo:band ?kimWilson ;
           rdfs:label ?kimWilsonBandRealName .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Find associated musical artist of James Plotkin
  ?artist1 dbo:associatedMusicalArtist dbr:James_Plotkin .
  
  # Step 2: Find another associated musical artist of the first artist
  ?artist2 dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Ensure this second artist is linked to ""Burnt by the Sun"" as a group
  ?burntByTheSun dbr:Burnt_by_the_Sun .
  ?burntByTheSun dbo:associatedMusicalArtist ?artist2 .
  ?burntByTheSun rdf:type dbo:Group .

  # Step 4: Find associated musical artist of the second artist that is a band, group, and organization
  ?finalArtist dbo:associatedMusicalArtist ?artist2 .
  ?finalArtist rdf:type dbo:Band ;
               rdf:type dbo:Group ;
               rdf:type dbo:Organization .

  # Step 5: Get the band members of this final artist
  ?bandMember dbo:memberOf ?finalArtist .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?marianoRajoyOffice 
               ?miguelMauraPartyLeaderOffice 
               ?madridCouncil2003LeaderResidenceTenant

WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Miguel Maura's political party and its leader
  dbr:Miguel_Maura dbo:partyAffiliation ?miguelMauraParty .
  ?miguelMauraParty dbo:leader ?miguelMauraPartyLeader .
  ?miguelMauraPartyLeader dbo:office ?miguelMauraPartyLeaderOffice .

  # Leader of the 2003 Madrid City Council election
  dbr:Madrid_City_Council_election,_2003 dbo:electedOfficial ?madridCouncil2003Leader .
  ?madridCouncil2003Leader dbo:residence ?leaderResidence .
  
  # Tenant of the leader's residence
  ?leaderResidence dbo:tenant ?madridCouncil2003LeaderResidenceTenant .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent
WHERE {
  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  ?child dbo:parent dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # Parent of the child
  ?commonParent dbo:child ?child .

  # Mary Elphinstone, Lady Elphinstone's parent
  ?elphinstoneChild dbo:parent dbr:Mary_Elphinstone,_Lady_Elphinstone .
  ?commonParent dbo:child ?elphinstoneChild .

  # William Gayner's birthplace as a region and country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # The parent must be native of the birthplace
  ?commonParent dbo:nativePlace ?birthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Father of Cecilia Renata of Austria
  ?ceciliaRenata a dbr:Cecilia_Renata_of_Austria;
                dbo:father ?fatherOfCecilia.

  # Child of the parent of Archduke Charles Joseph of Austria
  ?archdukeCharlesJoseph a dbr:Archduke_Charles_Joseph_of_Austria;
                        dbo:parent ?parentOfArchduke.
  ?childOfParent a ?parentOfArchduke;
                 dbo:child ?entity.

  # Commander in the war related to the 2nd Dragoon Regiment (France)
  ?commanderInWar a ?entity;
                  dbo:commander ?dragoonRegiment.
  ?dragoonRegiment a dbr:2nd_Dragoon_Regiment_(France).

  # The entity must be a societal event, an event, and a television show
  ?entity a dbo:SocietalEvent;
          a dbo:Event;
          a dbo:TelevisionShow.

  # Ensure the same entity satisfies all conditions
  FILTER (?fatherOfCecilia = ?commanderInWar)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  ?antoine a dbo:Duke ;
          foaf:name ""Antoine, Duke of Lorraine""@en .

  # His children who are royalty
  ?child dbo:parent ?antoine ;
         a dbo:Monarch .

  # Parent of Dorothea of Lorraine (father)
  ?dorotheaParent dbo:child dbr:Dorothea_of_Lorraine ;
                  dbo:spouse ?child .

  # Spouse of the parent who is royalty and noble
  ?spouse dbo:spouse ?dorotheaParent ;
          a dbo:Monarch, dbo:Noble .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?claimToFame WHERE {
  ?janetGaynor a dbo:Person ;
               foaf:name ""Janet Gaynor""@en .
  
  ?janetGaynor dbo:claimToFame ?claimToFame .

  ?claimToFame rdf:type dbo:Film .
  ?claimToFame rdf:type dbo:Work .
}
```

This query does the following:
- Identifies Janet Gaynor as a `dbo:Person` with the name ""Janet Gaynor"".
- Retrieves her claims to fame using the `dbo:claimToFame` property.
- Filters these claims to ensure they are both of type `dbo:Film` and `dbo:Work`.",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?party ?entityInColombia
WHERE {
  # Find Sofía Petro and her father
  ?sofiaPetro a dbo:Person ;
              foaf:name ""Sofía Petro""@en .
  
  ?sofiaPetro dbo:parent ?father .

  # Get the political party of her father
  OPTIONAL { ?father dbo:partyAffiliation ?party . }

  # Find an entity in Colombia related to the context
  OPTIONAL {
    ?entityInColombia a dbo:Place ;
                     dbo:country dbr:Colombia .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Nick Curran as a musical artist
  dbr:Nick_Curran dbo:occupation dbr:Musical_artist .

  # Find artists associated with Nick Curran
  ?association dbo:associatedBandOrMusicalArtist dbr:Nick_Curran .
  
  # The Fabulous Thunderbirds and Kim Wilson association
  dbr:The_Fabulous_Thunderbirds dbo:member dbr:Kim_Wilson .
  
  # Find the artist associated with both Nick Curran and The Fabulous Thunderbirds through Kim Wilson
  ?association dbo:associatedBandOrMusicalArtist dbr:The_Fabulous_Thunderbirds .

  # Ensure the artist is a musical artist
  ?association dbo:occupation dbr:Musical_artist .
  
  BIND(?association AS ?artist)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor ?profession WHERE {
  dbr:Rustler's_Rhapsody dbo:starring ?actor .
  ?actor dbo:occupation ?profession .
}",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the DBpedia resource for Joey B
  dbr:Joey_B a dbo:MusicalArtist .
  
  # Retrieve associated musical artist information
  OPTIONAL { dbr:Joey_B dbo:associatedBandOrMusicalGroup ?artist . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Iliza_Shlesinger .
}
```

This query does the following:
- Selects movies (`?movie`) that are of type `dbo:Film`.
- Ensures that Iliza Shlesinger is listed as a starring actor in those films.",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  dbr:GS9 dbo:member ?gs9Member .

  ?gs9Member rdf:type dbo:MusicalArtist .
  ?gs9Member rdf:type dbo:Artist .

  ?gs9Member dbo:associatedBand ?associatedArtist .
  
  ?associatedArtist dbo:member ?bandMember .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist
WHERE {
  # Find Nick Curran's birth information
  dbr:Nick_Curran dbo:birthPlace ?birthPlace .
  
  # Check if the birth place or related entity is associated with a musical artist
  OPTIONAL { ?birthPlace dbo:associatedMusicalArtist ?musicalArtist . }
  
  # Find Kim Wilson's band
  dbr:Kim_Wilson dbo:band ?band .
  
  # Check if the band is associated with a musical artist
  OPTIONAL { ?band dbo:associatedMusicalArtist ?musicalArtist . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant
WHERE {
  # Spanish Socialist Workers' Party
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalOrganization .

  # Administration in Spain associated with the party
  ?administration dbo:country dbr:Spain ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party .

  # Office of the leader related to the 2009 Galician regional election
  ?office dbp:election dbr:2009_Galician_regional_election ;
          dbo:head ?tenant .

  # Linking administration and office
  ?administration dbo:leader ?office .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find the album of ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:album dbr:Trap_Muzik .

  # Step 2: Find actors involved in that album
  dbr:Trap_Muzik dbo:artist ?actor .

  # Step 3: Identify the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Step 4: Find a movie featuring both the actor and the author
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Predecessor of Myat Hpone Pyo
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .
  
  # Child of Saw Min Hla
  ?child dbo:parent dbr:Saw_Min_Hla .
  
  # Spouse of the father of Myat Hpone Pyo
  ?father dbo:spouse ?spouse .
  ?myatHponePyo dbo:parent ?father .
  ?myatHponePyo dbr:Myat_Hpone_Pyo .
  
  # The person must be all three entities and a royalty
  FILTER (?predecessor = ?child && ?child = ?spouse)
  FILTER (dbo:royalty ?person) # Assuming there's a property indicating royalty
  
  BIND(?predecessor AS ?person)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singer ?alterEgoProfession ?band
WHERE {
  # Robert Lamar Thompson (Luke)
  VALUES (?luke) { dbr:Luke_(musician) }
  
  # Find Luke's birthdate
  ?luke dbo:birthDate ?birthdate .

  # Find professionals who are singers
  ?singer a dbo:Singer .
  
  # The Shadow's alter ego is Lamont Cranston
  VALUES (?shadowAlterEgo) { dbr:Lamont_Cranston }
  
  # Find Lamont Cranston's profession
  ?shadowAlterEgo dbo:profession ?alterEgoProfession .

  # Find the band associated with Luke
  ?luke dbo:band ?band .
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:birthPlace dbr:Florida .
  OPTIONAL { ?artist dbp:birthName ?birthName . }
  FILTER (LANG(?birthName) = 'en')
}",2,3,3,2,1,3,3,71,59,0,0,1.0,1.0,1.0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team
WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .

  # Find people who are both soccer players and managers, born on the same date as Marcelo Sarmiento
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?birthdate ;
          dbo:occupation dbr:Soccer_manager .
  
  FILTER (?birthdate = ?marceloSarmientoBirthday)

  # Get Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?juanCarlosMolinaTeam .

  # Find the player in the same team as Juan Carlos Molina
  ?player dbo:playsFor ?team .
  
  FILTER (?team = ?juanCarlosMolinaTeam)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember
WHERE {
  # Step 1: Find the landmark with the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation = ""20.1168""^^xsd:float)

  # Step 2: Identify the ruling party member associated with this landmark
  ?partyMember dbo:memberOf ?rulingParty ;
              dbo:location ?landmark .

  # Step 3: Find the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute"" ;
         dbo:actor ?actor .
  
  # Step 4: Identify the spouse of this actor
  ?actor dbp:spouse ?spouse .

  # Step 5: Find the person born as Harriette Arlene Lake
  ?person foaf:name ""Harriette Arlene Lake"" ;
          dbo:birthName ?birthName .
  
  FILTER(?birthName = ""Harriette Arlene Lake"")

  # Step 6: Ensure all these entities are connected through the spouse relationship
  ?spouse owl:sameAs ?partyMember .
  ?actor owl:sameAs ?person .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:United_States ; # Ensures the award is American
        dbo:recipient ?recipient .

  ?recipient dbo:birthPlace ?place .
  
  FILTER EXISTS { 
    ?place a dbo:Settlement ;
          dbo:stateOrProvince dbr:New_York_(state) . # Ensures the place is a settlement in New York state
  }
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentDoonArbus ?parentProfessionEugeneCattin WHERE {
  # Find parent of Doon Arbus
  OPTIONAL {
    dbr:Doon_Arbus dbo:spouse ?spouse .
    ?spouse dbo:child ?doonChild .
    ?doonChild dbo:parent ?parentDoonArbus .
  }

  # Find profession of Eugène Cattin
  OPTIONAL {
    dbr:Eugène_Cattin dbo:profession ?eugeneProfession .

    # Find a professional in the same profession as Eugène Cattin
    ?professional dbo:profession ?eugeneProfession .
    
    # Find parent of this professional
    ?professional dbo:parent ?parentProfessionEugeneCattin .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bobBand ?bobProfession ?producerName ?producerProfession
WHERE {
  # Part 1: Bob Thompson's band and profession
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:band ?bobBand .
    dbr:Bob_Thompson_(musician) dbo:profession ?bobProfession .
  }

  # Part 2: Producer of Coke Studio Philippines and their profession
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?producer .
    ?producer rdfs:label ?producerName .
    FILTER (lang(?producerName) = 'en')
    ?producer dbo:profession ?producerProfession .
  }
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorShelbyOaks ?alterEgoActor WHERE {
  # Find actor of Shelby Oaks
  ?series dbr:Shelby_Oaks .
  ?series dbo:starring ?actorShelbyOaks .

  # Find professional in the alter ego of The Golden Master
  ?goldenMasterSeries dbr:The_Golden_Master .
  ?goldenMasterSeries dbo:starring ?alterEgoActor .
  
  # Assuming alter ego is a role or character name, we might need additional filtering if available
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Nicholas Michael Curran"" .
  ?person a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Mariclare Costello""@en .
  FILTER NOT EXISTS { ?person a dbo:Agent } # Optional filter to avoid agents
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?parent .

  ?parent a dbo:Monarch ;
          dbo:spouse|dbo:child ?royalParent .

  ?royalParent dbo:child ?child .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find children of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # For each child, find their predecessor (assuming a position or title)
  OPTIONAL { 
    ?position dbo:successor ?child .
    ?position dbo:title ?predecessor .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Archduke Charles Louis of Austria
  ?archduke a dbo:Archduke ;
            foaf:name ""Charles Louis, Archduke of Austria""@en .
  
  # Find his children
  ?archduke dbo:child ?child .

  # From each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .

  # Filter grandchildren who are royalty
  ?grandchild a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (
      dbo:Monarch,
      dbo:Princess,
      dbo:Prince,
      dbo:Archduke,
      dbo:Duke,
      dbo:King,
      dbo:Queen
    )
  )
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?war WHERE {
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  ?regiment dbo:militaryConflict ?war .

  ?war a dbo:SocietalEvent ;
      a dbo:Event ;
      dbo:wikiPageRedirects ?tvShow .

  FILTER(LANG(?regiment) = 'en')
}
```

Explanation:
- We start by identifying the `2nd Dragoon Regiment (France)` using its label.
- We look for military conflicts (`dbo:militaryConflict`) associated with this regiment.
- The war must be an instance of both `dbo:SocietalEvent` and `dbo:Event`.
- Additionally, it should have a redirect to a television show (`dbo:wikiPageRedirects`).
- The filter ensures that the label is in English.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  # Find the work ""Promise Me, Dad""
  dbr:Promise_Me,_Dad a dbo:Book ;
    dbo:author ?author .

  # Ensure the author is Joe Biden
  FILTER (?author = dbr:Joe_Biden)

  # Check if the work is American
  OPTIONAL { 
    dbr:Promise_Me,_Dad dbo:country dbr:United_States .
  }
}
```",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry ?managerName (GROUP_CONCAT(?team; separator="", "") AS ?teams)
WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?place .
  ?place dbo:country ?nativeCountry .

  # Manager of 2020–21 SBV Vitesse season
  OPTIONAL {
    ?vitesseManager dbo:managerOfTeam dbr:SBV_Vitesse .
    ?vitesseManager dbo:nationality ?vitesseNationality .
    FILTER(?vitesseNationality = ?nativeCountry)
    ?vitesseManager rdfs:label ?managerName .
    BIND(""2020–21 SBV Vitesse"" AS ?team)
  }

  # Manager of VfL Bochum
  OPTIONAL {
    ?bochumManager dbo:managerOfTeam dbr:VfL_Bochum .
    ?bochumManager dbo:nationality ?bochumNationality .
    FILTER(?bochumNationality = ?nativeCountry)
    ?bochumManager rdfs:label ?managerName .
    BIND(""VfL Bochum"" AS ?team)
  }

  # Ensure at least one manager matches the native country
  VALUES (?vitesseNationality ?bochumNationality) {
    ( ?nativeCountry ?nativeCountry )
  }
}
GROUP BY ?nativeCountry ?managerName
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?deathPlace WHERE {
  dbr:Aladdin_(film) dbo:starring ?actor .
  
  ?actor foaf:name ?actorName .

  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Janet_Gaynor dbo:claimToFame ?fame .
  
  ?fame rdf:type dbo:Film ;
        rdf:type dbo:CreativeWork .

  ?fame dbo:producer ?producer .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # For Tupac Shakur
  OPTIONAL {
    VALUES ?person { dbr:Tupac_Shakur }
    ?person dbo:birthName ""Tupac Amaru Shakur""@en.
    ?person dbo:associatedMusicalArtist ?artist .
  }

  # For Joey Bada$$
  OPTIONAL {
    VALUES ?person { dbr:Joey_Badass }
    ?person dbo:birthName ""Jo-Vaughn Virginie Scott""@en.
    ?person dbo:associatedMusicalArtist ?artist .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?associatedArtist WHERE {
  # Find the actor in ""The Campus Queen""
  ?film a dbo:Film ;
        dbp:title ""The Campus Queen""@en .
  
  ?film dbo:starring ?actor .

  # Find associated musical artist of Cynthia Morgan
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan""@en .
  
  ?cynthia dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration
WHERE {
  # Mayor of the Duchy of Schleswig
  {
    ?mayor dbo:positionHeld ?office .
    ?office dbo:officeHolder ?person .
    FILTER(CONTAINS(LCASE(?office.label), ""duchy of schleswig""))
  }
  
  UNION
  
  # Christian IX of Denmark
  {
    ?christianIX dbo:positionHeld ?office .
    ?office dbo:officeHolder dbr:Christian_IX_of_Denmark .
    ?office dbo:name ?administration .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  VALUES ?tripleXs { 
    dbr:The_Triple_X's
  }
  
  ?tripleXs rdf:type dbo:Person .

  ?event dbo:agent ?tripleXs .
  
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?warLabel .
  
  FILTER(LANG(?warLabel) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?birthName
WHERE {
  # Find Carrie Johnson's spouse
  OPTIONAL { 
    dbr:Carrie_Johnson dbo:spouse ?spouse .
  }
  
  # Find John Boxer's birth name
  OPTIONAL {
    dbr:John_Boxer dbo:birthName ?birthName .
  }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find the war associated with awardees of an award given in 1970 (25 years after 1945)
  ?award1 dbo:date ""1970""^^xsd:gYear .
  ?recipient1 dbo:award ?award1 .
  ?recipient1 dbo:conflict ?war1 .

  # Find the war associated with recipients of the Golden Sword for Bravery
  ?award2 rdfs:label ""Golden Sword for Bravery""@en .
  ?recipient2 dbo:award ?award2 .
  ?recipient2 dbo:conflict ?war2 .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tomSawyerProducer ?janetGaynorWork ?janetGaynorProducer
WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?tomSawyerProducer .

  # Janet Gaynor's notable work and its producer
  OPTIONAL {
    ?janetGaynorWork dbo:starring dbr:Janet_Gaynor .
    ?janetGaynorWork a dbo:Film .
    ?janetGaynorWork dbo:award dbr:Academy_Award_for_Best_Actress .
    ?janetGaynorWork dbo:producer ?janetGaynorProducer .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?awardee WHERE {
  ?entity dbo:country dbr:Russian_Empire .
  ?entity dbo:relatedToWar ?war .
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Award 25""@en .
  FILTER(CONTAINS(LANG(?entity), ""ru""))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:father ?father .
  ?person rdfs:label ""Baeda Maryam I""@en .
}
```

This query selects the father of Baeda Maryam I by looking for a resource (`?person`) that has a `dbo:father` relationship pointing to another resource (`?father`). The filter ensures that the person in question is labeled as ""Baeda Maryam I"" in English.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace
WHERE {
  # Vince Gilligan's birthplace
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  
  # Cece Bell's birthplace (author of El Deafo)
  OPTIONAL { 
    dbr:Cecily_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        foaf:name ""High Society Blues""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  
  # Ensure the child was a commander in the Thirty Years' War
  ?child dbo:occupation dbr:Thirty_Years_War_commander .

  # Find children of Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?grandChild .
  
  # Determine the father of that child (should be the same as the commander)
  ?grandChild dbo:father ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war ?settlement WHERE {
  # Gillmore Medal awardee and their force
  ?gillmoreMedalAwardee dbo:award dbr:Gillmore_Medal .
  ?gillmoreMedalAwardee dbo:militaryService ?force .

  # Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:militaryService ?tracyForce .
  ?tracyForce dbo:participatedIn ?war .

  # Person deceased on 1850-08-05 and their birthplace
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .
  
  # Ensure the settlement is a settlement and American
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Link the person to the Gillmore Medal awardee (assuming they are the same)
  ?person owl:sameAs ?gillmoreMedalAwardee .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?show dbo:award ?award .
  ?recipient dbo:recipientOf ?show .
  ?recipient dbo:location dbr:Charleston,_South_Carolina .
  ?recipient dbo:relatedTo ?war .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Commander in the Algerian War
  ?commander dbo:militaryConflict dbr:Algerian_War .
  
  # Societal event, event, and television show
  ?commander a dbo:SocietalEvent ;
             a dbo:Event ;
             a dbo:TelevisionShow .

  # Child of Ferdinand II, Holy Roman Emperor
  ?child dbp:father dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  # Father of the child of Ferdinand III, Holy Roman Emperor
  ?commander dbp:mother ?child .
  ?grandChild dbp:father ?commander .
  ?grandChild dbp:father dbr:Ferdinand_III,_Holy_Roman_Emperor .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?writer ?greatTurkishWarCommander
WHERE {
  # Russo-Polish War commander who is a politician and office holder
  ?commander dbo:participatedIn dbr:Russo%E2%80%93Polish_War_(1654%E2%80%931667) .
  ?commander dbo:occupation dbr:Politician ;
            dbo:officeHolder true .

  # Successor of the commander
  ?successor dbo:succeededBy ?commander .

  # Writer of the work of George Ducas
  ?work dbo:author ?writer ;
        dbo:subject dbr:George_Ducas .
  
  # Commander in the Great Turkish War
  ?greatTurkishWarCommander dbo:participatedIn dbr:Great_Turkish_War .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Find the awardees of Commander of the Order of the British Empire
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
  
  # Identify the sinking event and its associated war
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:partOfWar dbr:World_War_II .

  # Find the commander or related force involved in the sinking
  ?commander dbo:commandedForce ?force .
  ?commander rdfs:label ?awardeeLabel .
  
  FILTER(CONTAINS(LCASE(?awardeeLabel), ""sinking of prince of wales and repulse""))
  
  # Link the awardee to the commander
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?awardeeLabel), "" "", ""_""))) AS ?awardee)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?professionalInShadow
WHERE {
  # Find actors of ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .

  # Find the alter ego of The Shadow in comics
  dbr:The_Shadow dbo:alterEgo ?comicsCharacter .
  
  # Find professional roles associated with this comics character
  ?comicsCharacter dbo:profession ?professionalInShadow .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .
}
```

This query assumes that Maria of Bytom is represented as an instance of `dbo:Person` and has her name stored in the `foaf:name` property. The `dbo:spouse` property is used to find her spouse.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # Find the writer and musical artist of ""The Live Anthology""
  dbr:The_Live_Anthology dbo:artist dbr:Neil_Young .
  dbr:Neil_Young a dbo:Writer ;
                a dbo:MusicalArtist .

  # Find another professional with the same professions
  ?professional a dbo:Writer ;
                a dbo:MusicalArtist .

  # Find associated musical artists of Tupac Shakur (Lesane Parish Crooks)
  dbr:Tupac_Shakur dbo:birthName dbr:Lesane_Parish_Crooks .
  ?associatedArtist dbo:associatedBandOrMusicArtist dbr:Tupac_Shakur .
  
  FILTER(?professional != dbr:Neil_Young) # Ensure it's not Neil Young
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  
  # Filter by birth place or nationality
  {
    ?person dbo:birthPlace dbr:West_Germany .
  } UNION {
    ?person dbo:nationality dbr:West_Germany .
  }

  FILTER (YEAR(?person dbo:birthday) >= 1949 && YEAR(?person dbo:birthday) <= 1990)
}
ORDER BY ?name
LIMIT 100",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?administration
WHERE {
  VALUES ?personLabel { ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ""Olaf I of Denmark"" }
  
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
  
  OPTIONAL {
    ?position dbo:agent ?person ;
              a dbo:PositionHeld ;
              dbo:title ?administration .
    FILTER(lang(?administration) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?person a dbo:Athlete ;
          dbp:birthday ""1955-02-22""^^xsd:date .
  ?person foaf:name ?player .
}
```",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfGrandfather WHERE {
  # Commander in Siege of Mukha who is royalty
  ?commander dbo:event dbp:Siege_of_Mukha .
  ?commander dbo:royalty true .

  # Child of the commander, also a royalty
  ?child dbo:parent ?commander .
  ?child dbo:royalty true .

  # Father of this child (grandfather), who is royalty and an office holder
  ?grandfather dbo:parent ?child .
  ?grandfather dbo:royalty true .
  ?grandfather dbo:officeHolder true .

  # Child of Baeda Maryam I
  ?baedaChild dbo:parent <http://dbpedia.org/resource/Baeda_Maryam_I> .

  # The child we are looking for is the same as the grandfather's child
  ?childOfGrandfather dbo:parent ?grandfather .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  # Ackquille Jean Pollard (Nelly)
  ?nelly a dbo:MusicalArtist ;
         foaf:name ""Nelly"" ;
         foaf:birthday ""2 March 1974""^^xsd:date .

  # GS9 members
  ?gs9Member a dbo:Band ;
             dbo:member ?artist ;
             dbr:GS9 .

  ?artist a dbo:Artist, dbo:MusicalArtist .

  # Ackquille Jean Pollard is associated with an artist
  ?nelly dbo:associatedWith ?associatedArtist .
  
  # The associated artist has band members who are musical artists
  ?associatedArtist dbo:bandMember ?bandMember ;
                   a dbo:MusicalArtist .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  dbr:Kiyosu dbo:timeZone dbr:Japan_Standard_Time .

  dbr:Japan_Standard_Time dbo:country dbr:Japan .

  ?entity dbo:location dbr:Japan .
}
```",3,3,4,3,1,3,2,20,0,0,8916,0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?person dbo:deathPlace dbr:Los_Angeles ;
          dbo:child dbr:Amy_Arbus .
  
  ?work dbo:creator ?person ;
        a dbo:Film .

  ?filmRole dbo:characterName ?role ;
            dbo:actor ?actor ;
            dbo:film ?work .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?successorName WHERE {
  # Identify the event (Great Turkish War)
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Great Turkish War""@en .

  # Michał Kazimierz Pac as commander
  ?person1 a dbo:Person ;
           foaf:name ""Michał Kazimierz Pac""@en ;
           dbo:commander ?event .

  # Successor who is also a politician and office holder
  ?successor a dbo:Person, dbo:Politician ;
             foaf:name ?successorName ;
             dbo:officeHolder ?office ;
             dbo:successorOf ?person1 .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorName ?actorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # The Sky Ranger (1928) main actor
  OPTIONAL {
    dbr:The_Sky_Ranger_(film)_1928 dbo:starring ?actor .
    ?actor rdfs:label ?actorName FILTER(LANG(?actorName) = 'en') .
    
    # Actor's death place
    ?actor dbo:deathPlace ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?city { dbr:Mitaka }
  ?city ?property ?value .
  FILTER(?property IN (dbo:officialWebsite, dbo:description, dbo:populationTotal))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName (GROUP_CONCAT(?deathPlace; separator="", "") AS ?deathPlaces)
WHERE {
  # Find actors for ""Color Me Dead""
  {
    SELECT ?actor WHERE {
      ?film dbo:starring ?actor .
      FILTER(STRSTARTS(STR(?film), STR(dbr:)))
      VALUES ?film { dbr:Color_Me_Dead }
    }
  } UNION
  # Find actors for ""Aladdin (1958 film)""
  {
    SELECT ?actor WHERE {
      ?film dbo:starring ?actor .
      FILTER(STRSTARTS(STR(?film), STR(dbr:)))
      VALUES ?film { dbr:Aladdin_(1958_film) }
    }
  } 
  # Get actor names
  BIND(?actor AS ?actorResource)
  {
    ?actor rdfs:label ?actorName .
    FILTER(LANG(?actorName) = 'en')
  }
  
  OPTIONAL {
    ?actor dbo:deathPlace ?deathPlace .
    ?deathPlace rdfs:label ?deathPlaceLabel .
    FILTER(LANG(?deathPlaceLabel) = 'en')
  }
}
GROUP BY ?actorName
ORDER BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party ?spouse WHERE {
  # Find the person born as Harriette Arlene Lake
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  
  # Identify their political party affiliation related to Central, Louisiana
  ?person dbo:memberOfParty ?party ;
          dbo:residence dbr:Central,_Louisiana .

  # Find the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:starringIn ?movie .
  
  # Identify the spouse of that actor
  ?actor dbo:spouse ?spouse .
  
  # Ensure the person is the same as the spouse
  ?person dbp:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ebrahim Alkazi""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work dbo:author dbr:Cora_Sue_Collins .
  ?work rdfs:label ""Claim to Fame""@en .
  OPTIONAL { ?work dbo:producer ?producer . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?awardee dbo:awardReceived dbr:Gillmore_Medal .
  ?force dbo:member ?awardee .
  ?person dbo:militaryService ?force .
  
  ?person dbp:birthPlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?entity rdfs:label ?settlementLabel .
  FILTER (lang(?settlementLabel) = ""en"")
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          dbp:name ""Maximilian I, Holy Roman Emperor""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?team rdf:type dbpedia-owl:NationalSoccerTeam .
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbp:commonName ?nickname .
}
```

This query does the following:
- It selects the `?nickname` of a team that is of type `NationalSoccerTeam`.
- It matches the label ""Russia national football team"" in English.
- It retrieves the common name (nickname) using the property `dbp:commonName`.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?shirley a dbo:Person ;
           foaf:name ""Shirley Stoler""@en .
  
  ?shirley dbo:occupation ?profession .

  ?professional a dbo:Person ;
                foaf:name ?name ;
                dbo:occupation ?profession .
  
  FILTER(?shirley != ?professional)
}
```",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?monarch ?territory WHERE {
  VALUES ?monarch { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark
  }
  
  # Find territories administered by the monarchs
  ?monarch dbo:countryAdministratedBy ?territory .
  
  OPTIONAL {
    # Check if Copenhagen is a capital of any territory
    ?copenhagen dbo:capital ?territory ;
               rdf:type dbo:City ;
               rdfs:label ""Copenhagen""@en .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?grandchild
WHERE {
  # Charles II of Naples' spouse
  ?charles2 dbo:spouse ?spouse .
  FILTER(STRSTARTS(STR(?charles2), ""Charles_II_of_Naples""))

  # Béla IV of Hungary's children
  ?bela4 dbp:child ?child .

  # Béla IV of Hungary's grandchildren (children of his children)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  OPTIONAL { ?grandchild dbo:title ?title . }
  FILTER(BOUND(?title) && STRSTARTS(STR(?title), ""King"" || ""Queen"" || ""Prince"" || ""Princess""))

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:author dbr:Back_to_Work_(book) .
  ?person dbo:memberOf dbr:United_States_Navy .
  FILTER EXISTS { 
    ?p dbo:relatedTo dbr:COVID-19_pandemic .
    ?p foaf:name ""Bill Gates"" .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Richard_E._Grant .
  ?movie dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:TelevisionShow }
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:author dbr:Bill_Clinton .
  ?work rdf:type dbo:Book .
  ?war dbo:commander dbr:United_States_Navy .
  ?war rdf:type dbo:Disease .
  ?war rdf:type dbo:SocietalEvent .
  ?work dbo:about ?war .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
    # Step 1: Find Alexander of Württemberg's child's child's child
    ?alexander a dbo:Person ;
              foaf:name ""Alexander of Württemberg"" ;
              dbo:birthYear ?birthYear .
    FILTER(?birthYear = 1804)
    
    ?child1 dbo:parent ?alexander ;
           dbo:child ?grandchild1 .
    
    ?grandchild1 dbo:parent ?child1 ;
                dbo:child ?greatGrandchild .
    
    # Step 2: Find Archduchess Helena of Austria's spouse and their child
    ?helena a dbo:Person ;
            foaf:name ""Archduchess Helena of Austria"" .
    
    ?spouse dbo:spouse ?helena ;
            dbo:child ?childOfSpouse .
    
    # Step 3: Find the predecessor of the child from step 2
    ?predecessor dbo:succeededBy ?childOfSpouse .
    
    # Step 4: Ensure the result is a royalty and matches the conditions
    ?result dbo:parent ?greatGrandchild ;
            dbo:predecessor ?predecessor ;
            rdf:type dbo:RoyalPerson .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

  # Step 2: Find the parent's child (Victor Stanley)
  ?child dbo:parent ?parent .
  FILTER(?child = dbr:Victor_Stanley_(Royal_Navy_officer))

  # Step 3: Check if this child is a politician and an office holder
  ?politician dbo:parent ?parent .
  ?politician a dbo:Politician .
  ?politician dbo:officeHolderOf ?office .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .
  
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  FILTER (?spouse = ?child)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?prize a dbo:NobelPrize ;
         dbo:prize ""Nobel Prize in Physics"" .
  ?prize dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:birthName ""Max Born""@en .
  ?person dbo:honoraryDoctorate ?award ;
          dbo:award ?otherAward .
  FILTER(?award != ?otherAward)
}
```

This query searches for the DBpedia resource representing Max Born and retrieves any awards or honorary doctorates associated with him.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?profession .
  
  # Find other professionals in the same profession
  ?professional dbo:occupation ?profession .
  
  FILTER(?professional != dbr:Frédéric_Bouraly)
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- Uses `rdfs:label` to find the resource associated with ""The Shadow.""
- Utilizes `dbo:alterEgo` to retrieve the alter ego of that character.",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Step 3: Identify predecessor of Myat Hpone Pyo among these children
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?child dbo:predecessor ?myatHponePyo .

  # Step 4: Find father of this child who is royalty
  ?father dbo:parent ?child ;
          a dbo:Monarch .

  # Step 5: Get spouse of the father
  ?spouse dbo:spouse ?father .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?producerName
WHERE {
  # Find Cora Sue Collins' claim to fame
  dbr:Cora_Sue_Collins dbo:profession ?claimToFameWork .
  
  # Get the professional role in her claim to fame
  ?claimToFameWork dbo:actor ?collinsRole .
  ?collinsRole rdfs:label ?professionalRole .

  # Find the producer of ""A Star Is Born"" (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  ?producer rdfs:label ?producerName .
  
  FILTER(LANG(?professionalRole) = 'en')
  FILTER(LANG(?producerName) = 'en')
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Gustavo_Petro 
    dbr:Roy_Barreras 
  }
  
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,2,3,1,2,2,3,28,0,12,1,0.0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthPlace dbr:India .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,8977,8959,0,0.5005017841213203,1.0,0.6671125478393343
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  
  ?elvira dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Herschel_Bernardi dbo:actedIn ?work .
  ?otherActor dbo:actedIn ?work .
  FILTER (?otherActor != dbr:Herschel_Bernardi)
  ?otherActor rdfs:label ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMargareteSophie ?predecessor
WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  
  ?childOfMargareteSophie dbo:parent ?margareteSophie .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?childOfPhilippAlbrecht dbo:parent ?philippAlbrecht .

  # Find the child of the child of the child of Alexander of Württemberg
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg (1804-1881)""@en .
  
  ?grandchildOfAlex dbr:Württemberg#Alexander_of_W%C3%BCrttemberg_1804-1881 dbo:parent ?parentOfGrandchild .
  ?parentOfGrandchild dbo:parent ?grandparentOfGrandchild .
  ?grandparentOfGrandchild dbo:parent ?greatGrandparentOfGrandchild .

  # Find the predecessor of the child from Philipp Albrecht's lineage
  ?predecessor dbo:parent ?childOfPhilippAlbrecht .
  
  FILTER (?childOfMargareteSophie = ?childOfPhilippAlbrecht)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?country
WHERE {
  # Find Alberto Núñez Feijóo and his office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # Ensure he is a citizen of Spain
  dbr:Alberto_Núñez_Feijóo dbp:nationality dbr:Spain .

  # Find the residence associated with him, ensuring it's in a country (Spain)
  OPTIONAL {
    ?office dbo:location ?residence .
    ?residence dbo:country dbr:Spain .
    BIND(dbr:Spain AS ?country)
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryOfWork ?birthPlace
WHERE {
  # Lao She's work country
  OPTIONAL {
    dbr:Lao_She dbo:work dbr:Rickshaw_Boy .
    dbr:Rickshaw_Boy dbo:setInCountry ?countryOfWork .
  }

  # Winston Chang's birthplace
  OPTIONAL {
    dbr:Winston_Chang dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Identify the event of interest
  VALUES (?event) { dbr:Sinking_of_Prince_of_Wales_and_Repulse }

  # Check if it is linked to a societal event category
  ?event dbo:wikiPageRedirects ?societalEvent .
  
  # Check if it is linked to a military conflict category
  ?event dbo:wikiPageRedirects ?militaryConflict .

  # Ensure the categories are distinct and relevant
  FILTER EXISTS { ?societalEvent rdf:type dbo:SocietalEvent }
  FILTER EXISTS { ?militaryConflict rdf:type dbo:MilitaryConflict }
}
```

This query does the following:
- It identifies the event ""Sinking of Prince of Wales and Repulse"" using its DBpedia resource.
- It checks if this event is linked to both a societal event category and a military conflict category through `dbo:wikiPageRedirects`.
- It ensures that these categories are indeed classified as `dbo:SocietalEvent` and `dbo:MilitaryConflict`.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnusBirthPlace ?renetaKamberovaBirthPlace
WHERE {
  # Find an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  
  # Get the birthplace of that alumnus
  ?alumnus dbo:birthPlace ?alumnusBirthPlace .

  # Find Reneta Kamberova's birthplace
  dbr:Reneta_Kamberova dbo:birthPlace ?renetaKamberovaBirthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event dbp:eventName ""Siege of Padua""@en .
  ?event dbp:commander ?commander .
  ?commander a dbo:RoyalFamilyMember ; # or another relevant class for royalty
             rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find David Luckman
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  
  # Determine his residence
  ?person dbo:residence ?residence .

  # Find the native of that residence
  ?resident a dbo:Person ;
            dbo:nationality ?residence ;
            foaf:name ?native .
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the father of Cecilia Renata of Austria
  ?father dbo:child dbr:Cecilia_Renata_of_Austria .
  
  # Find the commander who is a child of this father
  ?commander dbo:parent ?father .

  # Ensure the commander is also the father of Eleonore of Austria, Queen of Poland
  ?commander dbo:child dbr:Eleonore_of_Austria_Queen_of_Poland .

  # Find wars that are societal events, events, and television shows
  ?war a dbo:SocietalEvent ;
      a dbo:Event ;
      a dbo:TelevisionShow .

  # Ensure the commander was involved in this war with the 2nd Dragoon Regiment (France)
  ?commander dbo:commanded dbr:2nd_Dragoon_Regiment_(France) .
  ?war dbo:participatedIn dbr:2nd_Dragoon_Regiment_(France) .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify the video game ""The Shadow""
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow.

  # Step 2: Find the comics character associated with The Shadow
  dbr:The_Shadow dbo:alterEgo dbr:The_Shadow_(comics).

  # Step 3: Locate a television show based on this comics character
  ?tvShow dbo:basedOn dbr:The_Shadow_(comics).

  # Step 4: Identify movies related to this television show
  ?movie dbo:adaptationOf ?tvShow.

  # Step 5: Find actors in the movie, specifically Richard E. Grant and another actor
  ?movie dbo:starring dbr:Richard_E._Grant.
  ?movie dbo:starring ?actor.

  FILTER(?actor != dbr:Richard_E._Grant)

  # Additional condition to find the professional alter ego of The Shadow
  OPTIONAL {
    ?tvShow dbo:character dbr:The_Shadow_(comics).
    ?actor dbo:profession dbr:The_Shadow.
  }
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName WHERE {
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  ?actor rdf:type dbo:Actor .

  ?actor rdfs:label ?actorName .
  
  FILTER (LANG(?actorName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Admiral Sir Tom Phillips was involved in World War II
  dbr:Admiral_Sir_Tom_Phillips dbo:participatedIn ?event .
  
  # The event is related to the sinking of Prince of Wales and Repulse
  OPTIONAL { ?event dbo:wikiPageRedirects dbr:Sinking_of_Prince_of_Wales_and_Repulse . }
  
  # Find wars that include this event
  ?war dbo:participatedIn ?event .
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:wikiPageCategories ?category .
  ?category rdfs:label ""Singer""@en .
  OPTIONAL { ?person dbp:profession ?profession . FILTER(CONTAINS(LCASE(?profession), ""singer"")) }
  ?person foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the parent of Min Hla Htut of Pyakaung
  ?parent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .
  
  # Find the spouse of Saw Shwe Khet
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  
  # Ensure the person is both the parent and the spouse
  FILTER (?parent = ?spouse)
  
  # Find the child of Saw Shwe Khet
  ?child dbo:spouse ?spouse .
  
  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .
  
  # Ensure the person is also the predecessor
  FILTER (?parent = ?predecessor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Find Darryl Paa Kwesi Bannerman-Martin who is a writer of ""The Live Anthology"" and also a musical artist
  ?darryl dbr:The_Live_Anthology dbo:author ?writer .
  ?writer rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Ensure the writer is also recognized as a musical artist
  ?darryl dbo:musicalArtist ?musicalArtist .
  
  # Find Elorm Kabu Amenyah and his associated musical artist
  ?elorm rdfs:label ""Elorm Kabu Amenyah""@en .
  ?elorm dbo:musicalArtist ?associatedArtist .

  FILTER(?writer = ?darryl) # Ensure the same person is both writer and musical artist
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Find Chappaqua, New York in DBpedia
  dbr:Chappaqua dbr:New_York_state dbo:locationInLocation .

  # Find people who are residents of Chappaqua
  ?person dbo:residence dbr:Chappaqua .
  
  # Filter for those who are politicians or office holders
  ?person a ?occupation .
  FILTER (
    ?occupation = dbo:Politician ||
    ?occupation = dbo:OfficeHolder
  )
  
  # Get the name of the person
  ?person foaf:name ?name .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?royalChild WHERE {
  # Find Lamont Cranston and his alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Find Yeshaq I and a royal child of his
  dbr:Yeshaq_I dbo:child ?royalChild .
  ?royalChild dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Assuming we need to find any reference or connection between The Shadow and the royal child
  OPTIONAL {
    ?alterEgo dbo:reference ?royalChild .
  }
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthplaceLabel WHERE {
  ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  ?awardee dbo:birthPlace ?birthplace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?realName ?bandMemberBand
WHERE {
  # Nicholas Michael Curran (Kid Rock)
  VALUES (?person) { dbr:Nicholas_Michael_Curran }
  
  # Find the real name and associated musical artist
  ?person foaf:name ""Nicholas Michael Curran"" .
  ?person dbo:birthName ?realName .
  ?artist dbo:associatedBandMember ?person ;
          a dbo:MusicalArtist .

  # The Fabulous Thunderbirds reference
  VALUES (?fabulousThunderbirds) { dbr:The_Fabulous_Thunderbirds }
  ?fabulousThunderbirds foaf:name ""The Fabulous Thunderbirds"" .

  # Eric Clapton's band member and their band
  VALUES (?ericClapton) { dbr:Eric_Clapton }
  ?bandMember dbo:associatedBandMember ?ericClapton ;
              dbo:memberOfBand ?bandMemberBand .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?war
WHERE {
  # Find awards associated with Quincy Adams Gillmore
  ?award dbo:recipient ?awardee1 .
  ?award dbo:givenBy dbr:Quincy_Adams_Gillmore .

  # Get the military force of the awardee
  OPTIONAL { ?awardee1 dbo:militaryForce ?force . }

  # Find awards associated with United States Congress
  ?award2 dbo:recipient ?awardee2 .
  ?award2 dbo:givenBy dbr:United_States_Congress .

  # Get the war in which the awardee participated
  OPTIONAL { ?awardee2 dbo:participatedInWar ?war . }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Álvaro Quirós's residence
  OPTIONAL { 
    dbr:Álvaro_Quirós dbo:residence ?residence .
    ?residence dbo:country ?tenant .
  }

  # Leader of the 2009 Galician regional election
  OPTIONAL {
    ?leader dbo:office ?office ;
            dbo:officeLocation ?location .
    FILTER (STRSTARTS(STR(?office), ""Leader of the 2009 Galician regional election""))
    ?location dbo:country ?tenant .
  }

  # Santiago de Compostela's tenant
  OPTIONAL {
    dbr:Santiago_de_Compostela dbo:mayor ?mayor .
    ?mayor dbo:residence ?residence .
    ?residence dbo:country ?tenant .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:commander ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  ?militaryForce dbo:event ?event1, ?event2 .
  FILTER (?event1 != ?event2) .
  
  ?event1 a dbo:SocietalEvent .
  ?event2 a dbo:MilitaryConflict ;
          dbo:participatingUnit dbr:Battle_of_Fort_Royal .

  ?person dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bidenAuthor ?koreanCommanderWorkAuthor
WHERE {
  # Part 1: Author of ""Promises to Keep""
  ?book dbo:title ""Promises to Keep""@en .
  ?book dbo:author ?bidenAuthor .
  ?bidenAuthor rdfs:label ""Joe Biden""@en .

  # Part 2: Commander in the Korean conflict and their work
  ?officeHolder dbo:role ?koreanRole .
  ?koreanRole dbo:wikiPageRedirects dbr:Korean_War_commanders .
  ?work dbo:author ?koreanCommanderWorkAuthor .
  ?work dbo:title ?title .
  FILTER (lang(?title) = 'en')
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Edmund Hakewill-Smith""@en .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person dbo:honourReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?event dbo:performer ?person ;
         a dbo:Event, dbo:SocietalEvent .
  ?band dbo:member ?person ;
        rdfs:label ?force .
  FILTER (CONTAINS(LCASE(?force), ""the force""))
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist1 ?associatedArtist2
WHERE {
  # Step 1: Find a band member of Human Remains
  ?humanRemainsBand dbo:member ?bandMember .
  ?humanRemainsBand rdfs:label ""Human Remains (band)""@en .

  # Step 2: Find an associated musical artist of the band member
  ?bandMember dbp:associatedMusicalArtist ?associatedArtist1 .
  
  # Ensure this associated artist is a musical artist
  ?associatedArtist1 dbo:type dbo:MusicalArtist .

  # Step 3: Find another associated musical artist of the first associated artist
  ?associatedArtist1 dbp:associatedMusicalArtist ?associatedArtist2 .
  
  # Ensure this second associated artist is also a musical artist
  ?associatedArtist2 dbo:type dbo:MusicalArtist .

  # Filter to ensure we are considering Khlyst band members
  ?khlystBand dbo:member ?bandMember .
  ?khlystBand rdfs:label ""Khlyst (band)""@en .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingDate
WHERE {
  ?university rdfs:label ""Federal University of Paraíba""@en .
  ?university dbo:foundingDate ?foundingDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Step 1: Identify ""The Triple X's"" and the war they were involved in
  ?tripleXs a dbo:MilitaryConflict ;
            dbo:participatingMilitaryUnit ?unit .

  # Step 2: Find the commander of that war
  ?war dbo:commander ?commander .

  # Step 3: Check for reference to William Bayne as a commander or related figure
  OPTIONAL { ?commander foaf:name ""William Bayne""@en . }

  # Step 4: Retrieve the military force involved in that war
  ?unit dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?entityInBirthPlace
WHERE {
  # Find wars involving Karl Gustav von Baggovut
  ?baggovut dbo:participatedIn ?war .
  FILTER (str(?baggovut) = ""Karl_Gustav_von_Baggovut"") .

  # Find birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?elena dbo:birthPlace ?birthPlace .
  FILTER (str(?elena) = ""Elena_Žalinkevičaitė-Petrauskienė"") .

  # Find entities in the birthplace
  ?entityInBirthPlace dbo:location ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?profession 
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,721,4189,20859,0.14684317718940937,0.03341056533827618,0.05443563608909022
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?parentName WHERE {
  ?awardAwardedTo a dbo:Award ;
                  dbo:recipient ?awardee .
  
  FILTER regex(?awardAwardedTo, ""Commander of the Royal Victorian Order"", ""i"")

  OPTIONAL {
    ?awardee dbo:parent ?parent .
    ?parent rdfs:label ?parentName .
    FILTER (langMatches(lang(?parentName), ""en""))
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?person dbo:child <http://dbpedia.org/resource/Omar_bin_Faisal> .
  ?person a dbo:Person .
  BIND(?person AS ?parent)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  VALUES ?martin { dbr:Martin_of_Aragon }
  ?martin dbo:parent ?parent .
}
```

This query does the following:
- Uses `dbo:parent` to find the parent of a given individual.
- Specifies ""Martin of Aragon"" using its DBpedia resource identifier (`dbr:Martin_of_Aragon`).
- Selects and returns the parent entity.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
    # Ferdinand III, Holy Roman Emperor
    dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child1 .
    
    # Father of the child is Ferdinand III himself
    ?child1 dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .

    # Maria Anna of Bavaria and her child
    dbr:Maria_Anna_of_Bavary_(1574-1616) dbo:child ?child2 .
    
    # Father of Maria Anna's child, who is a royalty
    ?child2 dbo:parent ?fatherOfChild .
    ?fatherOfChild rdf:type dbo:Monarch .

    # The father of the child from Ferdinand III's lineage should match the father of Maria Anna's child
    FILTER (?fatherOfChild = dbr:Ferdinand_III,_Holy_Roman_Emperor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Bristol .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,971,1233,0,0.44056261343012704,1.0,0.6116535433070867
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?office
WHERE {
  # Find administrations associated with Anxo Quintana and the Spanish Socialist Workers' Party
  ?administration dbo:member dbr:Anxo_Quintana .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .

  # Find the tenant (leader) of this administration
  ?administration dbo:head ?tenant .

  # Find the office held by the tenant, which is an event
  ?office dbo:agent ?tenant ;
          a dbo:Event .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?psoe dbo:member ?administration .
  
  ?administration dbo:country dbr:Spain .

  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Rodney Lees
  ?rodneyLees a dbo:Person ;
              foaf:name ""Rodney Lees""@en .

  # Step 2: Find the award Rodney Lees received
  ?award dbo:recipient ?rodneyLees .

  # Step 3: Identify other awardees of the same award
  ?otherAwardee dbo:recipient ?award .

  # Step 4: Determine the parent of this awardee
  OPTIONAL { ?otherAwardee dbo:parent ?parent . }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?person .
  ?person a dbo:Person ;
          dbp:nationality dbr:Japan .
  BIND(?person AS ?awardee)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  # Find the children of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # For each child, find their parent(s)
  ?child dbo:parent ?predecessor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER (?person = <http://dbpedia.org/resource/Margarete_Sophie_of_Austria>)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorName WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military force known as ""The Triple X's""
  ?militaryForce rdfs:label ""The Triple X's""@en .
  
  # Identify the war involving this military force
  ?war dbo:militaryConflict ?militaryForce ;
       a dbo:MilitaryConflict .

  # Find the commander of that war
  ?war dbo:commander ?commander .

  # Find individuals who are recipients of the Knight Commander of the Order of the Bath
  ?recipient dbo:recipient dbr:Knight_Commander_of_the_Order_of_the_Bath ;
             a dbo:Person .

  # Identify societal events related to these recipients
  ?societalEvent dbo:event ?recipient ;
                 a dbo:SocietalEvent .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  
  ?recipient dbo:recipientOf ?award .
  ?recipient foaf:name ?awardee .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?castMember ?producer WHERE {
  VALUES ?film { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }

  ?film dbo:starring ?castMember .
  ?film dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?grandfatherLabel WHERE {
  ?na'od dbo:father ?father .
  FILTER (str(?na'od) = ""Na'od"") .

  ?father dbo:father ?grandfather .

  OPTIONAL { ?grandfather dbo:royalty ?royalty . }
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }

  FILTER EXISTS { ?grandfather dbo:royalty ?royalty } .
  FILTER EXISTS { ?grandfather dbo:officeHolder ?office } .

  SERVICE <http://dbpedia.org/sparql> {
    ?grandfather rdfs:label ?grandfatherLabel .
    FILTER (lang(?grandfatherLabel) = ""en"")
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:birthPlace ?nativePlace .
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album ;
         dbo:musicalWork true ;
         dbo:work true .
  
  ?album dbo:artist dbr:Sappy .

}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?phantomsmasher { dbr:Phantomsmasher }
  ?phantomsmasher dbo:associatedBand ?artist .
}
```

This query assumes that ""Phantomsmasher"" is correctly linked in DBpedia and uses the `dbo:associatedBand` property to find associated artists. Adjust the resource identifier if necessary based on actual DBpedia data.",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Mariclare Costello
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .

  # Step 2: Find her spouse
  ?mariclare dbo:spouse ?spouse .

  # Step 3: Identify the child of the spouse
  ?child dbo:parent ?spouse .

  # Step 4: Determine the parent of that child
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  ?philipp a dbo:Duke ;
           foaf:name ""Philipp of Württemberg""@en .
  
  ?philippChild dbo:child ?philipp .
  ?philippGrandchild dbo:child ?philippChild .

  ?philippGrandchild a dbo:Person ;
                     foaf:name ?grandchildName .
}
```

This query does the following:
- Identifies Duke Philipp of Württemberg using his title and name.
- Finds his children (`?philippChild`).
- For each child, finds their children (`?philippGrandchild`), who are the grandchildren of Duke Philipp.
- Selects distinct grandchild names.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Victor Saville""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfRogerPryor ?personWithBirthNameAnnSothern
WHERE {
  # Find the spouse of Roger Pryor (actor)
  ?rogerPryor dbo:birthName ""Roger Pryor""@en .
  ?rogerPryor dbo:occupation dbp:Actor .
  ?rogerPryor dbo:spouse ?spouseOfRogerPryor .

  # Find a person born as Ann Sothern
  ?personWithBirthNameAnnSothern foaf:name ""Ann Sothern""@en ;
                                 dbo:birthName ""Ann Sothern""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci""@en .
  OPTIONAL { ?person dbo:almaMater ?university . }
}
```

This query does the following:
- Uses `dbo:Person` to identify Eleonora Menicucci as a person.
- Searches for her name using `foaf:name`.
- Retrieves the alma mater information using `dbo:almaMater`.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeLabel ?otherAwardLabel WHERE {
  ?nobelPrize a dbo:NobelPrizeInPhysics .
  ?nobelPrize dbo:recipient ?awardee .
  ?awardee rdfs:label ?awardeeLabel .
  
  OPTIONAL {
    ?awardee dbo:award ?otherAward .
    ?otherAward rdfs:label ?otherAwardLabel .
  }
  
  FILTER (LANG(?awardeeLabel) = 'en')
  FILTER (LANG(?otherAwardLabel) = 'en')
}
ORDER BY ?awardeeLabel
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Get Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Step 2: Find the producer of Coke Studio Philippines and their profession
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer a dbo:MusicProducer ;
           dbo:profession ?professional .

  # Step 3: Find a musical artist with the same birth name as Bob Thompson
  ?person dbo:birthName ?birthName ;
          a dbo:MusicalArtist ;
          dbo:band ?band .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Glenn Youngkin""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorParadise ?actorAlways WHERE {
  # Find actors for ""Paradise"" (2013)
  dbr:Paradise_(2013_film) dbo:starring ?actorParadise .
  
  # Find actors for ""Always"" (1989)
  dbr:Always_(film) dbo:starring ?actorAlways .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Ras Tafari Makonnen (The Shadow)
  dbr:Ras_Tafari_Makonnen dbo:alias ""The Shadow""@en .
  
  # Yeshaq I
  dbr:Yeshaq_I dbo:father dbr:Na'od .

  # Na'od
  dbr:Na'od a dbo:Monarch ;
         dbo:country dbr:Ethiopia .

  # Na'od's father (Father of the Father)
  ?naodsFather dbo:child dbr:Na'od .
  
  # Ensure Na'od and his father are royalty
  ?naodsFather a dbo:Monarch ;
              dbo:country dbr:Ethiopia .

  # Ras Tafari Makonnen's alter ego is Yeshaq I's grandfather
  ?alterEgo dbo:child ?naodsFather .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAmy ?parentOfChild
WHERE {
  # Parent of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  
  ?parentOfAmy dbo:child ?amyArbus .

  # Child of Allan Arbus and actor in a movie with Herschel Bernardi
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  
  ?childOfAllan dbo:parent ?allanArbus ;
                dbo:spouse ?actorInMovie .

  # Movie where the actor worked with Herschel Bernardi
  ?movie dbo:starring ?actorInMovie, dbr:Herschel_Bernardi .

  # Parent of the child of Allan Arbus who acted in the movie
  ?parentOfChild dbo:child ?childOfAllan .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
    # Step 1: Identify Edward Stanley, 17th Earl of Derby and his parent
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:father dbr:PersonX .
    
    # Step 2: Find the child of this parent who is a politician and an office holder
    dbr:PersonX dbo:child ?childOfParent .
    ?childOfParent a dbo:Politician ;
                  dbo:officeHolder true .

    # Step 3: Identify Frederick Stanley, 16th Earl of Derby and his child who is a politician
    dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:father dbr:PersonY .
    dbr:PersonY dbo:child ?politicianChild .

    # Step 4: Determine the parent of this child
    ?politicianChild dbo:parent ?parentOfChild .
    
    FILTER (?childOfParent = ?politicianChild)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?event
WHERE {
  # Find Anxo Quintana
  ?person rdfs:label ""Anxo Quintana""@en .
  
  # Find the administration he led
  ?administration dbo:leader ?person ;
                  dbo:headOf ?office .

  # Find events related to his leadership
  ?event dbo:agent ?person ;
         a dbo:Event .

  FILTER (lang(?personLabel) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Eleonore of Austria, Queen of Poland and her father
  ?eleonore a dbo:Person ;
            foaf:name ""Eleonore of Austria"" ;
            dbo:spouse dbr:Anna_of_Poland_(1573–1598) ; # Queen of Poland
            dbo:father ?commander .

  # Maria Anna of Bavaria (born 1574) and her father
  ?mariaanna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbo:birthDate ?birthDate ;
             FILTER(YEAR(?birthDate) = 1574) ;
             dbo:father ?father .

  # The commander is also the father of Maria Anna's father
  ?commander a dbo:Person ;
             foaf:name ?name ;
             dbo:child ?father .

  # Ensure the person is royalty
  ?commander dbo:royalty true .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentBirthName WHERE {
  dbr:Tisha_Sterling dbo:childOf ?parent .
  ?parent dbp:birthName ?parentBirthName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Identify Miguel Maura
  dbr:Miguel_Maura dbo:positionHeld ?office .
  
  # Check if he is associated with Madrid
  OPTIONAL { 
    dbr:Miguel_Maura dbo:residence dbr:Madrid .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kate Dimbleby""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `dbp:` is used for DBpedia properties, though not directly needed here.

- **SELECT Clause**: We are selecting the variable `?parent` which will hold the parent entity of Kate Dimbleby.

- **WHERE Clause**:
  - The first pattern identifies a person (`?person`) who is an instance of `dbo:Person` and has the name ""Kate Dimbleby"" in English.
  - The second pattern uses the property `dbo:parent` to find any parent entities related to this person. The use of `OPTIONAL` ensures that even if no parent information is available, the query will still return results for Kate Dimbleby.

This query assumes that DBpedia has a direct mapping for familial relationships using `dbo:parent`. If the data model uses different properties or structures, adjustments may be necessary.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  
  ?person dbp:parents ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?parent dbo:child dbr:Tisha_Sterling .
  
  # Step 2: Get the birth name of this parent
  ?parent foaf:name ?birthName .

  # Step 3: Find the actor from ""1,000 Dollars a Minute""
  ?actor dbo:film dbr:_1,_000_Dollars_a_Minute ;
         rdf:type dbo:Actor .
  
  # Step 4: Find the spouse of this actor
  ?spouse foaf:name ?birthName ;
          dbo:spouse ?actor .

  # Step 5: Match the person from step 2 and step 4
  BIND(?parent AS ?person)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and Yeshaq I
  ?baedaMaryamI a dbo:Monarch ;
                dbo:spouse ?yeshaqIParent .
  
  ?yeshaqI a dbo:Monarch ;
           dbo:parent ?yeshaqIParent .

  # Child of Baeda Maryam I
  ?childBaedaMaryamI dbo:parent ?baedaMaryamI .

  # Child of the parent (royalty) of Yeshaq I
  ?childYeshaqParent dbo:parent ?yeshaqIParent .
  
  # The individual who is both child of Baeda Maryam I and child of the parent of Yeshaq I
  ?individual rdf:type dbo:Monarch ;
              dbo:parent ?baedaMaryamI, ?childYeshaqParent .

  # Father of this individual (royalty and office holder)
  ?father a dbo:Monarch, dbo:OfficeHolder ;
          dbo:spouse ?mother ;
          dbo:child ?individual .

  # Grandfather (father's father) of this individual
  ?grandfather dbo:child ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Minye Kyawswa and his child/grandchild relationships
  ?minyeKyawswa a dbr:Minye_Kyawswa .
  ?minyeKyawswaChild dbo:child ?minyeKyawswa .
  ?grandchild dbo:parent ?minyeKyawswaChild .

  # Saw Shwe Khet and his child/spouse relationships
  ?sawShweKhet a dbr:Saw_Shwe_Khet .
  ?sawShweKhetChild dbo:child ?sawShweKhet .
  ?spouse dbo:marrigePartner ?sawShweKhet .

  # Predecessor of Saw Shwe Khet's child
  ?predecessor dbo:succededBy ?sawShweKhetChild .

  # The entity we are looking for is the child of:
  # - The parent of Minye Kyawswa's grandchild
  # - The predecessor of Saw Shwe Khet's child
  # - The spouse of Saw Shwe Khet

  ?parentOfGrandchild dbo:parent ?grandchild .
  ?child dbo:child ?parentOfGrandchild .

  FILTER (?child = ?predecessor && ?child = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Stone Sour""@en .
  
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?battleCommander WHERE {
  # George Ducas as commander in the Russo-Polish War
  dbr:George_Ducas dbo:commanderOf dbr:Russo-Polish_War_(1654–1667) .
  
  # Successor who is a politician and an office holder
  ?successor dbo:succeededBy dbr:George_Ducas ;
             a dbo:Politician ;
             dbo:officeHolder true .

  # Commander in the Battle of Vienna associated with a TV show and societal event
  ?battleCommander dbo:commanderOf dbr:Battle_of_Vienna ;
                   dbo:associatedWith dbr:Television_Show ;
                   dbo:associatedWith dbr:Societal_Event .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  ?child dbo:parent dbr:Saw_Shwe_Khet ;
         rdf:type dbo:Monarch .
  
  ?spouse dbo:spouse ?father .
  ?father dbo:parent ?child .

  ?predecessor dbo:successor ?spouse ;
               rdf:type dbo:Monarch .

  ?minHlaChild dbo:parent dbr:Saw_Min_Hla ;
               rdf:type dbo:Monarch .
  
  FILTER (?child = ?minHlaChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?partyAffiliation WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
  FILTER EXISTS { 
    ?party rdfs:label ?partyLabel .
    FILTER (CONTAINS(LCASE(?partyLabel), ""republican party"") && CONTAINS(LCASE(?partyLabel), ""united states""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find events where Anxo Quintana is the leader of an administration
  ?event dbo:leader dbr:Anxo_Quintana .
  
  # Get the office related to this event
  ?event dbo:office ?office .

  # Find countries where Álvaro Quirós resides
  ?country dbo:resident dbr:Álvaro_Quirós .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person dbo:wikiPageWikiLink <http://dbpedia.org/page/Bruno_Retailleau> .
  ?person dbp:party ?party .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Princess Aisha bint Faisal""@en .
  ?person dbo:parent ?parent .
  ?parent rdf:type dbo:Monarch ;
          dbo:royaltyStatus ?status .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Storm in a Teacup""@en .
  OPTIONAL { ?film dbo:producer ?producer . }
}
```

This query does the following:
- It looks for an entity that is of type `dbo:Film` and has the label ""Storm in a Teacup"" in English.
- It then retrieves any associated producer(s) using the `dbo:producer` property.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWar ?successorCommander
WHERE {
  # Find Jean Baptiste d'Arco's role in a war that is also a TV show and societal event
  ?war dbo:type dbr:Battle .
  ?war dbo:wikiPageRedirects ?tvShow .
  ?tvShow dbo:type dbr:Television_Show .
  ?war dbo:wikiPageDisambiguates ?societalEvent .
  ?societalEvent dbo:type dbr:Societal_event .

  # Find Jean Baptiste d'Arco as a commander in that war
  ?commanderInWar dbo:rank ""Commander"" ;
                  dbo:commanded ?war ;
                  rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""jean baptiste d'arco""))

  # Find Michał Kazimierz Pac's force and the successor commander
  ?force dbo:type dbr:Military_conflict .
  ?successorCommander dbo:rank ""Commander"" ;
                      dbo:commanded ?force ;
                      rdfs:label ?successorName .
  FILTER(CONTAINS(LCASE(?successorName), ""politician"") || CONTAINS(LCASE(?successorName), ""office holder""))

  # Michał Kazimierz Pac's association with the force
  ?paczCommander dbo:rank ""Commander"" ;
                 dbo:commanded ?force ;
                 rdfs:label ""Michał Kazimierz Pac""@en .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?series dbr:The_Golden_Master .
  
  ?series dbo:actor ?alterEgo .

  ?alterEgo dbo:portrayedBy ?actor .

  ?movie dbr:The_Movie_With .
  
  ?movie dbo:starring ?actor .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse in the 2020–21 season
  ?vitesseSeason dbo:team dbr:SBV_Vitesse ;
                dbo:manager ?manager .
  
  FILTER(STRSTARTS(STR(?vitesseSeason), ""http://dbpedia.org/resource/2020%E2%80%9321_SBV_Vitesse_season""))

  # Manager of VfL Bochum in the 2006–07 season
  ?bochumSeason dbo:team dbr:VfL_Bochum ;
                dbo:manager ?manager .
  
  FILTER(STRSTARTS(STR(?bochumSeason), ""http://dbpedia.org/resource/2006%E2%80%9307_VfL_Bochum_season""))

  # Manager's nationality is West Germany
  ?manager dbp:nationality dbr:West_Germany .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child WHERE {
  dbr:Yeshaq_I dbo:fatherOrMother ?parent .
  
  ?parent rdf:type dbo:Monarch .

  ?parent dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?joeyBBirthName ?elormAssociatedArtist WHERE {
  # Find Joey B's birth name
  ?joeyB a dbo:MusicalArtist ;
         foaf:name ""Joey B"" .
  ?joeyB foaf:birthday ?birthDate ;
         foaf:mbox ?email ;
         foaf:name ?joeyBBirthName .

  # Find the person with the birth name Elorm Kabu Amenyah
  ?elorm a dbo:MusicalArtist ;
         foaf:name ""Elorm Kabu Amenyah"" .
  
  # Find the associated musical artist for Elorm
  ?elorm dbo:associatedMusicalArtist ?elormAssociatedArtist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?character a dbo:FictionalDetective .
  ?character rdfs:label ""The Shadow""@en .
  OPTIONAL { ?character dbo:creator ?creator . }
  OPTIONAL { ?character dbo:portrayedBy ?actor . }
  
  FILTER (lang(?characterLabel) = 'en')
  
  BIND(COALESCE(?creator, ?actor) AS ?professional)
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?alterEgo
WHERE {
  # Find actors from ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:castMember ?actor .

  # Find the alter ego of ""The Shadow"" in the video game
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  FILTER EXISTS { ?alterEgo dbo:profession ?profession }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaName WHERE {
  ?mitaka a dbo:Ward ;
          dbo:partOf dbr:Tokyo .
  ?mitaka rdfs:label ?mitakaName .
  FILTER (lang(?mitakaName) = 'en')
}
```

This query does the following:
- Uses `dbo:Ward` to identify entities that are wards.
- Filters these entities to find those that are part of Tokyo (`dbo:partOf dbr:Tokyo`).
- Retrieves the English label for Mitaka using `rdfs:label`.
- Ensures the label is in English with a language filter.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeLanguage
WHERE {
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
  ?producer dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:nativeLanguage ?nativeLanguage .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  # Find Denis Kolodin's resource in DBpedia
  dbr:Denis_Kolodin dbo:nickname ?nickname .

  # Check if the nickname is also a soccer club
  OPTIONAL { 
    ?club rdfs:label ?nickname .
    FILTER (lang(?nickname) = 'en')
    ?club rdf:type dbo:SoccerClub .
  }
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result
WHERE {
  # Spouse of Saw Shwe Khet
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  
  # Parent of Min Hla Htut of Pyakaung and their child
  ?parent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .
  ?child dbo:parent ?parent .

  # Spouse of Saw Min Phyu, their child who is royalty, and the predecessor of that child
  ?spousePhyu dbo:spouse dbr:Saw_Min_Phyu .
  ?royaltyChild dbo:child ?spousePhyu ;
                a dbo:RoyalPerson .
  ?predecessor dbo:succeededBy ?royaltyChild .

  # Find the result as per the question's requirement
  FILTER (?result = ?spouse || ?result = ?child || ?result = ?predecessor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:West_Germany .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL { 
    ?team dbo:manager ?person .
    FILTER EXISTS { ?team rdfs:label ""VfL Bochum""@en }
  }

  FILTER NOT EXISTS {
    ?person dbo:manager ?otherTeam .
    FILTER NOT EXISTS { ?otherTeam rdfs:label ""VfL Bochum""@en }
  }
}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,0,22,1,0.0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  dbr:Nat_Levine a dbo:Person .

  ?film dbo:producer dbr:Nat_Levine .
  
  ?film a dbo:Film .

  ?film dbo:starring ?actor .

  ?actor dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,62,7,0,0.8985507246376812,1.0,0.9465648854961832
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet dbr:Saw_Shwe_Khet .

  # Step 2: Find the child of Saw Shwe Khet who is a royalty
  ?child dbo:parent ?sawShweKhet .
  ?child dbo:positionTitle ?royaltyPosition .
  
  # Step 3: Determine the predecessor of this child
  ?predecessor dbo:succeededBy ?child .

  # Step 4: Identify the father of this predecessor who is also a royalty
  ?father dbo:parent ?predecessor .
  ?father dbo:positionTitle ?royaltyPosition2 .

  # Step 5: Find the spouse of this royal father
  ?spouse dbo:spouse ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?partyName WHERE {
  VALUES ?name { ""Guillaume Peltier"" ""Bruno Retailleau"" }
  
  ?person a dbo:Person ;
          foaf:name ?name .
  
  OPTIONAL {
    ?person dbo:memberOfParty ?party .
    ?party foaf:name ?partyName .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:field dbr:Computer_science .
  ?person foaf:name ?name .
}
```

This query retrieves people who are associated with the field of Computer Science. You can replace `dbr:Computer_science` with another resource to find professionals in different fields.",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  ?awardee dbo:nationality dbr:Australia ;
          a dbo:Scientist ;
          dbo:award dbr:Australian_Laureate_Fellowship .
  
  ?entity dbo:location dbr:Andhra_Pradesh .

  ?awardee dbp:almaMater ?almaMater .
}",3,5,4,2,2,2,2,9,2,7,0,0.2222222222222222,1.0,0.3636363636363636
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneMilitaryForce ?tripleXCommander WHERE {
  # Find William Bayne and his military conflict
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict ?bayneWar .
  
  # Get the military force for William Bayne's war
  ?bayneWar dbo:participatingMilitaryForce ?bayneMilitaryForce .

  # Find The Triple X and their military conflict
  ?tripleX a dbo:MilitaryPerson ;
           foaf:name ""The Triple X"" ;
           dbo:militaryConflict ?tripleXWar .
  
  # Get the commander of The Triple X's war
  ?tripleXWar dbo:commander ?tripleXCommander .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find Nicholas II's birth place (native administration)
  dbr:Nicholas_II_of_Russia dbo:birthPlace ?nativeCountry .

  # Ensure the native country is a country
  ?nativeCountry rdf:type dbo:Country .

  # Find a person who died in Switzerland
  ?personDecedent dbo:deathPlace dbr:Switzerland .

  # Connect this person to the native administration of Nicholas II
  ?personDecedent dbo:nativePlace ?nativeCountry .
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Yeshaq I (Isaac I of Ethiopia)
  wd:Q123456 wdt:P22 ?parent. # P22 is the ""father"" property
  ?parent wdt:P31/wdt:P279* wd:Q11111. # Q11111 represents royalty, adjust as needed

  # Baeda Maryam I
  wd:Q654321 wdt:P22 ?child. # P22 is the ""father"" property

  # The child of Yeshaq I who is also a father to Baeda Maryam I
  ?parent = ?child.
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfather WHERE {
  # Dawit I's child
  ?child dbo:parent dbr:Dawit_I .
  
  # Na'od's parent (child of Dawit I's child)
  ?naodParent dbo:parent ?child .
  
  # Na'od's grandfather (parent of Na'od's parent)
  ?grandfather dbo:parent ?naodParent .

  # Ensure the person is a royalty
  ?grandfather dbo:royalty true .

  # Ensure the person is an office holder
  ?grandfather dbo:officeHolder true .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander ?militaryForce WHERE {
  # Find Yurii Khmelnytsky and his successor
  ?yuriiKhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en ;
                   dbo:succeededBy ?successor .

  # Find the commander of the Battle of Vienna
  ?battleOfVienna a dbo:MilitaryConflict ;
                  dbo:commander ?commander ;
                  rdfs:label ""Battle of Vienna""@en .

  # The military force should be related to both a television show and a societal event
  ?militaryForce dbo:relatedTo ?tvShow, ?societalEvent .
  ?tvShow rdf:type dbo:TelevisionSeries .
  ?societalEvent rdf:type dbo:SocietalEvent .

  # Ensure the military force is connected to the Battle of Vienna
  ?battleOfVienna dbo:militaryForce ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office WHERE {
  # Find political parties of Miguel Maura and Mariano Rajoy
  { 
    ?party a dbo:PoliticalParty ;
           dbo:member dbr:Miguel_Maura .
  } UNION {
    ?party a dbo:PoliticalParty ;
           dbo:member dbr:Mariano_Rajoy .
  }

  # Find the leader of these parties
  ?leader dbo:positionTitle ""Leader""@en ;
          dbo:memberOf ?party .

  # Find the office held by this leader
  ?office dbo:officeHolder ?leader ;
          a dbo:PublicOffice ;
          dbp:country dbr:Spain .

  # Ensure the office is related to Madrid as a tenant
  OPTIONAL { ?office dbo:location dbr:Madrid . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInResidence ?warCommander
WHERE {
    # Find Dawid Olejniczak's place of residence
    dbr:Dawid_Olejniczak dbo:residence ?residence .

    # Determine the country associated with this residence
    ?residence dbo:country ?country .
    
    # Find commanders in the French Revolutionary Wars
    ?warCommander dbo:commandedDuring ?frenchRevWar ;
                 dbo:nationality ?nationality .
    
    # Ensure the commander's nationality is the same as the country of Dawid Olejniczak's residence
    FILTER (?country = ?nationality)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  dbr:Saw_Shwe_Khet dbo:spouse ?spouse .
  
  ?spouse dbo:predecessor dbr:Myat_Hpone_Pyo .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  ?child dbo:nativePlace dbr:Middlesex .
  
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?yeshaq a dbo:Person ;
          dbo:birthName ""Yeshaq I""@en .
  
  ?yeshaq dbo:parent ?parent .

  ?parent a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouseName WHERE {
  # Find Harriette Arlene Lake by birth name
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  
  # Find spouse of an actor who acted in a film produced by Nat Levine
  ?actor dbo:spouse ?person ;
         dbo:actedIn ?film .
  ?film dbo:producer dbr:Nat_Levine .

  # Get the name of the spouse
  ?person rdfs:label ?spouseName .

  # Check if this person is a member of the ruling party in Central, Louisiana
  OPTIONAL {
    ?partyMember dbo:memberOf ?rulingParty .
    ?rulingParty dbp:country dbr:United_States ;
                 dbp:stateOrProvince dbr:Louisiana ;
                 dbp:city dbr:Central,_Louisiana ;
                 dbo:isRulingParty true .
    FILTER (?person = ?partyMember)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?mitakaName WHERE {
  # Find the region associated with Japan Standard Time
  dbr:Japan_Standard_Time dbo:timeZoneRegion ?region .

  # Get the name of Mitaka in Tokyo
  dbr:Mitaka dbo:name ?mitakaName .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bornAward ?bornHost ?weissAward ?weissHost
WHERE {
  # Max Born's award and its host institution
  ?bornAward dbo:recipient dbr:Max_Born .
  ?bornAward dbo:awardingBody ?bornHost .
  FILTER (isBlank(?bornHost) || ?bornHost a dbo:EducationalInstitution)

  # Rainer Weiss's award and its host institution
  ?weissAward dbo:recipient dbr:Rainer_Weiss .
  ?weissAward dbo:awardingBody ?weissHost .
  FILTER (isBlank(?weissHost) || ?weissHost a dbo:EducationalInstitution)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerOfLetschTeam ?vflBochumManager ?theodorHeussCountry
WHERE {
  # Find teams managed by Thomas Letsch
  ?team a dbo:SoccerClub ;
        dbo:season ?letschSeason .
  ?letschSeason dbo:manager dbr:Thomas_Letsch .

  # Find manager of VfL Bochum
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:season ?vflBochumSeason .
  ?vflBochumSeason dbo:manager ?vflBochumManager .

  # Find Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?theodorHeussCountry .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?artist rdfs:label ""Lasso the Moon""@en .
  ?album dbo:artist ?artist ;
         a dbo:Album ;
         dbo:workType ?workType .
  FILTER (?workType IN (dbr:Film, dbr:Work))
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace rdf:type dbo:Settlement ;
             dbp:country ""United States""^^xsd:string .

  # Gillmore Medal awardee's force
  ?gillmoreAwardee dbo:awardReceived dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryService ?force .

  # Medal of Honor awardee's war
  ?medalOfHonorAwardee dbo:awardReceived dbr:Medal_of_Honor ;
                      dbo:servedInWar ?war .

  # Find the entity that matches all conditions
  FILTER (?birthPlace = ?entity)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Identify Tupac Shakur's resource
  dbr:Tupac_Shakur dbo:birthName ?birthName .

  # Step 2: Find the associated musical artist using the birth name
  ?person dbo:birthName ?birthName .
  ?person dbo:musicalArtist ?artist .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant
WHERE {
  # Find Spanish citizens from Spain
  ?person dbo:nationality dbr:Spain ;
          dbo:ethnicGroup dbr:Spanish_people .

  # Their residence is a country
  ?person dbo:residence ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
  
  # Find tenants of that country
  ?tenant dbo:nationality ?country .
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?actor
WHERE {
  # Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Actor of ""Always"" (1989 film)
  ?actor dbo:starring dbr:Always_(film) .
  
  # Films with Iliza Shlesinger
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Iliza_Shlesinger .

  FILTER(?spouse = ?actor)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?work dbo:musicalWork dbr:T.I. .
  ?work a dbo:Songs .  # Assuming Songs is the class for songs
  ?album dbo:lyricsBy ?work .
  ?album dbo:performer ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war WHERE {
  VALUES ?person { 
    dbr:Hashiba_Hidekatsu 
    dbr:Toyotomi_Hidenaga 
  }
  
  ?person dbo:spouse|dbo:child|dbo:parent|dbo:sibling* ?relatedPerson .
  ?relatedPerson dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""warrior"") || CONTAINS(LCASE(?occupation), ""samurai""))

  OPTIONAL {
    ?relatedPerson dbo:participatedIn ?event .
    ?event a dbo:MilitaryConflict ;
           rdfs:label ?war .
  }
  
  BIND(?person AS ?entity)
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award ?band
WHERE {
  # Find Ackquille Jean Pollard by birth name
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  
  # Find an award associated with a region that is a state and settlement in New York
  ?award dbo:recipient ?person ;
         dbo:location ?region .
  ?region rdf:type dbo:State ;
          dbo:country dbr:United_States ;
          dbo:state dbr:New_York_(state) .

  # Find the awardee of this award, which is a band
  ?award dbp:awardee ?band .
  ?band rdf:type dbo:Band .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida .
  
  ?award dbo:location dbr:Puerto_Rico ;
         dbo:recipient ?person .

  OPTIONAL { ?person dbo:hometown dbr:Puerto_Rico }
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Identify the song ""Lotus (R.E.M. song)""
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2 & 3: Filter producers that are organizations and also bands or groups
  ?producer a dbo:Organization ;
           (dbo:bandMember|dbo:musicGroup) ?producerBandOrGroup .

  # Step 4: Find musical artists associated with these producers
  ?producerBandOrGroup dbp:associatedMusicalArtist ?artist .
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find books authored by Hillary Clinton
  ?book a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .

  # Identify the spouse of Hillary Clinton who is also a politician and an office holder
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Ensure the spouse is a politician
  ?spouse a dbo:Politician .

  # Ensure the spouse has held an office
  ?spouse dbo:officeHolder ?office .
}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  # Baeda Maryam I's child
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I .
  
  # Yeshaq I's parent who is royalty
  ?yeshaqParent dbo:child dbr:Yeshaq_I ;
                a dbo:Monarch .

  # Child of Yeshaq I's royal parent
  ?yeshaqChild dbo:parent ?yeshaqParent .

  # Find the grandfather (father of father) who is royalty and office holder for Baeda Maryam I's child
  ?baedaGrandfather dbo:child ?baedaFather .
  ?baedaFather dbo:child ?baedaChild .
  ?baedaGrandfather a dbo:Monarch ;
                   dbo:officeHolder ?office .

  # Find the grandfather (father of father) who is royalty and office holder for Yeshaq I's child
  ?yeshaqGrandfather dbo:child ?yeshaqFather .
  ?yeshaqFather dbo:child ?yeshaqChild .
  ?yeshaqGrandfather a dbo:Monarch ;
                     dbo:officeHolder ?office .

  # Ensure the grandfathers are the same person
  FILTER (?baedaGrandfather = ?yeshaqGrandfather)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?davidPaton { dbr:David_Paton }
  
  ?band dbo:member ?davidPaton .
  ?band dbo:member ?artist .
  FILTER(?artist != ?davidPaton)
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?musicalArtist WHERE {
  # Find a show that is also a movie
  ?show a dbo:Film .
  
  # Identify the actor associated with Afeez Oyetoro
  ?show dbo:starring dbr:Afeez_Oyetoro ;
        dbo:starring ?actor .

  # Identify the musical artist associated with Cynthia Morgan
  ?musicalArtist foaf:name ""Cynthia Morgan"" ;
                 dbo:associatedBandOrMusicalArtist ?band .
  
  OPTIONAL { ?band dbo:member ?artist . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Mary Elphinstone, Lady Elphinstone
  ?maryElphinstone a dbo:Person ;
                  foaf:name ""Mary Elphinstone"" ;
                  dbo:nationality dbr:Middlesex .
  
  # Her parents
  ?maryElphinstone dbo:parent ?parent .

  # Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  ?patrickBowesLyon a dbo:Person ;
                    foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"" .
  
  # His parents
  ?patrickBowesLyon dbo:parent ?parent .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Landmark with specific elevation and its ruling party
  ?landmark a dbo:Lighthouse ;
            dbp:elevation ""20.1168""^^xsd:float .
  ?landmark dbo:governingBody ?rulingParty .

  # Roger Pryor's spouse
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .

  # Combine conditions to find the person who matches all criteria
  FILTER (?birthName = ?person && ?spouse = ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  ?person dbo:deathDate ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:date)
  
  ?person dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  BIND(?birthPlace AS ?birthPlaceEntity)
}
```",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person dbo:birthName ""Ada Jane Low""@en .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:deathPlace dbr:Melbourne .
  
  ?succession dbo:successor ?person ;
              dbo:predecessor ?predecessor .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find a child of Archduke Charles Louis
  ?child1 dbo:spouseOrPartner dbr:Archduke_Charles_Louis_of_Austria .
  
  # This child must have a child who is royalty and predecessor of Carl, Duke of Württemberg
  ?child1 dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .
  ?grandchild dbo:predecessor dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg .

  # Find a child of Duke Philipp
  ?child2 dbo:spouseOrPartner dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # This child must have the same grandchild as above
  ?child2 dbo:child ?grandchild .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?commander ?book
WHERE {
  # Spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .
  
  # Commander in the Third Taiwan Strait Crisis
  dbr:Third_Taiwan_Strait_Crisis dbo:commander dbr:Bill_Clinton .

  # Author of a book by Bill Clinton
  ?book dbo:author dbr:Bill_Clinton ;
        a dbo:Book .
}
```",4,7,5,2,3,3,3,71,0,7,1,0.0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?movie ?work WHERE {
  # Step 1: Find Kent Allard and his alter ego
  ?kentAllard a dbo:FictionalCharacter ;
              rdfs:label ""Kent Allard""@en .
  
  ?alterEgo dbo:alterEgoOf ?kentAllard ;
            dbo:profession ?professional .

  # Step 2: Find the actor of High Society Blues
  ?highSocietyBlues dbo:starring dbr:Actor_of_High_Society_Blues ;
                    dbo:productionCompany ?producer .
  
  # Step 3: Link the alter ego to a movie and work they produced
  ?alterEgo dbo:produced ?movie ;
            dbo:work ?work .

}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          dbp:name ""Philip, Despot of Romania""@en .

  # Step 2: Find his parent who is a royalty
  ?parent dbo:child ?philip .
  ?parent a dbo:RoyalFamilyMember .

  # Step 3: Determine the father of this royal parent
  ?father dbo:spouse ?parent ;
          dbo:child ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?realNameNickCurran ?realNameKimWilson WHERE {
  # The Fabulous Thunderbirds
  ?band a dbo:Band ;
        rdfs:label ""The Fabulous Thunderbirds""@en .
  
  # Nick Curran's real name and association with the band
  ?nickCurran a dbo:MusicalArtist ;
              dbp:associatedBand ?band ;
              dbo:birthName ?realNameNickCurran .

  # Kim Wilson's real name and association with the band
  ?kimWilson a dbo:MusicalArtist ;
             dbp:associatedBand ?band ;
             dbo:birthName ?realNameKimWilson .
  
  FILTER (lang(?bandName) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentVictorStanley ?fatherPoliticianChild
WHERE {
  # Victor Stanley (Royal Navy officer)
  ?victorStanley a dbo:MilitaryPerson ;
                 foaf:name ""Victor Stanley"" ;
                 dbo:spouse ?spouseVictor .

  # Parent of Victor Stanley
  OPTIONAL { ?spouseVictor dbo:child ?parentVictorStanley . }
  
  # Alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby
  ?alumnus a dbo:EducationalInstitutionAlumni ;
           foaf:name ""Eton College"" ;
           dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .

  # Child of the alumnus who is a politician
  OPTIONAL { ?alumnus dbo:child ?politicianChild .
             ?politicianChild a dbo:Politician . }

  # Father of the politician child
  OPTIONAL { ?alumnus dbo:spouse ?fatherPoliticianChild . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?parent ?child WHERE {
  ?event dbo:eventType dbr:Siege_of_Mukha .
  ?event dbo:commander ?commander .
  ?commander a dbo:Royalty .

  OPTIONAL { 
    ?commander dbo:parent ?parent .
    ?parent a dbo:Royalty .
    
    OPTIONAL { 
      ?parent dbo:child ?child .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplaceEntity WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthplace.
  ?birthplace rdfs:label ?birthplaceEntity.
}
```",2,2,3,2,1,2,2,9,0,3,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Identify John Cleese
  dbr:John_Cleese a dbo:Actor ;
                  foaf:name ""Richard Grant Esterhuysen""@en .

  # Find movies/shows where he acted
  ?film dbo:starring dbr:John_Cleese .
  
  # Ensure the film is both a movie and a television show
  ?film a dbo:Film ;
        dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:label ""Television series""@en }
  FILTER EXISTS { ?genre rdfs:label ""Film""@en }

  # Find other actors in those films/shows
  ?film dbo:starring ?actor .
  
  # Exclude John Cleese from the results
  FILTER (?actor != dbr:John_Cleese)
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfDoon ?actorInMovie ?parentOfPhotographer
WHERE {
  # Find Doon Arbus and her parent
  dbr:Doon_Arbus dbo:parent ?parentOfDoon .

  # Find movies where Herschel Bernardi acted
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Check if the parent of Doon Arbus also acted in those movies
  ?movie dbo:starring ?actorInMovie .
  FILTER (?parentOfDoon = ?actorInMovie)

  # Find a professional photographer and their parent
  ?photographer a dbo:Photographer ;
               dbo:profession ""Professional"" .
  ?photographer dbo:parent ?parentOfPhotographer .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Republican_Party_(United_States) dbo:member ?person .
}
```

This query selects individuals (`?person`) who are members of the Republican Party in the United States.",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Quincy Adams Gillmore's resource
  dbr:Quincy_Adam_Gillmore a dbo:MilitaryPerson .

  # Check if he received the Medal of Honor
  OPTIONAL { 
    dbr:Quincy_Adam_Gillmore dbo:awardReceived dbr:Medal_of_Honor .
  }

  # Find wars he participated in
  ?war dbo:militaryConflict dbr:Quincy_Adam_Gillmore .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?shirley a dbo:Person ;
           foaf:name ""Shirley Stoler""@en .
  
  OPTIONAL { ?shirley dbo:profession ?profession . }
  
  ?shirley dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Elvira of Castile and her children
  dbr:Elvira_of_Castile_queen_of_Sicily dbo:spouse ?elviraSpouse .
  
  # Roger III, Duke of Apulia and his father
  dbr:Roger_III,_Duke_of_Apulia dbo:father ?rogerFather .

  # Elvira's child who is also a child of Roger III's father
  ?elviraChild dbo:parent dbr:Elvira_of_Castile_queen_of_Sicily ;
               dbo:parent ?rogerFather .
  
  # The grandchild we are interested in
  ?grandchild dbo:parent ?elviraChild .

  # Ensure the grandchild is royalty and an office holder related to William I
  ?grandchild a dbo:Monarch ;
              dbo:officeHolderOf ?office .
  ?office dbo:heldBy dbr:William_I_of_Sicily .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territoryAdministeredFromDeathPlace ?territoryAdministeredByPrinceChristian
WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" ;
          dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find territory administered from this death place
  ?territoryAdministeredFromDeathPlace dbo:administeredBy ?hansen ;
                                         dbo:location ?deathPlace .

  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?princeChristian a dbo:Person ;
                   foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" ;
                   rdf:type dbo:Royalty .

  # Find territory administered by Prince Christian
  ?territoryAdministeredByPrinceChristian dbo:administeredBy ?princeChristian .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?title WHERE {
  ?person dbo:birthName ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
  OPTIONAL { ?person dbo:royalTitle ?title . }
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?residenceCountry
WHERE {
  # Spanish Socialist Workers' Party and its administration
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?tenant .
  
  # Tenant is a person with nationality Spanish
  ?tenant dbo:nationality dbr:Spain .

  # Residence of the tenant should be a country
  ?tenant dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?residenceCountry)
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Duchess ;
          foaf:name ""Luise of Brunswick-Wolfenbüttel""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carolynDeathPlace ?aladdinActorName ?actorDeathPlace WHERE {
  # Carolyn Jones's death place
  dbr:Carol_Jones dbo:deathPlace ?carolynDeathPlace .

  # Aladdin (1958 film) and its main actor
  dbr:Aladdin_(film)_1958 dbo:starring ?aladdinActor .
  
  # Get the name of the actor
  ?aladdinActor rdfs:label ?aladdinActorName FILTER(LANG(?aladdinActorName) = 'en') .

  # Actor's death place
  ?aladdinActor dbo:deathPlace ?actorDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution ?usEntity
WHERE {
  # Find Brian Kemp and his role in administration
  dbr:Brian_Kemp dbo:positionHeld ?role .
  
  # Find institutions related to his role
  ?role dbo:department ?institution .

  # Ensure the institution is related to the United States
  ?institution dbo:country dbr:United_States .

  # Find any entity related to the United States
  ?usEntity a dbo:Country ;
            rdfs:label ?entityLabel .
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person dbo:occupation dbr:Sports_manager .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?sawMinHla dbo:child ?child .
  FILTER (str(?sawMinHla) = ""Saw Min Hla"") .

  ?myatHponePyo dbo:parent ?child .
  FILTER (str(?myatHponePyo) = ""Myat Hpone Pyo"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Lao_She .
  FILTER EXISTS { ?work a ?type . }
}
```

This query does the following:
- It selects works (`?work`) where Lao She is listed as an author.
- The `FILTER EXISTS` clause ensures that only resources with a type (e.g., books, plays) are included.",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?force WHERE {
  # Office held by Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Commander who is an office holder and a politician
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice .
  
  # Force that is both a military conflict and a societal event
  ?force a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:participant dbr:Manuel_Pinto_da_Costa .

  # Tenant of the residence of Alberto Ruiz-Gallardón
  ?tenant dbo:residence dbr:Residence_of_Alberto_Ruiz-Gallardón .
  
  # Ensure the commander is related to the force
  ?commander dbo:participatedIn ?force .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?alterEgo
WHERE {
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:pseudonym ?alias .
  FILTER(CONTAINS(LCASE(?alias), ""the shadow""))
  BIND(?alias AS ?alterEgo)
}
```

### Explanation

- **PREFIX**: Define necessary prefixes for ontology and RDF properties.
- **SELECT**: Choose the variable `?alterEgo` to capture the alter ego name.
- **WHERE**:
  - Find a person with the label ""Lamont Cranston.""
  - Check if this person has a pseudonym (`dbo:pseudonym`) that contains ""the shadow"" (case-insensitive).
  - Bind the alias to `?alterEgo`.

This query should return ""The Shadow"" as the alter ego of Lamont Cranston.",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace
WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Sal_Mineo 
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantSpain ?officeLeaderGalicia ?tenantPSOE
WHERE {
  # Tenant of Spain is Spain itself
  dbr:Spain a dbo:Country ;
            rdfs:label ""Spain""@en .

  # Office of the leader of the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER(YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  ?election dbo:winner ?leaderGalicia .
  ?leaderGalicia dbo:office ?officeLeaderGalicia .

  # Tenant of the administration of Spanish Socialist Workers' Party
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
                                      dbo:country dbr:Spain ;
                                      rdfs:label ""Spanish Socialist Workers' Party""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorName WHERE {
  # Find the book ""El Deafo""
  dbr:El_Deafo dbo:author ?author .

  # Get the author's name
  ?author rdfs:label ?authorName .
  
  # Ensure the label is in English
  FILTER (lang(?authorName) = 'en')

  # Check if the author is American
  OPTIONAL { ?author dbp:nationality dbr:United_States . }
  
  # Filter to ensure nationality is set and is American
  FILTER EXISTS { ?author dbp:nationality dbr:United_States }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Maria_Anna_of_Bavary (dbo:child|dbo:spouse) ?person .
  
  ?person dbo:royalTitle ?title .
  
  ?person dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Actor ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:New_York_City , dbr:New_York_(state) .
  
  ?parent dbp:children ?child .
  FILTER (?person = ?parent)
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?show dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  ?work rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""nashi parni""))

  ?work dbo:starring ?player .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en ;
       dbo:occupation ?profession .

  # Find other professionals in the same occupation
  ?otherProfessional a dbo:Person ;
                     dbo:occupation ?profession .
  
  FILTER(?professional != ?sam) # Exclude Sam Concepcion from results
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Ferdinand II and his child who was a commander in war
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  
  # The child must be a commander in war
  ?child dbo:occupation dbr:Military_commander .

  # Societal event, event, and television show related to the 2nd Dragoon Regiment (France)
  ?event dbo:subject ?child ;
         a dbo:SocietalEvent , dbo:Event , dbo:TelevisionShow .
  
  ?event dbo:relatedWork dbr:2nd_Dragoon_Regiment_(France) .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: GS9 members who are artists and musical artists
  ?gs9Member a dbo:MusicalArtist ;
             dbo:memberOfBand dbr:GS9 ;
             dbo:artist dbr:.* .

  # Step 2: Associated musical artists of the GS9 member
  ?associatedArtist dbo:associatedBandOrMusicalArtist ?gs9Member .

  # Step 3: Band members of the associated musical artist
  ?bandMember a dbo:MusicalArtist ;
              dbo:memberOfBand ?associatedArtist .

  # Step 4: Awards related to New York (state)
  ?award a dbo:Award ;
         dbo:region dbr:New_York_(state) ;
         dbo:country dbr:United_States_of_America ;
         dbo:stateOrProvince dbr:New_York_(state) ;
         dbo:settlement dbr:.* .

  # Step 5: Awardees of the award that are bands
  ?awardee a dbo:Band ;
           dbo:award ?award .

  # Find native region of the awardee band
  ?nativeRegion dbo:nativePlace ?awardee .
}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  
  ?actor rdf:type dbo:Actor .

  ?work dbo:starring ?actor .

  ?work dbo:producer ?producer .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?person rdfs:label ""Ian Gregson""@en .
  
  ?award dbo:recipient ?person .

  ?award dbo:awardedTo ?movie .
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en ;
          dbo:managerOf dbr:Hartlepool_United_F.C. ;
          dbo:residence ?residence .
  
  ?residence dbp:nativeName ?native .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book dbo:title ""Promise Me, Dad""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?davydovWar ?baggovutWar WHERE {
  # Find wars involving Alexander Lvovich Davydov
  OPTIONAL { 
    dbr:Aleksandr_Lvovich_Davydov dbo:militaryConflict ?davydovWar .
    ?davydovWar dbo:country dbr:Russian_Empire .
  }
  
  # Find wars involving Karl Gustav von Baggovut
  OPTIONAL {
    dbr:Karl_Gustav_von_Baggovut dbo:militaryConflict ?baggovutWar .
    ?baggovutWar dbo:country dbr:Russian_Empire .
  }

  # Combine results to find common wars or list them separately
  VALUES ?war { ?davydovWar ?baggovutWar }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?filimonov { dbr:Aleksandr_Filimonov }
  ?filimonov dbo:work ?work .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force WHERE {
  # Find individuals who have received the Gillmore Medal
  ?awardee dbo:award dbr:Gillmore_Medal .
  
  # Find military units associated with these awardees
  ?awardee dbo:militaryUnit ?force .

  # Find entities in Charleston, South Carolina
  OPTIONAL {
    ?entity dbp:location dbr:Charleston,_South_Carolina ;
            dbo:associatedWith ?awardee .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeLanguage WHERE {
  ?city a dbo:Settlement ;
        dbo:country dbr:Pakistan ;
        rdfs:label ?label .
  
  FILTER (
    CONTAINS(LCASE(?label), ""heart of pakistan"") &&
    CONTAINS(LCASE(?label), ""paris of the east"") &&
    CONTAINS(LCASE(?label), ""city of gardens"") &&
    CONTAINS(LCASE(?label), ""city of literature"")
  )
  
  ?city dbo:officialLanguage ?nativeLanguage .
}
```",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?minye_kyawswa a dbo:Person ;
                 foaf:name ""Minye Kyawswa""@en .
  ?minye_kyawswa dbo:child ?child .
}
```

This query assumes that Minye Kyawswa is represented as an instance of `dbo:Person` and uses the property `dbo:child` to find his children. Adjustments might be necessary if DBpedia's schema changes or if different properties are used.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?parentOfAwardee WHERE {
  dbr:Arthur_Stanley_(politician) dbo:father ?father .

  ?child dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  
  ?child dbo:parent dbr:Arthur_Stanley_(politician) .

  ?child dbo:parent ?parentOfAwardee .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Find the owner of USS Arcadia (ID-1605)
  ?ussArcadia a dbo:Ship ;
              dbo:owner ?owner .

  FILTER(STR(?ussArcadia) = ""USS_Arcadia_(ID-1605)"")

  # Step 2: Find the author of Back to Work
  ?book a dbo:Book ;
        dbo:author ?author .
  
  FILTER(STR(?book) = ""Back_to_Work"")

  # Step 3: Ensure the owner and author are the same person
  ?owner foaf:name ?name .
  ?author foaf:name ?name .

  # Step 4: Find a commander who is linked to both entities
  ?commander dbo:commanded ?ussArcadia ;
            dbo:commanded ?event .

  # Step 5: Ensure the event is both a disease and a societal event
  ?event rdf:type dbo:Disease, dbo:SocietalEvent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?war WHERE {
  dbr:Toyotomi_Hideyoshi dbo:spouse ?spouse .
  
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Toyotomi_Hideyoshi .

  ?war dbo:participant ?child .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee WHERE {
  # Identify Quincy Adams Gillmore and his awards
  VALUES (?gillmore) { dbr:Quincy_A._Gillmore }
  
  ?gillmore dbo:award ?award .
  
  # Find other awardees of the same award
  ?otherAwardee dbo:award ?award .
  
  FILTER(?gillmore != ?otherAwardee)
  
  BIND(STRAFTER(STR(?otherAwardee), ""http://dbpedia.org/resource/"") AS ?awardeeLabel)
}
ORDER BY ?award ?awardee
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?work dbo:composer dbr:Steven_Kapur .
  ?work a dbo:MusicalWork .

  OPTIONAL { 
    ?kapur dbo:nationality dbr:Birmingham .
    FILTER (strstarts(str(?kapur), str(dbr:Steven_Kapur)))
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Find Jamie T's profession
  ?jamieT dbo:occupation ?profession .
  
  FILTER (str(?jamieT) = ""Jamie_T_(musician)"")

  # Find other professionals with the same occupation
  ?otherProfessional dbo:occupation ?sameProfession .

  FILTER (?professional != ?jamieT)
  FILTER (str(?sameProfession) = str(?profession))
}
```",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  # Step 1: Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Identify band members of this person
  ?bandMember dbo:memberOfBand ?band ;
              dbo:associatedBandMember ?person .

  # Step 3: Ensure the band has a reference to The Fabulous Thunderbirds
  ?band dbo:reference dbr:The_Fabulous_Thunderbirds .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?dorothea a dbo:Person ;
            rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  
  OPTIONAL { ?dorothea dbo:parent ?parent . }
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?officeHolder dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .
  
  ?officeHolder dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""leader"") || CONTAINS(LCASE(?title), ""mayor""))

  ?officeHolder dbo:residence ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent
WHERE {
  # Roger II of Sicily
  ?roger2 dbo:child ?child1 .
  FILTER (dbo:isRoyalty(?child1)) .

  # Parent of the child of Roger II
  ?parent dbo:child ?child1 .

  # Child of the parent of the child of Roger II
  ?parent dbo:child ?childOfParent .
  FILTER (dbo:isRoyalty(?childOfParent)) .

  # Reference person related to William I
  ?reference dbo:officeHolder ?office .
  ?reference dbo:child ?child2 .
  FILTER (dbo:isRoyalty(?reference) && dbo:isRoyalty(?child2)) .

  # The child of the parent must be the father of the child of the reference person
  ?childOfParent dbo:father ?child2 .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberArtist WHERE {
  # Step 1: Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:musicalArtistGroup dbr:GS9 ;

  # Step 2: Identify band members who are also musical artists
  ?member dbo:memberOf dbr:GS9 ;
          a dbo:MusicalArtist .

  # Step 3: Find awards related to New York (state)
  ?award dbo:location dbr:New_York_(state) ;
         dbo:recipient ?awardeeBand .

  # Step 4: Ensure the awardee is a band
  ?awardeeBand a dbo:MusicalGroup .

  # Bind the member who is also an artist to the result
  BIND(?member AS ?bandMemberArtist)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the war that is both a television show and a societal event
  ?war dbo:wikiPageRedirects dbr:The_Last_Kingdom_(TV_series) .
  ?war dbo:wikiPageRedirects dbr:Viking_invasions_of_England .

  # Find the commander in this war
  ?commander dbo:commanded ?war .

  # Ensure the commander is Jean Baptist, Comte d'Arco
  ?commander rdfs:label ""Jean Baptist, Comte d'Arco""@en .

  # Ensure the successor of Yurii Khmelnytsky is involved
  ?successor dbo:succeededBy ?yurii .
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  ?commander dbo:succeededBy ?successor .

  # Reference to George Ducas
  ?george rdfs:label ""George Ducas""@en .
  ?commander dbo:relatedTo ?george .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writerName WHERE {
  ?album dbo:title ""No Alternative""@en .
  ?album dbo:writer ?writer .
  ?writer foaf:name ?writerName .
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?institution a dbo:Institution .
  OPTIONAL { ?institution dbo:location dbr:Georgia_(U.S._state) . }
  ?institution dbo:country dbr:United_States .
}
```

This query selects institutions that are located in Georgia and are within the United States. It uses optional filtering for location to ensure it captures institutions specifically in Georgia, while ensuring they are part of the U.S.",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Movie Title""@en .
}
```",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bookTitle ?authorName WHERE {
  # Find ""Promises to Keep"" and its author
  VALUES (?bookTitle) { dbr:Promises_to_Keep_(Joe_Biden_book) }
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .

  FILTER (lang(?authorName) = 'en')

  # Find other written works by Joe Biden
  OPTIONAL {
    ?otherWork dbo:author ?author .
    ?otherWork rdfs:label ?otherWorkTitle .
    FILTER (?book != ?otherWork)
    FILTER (lang(?otherWorkTitle) = 'en')
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbp:combatant ?force .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors of ATL (film)
  ?atlFilm dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?atlFilm), LCASE(""ATL_(film)"")))

  # Ensure the actor is also in another movie
  ?otherMovie dbo:starring ?actor .
  FILTER(?atlFilm != ?otherMovie)
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medalOfHonorAward a dbo:Award .
  ?medalOfHonorAward dbo:name ""Medal of Honor""@en .
  ?medalOfHonorAward dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Saw Shwe Khet's child who is a royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child dbo:royalty true .

  # Step 2: Find Minye Kyawswa's grandchild
  ?grandchild dbo:parent ?parentOfChild .
  ?parentOfChild dbo:parent dbr:Minye_Kyawswa .

  # Match the child from step 1 with the grandchild from step 2
  FILTER (?child = ?grandchild)

  # Step 3: Identify the father of this matched child
  ?father dbo:parent ?child .
  
  # Step 4: Check if the father is royalty and find his spouse
  ?father dbo:royalty true .
  ?father dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?person dbo:birthPlace dbp:London .
  ?person dbo:artist true .
  ?person dbo:musicalArtist true .
  ?person dbo:parent ?parent .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria_queen_of_Poland dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person ?personLabel
WHERE {
  ?person dbo:country dbr:Russian_Empire .
  ?person dbo:country dbr:Grand_Duchy_of_Finland .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creator WHERE {
  dbr:The_Shadow dbo:creator ?creator .
}
```

This query looks for the creator of ""The Shadow"" by using the `dbo:creator` property.",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Find political parties in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .

  # Ensure the party is also an organization
  ?party a dbo:Organization .

  # Find wars involving George Pickett
  ?war dbo:participant dbr:George_Pickett .

  # Identify commanders in those wars
  ?commander dbo:role ""Commander"" ;
             dbo:event ?war .

  # Link the party member to both the political party and the war commander role
  ?partyMember dbo:memberOf ?party ;
               dbo:role ?commander .
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?rodProfession .

  # Get Darryl Paa Kwesi Bannerman-Martin's birth name
  dbr:Daryl_Perry dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # Find other professionals with the same profession and birth name
  ?person a dbo:Person ;
          dbo:profession ?rodProfession ;
          dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  FILTER(?person != dbr:Daryl_Perry) # Exclude Daryl Perry himself
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  # Find the Anita Borg Institute Women of Vision Awards
  ?award a dbo:Award ;
         rdfs:label ""Anita Borg Institute Women of Vision Award""@en .
  
  # Identify awardees of this award
  ?award dbo:recipient ?person .
  
  # Filter for Japanese nationality or significant connection to Japan
  ?person dbo:nationality dbr:Japan .

  # Ensure there is a reference to a television show related to the person
  OPTIONAL { 
    ?reference dbo:subject ?person ;
               dbo:isReferencedIn dbr:Category:Television_shows .
  }
  
  # Get the birthplace of the awardee
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"SELECT ?commander WHERE {
  # Find the commander of the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:commander ?battleCommander .
  
  # Ensure the commander is associated with a military force
  ?battleCommander dbo:militaryForce ?militaryForce .

  # Find the association of the 30th (Cambridgeshire) Regiment of Foot with the battle
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedInBattle dbr:Battle_of_Cape_Finisterre_(1805) .
  
  # Ensure the military force is associated with the regiment
  ?militaryForce dbo:member ?regimentMember .
  ?regimentMember rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .

  # Bind the commander to a variable
  BIND(?battleCommander AS ?commander)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?parent
WHERE {
  # Part 1: Find the actor of the movie
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Part 2: Identify Allan Arbus's child
  ?allan dbp:name ""Allan Arbus""@en ;
         dbo:child ?child .

  # Part 3: Find the parent of that child
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,1,3,0,0.25,1.0,0.4
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfMargareteSophie ?grandChildOfPhilipp WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:spouse ?partner .
  ?margareteSophie dbp:children ?childOfMargareteSophie .

  # Find Duke Philipp of Württemberg and his grandchildren
  ?philipp dbp:children ?childOfPhilipp .
  ?childOfPhilipp dbp:children ?grandChildOfPhilipp .

  # Ensure the child of Margarete Sophie is also a grandchild of Duke Philipp
  FILTER(?childOfMargareteSophie = ?grandChildOfPhilipp)
}
```",3,3,4,2,2,3,3,71,0,212,2,0.0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the Battle of Cape Finisterre (1805)
  ?battle1 dbr:Battle_of_Cape_Finisterre_(1805) .
  ?battle1 dbo:commander ?commander .

  # Find the commander of the Battle of Fort Royal
  ?battle2 dbr:Battle_of_Fort_Royal .
  ?battle2 dbo:commander ?commander .

  # Ensure the entity is a military conflict and an event
  OPTIONAL { ?conflict dbo:type dbr:Military_conflict . }
  OPTIONAL { ?conflict dbo:type dbr:Event . }

  # Find ""The Triple X's"" as a military conflict and event
  ?tripleXs dbr:The_Triple_X_s .
  ?tripleXs dbo:commander ?commander .

  FILTER EXISTS {
    ?tripleXs dbo:type dbr:Military_conflict .
    ?tripleXs dbo:type dbr:Event .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find the manager of VfL Bochum in 2007–08
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam dbr:VfL_Bochum ;
           dbo:managementPeriod ?period .
  
  FILTER (?period >= ""2007-07-01""^^xsd:date && ?period <= ""2008-06-30""^^xsd:date)

  # Find the Chancellor of West Germany
  ?chancellor a dbo:Chancellor ;
              dbo:country dbr:West_Germany ;
              dbp:nativePlace ?nativePlace .

  # Assume the manager is also the leader (Chancellor) for this query context
  ?manager foaf:name ?name .
  ?chancellor foaf:name ?name .

  # Get the native country of the Chancellor
  ?nativePlace dbo:countryName ?nativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?politicianRole
WHERE {
  # Find actors in ""Ab Kya Hoga""
  ?abKyaHogaActor dbo:starring dbr:Ab_Kya_Hoga .
  
  # Find actors in ""Dispatches from Elsewhere""
  ?dispatchesActor dbo:starring dbr:Dispatches_from_Elsewhere .

  # Ensure the actor is common to both shows
  FILTER (?abKyaHogaActor = ?dispatchesActor)
  BIND(?abKyaHogaActor AS ?actor)

  # Check if this actor has a politician role
  OPTIONAL {
    ?actor dbo:occupation dbr:Politician .
    ?actor dbo:role ?politicianRole .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity rdfs:label ?name . FILTER (lang(?name) = 'en') }
  ?entity dbp:state ""Andhra Pradesh""@en .
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,0,6,166,0.0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?nationality
WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (str(?deathPlace) = ""Switzerland"" || str(?deathPlace) = ""dbpedia:Switzerland"") .
  
  OPTIONAL { ?person dbo:nationality ?nationality . }
  OPTIONAL { ?person dbp:countryOfCitizenship ?citizenship . }
  
  FILTER (
    (str(?nationality) = ""Russian Empire"" || str(?nationality) = ""dbpedia:Russian_Empire"") ||
    (str(?citizenship) = ""Russian Empire"" || str(?citizenship) = ""dbpedia:Russian_Empire"")
  )
}
```",2,2,3,1,2,2,3,28,0,0,36,0,0.0,0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?koichiroWar ?childWar WHERE {
  # Find Koichirō and associated wars
  ?koichiro a dbo:Person ;
            foaf:name ""Koichirō""@en .
  
  OPTIONAL {
    ?koichiro dbo:participatedIn ?koichiroWar .
  }

  # Find Toyotomi Hideyoshi's children and associated wars
  dbr:Toyotomi_Hideyoshi dbo:child ?child .

  OPTIONAL {
    ?child dbo:participatedIn ?childWar .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeRegion
WHERE {
  # Ackquille Jean Pollard is a member of GS9
  ?ackquille dbo:memberOf dbr:GS9 ;
             a dbo:Artist, dbo:MusicalArtist ;
             foaf:name ""Ackquille Jean Pollard"" .

  # Find associated musical artist for GS9 members
  ?gs9Member dbo:associatedWith ?associatedArtist .
  
  # Band member of the associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist ;
              a dbo:BandMember .

  # Coro de la Pontificia Universidad Católica de Puerto Rico is related to an award
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  
  # Award's native region is a state and settlement in America
  ?award dbo:nativeRegion ?nativeRegion ;
         a dbo:Award .

  ?nativeRegion dbo:country dbr:United_States_of_America ;
                a dbo:State, dbo:Settlement .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childName WHERE {
  # Ferdinand II's children
  ?parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?parent dbo:child ?child .

  # Child is a commander in the Algerian War
  ?child dbo:militaryCommanderOf dbr:Algerian_War .

  # Check if associated with societal events, general events, and television shows
  OPTIONAL { ?child dbo:associatedWith dbr:Societal_Event . }
  OPTIONAL { ?child dbo:associatedWith dbr:Event . }
  OPTIONAL { ?child dbo:associatedWith dbr:Television_Show . }

  # Ensure the child is associated with all three categories
  FILTER EXISTS { ?child dbo:associatedWith dbr:Societal_Event . }
  FILTER EXISTS { ?child dbo:associatedWith dbr:Event . }
  FILTER EXISTS { ?child dbo:associatedWith dbr:Television_Show . }

  # Get the name of the child
  ?child rdfs:label ?childName .
}
ORDER BY ?childName",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  ?gs9Member a dbo:Band ;
             dbo:member ?person .
  
  FILTER EXISTS { ?person dbo:musicalArtist ?artist }
  FILTER EXISTS { ?person a dbo:Artist }

  OPTIONAL { ?person dbp:associatedActs ?associatedMusicalArtist . }
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession ?politician
WHERE {
  # Find the actor from ""Ab Kya Hoga""
  ?show dcterms:title ""Ab Kya Hoga""@en .
  ?show dbo:starring ?actor .

  # Get the profession of this actor
  ?actor dbo:occupation ?profession .

  # Ensure the actor is also a politician
  ?actor dbo:occupation dbr:Politician .

  # Find another politician with the same profession
  ?politician dbo:occupation ?profession .
  ?politician dbo:occupation dbr:Politician .
  
  FILTER(?actor != ?politician)
}
```",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I
  dbr:Baeda_Maryam_I a dbo:Person .

  # Step 2: Find his child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Step 3: Determine the father of that child (Baeda Maryam I's son)
  ?father dbo:parent ?child .
  
  # Step 4: Identify the father of this person (the grandfather)
  ?grandfather dbo:parent ?father .

  # Step 5: Ensure this grandfather is both royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolder dbr:Office_Holder .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:birthPlace dbr:Colombia .
  ?person rdfs:label ""Gustavo Petro""@en .
  ?person dbo:politicalParty ?party .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Roger II of Sicily's child who is also William II's father
  ?child1 dbo:father dbr:William_II_of_Sicily .
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .

  # Constance of Burgundy's spouse and their child
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  ?child2 dbo:parent ?spouse .
  
  # Child of the child (grandchild) of Constance's spouse
  ?grandchild dbo:parent ?child2 .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Find the intersection of these two paths
  FILTER (?person = ?child1 && ?person = ?grandchild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?show WHERE {
  ?show a dbo:Award .
  ?show dbo:country dbr:United_States .
  ?show dbo:relatedWork ?work .
  ?work dbo:genre dbr:Television_series .
  ?work dbo:location dbr:United_States_Congress
}",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find the producer of ""Nothing to Gein""
  dbr:Nothing_to_Gein dbo:producer ?producer .

  # Ensure the producer is an organization and a group
  ?producer rdf:type dbo:Organization .
  ?producer rdf:type dbo:MusicalGroup .

  # Find band members of this producer who are also in Stone Sour
  ?bandMember dbo:memberOf ?producer ;
              dbo:memberOf dbr:Stone_Sour .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant
WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?leader dbo:officeHolderOf dbr:Madrid_City_Council_Election_2003 .
  
  # Find Miguel Maura's office and Mariano Rajoy's office
  OPTIONAL { ?miguelOffice dbo:officeHolder dbr:Miguel_Maura . }
  OPTIONAL { ?marianoOffice dbo:officeHolder dbr:Mariano_Rajoy . }

  # Find the residences of these leaders/offices
  ?leader dbo:residence ?residence .
  ?miguelOffice dbo:residence ?residenceMiguel .
  ?marianoOffice dbo:residence ?residenceMariano .

  # Find tenants of these residences
  ?residence dbo:tenant ?tenant .
  ?residenceMiguel dbo:tenant ?tenantMiguel .
  ?residenceMariano dbo:tenant ?tenantMariano .

  # Combine results to get distinct tenants
  VALUES (?tenant) { ?tenant ?tenantMiguel ?tenantMariano }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residenceCountry ?partyAdministration
WHERE {
  # Álvaro Quirós and his office during the 2009 Galician regional election
  dbr:Álvaro_Quirós dbo:positionHeld ?office .
  
  # The residence associated with him that is located in a country
  ?office dbo:location ?residence .
  ?residence dbp:country ?residenceCountry .

  # His association with the Spanish Socialist Workers' Party (PSOE)
  dbr:Álvaro_Quirós dbo:memberOfParty ?party .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  # The administration he was part of, which is Spanish
  ?office dbo:partOfAdministrativeBody ?administration .
  ?administration dbp:country dbr:Spain .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?birthPlaceEntity
WHERE {
  # Wars involving Karl Gustav von Baggovut
  ?baggovut dbo:participatedIn ?war .
  FILTER (str(?baggovut) = ""Karl_Gustav_von_Baggovut"") .

  # Wars involving Alexander Lvovich Davydov
  ?davydov dbo:participatedIn ?war .
  FILTER (str(?davydov) = ""Alexander_Lvovich_Davydov"") .

  # Birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Place ;
             rdfs:label ?birthPlaceEntity .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?catCountryCountry ?winstonChangBirthPlace
WHERE {
  OPTIONAL {
    dbr:Cat_Country dbo:country ?catCountryCountry .
  }
  OPTIONAL {
    dbr:Winston_Chang dbo:birthPlace ?winstonChangBirthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Maximilian I, Holy Roman Emperor
  ?maximilian a dbo:Person ;
              rdfs:label ""Maximilian I, Holy Roman Emperor""@en .

  # Children of Maximilian I
  ?maximilian dbo:child ?child .

  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
            rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  
  # Parent of Dorothea
  ?dorothea dbo:parent ?parent .

  # Catherine of Austria, Queen of Portugal
  ?catherine a dbo:Person ;
             rdfs:label ""Catherine of Austria, Queen of Portugal""@en .

  # Father of Catherine
  ?catherine dbo:father ?child .

  # The child should be the parent of Dorothea's parent
  ?parent dbo:parent ?child .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthplace WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:dateOfDeath ?deathDate ;
            dbo:birthPlace ?birthPlace .

  # Ensure the death date is correct
  FILTER (STR(?deathDate) = ""1850-08-05"")

  # Retrieve the military force associated with him
  ?gillmore dbo:militaryForce ?force .

  # Ensure birthplace is a settlement in America
  ?birthPlace a dbo:PopulatedPlace ;
              dbp:country ""United States"" .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent rdf:type dbo:Monarch .
  ?parent foaf:name ""Alfonso IV of Aragon""@en .
  ?parent dbo:spouse ?spouse .
  ?parent dbo:child ?child .
  ?child foaf:name ""Peter IV of Aragon""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Find the resource for Bob Thompson (musician)
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" .

  # Get his birth name
  OPTIONAL { ?person dbo:birthName ?birthName . }

  # Find bands associated with him
  ?band dbo:member ?person .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?realName WHERE {
  # Find bands Eric Clapton has been a member of
  ?member dbo:bandMemberOf dbr:Eric_Clapton .
  
  # For each band member, find the bands they are part of
  ?member dbo:bandMemberOf ?band .

  # Get real name of The Fabulous Thunderbirds
  OPTIONAL {
    dbr:The_Fabulous_Thunderbirds dbo:realName ?realName .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Find Lamont Cranston's alter ego, The Shadow
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .

  # Assuming there is a property for parent (this might need adjustment based on actual DBpedia data)
  OPTIONAL { dbr:The_Shadow dbo:parent ?father . }
  
  OPTIONAL { ?father dbo:parent ?grandfather . }

  # Filter for the grandfather who is royalty and an office holder in Na'od
  ?grandfather dbo:nationality dbr:Na'od .
  ?grandfather dbo:occupation ?office .
  FILTER (CONTAINS(LCASE(?office), ""royalty"") || CONTAINS(LCASE(?office), ""office holder""))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent .
  
  ?parent dbp:nativePlace dbr:Middlesex .

  ?child dbo:parent ?parent .
  ?child dbo:parent dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?location
WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  FILTER (lang(?person) = 'en') .

  ?person dbo:office ?office .
  
  OPTIONAL { 
    ?person dbo:residence dbr:Santiago_de_Compostela .
  }

  OPTIONAL {
    ?office dbo:jurisdiction dbr:Santiago_de_Compostela .
  }
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Miguel Maura's affiliation with a political party
  dbr:Miguel_Maura dbo:memberOfParty ?party .
  
  # Ensure the entity is a political party
  ?party rdf:type dbo:PoliticalParty .

  # Find the leader of that political party
  ?party dbo:leader ?leader .

  # Ensure the leader is classified as a politician
  ?leader rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?partyMember WHERE {
  # Find the commander of Pickett's Charge
  ?charge dbo:commander ?commander .
  FILTER (str(?charge) = ""Pickett's_Charge"") .

  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .

  # Ensure the commander is a party member of a ruling political party and organization
  ?commander dbo:memberOf ?party .
  ?party rdf:type dbo:PoliticalParty ;
         dbo:isRulingParty true .

  ?commander dbo:memberOfOrganization ?organization .
  ?organization rdf:type dbo:Organisation .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # The commander must be associated with the death place of John McDermott
  ?commander dbo:birthPlace ?deathPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .
  dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?predecessor .
  ?parent dbo:child ?childOfParent .
  ?childOfParent dbo:predecessor ?predecessor .
  ?childOfParent a dbo:Monarch .
  ?childOfParent dbo:child ?childOfChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile
  ?elvira a dbo:Queen ;
          foaf:name ""Elvira of Castile"" .

  # William II of Sicily
  ?william2 a dbo:Monarch ;
            foaf:name ""William II of Sicily"" ;
            dbo:parent ?elvira .

  # Roger II of Sicily
  ?roger2 a dbo:King ;
          foaf:name ""Roger II of Sicily"" .

  # Elvira's child who is also William II's parent (i.e., the same person)
  ?child dbo:parent ?elvira ;
         dbo:parent ?roger2 ;
         a dbo:Monarch .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Father of William II of Sicily
  ?williamII dbo:father ?fatherOfWilliamII .
  dbr:William_II_of_Sicily ?williamII .

  # Parent (Father) of Roger III, Duke of Apulia
  ?rogerIII dbo:father ?parentOfRogerIII .
  dbr:Roger_III,_Duke_of_Apulia ?rogerIII .

  # Child of the parent of Roger III
  ?childOfParentOfRogerIII dbo:father ?parentOfRogerIII .

  # Child of Elvira of Castile, Queen of Sicily
  ?elviraChild dbo:mother dbr:Elvira_of_Castile .
  
  # Common entity that fits all criteria
  FILTER (?fatherOfWilliamII = ?childOfParentOfRogerIII && ?fatherOfWilliamII = ?elviraChild)
  BIND(?fatherOfWilliamII AS ?commonEntity)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the album ""Lasso the Moon""
  dbr:Lasso_the_Moon a dbo:Album ;
                     dbo:genre dbr:Film ;
                     dbo:workType dbr:Film .

  # Find the actor associated with this album
  dbr:Lasso_the_Moon dbo:actor ?actor .

  # Ensure the person is professional in acting
  ?actor a dbo:Actor .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Shwe Khet""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Stephen V of Hungary""@en .
  ?person dbo:child ?child .
}
```

This query does the following:
- Uses `dbo:Monarch` to identify Stephen V as a monarch.
- Searches for his name using `foaf:name`.
- Retrieves any entities linked by the `dbo:child` property.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci de Oliveira"" .
  OPTIONAL { ?person foaf:birthName ?birthName }
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Rod Argent's profession
  dbr:Rod_Argent dbo:profession dbr:Musician .

  # Step 2: Find artists from Central Region, Ghana
  ?artist a dbo:Artist ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          dbp:birthday ?birthday .

  # Step 3: Match birth name with Rod Argent's birth name
  ?person dbo:birthName ?birthName .
  FILTER (?birthName = (SELECT ?argentBirthName WHERE {
    dbr:Rod_Argent dbp:birthName ?argentBirthName
  }))

  # Ensure the person is an artist and has the same profession as Rod Argent
  ?person a dbo:Artist ;
          dbo:profession dbr:Musician .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  VALUES ?shadow { dbr:The_Shadow }
  ?shadow dbo:creator ?professional .
}
```

This query assumes that ""The Shadow"" has a creator property in DBpedia, which is common for fictional characters. If the alter ego directly links to a professional identity through another property, you might need to adjust the query accordingly.",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?page dbo:wikiPageWikiLink+ dbr:Kent_Allard .
  
  ?page rdf:type dbo:FictionalCharacter .
  
  ?page rdfs:label ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?producer ?roleCollins ?roleGaynor
WHERE {
  # Find movies associated with Cora Sue Collins
  ?collinsWork dbo:actor dbr:Cora_Sue_Collins .
  
  # Find movies associated with Janet Gaynor
  ?gaynorWork dbo:actor dbr:Janet_Gaynor .

  # Ensure the works are movies
  ?collinsWork rdf:type dbo:Film ;
               rdfs:label ?movieCollinsLabel .
  ?gaynorWork rdf:type dbo:Film ;
              rdfs:label ?movieGaynorLabel .

  # Find producers of these movies
  ?collinsWork dbo:producer ?producer .
  ?gaynorWork dbo:producer ?producer .

  # Get the professional roles
  dbr:Cora_Sue_Collins dbo:profession ?roleCollins .
  dbr:Janet_Gaynor dbo:profession ?roleGaynor .

  FILTER (lang(?movieCollinsLabel) = 'en' && lang(?movieGaynorLabel) = 'en')
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label ?redirect ?officialWebsite ?partyLeader WHERE {
  VALUES ?resource { dbr:Partido_Socialista_Obrero_Español }
  
  ?resource rdfs:label ?label .
  OPTIONAL { ?resource dbo:wikiPageRedirects ?redirect . }
  OPTIONAL { ?resource dbo:officialWebsite ?officialWebsite . }
  OPTIONAL { ?resource dbo:partyLeader ?leaderResource . 
             ?leaderResource rdfs:label ?partyLeader . FILTER (lang(?partyLeader) = ""en"") }
  
  FILTER (LANG(?label) = 'es') # Ensure the label is in Spanish
}
ORDER BY ?label",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Step 1: Identify Quincy Adams Gillmore and his awards
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore""@en ;
            dbo:award ?award .

  # Step 2: Find the awardee of one of these awards
  ?award dbo:recipient ?awardee .

  # Step 3: Determine the force associated with this awardee
  ?awardee dbo:militaryUnit ?force .

  # Step 4: Identify the birthplace details
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthplace .
  
  FILTER EXISTS { ?birthplace a dbo:Settlement . }
  FILTER EXISTS { ?birthplace dbo:country dbr:United_States_of_America . }

  # Ensure the person is related to the awardee
  ?awardee dbo:relatedPerson ?person .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Thomas Letsch as a manager of a soccer club
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # The team is part of a sports season
  ?season dbo:sportTeam ?team ;
          a dbo:SportsSeason .

  # Leader of West Germany was Konrad Adenauer
  ?leader foaf:name ""Konrad Adenauer""@en .
  ?leader dbo:country dbr:Germany .

  # The manager's team is associated with the country of the leader of West Germany
  ?team dbo:location dbr:Germany .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantRole ?officeEvent WHERE {
  # Anxo Quintana's resource
  VALUES ?anxoQuintana { dbr:Anxo_Quintana }

  # Find his role as a tenant of Spain
  ?anxoQuintana dbo:positionHeld ?tenantRole .
  ?tenantRole dbp:country dbr:Spain .

  # Find events related to the office of leader of administration
  ?officeEvent dbo:agent ?anxoQuintana .
  ?officeEvent a dbo:PoliticalElection .
  
  FILTER EXISTS {
    ?officeEvent dbo:positionHeld ?leaderOffice .
    ?leaderOffice rdfs:label ?officeLabel .
    FILTER(CONTAINS(LCASE(?officeLabel), ""leader"") || CONTAINS(LCASE(?officeLabel), ""administration""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?person dbo:positionHeld ?administration .
  ?administration dbo:event ?event .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse WHERE {
  # Stephen V of Hungary and his child
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?child dbo:parent ?stephenV ;
         a dbo:Person .

  # Spouse of Stephen V (who is also royalty)
  ?spouse dbo:spouse ?stephenV ;
          a dbo:RoyalFamilyMember .

  # Philip, Despot of Romania and his parent
  ?philip a dbo:Monarch ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?parent dbo:child ?philip .

  # Ensure the spouse is related to Philip's lineage
  FILTER(?spouse = ?parent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbpedia-ru:Plovdivsky_universitet_Paisiy_Hilendarski .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Caroline Louise Bevan Symonds""@en .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1 & 2: Saw Min Phyu's spouse and their child
  ?spouse dbo:spouse ?sawMinPhyu .
  FILTER(?sawMinPhyu = dbc:Saw_Min_Phyu) .
  
  ?child dbo:parent ?spouse .
  
  # Step 3: Predecessor of the child if royalty
  OPTIONAL { ?child dbo:royalty ""true""^^xsd:boolean . }
  OPTIONAL {
    ?predecessor dbo:succession ?child .
    FILTER(?predecessor != ?child)
  }

  # Step 4 & 5: Myat Hpone Pyo's father and his spouse (if royalty)
  ?father dbp:child dbc:Myat_Hpone_Pyo .
  
  OPTIONAL { ?fatherSpouse dbo:royalty ""true""^^xsd:boolean . }
  ?fatherSpouse dbo:spouse ?father .

  # Step 6: Child of Saw Min Hla
  ?sawMinHlaChild dbo:parent dbc:Saw_Min_Hla .

  # Intersection: Find common entity
  FILTER(?predecessor = ?sawMinHlaChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force
WHERE {
  # Find the award given by Edmund Hakewill-Smith
  ?award dbo:givenBy dbr:Edmund_Hakewill-Smith .
  
  # Find the awardees of that award
  ?award dbo:recipient ?awardee .

  # Retrieve the force related to those awardees
  ?awardee dbo:force ?force .
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person dbp:name ""Myat Hpone Pyo""@en .
  ?person dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow_(video_game) dbo:character dbr:The_Shadow .
  
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  ?alterEgo dbo:type dbr:Comics_character .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerCora ?producerJanet
WHERE {
  # Cora Sue Collins' claim to fame
  ?coraClaim a dbo:Work ;
             dbo:creator dbr:Cora_Sue_Collins .
  
  OPTIONAL { 
    ?coraClaim dbo:producer ?producerCora .
  }
  
  # Janet Gaynor's claim to fame (movie)
  ?janetMovie a dbo:Film ;
              dbo:starring dbr:Janet_Gaynor .
  
  OPTIONAL {
    ?janetMovie dbo:producer ?producerJanet .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Identify Mary Elphinstone, Lady Elphinstone
  dbr:Mary_Elphinstone,_Lady_Elphinstone dbo:parent ?parent .

  # Get the name of the parent
  ?parent rdfs:label ?parentName .
  
  FILTER (LANG(?parentName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Smartbomb dbo:author ?author .

  ?movie dbo:writer ?author .
  
  ?movie dbo:starring ?actor .
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Dean Anderson"" ;
          dbo:birthName ""Richard Grant Esterhuysen"" .

  ?work dbo:starring ?person ;
        a ?type .

  VALUES ?type { dbr:Film dbr:TelevisionShow }

  BIND(?work AS ?movie)
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?character ?profession 
WHERE {
  # Find Bob Thompson and his band
  dbr:Bob_Thompson_(musician) dbo:musicalBand ?band .

  # Find Walter B. Gibson's creation, The Shadow
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Identify the profession of The Shadow
  dbr:The_Shadow dbo:profession ?profession .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  ?person dbo:award ?award .
}
```

This query does the following:
- Selects entities (`?award`) that are awards associated with George H. Cameron.
- Uses `dbo:Person` to ensure we're dealing with a person entity.
- Utilizes `foaf:name` to match the name ""George H. Cameron"" (assuming DBpedia has this property available for him).
- Filters results where `dbo:award` links the person to an award.",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:title ""Always the Love Songs"" .
  ?song dbo:lyricist ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?deathPlace
WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Carolyn_Jones_(actress)
  }
  
  ?person dbo:name ?name .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }

  ?peterIV dbo:father ?father .

  ?father a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?stuartArtist ?writer ?writerArtist WHERE {
  # Find Stuart Tosh and his associated musical artist
  OPTIONAL {
    dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartArtist .
  }

  # Find the writer who is also a musical artist and an artist for Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    ?writer dbo:associatedWith dbr:Wizards_of_Waverly_Place_(soundtrack) ;
            rdf:type dbo:Writer ;
            rdf:type dbo:MusicalArtist ;
            rdf:type dbo:Artist .
  }

  # Find the associated musical artist of that writer
  OPTIONAL {
    ?writer dbo:associatedMusicalArtist ?writerArtist .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?roleInMadrid
WHERE {
  ?person dbo:office ?office .
  ?office dbo:location dbr:Central_African_Republic_Civil_War .
  
  ?person a dbo:Politician ;
          dbo:officeHolder ?true .

  OPTIONAL { 
    ?person dbo:residence dbr:Madrid .
    BIND(""Tenant of Madrid"" AS ?roleInMadrid)
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?writer .

  # Identify the commander in the Russo-Polish War (1654–1667)
  ?war dbo:name ""Russo-Polish War (1654–1667)""@en ;
       dbo:commander ?commander .

  # Find the successor who is a politician and office holder
  ?successor dbo:succeededBy ?commander .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 WHERE {
  # Mariano Rajoy's role in the Madrid City Council election of 2003
  dbr:Mariano_Rajoy dbo:positionHeld [
    a dbo:Election ;
    dbo:electedOffice ?office1 ;
    dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2003)
  ] .

  # Mariano Rajoy's role as leader of the Conservative Republican Party
  dbr:Mariano_Rajoy dbo:positionHeld [
    a dbo:PoliticalParty ;
    rdfs:label ""Conservative Republican Party (Spain)""@en ;
    dbo:electedOffice ?office2 .
  ] .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the writer of ""No Alternative""
  ?album dbo:writer ?writer .
  
  # Filter for the specific album ""No Alternative""
  VALUES ?album { dbr:No_Alternative }
  
  # Get bands associated with the writer
  ?band dbo:member ?writer .
  
  # Find other members of those bands
  ?band dbo:member ?bandMember .
  
  # Ensure we don't return the writer themselves as a band member
  FILTER (?writer != ?bandMember)
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse
WHERE {
  # Step 1: Identify Princess Antoinette and her child who is royalty
  ?princess a dbo:Person ;
            foaf:name ""Antoinette of Brunswick-Wolfenbüttel"" ;
            dbo:child ?royalChild .

  ?royalChild a dbo:RoyalFamilyMember ;
              dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel ;
              dbo:spouse ?firstSpouse .

  # Step 2: Find the spouse of this royal child
  ?firstSpouse dbo:spouse ?secondSpouse .

  # Step 3: Find the spouse of that spouse
  ?secondSpouse dbo:spouse ?finalSpouse .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birthplace
  ?powell dbo:birthPlace ?region .
  FILTER (str(?powell) = ""Paulus_Powell"")

  # Step 2: Find the governor of that region
  ?governor dbo:office ?office .
  ?office dbo:administrativeRegion ?region .
  ?governor dbp:title ""Governor""@en .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Step 3: Identify Vince Gilligan's award
  ?award dbr:Vince_Gilligan dbo:recipient ?awardee .
  
  # Step 4: Determine the birthplace of the awardee
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?spouseName ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .

  OPTIONAL { 
    ?person dbo:memberOfParty dbr:Republican_Party_(United_States) .
  }

  ?spouse dbo:name ?spouseName .
}
```

This query does the following:
- Searches for a person with the name ""Harriette Arlene Lake"".
- Checks if this person is married to Roger Pryor (actor).
- Optionally checks if she is a member of the Republican Party.
- Retrieves her spouse's name.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?awardee dbo:nationality dbr:Australia ;
          dbo:occupation dbr:Scientist .
  ?award dbo:recipient ?awardee ;
         rdfs:label ""Australian Laureate Fellowship""@en .
  ?awardee dbp:almaMater ?almaMater .
}",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Konstantinos Ventiris and his involvement in wars
  ?ventiris dbo:occupation ?occupation .
  ?ventiris rdfs:label ""Konstantinos Ventiris""@en .

  OPTIONAL { 
    ?ventiris dbo:award ?award .
    ?award dbo:relatedEvent ?war .
  }

  # Find wars related to Athens
  ?athens dbo:location ?location .
  ?athens rdfs:label ""Athens""@en .
  
  FILTER EXISTS {
    ?war dbo:place ?location .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  # Find awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  # Filter for Japanese nationality
  ?awardee dbo:nationality dbr:Japan .

  # Ensure birthplace is in Japan Standard Time region (Japan)
  ?awardee dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Japan .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Crewe""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producerProfession ?alterEgoProfession WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio a dbo:TelevisionShow ;
              dbp:name ""Coke Studio Philippines""@en .
  
  ?cokeStudio dbo:producer ?producer .

  ?producer dbo:profession ?producerProfession .

  # Find the alter ego of The Shadow
  ?shadow a dbo:FictionalCharacter ;
          dbp:name ""The Shadow""@en .

  ?shadow dbo:alterEgo ?alterEgo .

  ?alterEgo dbo:profession ?alterEgoProfession .
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the album ""Nothing to Gein""
  dbr:Nothing_to_Gein a dbo:Album .

  # Find its producer(s)
  dbr:Nothing_to_Gein dbo:producer ?producer .

  # Ensure the producer is both an organization and a group
  ?producer a dbo:Organization .
  ?producer a dbo:Band .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006-07 dbo:succeeds ?successorSeason .
  
  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason rdf:type dbo:SoccerClub ;
                   rdf:type dbo:Organization ;
                   rdf:type dbo:SportsTeam .

  # Find the manager of the team in the successor season
  ?successorSeason dbp:manager ?teamManager .
  
  # Ensure the manager is also a sports club and an organization
  ?teamManager rdf:type dbo:SoccerClub ;
               rdf:type dbo:Organization .

  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbp:birthday ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .
  
  # Ensure this person is the manager of the team in the successor season
  ?teamManager dbr:Person = ?person .

  # Return the manager
  BIND(?person AS ?manager)
}
```",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administrationOlaf ?territoryCopenhagen ?birthPlacePrinceChristian ?adminRolePrinceChristian
WHERE {
  # Olaf I of Denmark's administration and territories from Copenhagen
  OPTIONAL {
    dbr:Olaf_I_of_Denmark dbo:positionHeld ?administrationOlaf .
    ?administrationOlaf dbp:administrativeArea dbr:Copenhagen .
    BIND(""Copenhagen"" AS ?territoryCopenhagen)
  }

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birthplace and administration
  OPTIONAL {
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:birthPlace ?birthPlace .
    FILTER EXISTS { ?birthPlace rdf:type dbo:Place }
    BIND(STR(?birthPlace) AS ?birthPlacePrinceChristian)
    
    OPTIONAL {
      dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?adminRolePrinceChristian .
    }
  }

  # Ensure Prince Christian is royalty
  FILTER EXISTS { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck rdf:type dbo:RoyalFamilyMember .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Janet Gaynor's movies
  ?movieJanet dbo:starring dbp:Janet_Gaynor .
  
  # The Shadow's real name and works
  ?actorShadow foaf:name ""The Shadow""@en .
  ?movieShadow dbo:starring ?actorShadow .

  # Producer of The Adventures of Tom Sawyer (1938 film)
  dbp:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Common producer
  OPTIONAL { ?movieJanet dbo:producer ?producer . }
  OPTIONAL { ?movieShadow dbo:producer ?producer . }

  FILTER (?producer = ?producerTomSawyer)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?administration dbo:country dbr:Spain .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  OPTIONAL { 
    ?feijoo dbo:office ""President of the Xunta"" ;
            dbo:country dbr:Spain .
    ?administration dbo:member ?feijoo .
  }
  
  ?administration dbo:head ?tenant .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum as a sports club, organization, and soccer club
  dbr:VfL_Bochum dbo:type ?type1 .
  FILTER (CONTAINS(LCASE(STR(?type1)), ""sports club"") || CONTAINS(LCASE(STR(?type1)), ""organization"") || CONTAINS(LCASE(STR(?type1)), ""soccer club""))

  # Manager of VfL Bochum in the 2007–08 season
  ?manager dbo:managedTeam dbr:VfL_Bochum .
  ?season dbo:team dbr:VfL_Bochum ;
          dbo:seasonStartYear ""2007""^^xsd:gYear ;
          dbo:seasonEndYear ""2008""^^xsd:gYear .

  # Manager's birthdate and nationality
  ?manager dbo:birthday ""1968-08-26""^^xsd:date .
  ?manager dbo:nationality dbr:West_Germany .

  # Ensure the manager is a sports manager
  ?manager dbo:type ?type2 .
  FILTER (CONTAINS(LCASE(STR(?type2)), ""sports manager""))
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kiyosu ?timeZone ?region
WHERE {
  VALUES ?kiyosu { dbr:Kiyosu }
  
  ?kiyosu dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:nationality dbr:Poland ;
             dbo:commanderOf ?war .
  
  ?war rdfs:label ""French Revolutionary Wars""@en .

  OPTIONAL { ?commander foaf:name ?name . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
  # Find wars involving Tom Phillips
  ?tomPhillips a dbo:NavyOfficer ;
               foaf:name ""Tom Phillips""@en .
  
  ?war dbo:commander ?tomPhillips .

  # Find forces commanded by William Tennant
  ?williamTennant a dbo:NavyOfficer ;
                  foaf:name ""William Tennant""@en .
  
  ?force dbo:commander ?williamTennant .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author WHERE {
  # Identify Hillary Clinton as a politician and office holder
  dbr:Hillary_Clinton a dbo:Politician ;
                     a dbo:OfficeHolder .

  # Find books authored by her
  ?book dbo:author dbr:Hillary_Clinton .
  
  # Ensure the book is classified as a written work
  ?book a dbo:Book ;
        a dbo:WrittenWork .

  # Bind the author to the variable
  OPTIONAL { ?book foaf:primaryTopic ?author . }
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native
WHERE {
  # Identify David Puttnam as the producer of ""Storm in a Teacup"" and writer of ""Boom Shack-A-Lak""
  dbr:David_Putnam dbo:filmProduction dbr:Storm_in_a_Tea_Cup .
  dbr:David_Putnam dbo:writer dbr:Boom_Shack_A_Lak .

  # Find David Putnam's birthplace
  dbr:David_Putnam dbo:birthPlace ?birthPlace .

  # Get the native language or ethnicity of the birthplace
  ?birthPlace dbp:nativeLanguage ?native .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the Hong Kong C Team and its manager
  dbr:Hong_Kong_C_Team dbo:manager ?manager .

  # Ensure the manager is a sports manager, specifically a soccer manager
  ?manager rdf:type dbo:SoccerManager .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbpedia:King_Edward_VI_School .
}
```",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# Example placeholder, please specify details:
SELECT ?movie WHERE {
  # Add specific conditions here based on provided details.
}
```",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Find another person with the same birth name who is native to Florida
  ?person dbo:birthName ?birthName .
  ?person dbo:birthPlace dbr:Florida .
  
  FILTER(?person != dbr:Bobby_Shmurda) # Ensure it's not Bobby Shmurda himself
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalty WHERE {
  # Charles II of Naples' spouse
  ?charles2 dbo:spouse ?spouse .
  FILTER(STRSTARTS(LCASE(?charles2), ""charles ii of naples""))

  # Father of the spouse who is royalty
  ?spouse dbo:father ?father .
  ?father rdf:type dbo:Monarch .

  # Maria of Bytom's spouse
  ?maria dbp:spouse ?mariaSpouse .
  FILTER(STRSTARTS(LCASE(?maria), ""maria of bytom""))

  # Child of Maria's spouse who is also Stephen V's child
  ?mariaSpouse dbo:child ?commonChild .
  ?stephen5 dbo:child ?commonChild .
  FILTER(STRSTARTS(LCASE(?stephen5), ""stephen v of hungary""))

  # Ensure the father is royalty
  ?father rdf:type dbo:Monarch .

  # Bind the result to the variable
  BIND(?father AS ?royalty)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Maria Anna of Bavaria and her children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1574)

  ?mariaAnna dbo:child ?child .

  # Father of the child (husband of Maria Anna)
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?child .

  # Child of the father (grandchildren of Maria Anna)
  ?father dbo:child ?grandchild .

  # Grandchild must be royalty
  ?grandchild a dbo:Monarch .

  # Grandchild must have been a commander in a war
  ?warEvent a dbo:MilitaryConflict ;
            dbo:commander ?grandchild .
  
  # Societal event, event, and television show related to 2nd Dragoon Regiment (France)
  ?societalEvent a dbo:SocietyEvent ;
                 dbo:relatedWork ?tvShow ;
                 dbo:subject ?dragoonRegiment .

  ?tvShow a dbo:TelevisionSeries .
  
  ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Singer .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies featuring Audrey Hepburn
  ?film a dbo:Film ;
        dbo:starring dbr:Audrey_Hepburn .

  # Find Janusz Kamiński's spouse
  ?janusz dbr:Janusz_Kamiński .
  ?janusz dbo:spouse ?spouse .

  # Check if the spouse is in the same film as Audrey Hepburn
  ?film dbo:starring ?spouse .

  # Get actors from that film
  ?film dbo:actor ?actor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bookTitle ?authorName
WHERE {
  ?work dbo:wikiPageWikiLink dbr:Bill_Clinton .
  ?work rdf:type dbo:Book .
  ?work rdfs:label ?bookTitle .
  FILTER (LANG(?bookTitle) = 'en') .

  ?work dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (LANG(?authorName) = 'en' && ?authorName = ""Bill Clinton"")
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Albrecht, Duke of Württemberg
  ?albrecht a dbo:Person ;
           foaf:name ""Albrecht, Duke of Württemberg""@en .
  
  # Archduchess Margarete Sophie of Austria
  ?margarete a dbo:Person ;
             foaf:name ""Archduchess Margarete Sophie of Austria""@en .

  # Find common child
  ?albrecht dbo:child ?commonChild .
  ?margarete dbo:child ?commonChild .
  
  # Ensure the child is a person
  ?commonChild a dbo:Person .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  ?person a dbo:Person ;
          dbo:deathDate ?deathDate .
  
  FILTER (STR(?deathDate) = ""1850-08-05T00:00:00Z""^^xsd:dateTime)

  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States_of_America .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?countryResidence
WHERE {
  dbr:Álvaro_Quirós dbo:positionHeld ?position .
  
  ?position dbo:election dbr:2009_Galician_regional_election .

  ?position dbo:office ?office .

  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residence ?residence .
    
    ?residence rdf:type dbr:Country .
    
    BIND(?residence AS ?countryResidence)
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify T.I.'s album that is a song and musical work
  ?album dbo:artist dbr:T.I. ;
         dbo:genre dbr:Songs ;
         dbo:workType dbr:Musical_work .

  # Step 2: Find the actor associated with this album
  ?actor dbo:actedIn ?album .

  # Step 3: Identify the actor from Shelby Oaks
  ?shelbyActor dbo:actedIn dbr:Shelby_Oaks .
  
  # Step 4: Ensure it's the same person
  FILTER (?actor = ?shelbyActor)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Joey B's birth name
  VALUES (?joeyBBirthName) { ""Joseph Benson"" }
  
  # Rod Argent's profession
  ?rodArgent dbo:profession dbr/Musician .
  ?rodArgent foaf:name ""Rod Argent"" .

  # $pacely's associated musical artist
  ?pacely dbo:associatedMusicalArtist ?artist .
  ?pacely foaf:name ""$pacely"" .

  # Find the person with Joey B's birth name and Rod Argent's profession
  ?person foaf:name ?joeyBBirthName .
  ?person dbo:profession dbr/Musician .

  # Ensure this person is associated with $pacely as a musical artist
  ?artist foaf:name ?personName .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer
WHERE {
  ?album a dbo:MusicalWork ;
         a dbo:Album ;
         rdfs:label ""Sappy""@en .
  
  OPTIONAL { ?album dbo:composer ?writer . }
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
    # Step 1: Find Rodney Lees' award
    ?award dbo:recipient dbr:Rodney_Lees .
    
    # Step 2: Find the awardee of that award and their parent
    ?award dbo:recipient ?awardee .
    ?awardee dbo:parent ?parent .

    # Step 3: Identify Frederick Stanley's child who is a politician
    dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
    ?child rdf:type dbo:Politician .
    
    # Step 4: Find the common entity (parent of awardee and father of child)
    ?child dbo:father ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?work dbo:type/dbo:subClassOf* dbr:Film .
  ?work dbo:type/dbo:subClassOf* dbr:TelevisionShow .
  
  ?work dbo:starring dbr:Vera_Lynn .
  
  ?work dbo:writer ?author .
  
  ?author dbp:child dbr:Kate_Dimbleby .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?character a dbo:FictionalDetective .
  ?character rdfs:label ""The Shadow""@en .
  OPTIONAL { ?character dbo:creator ?creator . }
  OPTIONAL { ?character dbo:portrayedBy ?actor . }
  
  FILTER (lang(?characterLabel) = 'en')
  
  BIND(COALESCE(?creator, ?actor) AS ?professional)
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Linda Sue Cobb""@en .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?party WHERE {
  ?person foaf:name ""Guillaume Peltier""@en .
  ?person dbo:party ?party .
}",1,1,2,1,1,2,2,9,6,0,0,1.0,1.0,1.0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Find the author of ""Cat Country""
  dbr:Cat_Country dbo:author ?author .

  # Ensure the author died in Taipei
  ?author dbo:deathPlace dbr:Taipei .

  # Identify a child of this author who is a politician
  ?child dbo:parent ?author ;
         a dbo:Politician .

  # Get the birthplace of this child
  ?birthPlace dbp:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?person rdfs:label ""Stuart Mcbeath Tosh""@en .
  FILTER NOT EXISTS { ?person a dbo:Agent } # Ensure it's not just any agent
  ?person dbo:musicalArtist true . # Confirm he is a musical artist

  ?association dbo:associatedMusicalArtist ?person ;
               dbo:musicalArtist ?associatedArtist .
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and properties.
- **?person rdfs:label ""Stuart Mcbeath Tosh""@en**: Find the resource representing Stuart Mcbeath Tosh.
- **FILTER NOT EXISTS { ?person a dbo:Agent }**: Ensure he is specifically recognized as more than just an agent, focusing on his role as a musical artist.
- **?person dbo:musicalArtist true**: Confirm that he is indeed a musical artist.
- **?association dbo:associatedMusicalArtist ?person; dbo:musicalArtist ?associatedArtist**: Find associations where Stuart Mcbeath Tosh is linked to other musical artists.",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```

This query assumes that the film ""A Star Is Born"" (1937) is represented in DBpedia as `dbr:A_Star_Is_Born_(1937_film)` and uses the `dbo:producer` property to find its producer.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?managerSeason
WHERE {
  # Find Thomas Letsch's native country (West Germany)
  dbr:Thomas_Letsch dbo:nationality dbr:Germany_West .

  # Find the manager of VfL Bochum during a specific season
  ?season dbo:team dbr:VfL_Bochum ;
          dbo:manager dbr:Thomas_Letsch .
  
  BIND(dbr:Germany_West AS ?nativeCountry)
  BIND(?season AS ?managerSeason)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?helena a dbo:Archduchess ;
          foaf:name ""Helena of Austria""@en .
  
  ?helena dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  FILTER EXISTS { ?child rdf:type dbo:RoyalPerson }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX schema: <http://schema.org/>

SELECT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Find the governor of Virginia
  ?governor a dbo:Politician ;
            dbo:governmentRole dbr:Governor_of_Virginia ;
            dbo:birthPlace ?governorBirthPlace .

  # Find the American author of ""El Deafo""
  ?author a dbo:Writer ;
          schema:nationality dbr:United_States ;
          dbo:work dbr:El_Deafo .
  
  # Extract birthplace of the author
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and Dawit I
  ?baedaMaryamI a dbo:Monarch ;
                dbo:spouse ?dawitI .
  
  ?dawitI a dbo:Monarch ;
          dbo:child ?commonDescendant .

  ?baedaMaryamI dbo:child ?commonDescendant .

  # Find the father of the common descendant
  ?commonDescendant dbo:father ?parent .

  # Find the grandfather (father's father)
  ?parent dbo:father ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder true .

  # Reference to Lamont Cranston, alter ego of The Shadow
  FILTER(?grandfather = dbr:Lamont_Cranston)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?profession WHERE {
  # Find Shatrughan Sinha's profession
  ?sinha a dbo:Person ;
         foaf:name ""Shatrughan Sinha""@en .
  
  ?sinha dbo:occupation ?profession .

  # Find other professionals in the same field
  ?person a dbo:Person ;
          dbo:occupation ?profession .
  
  FILTER(?person != ?sinha)
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild
WHERE {
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  ?constance dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child dbo:child ?grandchild .

  ?grandchild rdf:type dbo:Royal .
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?governor WHERE {
  ?governor dbo:stateGovernor dbr:Virginia .
  ?governor rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the landmark with the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)

  # Determine the country where this landmark is located
  ?landmark dbo:country dbr:COUNTRY .

  # Identify the ruling party in that country
  ?rulingParty dbp:country dbr:COUNTRY ;
               dbp:isRulingParty ""true""^^xsd:boolean .
  
  # Find a person born as Harriette Arlene Lake
  ?person dbo:birthName ""Harriette Arlene Lake""@en .

  # Check if this person is a member of the ruling party
  ?partyMember dbo:member ?person ;
               dbp:name ?rulingParty .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Stonebwoy (Elorm Kabu Amenyah)
  { 
    ?stonebwoy dbo:birthName ""Elorm Kabu Amenyah""@en .
    ?stonebwoy dbo:musicalArtist ?artist .
  }
  
  UNION
  
  # Shatta Wale (Darryl Paa Kwesi Bannerman-Martin)
  {
    ?shattawale dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
    ?shattawale dbo:musicalArtist ?artist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parentOfFather ?spouse ?parentOfSpouse
WHERE {
  # Stephen V of Hungary and his child
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?child dbo:father ?stephenV ;
         a dbo:Royal .

  # Child's father (which is Stephen V)
  ?parentOfFather dbo:son ?child .

  # Spouse of Maria of Bytom
  ?maria dbp:surname ""Bytom"" ;
         dbo:spouse ?spouse .
  
  # Parent of the spouse
  ?parentOfSpouse dbo:child ?spouse .

  # Ensure all are royalty
  FILTER (?stephenV = <http://dbpedia.org/resource/Stephen_V_of_Hungary> &&
          ?child a dbo:Royal &&
          ?parentOfFather a dbo:Royal &&
          ?spouse a dbo:Royal &&
          ?parentOfSpouse a dbo:Royal)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildFather WHERE {
  # Step 1: Find Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile dbo:spouse ?mother .
  
  # Step 2: Find his children
  ?child dbo:parent dbr:Alfonso_VI_of_León_and_Castile ;
         a dbo:Person .

  # Step 3: Find the grandchildren (children of Alfonso VI's children)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Step 4: Identify the father of this grandchild
  ?grandchildFather dbo:spouse ?motherOfGrandchild ;
                    dbo:parent ?grandchild .
  
  # Ensure the father is royalty
  ?grandchildFather a dbo:Monarch .

  # Step 5: Find connection to William I
  ?reference dbo:officeHolder ?office ;
             dbo:royalty ?royalTitle ;
             dbo:spouse dbr:William_I_of_Aquitaine .
  
  # Ensure the reference is royalty and an office holder
  ?reference a dbo:Monarch .

  # Link the grandchild's father to this reference
  ?grandchildFather = ?reference
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentPhotographer ?parentDoonArbus ?movie ?actor WHERE {
  # Parent of Photographer
  dbr:Photographer dbo:subclassOf* ?parentPhotographer .

  # Parent of Doon Arbus
  dbr:Doon_Arbus dbo:profession ?doonProf .
  ?doonProf dbo:subclassOf* ?parentDoonArbus .

  # Actor of a movie that is a work, with the person decedent at Los Angeles
  ?movie dbo:starring ?actor ;
         a dbo:Film .
  ?actor dbo:deathPlace dbr:Los_Angeles_County,_California .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName ?albumTitle WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?professional ;
                 rdfs:label ?professionalName .

  # T.I.'s albums and songs
  ?album dbo:artist dbr:T.I. ;
         dbo:title ?albumTitle .

  ?song dbo:album ?album ;
        a dbo:Songs ;
        rdfs:label ?songLabel .

  FILTER (CONTAINS(LCASE(?songLabel), ""musical work""))
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Burhan_Belge> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie a dbo:Film .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?adminRegion dbo:administrativeRegion ?territory .
  ?adminRegion dbp:capital dbr:Copenhagen .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:region dbr:Galicia .
  FILTER(YEAR(?date) = 2009)
  
  ?election dbo:officeHolder ?leader .
  
  ?leader dbo:country dbr:Spain .
  
  ?leader dbo:positionHeld ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?remAssociatedArtist
WHERE {
  # Step 1: Mark Eitzel and his band
  dbr:Mark_Eitzel dbo:memberOf dbr:American_Music_Club.
  
  # Step 2: Associated musical artist of American Music Club
  dbr:American_Music_Club dbo:associatedMusicalArtist ?bandMember .
  
  # Step 3: Associated musical artist of R.E.M.
  dbr:R.E.M. dbo:associatedMusicalArtist ?remAssociatedArtist .
  
  # Ensure the associated artist is an artist
  ?remAssociatedArtist a dbo:MusicalArtist .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Scott LaFaro""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify the film ""Burnt by the Sun""
  dbr:Burnt_by_the_Sun a dbo:Film .

  # Find the soundtrack associated with the film
  dbr:Burnt_by_the_Sun dbo:soundtrack ?soundtrack .

  # Ensure the artist is a band, group, and organization
  ?soundtrack dbo:musicalArtist ?artist .
  ?artist a dbo:MusicalArtist ;
          a dbo:Band ;
          a dbo:Group ;
          a dbo:Organization .
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
  # Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child1 .

  # Child of Ferdinand III
  ?child1 dbo:parent ?fatherOfChild .

  # Cecilia Renata of Austria
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherOfCeciliaRenata .

  # Match the father of the child with the father of Cecilia Renata
  FILTER (?fatherOfChild = ?fatherOfCeciliaRenata)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en .
  
  ?hansen dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find territories administered from this place by Olaf I of Denmark
  ?olaf a dbo:Person ;
        foaf:name ""Olaf I of Denmark""@en .
  
  ?olaf dbo:administers ?territory .
  ?administration dbo:fromLocation ?deathPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find individuals who are members of the Republican Party in the United States
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  
  # Ensure these individuals are spouses of Roger Pryor (actor)
  ?marriage dbo:spouse ?person ;
            dbo:spouse dbr:Roger_Pryor_(actor) .

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dc: <http://purl.org/dc/terms/>

SELECT DISTINCT ?work ?country WHERE {
  # Identify Lao She's works
  ?work dbo:author dbr:Lao_She .
  
  # Get the country of each work
  OPTIONAL { ?work dbo:country ?country . }
}
```",2,2,3,2,1,3,2,20,2,11,0,0.15384615384615385,1.0,0.2666666666666667
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenantOfSpain ?tenantOfSantiagoDeCompostela ?event
WHERE {
  # Anxo Quintana's roles
  ?anxoQuintana dbo:office ?role .
  
  # Tenant of Spain (Prime Minister)
  ?primeMinister dbp:country dbr:Spain ;
                 dbo:positionHeld ?tenantOfSpainRole .
  FILTER(?tenantOfSpainRole = ?role) 
  BIND(?primeMinister AS ?tenantOfSpain)

  # Mayor of Santiago de Compostela
  ?mayor dbp:city dbr:Santiago_de_Compostela ;
         dbo:positionHeld ?mayorRole .
  FILTER(?mayorRole = ?role)
  BIND(?mayor AS ?tenantOfSantiagoDeCompostela)

  # Events related to Anxo Quintana's leadership roles
  ?event dbo:agent ?anxoQuintana .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfMiguelMaura ?tenantOfResidence
WHERE {
  # Find Miguel Maura's office
  dbr:Miguel_Maura dbo:positionHeld ?officeOfMiguelMaura .

  # Find the leader of the 2003 Madrid City Council election who is an office holder
  ?leader a dbo:ElectedOfficial ;
          dbo:election ?election .
  
  # Ensure the election is the 2003 Madrid City Council election
  FILTER (str(?election) = ""Madrid City Council election, 2003"")

  # Find the residence associated with this leader
  ?residence dbo:tenant ?leader .

  # Find who lived in that residence
  ?residence dbo:tenant ?tenantOfResidence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Stonebwoy's information
  VALUES (?stonebwoy) { dbr:Stonebwoy }
  ?stonebwoy dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?stonebwoy dbo:genre ?genre .

  # Artist from Central Region, Ghana
  ?artist2 dbo:nationality dbr:Ghana ;
           dbo:birthPlace ?place ;
           dbo:profession dbr:Musician ;
           dbo:genre ?genre2 .

  FILTER EXISTS { 
    ?place dbo:country dbr:Ghana .
    ?place rdfs:label ""Central Region""@en .
  }

  # Ensure the artist is associated with a similar genre
  FILTER (?genre = ?genre2)

  # Return Stonebwoy and the Central Region artist
  BIND(?stonebwoy AS ?artist1)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Allan Arbus""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Ulster Unionist Party""@en .
  
  OPTIONAL { 
    ?party dbo:leader ?leader .
  }
}
```

This query does the following:
- It selects entities that are of type `dbo:PoliticalParty` and have an English label ""Ulster Unionist Party.""
- It then attempts to find a property `dbo:leader` associated with this party, which would give us the leader.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find the reference who is a royalty and an office holder
  ?reference dbo:child dbr:William_I_of_Sicily .
  ?reference dbo:royalty true .
  ?reference dbo:officeHolder true .

  # Identify the child of Roger II of Sicily and Elvira of Castile
  ?child dbo:parent dbr:Roger_II_of_Sicily ;
         dbo:parent dbr:Elvira_of_Castile ;
         dbo:royalty true .

  # Find the father of this child who is royalty
  ?father dbo:child ?child .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find the producer of ""Nothing to Gein""
  ?album dbo:producer ?producer .
  
  # Ensure the album is ""Nothing to Gein""
  ?album rdfs:label ""Nothing to Gein""@en .

  # The producer must be an organization and a band member
  ?producer rdf:type dbo:Organization ;
            dbo:bandMember ?bandMember .

  # Check if the band member is part of Stone Sour
  ?bandMember dbo:memberOf dbr:Stone_Sour .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find fictional characters created by Kent Allard
  ?character dbo:author dbr:Kent_Allard ;
             a dbo:FictionalCharacter .

  # Step 2: Identify the actor who played Johnny Doughboy
  ?actor dbo:portrayed dbr:Johnny_Doughboy .

  # Step 3: Find the work associated with Johnny Doughboy and its producer
  ?work dbo:character dbr:Johnny_Doughboy ;
        dbo:producer ?professional .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
    # Step 1: Find T.I.'s song or musical work
    ?work dbo:artist dbr:T.I. ;
          a dbo:Songs OR a dbo:MusicalWork .

    # Step 2: Find the album of that work
    ?album dbo:song ?work .

    # Step 3: Get the actor associated with that album
    ?album dbp:actor ?actor .

    # Step 4: Identify the author of ""Smartbomb""
    dbr:Smartbomb dbo:author ?author .

    # Step 5: Find a movie involving both the actor and the author
    ?movie dbo:starring ?actor ;
           dbo:writer ?author .
}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Patrice_Martin-Lalande dbo:successor ?successor .
  
  ?successor rdf:type dbo:Politician .

  ?successor dbo:nationality dbr_France .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?mayorSchleswig ?territoryCopenhagen
WHERE {
  # Administration of Christian IX of Denmark
  OPTIONAL {
    dbr:Christian_IX_of_Denmark dbo:positionHeld ?administrationChristianIX .
  }

  # Mayor of Duchy of Schleswig
  OPTIONAL {
    ?mayorSchleswig a dbo:Mayor ;
                   dbo:officeLocation dbr:Duchy_of_Schleswig .
  }

  # Territories administered from Copenhagen
  OPTIONAL {
    ?territoryCopenhagen dbo:administrativeCapital dbr:Copenhagen .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> }
  
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?personWithBirthName
WHERE {
  # Find a party member of the Republican Party (United States)
  ?partyMember dbo:memberOf dbr:Republican_Party_(United_States) .

  # Find Tisha Sterling's parent and their birth name
  ?tishaSterling dbp:parent ?parent .
  ?parent dbp:birthName ?birthName .

  # Find a person with the same birth name as Tisha Sterling's parent
  ?personWithBirthName dbp:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?commander ?bookTitle WHERE {
  # Find the commander of the Third Taiwan Strait Crisis
  ?event dbo:wikiPageRedirects dbr:Third_Taiwan_Strait_Crisis .
  ?event dbo:agent ?commander .

  # Find books authored by Bill Clinton
  ?work dct:creator dbr:Bill_Clinton ;
        a dbo:Book ;
        rdfs:label ?bookTitle .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Maximilian I, Holy Roman Emperor
  ?child dbo:parent dbr:Maximilian_I,_Holy_Roman_Emperor .
  
  # Ensure the child is also a parent of Catherine of Austria, Queen of Portugal
  ?child dbo:parent dbr:Catherine_of_Austria_(1507–1578) .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerName ?otherProfessionalName WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .

  ?producer foaf:name ?producerName .
  ?producer dbo:occupation ?profession .

  ?otherProfessional dbo:occupation ?profession .
  ?otherProfessional foaf:name ?otherProfessionalName .

  FILTER(?producer != ?otherProfessional)
}
```",4,4,5,3,2,3,3,71,0,88,39640,0.0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName ?foundingDate WHERE {
  # Luiza Erundina's alma mater
  dbr:Luiza_Erundina dbo:almaMater dbr:University_of_São_Paulo .
  
  # University of São Paulo details
  dbr:University_of_São_Paulo a dbo:University ;
                             rdfs:label ?universityName ;
                             dbo:foundingDate ?foundingDate .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Step 1: Identify Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?profession .

  # Step 2: Find movies he acted in
  ?movie dbo:starring dbr:Eugène_Cattin .
  
  # Step 3: Identify other actors of those movies
  ?movie dbo:starring ?actor .

  # Step 4: Filter by decedent location (Los Angeles)
  ?actor dbp:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(?deathPlace), ""los angeles""))

  # Step 5: Determine parent of that actor
  OPTIONAL { ?actor dbo:parent ?parent }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Frederick Stanley's child
  ?child dbo:spouse* dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  
  # Parent of the child
  ?child dbo:parent ?parent .

  # Awardee of Rodney Lees' award
  ?awardee dbo:awardReceived dbr:Award_of_Rodney_Lees .
  
  # Check if parent is also a parent of the awardee
  ?awardee dbo:parent ?parent .

  # Arthur Stanley (politician)
  ?arthur dbr:Arthur_Stanley_(politician) .
  
  # Check if parent is father of Arthur Stanley
  ?arthur dbo:father ?parent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  # Find Luiza Erundina's resource
  dbr:Luiza_Erundina dbo:almaMater ?university .
  
  # Ensure the alma mater is a university and an educational institution
  ?university rdf:type dbo:University ;
              rdf:type dbo:EducationalOrganization .

  # Get the founding date of the university
  ?university dbo:foundingDate ?foundingDate .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?deathPlaceSkyRanger ?salMineoDeathPlace ?carolynJonesDeathPlace WHERE {
  # Find the actor of ""The Sky Ranger"" and their death place
  ?film dbo:title ""The Sky Ranger""@en .
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName FILTER (LANG(?actorName) = 'en') .

  OPTIONAL { ?actor dbo:deathPlace ?deathPlaceSkyRanger . }

  # Find Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  
  # Find Carolyn Jones' death place
  dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Duke Philipp of W%C3%BCrttemberg's child
  ?philippChild dbo:child dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Child of that child
  ?grandchild dbo:child ?philippChild .

  # Archduchess Helena of Austria's spouse
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria .

  # Child of the spouse
  ?spouseChild dbo:child ?spouse .

  # Predecessor of the child of the spouse
  ?predecessor dbo:successor ?spouseChild .

  # Ensure the predecessor is a royalty
  ?predecessor rdf:type dbo:Monarch .
  
  FILTER (?grandchild = ?predecessor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Roger II of Sicily
  ?roger2 a dbo:Monarch ;
          foaf:name ""Roger II of Sicily""@en .
  
  # Find his children who are royalty
  ?child dbo:spouseOrChildOf ?roger2 ;
         a dbo:Person ;
         dbp:title ?title .

  FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
          CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Find the parent of this child
  ?parent dbo:spouseOrChildOf ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Charles Martel of Anjou's parent
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .
  
  # Spouse of Charles II of Naples
  ?spouse dbo:spouse dbr:Charles_II_of_Naples ;
          rdf:type dbo:Person .

  # Child of Stephen V of Hungary
  ?child dbo:parent dbr:Stephen_V_of_Hungary ;
         rdf:type dbo:Person .
  
  # The person we are looking for is the intersection of these roles
  FILTER (?parent = ?spouse && ?spouse = ?child)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find a person who died in this country
  ?decedent dbo:deathPlace ?birthPlace ;
            dbp:nationality dbr:Grand_Duchy_of_Finland .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?name WHERE {
  ?institution a dbo:EducationalInstitution .
  ?institution dbp:state ""Georgia""@en .
  ?institution rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,17,43,924,0.2833333333333333,0.018065887353878853,0.03396603396603396
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?personWithSameBirthName
WHERE {
  # Part 1: Find the ruling party member in Central, Louisiana
  ?central dbo:mayor ?mayor .
  ?mayor dbo:politicalParty ?rulingParty .
  ?mayor dbp:name ?partyMember .

  FILTER (str(?central) = ""Central, Louisiana"")

  # Part 2: Find a person with the same birth name as Tisha Sterling's parent
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent foaf:name ?parentName .
  ?personWithSameBirthName dbp:birthName ?parentName .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Miguel_Maura dbo:memberOf ?party .
  
  ?party rdf:type dbo:PoliticalParty .

  ?party dbo:leader ?leader .

  ?leader dbo:office ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  dbr:Linda_Miller dbo:spouse ?parent . 
  ?parent dbo:child ?child .
  ?child dbp:nativePlace dbr:New_York_(state) .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person rdfs:label ""Roger II of Sicily""@en .
  ?person dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```

This query does the following:
- It identifies Roger II of Sicily using `rdfs:label`.
- Finds his children using the `dbo:child` property.
- Filters these children to ensure they are of type `dbo:Monarch`, indicating royalty.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?parentArtist
WHERE {
  # Find the author of ""A Picture of Britain""
  ?book dbo:title ""A Picture of Britain""@en .
  ?book dbo:author ?author .

  # Find an English settlement
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              rdfs:label ?locationLabel FILTER (lang(?locationLabel) = 'en') .

  # Find the native artist and musical artist of that location
  ?artist dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?settlement ;
          a dbo:Artist, dbo:MusicalArtist .
  
  # Get the parent of this artist (assuming ""parent"" refers to some hierarchical relationship)
  ?artist dbo:parent ?parentArtist .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify Robert Lamar Thompson
  ?person rdfs:label ""Robert Lamar Thompson""@en .
  
  # Step 2: Find his profession as a musical artist
  ?person dbo:profession ?artistRole .
  FILTER(CONTAINS(LCASE(STR(?artistRole)), ""musical artist""))

  # Step 3: Determine his band
  ?band dbo:member ?person .

  # Step 4: Find the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Step 5: Identify someone who shares the same profession and is part of the band
  ?producer dbo:profession ?sameProfession .
  FILTER(?artistRole = ?sameProfession)
  ?band dbo:member ?professional .

}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Child is a politician
  ?child dbo:occupation dbr:Politician .

  # Child has a child who received the Commander of the Royal Victorian Order
  ?child dbo:child ?grandChild .
  ?grandChild dbo:honourReceived dbr:Commander_of_the_Royal_Victorian_Order .

  # Child is also parent of Edward Stanley, 17th Earl of Derby
  ?child dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .

  # Get the father of this child
  ?child dbo:father ?father .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Faisal_bin_Hussein_of_Jordan dbo:spouse ?parentOrSpouse .
  
  ?parentOrSpouse dbo:child ?child .

  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .

  # Predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .

  # Child of the predecessor who is royalty
  ?childOfPredecessor dbo:parent ?predecessor ;
                     rdf:type ?royaltyType .
  
  FILTER (EXISTS { ?royaltyType rdfs:subClassOf* <http://dbpedia.org/ontology/RoyalFamilyMember> } )

  # Child of a child of Duke Philipp of Württemberg
  ?grandchild dbo:parent ?childOfPhilipp ;
              rdf:type ?royaltyType .
  
  ?childOfPhilipp dbo:parent <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg> .

  # The child of the child we are looking for
  ?childOfChild dbo:parent ?grandchild ;
                rdf:type ?royaltyType .
  
  FILTER (EXISTS { ?royaltyType rdfs:subClassOf* <http://dbpedia.org/ontology/RoyalFamilyMember> } )
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?officeOfCommander ?militaryConflict ?partyLeader
WHERE {
  # Find the tenant of Madrid who is an office holder and politician
  ?tenant a dbo:OfficeHolder ;
          dbo:politicalParty dbr:Conservative_Republican_Party_(Spain) ;
          dbo:location dbr:Madrid .
  
  # Find the office of commander related to a military conflict involving Manuel Pinto da Costa
  ?officeOfCommander a dbo:MilitaryConflict ;
                    dbo:commander dbr:Manuel_Pinto_da_Costa ;
                    dbo:societalEvent ?militaryConflict .

  # Find the leader of the Conservative Republican Party who is a politician
  ?partyLeader a dbo:Politician ;
               dbo:leaderOf dbr:Conservative_Republican_Party_(Spain) .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:West_Germany dbo:headOfState ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?eleonore dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?establishment ?university
WHERE {
  # Find the establishment with the given date
  ?establishment dbo:established ""1955-12-02""^^xsd:date .
  
  # Find Eleonora Menicucci's alma mater
  ?person foaf:name ""Eleonora Menicucci""@en ;
          foaf:almaMater ?university .

  # Ensure the person is Eleonora Menicucci
  FILTER(CONTAINS(LCASE(?person), ""eleonoramenicucci""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent
WHERE {
  # Step 1: Identify the commander in the Siege of Mukha who is royalty
  ?commander a dbo:Royalty ;
             dbp:participatedInEvent ?siege .
  
  # Ensure the event is the Siege of Mukha
  ?siege rdfs:label ""Siege of Mukha""@en .

  # Step 2: Find the parent of this commander who is also royalty
  ?parent dbo:child ?commander ;
          a dbo:Royalty .

  # Step 3: Find the child of this parent (who is royalty)
  ?childOfParent dbo:parent ?parent ;
                 a dbo:Royalty .

  # Step 4: This child must be the father of another person who is both royalty and an office holder
  ?fatherOfFather dbo:child ?childOfParent ;
                  a dbo:Royalty, dbo:OfficeHolder .

  # Step 5: This father must be the father of Na'od
  ?na'od dbo:parent ?fatherOfFather .
  
  # Ensure Na'od is correctly identified
  ?na'od rdfs:label ""Na'od""@en .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office WHERE {
  ?conflict dbo:wikiPageRedirects dbr:Korean_War .
  ?conflict dbo:participant ?country .
  ?commander dbo:nationality ?nationality ;
             dbo:occupation ""Military commander"" ;
             dbo:memberOf ?militaryOrganization ;
             dbo:officeHolder ?office .
  ?militaryOrganization dbo:participatedIn ?conflict .
}
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:castMember ?actor .

  # Check if the actor played a role related to ""The Shadow's"" alter ego
  OPTIONAL { 
    ?role dbo:character dbr:The_Shadow .
    ?role dbo:actor ?actor .
    ?shadowAlterEgo dbo:profession dbr:Private_investigator .
    ?role dbo:character ?shadowAlterEgo .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Singer .
  ?person dbo:name ?name .
  
  OPTIONAL { 
    ?person dbo:occupation ?otherProfession .
    FILTER(?otherProfession != dbo:Singer)
  }
}
```",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?baggovutWar
WHERE {
  # Find wars associated with recipients of the Golden Sword for Bravery
  ?recipient dbo:award dbr:Golden_Sword_for_Bravery .
  ?recipient dbo:participatedIn ?warOfAwardee .

  # Find wars associated with Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?baggovutWar .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find the actor of ""Rustlers' Rhapsody""
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .

  # Find the professional alter ego of ""The Shadow""
  ?character dbp:name ""The Shadow""@en ;
             dbp:alterEgo ?alterEgo .
  FILTER(?alterEgo = ?actor)
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor ?profession
WHERE {
  dbr:Dispatches_from_Elsewhere dbo:castMember ?actor .
  OPTIONAL { ?actor dbo:occupation ?profession . }
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native ?writer
WHERE {
  # Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .

  # Native of the birthplace
  ?native dbo:nativeOf ?birthPlace .

  # Writer of ""Boom Shack-A-Lak""
  dbr:""Boom_Shack-a-Lak"" dbo:lyricist ?writer .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthName ""Linda Bruckheimer"" .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?father .
  
  # Roger II of Sicily is the father of William II and a child of Alfonso VI
  ?father rdfs:label ""Roger II of Sicily""@en .
  ?grandchild dbo:parent dbr:Alfonso_VI_of_León_and_Castile ;
              dbo:parent ?father .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  ?person dbo:birthPlace dbr:Paris .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,80,4125,39560,0.019024970273483946,0.0020181634712411706,0.0036492188390922567
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Identify members of GS9 who are both artists and musical artists
  ?gs9Member dbo:memberOf dbr:GS9 .
  ?gs9Member a dbo:Artist .
  ?gs9Member a dbo:MusicalArtist .

  # Step 2: Filter by native of Florida
  ?gs9Member dbp:nativePlace dbr:Florida .

  # Step 3: Find associated musical artists
  ?gs9Member dbo:associatedBand ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist .

  # Step 4: Identify band members of these associated musical artists
  ?bandMember dbo:memberOf ?associatedArtist .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Commander in the Algerian War
  ?commander dbo:occupation dbr:Military_commander .
  ?commander dbo:participatedInMilitaryConflict dbr:Algerian_War .

  # Societal event, event, and television show
  ?commander rdf:type dbr:Societal_event ;
             rdf:type dbr:Event ;
             rdf:type dbr:Television_show .

  # Father of Eleonore of Austria, Queen of Poland
  ?eleonore dbo:father ?commander .
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .

  # Child of the father of Cecilia Renata of Austria
  ?ceciliaRenata dbo:father ?grandFather .
  ?commander dbo:father ?grandFather .
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?profession ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en ;
          dbp:birthday ?birthday .
  
  ?person dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actor""))

  ?work dbo:starring ?person ;
        a dbo:Film ;
        dbo:genre ?genre .

  VALUES ?genre { dbr:Television_series }

  FILTER(STRSTARTS(STR(?work), STR(dbr:)))
}
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native
WHERE {
    # Step 1: Find William Gayner's birthplace
    dbr:William_Gayner dbo:birthPlace ?birthPlace .
    
    # Ensure the birthplace is a region and country
    ?birthPlace rdf:type dbo:Region ;
               dbo:country ?country .

    # Step 2: Identify Claude Bowes-Lyon's child
    dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
    
    # Find the parent of this child
    ?parent dbo:child ?child .

    # Step 3: Find native of the birthplace
    ?native dbo:nativePlace ?birthPlace ;
            rdf:type dbo:Person .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samProfession ?bobBand
WHERE {
  dbr:Sam_Concepcion dbo:profession ?samProfession .
  dbr:Bob_Thompson_(musician) dbo:band ?bobBand .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?mitaka a dbo:Ward ;
          dbo:partOf dbr:Tokyo .
  ?mitaka rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```

### Explanation

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and RDF Schema (`rdfs`).
- **SELECT**: We are selecting the `?name` variable, which will hold the name of Mitaka.
- **WHERE Clause**:
  - `?mitaka a dbo:Ward`: Ensures that the entity is a ward.
  - `dbo:partOf dbr:Tokyo`: Specifies that the ward is part of Tokyo.
  - `rdfs:label ?name`: Retrieves the label (name) of the ward.
- **FILTER**: We filter results to only include English labels.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person dbo:birthDate ?birth .
  FILTER (YEAR(?birth) = 1979 && MONTH(?birth) = 11 && DAY(?birth) = 3)
  
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation ?occupation .
  VALUES ?occupation {dbr:Soccer_player dbr:Soccer_manager}
  
  ?playerTeam dbp:team ?team .
  ?person dbp:team ?playerTeam .
  
  ?agüero dbp:team ?team .
  FILTER (STRSTARTS(STR(?agüero), ""http://dbpedia.org/resource/Sergio_Ag%C3%BCero""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Identify Duchess Luise's spouse
  ?luise a dbo:Duchess ;
        foaf:surname ""Brunswick-Wolfenbüttel"" .
  
  ?luise dbo:spouse ?spouseLuise .

  # Step 2: Find the spouse of that spouse
  ?spouseLuise dbo:spouse ?grandSpouse .

  # Step 3: Determine Duke Anthony Ulrich's parent who is royalty
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?royalParent .
  
  ?royalParent a dbo:RoyalFamilyMember .

  # Step 4: Identify the child of this royal parent
  ?royalParent dbo:child ?child .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
  
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Identify the actor of ""High Society Blues""
  ?film a dbo:Film ;
        foaf:name ""High Society Blues""@en .
  
  ?film dbo:starring ?actor .

  # Step 2: Find a notable work (movie) associated with the actor
  ?notableWork dbo:starring ?actor ;
               a dbo:Film .

  # Step 3: Determine the producer of this movie/work
  ?notableWork dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,2,18,0,0.1,1.0,0.18181818181818182
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?deathPlace WHERE {
  # Find the movie ""The Sky Ranger""
  dbr:The_Sky_Ranger_1928_Film dbo:starring ?actor .

  # Get actor's name
  ?actor rdfs:label ?actorName .
  
  # Filter to ensure we get English labels only
  FILTER (lang(?actorName) = 'en')

  # Check if the actor has a death place recorded
  OPTIONAL { 
    ?actor dbo:deathPlace ?deathPlace .
    
    # Get the label for the death place
    ?deathPlace rdfs:label ?deathPlaceLabel .
    
    # Filter to ensure we get English labels only
    FILTER (lang(?deathPlaceLabel) = 'en')
  }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the producer of Coke Studio Philippines
  ?producer a dbo:Producer ;
            dbo:produced dbr:Coke_Studio_Philippines .

  # Find Bob Thompson's band
  ?bobThompson a dbo:Musician ;
               foaf:name ""Bob Thompson"" .
  ?band dbo:member ?bobThompson .

  # Find the professional in both contexts
  ?producer dbo:profession ?professional .
  ?bandMember a dbo:BandMember ;
              dbo:band ?band ;
              dbo:profession ?professional .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the resource for ""Golden Sword for Bravery""
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  
  FILTER(CONTAINS(LCASE(?awardLabel), ""golden sword for bravery"")).

  # Find awardees of this award
  ?recipient dbo:awardedBy ?award .

  # Find wars associated with these recipients
  ?recipient dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Elorm Kabu Amenyah""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?russianEmpire { dbr:Russian_Empire }
  
  # Find entities related to the Russian Empire
  ?entity dbo:country ?russianEmpire .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }

  UNION

  ?entity dbo:capital ?russianEmpire .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }

  UNION

  ?entity dbo:headOfState ?russianEmpire .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
```",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Karl Gustav von Baggovut""@en .
  ?person dbo:participatedIn ?war .
}
```

### Explanation

- **`rdfs:label`**: This property is used to match the label of the resource with ""Karl Gustav von Baggovut"".
- **`dbo:participatedIn`**: This property links a person to wars or battles they participated in.

This query will return resources representing wars or battles that Karl Gustav von Baggovut was involved in, according to DBpedia's data.",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies Herschel Bernardi acted in
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Step 2: Find Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .

  # Step 3: Determine the parent of Allan Arbus's child (grandparent)
  ?grandparent dbo:parent ?child .

  # Step 4: Identify works associated with this grandparent
  ?work dbo:starring ?grandparent .
  
  # Ensure the work is a movie and not just any type of work
  FILTER(?work != ?movie) 

  # Step 5: Extract actors from these works
  ?work dbo:starring ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Find the actor of ""Always"" (1989 film)
  ?film dbo:title ""Always""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  
  ?film dbo:starring ?actor .

  # Find the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Mariano Rajoy's office in Madrid
  ?office dbo:location dbr:Madrid .
  
  # Mariano Rajoy as a politician
  ?office dbo:occupant dbr:Mariano_Rajoy .
  
  # Mariano Rajoy as the leader of the Conservative Republican Party (Spain)
  ?party dbo:leader dbr:Mariano_Rajoy ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Find albums by T.I.
  ?album dbo:artist dbr:T.I. ;
         dbo:genre ?genre .
  
  # Ensure the album is a musical work and includes songs
  FILTER EXISTS { ?album dbo:workType dbr:Songs }
  FILTER EXISTS { ?album dbo:workType dbr:Musical_work }

  # Find actors associated with this album
  ?actor dbo:actedIn ?album .

  # Find actor of Shelby Oaks
  ?shelbyActor dbo:actedIn dbr:Shelby_Oaks .
  
  # Check if the same person acted in both
  FILTER (?actor = ?shelbyActor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?glennBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Birth place of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?glennBirthPlace .

  # Awardee's birthplace for an award received by Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:awardee ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Author of a reference to El Deafo who is American
  OPTIONAL {
    dbr:El_Deafo dbo:reference ?reference .
    ?reference dbo:author ?author .
    FILTER (lang(?author) = ""en"") .
    ?author dbo:nationality dbr:United_States .
    ?author dbo:birthPlace ?authorBirthPlace .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardShow dbo:organizer dbr:United_States_Congress .
  ?awardShow dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:nationality dbr:Russian_Empire .

  # Person native of the administration of Alexander II (assuming this means Russian Empire)
  ?person dbo:nationality dbr:Russian_Empire .

  # Person deceased in Switzerland
  ?person dbo:deathPlace dbr:Switzerland .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:mother ?mother .
  
  # Isabella of Austria
  dbr:Isabella_of_Austria dbo:mother ?mother .

  # The father is the spouse of their mother and has both as children
  ?father dbo:spouse ?mother ;
          dbo:child dbr:Catherine_of_Austria,_Queen_of_Portugal ;
          dbo:child dbr:Isabella_of_Austria .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?force WHERE {
  # Find the award received by Quincy Adams Gillmore
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .

  # Find other awardees of the same award
  ?otherAwardee dbo:awardReceived ?award .
  
  # Get the force associated with these awardees
  ?otherAwardee dbo:militaryUnit ?force .
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?successor ?tvShow WHERE {
  # Find the writer of ""Always the Love Songs""
  ?album rdfs:label ""Always the Love Songs""@en .
  ?album dbo:author ?writer .

  # Identify the successor of a commander in the Russo-Polish War
  ?commander dbo:officeHolder ?successor ;
             dbp:conflict <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> .
  
  # Ensure the successor is a politician and office holder
  ?successor rdf:type dbo:Politician .

  # Link to a television show and societal event involving Jean Baptist, Comte d'Arco
  ?tvShow dbo:subject <http://dbpedia.org/resource/Jean_Baptiste,_Comte_d%27Arco> ;
          rdf:type dbo:TelevisionShow .
  
  # Ensure the successor is related to this TV show
  ?successor dbp:relatedTVShow ?tvShow .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?country
WHERE {
  # Find Chiang Ching-kuo's children who are politicians
  ?child dbo:parent dbr:Chiang_Ching-kuo .
  ?child dbo:occupation dbr:Politician .

  # Get the birth place of these children
  ?child dbo:birthPlace ?birthPlace .

  # Find the country associated with ""Cat Country"" novel
  dbr:Cat_Country_novel dbo:setInLocation ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Arthur Stanley (politician)
  ?arthur dbo:father ?person .
  FILTER(STRSTARTS(STR(?arthur), ""Arthur Stanley""))

  # Victor Stanley (Royal Navy officer)
  ?victor dbo:parent ?person .
  FILTER(STRSTARTS(STR(?victor), ""Victor Stanley""))

  # Frederick Stanley, 16th Earl of Derby
  ?frederick dbp:child ?child .
  ?child dbo:parent ?person .
  FILTER(STRSTARTS(STR(?frederick), ""Frederick Stanley""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict ?militaryForce
WHERE {
  # Find military conflicts related to William Bayne
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:reference dbr:William_Bayne .

  # Ensure the conflict is also an event
  ?militaryConflict a dbo:Event .

  # Get the military force involved in the conflict
  ?militaryConflict dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?spouse
WHERE {
  # Republican Party member
  ?partyMember dbo:memberOf dbr:Republican_Party_(United_States) .

  # Actor of a film produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  ?actor dbo:actedIn ?film .
  
  # Spouse relationship
  ?spouse dbp:spouse ?partyMember ;
          rdfs:label ?actorLabel .

  # Person born as Ann Sothern
  ?person rdfs:label ""Ann Sothern""@en .
  ?person foaf:name ""Ann Sothern"" .
  
  # Ensure the spouse is the same person as Ann Sothern
  FILTER (?spouse = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?person dbo:birthName ""Alexander II, Grand Duke of Finland""@en .
  ?person dbo:placeOfBirth ?native .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbo:party ?party .

  ?party dbo:leader ?leader .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  VALUES ?joeyB { dbr:Joey_Badass }
  ?joeyB dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?artist a dbo:Artist ;
          dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
  ?artist dbp:birthday ?birthday .
  FILTER (LANG(?placeLabel) = 'en')
  
  OPTIONAL { 
    ?artist foaf:name ?birthName .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?yuriiKhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  
  ?role dbo:predecessor ?yuriiKhmelnytsky ;
        dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?alterEgo
WHERE {
  # Na'od and his father Zara Yaqob
  dbr:Na'od dbo:father dbr:Zara_Yaqob .
  
  # Zara Yaqob is royalty and an office holder, and child of Dawit I
  dbr:Zara_Yaqob a dbo:Monarch ;
                 dbo:childOf dbr:Dawit_I .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  
  # Zara Yaqob is the grandfather of Na'od
  ?grandfather dbo:child dbr:Zara_Yaqob .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officerName ?role ?event WHERE {
  # Find William Tennant as a Royal Navy officer
  ?officer dbo:name ""William Tennant""@en .
  ?officer dbo:nationality dbr:United_Kingdom .
  ?officer dbo:occupation dbr:Royal_Navy_officer .

  # Get his role or position during the event
  OPTIONAL { ?officer dbp:role ?role . }

  # Find the event of the sinking of HMS Prince of Wales and HMS Repulse
  ?event dbo:name ""Sinking of HMS Prince of Wales and HMS Repulse""@en .
  ?event dbo:date ?date .

  # Link Tennant to the event if possible
  OPTIONAL { 
    ?officer dbp:participatedInEvent ?event .
  }

  # Return relevant information
  BIND(?officer AS ?officerName)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflicts/events involving the 30th (Cambridgeshire) Regiment of Foot
  ?regiment a dbo:MilitaryUnit ;
            dbo:militaryConflicts ?conflict1 .

  # Find the military conflicts/events involving the Battle of Fort Royal
  ?battle dbr:Battle_of_Fort_Royal ;
          dbo:participatedIn ?conflict2 .

  # Ensure both entities are involved in the same conflict/event
  FILTER (?conflict1 = ?conflict2)

  # Extract commanders from these conflicts/events
  ?conflict1 dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?group dbr:GS9 ;
         dbo:bandMember ?member .
  
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the successor season of the 2006–07 VfL Bochum season
  ?successorSeason a dbo:FootballLeagueSeason ;
                   dbo:sportsTeam dbr:VfL_Bochum ;
                   dbp:seasonStart ?startYear .

  FILTER (?startYear > ""2006-08-01""^^xsd:date && ?startYear < ""2007-07-31""^^xsd:date)

  # Find the manager of a player in this successor season
  ?player dbo:playsFor dbr:VfL_Bochum ;
          dbo:manager ?manager .

  # Ensure the club is also an organization and a soccer club
  ?club a dbo:SoccerClub, dbo:Organization ;
        dbo:team ?player .

  # Find Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativeCountry ?country .

  # Ensure the player is native to this country
  ?player dbo:nationality ?country .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Find Bob Thompson's band
  dbr:Bob_Thompson (dbo:musicalBand) ?bobBand .
  
  FILTER(?bobBand = dbr:The_Thompson_Twins)

  # Find a professional who shares both the profession and band
  ?professional dbo:profession ?samProfession ;
               dbo:musicalBand ?bobBand .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist
  ?bobbyShmurda dbo:associatedMusicalArtist ?artist1 .
  
  # Find Ackquille Jean Pollard (2 Chainz)'s associated musical artist
  ?ackquilleJeanPollard dbo:associatedMusicalArtist ?artist2 .

  # Ensure the band member is a musical artist and part of both artists' bands
  ?bandMember dbo:memberOfBand ?artist1 ;
              dbo:memberOfBand ?artist2 ;
              rdf:type dbo:MusicalArtist .
  
  # Filter for Bobby Shmurda and Ackquille Jean Pollard by their DBpedia URIs or labels
  VALUES ?bobbyShmurda { <http://dbpedia.org/resource/Bobby_Shmurda> }
  VALUES ?ackquilleJeanPollard { <http://dbpedia.org/resource/2_Chainz> }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?writer WHERE {
  # Find the commander related to Jean Baptist, Comte d'Arco
  OPTIONAL { 
    ?person dbo:birthName ""Jean Baptist, Comte d'Arco""@en .
    ?war dbo:commander ?commander .
    ?war dbo:participant ?person .
  }

  # Identify a television show that is also a societal event
  OPTIONAL {
    ?tvShow a dbo:TelevisionSeries ;
            dbo:genre ?societalEvent .
    FILTER (CONTAINS(LCASE(?societalEvent), ""event"") || CONTAINS(LCASE(?societalEvent), ""society""))
  }

  # Find the writer of ""Always the Love Songs""
  OPTIONAL {
    ?album dbr:Always_the_Love_Songs ;
           dbo:writer ?writer .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPartyLabel WHERE {
  dbr:Sofía_Petro dbo:parent ?father .

  ?father dbo:partyAffiliation ?fatherParty .
  
  ?fatherParty rdfs:label ?fatherPartyLabel .
  
  FILTER(LANG(?fatherPartyLabel) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  dbr:1_000_Dollars_a_Minute dbo:starring ?actor .
  
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent1 ?parent2 WHERE {
  # Find the parent of Mary Elphinstone, Lady Elphinstone
  OPTIONAL {
    dbr:Mary_Elphinstone,_Lady_Elphinstone dbo:parent ?parent1 .
  }

  # Find a child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  OPTIONAL {
    dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
    
    # Then find the parent of that child
    ?child dbo:parent ?parent2 .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?sportsManager ?soccerClubManager ?bochumManager WHERE {
  # Find sports managers born on 1968-08-26 native to Germany
  ?person dbo:nationality dbr:Germany ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .
  
  # Find the soccer club managed by this person
  ?club dbo:manager ?person .
  ?club rdf:type dbo:SoccerClub .

  # Get the name of the sports manager and the soccer club they manage
  ?sportsManager rdfs:label ?personLabel .
  FILTER(LANG(?personLabel) = ""en"")
  
  ?soccerClubManager rdfs:label ?clubLabel .
  FILTER(LANG(?clubLabel) = ""en"")

  # Find the current manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?bochumManager .
  ?bochumManager rdfs:label ?bochumManagerLabel .
  FILTER(LANG(?bochumManagerLabel) = ""en"")
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find works by George Ducas
  ?work dbo:author dbr:George_Ducas .
  
  # Find the successor of Yurii Khmelnytsky
  ?successor dbo:succeededBy dbr:Yurii_Khmelnytsky ;
             dbo:occupation dbr:Writer .

  # The writer of the work is also the successor
  ?work dbo:author ?writer .
  
  FILTER (?writer = ?successor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?singerRole ?band
WHERE {
  # Find the resource for Bob Thompson (musician)
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          dbp:birthName ?birthName .

  # Check if he has a professional role as a singer
  OPTIONAL { 
    ?person dbo:profession dbr:Singer .
    BIND(""Singer"" AS ?singerRole)
  }

  # Find any band associated with him
  OPTIONAL {
    ?band dbo:member ?person ;
          foaf:name ?bandName .
    BIND(?bandName AS ?band)
  }
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?grandChildOfBelaIV
WHERE {
  # Find Charles Martel of Anjou and his parent
  dbr:Charles_Martel_of_Anjou dbo:child ?parentOfCharlesMartel .
  
  # Find Béla IV of Hungary's child
  dbr:Béla_IV_of_Hungary dbo:child ?childOfBelaIV .

  # Find the grandchild of Béla IV who is royalty
  ?childOfBelaIV dbo:child ?grandChildOfBelaIV .
  
  # Ensure the grandchild holds a royal title
  ?grandChildOfBelaIV dbo:title ?royalTitle .
  FILTER EXISTS { ?royalTitle dbp:isRoyalTitle true }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country WHERE {
  ?person rdfs:label ""Dawid Olejniczak""@en .
  FILTER (lang(?person) = 'en') # Ensure we're looking at the English label
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?author ?spouse WHERE {
  # Identify the disease/societal event
  ?event a dbo:Disease ;
         a dbo:SocietalEvent .

  # Find the commander associated with this event and Navy
  ?commander dbo:rank ""Commander""^^xsd:string ;
             dbo:militaryBranch dbr:United_States_Navy ;
             dbo:participatedIn ?event .

  # Identify the author of ""Back to Work""
  ?author foaf:name ?nameAuthor ;
          dbo:book dbr:Back_to_Work_(2011_book) .

  # Find the spouse who is a politician and office holder
  ?spouse foaf:name ?nameSpouse ;
          dbo:spouse ?author ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Connect to Hillary Clinton's work
  ?work dbo:author dbr:Hillary_Clinton ;
        a dbo:Book ;
        a dbo:WrittenWork .
  
  # Ensure the spouse is linked to this work
  ?spouse dbo:relatedTo ?work .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  VALUES (?child1) { (dbr:Mary_Frances_Bowes-Lyon) }
  VALUES (?child2) { (dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne) }

  ?parent dbo:child ?child1 .
  ?parent dbo:child ?child2 .

  ?parent dbo:nativePlace dbr:Middlesex .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfAward WHERE {
  # Find bands from New York State that include Uncle Murda as a member
  ?band dbo:location dbr:New_York_(state) .
  ?bandMember dbo:member ?band ;
              rdfs:label ""Uncle Murda""@en .

  # Identify awards related to these bands
  ?award dbo:recipient ?band .

  # Determine the native location of these awards
  ?award dbo:nativeOf ?nativeOfAward .

  # Ensure the native is a region, American state, and settlement
  ?nativeOfAward rdf:type dbo:Region ;
                 dbo:country dbr:United_States .

  FILTER (CONTAINS(LCASE(?nativeOfAward), ""state"") && CONTAINS(LCASE(?nativeOfAward), ""settlement""))
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInForce WHERE {
  # Find Maria I of Portugal
  ?maria a dbo:Person ;
         dbo:birthName ""Maria I""@en .
  
  # Find her role as commander in a television show
  ?tvShow dbo:genre dbr:Television_show ;
          dbo:commander ?maria .

  # Find her role as commander in a military conflict
  ?conflict dbo:commander ?maria .

  # Combine the results to find the force she commands
  ?commanderInForce rdf:type dbo:TelevisionShow ; 
                    dbo:commander ?maria .
  UNION
  ?commanderInForce rdf:type dbo:MilitaryConflict ;
                    dbo:commander ?maria .
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find a person who died in this country
  ?decedent dbo:deathPlace ?birthPlace ;
            dbp:nationality dbr:Russian_Empire .

}
```",3,4,4,2,2,2,3,28,0,1,36,0.0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant
WHERE {
  # Find the administration of PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:head ?tenant .

  # Ensure the tenant is Spanish
  ?tenant dbo:nationality dbr:Spain .

  # The tenant should have a residence in a country
  ?tenant dbo:residence ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)

  # Ensure the country is a recognized country entity
  OPTIONAL { ?country rdfs:label ?countryLabel . }
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?award
WHERE {
  # Find Doug Beattie's residence
  dbr:Doug_Beattie dbo:residence ?residence .

  # Find the award associated with George Hamilton Cameron
  OPTIONAL { 
    dbr:George_Hamilton_Cameron dbo:award ?award .
  }
}
```",4,4,5,3,2,3,2,20,2,0,0,1.0,1.0,1.0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbo:band ?band . }
}
```

This query does the following:
- It looks for an entity (`?person`) that is of type `dbo:Musician` and has a name ""Bob Thompson"".
- It then attempts to find any band associated with this person using the property `dbo:band`.

Note: The exact property used to link musicians to bands might vary, so if `dbo:band` does not yield results, you may need to explore other properties like `dbo:memberOfBand` or similar.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?deathPlace WHERE {
  # Sal Mineo
  VALUES ?person { dbr:Sal_Mineo }
  
  # Actor of ""Color Me Dead""
  OPTIONAL {
    ?actor dbo:title dbr:Color_Me_Dead .
    ?actor a dbo:Actor .
    BIND(?actor AS ?person)
  }

  # Reed Howes
  OPTIONAL {
    VALUES ?person { dbr:Reed_Howes }
  }

  # Get the name and death place
  ?person rdfs:label ?name ;
          dbo:deathPlace ?deathPlace .

  FILTER(LANG(?name) = 'en')
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  VALUES ?bookTitle { 
    ""Promise Me, Dad"" 
    ""Promises to Keep""
  }
  
  ?book dbo:title ?title .
  FILTER (CONTAINS(LCASE(?title), LCASE(?bookTitle)))
  ?book dbo:author ?author .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Joe Biden""@en .
  ?person dbo:writtenWork ?work .
  ?work a dbo:CreativeWork ;
        dbo:genre/dbo:subClassOf* dbo:WrittenWork .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Identify the ruling party in Central, Louisiana
  ?rulingParty a dbo:PoliticalParty ;
               dbo:country dbr:United_States_of_America ;
               dbo:stateOrProvince dbr:Louisiana ;
               dbp:capital dbr:Central,_Louisiana .

  # Step 2: Find the party member of this ruling party
  ?partyMember dbo:memberOf ?rulingParty .

  # Step 3: Identify Harriette Arlene Lake and her spouse, Roger Pryor (actor)
  ?harriette a dbo:Person ;
             rdfs:label ""Harriette Arlene Lake""@en ;
             dbp:spouse ?rogerPryor .
  
  ?rogerPryor a dbo:Actor ;
              rdfs:label ""Roger Pryor (actor)""@en .

  # Ensure the party member is related to Harriette through Roger Pryor
  FILTER(?partyMember = ?harriette)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find members of The Alan Parsons Project
  ?member dbo:memberOf dbr:The_Alan_Parsons_Project .
  
  # Get the name or label for each member
  OPTIONAL { ?member rdfs:label ?bandMember . FILTER (lang(?bandMember) = 'en') }
  
  # Find Billy Lyall's associated musical artists
  dbr:Billy_Lyall dbo:associatedMusicalArtist ?artist .
  
  # Get the name or label for each artist
  OPTIONAL { ?artist rdfs:label ?associatedArtist . FILTER (lang(?associatedArtist) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonPlayer WHERE {
  # Players associated with Juan Carlos Molina (footballer)
  ?player dbo:spouse|dbo:partner dbr:Juan_Carlos_Molina_(footballer) .
  
  # Soccer player and athlete in All or Nothing: Manchester City
  ?athlete dbo:spouse|dbo:partner dbr:All_or_Nothing:_Manchester_City .
  FILTER EXISTS { ?athlete a dbo:SoccerPlayer . }
  FILTER EXISTS { ?athlete a dbo:Athlete . }

  # Find common player
  VALUES ?commonPlayer { ?player ?athlete }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice
WHERE {
  # Part 1: Office of the Commander in the Central African Republic Civil War
  ?person dbo:occupation dbr:Politician ;
          dbo:office ?commanderOffice .
  ?conf dbo:participant ?person .
  FILTER (CONTAINS(LCASE(STR(?conf)), ""central african republic civil war""))

  # Part 2: Office of the Leader of the Conservative Republican Party (Spain)
  ?leader dbo:occupation dbr:Politician ;
          dbo:office ?leaderOffice .
  ?party dbo:leader ?leader .
  FILTER (STR(?party) = STR(dbr:Conservative_and_Renaissance_Party_(Spain)))
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Maximilian I, Holy Roman Emperor
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:spouse ?mother .
  
  # Children of Maximilian I
  ?child dbo:parent dbr:Maximilian_I,_Holy_Roman_Emperor ;
         a dbo:Monarch ;  # Ensuring the child is royalty

  # Philip I of Castile
  dbr:Philip_I_of_Castile dbo:father ?father .

  # The father of Philip I must be one of Maximilian's children
  ?father = ?child .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Pablo Aimar and his team
  dbr:Pablo_Aimar a dbo:Athlete ;
                 dbo:birthDate ""1955-02-22""^^xsd:date ;
                 dbo:team ?team .

  # Find players in the same team as Pablo Aimar
  ?player a dbo:Athlete ;
          dbo:team ?team .
  
  FILTER(?player != dbr:Pablo_Aimar)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Find a resource for Konstantinos Ventiris
  ?person rdfs:label ""Konstantinos Ventiris""@en .
  
  # Look for wars or conflicts associated with this person
  ?event dbo:wikiPageDisambiguates ?person ;
         a dbo:War .

  # Get the label and description of the war
  ?war rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  
  OPTIONAL {
    ?war dbo:description ?description .
    FILTER (lang(?description) = 'en')
  }
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession ?tvShow
WHERE {
  # Step 1: Find actor of ""Ab Kya Hoga"" who is a politician
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  ?actor dbo:occupation dbr:Politician .

  # Get the profession of this actor
  ?actor dbo:profession ?profession .

  # Step 2: Find television show with Richard E. Grant
  ?tvShow dbo:starring dbr:Richard_E._Grant ;
          a dbo:TelevisionSeries .

  # Step 3: Find actors in this TV show who are professionals in the same field
  ?tvShow dbo:starring ?actorInTvShow .
  ?actorInTvShow dbo:profession ?profession .
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?reference WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""Nothing to Gein""@en .
  OPTIONAL { ?album dbp:reference ?reference }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find The Shadow video game
  dbr:The_Shadow_(video_game) dbo:genre dbr:Video_game_genre .

  # Find the alter ego of this character in the series
  OPTIONAL { 
    dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow_series .
    dbr:The_Shadow_series dbo:alterEgo ?alterEgo .
  }

  # Ensure the alter ego is a comics character
  ?alterEgo dbo:wikiPageWikiLink dbr:Category:Comics_characters .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Identify GS9 members who are both artists and musical artists
  ?gs9Member dbo:type dbr:GS9 .
  ?gs9Member dbo:memberOf ?artist .
  ?artist a dbo:Artist ;
          a dbo:MusicalArtist .

  # Step 2: Determine the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
         a dbo:Region ;
         a dbo:AmericanState ;
         a dbo:Settlement .

  # Step 3: Filter by native place being Puerto Rico
  ?gs9Member dbo:nativePlace dbr:Puerto_Rico .

  # Step 4: Find the band member of the associated musical artist
  ?artist dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?child rdf:type dbo:Politician .
  FILTER (str(?person) = ""Chiang Ching-kuo"")
}
```

This query does the following:
- Uses `dbo:child` to find children of a person.
- Filters those children who are of type `dbo:Politician`.
- Specifically targets Chiang Ching-kuo by filtering on his name.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find a producer for A Star Is Born (1937)
  ?film dbo:director ?producer .
  FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)"")) .

  # Find a work of Cora Sue Collins
  ?work dbo:composer dbr:Cora_Sue_Collins .
  
  # The producer should be associated with the work of Cora Sue Collins
  ?work dbo:producer ?producer .

  # The producer is also known as The Shadow
  ?producer rdfs:label ""The Shadow""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucas ?commander ?tvShow ?societalEvent ?battleOfViennaForce ?successor
WHERE {
  # George Ducas
  dbr:George_Ducas dbo:wikiPageRedirects ?georgeDucas .

  # Commander in the war (Battle of Vienna)
  ?commander dbo:role ?role .
  ?role dbo:associatedEvent dbr:Battle_of_Vienna .
  
  # Television show related to the commander
  ?tvShow dbo:subject ?commander .
  FILTER EXISTS { ?tvShow a dbo:TelevisionProgram }

  # Societal event related to the commander
  ?societalEvent dbo:relatedTo ?commander .
  FILTER EXISTS { ?societalEvent a dbo:SocietalEvent }

  # Military force of Battle of Vienna
  ?battleOfViennaForce dbo:associatedEvent dbr:Battle_of_Vienna .

  # Successor of Yurii Khmelnytsky
  dbr:Yurii_Khmelnytsky dbo:succeededBy ?successor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
  dbr:USS_Arcadia_(ID-1605) dbo:participatedInWar ?war .
  ?war rdf:type dbo:Disease .
  ?war rdf:type dbo:SocietalEvent .
  ?war dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?greatGrandChild WHERE {
  # Step 1: Find Alexander of Württemberg
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbo:birthYear ?birthYear .
  
  FILTER(?birthYear = 1804)

  # Step 2: Find his children (children)
  ?child dbo:parent ?alexander .

  # Step 3: For each child, find their children (grandchildren of Alexander)
  ?grandChild dbo:parent ?child .

  # Step 4: For each grandchild, find their children (great-grandchildren of Alexander)
  ?greatGrandChild dbo:parent ?grandChild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?mayor WHERE {
  # Find territories administered from Copenhagen
  ?territory dbo:administrativeCenter dbr:Copenhagen .
  
  # Find the mayor of Duchy of Schleswig
  OPTIONAL { 
    dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
  }
}
```",3,3,4,2,2,2,3,28,0,3,1,0.0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName WHERE {
  ?person a dbo:Monarch ;
          dbp:name ""Peter IV of Aragon""@en .
  
  OPTIONAL { ?person dbo:birthName ?realName . }
  
  ?person dbo:childOf ?parent .
  ?parent dbp:name ""Alfonso IV of Aragon""@en .
}
```

This query does the following:
- Selects entities that are monarchs with the name ""Peter IV of Aragon"".
- Retrieves his real name using `dbo:birthName`.
- Ensures he is a child of an entity named ""Alfonso IV of Aragon"" by checking the `dbo:childOf` property.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones"" .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Country ;
         rdfs:label ?country .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?nickCurranArtist WHERE {
  # Find Kim Wilson and his band
  dbr:Kim_Wilson dbo:musicalBand ?band .
  ?band rdfs:label ?bandName .

  # Find Nick Curran and his associated musical artist persona
  dbr:Nick_Curran dbo:birthPlace ?place .
  ?artist dbo:associatedMusicalArtist dbr:Nick_Curran .
  ?artist rdfs:label ?nickCurranArtist .

  FILTER (lang(?bandName) = 'en')
  FILTER (lang(?nickCurranArtist) = 'en')
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Step 1: Identify the child of Minye Kyawswa
  ?child dbo:parent dbr:Minye_Kyawswa .
  
  # Step 2: Determine the parent of that child
  ?grandParent dbo:child ?child .
  
  # Step 3: Find the child of this grandParent
  ?result dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,3,71,5,0,0,1.0,1.0,1.0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfFather WHERE {
  ?spouse a dbo:Spouse ;
          dbp:spouse ?maria .

  FILTER(?maria = dbpedia:Maria_of_Bytom)

  ?father a dbo:Father ;
          dbo:child ?spouse .

  ?parentOfFather a dbo:Parent ;
                  dbo:child ?father .
  
  FILTER EXISTS { ?parentOfFather a dbo:Monarch }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:workExample ?televisionShow .
  
  ?person dbo:deathDate ""2020-06-18""^^xsd:date ;
          a dbo:Artist, dbo:MusicalArtist ;
          dbp:parent dbr:Kate_Dimbleby .

  ?movie dbo:author ?person .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Get actors of those movies
  ?movie dbo:starring ?actor .

  # Ensure the actor is a parent of ""Photographer""
  ?actor dbo:parentCategory dbr:Photographer .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:spouse ?alfonsoIV .
  FILTER (?alfonsoIV = dbpedia:Alfonso_IV_of_Aragon) .

  ?alfonsoIV dbo:child ?child .
  
  ?child rdf:type dbo:RoyalPerson .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?alfonsoVI .
  FILTER(?alfonsoVI = dbp:Alfonso_VI_of_León_and_Castile) .
  ?alfonsoVI dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          dbp:birthName ""Emilia Yancheva Valeva"" .
  
  ?person dbo:occupation ?profession .

  FILTER (
    str(?profession) = ""Singer"" ||
    str(?profession) = ""Band member""
  )
}
```

This query does the following:
- Uses `dbp:birthName` to find the person with the birth name ""Emilia Yancheva Valeva"".
- Retrieves her occupations using `dbo:occupation`.
- Filters the results to include only those professions that are either ""Singer"" or ""Band member"".",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  dbp:SAL_MINEO dbo:deathPlace ?deathPlace .
}
```

Note: Replace `dbp:SAL_MINEO` with the actual URI for Sal Mineo in DBpedia if it differs.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Henry Clay Lewis""@en .
  ?person dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { ?birthPlace a dbo:Settlement . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_States_of_America . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Akaler Shandhaney""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?person { dbr:Hillary_Clinton }
  ?person dbo:spouse ?spouse .
}

UNION

SELECT ?commander WHERE {
  ?event dbo:dateStart ?start .
  ?event dbo:dateEnd ?end .
  FILTER (?start >= ""1995-01-01""^^xsd:date && ?end <= ""1996-12-31""^^xsd:date)
  ?event dbo:place dbr:Taiwan Strait Crisis .
  ?event dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find Steven Kapur
  ?artist rdf:type dbo:Artist ;
          foaf:name ""Steven Kapur""@en .
  
  # Find the work ""The True Self"" by Steven Kapur
  ?work dbo:creator ?artist ;
        rdfs:label ""The True Self""@en ;
        a dbo:MusicalWork .

  # Get the writer of the musical work
  ?work dbo:lyricist ?writer .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Child of the spouse
  ?spouseChild dbo:parent ?spouse .
  
  # Child of the child (grandchild) who is royalty
  ?spouseGrandchild dbo:parent ?spouseChild ;
                   a dbo:Monarch .

  # Ensure this grandchild is the father of William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?spouseGrandchild .

  # Ensure this grandchild is a child of Roger III's parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .
  ?spouseGrandchild dbo:parent ?rogerParent .

  BIND(?spouseGrandchild AS ?childOfChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent
WHERE {
  # Find the actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Ensure this actor has a parent who is a professional photographer
  ?actor dbo:parent ?parent .
  ?parent dbo:occupation dbr:Photographer .

  # Ensure this parent is also the parent of Allan Arbus
  ?parent dbo:child dbr:Allan_Arbus .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?author WHERE {
  ?work rdf:type dbo:Book .
  ?work rdf:type dbo:WrittenWork .
  ?work dbo:nationality dbr:United_States .
  ?work dbo:author dbr:Joe_Biden .
  ?work dbo:author ?author .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire .
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia Ontology properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**: We are selecting the variable `?person` which represents individuals who have been awarded the CBE.

- **WHERE Clause**:
  - `?person dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire .`: This pattern checks if there is a link between an individual (`?person`) and the honorary title ""Commander of the Order of the British Empire"" using the property `dbo:honoraryTitle`.

This query assumes that the CBE award is represented as a resource in DBpedia with the URI `dbr:Commander_of_the_Order_of_the_British_Empire`. Adjustments might be necessary if the representation differs.",1,1,2,1,1,3,2,20,0,0,853,0,0.0,0
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Jean Baptist, Comte d'Arco
  ?person a dbo:Person ;
          foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  # Find wars he participated in
  ?person dbo:participatedIn ?war .

  # Check if the war is also a television show
  OPTIONAL {
    ?war dbo:wikiPageWikiLink dbr:Category:Television_series_by_war .
  }
}
```

### Explanation

- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for resources.
- **Person Identification**: We look for a person with the name ""Jean Baptist, Comte d'Arco"".
- **Participation in Wars**: Use `dbo:participatedIn` to find wars associated with him.
- **Television Show Check**: Use `dbo:wikiPageWikiLink` to see if any of these wars link to a category related to television series by war.

This query will return wars that are both societal events and television shows linked to Jean Baptist, Comte d'Arco.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:name ""Álvaro Quirós""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  # Find the DBpedia resource for Filthy Friends
  ?band rdfs:label ""Filthy Friends""@en .
  
  # Ensure it's a musical band
  ?band rdf:type dbo:Band .

  # Get members of the band
  ?band dbp:bandMember ?member .

  # Filter to find Mark Eitzel as one of the members
  ?member rdfs:label ""Mark Eitzel""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorBirthPlace ?youngkinBirthPlace
WHERE {
  # Find Cece Bell, the author of ""El Deafo""
  ?book dbo:wikiPageRedirects dbr:El_Deafo .
  ?book dbo:author ?author .
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:nationality dbr:United_States .

  # Get Cece Bell's birthplace
  ?author dbo:birthPlace ?authorBirthPlace .

  # Find Glenn Youngkin's birthplace
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Prince Faisal bin Hussein's resource
  ?person a dbo:Person ;
          foaf:name ""Faisal bin Hussein""@en .

  # His children
  ?child dbo:spouseOrPartnerOf ?person ;
         a dbo:Person .

  # Check if the child is royalty
  OPTIONAL { ?child dbp:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Get parents of royal children
  ?parent dbo:spouseOrPartnerOf ?child ;
          a dbo:Person .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?otherProfessional ?band 
WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Find another professional in the same profession as Sam Concepcion
  ?otherProfessional a dbo:MusicArtist ;
                   dbo:profession ?samProfession .
  
  FILTER(?otherProfessional != dbr:Sam_Concepcion)

  # Identify Robert Lamar Thompson and his band
  dbr:Robert_Lamar_Thompson a dbo:MusicalArtist ;
                            dbo:band ?band .
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?child dbo:parent ?person ;
         a dbo:Politician ;
         dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,7,5,0.0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Eleonora_Menicucci dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?club dbp:name ""Hartlepool United F.C.""@en .
  ?club dbo:manager ?manager .
}
```

This query does the following:
- It uses `dbp:name` to find the club with the name ""Hartlepool United F.C.""
- It then retrieves the manager using `dbo:manager`.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war
WHERE {
  # Wars involving Toyotomi Hidenaga
  {
    ?hidenagaWar dbo:wikiPageWikiLink dbr:Toyotomi_Hidenaga .
    ?hidenagaWar dbo:location dbr:Japan .
    BIND(dbr:Toyotomi_Hidenaga AS ?entity)
    BIND(?hidenagaWar AS ?war)
  }
  
  # Wars involving Toyotomi Hideyoshi's child (Toyotomi Hidenaga)
  {
    ?childWar dbo:wikiPageWikiLink dbr:Toyotomi_Hidenaga .
    ?childWar dbo:location dbr:Japan .
    BIND(dbr:Toyotomi_Hidenaga AS ?entity)
    BIND(?childWar AS ?war)
  }
}
```",4,4,5,2,3,2,3,28,0,4,2,0.0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?vitesseTeam dbo:manager ?manager .
  ?vitesseTeam rdfs:label ""SBV Vitesse""@en .

  # Manager's nationality as West Germany
  ?manager dbo:nationality dbr:West_Germany .

  # Manager of VfL Bochum
  ?bochumTeam dbo:manager ?manager .
  ?bochumTeam rdfs:label ""VfL Bochum""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Find the war associated with Jean Baptist, Comte d'Arco
  ?war dbo:relatedTo dbr:Jean_Baptist,_Comte_d%27Arco .
  
  # Ensure the war is also a television show and societal event
  ?war rdf:type dbo:TelevisionShow ;
       rdf:type dbo:SocietalEvent .

  # Find the commander in this war
  ?commander dbo:commanded ?war .

  # Find the force associated with Michał Kazimierz Pac
  ?force dbo:relatedTo dbr:Micha%C5%82_Kazimierz_Pac .
  
  # Ensure the force is an event and military conflict
  ?force rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .

  # Find the successor of this commander who is a politician and office holder
  ?successor dbo:predecessor ?commander ;
             rdf:type dbo:Politician ;
             rdf:type dbo:OfficeHolder .

  # Reference to George Ducas
  OPTIONAL { ?commander dbo:relatedTo dbr:George_Ducas }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?fellowship dbo:recipient ?awardee .
  ?fellowship rdf:type dbo:AustralianLaureateFellowship .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
}
```

### Explanation

- **PREFIX**: We define `dbo` for DBpedia ontology and `dbr` for DBpedia resources.
- **SELECT**: We are interested in the variable `?awardee`.
- **WHERE**:
  - `?fellowship dbo:recipient ?awardee`: Links the fellowship to its recipient.
  - `?fellowship rdf:type dbo:AustralianLaureateFellowship`: Ensures we're looking at the Australian Laurele Fellowship.
  - `?awardee dbo:nationality dbr:Australia`: Filters recipients by nationality, specifically Australia.
  - `?awardee dbo:occupation ?occupation`: Retrieves the occupation of the awardee.
  - `FILTER(CONTAINS(LCASE(?occupation), ""scientist""))`: Ensures that the occupation contains the term ""scientist"", case-insensitively.

This query should return the names or identifiers of individuals who meet all specified criteria.",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?janetMovieProducer ?actorWorkProducer WHERE {
  # Janet Gaynor's claim to fame (movie)
  ?janetClaimToFame a dbo:Film ;
                    dbo:starring dbr:Janet_Gaynor .
  
  # Producer of the movie
  ?janetClaimToFame dbo:producer ?janetMovieProducer .

  # Actor who played Johnny Doughboy
  ?johnnyDoughboyFilm a dbo:Film ;
                      dbo:starring ?actorWhoPlayedJohnnyDoughboy .
  
  FILTER(CONTAINS(LCASE(?johnnyDoughboyFilm), ""johnny doughboy""))

  # Work associated with the actor and its producer
  ?actorWork a dbo:Film ;
             dbo:starring ?actorWhoPlayedJohnnyDoughboy .

  ?actorWork dbo:producer ?actorWorkProducer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person dbo:child dbr:William_II_of_Sicily .
  ?person foaf:parent ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?manager WHERE {
  # Find the successor league of 2006-07 VfL Bochum season
  ?successorLeague a dbo:SoccerLeagueSeason ;
                   dbo:succeededBy dbr:2006%E2%80%9307_VfL_Bochum_season .

  # Find the team in this successor league
  ?team a dbo:SoccerClub ;
        dbo:league ?successorLeague ;
        dbo:manager ?manager .

  # Ensure the manager is from West Germany
  ?manager dbo:nationality dbr:Germany_West .

  # Thomas Letsch's association with the team
  ?letschTeam a dbo:SoccerClubSeason ;
              dbo:team ?team ;
              dbo:manager ?manager .
  ?letsch dbp:name ""Thomas Letsch"" .
  ?letsch dbo:manages ?letschTeam .

  # Get the native of West Germany who was the manager
  ?native dbo:nationality dbr:Germany_West ;
          dbo:birthPlace ?place .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?movie WHERE {
  dbr:Smartbomb dbo:author ?author .
  ?author dbo:actedIn ?movie .
  ?movie dbo:actor ?actor .
  FILTER(?actor != ?author)
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?grandchild
WHERE {
  # Identify Carl, Duke of Württemberg and his predecessor
  dbr:Claude_Wilhelm_Duke_of_W%C3%BCrttemberg dbo:parent ?predecessor .
  
  # Albrecht is a child of the predecessor
  ?albrecht dbo:parent ?predecessor ;
           rdf:type dbo:Person ;
           rdfs:label ""Albrecht, Duke of Württemberg""@en .

  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_Archduchess_of_Austria dbo:parent ?parentOfMargarete .
  
  # Find a grandchild (child of a child) of the predecessor who is royalty
  ?child1 dbo:parent ?predecessor ;
          rdf:type dbo:Person .
  ?grandchild dbo:parent ?child1 ;
              rdf:type dbo:Royalty .

  # Ensure the grandchild is related to the parent of Archduchess Margarete Sophie
  ?grandchild dbo:parent ?parentOfMargarete .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?father .
  
  # Isabella of Austria
  dbr:Isabella_of_Austria dbo:father ?father .
  
  # Maximilian I, Holy Roman Emperor
  ?father dbo:child dbr:Maximilian_I,_Holy_Roman_Emperor .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Duke ;
          foaf:name ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Alexander of Württemberg
  VALUES (?alexander) { dbr:Aleksandr_of_W%C3%BCrttemberg }

  # First generation child
  ?child1 dbo:parent ?alexander .
  
  # Second generation child
  ?child2 dbo:parent ?child1 .

  # Third generation child (Carl, Duke of Württemberg)
  ?carl dbo:parent ?child2 ;
        rdfs:label ""Carl, Duke of W%C3%BCrttemberg""@en .

  # Find Carl's predecessor
  ?predecessor dbo:succeededBy ?carl .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRoyalParent
WHERE {
  # Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:spouse ?child1 .

  # Child married to Prince Augustus William of Prussia
  ?child1 dbo:spouse dbr:Prince_Augustus_William_of_Prussia .

  # Parent of this spouse who is a royalty
  dbr:Prince_Augustus_William_of_Prussia dbo:parent ?royalParent .
  
  # Ensure the parent is a royalty
  ?royalParent rdf:type dbo:Monarch .

  # Find the child of this royal parent
  ?royalParent dbo:child ?childOfRoyalParent .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?child .
  ?child dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  ?tupac a dbo:MusicalArtist ;
         foaf:name ""Tupac Shakur"" ;
         dbp:birthName ""Lesane Parish Crooks"" .
  
  ?stormzy a dbo:MusicalArtist ;
           foaf:name ""Stormzy"" ;
           dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .

  ?tupac dbo:musicalArtist ?artist1 .
  ?stormzy dbo:musicalArtist ?artist2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?leader dbo:country dbr:West_Germany .
  ?leader dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""chancellor"")) .
  
  ?administration dbo:headOfState ?leader .
  ?administration a dbo:Country .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member ?player .
  ?team dbo:coach dbr:Juan_Carlos_Molina_(footballer) .
}
```

This query assumes that Juan Carlos Molina is a coach of teams, and we are interested in the players who are members of those teams.",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the movie with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Find actors in that movie
  ?movie dbo:starring ?actor .

  # Ensure the actor is a parent of Amy Arbus
  ?actor dbo:child dbr:Amy_Arbus .

  # Find Mariclare Costello's spouse and their child
  ?spouse dbo:spouse dbr:Mariclare_Costello .
  ?spouse dbo:child ?child .

  # Ensure the actor is a parent of this child
  ?actor dbo:parentOf ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?parent rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  ?parent dbo:child ?child .

  ?child rdfs:label ?name .
  
  OPTIONAL { 
    ?spouse rdfs:label ""Prince Augustus William of Prussia""@en .
    ?spouse dbo:spouse ?child .
  }
}
```",2,2,3,1,2,3,2,20,1,9,0,0.1,1.0,0.18181818181818182
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Karl Gustav von Baggovut""@en .
  
  ?person dbo:nationality dbr:Russian_Empire .

  ?commandership dbo:commander ?person ;
                 dbo:conflict ?war .

  FILTER EXISTS { ?war dbo:place dbr:Russia }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:commander ?commander .
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
}
```

### Explanation

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology properties.
  - `dbr:` is used for DBpedia resources.

- **SELECT Clause**: We are selecting the variable `?commander`.

- **WHERE Clause**:
  - `?campaign dbo:commander ?commander` finds the commander of a campaign.
  - `?campaign rdfs:label ""French campaign in Egypt and Syria""@en` identifies the specific campaign by its label.

This query should return Napoleon Bonaparte as the commander of the French campaign in Egypt and Syria.",1,1,2,1,1,3,3,71,0,0,48,0,0.0,0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # The Shadow's alter ego
  ?shadowCharacter dbo:alterEgo ?realPerson .
  FILTER (str(?shadowCharacter) = ""The_Shadow_(character)"")

  # Actor in ATL (film)
  ?atlFilm dbo:starring ?actor .
  FILTER (str(?atlFilm) = ""ATL_(film)"")

  # Check if the real person is an actor
  ?realPerson a dbo:Actor .

  # Ensure the actor is the same for both roles
  VALUES (?actor) { ?realPerson }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace ?authorBirthPlace
WHERE {
  # Vince Gilligan's award awardee (assuming Emmy Award)
  dbr:Vince_Gilligan dbo:award dbr:Emmy_Award .
  
  # Find the birthplace of the awardee of the Emmy Award
  ?awardee dbo:award dbr:Emmy_Award ;
          dbo:birthPlace ?awardeeBirthPlace .

  # Author of ""El Deafo""
  dbr:Cece_Bell dbo:authorOf dbr:El_Deafo .
  
  # Find the birthplace of Cece Bell
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timezone
WHERE {
  ?kiyosu a dbo:PopulatedPlace ;
          rdfs:label ""Kiyosu""@en .
  OPTIONAL { ?kiyosu dbo:timeZone ?timezone . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?movieActor ?album ?song 
WHERE {
  # T.I. as an artist
  dbr:T.I. dbo:profession ?professional .
  
  # Movies with T.I.
  ?movie dbo:starring dbr:T.I. ;
         foaf:name ?movieName .
  ?actor dbo:starring ?movie ;
         foaf:name ?movieActor .

  # Albums by T.I.
  ?album dbo:artist dbr:T.I. ;
         foaf:name ?albumName .

  # Songs that are musical works
  ?song dbo:composer dbr:T.I. ;
        dbo:workType dbr:Songs ;
        foaf:name ?songName .
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?actor WHERE {
  VALUES ?film { dbr:A_Star_Is_Born_(1937_film) }
  
  ?film dbo:producer ?producer .
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native
WHERE {
  # Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Get the native of this place
  ?native dbo:nativePlace ?birthPlace .

  # Find Hon. Mary Frances Bowes-Lyon's parent
  dbr:Hon._Mary_Frances_Bowes-Lyon dbo:parent ?parent .
  
  # Match the native with the parent
  FILTER (?native = ?parent)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Identify Napoleon Bonaparte
  ?napoleon a dbo:Person ;
            foaf:name ""Napoleon I""@en ;
            dbo:award ""Knight Commander of the Order of the Bath"" ;
            dbo:militaryCommanderOf dbr:French_Egyptian_Campaign .

  # Find events related to military forces and societal events
  ?event dbo:agent ?napoleon ;
         a ?eventType .
  
  FILTER (?eventType IN (dbo:MilitaryConflict, dbo:SocietalEvent))
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find films where Johnny Doughboy is an actor
  ?film dbo:actor dbr:Johnny_Doughboy .
  
  # Assume claim to fame can be inferred by popularity or awards (not directly available)
  OPTIONAL { ?film dbo:award ?award . }
  
  # Get the producer of this film
  ?film dbo:producer ?producer .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Faisal_bin_Hussein dbo:spouse ?parent . 
  ?parent dbo:child ?child .
  ?child dbo:nationality ?nationality .
  FILTER EXISTS { ?nationality rdfs:label ""Royal""@en }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  dbr:Vince_Gilligan dbo:award ?award .

  ?award dbo:recipient ?awardee .

  ?awardee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the commander of the Russo-Polish War (1654–1667)
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:dateStart ""1654""^^xsd:gYear ;
    dbo:dateEnd ""1667""^^xsd:gYear
  ] .
  
  ?commander dbo:role [ 
    a dbo:MilitaryCommand ; 
    dbo:agent ?war 
  ] .

  # Find the successor who is a politician and an office holder
  ?successor dbo:succeededBy ?commander ;
             a dbo:Politician ;
             dbo:officeHolder true .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find individuals with profession ""Actor""
  ?person dbo:occupation dbr:Actor .
  
  # Find actor of the TV show ""Dispatches from Elsewhere""
  OPTIONAL { 
    ?tvShow dbo:starring ?actor .
    FILTER (str(?tvShow) = ""Dispatches_from_Elsewhere_(TV_series)"")
  }
  
  # Ensure the person is also an actor in the TV show
  VALUES (?actor) {
    ?person
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person foaf:name ""Koichirō""@en .
  ?person dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Nick Curran"" .
  ?person a dbo:MusicalArtist .
}
```

This query selects individuals (`?person`) who have the birth name ""Nick Curran"" and are classified as a `MusicalArtist` in DBpedia.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace, ?authorBirthPlace WHERE {
    # Awardee associated with Vince Gilligan
    ?award dbo:recipient ?person .
    ?award dbo:name ""Primetime Emmy Award for Outstanding Writing for a Drama Series"" .
    ?person dbo:birthPlace ?awardeeBirthPlace .
    FILTER EXISTS { dbr:Vince_Gilligan dbo:creatorOf dbr:Breaking_Bad }

    # Author of El Deafo
    dbr:El_Deafo dbo:author ?author .
    ?author dbo:birthPlace ?authorBirthPlace .
    FILTER EXISTS { ?author dbo:nationality dbr:United_States }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?party WHERE {
  # Find Roger Pryor (actor)
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" .

  # Find his spouse
  ?roger dbo:spouse ?spouse .

  # Identify the ruling party in Central, Louisiana
  ?location dbr:Central,_Louisiana ;
            dbo:government ?government .
  
  ?government dbo:rulingParty ?party .

  # Check if the spouse is a member of this party
  ?spouse dbo:memberOfParty ?party .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?bobbyShmurda dbo:birthName ""Bobby Shmurda"" .
  ?bobbyShmurda foaf:name ?fullName .
  ?person dbo:birthName ?fullName .
  FILTER(?person != ?bobbyShmurda)
}
```

This query does the following:
- It looks for an entity (`?bobbyShmurda`) with a `dbo:birthName` of ""Bobby Shmurda.""
- It retrieves the full name associated with this entity using `foaf:name`.
- It then finds another person (`?person`) who has the same birth name.
- The `FILTER(?person != ?bobbyShmurda)` ensures that we do not return Bobby Shmurda himself.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?work a dbo:Book ;
        dbo:country dbr:United_States ;
        dbo:author ?person .
  
  ?person a dbo:Politician, dbo:OfficeHolder ;
          dbo:officeHeld ?office .
  
  ?office dbo:organization dbr:North_Carolina_Air_National_Guard ;
          dbo:title ""Commander""@en .

}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfTheCountry
WHERE {
  # Theodor Heuss's native place and its administration (country)
  dbr:Theodor_Heuss dbo:nativePlace ?theoNativePlace .
  ?theoNativePlace dbo:country ?nativeOfTheCountry .

  # VfL Bochum's manager and his native place
  dbr:VfL_Bochum dbo:manager ?bochumManager .
  ?bochumManager dbo:nativePlace ?managerNativePlace .
  ?managerNativePlace dbo:country ?nativeOfTheCountry .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Identify the ruling party in that settlement
  ?rulingParty dbp:government ?government ;
               dbo:country ?country .
  ?government dbo:location ?deathPlace .

  # Find a member of this ruling party who is both a political party and an organization
  ?partyMember dbo:memberOf ?rulingParty ;
               a dbo:PoliticalParty, dbo:Organization .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Find child of Baeda Maryam I
  ?child1 dbo:parent dbr:Baeda_Maryam_I .
  
  # Find child of Dawit I
  ?child2 dbo:parent dbr:Dawit_I .
  
  # Ensure these children are related (e.g., siblings)
  FILTER(?child1 != ?child2) 
  
  # Identify their father
  ?father dbo:child ?child1 ;
          dbo:child ?child2 .

  # Ensure the father is a royalty and an office holder
  ?father dbo:occupation dbr:Monarch ;
          dbo:officeHolder true .
  
  # Find the grandfather (father of the father)
  ?grandfather dbo:child ?father .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInJuanCarlosMolina ?teamOfPabloAimar
WHERE {
  # Find the team for Juan Carlos Molina
  dbp:playerIn ?juanCarlosMolinaTeam .
  ?juanCarlosMolinaTeam dbo:player dbp:Juan_Carlos_Molina .

  # Find the team for Pablo Aimar
  dbp:playerIn ?pabloAimarTeam .
  ?pabloAimarTeam dbo:player dbp:Pablo_Aimar .

  BIND(?juanCarlosMolinaTeam AS ?playerInJuanCarlosMolina)
  BIND(?pabloAimarTeam AS ?teamOfPabloAimar)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent ?greatGrandchild
WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Father's parent (grandfather) who is a royalty
  ?father dbo:father ?grandparent .
  ?grandparent rdf:type dbo:Monarch .

  # Stephen V of Hungary and his predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Predecessor's child who is a royalty
  ?predecessor dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Child's child (great-grandchild)
  ?royalChild dbo:child ?grandchild .
  ?grandchild dbo:child ?greatGrandchild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?startTerm ?endTerm ?party WHERE {
  VALUES ?person { dbr:Brian_Kemp }
  
  ?person dbo:positionHeld ?office .
  ?office dbo:termStart ?startTerm ;
          dbo:termEnd ?endTerm ;
          dbo:memberOfParty ?party .
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maximilian I as parent of Charles V
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # Charles V as parent of Isabella of Austria
  ?child dbo:spouse ?isabellaParent .
  ?isabellaParent dbo:child dbr:Isabella_of_Austria .

  # Charles V as parent of Philip I of Castile
  ?child dbo:spouse ?philipParent .
  ?philipParent dbo:child dbr:Philip_I_of_Castile .

  # Ensure the child is a royalty
  ?child rdf:type dbo:Monarch .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?singer ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en ;
          dbo:birthName ?realName .
  
  OPTIONAL { ?person dbo:song ?song . }
  
  ?person dbo:profession ?singer .
  ?person dbo:memberOfBand ?band .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?calderEventMilitaryForce WHERE {
  dbr:Battle_of_Fort_Royal dbo:militaryUnit ?battleMilitaryForce .

  ?calderEvent dbo:agent dbr:Robert_Calder ;
               a dbo:SocietalEvent ;
               dbo:militaryUnit ?calderEventMilitaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Carl, Duke of Württemberg's predecessor
  ?carl a dbo:Duke ;
        foaf:name ""Carl, Duke of Württemberg"" .
  
  ?predecessor dbo:succeededBy ?carl .

  # Find Duke Philipp's child
  ?philipp a dbo:Duke ;
           foaf:name ""Duke Philipp of Württemberg"" .
  
  ?child1 dbo:childOf ?philipp .

  # Find the grandchild (child of the child)
  ?grandchild dbo:childOf ?child1 .

  # Check if the predecessor is also the grandchild
  FILTER (?predecessor = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName ?profession
WHERE {
  ?film dbo:title ""ATL""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbp:profession ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander WHERE {
  # Find the author of ""Back to Work"" book
  dbr:Back_to_Work_(book) dbo:author ?author .

  # Find a commander in World War I associated with the United States Navy
  ?war dbo:name ""World War I""@en .
  ?war dbo:participatingOrganisation dbr:United_States_Navy .
  ?commander dbo:rank ?rank ;
             dbo:serviceInMilitaryOrganization dbr:United_States_Navy ;
             dbo:commanded ?unit .
  FILTER EXISTS { ?unit dbo:participatedIn ?war }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo WHERE {
  # The Shadow created by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Find alter ego or related professional singer
  OPTIONAL { 
    ?character dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:profession dbr:Singer .
    
    # Check for connection to Bob Thompson (musician)
    ?alterEgo dbo:associatedBand dbr:The_Bob_Thompson_Band .
  }
  
  FILTER(?character = dbr:The_Shadow)
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the album ""Lasso the Moon""
  dbr:Lasso_the_Moon_album dbo:workExample ?film .

  # Ensure it is also a work
  ?film a dbo:Film .

  # Get actors involved in the film
  ?film dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria and his parent
  dbr:Charles_Joseph,_Archduke_of_Austria dbo:parent ?parent .

  # Step 2: Determine the child of this parent
  ?parent dbo:child ?child .

  # Step 3: Find out who is the father of this child
  ?child dbo:father ?commander .

  # Step 4: Check if this person was a commander in the Thirty Years' War
  OPTIONAL { ?commander dbo:occupation dbr:Thirty_Years'_War_commander . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York ;
          a dbo:Politician ;
          dbo:officeHolder true .
  
  ?work dbo:author ?person ;
        a dbo:Book ;
        a dbo:CreativeWork .

}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shelbyOaksActor ?albumArtist ?goldenMasterProfession
WHERE {
  # Shelby Oaks Actor
  dbr:Shelby_Oaks dbo:starring ?actor .
  ?actor rdfs:label ?shelbyOaksActor .

  # What You Know (T.I. song) Album Artist
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  ?album dbo:artist ?albumArtist .

  # The Golden Master Series Alter Ego Profession
  dbr:The_Golden_Master_series dbo:character ?alterEgo .
  ?alterEgo dbo:profession ?goldenMasterProfession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?societalEvent ?militaryConflict
WHERE {
  # Find the commander of the Sinking of Prince of Wales and Repulse
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander .

  # Find societal events related to this commander
  ?commander dbo:participatedIn ?societalEvent .
  FILTER EXISTS { ?societalEvent a dbo:SocietalEvent } .

  # Find military conflicts related to this commander
  ?commander dbo:participatedIn ?militaryConflict .
  FILTER EXISTS { ?militaryConflict a dbo:MilitaryConflict } .
}
```",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Rainer_Weiss dbo:award dbr:Award_Name .

  dbr:Award_Name dbo:host ?host .

  ?host a dbo:EducationalInstitution .
  
  ?host dbo:show ?show .
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Step 1: Find Myat Hpone Pyo's predecessor
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .
  
  # Step 2: Find Minye Kyawswa's child
  ?childMinyeKyawswa dbo:parent dbr:Minye_Kyawswa ;
                    a dbo:Person .

  # Step 3: Determine the parent of that child
  ?parentChildMinyeKyawswa dbo:child ?childMinyeKyawswa ;
                           a dbo:Person .
  
  # Step 4: Identify the child of this parent
  ?entity dbo:parent ?parentChildMinyeKyawswa ;
          a dbo:Person .

  FILTER (?predecessor = ?entity)
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?show WHERE {
  ?person rdfs:label ""Afeez Oyetoro""@en .
  ?movie dbo:starring ?person .
  ?movie rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Film, dbo:TVSeries)) .

  OPTIONAL { ?movie dbo:basedOn ?show . }
  OPTIONAL { ?show rdf:type ?type2 .
             FILTER (?type2 IN (dbo:Film, dbo:TVSeries)) }
}
```",2,3,3,2,1,3,2,20,4,176718,0,2.263442016274148e-05,1.0,4.526781571472222e-05
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?artists)
WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent"" ;
             dbo:occupation ?profession .

  # Find Elorm Kabu Amenyah and his associated musical artist
  ?elormKabu dbp:birthName ""Elorm Kabu Amenyah"" ;
             dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbo:mother dbr:Dorothea_of_Lorraine .
  ?person dbo:father ?father .
}
```

This query assumes that Dorothea of Lorraine is listed as a mother in the DBpedia dataset, which might not always be the case. If she's more commonly referenced as a child, you might need to adjust the property used (e.g., `dbo:child`).",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Eric_Clapton dbo:bandMember ?band .
}
```

This query will return the bands that Eric Clapton is a member of. Note that DBpedia resource identifiers (like `dbr:Eric_Clapton`) are used to refer to specific entities.",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  # Find Pacely and their associated artist
  ?pacely a dbo:MusicalArtist ;
          foaf:name ""Pacely"" .
  
  OPTIONAL { 
    ?pacely dbo:associatedWith ?artist1 .
  }
  
  # Find an artist from Central Region, Ghana
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          a dbo:MusicalArtist ;
          foaf:name ?name .
  
  OPTIONAL {
    ?person foaf:givenName ?givenName ;
            foaf:familyName ?familyName .
    
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?fullName)
    
    FILTER(?fullName = ?name)
  }
  
  # Link the two artists
  ?person dbo:associatedWith ?artist2 .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorName ?spouseName WHERE {
  # Part 1: Actor of ""Always"" (1989)
  ?film dbo:title ""Always""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(LANG(?actorName) = 'en')

  # Part 2: Spouse of an Awardee from Janusz Kamiński's awards
  dbr:Janusz_Kamiński dbo:awardReceived ?award .
  
  ?award dbo:recipient ?awardee .
  ?awardee dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER(LANG(?spouseName) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find awards related to Janusz Kamiński
  ?award dbo:recipient dbr:Janusz_Kamiński .
  
  # Step 2: Find actors of the film ""Paradise (2013 film)""
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?film), LCASE(""paradise_(2013_film)"")))

  # Step 3: Check if there is an overlap
  ?award dbo:recipient ?actor .

  # Step 4: Find the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?force
WHERE {
  ?person dbo:award dbr:Medal_of_Honor .
  ?person dbo:award dbr:Gillmore_Medal .
  ?person dbo:birthPlace dbr:Charleston,_South_Carolina .

  OPTIONAL { ?person dbo:militaryService ?service . }
  OPTIONAL { ?service dbo:member ?force . }

  FILTER (regex(str(?person), ""Medal of Honor"", ""i"") && regex(str(?person), ""Gillmore Medal"", ""i""))
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find the award given by Edmund Hakewill-Smith
  ?award dbo:awardedBy dbr:Edmund_Hakewill-Smith .
  
  # Identify the awardee of this award
  ?recipient dbo:receivedAward ?award .

  # Find the war associated with Tom Phillips (Royal Navy officer)
  ?war dbo:commandedBy dbr:Tom_Phillips_(Royal_Navy_officer) .

  # Determine the force related to both the awardee and the war
  ?force dbo:participatedIn ?war .
  ?force dbo:member ?recipient .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chennupati Jagadish""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthday ""1955-02-22""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?movie a dbo:Film .
  ?movie rdfs:label ""Movie Name""@en .  # Replace ""Movie Name"" with the actual movie title
  ?movie dbo:producer ?producer .
}
```",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?childName WHERE {
  VALUES ?dawitI { dbr:Dawit_I }
  
  ?dawitI dbo:wikiPageID ?reference .
  ?dawitI dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,5,3,0.0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?manager a dbo:SoccerManager ;
           a dbo:SportsManager ;
           dbo:team dbr:Hong_Kong_C .
  
  ?reference a dbo:Organization ;
             a dbo:SportsClub ;
             a dbo:SportsTeam ;
             a dbo:SoccerClub ;
             rdfs:label ""Hong Kong C""@en .

  ?manager dbo:playerInTeam ?reference .
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  # Identify the book ""Smartbomb"" and its author
  dbr:Smartbomb dbo:author ?author .

  # Find movies related to this author
  ?author dbo:film ?movie .
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:Peter_IV_of_Aragon dbo:birthName ?realName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:genre dbr:Television_show ;
         dbo:workExample ?work .
  
  ?work dbo:creator ?author .

  FILTER EXISTS { ?movie dbo:starring dbr:Vera_Lynn }

  VALUES ?author { dbr:Vera_Lynn }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Archduchess Helena of Austria and her spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Spouse's child who is royalty
  ?child dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  # This child must also be a child of Archduchess Margarete Sophie of Austria
  ?child dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .

  # This child is a grandchild of Duke Philipp of Württemberg
  ?grandparent dbo:parent dbr:Duke_Philipp_of_Württemberg .
  ?child dbo:parent ?grandparent .

  # Find the predecessor (likely parent) of this royal child
  ?predecessor dbo:parent ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandStuartTosh ?bandBillyLyall ?memberDavidPatonBand
WHERE {
  # Find the band associated with Stuart Tosh
  ?stuartTosh dbo:associatedMusicalArtist ?bandStuartTosh .
  FILTER (str(?stuartTosh) = ""Stuart_Tosh"")

  # Find the band associated with Billy Lyall
  ?billyLyall dbo:associatedMusicalArtist ?bandBillyLyall .
  FILTER (str(?billyLyall) = ""Billy_Lyall"")

  # Find a band member of the band associated with David Paton
  ?davidPaton dbo:associatedMusicalArtist ?bandDavidPaton .
  ?member dbp:memberOf ?bandDavidPaton .
  FILTER (str(?davidPaton) = ""David_Paton"")
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Tom Phillips as a Royal Navy officer
  ?tomPhillips a dbo:NavyOfficer ;
              foaf:name ""Tom Phillips"" .

  # Find the ship (force) associated with him
  ?commandPosition dbo:positionHeldBy ?tomPhillips .
  ?commandPosition dbo:ship ?force .

  # Confirm he was awarded Commander of the Order of the British Empire
  ?awards dbo:recipient ?tomPhillips ;
          dbo:name ""Commander of the Order of the British Empire"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  ?city a dbo:Settlement .
  ?city dbo:country dbr:Pakistan .
  FILTER (
    (CONTAINS(LCASE(?cityLabel), ""heart of pakistan"") ||
     CONTAINS(LCASE(?cityLabel), ""paris of the east"") ||
     CONTAINS(LCASE(?cityLabel), ""city of gardens"") ||
     CONTAINS(LCASE(?cityLabel), ""city of literature""))
  )
  ?city rdfs:label ?cityLabel .
  FILTER (LANG(?cityLabel) = 'en')
}
```

This query does the following:
- Selects entities that are a type of `dbo:Settlement`.
- Filters those settlements to only include ones in Pakistan (`dbo:country`).
- Uses `FILTER` with `CONTAINS` and `LCASE` to match any of the nicknames, ensuring case insensitivity.
- Ensures labels are in English.",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?darrylArtist ?elormArtist ?rodProfession
WHERE {
  # Find Darryl Paa Kwesi Bannerman-Martin and his associated musical artist
  ?darryl dbo:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?darryl dbo:associatedMusicalArtist ?darrylArtist .

  # Find Elorm Kabu Amenyah and his associated musical artist
  ?elorm dbo:name ""Elorm Kabu Amenyah""@en .
  ?elorm dbo:associatedMusicalArtist ?elormArtist .

  # Find Rod Argent's profession
  ?rod dbo:name ""Rod Argent""@en .
  ?rod dbo:profession ?rodProfession .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?referenceToPeterIV
WHERE {
  # Martin of Aragon (Martin I of Sicily)
  dbr:Martin_I_of_Sicilia dbo:parent dbr:James_II_of_Aragon .

  # Children of James II who are royalty
  ?child dbo:parent dbr:James_II_of_Aragon .
  ?child a dbo:Monarch .

  # Reference to Peter IV (Peter the Ceremonious)
  ?referenceToPeterIV dbo:spouse ?child .
  ?referenceToPeterIV rdfs:label ""Peter IV of Aragon""@en .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbpedia:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?child dbo:father ?father .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Philip I of Castile's children who are royalty
  ?child dbo:parent dbr:Philip_I_of_Castile .
  ?child a dbo:Monarch .

  # Commander in Siege of Padua who is royalty
  ?commander dbo:role dbr:Siege_of_Padua .
  ?commander a dbo:Monarch .
  
  # Common child between Philip I's children and the commander's children
  ?commonChild dbo:parent ?child ;
               dbo:parent ?commander .

  # Find the father of this common child
  ?commonChild dbo:father ?father .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Find administrations that are Spanish
  ?administration dbo:country dbr:Spain .
  
  # Link administration to its tenant or leader
  ?administration dbo:leader ?tenant .

  # Ensure the tenant is associated with PSOE
  ?tenant dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Archduke Charles Joseph of Austria
  ?charlesJoseph a dbo:Person ;
                foaf:name ""Archduke Charles Joseph of Austria""@en .
  
  # Parent of Archduke Charles Joseph
  ?parent dbr:Charles_VII,_Holy_Roman_Emperor ;
          dbo:child ?charlesJoseph .

  # Child of the parent (could be Charles Joseph or a sibling)
  ?sibling dbo:parent ?parent .

  # Father of this child
  ?father dbo:child ?sibling .

  # Step 2: Cecilia Renata of Austria
  ?ceciliaRenata a dbo:Person ;
                 foaf:name ""Cecilia Renata of Austria""@en .
  
  # Father of Cecilia Renata
  ?fatherOfCecilia dbr:Ferdinand_II,_Holy_Roman_Emperor ;
                   dbo:child ?ceciliaRenata .

  # Child of this father (could be Cecilia Renata or a sibling)
  ?sibling2 dbo:parent ?fatherOfCecilia .

  # Step 3: Commander in the Thirty Years' War
  ?person dbo:commanderInWar dbr:Thirty_Years'_War ;
           dbo:child ?sibling .
  
  FILTER (?father = ?person && ?sibling2 = ?sibling)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character WHERE {
  dbr:Walter_B._Gibson dbo:creatorOf ?work .
  
  ?work rdf:type dbo:FictionalCharacter .

  OPTIONAL { ?work dbo:genre dbr:Comics . }

  BIND(?work AS ?character)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:album dbr:The_Miseducation_of_Lauryn_Hill ;
          dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { 
    ?person dbo:occupation dbr:Writer .
  }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    # Find entities related to VfL Bochum in the 2007-08 season
    ?entity dbo:sportTeam dbr:VfL_Bochum.
    
    # Ensure the entity is a player
    ?entity a dbo:SoccerPlayer.

    # Ensure the entity is also classified as a sports club, organization, and soccer club
    ?entity a dbo:SportsClub .
    ?entity a dbo:Organization .
    ?entity a dbo:SoccerClub .

    # Filter by the specific season (2007-08)
    OPTIONAL { 
        ?season dbo:sportTeam dbr:VfL_Bochum ;
                dbo:startDate ?start ;
                dbo:endDate ?end .
        FILTER (?start <= ""2007-07-01""^^xsd:date && ?end >= ""2008-06-30""^^xsd:date)
    }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the associated musical artist of David Paton
  {
    SELECT ?artist WHERE {
      ?person dbo:associatedMusicalArtist ?artist .
      ?person rdfs:label ""David Paton""@en .
    }
  }

  UNION

  # Find the associated musical artist of Billy Lyall
  {
    SELECT ?artist WHERE {
      ?person dbo:associatedMusicalArtist ?artist .
      ?person rdfs:label ""Billy Lyall""@en .
    }
  }

  # Retrieve band members for each found artist
  ?artist dbo:bandMember ?bandMember .
}
```",3,3,4,2,2,2,3,28,0,4,3,0.0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?player .
  
  ?player a dbo:SoccerPlayer ;
          a dbo:Actor .

  ?athlete dbo:birthday ""1955-02-22""^^xsd:date .
  ?athlete a dbo:Athlete .
  ?player dbo:starring ?athlete .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Renata_Kamberova> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person foaf:name ""Bob Thompson""@en .
  ?person a dbo:Musician .
  ?person dbo:band ?band .
}
```

This query does the following:

- Uses `foaf:name` to find entities with the name ""Bob Thompson"".
- Ensures that these entities are of type `dbo:Musician`.
- Retrieves any bands (`?band`) associated with this musician using the property `dbo:band`.",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?war ?tvShow ?societalEvent
WHERE {
  # Find Yurii Khmelnytsky's successor
  ?yuriikhmelnytsky dbo:succeededBy ?successor .
  ?yuriikhmelnytsky dbp:name ""Yurii Khmelnytsky""@en .

  # Find Jean Baptist, Comte d'Arco and his war
  ?jeanbaptist dbo:commanded ?war .
  ?jeanbaptist dbp:name ""Jean Baptist, Comte d'Arco""@en .

  # Connect the war to a television show
  ?tvShow dbo:subject ?war .
  ?tvShow rdf:type dbo:TelevisionSeries .

  # Connect the war to a societal event
  ?societalEvent dbo:relatedTo ?war .
  ?societalEvent rdf:type dbo:SocietalEvent .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavaria (dbo:spouse|dbo:partner) ?father .
  
  # Children of Maria Anna
  ?child dbo:parent dbr:Maria_Anna_of_Bavaria ;
         dbo:parent ?father .

  # Grandchildren of Maria Anna
  ?grandchild dbo:parent ?child .

  # The grandchild must be royalty and a commander in a war
  ?grandchild rdf:type dbo:Monarch ;
              dbo:militaryCommander ?war .

  # War related to Algerian War as societal event, event, and television show
  ?war dbo:socialEvent dbr:Algerian_War ;
       dbo:event dbr:Algerian_War ;
       dbo:televisionShow dbr:Algerian_War .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
    # Step 1: Find Stephen V of Hungary's predecessor
    ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
    
    # Step 2: Identify the spouse of Charles II of Naples
    ?spouse dbo:spouse dbr:Charles_II_of_Naples ;
            dbo:spouse ?predecessor .

    # Step 3: Find the child of the predecessor
    ?child dbo:parent ?predecessor .
    
    # Step 4: Identify the child of that child who is royalty
    ?childOfChild dbo:parent ?child ;
                  a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the film ""Storm in a Teacup""
  dbr:Storm_in_a_Tea_Cup dbo:producer ?producer .

  # Get the birthplace of the producer
  ?producer dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find the parent of Roger III, Duke of Apulia
  ?parent dbo:spouse ?rogerIII .
  ?rogerIII foaf:name ""Roger III"" ;
            dbo:title dbr:Duke_of_Apulia .

  # Find children of this parent
  ?parent dbo:child ?child .

  # Ensure the child is also a child of Elvira of Castile, Queen of Sicily
  ?elvira dbo:spouse ?parent .
  ?elvira foaf:name ""Elvira of Castile"" ;
          dbo:title dbr:Queen_of_Sicily .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the North Carolina Air National Guard unit
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""North Carolina Air National Guard""@en .
  
  # Identify commanders of this unit
  ?unit dbo:commander ?commander .

  # Ensure the commander is an office holder and a politician
  ?commander dbo:occupation dbr:Politician ;
            dbo:officeHolder true .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"SELECT ?player WHERE {
  ?team a dbo:SoccerTeam ;
        dbo:manager ?manager .
  
  ?manager dbo:occupation ?occupation1, ?occupation2 .

  FILTER (?occupation1 = dbr:Sports_management OR ?occupation2 = dbr:Sports_management)
  FILTER (?occupation1 = dbr:Soccer_management OR ?occupation2 = dbr:Soccer_management)

  ?team rdfs:label ""Hong Kong C Team""@en .
  
  OPTIONAL { ?manager foaf:name ?player . }
}
```

This query does the following:
- Identifies a team (`?team`) that is a soccer team and has a manager (`?manager`).
- Checks if the manager's occupations include both sports management and soccer management.
- Filters for the specific team ""Hong Kong C Team.""
- Optionally retrieves the name of the manager as `?player`.",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find Alberto Ruiz-Gallardón's residence
  ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
  
  # Find the commander's office associated with Manuel Pinto da Costa
  ?office dbo:officeHolder dbr:Manuel_Pinto_da_Costa ;
          a dbo:MilitaryCommanderOffice .

  # Ensure this office is linked to a military conflict and societal event involving Manuel Pinto da Costa
  ?conflict dbo:participant dbr:Manuel_Pinto_da_Costa ;
            a dbo:MilitaryConflict, dbo:SocietalEvent .
  
  ?office dbo:relatedTo ?conflict .

  # Find the tenant of both the residence and the office
  ?tenant dbo:residence ?residence ;
          dbo:officeHolder ?office .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
    # Find wars involving William Bayne as a commander
    ?bayneWar dbo:commander dbr:William_Bayne ;
             rdf:type dbo:MilitaryConflict .

    # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
    ?regimentWar dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
                rdf:type dbo:MilitaryConflict .

    # Ensure both conditions are met for a single military force
    ?bayneWar dbo:militaryForce ?militaryForce .
    ?regimentWar dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
    ?person dbo:nationality dbr:Spanish ;
            dbo:country dbr:Spain .
    
    ?person dbo:residence dbr:Santiago_de_Compostela .

    ?office dbo:leader ?person ;
            dbo:election dbr:2009_Galician_regional_election .

    ?person dbo:residence ?residence .
    ?residence a dbo:Country .
    BIND(?residence AS ?country)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Princess_Muna_al-Hussein dbo:spouse ?husband .
  ?husband dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Find the commander in the Great Turkish War
  ?war dbo:participatedIn dbr:Great_Turkish_War .
  ?commander dbo:positionHeld ?role .
  ?role rdfs:label ""Commander""@en .
  
  # Find Yurii Khmelnytsky and his successor
  dbr:Yurii_Khmelnytsky dbo:succeededBy ?successor .
  
  # Ensure the commander is also the successor of Yurii Khmelnytsky
  FILTER (?commander = ?successor)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbpedia-owl:Person .
  ?person rdfs:label ""Miguel Maura""@en .
  OPTIONAL { ?person dbp:party ?party . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Poland .
}
```

This query uses the `dbo:country` property to find entities where Poland is listed as the country. The prefix `dbr:` is used for resources, and in this case, it refers to the resource representing Poland.",1,1,2,1,1,3,2,20,0,0,108,0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland .
  ?person dbo:birthPlace dbr:Russian_Empire .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",3,3,4,1,3,2,3,28,1,0,0,1.0,1.0,1.0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = ""en"")
}
```",2,2,3,2,1,2,3,28,0,0,87,0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?show ?musicalArtist WHERE {
  # Find the show that is a movie featuring Afeez Oyetoro
  ?show dbo:starring dbr:Afeez_Oyetoro .
  ?show rdf:type dbo:Film .

  # Get the actor of the show (Afeez Oyetoro)
  ?actor foaf:name ""Afeez Oyetoro""@en .

  # Find Tiwa Savage and her associated musical artist
  ?tiwa foaf:name ""Tiwa Savage""@en .
  ?tiwa dbo:birthName dbr:Cynthia_Ikponmwenosa_Morgan .
  
  # Assuming the associated musical artist is a collaborator or similar relationship
  ?tiwa dbo:associatedMusicalArtist ?musicalArtist .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- Uses `rdfs:label` to find the DBpedia resource for ""The Shadow.""
- Utilizes `dbo:alterEgo` to retrieve the alter ego of this character.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  ?band rdfs:label ""Der Blau""@en .
  ?band dbo:member ?member .
  ?member rdf:type owl:Thing .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfEleonore WHERE {
  dbr:Eleonore_of_Austria_queen_of_Poland dbo:father ?fatherOfEleonore .

  dbr:Maria_Anna_of_Bavary_(1574-1616) dbo:child ?royalChild .
  
  ?royalChild rdf:type dbo:Monarch .

  ?royalChild dbo:father ?fatherOfRoyalChild .

  FILTER (?fatherOfEleonore = ?fatherOfRoyalChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdf:type dbo:Book .
  ?book rdfs:label ""Promises to Keep""@en .
  ?book dbo:author ?author .
}
```

This query does the following:

- Selects the `?author` variable.
- Looks for a resource (`?book`) that is of type `dbo:Book`.
- Ensures the book's label (title) matches ""Promises to Keep"" in English.
- Retrieves the author using the `dbo:author` property.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgoProfession ?actorPoliticianName WHERE {
  # Step 1: Find The Shadow's alter ego profession
  dbr:The_Shadow dbo:profession ?alterEgoProfession .

  # Step 2: Find actors in ""Ab Kya Hoga"" and ""Dispatches from Elsewhere""
  OPTIONAL { 
    ?actor dbo:title dbr:Ab_Kya_Hoga .
    ?actor dbo:occupation dbr:Actor .
    ?actor dbo:profession ?actorPoliticianProfession .
    FILTER EXISTS { ?actor dbo:occupation dbr:Politician } .
  }
  
  OPTIONAL {
    ?actor2 dbo:title dbr:Dispatches_from_Elsewhere .
    ?actor2 dbo:occupation dbr:Actor .
    ?actor2 dbo:profession ?actorPoliticianProfession2 .
    FILTER EXISTS { ?actor2 dbo:occupation dbr:Politician } .
  }

  # Step 3: Match professions
  VALUES (?actorPoliticianProfession) {
    ?actorPoliticianProfession
    ?actorPoliticianProfession2
  }
  
  FILTER(?alterEgoProfession = ?actorPoliticianProfession)
  
  # Get the name of the actor-politician
  BIND(CONCAT(LCASE(str(?actor)), "" "", LCASE(str(?actor2))) AS ?actorPoliticianName)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountryLabel WHERE {
  # Thomas Letsch as manager of VfL Bochum
  ?letsch a dbo:SoccerManager ;
          dbo:managedTeam dbr:VfL_Bochum .

  # Leader of West Germany during relevant period (assuming Helmut Kohl for example)
  ?leader dbo:country dbr:West_Germany ;
          dbo:positionTitle ""Chancellor""@en .

  # Native country of the leader
  ?leader dbo:nationality ?nativeCountry .

  # Get label for native country
  ?nativeCountry rdfs:label ?nativeCountryLabel .
  
  FILTER(LANG(?nativeCountryLabel) = 'en')
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?profession 
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,721,4189,20859,0.14684317718940937,0.03341056533827618,0.05443563608909022
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # David Paton's associated musical artist
  dbr:David_Paton dbo:musicalArtist dbr:Magnificent_Six .

  # Band members of Magnificent Six
  ?member dbo:memberOf dbr:Magnificent_Six .
  
  # Wizards of Waverly Place soundtrack writer and their associated musical artist
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?writer .
  ?writer dbo:musicalArtist ?artist .

  # Band members of the artist associated with the writer
  ?member2 dbo:memberOf ?artist .

  # Find common band member
  FILTER (?member = ?member2)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnusBirthPlace ?residentBirthPlace
WHERE {
  # Find an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  
  # Get the birthplace of this alumnus
  ?person dbo:birthPlace ?alumnusBirthPlace .

  # Find a resident of Sofia
  ?resident dbo:residence dbr:Sofia .
  
  # Get the birthplace of this resident
  ?resident dbo:birthPlace ?residentBirthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?trueSelf WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur"" .
  
  OPTIONAL { 
    ?artist foaf:nick ?trueSelf .
  }
  
  OPTIONAL {
    ?artist dbo:birthName ?trueSelf .
  }
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneForce ?battleForce ?commander
WHERE {
  # Military force of William Bayne (Royal Navy officer)
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryBranch ?bayneForce .
  }

  # Military forces involved in the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedInMilitaryConflict ?battleEvent .
    ?battleEvent dbo:involvedMilitaryForce ?battleForce .
  }

  # Commander of the 30th (Cambridgeshire) Regiment of Foot
  OPTIONAL {
    dbr:30th_Regiment_of_Foot dbo:commandedBy ?commander .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Saw Min Phyu""@en .
  ?person dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type ?royaltyType . 
                 VALUES ?royaltyType { 
                   dbo:Monarch 
                   dbo:RoyalFamilyMember
                 }
               }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbp:title ""Earl of Derby""@en .
  
  # Step 2: Find his parent who is both a politician and an office holder
  ?parent dbo:child ?edward ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Determine the child of that parent
  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlaceLabel WHERE {
  # Theodor Heuss as a person
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .

  # His role as President of Germany
  dbr:Theodor_Heuss dbo:officeHolder dbr:President_of_Germany .

  # Find his birthplace (native place)
  dbr:Theodor_Heuss dbo:birthPlace ?nativePlace .
  
  # Get the label for the native place
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  # Find The Fabulous Thunderbirds and their associated bands/artists
  OPTIONAL { 
    dbr:The_Fabulous_Thunderbirds dbo:associatedBand ?artist .
    FILTER(?artist = dbr:Nick_Curran)
    BIND(""The Fabulous Thunderbirds is associated with Nick Curran"" AS ?reference)
  }
  
  # Find Nick Curran and his associated bands/artists
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedBand ?band .
    FILTER(?band = dbr:The_Fabulous_Thunderbirds)
    BIND(""Nick Curran is associated with The Fabulous Thunderbirds"" AS ?reference)
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find Hu Jieqing and their spouse who is a writer
  ?huJieqing dbo:spouse ?spouse .
  FILTER (str(?huJieqing) = ""Hu_Jieqing"")
  
  ?spouse rdf:type dbo:Writer .
  
  # Get the works of this spouse
  ?work dbo:author ?spouse .
  
  # Find the country related to these works
  ?work dbp:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional ?associatedArtist
WHERE {
  # Find Rod Argent's profession
  ?rodArgent dbo:profession ?profession .
  VALUES ?rodArgent { <http://dbpedia.org/resource/Rod_Argent> }

  # Find Paul McCartney and an associated musical artist
  ?paulMcCartney dbp:associatedBandOrMusicalArtist ?associatedArtist .
  VALUES ?paulMcCartney { <http://dbpedia.org/resource/Paul_McCartney> }
  
  # Find a professional in the same profession as Rod Argent who is associated with the artist
  ?professional dbo:profession ?profession .
  ?professional dbp:associatedBandOrMusicalArtist ?associatedArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerTeam ?team1 .
  
  ?player1 dbo:playsFor dbr:Juan_Carlos_Molina_(footballer) ;
           dbo:playsFor ?person .
  
  ?player2 dbo:playsFor dbr:Sergio_Agüero ;
           dbo:playsFor ?person .

  FILTER(?team1 != ?person)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentSara ?parentOmar WHERE {
  # Find the parent of Princess Sara bint Faisal
  ?sara a dbo:Person ;
        dbp:name ""Princess Sara bint Faisal""@en .
  ?sara dbo:childOf ?parentSara .

  # Find the parent of Prince Omar bin Faisal
  ?omar a dbo:Person ;
        dbp:name ""Prince Omar bin Faisal""@en .
  ?omar dbo:childOf ?parentOmar .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?spouse WHERE {
  # Charles I of Hungary
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Father's parent (Grandfather)
  ?father dbo:parent ?grandfather .
  
  # Check if grandfather is royalty
  ?grandfather a dbo:Monarch .

  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Match the grandfather with the spouse
  FILTER (?grandfather = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Identify the Conservative Republican Party (Spain)
  dbr:Conservative_Party_(Spain) a dbo:PoliticalParty ;
    dbo:leader ?leader .

  # Ensure the leader is a politician
  ?leader dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(?occupation), ""politician"")
}
```

### Explanation

- **Prefixes**: `dbo` for DBpedia ontology and `dbr` for DBpedia resources.
- **SELECT Clause**: We are interested in the leader (`?leader`) of the party.
- **Pattern Matching**:
  - The party is identified by its resource URI: `dbr:Conservative_Party_(Spain)`.
  - The property `dbo:leader` links a political party to its leader.
  - The occupation of the leader is checked using `dbo:occupation`, and we filter results where ""politician"" is part of the occupation description.

This query should return the leader of the Conservative Republican Party (Spain) who is also recognized as a politician in DBpedia.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Republican_Party_(United_States) dbo:member ?person .
}
```

This query selects individuals (`?person`) who are members of the Republican Party in the United States.",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .

  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Determine the spouse of this father
  ?spouse dbo:spouse ?father .

  # Step 4: Identify Béla IV of Hungary and find his child, then that child's child
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  ?belasGrandchild dbo:child ?belasChild .
  
  # Ensure the final entity is a royalty
  FILTER (?spouse = ?belasGrandchild && 
          EXISTS { ?spouse dbo:royalty ""true""^^xsd:boolean } )
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the father of Philip I, Prince of Taranto
  ?philip1 dbo:father ?father .
  
  FILTER(STRSTARTS(STR(?philip1), ""http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto""))

  # Find the spouse (mother) of this father
  ?father dbo:spouse ?spouse .

  # Ensure this spouse is also a parent of Charles Martel of Anjou
  ?spouse dbo:child dbr:Charles_Martel_of_Anjou .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?realName WHERE {
  ?person dbo:memberOfBand ?band .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .

  ?band dbo:bandMember ?member .
  ?member foaf:name ""Kim Wilson""@en .

  OPTIONAL { 
    ?band dbp:realName ?realName .
  }

  BIND(""The Fabulous Thunderbirds"" AS ?bandName)
}
```

This query does the following:
- Identifies a person (`?person`) who is a member of a band (`?band`).
- Filters for the band with the label ""The Fabulous Thunderbirds"".
- Checks if Kim Wilson is a member of this band.
- Optionally retrieves the real name of the band if available.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?actor WHERE {
  # Find the parent of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  
  ?amyArbus dbo:parent ?parent .

  # Find an actor in the movie Judgment: The Trial of Julius and Ethel Rosenberg
  ?movie dbp:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en ;
         dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthday
  dbr:Marty_Polloi dbo:birthday ?birthday .

  # Find athletes born on the same date
  ?person a dbo:Athlete ;
          dbo:birthday ?sameBirthday .
  
  FILTER (?sameBirthday = ?birthday)
  
  BIND(?person AS ?athlete)
}
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .

  # His child
  ?child1 dbo:parent ?alexander .
  
  # Child's child (grandchild)
  ?child2 dbo:parent ?child1 .
  
  # Grandchild's child (great-grandchild)
  ?person dbo:parent ?child2 .

  # Carl, Duke of Württemberg
  ?carl a dbo:Person ;
        foaf:name ""Carl, Duke of Württemberg"" .

  # Predecessor of Carl
  ?predecessor dbo:successor ?carl .
  
  # Archduke Charles Louis of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Louis of Austria"" .

  # His child
  ?child3 dbo:parent ?archduke .
  
  # Child's child (grandchild)
  ?person2 dbo:parent ?child3 .

  # Ensure the person is royalty
  ?person a dbo:Royalty .

  # Intersection condition
  FILTER (?person = ?person2 && ?person = ?predecessor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Minye Kyawswa
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  # Step 2: Find his children
  ?child dbo:parent ?minyeKyawswa .

  # Step 3: Determine the parents of those children
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneConflict ?commander ?regimentConflict ?militaryForce ?calderForce
WHERE {
  # William Bayne's military conflict and its commander
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflicts ?bayneConflict .
  ?bayneConflict dbo:commander ?commander .

  # 30th (Cambridgeshire) Regiment of Foot's military conflict and its force
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:militaryConflicts ?regimentConflict .
  ?regimentConflict dbo:militaryForce ?militaryForce .

  # Robert Calder's military force
  dbr:Robert_Calder dbo:militaryForce ?calderForce .
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:timeZone dbr:Japan_Standard_Time .
}
```

This query selects entities (`?entity`) that have the `dbo:timeZone` property set to `dbr:Japan_Standard_Time`.",2,2,3,2,1,3,2,20,0,0,8916,0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  # Identify John McDermott, the American artist
  dbr:John_McDermott_(artist) dbo:birthPlace ?birthPlace .
  
  # Find his death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .

  # Ensure that the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Ferdinand Albert II and his children
  ?ferdinandAlbert2 dbo:child ?child .

  # Duchess Luise's spouse
  ?luise dbo:spouse ?luisesSpouse .

  # The child of Ferdinand Albert II who is a spouse of Duchess Luise's spouse
  ?child dbo:spouse ?luisesSpouse .
}
```",3,3,4,2,2,3,2,20,1,8952,0,0.00011169440411035407,1.0,0.00022336385972749609
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Colombia .
}
```

This query does the following:
- Uses `dbo:country` to find entities that have Colombia as their country.
- Selects these entities and returns them.",1,1,2,1,1,2,3,28,0,0,2141,0,0.0,0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entity WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find entities related to her birthplace
  ?entity dbo:location ?birthPlace .

  # Find the war associated with an awardee of 25
  ?award dbo:number ""25"" .
  ?award dbo:relatedTo ?war .
  
  # Link the entity found in the birthplace to the war
  ?entity dbo:participatedIn ?war .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:father ?parent .
  ?parent dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  ?spouse rdf:type dbo:Noble .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring dbr:Audrey_Hepburn .
  ?movie a dbo:Film .
  ?movie dbo:director dbr:Janusz_Kamiński .
  
  # Find the spouse of Janusz Kamiński
  ?spouse dbo:spouse dbr:Janusz_Kamiński .
  ?spouse dbo:starring ?movie .

  # Ensure the movie is a work and a film
  ?movie a dbo:Work .

  # Get actors from the movie
  ?movie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName WHERE {
  ?s foaf:name ""Sofia Petro""@en .
  ?s dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```

This query does the following:
- Uses `foaf:name` to find Sofia Petro.
- Utilizes `dbo:father` to identify her father.
- Retrieves the name of the father using `foaf:name`.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,2,1,0.5,0.6666666666666666,0.5714285714285715
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # George Ducas as a commander in a military conflict involving Michał Kazimierz Pac
  ?conflict dbo:commander dbr:George_Ducas .
  
  # Michał Kazimierz Pac involved in the same conflict
  ?conflict dbo:participant dbr:Michał_Kazimierz_Pac .

  # Successor of George Ducas, who is a politician and office holder
  ?successor dbo:predecessor dbr:George_Ducas .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:occupation ?profession . }

  FILTER (lang(?spouse) = 'en' || lang(?profession) = 'en')
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?event
WHERE {
    # Maria Anna of Bavaria and her child
    dbr:Maria_Anna_of_Bavaria (dbo:spouse|dbo:partner) ?husband .
    
    # Child who is royalty
    ?husband dbo:child ?child .
    ?child a dbo:Monarch .

    # Eleonore's father, who is also the husband of Maria Anna
    ?father dbr:Eleonore_of_Austria_Queen_of_Poland dbo:parent ?eleonore .
    ?father dbo:commanderInWar ?war .

    # Societal event related to 2nd Dragoon Regiment
    ?event a dbo:SocietalEvent ;
           dbo:eventType ?eventType ;
           dbo:relatedTo dbr:2nd_Dragoon_Regiment_(France) .
    
    FILTER(?child = ?eleonore && ?father = ?husband)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shirley Stoler""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?dawitI dbo:spouse ?spouse .
  ?dawitI dbo:child ?child .
  FILTER (str(?dawitI) = ""Dawit_I"")
}
```

This query assumes that Dawit I is represented in DBpedia with the resource identifier `Dawit_I`. It selects children linked to Dawit I through the `dbo:child` property.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?nativeCountry
WHERE {
  dbr:Jamsetji_Tata a dbo:Person .
  dbr:Jamsetji_Tata dbo:occupation ?work .
  ?work dbo:nativeCountry dbr:India .
  OPTIONAL { ?work dbo:nativeCountry ?nativeCountry }
}
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birthplace of Cece Bell, author of ""El Deafo""
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .

  # Birthplace of Glenn Youngkin, governor of Virginia
  dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace ;
                     dbo:positionHeld dbr:Governor_of_Virginia .

  # Birthplace of Vince Gilligan
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:bandMember ?band .
  ?band rdfs:label ?bandLabel .
}
```

This query does the following:
- It looks for a person (`?person`) with the label ""Kim Wilson.""
- It finds any band (`?band`) that this person is a member of.
- It retrieves the label (real name) of that band.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfFather
WHERE {
  # Step 1: Find Martin of Aragon
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .

  # Step 2: Identify his father
  ?father dbo:spouse ?martin ;
          dbo:child ?martin .

  # Step 3: Find the child of this father who is royalty
  ?father dbo:child ?childOfFather .
  ?childOfFather a dbo:Monarch .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Step 1: Find Archduchess Helena's spouse and their royal child
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  
  ?child dbo:parent ?spouse ;
         a dbo:Royalty .

  # Step 2: Find Archduke Charles Louis' royal children and their royal grandchildren
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?royalChild .
  
  ?grandchild dbo:parent ?royalChild ;
              a dbo:Royalty .

  # Step 3: Find the predecessor of the grandchild from Helena's spouse's child
  ?predecessor dbo:succeededBy ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musician ?associatedArtist WHERE {
  # Identify the person born as ""Pacely""
  ?person a dbo:MusicalArtist ;
          foaf:name ""Tupac Shakur"" .

  # Find their professional role in Musician
  ?person dbo:profession dbr:Musician .

  # Get associated musical artists
  ?person dbo:associatedMusicalArtist ?associatedArtist .
  
  # Bind the musician to the person
  BIND(?person AS ?musician)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerAStarIsBorn ?producerTomSawyer ?professionalCharacter
WHERE {
  # Producers of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Producers of The Adventures of Tom Sawyer (1938)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Fictional character related to Kent Allard
  ?character dbo:alterEgo dbr:Kent_Allard .
  
  # Professional connection between producers and the fictional character
  OPTIONAL { ?producerAStarIsBorn dbo:profession ?professionalCharacter . }
  OPTIONAL { ?producerTomSawyer dbo:profession ?professionalCharacter . }

  FILTER(?professionalCharacter != dbr:None)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find albums by T.I.
  ?album dbo:artist dbr:T.I. ;
         dbo:song ?song .

  # Ensure the song is a musical work
  ?song rdf:type dbo:Songs .

  # Get actors involved in the album (assuming actor refers to contributors like singers)
  ?album dbo:contributor ?actor .
  
  FILTER (?actor != dbr:T.I.) # Exclude T.I. himself from results
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
  BIND(?person AS ?artist)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthplace ?smitaPatilBirthplace WHERE {
  # Find any awardee of the Sangeet Natak Akademi Fellowship
  ?awardee dbo:songAwarded ""Sangeet Natak Akademi Fellowship""@en .
  
  # Get the birthplace of the awardee
  ?awardee dbo:birthPlace ?awardeeBirthplace .

  # Find Smita Patil and her birthplace
  dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthplace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?band a dbo:MusicalGroup .
  ?band rdfs:label ""Cavalera Conspiracy""@en .
  FILTER (LANG(?band) = 'en') .

  ?band dbo:associatedBand ?artist .
  ?artist dbo:musicalArtist ?organization .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?club a dbo:FootballClub ;
        rdfs:label ""VfL Bochum""@en .
  OPTIONAL { 
    ?club dbo:manager ?manager .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mark Tournier""@en .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  BIND(?place AS ?settlement)
}",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Step 1: Find Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parent .

  # Step 2: Find Stephen V of Hungary's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Step 3: Find a child of the child who is royalty from the predecessor
  ?child1 dbo:childOf ?predecessor .
  ?child2 dbo:childOf ?child1 .
  ?child2 rdf:type dbo:Monarch .

  # Step 4: Identify Charles II of Naples' spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Step 5: Combine conditions to find the required individual
  FILTER (?parent = ?child2 && ?individual = ?spouse)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?alterEgo WHERE {
  # Step 1: Find Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Step 2: Find the father of that child
  ?father dbo:child ?child .
  
  # Step 3: Find the grandfather (father of the father)
  ?grandfather dbo:child ?father .
  
  # Step 4: Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder true .
  
  # Step 5: Reference Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?hashibaWars ?koichiroWars WHERE {
  # Hashiba Hidekatsu and his wars
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:spouse ?person1 .
    ?person1 dbo:birthName ""Koichirō""^^xsd:string .
    ?war dbo:participatedIn ?hashibaWars .
    ?hashibaWars dbo:location dbr:Japan .
  }

  # Person born as Koichirō and their wars
  OPTIONAL {
    ?koichiroPerson dbo:birthName ""Koichirō""^^xsd:string .
    ?war2 dbo:participatedIn ?koichiroWars .
    ?koichiroWars dbo:location dbr:Japan .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?person dbo:occupation dbo:Politician . }
  ?person dbp:party ?party .
}
```

Explanation:
- We use `foaf:name` to match the full name of Roy Leonardo Barreras Montealegre.
- The `dbo:Politician` class is used to ensure that the person is a politician.
- The `dbp:party` property retrieves the political party.",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
  BIND(?deathPlace AS ?settlement)
}
```",2,3,3,2,1,2,3,28,0,1,12,0.0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:givenName ""Augustus William""@en .
  ?person dbo:familyName ""of Prussia""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find Tupac Shakur's associated artist
  dbr:Lesane_Parish_Crooks dbo:associatedMusicalArtist ?artist1 .
  
  # Find an artist from Central Region, Ghana
  ?person dbp:nativePlace dbr:Central_Region_(Ghana) ;
          dbo:birthName ?birthName ;
          dbo:occupation dbr:Musician .
  ?person dbo:associatedMusicalArtist ?artist2 .

  FILTER (lang(?birthName) = 'en')
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?work
WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolderOf ?office ;
          dbo:commanderIn ?crisis .

  FILTER(?crisis = dbr:Third_Taiwan_Strait_Crisis)

  ?work dbo:author ?person ;
        a dbo:Book, dbo:WrittenWork .

  BIND(?person AS ?author)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  ?team a dbo:SoccerClub ;
        dbo:manager ?manager .
  
  ?manager dbo:nationality dbr:West_Germany ;
           dbo:birthDate ""1968-08-26""^^xsd:date ;
           rdf:type dbo:SportsManager .

  FILTER (strstarts(str(?team), str(dbr:VfL_Bochum)))

  BIND(STRAFTER(STR(?manager), ""http://dbpedia.org/resource/"") AS ?managerName)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeRegion ?personBirthPlace WHERE {
  # Find the award and its native region
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativeOf ?region .
  
  # Ensure the region is an American state and settlement
  ?region a dbo:State ;
          a dbo:Settlement ;
          dbp:country dbr:United_States_of_America .

  # Find Bobby Shmurda's birthplace
  OPTIONAL {
    dbr:Bobby_Shmurda dbo:birthName dbr:Robert_S._Shaw .
    dbr:Robert_S._Shaw dbo:birthPlace ?personBirthPlace .
  }

  # Return the native region of the award and Bobby Shmurda's birthplace
  BIND(?region AS ?nativeRegion)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?member
WHERE {
  # Find the DBpedia resource for ""Der Blau""
  VALUES ?derBlau { dbr:Der_Blau }

  # Get references related to ""Der Blau""
  ?derBlau dbo:wikiPageWikiLink ?reference .

  # Get members of ""Der Blau""
  OPTIONAL {
    ?derBlau dbo:member ?member .
  }
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .

  ?bandMember dbo:memberOfBand ?associatedArtist ;
              dbo:nativePlace dbr:Florida .

  ?bandMember dbp:birthdayBirthName ?birthName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies where Richard E. Grant is an actor
  ?movie dbo:starring dbr:Richard_E._Grant .
  
  # Ensure the movie is also a television show
  ?movie rdf:type dbo:TelevisionShow .

  # Get other actors involved in these television shows
  ?movie dbo:starring ?actor .
}
```",3,4,4,2,2,3,3,71,13,57,0,0.18571428571428572,1.0,0.3132530120481928
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?paternalGrandfather WHERE {
  # Dawit I and his child
  dbr:Dawit_I dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfDawitI .

  # Na'od's father
  dbr:Na'ad dbo:parent ?naodFather .

  # Na'od's paternal grandfather (father of Na'od's father)
  ?naodFather dbo:parent ?paternalGrandfather .

  # Check if the paternal grandfather is royalty and an office holder
  ?paternalGrandfather a dbo:Monarch ;
                     dbo:officeHolder ?office .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?actor ?profession
WHERE {
  # Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Find an actor of ""ATL""
  ?film dbo:title ""ATL""@en .
  ?film dbo:starring ?actor .

  # Check if they share a profession
  OPTIONAL { ?author dbo:profession ?profession . }
  OPTIONAL { ?actor dbo:profession ?profession . }

  FILTER(?author != ?actor) # Ensure they are different individuals
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander dbo:occupation dbr:Siege_of_Mukha ;
             a dbo:RoyalFamilyMember .

  # Find the parent of this royal commander
  ?parent dbo:child ?commander .

  # Find the child of this royal parent
  ?parent dbo:child ?child .

  # Connect to Lamont Cranston (The Shadow)
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Alfonso VI's child
  ?alfonsoChild dbo:child dbr:Alfonso_VI_of_León_and_Castile .
  
  # Grandchild of Alfonso VI
  ?grandchild dbo:parent ?alfonsoChild .

  # William I's royal child
  ?williamChild dbo:child dbr:William_I_of_Sicily ;
                a dbo:Monarch .

  # Roger III's parent
  ?rogerParent dbo:parent dbr:Roger_III,_Duke_of_Apulia .

  # Intersection of the relationships
  FILTER (?grandchild = ?williamChild && ?grandchild = ?rogerParent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find band members of The Alan Parsons Project
  ?album dbo:artist dbr:The_Alan_Parsons_Project .
  ?album dbo:performer ?bandMember .

  OPTIONAL {
    # Check if Stuart McBeath Tosh is a musical artist
    ?stuart a dbo:MusicalArtist ;
            foaf:name ""Stuart McBeath Tosh"" .

    # Find associated artists with Stuart McBeath Tosh
    ?association dbo:associatedWith ?stuart .
    ?association dbo:associatedWith ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity ?orderReference
WHERE {
  # Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .

  # Get entities related to the birthplace
  ?birthPlaceEntity a dbo:Place ;
                   dbo:location ?birthPlace .

  OPTIONAL {
    # Check if there is any reference to Order of the Medjidie
    ?orderReference dbo:relatedTo ?birthPlaceEntity .
    FILTER (CONTAINS(LCASE(?orderReference), ""order of the medjidie""))
  }
}
```",3,3,4,2,2,2,2,9,0,13,1,0.0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfWilliamII ?grandchildOfAlfonsoVI ?siblingOrCousinOfRogerIII
WHERE {
  # Father of William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?fatherOfWilliamII .

  # Grandchild of Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?childOfAlfonsoVI .
  ?childOfAlfonsoVI dbo:child ?grandchildOfAlfonsoVI .

  # Sibling or cousin of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRogerIII .
  ?parentOfRogerIII dbo:child ?siblingOrCousinOfRogerIII .
  
  # Find the intersection of these individuals
  FILTER (?fatherOfWilliamII = ?grandchildOfAlfonsoVI && ?fatherOfWilliamII = ?siblingOrCousinOfRogerIII)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?vinceGilliganBirthPlace ?ceceBellBirthPlace
WHERE {
  # Find Vince Gilligan's birthplace
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan"" ;
            dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  
  # Find Cece Bell's birthplace
  OPTIONAL {
    ?author a dbo:Person ;
            foaf:name ""Cece Bell"" ;
            dbo:birthPlace ?ceceBellBirthPlace .
    
    ?book dbo:author ?author ;
          rdfs:label ""El Deafo""@en .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .

  # Parent's father
  ?parent dbo:father ?father .

  # Commander in Siege of Padua (John of Nassau-Siegen)
  dbr:John_of_Nassau-Siegen dbo:spouse ?dorotheaParent .
  
  # Ensure the person is royalty
  ?father a dbo:Monarch ;
          dbo:spouse|dbo:child ?relation .

  FILTER(?parent = ?dorotheaParent)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?kimWilsonBand
WHERE {
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  ?nickCurran dbo:associatedMusicalArtist ?nickCurranArtist .

  ?kimWilson a dbo:MusicalArtist ;
             foaf:name ""Kim Wilson"" .
  ?kimWilson dbo:band ?kimWilsonBand .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Max_Born dbo:almaMater ?institution .
  
  ?institution rdf:type dbo:EducationalInstitution .

  ?show dbo:hostOrganization ?institution .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,1,2,1,1,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?parent dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) ;
          dbo:child ?politician .

  FILTER (?alumnus = ?parent)

  ?politician a dbo:Politician .

  ?politician dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Nicholas Michael Curran""@en .
  ?person dbo:birthName ""Nicholas Michael Curran"" .
  ?person a dbo:MusicalArtist .

  ?association dbo:artist ?person ;
               dbo:artist ?associatedArtist .
  
  FILTER(?associatedArtist != ?person)
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?player ?writer
WHERE {
  # Find the nickname of the Russia national football team
  dbr:Russia_national_football_team dbo:teamName ?nickname .

  # Find players associated with ""The First Glove""
  ?work dbo:title ""The First Glove""@en .
  ?work dbo:author ?writer .
  ?player dbo:playsFor dbr:Russia_national_football_team ;
          dbo:hasWork ?work .

}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  # Find the regiment
  VALUES ?regiment { dbr:30th_(Cambridgeshire)_Regiment_of_Foot }

  # Identify events (military conflicts) involving the regiment
  ?event dbo:participatedIn ?regiment .

  # Get the commander of the event
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?occupation WHERE {
  ?person dbp:birthName ""John Boxer"" .
  ?person dbo:occupation ?occupation .
}
```",2,2,3,2,1,2,2,9,0,0,39640,0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Athlete .
  ?person rdf:type dbo:SoccerPlayer .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1981 && MONTH(?date) = 12 && DAY(?date) = 1)
  
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,5,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?realName ?associatedArtist WHERE {
  # Find the band associated with Kim Wilson
  ?person dbo:name ""Kim Wilson""@en .
  ?person dbo:memberOf ?band .

  # Find Nicholas Michael Curran's real name and musical artist associations
  ?curran dbo:name ""Nicholas Michael Curran""@en .
  ?curran dbp:birthName ?realName .
  
  OPTIONAL {
    ?curran dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?settlement WHERE {
  # Linda Miller (actress)
  ?linda a dbo:Actor ;
         foaf:name ""Linda Miller"" .

  # Child of Linda Miller
  ?child dbo:parent ?linda ;
         dbp:nationality ""American"" .

  # Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
        dbo:award ?award .

  # Native of the award
  ?child dbp:nativeOfAward ?award .

  # Settlement that is American
  ?settlement a dbo:Settlement ;
              dbp:nationality ""American"" .

  # Relationship between child and settlement
  ?child dbo:placeOfBirth ?settlement .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  ?city a dbo:City ;
        rdfs:label ""Santiago de Compostela""@en .
  OPTIONAL { ?city dbo:mayor ?mayor . }
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:officialName ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerName ?profession 
WHERE {
  ?show dbr:Coke_Studio_Philippines .
  
  ?show dbo:producer ?producer .

  ?producer foaf:name ?producerName .

  ?producer dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?leaderOffice
WHERE {
  # Find the office of commander held by Manuel Pinto da Costa in a military conflict
  ?conflict dbo:type dbr:Military_conflict .
  ?conflict dbo:societal_event true .
  ?pinto dbo:office ?commanderOffice ;
         rdf:type dbo:Politician ;
         foaf:name ""Manuel Pinto da Costa""@en .

  # Find the office of leader held by Miguel Maura in a political party
  ?party dbo:type dbr:Political_party .
  ?maura dbo:office ?leaderOffice ;
         rdf:type dbo:Politician ;
         foaf:name ""Miguel Maura""@en .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the child of that spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: The parent of this child is the same as the spouse, so we use ?spouse directly

  # Step 4: Identify works featuring Herschel Bernardi and the spouse
  ?work dbo:starring dbr:Herschel_Bernardi ;
        dbo:starring ?spouse .

  # Step 5: Retrieve actors from these movies
  ?work dbo:starring ?actor .
}
```",5,6,6,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativeCountry WHERE {
  # VfL Bochum as a sports club, organization, and soccer club
  dbr:VfL_Bochum dbo:type ?type1 .
  FILTER (CONTAINS(LCASE(STR(?type1)), ""sports club"") || CONTAINS(LCASE(STR(?type1)), ""organization"") || CONTAINS(LCASE(STR(?type1)), ""soccer club""))

  # Manager of VfL Bochum in the 2007–08 season
  ?manager dbp:managedTeam dbr:VfL_Bochum .
  ?season dbo:team dbr:VfL_Bochum ;
          dbo:seasonStartYear ""2007""^^xsd:gYear ;
          dbo:seasonEndYear ""2008""^^xsd:gYear .

  # Manager of Thomas Letsch
  ?manager dbp:managedPlayer dbr:Thomas_Letsch .

  # Native country of the manager (West Germany)
  ?manager dbo:nationality ?nativeCountry .
  FILTER (STR(?nativeCountry) = ""Germany"")

  # Ensure the manager is associated with West Germany
  OPTIONAL {
    ?nativeCountry rdfs:label ?countryLabel .
    FILTER (CONTAINS(LCASE(STR(?countryLabel)), ""west germany""))
  }
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Archduke Charles Louis of Austria""@en .
  FILTER EXISTS { ?child a dbo:Monarch } 
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Philipp Albrecht, Duke of Württemberg's children
  ?philippAlbrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg ;
                       a dbo:Person .

  # Step 2: Duke Philipp of Württemberg's grandchildren
  ?dukePhilippGrandchild dbo:parent ?philippAlbrechtChild ;
                         a dbo:Person .

  # Step 3: Archduke Charles Louis of Austria's great-grandchildren who are royalty
  ?archdukeCharlesGreatGrandchild dbo:parent ?dukePhilippGrandchild ;
                                  a dbo:Royalty .

  # Find the intersection and predecessor
  ?individual rdf:type dbo:Person .
  ?individual dbo:parent ?archdukeCharlesGreatGrandchild .
  
  # Predecessor of the individual
  ?predecessor dbo:successor ?individual .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(YEAR(?film) = 1928)
  
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""Rustlers' Rhapsody""
  dbr:Rustler%27s_Rhapsody dbo:starring ?actor .
  
  # Get Frédéric Bouraly's profession
  dbr:Fr%C3%A9d%C3%A9ric_Bouraly dbo:profession ?bouralyProfession .

  # Find the actor's profession and match it with Frédéric Bouraly's
  ?actor dbo:profession ?actorProfession .
  
  FILTER (?actorProfession = ?bouralyProfession)
}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parentClass WHERE {
  dbpedia-owl:Photographer rdfs:subClassOf ?parentClass .
}
```

This query selects the parent class of ""Photographer"" by looking for any resource that is a subclass of it.",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbo:nationality dbr:United_States ; 
          dbo:birthPlace dbr:Florida ;
          dbo:occupation dbr:Musical_artist .
  ?person rdfs:label ?artist .
  FILTER (LANG(?artist) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,97,0,0.0,0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  # Find the writer of ""Always the Love Songs""
  ?book dbo:title ""Always the Love Songs"" ;
        dbo:author ?writer .

  # Find the commander in the Battle of Vienna
  ?battle dbo:name ""Battle of Vienna"" ;
          dbo:participatedInMilitaryForce ?militaryForce .
  
  ?commander dbo:rank ""Commander"" ;
             dbo:militaryConflict ?battle .

  # Ensure the military force is related to the Battle of Vienna
  ?militaryForce dbo:relatedEvent dbr:Battle_of_Vienna .

  # Find a television show and societal event related to the context
  OPTIONAL {
    ?tvShow dbo:title ?title .
    FILTER regex(?title, ""Always the Love Songs"", ""i"")
  }

  OPTIONAL {
    ?event dbo:name ?eventName .
    FILTER regex(?eventName, ""societal event"", ""i"")
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?residence WHERE {
  dbr:Ulster_Unionist_Party a dbo:PoliticalParty .
  ?partyLeader dbo:leader dbr:Ulster_Unionist_Party .
  ?partyLeader foaf:name ?leader .
  OPTIONAL { ?partyLeader dbo:residenceLocation ?residence . }
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war dbo:participatingMilitaryForce ?militaryForce .
  ?militaryForce rdfs:label ""Algerian War""@en .

  ?commander dbo:commanderOf ?militaryForce ;
             a ?eventType1, ?eventType2, ?eventType3 .

  FILTER(?eventType1 IN (dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow)) .
  
  ?archduke dbp:parent ?parent .
  ?parent dbp:child ?child .
  ?child dbp:father ?commander .

  VALUES ?archduke { <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find Bob Thompson's resource
  ?person a dbo:MusicalArtist ;
          dbp:profession ""Singer"" ;
          rdfs:label ""Bob Thompson (musician)""@en .
  
  # Ensure the person has a birth name
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  # Find the band associated with this person
  ?band dbo:member ?person .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?alterEgo WHERE {
  # Step 1: Identify Na'od
  ?na'od dbo:wikiPageRedirects db:Na'od .
  
  # Step 2: Find Na'od's Father
  ?na'od dbo:father ?father .

  # Step 3: Find the Grandfather (Father of the Father)
  ?father dbo:father ?grandfather .

  # Step 4: Check for Royalty and Office Holder
  ?grandfather dbp:title ?title .
  FILTER CONTAINS(LCASE(?title), ""king"" || ""queen"" || ""emperor"" || ""prince"" || ""duke"" || ""office holder"")

  # Step 5: Find the Alter Ego of The Shadow
  ?shadow dbo:wikiPageRedirects db:The_Shadow .
  ?shadow dbo:alterEgo ?alterEgo .
  FILTER (STR(?alterEgo) = ""Lamont Cranston"")
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES (?bayne) { dbr:William_Bayne }
  
  # Find resources that redirect to William Bayne
  OPTIONAL { ?redirect dbo:wikiPageRedirects ?bayne . 
             ?reference dbo:wikiPageRedirects ?redirect .
           }

  # Find resources that disambiguate William Bayne
  OPTIONAL { ?disambiguation dbo:wikiPageDisambiguates ?bayne .
             ?reference dbo:wikiPageDisambiguates ?disambiguation .
           }
  
  # Find resources linked to the page of William Bayne
  OPTIONAL { ?link dbo:wikiPageWikiLink ?bayne .
             ?reference dbo:wikiPageWikiLink ?link .
           }

  FILTER(?reference != ?bayne)
}
```

This query does the following:
- It uses `VALUES` to specify the resource for ""William Bayne"".
- It checks for resources that redirect to, disambiguate, or link to William Bayne.
- The `FILTER` ensures we exclude the original entity itself from the results.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?bouralyProfession .

  # Step 2: Find actors of ""Lasso the Moon""
  ?film a dbo:Film ;
        dbo:title ""Lasso the Moon""@en .
  
  ?actor dbo:actedIn ?film .

  # Step 3: Match professions
  ?actor dbo:profession ?actorProfession .
  FILTER (?bouralyProfession = ?actorProfession)
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Writer .
  ?person foaf:name ""Ian Gregson""@en .
  ?person dbo:award ?award .
}
```

This query does the following:
- Uses `dbo:Writer` to identify individuals who are writers, which is relevant for poets.
- Utilizes `foaf:name` to match Ian Gregson by name. Note that DBpedia might not have a direct entry for every individual, so this assumes there's an entry with his full name in English.
- Retrieves the awards using `dbo:award`.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workName WHERE {
  ?person dbo:birthPlace dbr:Birmingham .
  ?person rdfs:label ""Apache Indian""@en .
  ?person dbo:work ?work .
  ?work rdf:type dbo:MusicalWork .
  ?work rdfs:label ?workName .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  dbr:Kent_Allard dbo:alterEgoOf ?character .
  ?character dbo:profession ?professional .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?series WHERE {
  ?game rdfs:label ""The Shadow (video game)""@en .
  ?game dbo:character ?character .
  ?character dbo:basedOn ?comicsCharacter .
  ?comicsCharacter dbo:series ?series .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch ;
         rdfs:label ?childName .

  FILTER (lang(?childName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor1 ?actor2 WHERE {
  # Part 1: Actor of the album ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:songAlbum ?album .
  
  ?album dbo:performer ?artist .
  FILTER (str(?artist) = ""T.I."")

  ?album dbo:contributor ?actor1 .
  ?actor1 a dbo:Actor .

  # Part 2: Actor of the movie with the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .
  
  ?movie dbo:writer ?author .
  ?movie dbo:starring ?actor2 .
  ?actor2 a dbo:Actor .
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find children of William I of Sicily who are royalty
  ?child dbo:parent dbr:William_I_of_Sicily .
  ?child a dbo:Monarch .

  # Ensure the child is also a child of the parent of Roger III, Duke of Apulia
  ?parentOfRogerIII dbo:child dbr:Roger_III,_Duke_of_Apulia .
  ?child dbo:parent ?parentOfRogerIII .

  # Find the father of this child
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandSpouse WHERE {
  # Step 1: Find Duchess Luise of Brunswick-Wolfenbüttel
  ?duchess a dbo:Duchess ;
           foaf:name ""Luise of Brunswick-Wolfenbüttel"" .

  # Step 2: Find her spouse
  ?duchess dbo:spouse ?spouse .

  # Step 3: Find the spouse of that person (the grandSpouse)
  ?spouse dbo:spouse ?grandSpouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProf.

  # Find Richard Grant Esterhuysen and his works
  dbr:Richard_Grant_Esterhuysen dbo:birthName ""Richard Grant Esterhuysen""@en.
  
  # Check if he acted in a work that is both a movie and a television show
  ?work dbo:starring dbr:Richard_Grant_Esterhuysen .
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .

  # Find any professional overlap
  ?professional dbo:profession ?sinhaProf.
  ?professional dbo:starring dbr:Richard_Grant_Esterhuysen .
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Robert Lamar Thompson"" .
  OPTIONAL { ?person dbo:birthDate ?birthDate }
}
```

This query does the following:
- Uses `dbo:MusicArtist` to ensure the person is recognized as a musical artist.
- Matches the name ""Robert Lamar Thompson"" using `foaf:name`.
- Retrieves the birth date with an optional clause, allowing for cases where the birth date might not be available.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Battle of Fort Royal
  OPTIONAL {
    ?battle dbr:Battle_of_Fort_Royal .
    ?battle dbo:militaryUnit ?militaryForce .
  }
  
  # French campaign in Egypt and Syria
  OPTIONAL {
    ?campaign dbr:French_campaign_in_Egypt_and_Syria .
    ?campaign dbo:militaryUnit ?militaryForce .
    ?campaign dbo:commander ?commander .
  }

  FILTER(?militaryForce != '' || ?commander != '')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?parentOfEugeneProfession ?parentOfDoonArbus
WHERE {
  # Part 1: Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Part 2: Parent of Eugène Cattin's Profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
  ?eugeneProfession dbo:parentCategory ?parentOfEugeneProfession .

  # Part 3: Parent of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?parentOfDoonArbus .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Michał Kazimierz Pac as a commander in an event/military conflict
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commander ?force .
  
  # The force is an event and a military conflict
  ?force rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .

  # The commander is also a politician and office holder
  ?commander dbo:commander ?force ;
             (dbo:politicalPartyMember|dbo:officeHolder) ?role .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalDescendant WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Find father of Philip I, Prince of Taranto and his spouse
  ?father dbo:child dbr:Philip_I,_Prince_of_Taranto ;
          dbo:spouse ?spouse .

  # Step 3: Find child of the spouse (from step 2)
  ?spouseChild dbo:parent ?spouse ;
               a dbo:Person .

  # Step 4: Find royal descendant from the child
  ?royalDescendant dbo:child ?spouseChild ;
                   a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Territories administered from Copenhagen
  {
    ?copenhagen dbo:administrativeCenter ?territory .
    FILTER (str(?copenhagen) = ""Copenhagen"")
  }
  
  UNION
  
  # Territories under the administration of Olaf I of Denmark
  {
    ?olaf dbo:ruledTerritory ?territory .
    FILTER (str(?olaf) = ""Olaf_I_of_Denmark"")
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch ?archbishop WHERE {
  # Find the current King of Spain
  ?king a dbo:Monarch ;
        dbo:country dbr:Spain ;
        dbo:reignEndYear ?currentYear .
  
  FILTER (?currentYear >= year(now()) || !bound(?currentYear))
  
  BIND(strafter(str(?king), ""http://dbpedia.org/resource/"") AS ?monarch)

  # Find the current Archbishop of Santiago de Compostela
  ?archbishop a dbo:Archbishop ;
              dbo:office dbr:Santiago_de_Compostela_Cathedral ;
              dbo:termEndYear ?currentTerm .
  
  FILTER (?currentTerm >= year(now()) || !bound(?currentTerm))
  
  BIND(strafter(str(?archbishop), ""http://dbpedia.org/resource/"") AS ?archbishop)
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?award dbo:date ""25-01-01""^^xsd:date ;
         dbo:recipient ?awardee .
  
  OPTIONAL { 
    ?awardee dbo:memberOf ?organization .
    ?organization dbo:member ?person .
    ?person dbo:occupation dbr:Military_person .
    
    ?war dbo:participatedIn ?person .
  }
}
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Saw_Min_Phyu .

  # Step 2: Find the child of Saw Min Phyu's spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Check if this child is royalty and find their predecessor
  OPTIONAL { ?child a dbo:Royalty . }
  OPTIONAL {
    ?predecessor dbo:successor ?child ;
                 a dbo:Monarch .
  }

  # Step 4: Identify Myat Hpone Pyo's father
  ?father dbo:child dbr:Myat_Hpone_Pyo .

  # Step 5: Find the spouse of Myat Hpone Pyo's father (if royalty)
  OPTIONAL { ?father a dbo:Royalty . }
  ?spouseFather a dbo:Spouse ;
                dbo:spouse ?father .
  
  FILTER EXISTS {
    ?spouse dbr:Saw_Min_Phyu .
    ?child dbo:parent ?spouse .
    OPTIONAL { ?child a dbo:Royalty . }
    OPTIONAL { ?predecessor dbo:successor ?child ; a dbo:Monarch . }
    ?father dbo:child dbr:Myat_Hpone_Pyo .
    OPTIONAL { ?father a dbo:Royalty . }
    ?spouseFather a dbo:Spouse ;
                  dbo:spouse ?father .
  }

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonora_of_Austria dbo:father dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  OPTIONAL { 
    dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:commanderInMilitaryForce ?militaryForce .
    FILTER EXISTS {
      ?event dbo:relatedEvent ?militaryForce .
      ?event rdf:type dbo:SocietalEvent .
      ?tvShow dbo:depicts ?event .
      ?tvShow rdf:type dbo:TelevisionShow .
      
      ?algerianWar dbo:name ""Algerian War"" .
      ?algerianWar dbo:relatedMilitaryForce ?militaryForce .
    }
  }

  BIND(dbr:Ferdinand_II,_Holy_Roman_Emperor AS ?father)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer ?associatedArtist WHERE {
  # Find the writer of ""The Live Anthology""
  ?anthology dbo:author ?writer .
  ?anthology rdfs:label ""The Live Anthology""@en .

  # Ensure the writer is a musical artist
  ?writer dbo:occupation dbr:Musical_artist .

  # Find associations with $pacely
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist foaf:name ""$pacely"" .

  # Match the birth name to Darryl Paa Kwesi Bannerman-Martin
  ?writer foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify the child related to Saw Shwe Khet who is royalty and predecessor of Myat Hpone Pyo
  ?child dbo:parent ?father .
  ?child a dbo:Monarch .
  ?child dbo:predecessor dbr:Myat_Hpone_Pyo .
  ?child dbo:parentOf dbr:Saw_Shwe_Khet .

  # Ensure the parent of this child is also the parent of Min Hla Htut of Pyakaung
  ?father dbo:parent dbr:Min_Hla_Htut_of_Pyakaung .

  # Find the spouse of the father (who is royalty)
  ?father a dbo:Monarch .
  ?father dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbpedia:NewYorkState .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?childOfDawitI WHERE {
  # Baeda Maryam I's father
  OPTIONAL { 
    dbr:Baeda_Maryam_I dbo:father ?father .
  }
  
  # Hawkman as The Shadow's alter ego
  OPTIONAL {
    dbr:Hawkman dbo:alterEgoOf dbr:The_Shadow .
  }

  # Child of Dawit I
  OPTIONAL {
    dbr:Dawit_I dbo:child ?childOfDawitI .
  }
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria
  ?charlesJoseph a dbo:Person ;
                 dbp:father ?parent .

  # Parent's child who is also a commander in the Thirty Years' War and child of Ferdinand II
  ?child dbp:father ?parent ;
         dbo:commanderInWar ?thirtyYearsWar ;
         dbp:father ?ferdinandII .

  # Ferdinand II, Holy Roman Emperor
  ?ferdinandII a dbo:Person ;
               rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .

  # Thirty Years' War
  ?thirtyYearsWar rdfs:label ""Thirty Years' War""@en .

  # Find the father of this child
  ?child dbp:father ?father .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitaka ?region
WHERE {
  # Mitaka as a DBpedia resource
  dbr:Mitaka a dbo:AdministrativeArea ;
             dbo:timeZone ?timezone .

  # Linking timezone to Japan Standard Time region
  ?timezone rdfs:label ?region .
  FILTER (lang(?region) = 'en' && contains(lcase(str(?region)), ""japan standard time""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?birthPlaceCountry
WHERE {
  # Find Little Hat Jones
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones"" .

  # Find the institution in Georgia, U.S.
  ?person dbo:almaMater ?institution .
  ?institution dbo:location dbr:Georgia_(U.S._state) .

  # Find the birth place as a country
  ?person dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthPlaceCountry .
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbr:Arthur_Stanley_(British_politician) ;
          dbo:parent ?father .

  # Edward Stanley, 17th Earl of Derby
  ?edward a dbr:Edward_Stanley,_17th_Earl_of_Derby ;
          dbo:parent ?father .

  # Victor Stanley (Royal Navy officer)
  ?victor a dbr:Victor_Stanley_(Royal_Navy_officer) ;
          dbo:parent ?father .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Identify Sergio Agüero in DBpedia
  dbr:Sergio_Ag%C3%BCero dbo:teamMember ?team .
  
  # Find players who were also team members of the same teams as Agüero
  ?player dbo:teamMember ?team .
  
  FILTER(?player != dbr:Sergio_Ag%C3%BCero)
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region
WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Japan Standard Time""@en .
  ?timeZone dbp:country ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?battle ?force
WHERE {
  # Battle of Cape Finisterre (1805)
  { 
    VALUES ?battle { <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> }
    ?battle dbp:combatant ?force .
  }

  UNION

  # Battle of Fort Royal
  {
    VALUES ?battle { <http://dbpedia.org/resource/Battle_of_Fort_Royal> }
    ?battle dbp:combatant ?force .
  }
}
ORDER BY ?battle ?force",2,2,3,1,2,3,3,71,0,4,1,0.0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Find the actor of ""Paradise"" (2013)
  ?film a dbo:Film ;
        rdfs:label ""Paradise""@en .
  
  FILTER(CONTAINS(LANG(?film), ""en"")) # Ensure we're using English labels

  ?film dbo:starring ?actor .

  # Find the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?work ?birthplace WHERE {
  # Find Ethan Iverson's resource
  VALUES ?ethanIverson { dbr:Ethan_Iverson }
  
  # Get works associated with Ethan Iverson
  ?work dbo:artist ?ethanIverson .
  
  # Ensure the work is a musical artist or related to music
  ?work rdf:type ?type .
  FILTER (
    ?type = dbo:MusicalArtist ||
    ?type = dbo:Album || 
    ?type = dbo:Composition
  )
  
  # Get birthplace of the works (assuming works have associated artists with birthplaces)
  OPTIONAL { ?work dbo:artist dbr:Ethan_Iverson . }
  OPTIONAL {
    ?work dbo:composer ?composer .
    ?composer dbp:birthPlace ?birthplace .
  }
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace.
  ?birthPlace rdfs:label ?birthPlaceEntity.
}",2,2,3,2,1,2,3,28,0,2,104,0.0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find the parent of Min Hla Htut of Pyakaung
  ?parent dbo:spouse|dbo:child dbr:Min_Hla_Htut_of_Pyakaung .
  
  # Find the child of this parent
  ?child dbo:parent ?parent .

  # Ensure this child is a predecessor of Myat Hpone Pyo
  ?myatHponePyo dbo:predecessor ?child .
  dbr:Myat_Hpone_Pyo ?myatHponePyo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
    dbo:leader ?person .

  ?administration dbo:headOfGovernment ?person ;
                  dbo:country dbr:Spain .
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Francis I, Duke of Lorraine
  ?francis a dbo:Person ;
           dbp:name ""Francis I, Duke of Lorraine""@en .

  # Step 2: Identify his children who are royalties
  ?child dbo:spouse|dbo:childOf ?francis ;
         a dbo:Royalty .

  # Step 3: The father of these royal children is Francis I himself

  # Step 4: Find the parents of Francis I
  ?parent dbo:child ?francis .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Konrad Adenauer
  OPTIONAL {
    dbr:Konrad_Adenauer dbo:nationality ?nationalityAdenauer .
    ?nationalityAdenauer dbo:country ?nativeCountry .
  }
  
  # John Stegeman
  OPTIONAL {
    dbr:John_Stegeman dbo:nationality ?nationalityStegeman .
    ?nationalityStegeman dbo:country ?nativeCountry .
  }

  FILTER (isLiteral(?nativeCountry) && regex(str(?nativeCountry), ""country"", ""i""))
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?work dbo:author ?person ;
        a dbo:Book .
  BIND(?person AS ?author)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeRegion
WHERE {
  # Step 1: Identify Bobby Shmurda and the band
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en ;
          dbo:birthPlace dbr:New_York_City .

  ?band dbo:member ?person .
  ?band dbo:location dbr_New_York_(state) .

  # Step 2: Find the award associated with the band
  ?award dbo:recipient ?band .

  # Step 3: Identify the native region of the award
  ?award dbo:nativeRegion ?nativeRegion ;
         a dbo:Award .

  # Ensure the native region is also a state and settlement
  ?nativeRegion a dbo:State , dbo:Settlement .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Children of Philipp Albrecht, Duke of Württemberg
    ?child1 dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
    
    # Step 2: Grandchildren of Philipp Albrecht
    ?grandchild dbo:parent ?child1 .

    # Step 3: Children of Archduke Charles Louis of Austria
    ?child2 dbo:parent dbr:Archduke_Charles_Louis_of_Austria .

    # Step 4: Grandchildren of Archduke Charles Louis who are royalty
    ?royalGrandchild dbo:parent ?child2 .
    ?royalGrandchild a dbo:RoyalFamilyMember .

    # Step 5: Match the grandchild from Philipp Albrecht with royal grandchild
    FILTER (?grandchild = ?royalGrandchild)

    # Step 6: Find the predecessor (parent) of this matched individual
    ?predecessor dbo:child ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Identify Orson Welles by his birth name and profession
  dbr:Orson_Welles dbo:birthName ""Richard Grant Esterhuysen"" .
  dbr:Orson_Welles dbo:profession dbr:Actor .

  # Link Orson Welles to The Shadow character
  ?shadowCharacter dbo:portrayal dbr:Orson_Welles .
  ?shadowCharacter rdfs:label ""The Shadow""@en .

  # Find a movie that is also a television show
  ?movie dbo:starring dbr:Orson_Welles ;
         dbo:genre dbr:TelevisionFilm .

  # Get the actor of this movie
  ?movie dbo:starring ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warDavydov ?warAwardee ?entityInRussianEmpire
WHERE {
  # Wars associated with Alexander Lvovich Davydov
  ?person rdfs:label ""Alexander Lvovich Davydov""@en .
  ?person dbo:militaryConflict ?warDavydov .

  # Awardees of the Order of St. George, 4th class
  ?awardee dbo:recipientOf dbr:Order_of_St._George_(Russia) ;
           dbo:rank ""4th_class""@en .
  ?awardee dbo:militaryConflict ?warAwardee .

  # Ensure entities are related to the Russian Empire
  ?entityInRussianEmpire dbo:country dbr:Russian_Empire .

  FILTER (
    ?person != ?awardee &&
    ?warDavydov != ?warAwardee &&
    (strstarts(str(?warDavydov), str(?entityInRussianEmpire)) || 
     strstarts(str(?warAwardee), str(?entityInRussianEmpire)))
  )
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en ;
          dbo:birthDate ?birthDate ;
          dbo:occupation dbr:Politician .

  FILTER (STR(?birthDate) = ""1955-12-02""^^xsd:date)

  OPTIONAL { ?person dbo:almaMater ?almaMater }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?office WHERE {
  ?person rdfs:label ""Manuel Pinto da Costa""@en .
  ?person dbo:holdsPublicOffice ?office .
  ?office dbo:positionTitle ?title .
  FILTER CONTAINS(LCASE(?title), ""commander"") .

  ?office dbo:heldByPolitician true .
  
  ?force dbo:conflict ?militaryConflict .
  ?force rdf:type dbo:MilitaryConflict .
  ?force rdf:type dbo:SocietalEvent .
  
  ?person dbo:memberOf ?force .
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:child <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> .
  ?person rdf:type dbo:Person .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Cece Bell, author of El Deafo
  dbr:Cecily_Ann_Bell dbo:birthPlace ?authorBirthPlace .

  # Governor of Virginia
  SELECT ?currentGovernor (SAMPLE(?birthPlace) AS ?governorBirthPlace) WHERE {
    ?currentGovernor a dbo:Politician ;
                    dbo:stateOrProvinceServed dbr:Virginia ;
                    dbo:birthPlace ?birthPlace .
    FILTER EXISTS { ?currentGovernor dbo:title ""Governor of Virginia""@en }
  } GROUP BY ?currentGovernor

  # Vince Gilligan
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?album
WHERE {
    ?song a dbo:Song ;
          dbo:artist dbr:T.I. ;
          rdf:type dbo:MusicalWork .
    
    ?song dbo:release dbr:;  # Assuming the album is linked via release
          dbo:album ?album .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ian Gregson"" ;
          dbo:award ?award .

  ?award dbo:recipient ?movie .

  ?movie dbo:producer ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistCurran ?bandWilson
WHERE {
  # Find Nicholas Michael Curran's associated musical artist
  OPTIONAL {
    ?curran a dbo:MusicalArtist ;
            foaf:name ""Nicholas Michael Curran"" .
    ?curran dbo:associatedBandOrMusicalArtist ?artistCurran .
  }

  # Find Kim Wilson's band
  ?wilson a dbo:MusicalArtist ;
          foaf:name ""Kim Wilson"" .
  ?wilson dbo:band ?bandWilson .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Musician ;
          dbo:birthPlace dbr:Central_Region_(Ghana) ;
          dbp:birthday ?birthday .
  
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Lai Sun Cheung players
  ?player dbo:team dbr:Lai_Sun_Cheung .
  
  # Find a person born on 1981-12-01 who is an athlete, soccer player, sports manager, and soccer manager
  ?person dbp:birthday ""1981-12-01""^^xsd:date ;
          rdf:type dbo:Athlete ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .
  
  # Ensure the player is the same person
  FILTER (?player = ?person)
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRogerII ?fatherChild ?reference
WHERE {
  # Roger II's child
  ?childOfRogerII dbo:parent dbr:Roger_II_of_Sicily .
  
  # This child is a father to another child who is royalty
  ?fatherChild dbo:parent ?childOfRogerII ;
              dbo:spouse ?mother . # Assuming spouse for completeness
  
  ?royaltyChild dbo:parent ?fatherChild ;
                a dbo:Monarch .

  # Reference must be royalty and an office holder, connected to William I
  ?reference dbo:parent ?royaltyChild ;
             a dbo:Monarch ;
             dbo:officeHolder ?office .
  
  ?williamI dbo:spouse ?reference ; # Assuming spouse for connection

  # Reference is also a child of someone who is a child of Alfonso VI
  ?childOfAlfonsoVI dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  
  ?grandChildOfAlfonsoVI dbo:parent ?childOfAlfonsoVI ;
                        dbo:spouse ?reference . # Assuming spouse for connection

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Find William I of Sicily
  dbr:William_I_of_Sicily dbo:spouse ?mother .
  
  # Identify his children
  ?child dbo:parent dbr:William_I_of_Sicily ;
         dbo:parent ?mother .

  # Filter for royalty among the children
  ?child a dbo:Monarch ;
         rdfs:label ?childLabel .

  # Find the father of the royal child (should be William I)
  ?father dbo:spouse ?mother .
  ?father dbo:parent ?child .
  
  FILTER(CONTAINS(LCASE(?childLabel), ""king"") || CONTAINS(LCASE(?childLabel), ""queen""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)
  OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""The Campus Queen""@en .
  FILTER (lang(?movie) = 'en') # Ensure we're getting the English label

  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?alterEgo WHERE {
  # Part 1: Find the child of Dawit I
  dbr:Dawit_I dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # Part 2: Find the alter ego of The Shadow
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:Jamshedpur dbo:language ?language .
}
```

This query selects the languages (`?language`) associated with Jamshedpur using the `dbo:language` property.",1,1,2,1,1,2,2,9,0,0,68,0,0.0,0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?owner
WHERE {
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  ?ship dbo:owner ?owner .
}
```

This query does the following:
- It uses `dbo:Ship` to ensure we are querying about ships.
- The `rdfs:label` property is used with a language tag (`""@en""`) to match the English label of USS Arcadia (ID-1605).
- It retrieves the owner using the `dbo:owner` property.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?eleonore dbo:spouse ?husband .
  ?eleonore rdfs:label ""Eleonore of Austria""@en .
  ?eleonore dbo:father ?father .

  OPTIONAL { 
    ?commander dbp:role ""Commander""@en ;
               dbo:participatedIn <http://dbpedia.org/resource/Thirty_Years%27_War> .
    FILTER (?father = ?commander)
  }
}
```

This query does the following:
- Identifies Eleonore of Austria using her label.
- Retrieves her father using the `dbo:father` property.
- Optionally checks if this person was a commander in the Thirty Years' War.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Linking the regiment to its commander
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?commander .

  # Ensuring the commander was involved in both battles
  OPTIONAL { 
    ?battle1 dbo:participatedIn ?commander .
    FILTER (
      ?battle1 IN (dbr:Battle_of_Fort_Royal, dbr:Battle_of_Cape_Finisterre_(1805))
    )
  }
  
  # Counting the number of distinct battles to ensure involvement in both
  { SELECT ?commander (COUNT(DISTINCT ?battle) AS ?count)
    WHERE {
      ?battle dbo:participatedIn ?commander .
      FILTER (
        ?battle IN (dbr:Battle_of_Fort_Royal, dbr:Battle_of_Cape_Finisterre_(1805))
      )
    }
    GROUP BY ?commander
    HAVING (?count = 2)
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the writer of ""The First Glove""
  ?work dbo:title ""The First Glove""@en .
  ?work dbo:writer ?player .

  # Find the resource for ""Наши парни / Nashi parni""
  ?figure rdfs:label ""Наши парни""@ru ;
          rdfs:label ""Nashi parni""@en .

  # Ensure the player is associated with both
  ?player dbr:NaShi_Parni .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find individuals with Saw Min Hla as a parent
  ?person dbo:spouse ?sawMinHla .
  ?sawMinHla foaf:name ""Saw Min Hla""@en .

  # Ensure the person is also a child of Saw Min Hla
  ?child dbo:parent ?sawMinHla .

  # Check if this child is married to Saw Shwe Khet
  ?child dbo:spouse ?sawShweKhet .
  ?sawShweKhet foaf:name ""Saw Shwe Khet""@en .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?father WHERE {
  # Step 1: Find Alfonso VI's child
  ?child dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  
  # Step 2: Find that child's child (Alfonso VI's grandchild)
  ?grandchild dbo:parent ?child .

  # Step 3: Find William I of Sicily's child
  ?williamChild dbo:parent dbr:William_I_of_Sicily .

  # Step 4: Identify the father of this child
  ?father dbo:spouse ?mother .
  ?williamChild dbo:parent ?father .

  # Step 5: Ensure the father is royalty
  ?father a dbo:Monarch .
  
  # Match the grandchild and father
  FILTER(?grandchild = ?williamChild)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace
WHERE {
  # Step 1: Find Paulus Powell's birth place that is a region and administrative region
  ?paulusPowell dbo:birthPlace ?region .
  ?region rdf:type dbo:Region .
  ?region rdf:type dbo:AdministrativeRegion .

  # Step 2: Find the governor of this region who is a politician
  ?governor dbo:governmentRole ?role .
  ?role dbo:officeHolder ?person .
  ?person dbo:birthPlace ?governorBirthPlace .
  ?role dbo:office ?office .
  ?office dbo:region ?region .
  ?person rdf:type dbo:Politician .

  # Step 3: Find Vince Gilligan's award and the awardee
  dbr:Vince_Gilligan dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  ?person dbo:nationality dbr:Russian_Empire .
  ?person dbo:spouse|dbo:child|dbo:parent* dbr:Nicholas_II_of_Russia .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?davidPaton a dbo:Musician ;
              foaf:name ""David Paton""@en .
  
  ?davidPaton dbo:musicalArtist ?band .

  ?bandMember dbo:musicalArtist ?band ;
              foaf:name ?memberName .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find the album ""Nothing to Gein""
  dbr:Nothing_to_Gein a dbo:Album ;
    dbo:producer ?producer .

  # Ensure the producer is also a band member
  ?producer dbo:member ?bandMember .

  # Check if the producer is part of an organization or group
  OPTIONAL { ?producer dbo:memberOf ?organization . }
  FILTER EXISTS { ?producer dbo:memberOf ?organization }

  # Filter to ensure the band member is an organization and a group
  OPTIONAL { ?bandMember dbo:type dbr:Musical_group . }
  OPTIONAL { ?bandMember dbo:type dbr:Organization . }
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shatrughan Sinha""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Find Westport, Connecticut in DBpedia
  ?westport a dbo:PopulatedPlace ;
            rdfs:label ""Westport, Connecticut""@en .

  # Find the ruling party of Westport
  ?rulingParty dbo:country dbr:United_States ;
              dbo:location ?westport ;
              a dbo:PoliticalParty .

  # Ensure the ruling party is an organization
  ?rulingParty a dbo:Organization .

  # Find members of the ruling party that are also political parties and organizations
  ?rulingParty dbo:member ?partyMember .
  ?partyMember a dbo:PoliticalParty ;
               a dbo:Organization .
}
```",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  # Find the person with birth name Harriette Arlene Lake
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  
  # Ensure this person is married to Roger Pryor (actor)
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .

  # Find a landmark with the specified elevation
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Determine the ruling party in the location of this landmark
  ?location dbo:isLocatedIn ?landmark .
  ?party dbp:rulingPartyOf ?location .

  # Ensure the person is a member of this party
  ?person dbo:memberOf ?party .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?war WHERE {
  # Robert Calder and his military force
  dbr:Robert_Calder a dbo:MilitaryPerson ;
                    dbo:militaryCommanderOf ?militaryForce .

  # The war in which the 30th (Cambridgeshire) Regiment of Foot participated
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?war .
  
  # Ensure the military force is related to a military conflict
  ?militaryForce dbo:participatesIn ?war .

  FILTER(?militaryForce != dbr:30th_(Cambridgeshire)_Regiment_of_Foot)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?singer WHERE {
  # The Shadow as a fictional character created by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # The Shadow also appeared in comics
  dbr:The_Shadow dbo:genre dbr:Comics .

  # Find any professional singer related to The Shadow
  ?singer dbo:profession dbr:Singing ;
          dbo:relatedWork ?character .
  
  # Ensure the character is The Shadow
  FILTER(?character = dbr:The_Shadow)
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:RoyalNavyOfficer ;
          foaf:name ""Tom Phillips""@en .
  
  OPTIONAL { ?person dbo:serviceInMilitaryConflict ?war . }
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `foaf:` is often used for personal information like names.

- **Query Structure**:
  - We look for a resource (`?person`) that is an instance of `dbo:RoyalNavyOfficer` and has the name ""Tom Phillips"".
  - The optional pattern `dbo:serviceInMilitaryConflict ?war` attempts to find any military conflicts associated with this person.

This query assumes that DBpedia has structured data linking Tom Phillips to his role as a Royal Navy officer and any wars he was involved in. Adjustments might be necessary based on the actual schema used by DBpedia for such entities.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Identify the commander in the Third Taiwan Strait Crisis
  ?event dbo:location dbr:Taiwan .
  ?event dbo:participatedIn dbr:Third_Taiwan_Strait_Crisis .
  ?person dbo:positionTitle ""Commander"" ;
          dbo:memberOf ?commandRole .
  ?commandRole dbo:member ?commander .

  # Identify the author who is a resident of Chappaqua, New York
  ?author dbo:residence dbr:Chappaqua,_New_York ;
          rdf:type dbo:Politician ;
          dbo:spouse ?spouse .

  # Ensure the spouse wrote ""An Invitation to the White House""
  ?spouse dbo:title ""President of the United States"" ;
          dbo:writtenWork dbr:An_Invitation_to_the_White_House .
  
  FILTER(?commander = dbr:Joseph_W._Prueher)
  FILTER(?author = dbr:Hillary_Clinton)
  FILTER(?spouse = dbr:Bill_Clinton)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Resource for French Revolutionary Wars
  dbr:French_Revolutionary_Wars dbo:participatedIn ?event .
  
  # Find commanders related to these events
  ?event dbo:commander ?commander .

  # Ensure the commander is a person
  ?commander rdf:type dbo:Person .
}
```",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?warOfDavydov
WHERE {
  # Find the awardee of the year 25
  ?awardee dbo:dateOfBirth ?dob .
  FILTER(YEAR(?dob) = ""25""^^xsd:gYear)

  # Find wars associated with this awardee
  ?awardee dbo:participatedInMilitaryConflict ?warOfAwardee .

  # Find Alexander Lvovich Davydov and his associated wars
  dbr:Aleksandr_Lvovich_Davydov dbo:dateOfBirth ?dobDavydov .
  FILTER(YEAR(?dobDavydov) = ""1784""^^xsd:gYear) # Assuming birth year for context

  dbr:Aleksandr_Lvovich_Davydov dbo:participatedInMilitaryConflict ?warOfDavydov .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthplace
WHERE {
  VALUES ?person { 
    dbr:Ebrahim_Alkazi 
    dbr:Smita_Patil 
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthplace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?santiagoTenant ?spainTenant ?galicianLeaderOffice
WHERE {
  # Tenant of Santiago de Compostela
  OPTIONAL {
    ?santiago dbr:Santiago_de_Compostela ;
              dbo:government ?government .
    ?government dbo:head ?santiagoTenant .
  }

  # Tenant of Spain
  OPTIONAL {
    dbr:Spain dbo:government ?spainGovernment .
    ?spainGovernment dbo:head ?spainTenant .
  }
  
  # Office of the Leader of 2009 Galician Regional Election
  OPTIONAL {
    ?election dbp:electionDate ?date ;
              dbp:winner ?galicianLeader .
    FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
    ?galicianLeader dbo:office ?galicianLeaderOffice .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the battle event
  dbr:Battle_of_Cape_Finisterre_1805 dbo:participatedIn ?conflict .
  
  # Find military forces involved in the conflict
  ?conflict dbo:militaryParticipant ?militaryForce .

  # Find commanders associated with these military forces
  ?militaryForce dbo:commander ?commander .

  # Filter for The Triple Alliance (Britain, Russia, Austria)
  FILTER (
    EXISTS { ?militaryForce rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""britain"") || CONTAINS(LCASE(?label), ""russia"") || CONTAINS(LCASE(?label), ""austria"")) }
  )
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .

  # Ensure this person played in the same team as Sergio Agüero
  ?team dbo:player ?person .
  ?team dbo:player dbr:Sergio_Agüero .

  # Find Marty Pollio's birthday
  OPTIONAL {
    ?marty dbp:birthday ?birthday .
    FILTER (?marty = dbr:Marty_Pollio)
  }

  # Ensure the person is also an athlete on Marty Pollio's birthday
  ?athlete dbo:birthday ?birthday ;
           dbo:occupation dbr:Athlete .

  FILTER EXISTS { ?person = ?athlete }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?battleMilitaryForce ?battleCommander ?event ?awardeeMilitaryForce
WHERE {
  # Battle of Fort Royal details
  dbr:Battle_of_Fort_Royal dbo:militaryForce ?battleMilitaryForce .
  dbr:Battle_of_Fort_Royal dbo:commander ?battleCommander .

  # French campaign in Egypt and Syria context
  ?campaign dbo:participatedIn ?battle .
  ?campaign rdf:type dbo:MilitaryCampaign .
  FILTER(?battle = dbr:Battle_of_Fort_Royal) .

  # Awardee of Knight Commander of the Order of the Bath
  ?awardee dbp:knightCommanderOfTheOrderOfTheBath ""true""^^xsd:boolean ;
          dbo:militaryForce ?awardeeMilitaryForce .

  # Event that is both societal and involves the awardee's military force
  ?event rdf:type dbo:SocietalEvent ;
         dbo:involvesMilitaryForce ?awardeeMilitaryForce .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Roy_Barreras dbo:partyAffiliation ?party .
}
```

This query uses the `dbo:partyAffiliation` property to find the political party associated with Roy Barreras. The resource identifier for Roy Barreras is assumed to be `dbr:Roy_Barreras`, which should match the DBpedia entry for him.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?force WHERE {
  ?awardee dbo:honour <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> .
  OPTIONAL { 
    ?awardee dbo:militaryUnit ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find a player who is an actor, soccer player, and athlete in ""All or Nothing: Manchester City""
  ?actor dbo:role ?role .
  ?role dbo:workExample dbr:All_or_Nothing:_Manchester_City .
  ?actor rdf:type dbo:SoccerPlayer .
  ?actor rdf:type dbo:Athlete .

  # Find a person born on 1979-11-03 who is a soccer player and manager
  ?person dbp:birthday ""1979-11-03""^^xsd:date .
  ?person rdf:type dbo:SoccerManager .
  ?person rdf:type dbo:SoccerPlayer .
  
  # Ensure the team of this person matches with the actor's team
  ?actor dbo:team ?team .
  ?person dbo:currentTeam ?team .

  # Bind the player to the actor who meets all criteria
  BIND(?actor AS ?player)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?group WHERE {
  ?song dbo:title ""Burnt by the Sun"" .
  ?song dbo:artist ?group .
  FILTER (isLiteral(?group) = false)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1979 && MONTH(?date) = 11 && DAY(?date) = 3)
  
  OPTIONAL { 
    ?person dbo:sport dbr:Soccer . 
  }
  
  OPTIONAL {
    ?managerRole a dbo:Manager ;
                 dbo:managedTeam ?team .
    ?person ?roleProperty ?managerRole .
  }

  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,3,2,1,1,3,3,71,5,19,0,0.20833333333333334,1.0,0.3448275862068966
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role WHERE {
  VALUES ?person { dbr:Bob_Thompson_(musician) }
  
  # Check for profession as a singer
  OPTIONAL {
    ?person dbo:singer ?singerRole .
    BIND(""Singer"" AS ?role)
  }

  # Check for profession in a band
  OPTIONAL {
    ?person dbo:bandMember ?bandRole .
    BIND(""Band Member"" AS ?role)
  }
  
  FILTER(?singerRole || ?bandRole) # Ensure at least one role is found
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?birthName WHERE {
  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Find associated musical artists of Bobby Shmurda
  ?artist dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  
  # Identify band members who are also musical artists
  ?artist dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:author dbr:Bill_Clinton .
  ?work a dbo:Book .
  ?work dbo:subject (dbr:AIDS|dbr:World_War_I) .
  OPTIONAL { ?work dbo:spouse dbr:Hillary_Clinton . }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:wikiPageWikiLink dbr:Athens .
  ?entity dbo:wikiPageWikiLink dbr:Napoleon_Zervas .
}
```

This query selects entities that have wiki links to both ""Athens"" and ""Napoleon Zervas,"" which should help identify relevant historical or geographical connections.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?war dbo:participatedIn [
    a dbo:Battle;
    dbo:opposingSide [
      dbo:leader dbr:Napoleon_Zervas
    ]
  ].
  
  OPTIONAL { ?war dbo:description ?description }
}
```

This query looks for wars or battles where Napoleon Zervas was an opposing leader. It also attempts to retrieve descriptions of these conflicts.",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Edward Henry Stanley""@en .
  ?person dbo:title ""17th Earl of Derby"" .
  
  ?person dbo:parent ?parent .

  ?parent a dbo:Politician ;
          dbo:officeHolder true .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`) and properties (`dbp`).
- **SELECT**: We want to find the `?parent`.
- **WHERE**:
  - Identify Edward Stanley using his birth name and title.
  - Use `dbo:parent` to find his parent.
  - Ensure the parent is a politician (`a dbo:Politician`) and an office holder (`dbo:officeHolder true`).

This query assumes that DBpedia has structured data for these relationships and properties. Adjustments might be needed based on actual data availability.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?personWithSameBirthName
WHERE {
  # Find band members associated with Uncle Murda
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda"" .
  
  ?bandMember dbo:memberOf ?uncleMurda .

  # Find Bobby Shmurda's birth name
  ?bobbyShmurda a dbo:Person ;
                foaf:name ""Bobby Shmurda"" ;
                dbo:birthName ?birthName .

  FILTER(?birthName = ""Robert Williams"")

  # Find people with the same birth name as Bobby Shmurda
  ?personWithSameBirthName a dbo:Person ;
                          dbo:birthName ?birthName .
  
  FILTER(?personWithSameBirthName != ?bobbyShmurda)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer (1938 film)""
  VALUES ?tomSawyerFilm { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }
  
  ?tomSawyerFilm dbo:producer ?producer .

  # Find the actor of ""High Society Blues""
  VALUES ?highSocietyBlues { dbr:High_Society_Blues }
  
  ?highSocietyBlues dbo:actor ?actor .
  
  # Find the claim to fame of this actor
  ?actor dbo:claimToFame ?fameWork .

  # Ensure the claim to fame is a movie or work
  FILTER EXISTS { ?fameWork rdf:type dbo:Film . }
  
  # Check if the same producer produced the claim to fame
  ?fameWork dbo:producer ?sameProducer .
  
  FILTER (?producer = ?sameProducer)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show ?hostInstitution WHERE {
  # Find Nobel Prize in Physics awardees
  ?awardee dbo:nobelPrize [dbo:category dbr:Nobel_Prize_in_Physics] .
  
  # Find the educational institution associated with the awardee
  ?awardee dbo:almaMater|dbo:currentAffiliation ?institution .
  
  # Ensure the institution is an educational entity
  ?institution a dbo:EducationalInstitution .

  # Assume there's a property linking shows to their hosts (hypothetical)
  ?show dbp:host ?hostInstitution .

  # Link the host institution to the educational institution of the awardee
  FILTER(?hostInstitution = ?institution)
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Quincy Adams Gillmore and his awards
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
  
  # Awardee of the award
  ?award dbo:recipient ?awardee .

  # Force associated with the awardee
  ?awardee dbo:militaryForce ?force .

  # Entity in Charleston, South Carolina
  OPTIONAL {
    ?entity dbo:location dbr:Charleston,_South_Carolina .
    ?awardee dbo:associatedWith ?entity .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Vienna""))

  ?commander dbo:wikiPageRedirects ?tvShow .
  ?commander dbo:wikiPageRedirects ?event .

  ?successor dbo:succeededBy ?yuriiKhmelnytsky .
  FILTER(STRSTARTS(STR(?yuriiKhmelnytsky), ""Yurii_Khmelnytsky""))

  FILTER(?commander = ?successor)

  ?writer dbo:wikiPageRedirects dbr:Always_the_Love_Songs .
  FILTER(STRSTARTS(STR(?writer), ""David_Foster_Wallace""))

  FILTER(?commander = ?writer)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Actor from ""1,000 Dollars a Minute""
  ?actor dbo:title ?movie .
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  
  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Person with birth name and spouse matching conditions
  ?person dbp:birthday ?birthDate .
  ?person dbo:spouse ?spouse .
  ?partyMember dbo:memberOfParty ?rulingParty .
  ?partyMember dbo:location dbr:Central,_Louisiana .
  
  FILTER (?birthName = ?person && ?spouse = ?actor)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Duke ;
          dbp:name ""Roger III, Duke of Apulia""@en .
  ?person dbo:parent ?parent .
}
```

This query assumes that the entity for Roger III is correctly identified by his name and title. The `dbo:parent` property is used to find his parent.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?realName
WHERE {
  # Find musical associations for Nick Curran
  OPTIONAL {
    ?nickCurran a dbo:MusicalArtist ;
                foaf:name ""Nick Curran"" .
    ?association dbo:associatedBandOrMusician ?associatedArtist .
    FILTER (?nickCurran = ?association)
  }

  # Find real names of The Fabulous Thunderbirds members
  OPTIONAL {
    ?band a dbo:MusicalGroup ;
          foaf:name ""The Fabulous Thunderbirds"" .
    ?member dbo:member ?band ;
            foaf:name ?realName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Step 1: Identify GS9's member who is both an artist and a musical artist
  ?gs9Member dbo:memberOf dbr:GS9 ;
             a dbo:MusicalArtist, dbo:Artist .

  # Step 2: Find the associated musical artist of this member
  ?associatedArtist dbo:associatedWith ?gs9Member ;
                   a dbo:MusicalArtist .

  # Step 3: Identify the band members of this associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist ;
              a dbo:MusicalArtist .

  # Step 4: Find the native of Florida who is a musical artist among these band members
  ?person dbr:Florida dbo:nativePlace ;
          ?bandMember dbo:memberOf ;
          a dbo:MusicalArtist .

  # Step 5: Retrieve the birth name of this person
  OPTIONAL { ?person dbp:birthName ?birthName }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1945 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 30)
  
  ?member dbo:memberOf ?band ;
          dbo:member ?person .

  ?band a dbo:Band ;
        rdfs:label ?bandName .
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?nickname
WHERE {
  # Find Aleksandr Filimonov and his association with the Russia national football team
  ?player a dbo:FootballPlayer ;
          foaf:name ""Aleksandr Filimonov""@en ;
          dbo:nationalTeam dbr:Russia_national_football_team .

  # Retrieve the nickname of the Russia national football team
  dbr:Russia_national_football_team dbo:nickname ?nickname .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowProfession WHERE {
  dbr:The_Shadow dbo:occupation ?shadowProfession .
}

UNION

SELECT ?bouralyProfession WHERE {
  dbr:Frédéric_Bouraly dbo:occupation ?bouralyProfession .
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?person foaf:name ""Kim Wilson""@en .
  ?person dbo:memberOfBand ?band .
  ?band rdfs:label ?bandLabel .
}
```

This query does the following:
- Uses `foaf:name` to find a person named ""Kim Wilson.""
- Checks if this person is a member of any band using `dbo:memberOfBand`.
- Retrieves the label (real name) of that band with `rdfs:label`.",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  VALUES ?award { dbr:Award25 } # Replace 'Award25' with the actual resource name if known
  ?award dbo:recipient ?awardee .
}
```

**Explanation**:
- `PREFIX dbo:` and `PREFIX dbr:` are used to define common namespaces for DBpedia ontology and resources.
- `VALUES ?award { dbr:Award25 }` is a placeholder. Replace `dbr:Award25` with the actual resource identifier if known (e.g., `dbr:Academy_Award_for_Best_Director_2005`).
- The query selects the `?awardee` of the specified award using the property `dbo:recipient`.",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Francis I, Duke of Lorraine
  ?francis a dbo:Duke ;
           foaf:name ""Francis I, Duke of Lorraine""@en .
  
  # Find his children who are royalty
  ?francis dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title } # Ensure the child is a member of royalty
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?fictionalCharacter WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  dbr:Tom_Sawyer dbo:alterEgoOfPrint dbr:Kent_Allard .
  
  dbr:Tom_Sawyer ?fictionalCharacterProperty ?fictionalCharacter .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?person dbo:deathPlace dbr:Los_Angeles .
  ?movie dbo:subject ?person .
}",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer
WHERE {
  # Michał Kazimierz Pac and his role in a military conflict
  dbr:Mikołaj_Kazimierz_Pac a dbo:Person ;
    dbo:role [ a dbo:Role ; 
               dbo:hasOccupant dbr:Mikołaj_Kazimierz_Pac ;
               dbo:participatedIn ?conflict ] .

  # Successor who is a politician and an office holder
  ?successor a dbo:Politician, dbo:OfficeHolder ;
             dbo:role [ a dbo:Role ; 
                        dbo:hasOccupant ?successor ;
                        dbo:participatedIn ?conflict ] .

  # Reference to the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author ?writer .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Dawid Olejniczak's residence
  ?olejniczak dbo:residence ?residence .
  FILTER (strstarts(str(?residence), ""http://dbpedia.org/resource/""))
  ?residence a dbo:Country .

  # Alexander Suvorov's wars
  ?suvorov dbo:participatedInWar ?war .
  ?war dbo:location ?warLocation .
  FILTER (strstarts(str(?warLocation), ""http://dbpedia.org/resource/""))
  ?warLocation a dbo:Country .

  # Find intersection
  BIND(?residence AS ?country)
  FILTER (?country = ?warLocation)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  dbr:Hartlepool_United_F.C. dbo:manager ?manager .
  ?manager rdfs:label ?managerName .
  FILTER (lang(?managerName) = 'en')
  ?manager dbo:nationality dbr:Bristol .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?pacely a dbo:MusicalArtist ;
          rdfs:label ""Pacely""@en .
  
  ?pacely dbo:associatedMusicalArtist ?artist .

  ?artist a dbo:Musician ;
          dbp:profession ""Professional""@en .
}
```

This query does the following:
- Searches for an entity labeled ""Pacely"" that is of type `dbo:MusicalArtist`.
- Finds associated musical artists using the property `dbo:associatedMusicalArtist`.
- Filters these artists to ensure they are professional musicians (`dbp:profession`).",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Charles Martel of Anjou's parent
  ?charlesMartel a dbr:Charles_Martel_of_Anjou ;
                 dbo:parent ?parent .

  # Philip I, Prince of Taranto's father's spouse
  ?philipI a dbr:Philip_I,_Prince_of_Taranto ;
           dbo:father ?father .
  ?father dbo:spouse ?spouse .

  # Stephen V of Hungary's predecessor and their child's child
  ?stephenV a dbr:Stephen_V_of_Hungary ;
            dbo:predecessor ?predecessor .
  ?child1 dbo:childOf ?predecessor ;
          dbo:child ?child2 .
  
  # The person we are looking for must satisfy all these conditions
  FILTER (?parent = ?spouse)
  FILTER (?spouse = ?child2)
  FILTER (dbo:royalty ?person) # Assuming there's a royalty property or class

  BIND(?parent AS ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Awardees of awards given by United States Congress
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?recipient dbo:recipientOf ?award .

  # Awardees of the Gillmore Medal
  ?gillmoreAward dbo:awardName ""Gillmore Medal"" ;
                 dbo:recipient ?gillmoreRecipient .

  # Wars associated with these awardees
  OPTIONAL { ?recipient dbo:participatedInWar ?war . }
  OPTIONAL { ?gillmoreRecipient dbo:participatedInWar ?war . }

  FILTER(?war != dbr:None)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?hostName
WHERE {
  # Identify the Nobel Prize in Physics
  dbr:Nobel_Prize_in_Physics dbo:awardedBy ?host .

  # Ensure the host is an educational institution
  ?host rdf:type dbo:EducationalInstitution .
  
  # Get the name of the host
  ?host rdfs:label ?hostName .
  FILTER (lang(?hostName) = 'en')
}
```

### Explanation

- **Prefixes**: We use `dbo` for DBpedia ontology, `dbr` for resources, and standard RDF/RDFS prefixes.
- **SELECT Clause**: We select the name of the host (`?hostName`).
- **WHERE Clause**:
  - `dbr:Nobel_Prize_in_Physics dbo:awardedBy ?host`: Finds the entity that awards the Nobel Prize in Physics.
  - `?host rdf:type dbo:EducationalInstitution`: Ensures the host is an educational institution.
  - `?host rdfs:label ?hostName . FILTER (lang(?hostName) = 'en')`: Retrieves the English label of the host.

This query will return the name of the educational institution that hosts the Nobel Prize in Physics.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild
WHERE {
  # Step 1: Find children of Ferdinand Albert II
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Identify the parent of this child (grandparent of Ferdinand Albert II)
  ?parent dbo:child ?child .

  # Step 3: Check if this grandparent is royalty
  ?parent a dbo:Monarch ;
          dbo:country dbr:Germany . # Assuming royalty in Germany

  # Step 4: Find the child of this royal parent
  ?royalChild dbo:parent ?parent .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName ?bandMemberName WHERE {
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:officialName ?realName .

  # Find members of The Fabulous Thunderbirds
  ?member dbo:band dbr:The_Fabulous_Thunderbirds .
  
  # Filter for a member born on 1945-03-30 and is a musical artist
  ?member dbp:birthday ""1945-03-30""^^xsd:date ;
          dbo:occupation dbr:Musical_artist .

  # Get the name of this band member
  ?member rdfs:label ?bandMemberName .
  
  FILTER(LANG(?bandMemberName) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?plotkin { dbr:James_Plotkin }
  
  ?plotkin dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?plotkin)
}
```

This query assumes that James Plotkin is associated with bands and those bands have members. It retrieves the artists who are members of any band associated with him.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find an entity related to a war and award number 30
  ?awardee dbp:awardNumber ""30"" ;
           dbo:war ?war .
  
  # Connect the war to the death place
  ?war dbo:location ?settlement .

  FILTER(?deathPlace = ?settlement)
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?annSothernPerson ?republicanMember
WHERE {
  # Find Roger Pryor's spouse
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .

  # Find the person born as Ann Sothern (Anna Lucasta Sothern)
  dbr:Ann_Sothern dbo:birthName ""Anna Lucasta Sothern""@en .
  ?annSothernPerson rdfs:label ""Ann Sothern""@en ;
                   dbo:birthName ""Anna Lucasta Sothern""@en .

  # Find a member of the Republican Party in the United States
  ?republicanMember dbo:partyAffiliation dbr:Republican_Party_(United_States) .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace WHERE {
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .

  ?paulusBirthPlace rdf:type dbo:Region .
  ?paulusBirthPlace rdf:type dbo:AdministrativeRegion .

  ?governor dbo:governs ?paulusBirthPlace ;
           rdf:type dbo:Politician .

  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?associatedArtistDarryl ?associatedArtistPacely
WHERE {
  # Rod Argent's profession
  dbpedia:Rod_Argent dbo:occupation ?profession .

  # Darryl Paa Kwesi Bannerman-Martin's associated musical artist
  dbpedia:Darryl_Paath dbo:associatedMusicalArtist ?associatedArtistDarryl .

  # $pacely's birth name and associated musical artist
  {
    SELECT ?birthName WHERE {
      dbpedia:$pacely foaf:name ?birthName .
    }
  } AS %birthName

  ?person foaf:name ?birthName .
  ?person dbo:associatedMusicalArtist ?associatedArtistPacely .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?movie dbo:country dbr:India .
  ?movie dbo:starring dbr:Dipankar_De .
  dbr:Dipankar_De dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,2,0,11,1.0,0.15384615384615385,0.2666666666666667
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person foaf:name ""Albrecht, Duke of Württemberg""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate
WHERE {
  dbr:Federal_University_of_Paraíba dbo:established ?foundingDate .
}
```

In this query:
- `dbr:Federal_University_of_Paraíba` is the URI for the Federal University of Paraíba. You may need to verify or adjust this based on DBpedia's current structure.
- `dbo:established` is used to retrieve the founding date.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person dbo:occupation dbr:Artist .
  ?person dbp:birthday ?birthday .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL {
    ?person foaf:name ?birthName .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:type/dbo:subClassOf* dbr:Category:Wars_as_television_shows .
  ?war dbo:type/dbo:subClassOf* dbr:Category:Societal_events .
  ?battle dbo:participatingMilitaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Vienna""@en .
  FILTER EXISTS { ?war dbo:reference dbr:George_Ducas } .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  ?predecessor dbo:child ?child .
  ?child a dbo:Monarch ;
         dbo:country dbr:Hungary .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?war WHERE {
  # Toyotomi Hideyoshi's child
  dbr:Toyotomi_Hideyoshi dbo:child ?child .

  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Wars involving the child and an entity from the birthplace
  ?war dbo:participant ?participant .
  FILTER (?participant = ?child || ?participant IN (SELECT ?entity WHERE {
    ?entity dbo:location dbr:?birthPlace .
  }))
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego in comics
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Actor from ""Ab Kya Hoga"" who is a politician
  dbr:Ab_Kya_Hoga dbo:actor ?actor .
  ?actor dbo:profession dbr:Politician .

  # Find the professional connection
  ?actor dbo:profession ?professional .
  FILTER(?professional != dbr:Politician) .

  # Check if Lamont Cranston has this profession
  OPTIONAL { dbr:Lamont_Cranston dbo:profession ?professional }
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Find the commander in the Russo-Polish War (1654–1667)
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) dbo:commander ?commander .
  
  # Ensure the successor is a politician and an office holder
  ?successor dbo:successorOf ?commander ;
            a dbo:Politician, dbo:OfficeHolder .

  # Find if this successor was also a commander in the Great Turkish War
  ?greatWar dbr:Great_Turkish_War dbo:commander ?successor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  ?office dbo:officeHolder ?person .
}
```

This query does the following:
- It selects offices (`?office`) where Miguel Maura is listed as an office holder.
- It uses `foaf:name` to match the name ""Miguel Maura"" in English, assuming DBpedia has this property available for him.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # George Pickett's DBpedia resource
  dbr:George_Pickett dbo:militaryConflict ?conflict .
  
  # Filter to find wars (societal events)
  ?conflict a dbo:MilitaryConflict ;
           dbo:wikiPageRedirects ?war .
}
```

This query assumes that George Pickett's military conflicts are linked in DBpedia and that these can be redirected or associated with specific wars. The `dbo:militaryConflict` property is used to find the conflicts he was involved in, and we filter for those classified as societal events (wars).",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?child dbo:parent dbr:Roger_II_of_Sicily .
  ?child dbo:child dbr:William_II_of_Sicily .
}",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Monarch ;
          dbp:name ""Baeda Maryam I""@en .
  ?person dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?child WHERE {
  # Find the father of Baeda Maryam I
  OPTIONAL { 
    dbr:Baeda_Maryam_I dbo:father ?father .
  }
  
  # Ensure Dawit I is a child of this father (i.e., Baeda Maryam I's father)
  OPTIONAL {
    dbr:Dawit_I dbo:child ?child .
    
    FILTER (?child = dbr:Baeda_Maryam_I) 
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchildPredecessor WHERE {
  # Saw Min Phyu and their spouse
  ?sawMinPhyu dbo:spouse ?spouse .
  
  # Children of the spouse who are royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild dbp:royalty ""true""^^xsd:boolean .

  # Grandchildren (children of the royal child)
  ?royalChild dbo:child ?grandchild .

  # Predecessor of each grandchild
  ?grandchild dbo:predecessor ?grandchildPredecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure WHERE {
  ?figure a dbo:Painting .
  ?figure rdfs:label ""The Triple X's""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfSawMinHla WHERE {
  # Step 1: Find Saw Shwe Khet's child who is royalty
  ?royalChild dbo:parent dbr:Saw_Shwe_Khet .
  ?royalChild a dbo:Monarch .

  # Step 2: The father of this royal child is Saw Shwe Khet (already known)

  # Step 3: Find the spouse of Saw Shwe Khet who is royalty
  ?spouseOfSawShweKhet dbo:spouse dbr:Saw_Shwe_Khet .
  ?spouseOfSawShweKhet a dbo:Monarch .

  # Step 4: Find the child of Saw Min Hla and the spouse found in step 3
  ?childOfSawMinHla dbo:parent dbr:Saw_Min_Hla ;
                   dbo:parent ?spouseOfSawShweKhet .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find children of Saw Shwe Khet
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  
  # Step 2: Find spouses of these children
  ?spouse dbp:spouse ?child .

  # Step 3: Find predecessors of these spouses
  ?predecessor dbo:successor ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace dbr:London .
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  ?work dbo:author ?person ;
        a dbo:Film ;
        dbo:starring dbr:Vera_Lynn .
  OPTIONAL { ?work dbo:genre dbr:Television_Show . }
  ?person dbo:parent ?parent .
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  ?election a dbo:Election .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2003 && CONTAINS(LCASE(STR(?election)), ""madrid city council"")) .

  ?officeHolder dbo:positionHeld ?position .
  ?position dbo:relatedElection ?election .
  
  ?leader dbr:Leader_of_Madrid_City_Council_Election_2003 .
  ?leader rdfs:label ?name .
  FILTER (LANG(?name) = 'en') .

  ?residence dbo:resident ?leader .
  ?residence dbo:tenant ?tenant .
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum as a sports club, organization, and soccer club
  dbr:VfL_Bochum dbo:type/dbo:SportsClub .
  dbr:VfL_Bochum dbo:type/dbo:Organization .
  dbr:VfL_Bochum dbo:type/dbo:SoccerClub .

  # Manager of VfL Bochum during the 2007–08 season
  ?manager dbp:managedTeam dbr:VfL_Bochum ;
           dbp:managementPeriod ?period .
  
  FILTER (?period = ""2007-2008""^^xsd:string)

  # Thomas Letsch's involvement with a team
  dbr:Thomas_Letsch dbo:managerOf ?team .

  # The manager must be the same for both VfL Bochum and Thomas Letsch's team
  ?team dbp:managementPeriod ?letschPeriod .
  
  FILTER (?letschPeriod = ""2007-2008""^^xsd:string)
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?war rdfs:label ""Central African Republic Civil War""@en .
  ?office dbo:partOf ?war ;
          a dbo:GovernmentOffice ;
          dbo:officeHolder ?holder .
  ?holder a dbo:Politician ;
          dbo:occupation ?occupation .
  FILTER(?occupation = ""politician"" || ?occupation = ""office holder"")
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Bob Thompson (musician)""@en .
  
  ?person dbo:occupation dbr:Singer ;
          dbo:occupation dbr:Musician .

  ?band dbo:member ?person .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
  # Find the leader of the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  
  ?candidate dbo:positionHeld ?office ;
             dbo:winner ?leader .

  # Check if the leader is associated with Santiago de Compostela
  ?leader dbo:residence dbr:Santiago_de_Compostela .
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Duke Philipp of Württemberg and his child (Person A)
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?personA .

  # Person A's child (Person B)
  ?personA dbo:child ?personB .

  # Predecessor of Person B
  ?predecessor dbo:successor ?personB .

  # Philipp Albrecht, Duke of Württemberg and his child (Person C)
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?personC .

  # Check if the predecessor is a child of Person C
  ?personC dbo:child ?predecessor .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Gustavo_Petro 
    dbr:Roy_Barreras 
  }
  
  ?person dbo:name ?name .
  ?person dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (LANG(?partyLabel) = 'en')
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInJapan
WHERE {
  VALUES ?asakawa { dbr:Chieko_Asakawa }
  
  ?asakawa dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?asakawa dbo:nationality ?entityInJapan .
    FILTER(CONTAINS(LCASE(STR(?entityInJapan)), ""japan""))
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Philip_I_of_Castile dbo:child ?child .
  
  ?child a dbo:Monarch .

  ?child dbo:father ?father .

  ?child dbo:mother dbr:Isabella_of_Austria .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person dbo:dateOfBirth ?dob .
  ?award dbo:recipient ?person ;
         dbo:year ?year .
  FILTER (?year = ""30""^^xsd:gYear) .

  OPTIONAL { ?person dbo:occupation dbr:Military_person . }
  
  ?war dbo:participatedIn ?person .
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalFather WHERE {
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .

  OPTIONAL { ?martin dbo:parent ?parent . }

  OPTIONAL { ?parent dbo:father ?grandFather . }

  ?grandFather dbp:royalty ""true""^^xsd:boolean .

  FILTER(?grandFather != ?martin)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  VALUES ?movie { 
    dbr:The_Matrix 
    dbr:ATL_(film) 
  }
  
  ?movie dbo:starring ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Find Min Hla Htut's parent
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  
  ?parent dbo:child ?minHlaHtut .

  # Find Saw Shwe Khet's child
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?sawChild dbo:parent ?sawShweKhet .

  # Find the predecessor of Saw Shwe Khet's child
  ?predecessor dbo:succeededBy ?sawChild .

  # The result is the parent of Min Hla Htut
  BIND(?parent AS ?result)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # VfL Bochum 2006-07 season
  ?bochumSeason a dbo:SoccerLeagueSeason ;
                dbo:sportTeam dbr:VfL_Bochum ;
                dbo:season ""2006–07""^^xsd:string .

  # SBV Vitesse 2020-21 season
  ?vitesseSeason a dbo:SoccerLeagueSeason ;
                 dbo:sportTeam dbr:SBV_Vitesse ;
                 dbo:season ""2020–21""^^xsd:string .

  # Find successors of the seasons
  ?bochumSuccessor dbo:successorOf ?bochumSeason .
  ?vitesseSuccessor dbo:successorOf ?vitesseSeason .

  # Manager associated with both clubs in their respective successor seasons
  ?manager dbo:managedSportTeam ?bochumSuccessor ;
           dbo:managedSportTeam ?vitesseSuccessor .

  # Ensure the entities are sports clubs and organizations
  ?bochumSuccessor a dbo:SoccerClub, dbo:Organization .
  ?vitesseSuccessor a dbo:SoccerClub, dbo:Organization .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor of ATL
  ?atlFilm dbo:title ""ATL (film)""@en .
  ?atlFilm dbo:starring ?actor .

  # Actor of Shelby Oaks
  ?shelbyOaksFilm dbo:title ""Shelby Oaks""@en .
  ?shelbyOaksFilm dbo:starring ?actor .

  # Professional alter ego The Shadow
  OPTIONAL {
    ?alterEgo dbo:name ""The Shadow""@en ;
              dbo:profession ?actor .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  ?award dbo:awardedBy dbr:New_York_(state) .
  ?award dbo:country dbr:United_States_of_America .
  ?award dbo:settlementType ?settlementType .
  FILTER(?settlementType = dbp:Settlement)
  
  ?person dbo:receivedAward ?award .
  ?award dbo:nativePlace ?nativePlace .
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?nativePlaceLabel WHERE {
  ?person dbo:nativePlace dbr:Middlesex .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER(CONTAINS(LCASE(?parentLabel), ""mary elphinstone, lady elphinstone""))
  OPTIONAL { ?parent dbo:nativePlace ?nativePlace . }
  BIND(COALESCE(STR(?nativePlace), STR(dbr:Middlesex)) AS ?nativePlaceLabel)
}
```

This query does the following:
- Selects individuals (`?person`) who are native to Middlesex.
- Finds their parents (`?parent`).
- Filters these parents to include only those related to Mary Elphinstone, Lady Elphinstone by checking if her name appears in the label of the parent.
- Optionally retrieves and binds the native place of the parent for clarity.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Bobby Shmurda's details
  dbr:Bobby_Shmurda dbo:birthName ""Ackquille Jean Pollard"" .
  dbr:Bobby_Shmurda dbo:nativePlace dbr:Florida .

  # Associated musical artist of Bobby Shmurda
  dbr:Bobby_Shmurda dbo:associatedBand ?artist .

  # Band members who are also musical artists
  ?artist dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Birth name and native place conditions for band member
  ?bandMember dbo:birthName ""Ackquille Jean Pollard"" .
  ?bandMember dbo:nativePlace dbr:Florida .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university ?foundingDate WHERE {
  # Luiza Erundina's alma mater
  VALUES ?person1 { dbr:Luiza_Erundina }
  
  ?person1 dbo:almaMater ?university .
  
  OPTIONAL {
    ?university dbo:foundingDate ?foundingDate .
  }

  # Eleonora Menicucci's alma mater
  VALUES ?person2 { dbr:Eleonora_Menicucci }
  
  ?person2 dbo:almaMater ?university2 .

  FILTER (?university = ?university2)

  OPTIONAL {
    ?university2 dbo:foundingDate ?foundingDate .
  }

}
```",4,7,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find an English settlement
  ?location a dbo:Settlement ;
            dbo:country dbr:United_Kingdom ;
            rdfs:label ?settlementLabel .
  
  FILTER (lang(?settlementLabel) = 'en' && regex(str(?settlementLabel), ""England""))

  # Find a native artist of this location
  ?artist dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?location ;
          a dbo:Artist, dbo:MusicalArtist .

  # Get the parent of this artist
  OPTIONAL { ?artist dbp:parent ?parent }
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:eventLocation dbr:Madrid ;
            dbo:date ""2003-05-25""^^xsd:date .
  
  ?officeHolder dbo:positionHeld ?position ;
                dbo:memberOf ?party ;
                dbo:holdsOffice ?election .

  ?position rdfs:label ?leaderLabel .
  
  FILTER (CONTAINS(LCASE(?leaderLabel), ""mayor"") || CONTAINS(LCASE(?leaderLabel), ""leader""))
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are interested in the `?leader`, which is derived from the label of the position held.
- **Election Event**: The query identifies the election event related to Madrid on May 25, 2003.
- **Office Holder**: It looks for individuals who held a position during this election.
- **Position Label**: We filter positions with labels containing ""mayor"" or ""leader"" to identify leadership roles.

This query assumes that DBpedia has structured data about the 2003 Madrid City Council election and related office holders. Adjustments might be necessary based on actual data availability in DBpedia.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceGovernor ?birthPlaceAwardee ?birthPlaceCeceBell
WHERE {
  # Governor of Virginia
  ?governor dbo:officeHolderOf dbr/Governor_of_Virginia.
  ?governor dbp:birthPlace ?birthPlaceGovernor.

  # Awardee related to Vince Gilligan's awards/nominations
  ?award dbo:recipient ?awardee.
  ?award dbo:nomineeOrRecipient dbr/Vince_Gilligan.
  ?awardee dbp:birthPlace ?birthPlaceAwardee.

  # Cece Bell
  dbr/Cece_Bell dbp:birthPlace ?birthPlaceCeceBell.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Melbourne .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,809,848,0,0.48823174411587206,1.0,0.6561232765612327
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the leader of West Germany
  ?leader a dbo:Chancellor ;
          dbo:nationality dbr:Germany ;
          dbo:country dbr:West_Germany .

  # Find the person born on 1968-08-26, who is a sports manager and native of West Germany
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:Germany ;
          a dbo:SportsManager .

  # Ensure this person is the manager of a soccer club season
  ?teamSeason dbo:manager ?person ;
              a dbo:SoccerClubSeason , dbo:SportsTeamSeason , dbo:SportsSeason .

  # Bind the manager to the result variable
  BIND(?person AS ?manager)
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo
WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  OPTIONAL {
    ?character dbo:alterEgoOf dbr:Kent_Allard .
    ?character rdfs:label ?alterEgo .
    FILTER (LANG(?alterEgo) = ""en"")
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES (?person ?name) {
    (dbr:Vince_Gilligan ""Vince Gilligan"")
    (dbr:Cecily_Bell ""Cece Bell"")
    (dbr:Glenn_Youngkin ""Glenn Youngkin"")
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?role WHERE {
  # Spanish Socialist Workers' Party
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?leader .

  # Leadership role in the 2009 Galician Regional Election
  ?election dbo:winner ?party .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))

  # Ensure the leader is associated with Spain
  ?leader dbo:nationality dbr:Spain .

  # Optional: Specify role if available
  OPTIONAL { ?leader dbo:position ?role }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?charles a dbo:Monarch ;
           foaf:name ""Charles I of Hungary""@en .
  
  ?charles dbo:father ?father .

  OPTIONAL { ?father dbo:royalTitle ?title . }
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  # Find the writer of ""Always the Love Songs""
  ?album dbo:title ""Always the Love Songs"" ;
         dbo:artist ?writer .

  # Check if this writer was a commander in the Great Turkish War
  OPTIONAL { 
    ?writer dbo:occupation dbr:Commander_in_the_Great_Turkish_War .
  }

  # Find commanders in the Great Turkish War
  ?commander dbo:occupation dbr:Commander_in_the_Great_Turkish_War .

  FILTER (?writer = ?commander)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember1 ?bandMember2 WHERE {
  # Find David Paton's associated musical artist
  dbr:David_Paton dbo:musicalArtist ?artist1 .
  
  # Find band members of the first artist
  ?artist1 dbo:member ?bandMember1 .

  # Find Stuart McBeath Tosh's associated musical artist
  dbr:Stuart_McBeath_Tosh dbo:musicalArtist ?artist2 .

  # Find band members of the second artist
  ?artist2 dbo:member ?bandMember2 .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorDeathPlace ?carolynJonesDeathPlace WHERE {
  # Find the actor of ""The Sky Ranger"" (1928)
  ?film a dbo:Film ;
        dbo:title ""The Sky Ranger""@en ;
        dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1928)

  ?castMember dbo:actorInFilm ?film .

  # Get the death place of this actor
  ?castMember dbo:deathPlace ?actorDeathPlace .

  # Find Carolyn Jones and her death place
  dbr:Caryn_Jones dbo:birthName ""Carolyn_Marie_Carroll""@en ;
                  dbo:deathPlace ?carolynJonesDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?alfonsoIV a dbo:Monarch ;
             foaf:name ""Alfonso IV of Aragon""@en .
  
  ?alfonsoIV dbo:child ?child .

  OPTIONAL { ?child dbo:royalTitle ?title . }
  
  ?child foaf:name ?childName .
}
```",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        dbo:number ""30""^^xsd:int .
  ?award dbo:recipient ?awardee .
}
```

This query does the following:
- Uses `dbo:Award` to identify award resources.
- Filters awards by their number using `dbo:number`.
- Retrieves the recipient of the award with `dbo:recipient`.",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Myat Hpone Pyo's father
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  
  # Spouse of the father who is royalty
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .

  # Parent of Min Hla Htut of Pyakaung
  ?spouse dbo:child dbr:Min_Hla_Htut_of_Pyakaung .

  # Predecessor of the child of Saw Shwe Khet
  ?sawChild dbo:parent dbr:Saw_Shwe_Khet .
  ?predecessor dbo:succeededBy ?sawChild .
  ?spouse dbo:succeededBy ?predecessor .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant
WHERE {
  # Find the Spanish Socialist Workers' Party
  VALUES (?psoe) { dbr/Spanish_Socialist_Workers'_Party }

  # Find Alberto Núñez Feijóo
  VALUES (?feijoo) { dbr/Alberto_Núñez_Feijóo }

  # Find administrations related to Spain
  ?administration dbo:country dbr/Spain .

  # Check if the administration is related to PSOE or Feijóo
  OPTIONAL { ?administration dbo:minister ?psoe . }
  OPTIONAL { ?administration dbo:minister ?feijoo . }

  # Find tenants of these administrations
  ?administration dbo:member ?tenant .
  
  FILTER EXISTS {
    ?tenant a dbo:Politician .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitaka ?region WHERE {
  # Mitaka is a city in Tokyo, Japan
  dbr:Mitaka dbo:country dbr:Japan .
  
  # Time zone for Japan
  dbr:Japan dbo:timeZone dbr:Japan_Standard_Time .

  # Find regions using Japan Standard Time
  ?region dbo:timeZone dbr:Japan_Standard_Time .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname WHERE {
  # Denis Kolodin
  OPTIONAL { 
    dbr:Denis_Kolodin dbo:nickname ?nickname .
  }
  
  # Aleksandr Filimonov
  OPTIONAL { 
    dbr:Aleksandr_Filimonov dbo:nickname ?nickname .
  }

  # Check if the nickname is a soccer club
  FILTER EXISTS {
    ?club rdf:type dbo:SoccerClub ;
          rdfs:label ?nickname .
  }
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?commanderOfficeHolder ?miguelMauraOffice
WHERE {
  # Find the tenant of Madrid
  ?tenantOfMadrid dbo:location dbr:Madrid .
  
  # Find the commander who is an office holder and politician involved in the Central African Republic Civil War
  ?commanderOfficeHolder a dbo:Politician ;
                        dbo:officeHolderOf ?warRole ;
                        dbo:politicalParty ?party .
  ?warRole dbo:participatedIn dbr:Central_African_Republic_Civil_War .

  # Find Miguel Maura's office
  ?miguelMauraOffice dbo:officeHolder dbr:Miguel_Maura .
  
  # Optional: Link the commander to Miguel Maura if needed (not explicitly clear from question)
  OPTIONAL { ?commanderOfficeHolder dbo:relatedTo dbr:Miguel_Maura }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?organization a dbo:SoccerClub ;
                rdfs:label ""Hong Kong C""@en .
  
  ?manager a dbo:SportsManager, dbo:SoccerManager ;
           dbo:worksFor ?organization .

}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianChild ?father WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # Filter children who are politicians
  ?child a dbo:Politician ;
         dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # Determine the father of these political children
  ?child dbo:father ?father .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Antoine,_Duke_of_Lorraine dbo:child dbr:Francis_I,_Duke_of_Lorraine .
  
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parent .

  ?parent rdf:type dbo:Monarch ;
          dbo:nobleTitle ?title .

  ?parent dbo:spouse ?spouse .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Chiang_Ching-kuo dbo:child ?child .

  ?child rdf:type dbo:Politician .

  ?child dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,3,2,0,0.6,1.0,0.7499999999999999
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  ?owner dbo:owns dbr:USS_Arcadia_(ID-1605) .

  # Step 2: Identify the author of ""Back to Work""
  ?author dbo:book dbr:Back_to_Work_(book) .

  # Step 3: Identify the spouse of Hillary Clinton
  ?spouse dbo:spouse dbr:Hillary_Clinton .

  # Find common entity satisfying all three conditions
  FILTER (?owner = ?author && ?author = ?spouse)

  # Step 4: Identify wars that are both diseases and societal events
  ?war a dbo:Disease ;
      a dbo:SocietalEvent .

  # Find the commander of such a war
  ?commander dbo:commanded ?war .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work WHERE {
  ?person a dbo:Person ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolderOf dbr:United_States_Navy .
  
  ?person dbo:authored ?work .
  FILTER EXISTS { ?work a dbo:Book . }
  
  BIND(?person AS ?author)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?person
WHERE {
  # Find the associated musical artist of The Pacely Brothers
  dbr:The_Pacely_Brothers dbo:musicalArtist ?artist .

  # Find the person born as Joseph Benjamin (Joey B)
  ?person dbo:birthName ""Joseph Benjamin""@en ;
          rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""joey b""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?person .

  # Author of ""Back to Work""
  ?book dbo:author ?person .
  FILTER (str(?book) = ""Back_to_Work_(2014_book)"")

  # Commander in Third Taiwan Strait Crisis
  ?event dbo:commander ?person .
  FILTER (str(?event) = ""Third_Taiwan_Strait_Crisis"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName ?residence WHERE {
  ?party a dbo:PoliticalParty ;
         dbp:name ""Ulster Unionist Party"" .
  
  ?party dbo:leader ?person .
  
  ?person foaf:name ?leaderName ;
          dbo:residence ?residence .

  FILTER (lang(?leaderName) = 'en')
}
```

### Explanation

- **Prefixes**: `dbo` for DBpedia ontology and `dbp` for properties.
- **Selecting Variables**: We select the leader's name (`?leaderName`) and their residence (`?residence`).
- **Finding the Party**: The query starts by identifying the Ulster Unionist Party using its name.
- **Identifying the Leader**: It then finds the leader of this party.
- **Retrieving Residence**: Finally, it retrieves the residence associated with this person.

This query assumes that the most recent or current leader is stored in DBpedia and that their residence information is available. Adjustments might be needed if additional filtering (e.g., by time) is required to ensure the correct leader is selected.",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Charles I of Hungary
  ?charlesI dbr:Charles_I_of_Hungary .
  
  # Father of Charles I
  ?father dbo:childOf ?charlesI ;
          dbo:spouse ?mother .

  # Grandfather (Father's Parent) who is royalty
  ?grandfather dbo:parent ?father ;
               a dbo:Monarch .

  # Stephen V of Hungary and his child
  ?stephenV dbr:Stephen_V_of_Hungary .
  FILTER (?grandfather = ?childOfStephenv)

  # Philip I, Prince of Taranto
  ?philipI dbr:Philip_I,_Prince_of_Taranto .

  # Father of Philip I
  ?fatherPhil dbo:childOf ?philipI ;
              dbo:spouse ?motherPhil .

  # Spouse of the father of Philip I
  FILTER (?grandfather = ?spouseFatherPhil)

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName ?associatedArtist WHERE {
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:bandMember dbr:Kim_Wilson .
  
  # Get the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds foaf:name ?realName .

  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?artistResource .
  
  # Ensure the associated artist is a musical artist
  ?artistResource rdf:type dbo:MusicalArtist .
  
  # Bind the associated artist to a variable
  ?artistResource foaf:name ?associatedArtist .
}
```",6,7,7,3,3,3,3,71,0,2,1,0.0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          rdf:type dbo:Athlete .
  
  ?team dbo:member ?person .
  ?team dbo:member dbr:Sergio_Agüero .

  ?person rdfs:label ?player .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  dbr:Sandro_Bertaggia dbo:birthPlace ?place .
  FILTER (strstarts(str(?place), str(dbo:)))
  OPTIONAL { ?place a dbo:Country . }
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving ""The Triple X's"" and ""Battle of Fort Royal""
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatingMilitaryUnit dbr:The_Triple_Xs ;
            dbo:participatingMilitaryUnit dbr:Battle_of_Fort_Royal .

  # Find the event associated with Robert Calder
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:agent dbr:Robert_Calder .

  # Find the commander of the conflict
  ?conflict dbo:commander ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find Nate Newton and his associated band (which is an organization)
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton"" .
  
  ?band dbo:member ?nateNewton ;
        a dbo:Band, dbo:Organization .

  # Step 2: Find the musical artist (organization) associated with that band
  ?associatedArtist dbo:associatedMusicalArtist ?band ;
                    a dbo:Musician, dbo:Organization .
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnus ?birthPlace
WHERE {
  ?university a dbo:University ;
              rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  
  ?alumnus dbo:alumnusOf ?university .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find children of Prince Faisal bin Hussein who are royalty
  ?child dbo:spouse|dbo:childOf dbr:Faisal_bin_Hussein ;
         a dbo:Monarch .

  # Ensure the child is also a parent of Prince Omar bin Faisal
  ?child dbo:parent dbr:Omar_bin_Faisal .

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Step 1: Find Bob Thompson's birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbo:birthName ?birthName .

  # Step 2: Find Walter B. Gibson's fictional character that is also a comics character
  ?gibson a dbo:Writer ;
          foaf:name ""Walter B. Gibson"" .
  ?character dbo:creator ?gibson ;
             a dbo:FictionalCharacter, dbo:ComicsCharacter .

  # Step 3: Find the band of the person with Bob Thompson's birth name
  ?person dbo:birthName ?birthName ;
          dbo:band ?band .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Find commanders in the Great Turkish War
  ?war dbo:wikiPageRedirects dbr:Great_Turkish_War .
  ?war dbo:commander ?commander .

  # Reference to George Ducas
  OPTIONAL { 
    ?commander rdfs:label ""George Ducas""@en .
  }

  # Find successor of Yurii Khmelnytsky
  ?khmelnytsky dbo:successor ?successor .
  ?khmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .

  FILTER(?commander != dbr:Yurii_Khmelnytsky) # Ensure commander is not Yurii Khmelnytsky
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlaceEntity WHERE {
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:relatedEvent ?war .

  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Place ;
              rdfs:label ?birthPlaceEntity .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:participatedIn ?war .
  ?war dbo:relatedTo ?disease .
  ?war dbo:relatedTo ?societalEvent .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?anotherChild ?parent
WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             dbp:name ""Frederick Stanley, 16th Earl of Derby""@en .

  # Find Victor Stanley as one of his children
  ?victor a dbo:Person ;
          dbp:name ""Victor Stanley (Royal Navy officer)""@en ;
          dbo:parent ?frederick .

  # Find another child of Frederick
  ?anotherChild a dbo:Person ;
                dbo:parent ?frederick .
  
  FILTER(?anotherChild != ?victor)

  # Identify the parent of this other child, which should be Frederick
  ?anotherChild dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Find the leader of the 2009 Galician Regional Election
  ?leader dbo:election dbr:Galician_Regional_Election,_2009 .
  ?leader dbo:office ""Leader"" .

  # Ensure the leader is a citizen of Spain and speaks Spanish
  ?leader dbo:nationality dbr:Spain .
  ?leader dbo:speaksLanguage dbr:Spanish_language .

  # Find the residence of this leader
  ?leader dbo:residence ?residence .

  # Check if the residence is a country
  ?residence rdf:type dbo:Country .
  
  # Get the tenant (country) of the residence
  ?residence dbp:name ?tenant .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyRetailleau ?successorParty WHERE {
  # Find Bruno Retailleau's party
  dbr:Bruno_Retailleau dbo:politicalParty ?partyRetailleau .

  # Find Patrice Martin-Lalande's successor who is a politician and French
  dbr:Patrice_Martin-Lalande dbp:succeededBy ?successor .
  ?successor rdf:type dbo:Politician ;
             dbo:nationality dbr:France .

  # Find the political party of the successor
  ?successor dbo:politicalParty ?successorParty .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Find the child of Saw Shwe Khet
    ?child dbo:parent dbr:Saw_Shwe_Khet .
    
    # Step 2: Find Minye Kyawswa's grandchild
    ?minyeChild dbo:parent dbr:Minye_Kyawswa .
    ?grandchild dbo:parent ?minyeChild .

    # Step 3: Find the predecessor of Saw Shwe Khet's child
    ?predecessor dbo:child ?child .
}
```",5,5,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country
WHERE {
  # Find Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .

  # Find Álvaro Quirós' residence and its tenant country
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residence ?residence .
    ?residence dbo:tenant ?country .
    FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbp:name ""Arthur Stanley""@en .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?teamName WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          foaf:name ?managerName .
  
  ?person dbo:managesTeam ?team .

  ?team a dbo:SoccerClubSeason ;
        a dbo:SportsSeason ;
        a dbo:SportsTeamSeason ;
        foaf:name ?teamName .
}
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory ?administrationRole
WHERE {
  # Identify Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?person a dbo:Monarch ;
          dbo:birthPlace dbr:Copenhagen ;
          rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .

  # Find territories administered from Copenhagen
  ?administration dbo:administrativeUnit ?territory ;
                  dbo:administrator ?person ;
                  dbo:location dbr:Copenhagen .

  # Ensure the person is royalty
  ?person a dbo:RoyalFamilyMember .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?role WHERE {
  ?emilia dbo:birthPlace dbr:Bulgaria .
  ?emilia rdfs:label ""Emilia""@en .
  
  OPTIONAL { ?emilia dbo:profession ?singerRole . }
  OPTIONAL { ?emilia dbp:bandMemberOf ?band . }

  FILTER (lang(?singerRole) = 'en' || lang(?band) = 'en')
}
```

This query does the following:
- Identifies Emilia by her birthplace and label.
- Retrieves her profession if it is related to being a singer.
- Retrieves any band she might be a member of.",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Min Hla""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?award ?settlement
WHERE {
  # Linda Miller (actress)
  ?linda a dbo:Actor ;
         foaf:name ""Linda Miller"" ;
         dbo:spouse ?parent .

  # Child of Linda Miller
  ?parent dbo:child ?child .

  # Award and its awardee from New York
  ?award dbo:recipient ?awardee .
  ?awardee dbp:nationality dbr:United_States ;
          dbo:birthPlace dbr:New_York_(state) .

  # Child's native place is the award
  ?child dbo:nativePlace ?award .

  # Child is a settlement and American
  ?child a dbo:Settlement ;
         dbp:nationality dbr:United_States .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional (GROUP_CONCAT(DISTINCT ?role; separator="", "") AS ?roles)
WHERE {
  # Find professionals associated with ""Lasso the Moon""
  ?album dbo:title ""Lasso the Moon"" ;
         dbo:genre/dbo:subClassOf* dbr:Film ;
         dbo:work dbr:Lasso_the_Moon .

  # Find professionals who are actors
  ?professional dbo:profession dbr:Actor .

  # Link professional to album through roles
  ?album dbo:performer ?professional .
  
  # Get the roles of the professional in relation to the album
  ?role dbo:actor ?professional ;
        dbo:work ?album .

  # Ensure the album is both a film and a work
  FILTER EXISTS { ?album dbo:genre/dbo:subClassOf* dbr:Film }
  FILTER EXISTS { ?album dbo:work dbr:Lasso_the_Moon }
}
GROUP BY ?professional
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```

This query uses the `dbo:designer` property to find the designer of the Aston Martin AMR1. The resource for Aston Martin AMR1 is accessed via its DBpedia URI.",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Step 3: Identify the father of this royal child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Step 4: Find the spouse of this father
  ?father dbp:spouse ?spouse .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nickCurranArtist ?fabulousThunderbirdsRealName ?bandMemberBand 
WHERE {
  # Associated musical artist of Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  }

  # Real name(s) of The Fabulous Thunderbirds
  OPTIONAL {
    dbr:The_Fabulous_Thunderbirds dbo:member ?bandMember .
    ?bandMember dbp:birthName ?fabulousThunderbirdsRealName .
  }

  # Band of a band member born on 1945-03-30
  OPTIONAL {
    ?person dbp:birthday ""1945-03-30""^^xsd:date ;
            dbo:associatedBand ?bandMemberBand .
    FILTER EXISTS { ?person dbo:occupation dbr:Musical_artist }
  }
}
```",6,7,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?ceceBellBirthPlace ?vinceGilliganBirthPlace 
WHERE {
  # Paulus Powell's birthplace
  ?powell dbo:birthPlace ?region .
  FILTER (STRSTARTS(STR(?region), ""http://dbpedia.org/resource/""))

  # Governor of the region where Paulus Powell was born
  ?governor dbo:office ?office .
  ?office dbo:location ?region .
  ?governor dbp:birthPlace ?governorBirthPlace .

  FILTER (STRSTARTS(STR(?office), ""http://dbpedia.org/resource/Office_of_the_Governor_""))

  # Cece Bell's birthplace
  dbr:Cecily_Ann_Bell dbo:birthPlace ?ceceBellBirthPlace .

  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find actor of ""Johnny Doughboy""
  ?actor dbo:film dbr:Johnny_Doughboy_(film) .
  
  # Find producer of ""A Star Is Born (1937)""
  ?person dbo:producedFilm dbr:A_Star_Is_Born_(1937_film) .
  
  # Ensure the person is both actor and producer
  FILTER (?actor = ?person)
  
  # Determine their claim to fame, which is a notable work they are known for
  ?person dbo:notableWork ?work .
  
  # Find the producer of this notable work
  ?work dbo:producer ?producer .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?theme
WHERE {
  ?dikhawa rdfs:label ""Dikhawa""@en .
  OPTIONAL { ?dikhawa dbo:genre ?theme . }
  OPTIONAL { ?dikhawa dbo:subject ?theme . }
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ceceBirthPlace ?governorBirthPlace WHERE {
  # Step 1: Find Cece Bell's birthplace
  dbr:Cecelia_Ann_Bell dbo:birthPlace ?ceceBirthPlace .

  # Step 2: Determine Paulus Powell's birth region
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
  
  # Assuming the birth place is a city, find its administrative region
  ?paulusBirthPlace dbo:administrativeRegion ?region .

  # Step 3: Identify the governor of that region
  ?governor dbo:office ?office ;
           dbo:officeHolderOf ?region .
  FILTER (str(?office) = ""Governor"")

  # Step 4: Retrieve the birthplace of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Dorothea of Lorraine
  ?dorothea a dbo:Person ;
           rdfs:label ""Dorothea of Lorraine""@en .
  
  # Step 2: Find her father
  ?father dbo:child ?dorothea .

  # Step 3: Determine the father's parent (Dorothea's grandfather)
  ?grandfather dbo:child ?father .

  # Step 4: Identify the parent of this grandfather
  ?grandparent dbo:child ?grandfather .
}
```",2,2,3,2,1,3,2,20,0,7,2,0.0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  dbr:Roy_Barreras dbo:party ?party .
  dbr:Daniel_Elái_Galán dbo:nationality ?country .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:name ""William Tennant"" .
  ?person dbo:rank ?rank .
  OPTIONAL { ?person dbo:serviceInMilitaryOrganization ?organization . }
  FILTER (CONTAINS(LCASE(?organization), ""royal navy""))
  BIND(""force"" AS ?force)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find Nate Newton
  ?nate a dbo:Musician ;
        foaf:name ""Nate Newton"" .

  # Find the associated musical artist (band)
  ?nate dbo:associatedBand ?band .
  
  # Ensure the band is also an organization
  ?band a dbo:MusicalArtist, dbo:Organization .
}
```

This query does the following:
- It identifies Nate Newton as a musician.
- It finds the band associated with him using `dbo:associatedBand`.
- It checks if this band is both a musical artist and an organization.",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Find people who have the Grand Duchy of Finland as their country or residence
  ?person dbo:country dbr:Grand_Duchy_of_Finland .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
  
  UNION
  
  ?person dbo:residence dbr:Grand_Duchy_of_Finland .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
}
ORDER BY ?name
LIMIT 100",1,1,2,1,1,2,3,28,0,0,355,0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?spouse1 dbo:spouse ?minPhyu .
  ?child dbo:parent ?spouse1 .
  ?spouse2 dbo:spouse ?shweKhet .
  ?child dbo:parent ?spouse2 .
  ?minHla dbp:child ?child .
  FILTER (EXISTS { ?child a dbo:Royalty }) 
  ?predecessor dbo:parent ?child .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?alfonsoIV .
  FILTER(?alfonsoIV = dbp:Alfonso_IV_of_Aragon) .
  ?person dbo:child ?child .
}
```

This query assumes that Alfonso IV of Aragon is linked to his spouse, and through the spouse, we can find their children. Adjustments might be needed based on the exact structure in DBpedia.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?war ?commander WHERE {
  # George Pickett resource
  dbr:George_Pickett dbo:participatedIn ?war .
  
  # Ensure the war is a societal event
  ?war rdf:type dbo:SocietalEvent .

  # Find the commander of the war
  ?war dbo:commander ?commander .
}
```

This query does the following:
- Identifies wars (`?war`) that George Pickett participated in.
- Ensures these wars are classified as societal events.
- Retrieves the commanders (`?commander`) of those wars.",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Find the musical artist associated with Nate Newton
  ?artist dbo:associatedMusicalArtist dbr:Nate_Newton .

  # Ensure this artist is both a band and an organization
  ?artist rdf:type dbo:Band .
  ?artist rdf:type dbo:Organization .

  # Get the band members of this artist
  ?artist dbo:bandMember ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player
WHERE {
  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actor who is a soccer player and athlete in the film
  ?actor dbo:starring ?film ;
         rdf:type dbo:SoccerPlayer, dbo:Athlete .

  # Teams associated with Juan Carlos Molina and Pablo Aimar
  ?teamMolina dbp:player dbr:Juan_Carlos_Molina_(footballer) .
  ?teamAimar dbp:player dbr:Pablo_Aimar .

  # Players in these teams
  ?player dbp:team ?teamMolina ;
          dbp:team ?teamAimar .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Frederick_Stanley_16th_Earl_of_Derby dbo:child ?child .
  ?child dbo:occupation dbr:Politician .
  ?child dbo:child dbr:Edward_Stanley_17th_Earl_of_Derby .
  ?child dbo:child ?awardee .
  ?awardee dbo:awardReceived dbr:Rodney_Lees_Award .
  ?child dbo:father ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Find the administration related to the Spanish Socialist Workers' Party
  ?party dbo:member ?person .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Find Álvaro Quirós's residence country
  dbr:Álvaro_Quirós dbo:nationality ?country .

  # The tenant must be associated with both the administration and the residence country
  ?person dbo:officeHolder ?administration .
  ?administration dbo:country dbr:Spain .
  
  ?person dbo:nationality ?country .
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of ""Dispatches from Elsewhere""
  ?series dbo:starring ?actor .
  FILTER (str(?series) = ""Dispatches_from_Elsewhere_(TV_series)"")

  # Ensure the actor is a professional in Actor
  ?actor rdf:type dbo:Actor .

  # Find Lamont Cranston, the alter ego of The Shadow
  ?shadow dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Check if the actor has any connection to Lamont Cranston
  OPTIONAL { 
    ?actor dbo:portrayal dbr:Lamont_Cranston .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Politician ;
          dbo:countryLeaderOf dbr:West_Germany ;
          dbo:managerOfTeam dbr:VfL_Bochum .
  
  ?person dbp:nativePlace ?nativePlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?war1 dbo:wikiPageRedirects dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?commander1 dbo:positionHeld ?office ;
              dbo:commanded ?war1 .
  ?politician dbo:succeededBy ?commander1 ;
              dbo:positionHeld ?office ;
              a dbo:Politician ;
              dbo:commanded dbr:Great_Turkish_War .

  FILTER EXISTS { ?politician rdfs:label ?successor . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?actor dbo:starring dbr:High_Society_Blues .
  
  # Find the producer of ""The Adventures of Tom Sawyer (1938 film)""
  ?person dbo:producedFilm dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .

  # Ensure the person is both actor and producer
  FILTER (?actor = ?person)

  # Identify a claim to fame that is both a movie and a work
  ?claimToFame dbo:starring ?actor .
  ?claimToFame rdf:type dbo:Film .

  # Find the producer of this claim to fame
  ?claimToFame dbo:producer ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find Elorm Kabu Amenyah and his associated musical artist
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah"" .
  
  ?elorm dbo:associatedBand ?artist1 .

  # Find the writer of ""The Live Anthology"" and their associated musical artist
  dbr:The_Live_Anthology dbo:writer ?writer .
  
  ?writer dbo:associatedBand ?artist2 .

  # Match the common musical artist
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?heussNativePlace .
  
  # Manager of VfL Bochum in the 2007–08 season
  ?bochumManager dbp:managerOf [
    a dbo:SoccerClub ;
    dbp:name ""VfL Bochum"" ;
    dbp:season ""2007–08""
  ] .
  
  # Manager of SBV Vitesse in the 2020–21 season
  ?vitesseManager dbp:managerOf [
    a dbo:SoccerClub ;
    dbp:name ""SBV Vitesse"" ;
    dbp:season ""2020–21""
  ] .

  # Check if both managers are the same person
  FILTER (?bochumManager = ?vitesseManager)

  # Get the native country of this manager
  ?vitesseManager dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ?nativeCountry .
  
  # Ensure the labels are in English
  FILTER (LANG(?nativeCountry) = ""en"")
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?event dbo:location dbr:Charleston,_South_Carolina ;
         dbo:participatedIn [
           a dbo:MilitaryConflict ;
           dbo:commander dbr:Amasa_Tracy ;
           dbo:commander dbr:Quincy_Adams_Gillmore
         ] .
  OPTIONAL { ?event dbo:description ?description }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?spouse WHERE {
  # Hillary Clinton's book
  dbr:Hillary_Clinton dbo:author dbr:The_Book_of_Hillary_Clinton .
  
  # Politician and office holder in Chappaqua, New York
  ?politician a dbo:Politician ;
              dbo:residence dbr:Chappaqua,_New_York ;
              foaf:name ?name .

  # Hillary Clinton's spouse
  ?spouse dbo:spouse dbr:Hillary_Clinton .
  
  # The spouse is also an author and politician
  ?spouse a dbo:Politician, dbo:Author .

  # Link the politician to Chappaqua resident
  ?politician foaf:name ?name .
  FILTER(?name = ""Bill Clinton"")
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ekaterinaBirthplace ?residentBirthplace WHERE {
  # Ekaterina Zaharieva's birthplace
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?ekaterinaBirthplace .

  # Resident of Sofia's birthplace
  ?person dbo:residence dbr:Sofia .
  ?person dbo:birthPlace ?residentBirthplace .
}
```",3,3,4,2,2,3,2,20,2,9,0,0.18181818181818182,1.0,0.3076923076923077
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?spouse WHERE {
  ?resident a dbo:Politician ;
            dbo:officeHolder true ;
            dbo:residence dbr:Chappaqua,_New_York .
  
  ?work dbo:author ?author ;
        rdf:type dbo:Book ;
        foaf:name ""An Invitation to the White House"" .

  ?author dbo:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:officeHolder true .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage
WHERE {
  # Find Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:country dbr:Russia .

  # Get the native language of Russia
  dbr:Russia dbo:nativeLanguage ?nativeLanguage .
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfPerson ?realNameOfKimWilsonBand
WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Get the band of this person
  ?bandOfPerson dbo:member ?person .

  # Find Kim Wilson and his real name
  dbr:Kim_Wilson dbo:birthName ?realNameOfKimWilsonBand ;

  # Get the band associated with Kim Wilson
  ?kimBand dbo:member dbr:Kim_Wilson .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Find Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbp:title ""Earl of Derby""@en .

  # Step 2: Identify his parent
  ?parent dbo:child ?edward .
  
  # Step 3: Find the child of this parent who is a politician and an office holder
  ?politicianChild dbo:child ?parent ;
                   a dbo:Politician ;
                   dbo:officeHolder true .

  # Step 4: Identify the parent of this politician/office holder
  ?grandparent dbo:child ?politicianChild .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the writer of ""The First Glove""
  ?work dbo:author ?writer .
  
  # Ensure the work is ""The First Glove""
  FILTER(STR(?work) = STR(dbr:The_First_Glove))
  
  # Find any connection between the writer and a player
  ?writer dbo:spouse|dbo:child|dbo:sibling|dbo:colleague ?player .
  
  # Ensure the player is indeed a player (e.g., sports player)
  ?player rdf:type dbo:Athlete .
}
```",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the organization associated with Cavalera Conspiracy
  ?cavaleraConspiracy dbo:musicalArtist ?organization .
  FILTER (strstarts(str(?cavaleraConspiracy), ""Cavalera_Conspiracy""))

  # Find members of this organization
  ?organization dbo:member ?person .

  # Find Mudvayne and its members
  ?mudvayne dbo:musicalArtist ?person .
  FILTER (strstarts(str(?mudvayne), ""Mudvayne""))
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKimWilson ?bandNickCurran ?bandEricClapton
WHERE {
  # Kim Wilson's band
  dbr:Kim_Wilson dbo:leadMemberOf ?bandKimWilson .
  
  # Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedBand ?bandNickCurran .

  # Eric Clapton's bands
  dbr:Eric_Clapton dbo:memberOf ?bandEricClapton .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonChild
WHERE {
  # Alfonso VI of León and Castile's great-grandchild
  ?alfonsoVI a dbo:Monarch ;
             dbo:spouse ?spouseAlfonso ;
             dbo:child ?childAlfonso .
  ?childAlfonso dbo:child ?grandChildAlfonso .
  ?grandChildAlfonso dbo:child ?greatGrandChildAlfonso .

  # Roger II of Sicily's child who is royalty
  ?rogerII a dbo:Monarch ;
           dbo:spouse ?spouseRoger ;
           dbo:child ?childRoger .
  FILTER (EXISTS { ?childRoger a dbo:Royalty }).

  # Find the common individual
  VALUES ?commonChild { ?greatGrandChildAlfonso ?childRoger }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force
WHERE {
  # Find the war associated with Amasa Tracy
  OPTIONAL {
    dbr:Amasa_Tracy dbo:militaryConflict ?war .
  }
  
  # Find the force or command associated with Quincy Adams Gillmore
  OPTIONAL {
    dbr:Quincy_Adams_Gillmore dbo:militaryCommand ?force .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:birthName ""Shobhna Samarth""@en .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Country .
  BIND(?place AS ?country)
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?monarch WHERE {
  ?monarch dbo:country dbr:Spain .
  ?monarch a dbo:Monarch .
  FILTER NOT EXISTS { ?monarch dbo:endTime ?endTime . }
}
```

Explanation:
- `dbo:country dbr:Spain` links the monarch to Spain.
- `a dbo:Monarch` ensures that the entity is of type Monarch.
- The filter `FILTER NOT EXISTS { ?monarch dbo:endTime ?endTime . }` ensures we are getting a current monarch by checking there's no end time for their reign.",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse WHERE {
  # Find predecessor of Myat Hpone Pyo
  ?myat_hpone_pyo dbo:successor ?predecessor .
  
  # Find father of Myat Hpone Pyo and his spouse
  ?myat_hpone_pyo dbo:father ?father .
  ?father dbo:spouse ?spouse .

  # Ensure the predecessor is royalty
  ?predecessor a dbo:Monarch .

  # Find parent of Min Hla Htut of Pyakaung and their child
  dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?parent .
  ?parent dbo:child ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?profession WHERE {
  # Find the actor of ""Dispatches from Elsewhere""
  ?show dbr:Dispatches_from_Elsewhere .
  ?show dbo:starring ?actor .

  # Get the profession of this actor
  ?actor dbo:occupation ?profession .

  # Find other actors with the same profession
  ?otherActor dbo:occupation ?profession .
  
  # Filter for those who are politicians and acted in ""Ab Kya Hoga""
  ?otherActor dbp:politicalParty ?party ; 
              dbo:starring dbr:Ab_Kya_Hoga .

  FILTER(?actor != ?otherActor)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the song ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:performer dbr:R.E.M. .

  # Get the producer of the song
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Ensure the producer is an organization and a band/group
  ?producer rdf:type dbo:Band .
  ?producer rdf:type dbo:Organization .
}
```

This query does the following:
- It identifies ""Lotus"" by R.E.M. using its DBpedia resource.
- It retrieves the producer of this song.
- It filters the producers to ensure they are both a band/group and an organization.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?realName
WHERE {
  ?alfonso rdf:type dbo:Monarch ;
           rdfs:label ""Alfonso IV of Aragon""@en .
  
  ?alfonso dbo:child ?child .
  
  ?child rdf:type dbo:Monarch ;
         rdfs:label ?realName .
}
```

This query does the following:
- Identifies Alfonso IV of Aragon as a `dbo:Monarch`.
- Finds his children using the `dbo:child` property.
- Filters these children to ensure they are also monarchs (`rdf:type dbo:Monarch`).
- Retrieves their real names using `rdfs:label`.",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis's death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Wars involving Napoleon Zervas and Konstantinos Ventiris
  OPTIONAL { 
    ?war dbo:participatedIn dbr:Napoleon_Zervas .
    ?war dbo:participatedIn dbr:Konstantinos_Ventiris .
  }

  # Check if the death place is related to these wars
  ?deathPlace dbo:location ?settlement .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Charleston,_South_Carolina .
}
```

This query selects entities (`?entity`) that have a `dbo:location` property pointing to the resource for Charleston, South Carolina.",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find William I
  dbr:William_I_of_England a dbo:Monarch .

  # Find his children who are royalty
  ?parent dbo:spouse|dbo:partner ?williamI .
  ?williamI a dbo:Monarch ;
            foaf:name ""William I""@en .
  
  ?child dbo:parent ?parent ;
         a dbo:Monarch .

  # Ensure the parent is also an office holder
  ?parent a dbo:OfficeHolder .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?profession .

  # Find other professionals with the same occupation
  ?person dbo:occupation ?profession .
  
  # Ensure they are actors in Rustlers' Rhapsody
  ?person dbo:film ?rustlersRhapsody .
  ?rustlersRhapsody rdfs:label ""Rustlers' Rhapsody""@en .

  FILTER(?professional != dbr:Frédéric_Bouraly) # Exclude Frédéric Bouraly himself
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Uncle Murda"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER EXISTS { 
    ?person owl:sameAs <http://dbpedia.org/resource/Ackquille_Jean_Pollard> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?carl a dbo:Duke ;
        foaf:name ""Carl, Duke of Württemberg"" .
  
  ?carl dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Nick Curran and check if he is a musical artist
  dbr:Nick_Curran dbo:occupation dbr:Musical_artist .
  
  # Check for any association with The Fabulous Thunderbirds
  OPTIONAL { 
    ?association dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
    ?association dbo:person dbr:Nick_Curran .
  }
  
  # Return the artist associated with Nick Curran
  ?artist dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?na'od dbo:father ?father .
  FILTER (str(?na'od) = ""Na'od"") .

  # Check if the father is royalty
  ?father a dbo:Monarch ;
          a dbo:OfficeHolder .

}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Jamie T""@en .
  ?person dbo:occupation ?profession .
}
```

This query does the following:
- Uses `dbo:MusicalArtist` to identify Jamie T as a musical artist.
- Searches for an entity with the name ""Jamie T"" using the `foaf:name` property, which is commonly used in DBpedia for names.
- Retrieves the occupation/profession associated with this person using the `dbo:occupation` property.",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Anxo Quintana's leadership role in an administration event
  ?event dbo:leader dbr:Anxo_Quintana .
  
  # The office related to the event
  ?event dbo:positionHeld ?office .

  # The tenant of the administration is Spanish and associated with PSOE
  ?administration dbo:member dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .

  # Linking the event to the administration
  ?event dbo:partOf ?administration .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?awardee dbo:parent ?alumnus ;
           dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .

  ?child dbp:father ?father .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceGlennYoungkin ?birthPlaceAwardee ?birthPlaceAuthor
WHERE {
  # Birthplace of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?birthPlaceGlennYoungkin .

  # Find an award or nomination for Vince Gilligan and the awardee's birthplace
  OPTIONAL {
    ?award dbo:recipient dbr:Vince_Gilligan .
    ?award dbo:awardee ?awardee .
    ?awardee dbo:birthPlace ?birthPlaceAwardee .
  }

  # Birthplace of the author of ""El Deafo""
  dbr:El_Deafo dbo:author ?author .
  ?author dbo:birthPlace ?birthPlaceAuthor .
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?conflict
WHERE {
  # Office held by Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Commander who is an office holder and a politician
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice .

  # Military conflict involving Manuel Pinto da Costa
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant dbr:Manuel_Pinto_da_Costa .

  # The commander's office is related to the military conflict
  ?commanderOffice dbo:relatedTo ?conflict .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbp:occupation ""Politician""@en .
  
  OPTIONAL { 
    ?arthur dbo:father ?father .
  }
  
  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbp:occupation ""Royal_Navy_officer""@en .

  OPTIONAL {
    ?victor dbo:parent ?father .
  }

  FILTER(?father = ?father) # Ensure the same person is returned for both
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?philip a dbo:Monarch ;
          foaf:name ""Philip I of Castile""@en .

  ?child dbo:parent ?philip ;
         a dbo:Person .

  OPTIONAL { ?child dbp:title ?title . FILTER(STRSTARTS(LCASE(?title), ""king"") || STRSTARTS(LCASE(?title), ""queen"")) }

  ?child dbo:parent ?father .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:SawShweKhet ;
          dbo:child ?child .
  
  FILTER EXISTS { 
    ?child dbo:royalty true .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?description WHERE {
  ?order a dbo:OrderOfChivalry ;
         rdfs:label ""Order of the Medjidie""@en .
  
  ?entity dbo:country dbr:Ottoman_Empire ;
          dbo:wikiPageDescription ?description .

  FILTER(CONTAINS(LCASE(?description), ""medjidie""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find members of the band ""Khlyst""
  ?member dbo:bandMemberOf dbr:Khlyst .
  
  # Step 2: Filter those who are also musical artists
  ?member a dbo:MusicalArtist .

  # Step 3: Find associated musical artist(s) of these filtered members
  ?member dbo:associatedBandOrMusicArtist ?secondLevelArtist .
  ?secondLevelArtist a dbo:MusicalArtist .

  # Step 4: Find the associated musical artist(s) of these second-level artists
  ?secondLevelArtist dbo:associatedBandOrMusicArtist ?finalArtist .
  ?finalArtist a dbo:MusicalArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?spouse WHERE {
  # Find the author of ""Back to Work""
  ?book dbo:title ""Back to Work""@en .
  ?book dbo:author ?author .

  # Identify a war that is both a disease and societal event involving U.S. Navy
  ?war dbo:isClassifiedAs dbr:Disease ;
       dbo:isClassifiedAs dbr:Societal_event ;
       dbo:militaryConflictParticipant dbr:United_States_Navy .

  # Find the spouse of the author who is a politician and office holder related to ""An Invitation to the White House""
  ?author dbp:spouse ?spouse .
  ?spouse dbo:occupation dbr:Politician ;
         dbo:officeHolderOf ?office .
  OPTIONAL { ?invitation dbo:title ""An Invitation to the White House""@en . }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?notableWork WHERE {
  # Find the actor associated with ""Johnny Doughboy""
  ?film a dbo:Film ;
        dbo:title ""Johnny Doughboy""@en .
  
  ?film dbo:starring ?actor .

  # Find another notable work by this actor
  ?otherFilm dbo:starring ?actor ;
             dbo:title ?notableWork .
  
  FILTER(?film != ?otherFilm)
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find USS Arcadia (ID-1605) owner
  ?arcadia a dbo:Ship ;
           dbo:owner ?owner .

  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Find Bill Clinton's book
  ?book a dbo:Book ;
        dbo:author dbr:Bill_Clinton .

  # Identify the war as both a disease and societal event (World War I)
  ?war a dbo:MilitaryConflict, dbo:Disease ;
       rdfs:label ?warLabel .

  FILTER(CONTAINS(LCASE(?warLabel), ""world war i"") && CONTAINS(LCASE(?warLabel), ""influenza""))

  # Find the commander of World War I
  ?commander dbo:commanded ?war .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:An_Invitation_to_the_White_House dbo:author ?author .

  ?author rdf:type dbo:Politician .

  ?author dbo:officeHolderOf ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?associatedArtist WHERE {
  # Find the actor of ""The Campus Queen""
  ?film a dbo:Film ;
        foaf:name ""The Campus Queen"" .
  
  ?castMember dbo:cast dbp:role ?role ;
              foaf:name ?actor .

  # Find Tiwa Savage by her birth name
  ?person foaf:name ""Tiwa Savage""@en ;
          dbo:birthName ""Cynthia Ikponmwenosa Morgan""@en ;
          dbo:associatedMusicalArtist ?artist .
  
  ?artist foaf:name ?associatedArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Find the commander of the Siege of Mukha who is royalty
  ?commander dbo:positionTitle ?title .
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander dbo:nationality ?nationality .
  ?commander dbp:title ?royalTitle .

  # Ensure the commander is royalty
  FILTER EXISTS { ?commander rdf:type dbo:Monarch . }

  # Find the parent of this commander who is also royalty
  ?parent dbo:child ?commander .
  ?parent rdf:type dbo:Monarch .

  # Optional: Filter to ensure the parent has a royal title
  OPTIONAL { ?parent dbp:title ?parentRoyalTitle }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?series WHERE {
  ?book dbo:title ""The Golden Master""@en .
  ?book dbo:partOfSeries ?series .
}
```

This query does the following:
- Uses `dbo:title` to find books with the title ""The Golden Master"".
- Uses `dbo:partOfSeries` to identify which series this book is part of.
- Retrieves the series information.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Baeda Maryam I
  ?baedaMaryamI a dbo:Monarch ;
                foaf:name ""Baeda Maryam I""@en .

  # Child of Baeda Maryam I
  ?child dbo:parent ?baedaMaryamI .

  # Father of the child (grandfather of Baeda Maryam I's child)
  ?grandfather dbo:parent ?child .

  # Alter ego of The Shadow
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  
  ?alterEgo dbo:alias ?shadow ;
            a dbo:Monarch ;  # Ensure it is royalty
            dbo:officeHolder true .  # Ensure it is an office holder

  # Link the alter ego to the grandfather
  ?grandfather foaf:name ?alterEgoName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Identify Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:nationality ?nationality .
  
  # Ensure he is a royalty member (optional, for clarity)
  OPTIONAL { 
    ?person dbo:royalHouse ?royalHouse .
    FILTER EXISTS { ?person dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck }
  }

  # Find any administrative roles
  OPTIONAL {
    ?person dbo:positionHeld ?administration .
    FILTER EXISTS { ?person dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck }
  }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description ?relatedEvent ?eventDescription WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Toyotomi Hidenaga""@en ;
          dbo:birthPlace dbr:Japan .
  
  OPTIONAL { 
    ?person dbo:spouse ?relatedPerson .
    ?relatedPerson dbo:spouse ?person .
  }
  
  OPTIONAL {
    ?event a dbo:Event ;
           dbo:place dbr:Japan ;
           rdfs:label ?relatedEvent .
    ?event dbo:description ?eventDescription .
    
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?person .
    ?organization dbo:member ?participant .
    ?participant dbo:participatedIn ?event .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation

- **Entity Identification**: The query starts by identifying `Toyotomi Hidenaga` as a person (`dbo:Person`) with Japan as his birthplace.
- **Related Events**: It looks for events (`dbo:Event`) associated with him, particularly those taking place in Japan.
- **Optional Relationships**: Includes optional clauses to capture related persons and organizations he might have been part of, which could provide additional context about wars or battles.

This query should help retrieve relevant information about Toyotomi Hidenaga's involvement in historical events in Japan.",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?coraSueCollins a dbo:Person ;
                  foaf:name ""Cora Sue Collins""@en .
  
  ?coraSueCollins dbo:claimToFame ?work .

  ?work dbo:producer ?producer .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  # Find Eleonora Menicucci's resource
  ?person a dbo:Person ;
          rdfs:label ""Eleonora Menicucci""@en ;
          dbp:birthName ?birthName .
  
  # Ensure she is a politician
  ?person dbo:occupation dbr:Politician .

  # Find her alma mater
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a foaf:Person .
  ?person dbo:birthName ?birthName .
  FILTER (str(?birthName) = ""Koichirō"")
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthday WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marty Pollio""@en .
  ?person dbo:birthDate ?birthday .
}
```

This query assumes that the resource for Marty Pollio can be identified by his name. If there is a specific URI for him, it would be more precise to use that directly.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find children of Saw Shwe Khet
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  
  # For each child, find their predecessors
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?childOfMinHla ?childOfShweKhet ?predecessor
WHERE {
  # Spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouse .
  FILTER (str(?sawShweKhet) = ""Saw_Shwe_Khet"") .

  # Child of Saw Min Hla
  ?childOfMinHla dbo:parent dbp:Saw_Min_Hla ;
                 a dbo:Person .

  # Child of Saw Shwe Khet
  ?childOfShweKhet dbo:parent ?sawShweKhet ;
                   a dbo:Person .

  # Predecessor of the child of Saw Shwe Khet
  ?predecessor dbo:successor ?childOfShweKhet .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?settlement WHERE {
  # Find the Gillmore Medal awardee
  ?awardee dbo:award dbr:Gillmore_Medal .
  
  # Get the force associated with the awardee
  ?awardee dbo:force ?force .

  # Find Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:United_States .
  
  # Get the entity in the birthplace that is a settlement
  ?settlement a dbo:Settlement ;
              dbo:location ?birthPlace .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Step 1: Find works associated with Cora Sue Collins
  ?work dbo:author dbr:Cora_Sue_Collins .
  
  # Step 2: Identify the fictional character Kent Allard related to her work
  ?work dbo:fictionalCharacter dbr:Kent_Allard_(print) .

  # Step 3: Find the producer of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  
  # Step 4: Check if the same producer is associated with Cora Sue Collins' work
  OPTIONAL { ?work dbo:producer ?producer }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?awardee WHERE {
  ?awardee dbpedia-owl:SangeetNatakAkademiFellowship ?fellowship .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?prize a dbo:NobelPrize ;
         dbo:category dbp:Nobel_Prize_in_Physics .
  ?prize dbo:laureate ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?actor a dbo:Actor ;
         dbo:film dbr:1,000_Dollars_a_Minute ;
         dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  
  ?actor dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Alexander of Württemberg by his DBpedia resource
  dbr:Alexander_of_W%C3%BCrttemberg dbo:spouse ?spouse .
  
  # Find children related to him through the spouse relationship or directly
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { dbr:Alexander_of_W%C3%BCrttemberg dbo:child ?child . }

  FILTER (?child != dbr:Alexander_of_W%C3%BCrttemberg)
}
```

This query does the following:
- Uses `dbo:spouse` to find Alexander's spouse and then looks for children (`dbo:child`) related to that spouse.
- Also directly checks if Alexander has any children listed under him.
- Filters out Alexander himself from the results.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage
WHERE {
  # Find Shobhna Samarth's birthplace
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .

  # Check if the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Get the native language of that country
  ?birthPlace dbp:nativeLanguage ?nativeLanguage .
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?team
WHERE {
  # Find Marcelo Sarmiento's birthdate
  VALUES ?marceloSarmiento (dbr:Marcelo_Sarmiento) .
  
  ?marceloSarmiento dbo:birthday ?birthdate ;
                   a dbo:SoccerPlayer, dbo:SoccerManager .

  # Find actors in ""All or Nothing: Manchester City"" who are soccer players and athletes
  ?actor dbo:role ?show ;
         dbp:birthDate ?actorBirthdate ;
         a dbo:Athlete, dbo:SoccerPlayer .
  
  ?show rdfs:label ""All or Nothing: Manchester City""@en .

  # Find a person born on the same date as Marcelo Sarmiento
  ?person dbo:birthday ?birthdate ;
          dbp:birthDate ?actorBirthdate ;
          a dbo:SoccerPlayer, dbo:SoccerManager .
  
  # Get the team of this person
  ?team dbo:member ?person .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shatrughanProfession ?shadowAlterEgo
WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanProfession .

  # Find The Shadow (video game) alter ego, which is a comic character
  dbr:The_Shadow_(video_game) dbo:alterEgo ?shadowAlterEgo .
  FILTER EXISTS { ?shadowAlterEgo rdf:type dbo:ComicBookCharacter }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?person
WHERE {
  # Part 1: Find the ruling party in Central, Louisiana
  ?location a dbo:PopulatedPlace ;
            dbo:country dbr:United_States ;
            rdfs:label ""Central, Louisiana""@en .
  
  ?governmentOffice dbo:officeLocation ?location ;
                    dbo:partyLeader ?partyMember .

  # Part 2: Find the person born as Ann Sothern
  ?person a dbo:Person ;
          dbp:birthday ?birthday ;
          dbp:birthName ""Anne Sorelle Bergman""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity ?residenceEntity
WHERE {
  # Find the award associated with George H. Cameron
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  ?person dbo:award ?award .

  # Find the residence of Doug Beattie
  ?beattie a dbo:Person ;
           foaf:name ""Doug Beattie""@en .
  ?beattie dbo:residence ?residence .

  # Bind the award and residence entities to variables
  BIND(?award AS ?awardEntity)
  BIND(?residence AS ?residenceEntity)
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  
  ?person dbo:residence ?residence .

  FILTER EXISTS { 
    ?residence dbo:country dbr:United_Kingdom
  }
}
```",2,2,3,1,2,3,2,20,2,0,0,1.0,1.0,1.0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Lamont_Cranston dbo:aliasName ""The Shadow""@en .
}
```

This query uses the `dbo:aliasName` property to find the alias or alter ego associated with Lamont Cranston. The result should return ""The Shadow"" as the alter ego.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandDuchyNative ?russiaAdminCountryNative
WHERE {
  # Grand Duchy of Finland native language
  dbr:Grand_Duchy_of_Finland dbo:officialLanguage ?grandDuchyNative .

  # Nicholas II's administration country (Russia) and its native language
  dbr:Nicholas_II_of_Russia dbo:nativeOf ?russiaAdminCountry .
  ?russiaAdminCountry dbo:officialLanguage ?russiaAdminCountryNative .
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander II, Grand Duke of Finland""@en .
  
  OPTIONAL { ?person dbo:nationality dbr:Russian_Empire . }
  
  ?person dbo:birthPlace ?nativePlace .
}
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Dawit_I dbo:child ?child .
  
  ?child dbo:spouse ?baedaMother . 
  ?child dbo:child dbr:Baeda_Maryam_I .
}",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the album ""Sappy"" associated with Filthy Friends
  dbr:Sappy dbo:albumOfBand dbr:Filthy_Friends .
  
  # Identify the writer or producer of the album
  OPTIONAL { 
    dbr:Sappy dbo:writer ?writer .
  }
  
  # Find band members related to the writer
  ?bandMember dbo:memberOf dbr:Filthy_Friends .
  FILTER (?bandMember != dbr:Unknown) # Assuming we filter out unknown entities
  
  # Link the writer to any band member if applicable
  OPTIONAL {
    ?writer dbo:associatedBandMember ?bandMember .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Quincy_A._Gillmore }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?stuartToshArtist ?wizardsWriterArtist
WHERE {
  # Band member of The Alan Parsons Project
  ?bandMember dbo:memberOf dbr:The_Alan_Parsons_Project .
  
  # Associated musical artist of Stuart Tosh
  ?stuartToshArtist dbo:associatedMusicalArtist dbr:Stuart_Tosh .

  # Writer associated with Wizards of Waverly Place (soundtrack)
  ?wizardsWriterArtist dbo:writerOf dbr:Wizards_of_Waverly_Place_(soundtrack) .
  
  # Ensure the writer is also a musical artist and an artist
  ?wizardsWriterArtist rdf:type dbo:MusicalArtist ;
                      rdf:type dbo:Artist .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?minister ?position WHERE {
  # Identify Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:headOfState ?country .
  
  # Find ministers or officials under his administration
  ?minister dbo:officeHolder ?position ;
           dbo:heldOfficeDuring ?administration .

  # Link the administration to Alexander II's tenure
  ?administration dbo:headOfState dbr:Aleksandr_II,_Grand_Duke_of_Finland .
  
  FILTER(?position != """")
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?character ?alterEgo WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Walter B. Gibson""@en .
  
  ?character dbo:creator ?author ;
             dbo:genre dbr:Comics ;
             dbp:alterEgo ?alterEgo .

  FILTER (lang(?alterEgo) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,970,922,1,0.5126849894291755,0.9989701338825953,0.6776108976597974
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum as a sports club, organization, and soccer club
  dbr:VfL_Bochum dbo:sport dbr:Soccer ;
                 a dbo:SportsClub ;
                 a dbo:Organization .

  # Theodor Heuss's administration country (Germany)
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .

  # Manager of players in the 2007–08 VfL Bochum season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:manager ?manager .
  
  # Filter managers native to Germany
  ?manager dbo:nationality dbr:Germany .

  # Ensure the player is part of the 2007–08 VfL Bochum season
  ?player dbp:season ""2007–08""^^xsd:string ;
          dbo:team dbr:VfL_Bochum .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Athens .
}
```

This query does the following:
- Uses `dbo:location` to find entities that have Athens as their location.
- Retrieves all such entities (`?entity`) where the location is specifically Athens.",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?band ?award WHERE {
  ?band a dbo:MusicalGroup .
  ?band dbo:location dbr:New_York_(state) .
  ?band dbo:awardReceived ?award .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie rdf:type/rdfs:subClassOf* dbo:Film .
  ?movie dbo:starring db:Iliza_Shlesinger .

  ?spouse dbo:spouse db:Janusz_Kamiński ;
          dbo:starring ?movie .

  ?spouse rdf:type dbo:Actor .

  BIND(?spouse AS ?actor)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?entityInCharleston ?war ?award
WHERE {
  # Quincy Adams Gillmore's military role or force in Charleston
  dbr:Quincy_A._Gillmore dbo:militaryUnit ?force .
  
  # Entity related to Charleston, South Carolina
  ?force dbp:location dbr:Charleston,_South_Carolina .

  # War in which he participated and received an award
  dbr:Quincy_A._Gillmore dbo:participatedInWar ?war .
  ?award dbo:awardee dbr:Quincy_A._Gillmore ;
         dbo:givenBy dbr:United_States_Congress .

  # Ensure the war is related to the award
  ?award dbo:relatedTo ?war .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child ?grandchild
WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrecht dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Archduke Charles Louis of Austria's grandchild who is royalty
  ?archduke dbo:spouse ?grandparentSpouse .
  ?grandparentSpouse dbo:child ?parent .
  ?parent dbo:child ?grandchild .
  ?grandchild rdf:type dbo:RoyalPerson .

  # Predecessor relationship with Carl, Duke of Württemberg
  ?predecessor dbo:predecessor ?carl .
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .

  # Linking the child and grandchild to the predecessor
  FILTER (?child = ?predecessor)
  FILTER (?grandchild = ?predecessor)

  # Ensure entities are correctly identified
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:lyricsBy dbr:T.I. .
  ?work a dbo:Songs . # Assuming 'Songs' is the class for song entities
  OPTIONAL { ?work dbo:musicalWork ?musicalWork . }
}
```

This query selects works (`?work`) that are linked to T.I. through `dbo:lyricsBy` and are classified as songs (`a dbo:Songs`). The optional clause checks if these works are also part of a broader musical work.",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?author
WHERE {
  # Michał Kazimierz Pac and his involvement in a military conflict
  dbr:Mikołaj_Kazimierz_Pac a dbo:Person ;
    dbo:spouse ?commander .

  # The commander's successor who is a politician and office holder
  ?successor dbo:predecessorOf ?commander ;
            a dbo:Politician, dbo:OfficeHolder .

  # Reference to the author of George Ducas' work
  dbr:George_Ducas dbo:author ?work .
  ?work dbo:author ?author .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Find George Savage
  ?savage a dbo:Politician ;
          foaf:name ""George Savage""@en .
  
  # Identify the party he is associated with
  ?party dbo:member ?savage ;
         a dbo:Organization, dbo:PoliticalParty .

  # Determine the leader of this party
  ?leader dbp:leaderOf ?party .

  # Retrieve the residence of the leader
  ?leader dbo:residenceLocation ?residence .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"SELECT ?manager WHERE {
  ?player dbo:nationality dbr:West_Germany .
  ?player dbo:team ?club .
  ?club a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:SoccerClub .
  
  ?season dbo:succeededBy ?successorSeason .
  ?successorSeason dbo:participatingTeam ?club .
  ?successorSeason a dbo:FootballLeagueSeason ;
                   a dbo:SportsTeamSeason ;
                   a dbo:SportsSeason .

  FILTER(?season = dbr:2006–07_VfL_Bochum_season) .
  
  ?player dbo:manager ?manager .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find territories administered from this death place
  ?territory dbo:administrativeCenter ?deathPlace .
  
  # Find the mayor of Duchy of Schleswig
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .

  # Ensure the territory is associated with the mayor of Duchy of Schleswig
  ?mayor dbo:officeHolderOf ?territory .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?amyParent ?allanChildParent ?actor
WHERE {
  # Amy Arbus's parent
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?amyParent .
  }

  # Allan Arbus's child and their parent
  OPTIONAL {
    ?child dbo:parent dbr:Allan_Arbus .
    ?child dbo:parent ?allanChildParent .
  }

  # Actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  OPTIONAL {
    ?film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .
    ?film dbo:starring ?actor .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?album dbo:title ""The Live Anthology""@en .
  ?album dbo:artist ?person .
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Writer . }
    && EXISTS { ?person dbo:occupation dbr:Musical_artist . }
  )
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?afeez { dbr:Afeez_Oyetoro }
  ?afeez dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,35,1,0.0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Cecilia Renata of Austria
  ?ceciliaRenata a dbo:Person ;
                foaf:name ""Cecilia Renata of Austria""@en .

  # Identify her father
  ?father dbo:spouse ?ceciliaRenata ;
          dbo:child ?child .

  # Ensure the child is a commander in the war
  ?child dbo:occupation dbr:Commander_in_the_war .

  # Link to societal event, an event, and a television show
  ?societalEvent dbo:relatedPerson ?child .
  ?event dbo:relatedPerson ?child .
  ?tvShow dbo:relatedPerson ?child .

  # Association with the 2nd Dragoon Regiment (France)
  ?regiment dbr:2nd_Dragoon_Regiment_(France) ;
            dbo:member ?child .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?realName
WHERE {
  # Find bands associated with Kim Wilson
  ?band dbo:member dbr:Kim_Wilson .
  
  OPTIONAL {
    # Check if the band has a real name different from its official name
    ?band rdfs:label ?alias .
    FILTER (lang(?alias) = 'en')
    
    # Find the real name of the band
    ?band dbo:wikiPageRedirects ?realNameResource .
    ?realNameResource rdfs:label ?realName .
    FILTER (lang(?realName) = 'en')
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?entity { 
    dbr:Lamont_Cranston 
    dbr:The_Shadow_(radio_character) 
  }
  
  ?entity dbo:wikiPageRedirects ?reference .
}
```

This query checks for redirects from the entity ""Lamont Cranston"" or ""The Shadow (radio character)"" to other pages, which might include references in radio, film, and television.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?role WHERE {
  # Identify the French Revolutionary Wars
  dbr:French_Revolutionary_Wars dbo:participatedIn ?war .
  
  # Find individuals who commanded in these wars
  ?war dbo:commandedBy ?commander .
  
  # Retrieve roles or titles of these commanders
  OPTIONAL { ?commander dbo:occupation ?role . }
}
```

This query does the following:
- It identifies the French Revolutionary Wars using `dbr:French_Revolutionary_Wars`.
- It looks for wars (`?war`) that are part of the French Revolutionary Wars.
- It finds individuals (`?commander`) who commanded in these wars.
- Optionally, it retrieves their roles or occupations.",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?war
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace rdf:type dbo:Settlement ;
             dbp:country dbr:United_States .

  # Amasa Tracy's associated war
  dbr:Amasa_Tracy dbo:associatedWithWar ?war .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  dbr:William_II_of_Sicily dbo:father ?father .

  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child dbo:child ?grandchild .

  ?grandchild rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName ?associatedArtist WHERE {
  # Step 1: Identify Elorm Kabu Amenyah
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah"" .

  # Step 2: Find associated musical artist with Elorm Kabu Amenyah
  ?elorm dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Identify an artist from Central Region, Ghana
  ?artist a dbo:Person ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace ?centralRegion ;
          foaf:name ?name .
  
  # Filter for Central Region
  ?centralRegion rdfs:label ""Central Region""@en .

  # Step 4: Connect birth name of the native artist to associated musical artist
  ?artist foaf:givenName ?birthName .

  # Ensure the person is an artist
  ?artist dbo:occupation dbr:Musician .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alumnus ?birthPlaceLabel WHERE {
  ?university a dbo:University ;
              rdfs:label ""Plovdiv University \""Paisii Hilendarski\""""@en .
  
  ?university dbo:alumni ?alumnus .

  ?alumnus foaf:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band a dbo:Band ;
        dbo:musicalArtist ?artist .
  FILTER (str(?band) = ""Burnt by the Sun (band)"")
  
  ?artist rdf:type ?type .
  VALUES ?type { 
    dbo:MusicalGroup
    dbo:Organization
  }
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # VfL Bochum in the 2007–08 season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:playedForTeamInSeason dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Manager of VfL Bochum player in 2007–08 season
  ?player dbo:manager ?manager .

  # SBV Vitesse in the 2020–21 season
  ?manager dbo:team dbr:SBV_Vitesse ;
           dbo:managedTeamInSeason dbr:2020%E2%80%9321_SBV_Vitesse_season .

  # Leader of West Germany and its administration country
  ?leader dbp:country dbr:West_Germany .
  ?adminCountry dbo:administratedBy ?leader .

  # Manager's native country is the admin country of the leader of West Germany
  ?manager dbo:nationality ?adminCountry .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .

  # Grandchild (child of the child) who is royalty
  ?child dbo:child ?parent .
  ?grandchild dbo:child ?child .
  ?grandchild rdf:type dbp:Royal .

  # Spouse of Archduchess Helena of Austria and their child
  ?spouse dbo:spouse <http://dbpedia.org/resource/Helena_of_Austria> .
  ?helenaChild dbo:child ?spouse .
  ?helenaChild rdf:type dbp:Royal .

  # Predecessor relationship (assuming temporal or hierarchical)
  FILTER (?grandchild < ?helenaChild) 
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war ?charlestonEntity WHERE {
  # Find Medal of Honor awardees
  ?awardee dbo:award dbr:Medal_of_Honor .
  
  # Identify the wars they were involved in
  ?awardee dbo:militaryConflict ?war .

  # Find entities related to these awardees that are located in Charleston, South Carolina
  ?charlestonEntity dbp:location dbr:Charleston,_South_Carolina ;
                   dbo:relatedTo ?awardee .
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Siege_of_Mukha dbo:participatedIn ?event .
  
  ?event dbo:commander ?commander .

  ?commander a dbo:Monarch ;
             rdfs:label ?name .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          dbo:child dbr:Myat_Hpone_Pyo .
  ?person dbo:parent ?father .
  ?father a dbo:Royalty .
}
```",1,2,2,1,1,3,3,71,0,3,1,0.0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the album
  dbr:The_Miseducation_of_Lauryn_Hill dbo:composer ?writer .
  
  # Ensure the writer is also an artist
  ?writer a dbo:Artist .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?playerName WHERE {
  # Teams associated with Sergio Agüero
  ?agüeroTeam dbo:member ?agüero .
  ?agüero foaf:name ""Sergio Agüero""@en .

  # Teams associated with Pablo Aimar
  ?aimarTeam dbo:member ?aimar .
  ?aimar foaf:name ""Pablo Aimar""@en .

  # Find common players in both teams
  ?commonPlayer dbo:team ?agüeroTeam ;
               dbo:team ?aimarTeam ;
               foaf:name ?playerName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the child of Saw Min Hla
  ?child dbo:parent dbr:Saw_Min_Hla .
  
  # Ensure this person is also a spouse of Saw Shwe Khet
  ?spouse dbp:spouse dbr:Saw_Shwe_Khet .
  FILTER (?child = ?spouse)
  
  # Ensure this person is the predecessor of Myat Hpone Pyo
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .
  FILTER (?child = ?predecessor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?producer
WHERE {
  {
    VALUES ?film { 
      dbr:The_Adventures_of_Tom_Sawyer_(1938_film) 
      dbr:A_Star_Is_Born_(1937_film)
    }
    ?film dbo:producer ?producer .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?warLabel WHERE {
  VALUES ?person { 
    dbr:Toyotomi_Hidenaga 
    dbr:Hashiba_Hidekatsu 
  }
  
  ?person dbo:participatedIn ?war .
  ?war rdfs:label ?warLabel .

  FILTER(LANG(?warLabel) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  ?person dbo:alias ""Duke Anthony Ulrich of Brunswick""@en .
  ?person dbo:parent ?parent .
  ?parent rdf:type ?type .
  FILTER EXISTS { ?type rdfs:subClassOf* dbo:Monarch }
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and RDF.
- **SELECT**: We want to retrieve the parent(s).
- **?person**: Represents Duke Anthony Ulrich of Brunswick.
- **dbo:alias**: Used to match the alias ""Duke Anthony Ulrich of Brunswick"".
- **dbo:parent**: Property linking a person to their parents.
- **rdf:type**: Ensures the type of the parent is checked.
- **FILTER EXISTS**: Ensures that the parent's type is a subclass of `dbo:Monarch`, indicating royalty.",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?band { dbr:Filthy_Friends }
  
  ?member dbo:bandMember ?band .
  ?member a dbo:MusicalArtist .
  BIND(?member AS ?artist)
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Find administrations related to PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  # Ensure the administration is Spanish
  ?administration dbo:country dbr:Spain .

  # Find tenants of these administrations
  ?administration dbo:member ?tenant .

  # Ensure the tenant is also a tenant of Spain
  ?tenant dbo:country dbr:Spain .
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfArthur ?childOfPoliticianParent
WHERE {
  # Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?fatherOfArthur .

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parentOfEdward .
  
  # Parent who is a politician and an office holder
  ?parentOfEdward rdf:type dbo:Politician ;
                  dbo:officeHolder true .

  # Child of the parent (politician and office holder)
  ?parentOfEdward dbo:child ?childOfPoliticianParent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Stephen V of Hungary's child
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Philip I, Prince of Taranto's father and spouse
  ?father dbo:child dbr:Philip_I,_Prince_of_Taranto .
  ?spouse dbo:spouse ?father .

  # Charles Martel of Anjou's parent
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .

  # The person must satisfy all conditions
  FILTER (?child = ?spouse && ?spouse = ?parent)
  
  BIND(?spouse AS ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father
WHERE {
  # Eleonore of Austria's father
  ?eleonore rdf:type dbo:Person ;
            rdfs:label ""Eleonora of Austria (1577-1626)""@en .
  ?eleonore dbo:father ?father .

  # Cecilia Renata of Austria's father
  ?ceciliaRenata rdf:type dbo:Person ;
                 rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:father ?commonFather .

  # The common father is Eleonore's father and a child of Cecilia Renata's father
  FILTER (?father = ?commonFather)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    ?child dbo:parent dbr:Saw_Shwe_Khet .
    
    ?myatHponePyo dbo:father ?father .
    ?father dbo:spouse ?spouse .

    FILTER (?child = ?spouse)

    ?predecessor dbo:successor ?child .
    ?predecessor a dbo:Monarch ;
                 dbo:country dbr:Myanmar .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?designer WHERE {
  # Part 1: Find a member of 1. FC Magdeburg
  ?player dbo:team dbr:1._FC_Magdeburg .
  BIND(?player AS ?member)

  # Part 2: Find the designer of Aston Martin AMR1
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession
WHERE {
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  
  ?actor dbo:occupation dbr:Politician .

  OPTIONAL { ?actor dbo:profession ?profession . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Sofia ;
          rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Person`.
- Filters those whose birthplace is Sofia (`dbr:Sofia`).
- Retrieves their English labels (`rdfs:label`) as names.
- Limits results to 10 for simplicity.",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Bobby Shmurda's resource
  VALUES ?bobbyShmurda { dbr:Bobby_Shmurda }
  
  # Find associated artists through collaborations or similar relationships
  ?bobbyShmurda dbo:associatedMusicalArtist ?artist .
  
  # Ensure the associated entity is a musical artist
  ?artist rdf:type dbo:MusicalArtist .
}
```

### Explanation

- **PREFIX**: We use `dbo` for DBpedia ontology and `dbr` for DBpedia resources.
- **SELECT**: We are interested in finding other artists (`?artist`) associated with Bobby Shmurda.
- **VALUES**: Specifies the resource for Bobby Shmurda. You may need to verify the exact URI from DBpedia if it differs.
- **FILTER**: Ensures that the associated entities are of type `MusicalArtist`.

This query will return a list of musical artists associated with Bobby Shmurda.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dispatchesActor ?shadowActor WHERE {
  # Find actor of ""Dispatches from Elsewhere""
  ?dispatchesSeries dbo:title ""Dispatches from Elsewhere""@en .
  ?dispatchesSeries dbo:actor ?dispatchesActor .

  # Find actor associated with The Shadow
  ?shadowCharacter dbo:title ""The Shadow""@en .
  ?shadowCharacter dbo:actor ?shadowActor .

  # Ensure both are actors, like Shatrughan Sinha
  ?dispatchesActor a dbo:Actor ;
                   rdfs:label ?dispatchesLabel .
  FILTER (CONTAINS(LCASE(?dispatchesLabel), ""actor""))

  ?shadowActor a dbo:Actor ;
               rdfs:label ?shadowLabel .
  FILTER (CONTAINS(LCASE(?shadowLabel), ""actor""))
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfPhilipFather ?spouseOfCharlesGrandfather
WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .

  # Step 2: Find his father who is royalty
  ?philip dbo:parent ?father .
  ?father a dbo:Monarch .

  # Step 3: Determine the spouse of this royal father
  ?father dbo:spouse ?spouseOfPhilipFather .

  # Step 4: Identify Charles I of Hungary
  ?charles a dbo:Person ;
           foaf:name ""Charles I of Hungary""@en .

  # Step 5: Find his grandfather who is royalty
  ?charlesParent dbo:parent ?grandfather .
  ?charlesParent dbo:parent ?philip . # Ensure the same lineage
  ?grandfather a dbo:Monarch .

  # Step 6: Determine the spouse of this royal grandfather
  ?grandfather dbo:spouse ?spouseOfCharlesGrandfather .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Winston Chang""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?event dbo:agent dbr:Anxo_Quintana .
  ?event dbo:place dbr:Spain .
  ?event dbo:subject dbr:Spanish_Socialist_Workers'_Party .
  
  ?administration dbo:leader dbr:Anxo_Quintana ;
                  dbo:member dbr:Anxo_Quintana ;
                  dbo:country dbr:Spain .

  ?administration dbp:party dbr:Spanish_Socialist_Workers'_Party .

  ?event dbo:office ?office .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?alterEgo WHERE {
  # Part 1: Find the father of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:father ?father .

  # Part 2: Find the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alias ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Frederick Stanley, 16th Earl of Derby and his children
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Alumni of Eton College with politician children
  ?alumnus dbo:almaMater dbr:Eton_College ;
           dbo:child ?politicianChild .
  
  # Politician child's parent is Frederick Stanley
  ?politicianChild dbo:parent ?parent .
  
  FILTER (?parent = dbr:Frederick_Stanley,_16th_Earl_of_Derby)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?rem dbo:associatedMusicalArtist ?artist .
  ?rem rdfs:label ""R.E.M.""@en .
  FILTER (lang(?rem) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Find actors involved in these films
  ?film dbo:starring ?actor .

  # Step 3: Find the spouse of each actor
  ?actor dbo:spouse ?spouse .

  # Step 4: Identify a landmark with the given elevation
  ?landmark dbp:elevation ""20.1168""^^xsd:float ;
            dbo:location ?country .

  # Step 5: Determine the ruling party in that country
  ?country dbo:rulingParty ?rulingParty .
  
  # Ensure the spouse is a member of this ruling party
  ?spouse dbo:memberOf ?rulingParty .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Paradise""@en ;
        dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2013)
  
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Dorothea of Lorraine
  ?dorothea dbo:birthName ""Dorothea of Lorraine""@en .
  
  # Her father
  ?father dbo:child ?dorothea ;
          a dbo:Person .

  # Her grandfather (father's parent)
  ?grandparent dbo:child ?father ;
               a dbo:Person .

  # Spouse of the grandfather
  ?spouse dbo:spouse ?grandparent ;
          a dbo:Person .

  # Ensure spouse is royalty and noble, related to Francis I, Duke of Lorraine
  ?spouse dbo:occupation dbp:Royalty ;
          dbo:nationality dbp:Noble .
  
  OPTIONAL {
    ?francis1 dbo:birthName ""Francis I, Duke of Lorraine""@en .
    ?relation dbo:child ?spouse ; # or any other relevant relation
               a dbo:Family .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildRoyalty
WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Spouse of the father of the parent that is a royalty of Philip, Despot of Romania
  dbr:Philip_Despot_of_Romania dbo:parent ?parent .
  ?parent dbo:parent ?grandparent .
  ?spouse dbo:spouse ?grandparent .
  
  # Step 3: Child of the child that is a royalty
  ?spouse dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  ?child2 a dbo:Monarch .
  
  BIND(?child2 AS ?childOfChildRoyalty)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movieActor ?albumArtist
WHERE {
  # Part 1: Actor of the movie ""and""
  ?movie dbr:And_(film) .
  ?movie dbo:actor ?movieActor .

  # Part 2: Album for ""What You Know"" by T.I.
  ?song dbr:What_You_Know_(T.I._song) .
  ?song dbo:album ?album .
  
  # Find artist associated with the album
  ?album dbo:musicalArtist ?albumArtist .
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:MusicalBand ;
        foaf:name ""The Alan Parsons Project""@en .
  ?band dbo:bandMember ?member .
}
```

This query does the following:
- Uses `dbo:MusicalBand` to identify that we are dealing with a musical band.
- Filters for bands named ""The Alan Parsons Project"" using `foaf:name`.
- Retrieves members of this band using the property `dbo:bandMember`.",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Vince Gilligan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Philip I, Prince of Taranto's father
  ?philip a dbr:Philip_I,_Prince_of_Taranto ;
          dbo:father ?father .

  # Step 2: Find the grandfather and his spouse who is royalty
  ?father dbo:parent ?grandfather .
  ?grandfather dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse a dbo:Monarch } .

  # Step 3: Identify Maria of Bytom's spouse
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .

  # Step 4: Find their child who is also a child of Stephen V of Hungary
  ?mariaSpouse dbo:child ?child .
  dbr:Stephen_V_of_Hungary dbo:child ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalSpouse
WHERE {
    # Step 1: Identify Princess Antoinette
    ?antoinette a dbo:Person ;
               dbp:name ""Antoinette of Brunswick-Wolfenbüttel""@en .

    # Step 2: Find her child who is royalty
    ?child dbo:parent ?antoinette ;
           a dbo:RoyalFamilyMember .

    # Step 3: Determine the spouse of that child
    ?spouse1 dbp:spouse ?child .

    # Step 4: Find the spouse of that spouse
    ?finalSpouse dbp:spouse ?spouse1 .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Nobel_Prize_in_Physics dbo:location ?host .

  ?host a dbo:EducationalInstitution .
  
  ?show dbo:location ?host .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?character ?alterEgo ?actor WHERE {
  # Find the anime series ""The Golden Master""
  ?series dbo:title ""The Golden Master""@en .
  
  # Find characters in this series
  ?character dbo:partOfSeries ?series .
  
  # Check for alter egos of these characters
  ?character dbo:alterEgo ?alterEgo .

  # Find songs or musical works associated with T.I.
  ?work dbo:title ?title ;
        dbo:artist dbr:T.I. .

  # Link the character to a song or work
  ?character foaf:name ?name .
  ?actor dbo:performedWork ?work .
  
  # Ensure the actor is linked to the character's alter ego
  ?alterEgo foaf:name ?name .
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent"" ;
             dbo:occupation ?profession .

  ?otherProfessional a dbo:Person ;
                    dbo:occupation ?profession .
  
  FILTER(?otherProfessional != ?rodArgent)
}
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"SELECT ?successorSeason WHERE {
  # Find the VfL Bochum team
  ?team a dbo:SoccerClub ;
        rdfs:label ""VfL Bochum""@en .
  
  # Identify the 2006–07 season of VfL Bochum
  ?season dbo:club ?team ;
          dbo:seasonStartYear ?startYear ;
          dbo:seasonEndYear ?endYear .

  FILTER (?startYear = 2006 && ?endYear = 2007)

  # Find the successor season, which is typically the next year's season
  ?successorSeason dbo:club ?team ;
                   dbo:seasonStartYear ?successorStartYear ;
                   dbo:seasonEndYear ?successorEndYear .

  FILTER (?successorStartYear = 2007 && ?successorEndYear = 2008)
}
```

This query assumes that the seasons are represented with start and end years, which is a common way to denote sports seasons. The filter conditions ensure we find the specific season (2006–07) and its immediate successor (2007–08).",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          dbp:birthName ?birthName .
  
  ?artist a dbo:Band ;
          dbo:member ?person .

  OPTIONAL { ?artist foaf:name ?band }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthplaceLabel WHERE {
  VALUES ?person { 
    dbr:Scott_LaFaro 
    dbr:Bob_Crewe 
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthplace .
  SERVICE <http://dbpedia.org/sparql> {
    ?birthplace rdfs:label ?birthplaceLabel .
    FILTER (lang(?birthplaceLabel) = 'en')
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?work WHERE {
  # Richard E. Grant's DBpedia resource
  dbr:Richard_E._Grant a dbo:Actor ;
    foaf:name ""Richard E. Grant"" ;
    dbo:profession ?profession .

  # Works where he is an actor
  ?work dbo:starring dbr:Richard_E._Grant ;
        a dbo:TelevisionSeries .
  
  # Ensure the work is a television show
  FILTER(STRSTARTS(STR(?work), ""http://dbpedia.org/resource/""))
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Get Tony Hollings' birthday
  dbr:Tony_Hollings dbp:birthday ?hollingsBirthday .

  # Find a person with the same birthday who is an athlete, soccer player, sports manager, and soccer manager
  ?player dbo:birthDate ?sameBirthday .
  FILTER (?sameBirthday = ?hollingsBirthday)

  ?player dbo:sportsTeam ?team .
  ?player dbo:occupation dbr:Athlete .

  OPTIONAL { ?player dbo:position ""soccer player""^^xsd:string . }
  OPTIONAL { ?player dbo:occupation dbr:Soccer_manager . }
  OPTIONAL { ?player dbo:occupation dbr:Sports_manager . }

  # Ensure the person is involved in all roles
  FILTER EXISTS { ?player dbo:position ""soccer player""^^xsd:string . }
  FILTER EXISTS { ?player dbo:occupation dbr:Soccer_manager . }
  FILTER EXISTS { ?player dbo:occupation dbr:Sports_manager . }
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Placeholder for a specific entity reference query
SELECT ?reference WHERE {
  # Replace <Entity> with the actual resource URI or label
  <http://dbpedia.org/resource/Entity> dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,2,9,0,36,98447,0.0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentPhotographer ?parentDoonArbus
WHERE {
  # Find the parent of Photographer as a profession
  ?photographerClass rdfs:label ""Photographer""@en .
  OPTIONAL { ?photographerClass rdfs:subClassOf+ ?parentPhotographer . }

  # Find Doon Arbus and her parent categories
  ?doonArbus dbo:birthName ""Doon Arbus"" .
  OPTIONAL {
    ?doonArbus dbo:occupation ?occupation .
    ?occupation rdfs:subClassOf+ ?parentDoonArbus .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  # Get Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?annSothernBirthName .
  
  # Find other people with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER (?birthName = ?annSothernBirthName && ?person != dbr:Ann_Sothern)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find individuals awarded the Commander of the Royal Victorian Order
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

  # Arthur Stanley (politician) and his father
  ?arthur dbr:Arthur_Stanley_(politician) .
  ?arthur dbo:father ?parent .

  # Frederick Stanley, 16th Earl of Derby, his children, and their parent
  ?frederick dbr:Fredrick_Stanley,_16th_Earl_of_Derby .
  ?child dbo:childOf ?frederick ;
         dbo:parent ?parent .

  # Ensure the same person satisfies all conditions
  FILTER (?awardee = ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?settlement WHERE {
  # Find the war associated with Amasa Tracy
  ?tracy dbo:nationality dbr:United_States ;
         dbo:occupation dbr:Military_person ;
         dbo:servedInMilitaryOrganization ?force .
  
  ?force dbo:participatedInWar ?war .

  # Find the person who died on 1850-08-05
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .

  # Ensure the birthplace is a settlement in America
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Connect this person to Quincy Adams Gillmore's force
  ?gillmore dbp:name ""Quincy Adams Gillmore"" ;
           dbo:nationality dbr:United_States ;
           dbo:occupation dbr:Military_person ;
           dbo:servedInMilitaryOrganization ?force2 .
  
  ?force2 = ?force .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person a dbo:MusicalArtist .
  ?person dbo:memberOfBand ?band .
}",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royaltyChild
WHERE {
  # Maria Anna of Bavaria
  dbr:Maria_Anna_of_Bavary_(1574) dbo:child ?mariaChild .

  # Father of Maria's child
  ?mariaChild dbo:father ?fatherOfMariaChild .

  # Child of that father who is royalty
  ?fatherOfMariaChild dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch ; # Assuming Monarch as a class for royalty
                dbo:spouse|dbo:partner* ?mariaChild . # To ensure lineage connection
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?politicianParent
WHERE {
  # Step 1: Find Rodney Lees' award and its awardee
  ?award dbo:recipient dbr:Rodney_Lees .
  ?award dbo:awardee ?awardee .

  # Step 2: Get the parent of the awardee
  ?awardee dbo:parent ?parentOfAwardee .

  # Step 3: Find Edward Stanley's parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardParent .

  # Step 4: Identify a child of this parent who is a politician and an office holder
  ?child dbo:parent ?edwardParent ;
         a dbo:Politician ;
         dbo:officeHolder ?office .
  
  # Step 5: Get the parent of this child
  ?child dbo:parent ?politicianParent .

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?reference WHERE {
  VALUES (?baedaMaryamI) { dbr:Baeda_Maryam_I }

  ?child dbo:parent ?baedaMaryamI .
  
  ?father dbo:parent ?child .
  ?grandfather dbo:parent ?father .

  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .

  OPTIONAL { ?grandfather dbo:wikibase_item ?item . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonDescendant WHERE {
  # Find Alexander of Württemberg's great-grandchild
  ?greatGrandchild dbo:parent ?grandchild .
  ?grandchild dbo:parent ?child .
  ?child dbo:parent dbr:Alexander_of_Württemberg .

  # Find Archduchess Margarete Sophie of Austria's child
  ?archduchessChild dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Find the common descendant of both lines
  ?commonDescendant dbo:parent ?greatGrandchild .
  ?commonDescendant dbo:parent ?archduchessChild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find the military force involved in the Battle of Vienna
  ?battle a dbo:MilitaryEngagement ;
          dbo:participatingMilitaryForce ?militaryForce .

  FILTER (str(?battle) = ""Battle_of_Vienna"")

  # Find wars that are also television shows and societal events
  ?war a dbo:War ;
       dbo:participatingMilitaryForce ?militaryForce ;
       dbo:wikiPageWikiLink dbr:Category:Television_series_by_genre ;
       dbo:wikiPageWikiLink dbr:Category:Societal_events .

}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?profession .

  # Find Joe Bonamassa's birth name
  dbr:Joe_Bonamassa dbp:birthName ?birthName .

  # Find individuals with the same profession and birth name
  ?person a dbo:Person ;
          dbo:profession ?profession ;
          dbp:birthName ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  # Assuming $pacely is a known entity, replace with actual resource if available
  ?pacely dbo:associatedMusicalArtist ?artist .

  # Rod Argent's profession
  dbr:Rod_Argent dbo:profession dbr:Musicianship .

  # The artist should have the same profession as Rod Argent
  ?artist dbo:profession dbr:Musicianship .

  # Person born in Central Region, Ghana
  ?person foaf:name ?birthName .
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .

  # The artist should match the birth name of the person from Central Region, Ghana
  ?artist foaf:name ?birthName .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```

This query uses the `dbo:designer` property to find the designer of the Aston Martin AMR1. The resource for Aston Martin AMR1 is accessed using its DBpedia URI.",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Picketts_Charge dbo:partOf dbr:Battle_of_Gettysburg .
  
  dbr:Robert_E._Lee dbo:commanderOf dbr:Army_of_North_Virginia ;
                   dbo:positionHeld dbr:Commander_in_Chief_of_the_Army_of_North_Virginia .

  ?charge dbo:partOf dbr:Battle_of_Gettysburg .
  ?charge dbo:commandedBy dbr:Robert_E._Lee .
  
  BIND(dbr:Robert_E._Lee AS ?commander)
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Ada Jane Low's resource
  ?adaJaneLow a dbo:Person ;
              foaf:name ""Ada Jane Low""@en ;
              dbp:birthName ""Ada Jane Low"" .
  
  # Ensure she is a politician
  ?adaJaneLow dbo:occupation dbr:Politician .

  # Find the political office or position she held
  ?officePosition dbo:incumbent ?adaJaneLow ;
                  dbo:predecessor ?predecessor .
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?actor a dbo:Actor .
  ?actor foaf:name ""Herschel Bernardi""@en .
  ?film dbo:starring ?actor .
  ?film a dbo:Film .
  BIND(?film AS ?movie)
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Step 1: Find Quincy Adams Gillmore's award
  ?gillmoreAward a dbo:Award ;
                 dbo:recipient dbr:Quincy_Adams_Gillmore .

  # Step 2: Find other awardees of the same award
  ?otherAwardee dbo:award ?gillmoreAward .

  # Step 3: Identify Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbo:country dbr:United_States .

  # Step 4: Find the force associated with the awardee
  ?otherAwardee dbo:militaryService ?force .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the author of ""El Deafo""
  dbr:El_Deafo dbo:author dbr:Cecily_Bell .
  
  # Get the birthplace of Cecily Bell
  dbr:Cecily_Bell dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  # Find the commander of the Siege of Mukha who is a royalty
  ?commander dbo:commanderOf ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?commander rdf:type dbo:Royalty .

  # Find the parent of this commander, who is also a royalty
  ?parent dbo:child ?commander .
  ?parent rdf:type dbo:Royalty .

  # Get the child of this parent
  ?child dbo:child ?parent .

  # Return the label of the child
  ?child rdfs:label ?childLabel .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceEntity ?warEntity
WHERE {
  # Yamaza Enjirō's birthplace
  ?yamazaEnji rdf:type dbo:Person ;
              foaf:name ""Yamaza Enjirō""@en ;
              dbo:birthPlace ?birthPlaceEntity .

  # Hashiba Hidekatsu's war involvement
  ?hashibaHidekatsu rdf:type dbo:Person ;
                    foaf:name ""Hashiba Hidekatsu""@en ;
                    dbo:participatedIn ?warEntity .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse .
  ?parent (dbo:spouse|dbo:child) dbr:Béla_IV_of_Hungary .

  # Children of Béla IV's children (grandchildren)
  ?parent dbo:child ?grandchild .

  # Filter for royalty
  ?grandchild a dbo:Monarch .

  # Philip I, Prince of Taranto and his father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  
  # Spouse of Philip's father
  ?philipFather dbo:spouse ?spouseOfPhilipsFather .

  # Parent of Charles Martel of Anjou
  ?grandchild dbo:parent dbr:Charles_Martel_of_Anjou .

  # Ensure the spouse matches
  FILTER (?spouseOfPhilipsFather = ?spouse)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  # Minye Kyawswa's child
  ?child dbo:parent dbr:Minye_Kyawswa .
  
  # Parent of Minye Kyawswa's child
  ?grandParent dbo:child ?child .

  # Predecessor of the parent (also spouse of Myat Hpone Pyo's father)
  ?predecessor dbo:predecessor ?grandParent .

  # Father of Myat Hpone Pyo
  ?father dbo:spouse ?predecessor .
  
  # Myat Hpone Pyo is a child of the father
  dbr:Myat_Hpone_Pyo dbo:parent ?father .

  # The person must be royalty
  ?person dbo:royalty true .
  FILTER (?person = ?predecessor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?juanCarlosPlayerRole ?actorSoccerPlayerAthlete ?personTeam
WHERE {
  # Juan Carlos Molina's player role
  dbr:Juan_Carlos_Molina_(footballer) dbo:role ?juanCarlosPlayerRole .

  # Actor from ""All or Nothing: Manchester City"" who is a soccer player and an athlete
  ?actor dbp:title ""All or Nothing: Manchester City""@en .
  ?actor dbo:profession ?prof1 .
  FILTER(?prof1 IN (dbr:Soccer_player, dbr:Athlete)) .
  BIND(?actor AS ?actorSoccerPlayerAthlete) .

  # Person born on 1979-11-03 who is a soccer player and a soccer manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:occupation ?occ1, ?occ2 .
  FILTER(?occ1 = dbr:Soccer_player && ?occ2 = dbr:Soccer_manager) .
  ?person dbo:team ?team .
  BIND(?team AS ?personTeam)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?child .
  
  # Child is royalty
  ?child a dbo:Monarch .

  # Parent of the child who is royalty and noble
  ?parent dbo:child ?child ;
          a dbo:Monarch, dbo:Noble .

  # Spouse of this parent
  ?parent dbo:spouse ?spouse .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer ?profession
WHERE {
  ?cokeStudio a dbo:TelevisionShow ;
              rdfs:label ""Coke Studio Philippines""@en .
  
  ?cokeStudio dbo:producer ?producer .

  OPTIONAL { 
    ?producer dbo:occupation ?profession .
  }
}
```",3,3,4,3,1,3,3,71,3,4,46014,0.42857142857142855,6.519329812895235e-05,0.00013036676516600036
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Charles I of Hungary and his father
    dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
    
    # Spouse of Charles I's father who is royalty
    ?spouse dbo:spouse ?charlesFather ;
           a dbo:Monarch .

    # Philip I, Prince of Taranto and his father
    dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
    
    # Child of Philip I's father who is royalty
    ?child dbo:parent ?philipFather ;
           a dbo:Monarch .

    # Béla IV of Hungary and his child who is royalty
    dbr:Béla_IV_of_Hungary dbo:child ?belaChild .
    
    FILTER (?spouse = ?child)

    # Parent of the spouse (who is also the child from above)
    ?parent dbo:child ?spouse .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  # Find Joey B's birth name
  dbr:Joey_B dbo:birthName ?birthName .
  
  # Find artists associated with this birth name
  ?artist dbo:birthName ?birthName .
  
  # Ensure the artist is a musician and person
  ?artist rdf:type dbo:Musician ;
          rdf:type foaf:Person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBirthPlace ?awardeeBirthPlace ?glennBirthPlace WHERE {
  # Cece Bell's birthplace
  dbr:Cece_Bell dbo:birthPlace ?ceceBirthPlace .

  # Awardee associated with Vince Gilligan (assuming Emmy Awards)
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?emmyAward .
    ?emmyAward dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Glenn Youngkin's birthplace
  dbr:Glenn_Youngkin dbo:birthPlace ?glennBirthPlace .
}",5,5,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?commander
WHERE {
  # Find the author of ""Back to Work""
  ?book dbo:title ""Back to Work""@en .
  ?book dbo:author ?author .

  # Find the commander during the Third Taiwan Strait Crisis
  ?crisis dbp:name ""Third Taiwan Strait Crisis""@en .
  ?crisis dbp:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Kent Allard"" .
  OPTIONAL { ?author dbo:pseudonym ?pseudonym . }
  OPTIONAL { ?pseudonym rdfs:label ?alterEgo FILTER (lang(?alterEgo) = 'en') . }
  FILTER EXISTS {
    ?work dbo:creator ?author ;
          dbo:mediaType dbr:Print .
  }
}
```

This query does the following:
- Identifies an author with the name ""Kent Allard.""
- Looks for any pseudonyms associated with this author.
- Filters results to ensure they are related to print media.",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?governorBirthPlace WHERE {
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .

  # Current governor of Virginia
  OPTIONAL {
    SELECT ?currentGovernor WHERE {
      ?currentGovernor a dbo:Politician ;
                      dbo:stateOrProvince dbr:Virginia .
      FILTER EXISTS { ?currentGovernor dbo:officeHolderOf dbr:Governor_of_Virginia }
    }
    # Governor's birthplace
    ?currentGovernor dbo:birthPlace ?governorBirthPlace .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfGrandchild WHERE {
  # Alexander of Württemberg's lineage
  ?alex dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) .
  ?alex dbo:spouse ?spouse1 .
  ?alex dbp:children ?child1 .

  ?child1 dbo:spouse ?spouse2 .
  ?child1 dbp:children ?grandchild1 .

  ?grandchild1 dbo:spouse ?spouse3 .
  ?grandchild1 dbp:children ?greatGrandchild1 .

  # Archduchess Margarete Sophie of Austria's lineage
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent2 .
  ?parent2 dbp:children ?child2 .

  ?child2 dbo:spouse ?spouse4 .
  ?child2 dbp:children ?grandchild2 .

  # Both must be royalty
  ?greatGrandchild1 a dbo:Monarch ;
                   rdfs:label ?label1 .
  ?grandchild2 a dbo:Monarch ;
               rdfs:label ?label2 .

  # Find the common child of these two lines
  FILTER (?greatGrandchild1 = ?grandchild2)
  
  BIND(?greatGrandchild1 AS ?childOfGrandchild)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Find the residence of Alberto Ruiz-Gallardón
  ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
  
  # Find the office related to a commander in the Central African Republic Civil War
  ?office dbo:relatedTo dbr:Central_African_Republic_Civil_War ;
          dbo:positionTitle ""Commander"" .

  # The person must be an office holder and a politician
  ?person dbo:officeHolder ?office ;
          rdf:type dbo:Politician .

  # Find the tenant of both the residence and the office
  ?tenant dbo:residence ?residence .
  ?tenant dbo:office ?office .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Charles Martel of Anjou's parent
  ?charlesMartel a dbr:Charles_Martel_of_Anjou ;
                 dbo:parent ?parent .

  # Béla IV of Hungary's grandchild who is royalty
  ?belaIV a dbr:Béla_IV_of_Hungary ;
          dbo:child ?child1 .
  ?child1 dbo:child ?grandChild ;
          rdf:type dbo:RoyalFamilyMember .

  # Spouse of Charles II of Naples
  ?charlesII a dbr:Charles_II_of_Naples ;
             dbo:spouse ?individual .

  # Ensure the individual is the parent of Charles Martel and Béla IV's grandchild
  FILTER (?parent = ?individual && ?grandChild = ?individual)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ekaterina Zaharieva""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:workExample ?televisionShow .
  
  ?televisionShow a dbo:TelevisionSeries .

  ?movie dbo:writer ?author .
  
  ?author a dbo:Artist, dbo:MusicalArtist ;
          dbp:dateOfDeath ?deathDate .

  FILTER (?deathDate <= ""2020-06-18""^^xsd:date)
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Identify Min Hla Htut and his association with Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:birthPlace dbr:Pyakaung .

  # Step 2: Determine Min Hla Htut's parent
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Find the child of that parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryConflict
WHERE {
  # Find the military conflict involving the 30th Regiment of Foot
  ?regiment dbo:militaryConflict ?conflict1 .
  FILTER (str(?regiment) = ""Cambridgeshire_Regiment_of_Foot"")

  # Find William Bayne's involvement in a military conflict
  ?bayne dbo:participatedIn ?conflict2 .
  FILTER (str(?bayne) = ""William_Bayne"")

  # Link the Battle of Cape Finisterre to William Bayne
  ?battle dbr:Battle_of_Cape_Finisterre_1805 ;
          dbo:militaryConflict ?conflict2 .

  # Find commanders for these conflicts
  ?conflict1 dbo:commander ?commander .
  ?conflict2 dbo:commander ?commander .

  # Ensure the military conflict is an event
  ?conflict1 a dbo:MilitaryConflict ;
             dbo:type dbr:Event .
  ?conflict2 a dbo:MilitaryConflict ;
             dbo:type dbr:Event .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
}
```

This query uses the `dbo:birthName` property to retrieve Cynthia Morgan's birth name from DBpedia.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInAgüeroTeam ?playerInAimarTeam ?playerIn1955AthleteTeam
WHERE {
  # Sergio Agüero's team(s)
  ?agüero dbr:Sergio_Agüero .
  ?agüero dbo:team ?agüeroTeam .

  # Players in the same team as Sergio Agüero
  ?playerInAgüeroTeam dbo:playsFor ?agüeroTeam .

  # Pablo Aimar's team(s)
  ?aimar dbr:Pablo_Aimar .
  ?aimar dbo:team ?aimarTeam .

  # Players in the same team as Pablo Aimar
  ?playerInAimarTeam dbo:playsFor ?aimarTeam .

  # Person born on 1955-02-22 who is an athlete
  ?athlete dbp:birthday ""1955-02-22""^^xsd:date .
  ?athlete a dbo:Athlete .

  # Team of the person born in 1955-02-22
  ?athlete dbo:team ?athleteTeam .

  # Players in the same team as the athlete born on 1955-02-22
  ?playerIn1955AthleteTeam dbo:playsFor ?athleteTeam .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?childOfCommandersParent
WHERE {
  # Find Baeda Maryam I and his father
  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryamI .

  # Identify the commander in the Siege of Mukha
  ?siege dbo:eventParticipant ?commander .
  FILTER(CONTAINS(LCASE(?siege), ""siege of mukha""))

  # Ensure the commander is royalty
  ?commander a dbo:Monarch .

  # Find the parent of the commander who is also royalty
  ?commander dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch .

  # Find the child of this royal parent
  ?royalParent dbo:child ?childOfCommandersParent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  # Find all works associated with Aleksandr Filimonov
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  # Retrieve the writers of those works
  ?work dbo:author ?writer .
}
```

This query assumes that `dbo:author` is used to link authors to their works. Adjustments might be necessary if DBpedia uses different properties for specific types of works or relationships.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander .
  ?commander dbo:participatedInWar ?war .
}",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Jean Baptist, Comte d'Arco's role in the Russo-Polish War
  ?dArco a dbo:MilitaryPerson ;
        dbo:commanderOf ?war .
  
  # Ensure the war is also a television show and societal event
  ?war dbo:wikiPageRedirects ?tvShow ;
       dbo:socialEvent ?event .

  # Find the successor who was a politician and office holder
  ?successor dbo:predecessor ?dArco ;
             a dbo:Politician, dbo:OfficeHolder ;
             dbo:commanderOf ?war .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent ?birthplaceRegionCountry
WHERE {
  # Find Mary Elphinstone's parent
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent .

  # Find William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Link the parent to the birthplace
  ?parent dbo:nativeOf ?birthplaceRegionCountry .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office
WHERE {
  ?election dbo:electionDate ?date .
  ?candidate dbo:candidateFor ?election .
  ?candidate foaf:name ?leader .
  ?candidate dbo:office ?office .
  
  FILTER (YEAR(?date) = 2009)
  FILTER CONTAINS(LCASE(STR(?election)), ""galicia"")
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person dbo:headOfState ?administration .
  ?person rdfs:label ""Nicholas II of Russia""@en .
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  
  ?residence dbo:resident ?tenant .
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?song dbo:lyricist ?person .
  ?person dbo:birthPlace dbr:Birmingham .
  FILTER (str(?song) = ""Boom Shack-A-Lak"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rod Argent"" .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?musicalArtist
WHERE {
  # Find band members of Uncle Murda
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  
  # Find a musical artist born with a specific birth name in Florida
  ?musicalArtist dbo:birthName ?birthName ;
                dbo:birthPlace dbr:Florida ;
                rdf:type dbo:MusicalArtist .

  # Ensure the person is a native of Florida and a musical artist
  FILTER EXISTS { ?musicalArtist dbo:nativeOf dbr:Florida }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force ?war
WHERE {
  # Find the award Quincy Adams Gillmore received
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .

  # Find the awardees of that award
  ?award dbo:recipient ?awardee .

  # Get the military force associated with the awardee
  ?awardee dbo:militaryService ?force .

  # Ensure the awardee also received the Medal of Honor
  ?awardee dbo:awardReceived dbr:Medal_of_Honor .

  # Find the war in which the awardee participated
  ?awardee dbo:servedInWar ?war .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Identify Grant Bowler by his birth name and profession
  ?person a dbo:Actor ;
          foaf:name ""Grant Bowler"" ;
          dbo:birthName ""Richard Grant Esterhuysen"" .

  # Find movies that are also television shows
  ?movie dbo:starring ?actor .
  ?movie rdf:type dbo:Film .
  ?movie dbo:genre dbr:Television_series .

  # Ensure the actor is Grant Bowler
  FILTER (?person = ?actor)
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Lahore .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```

This query does the following:
- Uses `dbo:birthPlace` to find individuals born in Lahore.
- Optionally retrieves their names using `rdfs:label`, filtering for English language labels.
- Orders the results by name.",1,1,2,1,1,2,2,9,0,0,881,0,0.0,0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the group ""Triple X"" or ""3X Krew""
  dbr:3X_Krew a dbo:MilitaryUnit ;
              dbo:militaryConflict dbr:Battle_of_Beirut_1982 .

  # Find the commander of this military unit
  dbr:3X_Krew dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Producers of ""A Star Is Born"" (1937)
  ?aStarIsBorn dbo:producer ?producer .
  FILTER(STRSTARTS(STR(?aStarIsBorn), STR(dbr:A_Star_Is_Born_(1937_film))))

  # Producers of ""The Adventures of Tom Sawyer"" (1938)
  ?tomSawyer dbo:producer ?sameProducer .
  FILTER(STRSTARTS(STR(?tomSawyer), STR(dbr:The_Adventures_of_Tom_Sawyer_(1938_film))))

  # Check if the producers are the same
  FILTER (?producer = ?sameProducer)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vinceBirthPlace ?regionGovernorBirthPlace WHERE {
  # Step 1: Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceBirthPlace .

  # Step 2: Paulus Powell's birthplace as a region and administrative region
  dbr:Paulus_Powell dbo:birthPlace ?region .
  FILTER (dbo:Region ?region && dbo:AdministrativeRegion ?region) .

  # Step 3: Governor of that region who is a politician
  ?governor dbo:governmentRole ?role .
  ?role dbp:officeHolder ?person .
  ?person dbo:birthPlace ?regionGovernorBirthPlace .
  FILTER (strstarts(str(?role), ""http://dbpedia.org/resource/Governor_of_"") && 
          dbo:Politician ?person) .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?work a dbo:Book ;
        dbo:author dbr:Joe_Biden ;
        dbo:country dbr:United_States_of_America .
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?soccerPlayer
WHERE {
  # Find Marty Pollio's birthday
  dbr:Marty_Polio dbo:birthday ?birthday .

  # Find an athlete born on that date
  ?person dbo:birthday ?birthday ;
          a dbo:Athlete .
  
  # Find Manuel Huerga's film
  dbr:Manuel_Huerga dbo:film ?film ;
                    a dbo:FilmDirector .

  # Ensure the film is a work
  ?film a dbo:Work .

  # Find a soccer player in that film who is also an athlete
  ?actor dbo:role ?role ;
         dbo:film ?film ;
         a dbo:SoccerPlayer .
  
  # Ensure the actor is an athlete
  ?actor a dbo:Athlete .

  # Bind variables for output
  BIND(?person AS ?athlete)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirds ?curranBand ?kimWilsonBand WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup .

  # Nicholas Michael Curran as a musical artist and his band
  ?curran a dbo:Person ;
          foaf:name ""Nicholas Michael Curran"" ;
          dbo:occupation dbo:Musician .
  ?curranBand a dbo:MusicalGroup ;
              dbo:member ?curran .

  # Kim Wilson's association with The Fabulous Thunderbirds
  dbr:Kim_Wilson a dbo:Person ;
                 foaf:name ""Kim Wilson"" ;
                 dbo:member dbr:The_Fabulous_Thunderbirds .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer ?spouse WHERE {
  # Find Linda Sue Cobb and her spouse
  ?linda a dbo:Person ;
         foaf:name ""Linda Sue Cobb"" ;
         dbo:spouse ?spouse .

  # Assuming we need to find the producer of any movie associated with Linda Sue Cobb
  OPTIONAL {
    ?movie dbo:producer ?producer .
    ?linda dbo:actedIn ?movie .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?madridTenant WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:officeHeld ?office .
  
  OPTIONAL {
    ?tenant dbo:location dbr:Madrid .
    BIND(""Tenant of Madrid"" AS ?madridTenant)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?band ?profession
WHERE {
  # Find Robert Lamar Thompson who is a musical artist
  ?person dbo:name ""Robert Lamar Thompson""@en .
  ?person dbo:occupation dbr:Musical_artist .

  # Find the band he is associated with
  ?person dbo:musicGroup ?band .

  # Identify the profession of the producer of Coke Studio Philippines
  ?producer dbo:occupation ?profession .
  ?producer foaf:name ""Coke Studio Philippines""@en .

  # Match if Robert Lamar Thompson has this same professional role
  ?person dbo:occupation ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?sara a dbo:Person ;
        rdfs:label ""Princess Sara bint Faisal""@en .
  
  OPTIONAL { 
    ?sara dbo:parent ?parent .
  }
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician WHERE {
  ?musician a dbo:Musician .
}
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find the alter ego of The Shadow in Siege of Mukha
  ?shadowCharacter dbo:alias ""The Shadow""@en .
  ?shadowCharacter dbo:work dbr:Siege_of_Mukha .

  # Identify the alter ego
  ?shadowCharacter dbo:alternateName ?alterEgo .

  # Find a commander who is royalty
  ?commander dbo:role ""Commander"" .
  ?commander dbo:nationality dbr:Royal_Nation . # Assuming there's a specific resource for royalty

  # Identify the child of this royal commander
  ?child dbo:parent ?commander .

  # Ensure the alter ego is related to this child
  ?alterEgo dbo:relatedTo ?child .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Dawit I's child
  ?dawitIChild dbo:childOf dbr:Dawit_I ;
               a dbo:Person .

  # Baeda Maryam I's child and their grandfather
  ?baedaMaryamChild dbo:childOf dbr:Baeda_Maryam_I ;
                    a dbo:Person .
  
  ?grandfather dbo:parent ?baedaMaryamParent ;
               a dbo:Person .
  
  ?baedaMaryamParent dbo:parent ?baedaMaryamChild .

  # The person we are looking for
  ?person dbo:childOf ?dawitIChild ;
          dbo:parent ?grandfather ;
          a dbo:Royalty, dbo:OfficeHolder .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria_(1507–1578) dbo:spouse dbr:John_III_of_Portugal .
  
  dbr:Catherine_of_Austria_(1507–1578) dbo:father ?father .

  ?commander dbo:childOf ?father ;
             dbo:occupation dbr:Siege_of_Padua .
  
  ?father a dbo:Monarch .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polloi dbo:birthday ?birthday .

  # Find Sergio Agüero as a player
  dbr:Sergio_Agüero dbo:occupation dbr:Athlete ;
                    dbp:sport dbr:Football_ (Soccer) .

  # Find an athlete born on Marty Pollio's birthday and is also a player like Sergio Agüero
  ?athlete dbo:birthday ?birthday ;
           dbo:occupation dbr:Athlete ;
           dbp:sport dbr:Football_ (Soccer) .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu dbr:Saw_Min_Phyu .

  # Step 2: Find Spouse
  ?spouse dbo:spouseOf ?sawMinPhyu .

  # Step 3: Identify Child of the Spouse
  ?child dbo:childOf ?spouse .

  # Step 4: Check if the Child is a Royalty
  ?child rdf:type dbo:Monarch .

  # Step 5: Find Predecessor of this Royal Child
  ?predecessor dbo:successor ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  ?person dbo:bandMemberOf dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  ?association dbo:musicalArtist dbr:Bobby_Shmurda ;
               dbo:associatedWith ?person .

  ?award dbo:nativeOf ?region .
  ?region rdf:type dbo:State ;
          dbo:partOf dbr:United_States_of_America ;
          dbo:settlement dbr:Settlement .

  ?person dbo:associatedWith ?award .

  ?native dbo:nativeOf ?region .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# Placeholder - please specify details such as actor, director, genre, or year.
SELECT ?movie WHERE {
  # Example: ?movie dbo:starring dbp:ActorName .
}
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur""@en .
  
  ?artist dbo:work ?work .
  FILTER (STRSTARTS(STR(?work), STR(dbo:MusicalWork)))
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?managerName WHERE {
  # Thomas Letsch managed teams
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Find players in the 2007–08 VfL Bochum season and their managers
  ?player dbo:playsFor dbr:2007%E2%80%9308_VF_Bochum_season ;
          dbo:teamManager ?manager .

  # Manager of the player must be a sports club, organization, and soccer club
  ?manager rdf:type dbo:SportsClub ;
           rdf:type dbo:Organization ;
           rdf:type dbo:SoccerClub .
  
  # The manager should be native to Germany (Theodor Heuss's administration)
  ?manager dbp:nationality dbr:Germany .

  # Get the name of the manager
  ?manager rdfs:label ?managerName .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthplace
WHERE {
  VALUES ?person { 
    dbr:Ekaterina_Zaharieva 
    dbr:Reneta_Kamberova 
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthplace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Leader of National Party of Greece
  ?leader dbp:partyLeaderOf dbr:National_Party_of_Greece ;
          dbo:spouseOrPartner ?warParticipant .

  # Wars involving the leader
  ?warParticipant dbo:participatedIn ?war .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rainer Weiss""@en .
  
  ?award dbo:recipient ?person ;
         dbo:awardingBody ?institution .

  ?institution a dbo:EducationalInstitution .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?francis a dbo:Duke ;
           dbo:spouse ?renee .
  
  FILTER (str(?renee) = ""Renée of Bourbon"") .

  ?francis dbo:parent ?parent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?reference WHERE {
  # Yeshaq I is the parent of the child
  ?yeshaq dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # The child must be a royalty
  ?child rdf:type dbo:Monarch .

  # The child is also the father of Baeda Maryam I
  ?child dbo:spouse ?baedaMother .
  ?baedaMother dbo:child dbr:Baeda_Maryam_I .

  # Filter to ensure Yeshaq I is involved
  FILTER(?yeshaq = dbr:Isaac_I_of_Ethiopia)

  # Get reference information about the child
  OPTIONAL { ?child dbo:wikidata ?wikidata . }
  BIND(STR(?wikidata) AS ?reference)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # William Bayne's involvement in military conflicts
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?event .
  
  # Event is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Connection to French campaign in Egypt and Syria
  ?campaign dbo:commander ?awardee ;
            rdf:type dbo:MilitaryConflict .

  FILTER(?campaign = dbr:French_campaign_in_Egypt_and_Syria)

  # Military force associated with the event
  ?event dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
  FILTER (str(?movie) = ""Movie_Title"") .
  OPTIONAL { ?actor dbo:profession ?profession . }
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?team
WHERE {
  # Find Marty Pollio's birthday
  dbr:Marty_Polloi dbo:birthday ?martyBirthday .

  # Find athletes born on Marty Pollio's birthday
  ?athlete dbo:birthDate ?martyBirthday ;
           a dbo:Athlete .

  # Find Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloBirthday .

  # Find soccer players and managers born on Marcelo Sarmiento's birthday
  ?soccerPerson dbo:birthDate ?marceloBirthday ;
                a dbo:SoccerPlayer, dbo:SoccerManager .

  # Get the team of the soccer player/manager
  ?soccerPerson dbo:team ?team .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantSantiago ?tenantCountry
WHERE {
  # Find the tenant of Santiago de Compostela
  ?santiago a dbo:City ;
            rdfs:label ""Santiago de Compostela""@en .
  
  ?tenantSantiago dbo:mayorOf ?santiago .

  # Find Álvaro Quirós and his residence country
  ?alvaroQuirós foaf:name ""Álvaro Quirós"" ;
                dbo:nationality ?country .

  FILTER (isLiteral(?country) && lang(?country) = 'en')

  # Ensure the residence is a country
  ?country a dbo:Country .
  
  BIND(?country AS ?tenantCountry)
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  # Step 1: Get Cynthia Morgan's resource and her birth name
  dbr:Cynthia_Morgan dbo:birthName ?cynthiaBirthName .

  # Step 2: Find other individuals with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER (?birthName = ?cynthiaBirthName && ?person != dbr:Cynthia_Morgan)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award [ a dbo:Award ; dbo:recipient ?person ] .
  FILTER (STRSTARTS(STR(?person), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(LCASE(STR(?person)), ""knight commander of the order of the bath"")).
  
  ?person dbo:militaryCommanderOf [ a dbo:MilitaryConflict ; dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot ] .
  
  ?event dbo:type dbr:SocietalEvent ;
         dbo:relatedMilitaryForce ?militaryForce .

  FILTER (EXISTS { ?person dbo:commanderIn ?event }).
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?country ?gustavoParty
WHERE {
  # Roy Barreras' political party
  OPTIONAL { 
    dbr:Roy_Barreras dbo:party ?royParty .
  }
  
  # Daniel Elahi Galán's country
  OPTIONAL {
    dbr:Daniel_Elahi_Galán dbo:nationality ?country .
  }

  # Gustavo Petro's political party
  OPTIONAL {
    dbr:Gustavo_Petro dbo:party ?gustavoParty .
  }
}
```",4,4,5,2,3,2,3,28,1,9,0,0.1,1.0,0.18181818181818182
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entityInBirthplace
WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  
  ?person dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States .

  ?gillmore dbo:militaryUnit ?force .
  FILTER (?gillmore = dbr:Quincy_Adams_Gillmore) .

  ?entityInBirthplace dbo:location ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Aladdin""@en ;
        dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1958)
  
  ?film dbo:starring ?actor .
}
```

This query does the following:
- Selects films that are instances of `dbo:Film`.
- Filters for films with the label ""Aladdin"" in English.
- Ensures the release date is within the year 1958 using a filter on the year extracted from the `releaseDate` property.
- Retrieves actors linked to this film via the `dbo:starring` property.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee WHERE {
  # Find shows related to the Royal Swedish Academy of Sciences
  ?show dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences .
  
  # Find Nobel Prize in Physics awardees
  ?award dbo:prize dbr:Nobel_Prize_in_Physics ;
         dbo:recipient ?awardee .

  # Ensure the award is given by the Royal Swedish Academy of Sciences
  ?award dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?residence WHERE {
  ?person dbo:name ""Doug Beattie""@en .
  ?person dbo:residence ?residence .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Find Cynthia Morgan's birth name
  dbr:Cynthia_Morgan dbo:birthName ?birthName .

  # Find the actor of The Campus Queen
  dbr:The_Campus_Queen dbo:actor ?actor .

  # Check if there is a common associated musical artist
  OPTIONAL { ?birthName dbo:associatedMusicalArtist ?musicalArtist . }
  OPTIONAL { ?actor dbo:associatedMusicalArtist ?musicalArtist . }

  FILTER(?musicalArtist != dbr:Cynthia_Morgan && ?musicalArtist != ?actor)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- Uses `rdfs:label` to find the DBpedia resource for ""The Shadow.""
- Utilizes `dbo:alterEgo` to retrieve the alter ego of this character.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorShelbyOaks ?actorATL
WHERE {
  # Find actor for Shelby Oaks
  ?shelbyOaksFilm a dbo:Film .
  ?shelbyOaksFilm rdfs:label ""Shelby Oaks""@en .
  ?shelbyOaksFilm dbo:starring ?actorShelbyOaks .

  # Find actor for ATL (film)
  ?atlFilm a dbo:Film .
  ?atlFilm rdfs:label ""ATL (film)""@en .
  ?atlFilm dbo:starring ?actorATL .

  # Ensure the actors are distinct individuals
  FILTER(?actorShelbyOaks != ?actorATL)
}
```",3,3,4,1,3,3,3,71,1,13,0,0.07142857142857142,1.0,0.13333333333333333
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonParent
WHERE {
    # Step 1: Find Mariclare Costello's spouse
    ?mariclare a dbo:Person ;
               foaf:name ""Mariclare Costello"" .
    
    ?spouse dbo:spouseOf ?mariclare .

    # Step 2: Find the child of the spouse
    ?child dbo:parent ?spouse .

    # Step 3: Determine the parent of this child
    ?parent1 dbo:parent ?child .

    # Step 4: Identify a professional photographer
    ?photographer a dbo:Photographer ;
                  foaf:name ?name .
    
    # Step 5: Find the parent of the photographer
    ?parent2 dbo:parent ?photographer .

    # Find common parent
    FILTER (?parent1 = ?parent2)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Step 2: Find the child of this parent (Archduke himself)
  ?child dbo:parent ?parent .
  
  # Step 3: Determine the father of this child
  ?child dbo:father ?father .

  # Additional context for societal event, event, and television show related to 2nd Dragoon Regiment
  OPTIONAL {
    ?event dbo:relatedEntity dbr:2nd_Dragoon_Regiment_(France) .
    FILTER (CONTAINS(LCASE(?event), ""societal"") && CONTAINS(LCASE(?event), ""event"") && CONTAINS(LCASE(?event), ""television show""))
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .
  ?administration dbo:head ?tenant .
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName WHERE {
  ?person dbp:name ""Peter IV of Aragon""@en .
  ?person dbo:birthName ?realName .
}
```

This query searches for the entity representing Peter IV of Aragon and retrieves his birth name using the `dbo:birthName` property.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?redirect ?abstract WHERE {
  VALUES ?resource { dbr:Order_of_the_Medjidie }
  
  OPTIONAL {
    ?resource dbo:wikiPageRedirects ?redirect .
  }

  OPTIONAL {
    ?resource dbo:abstract ?abstract .
    FILTER (lang(?abstract) = 'en')
  }
}
```

This query does the following:
- It looks for the resource corresponding to ""Order of the Medjidie"".
- It checks if there are any redirects associated with this entity.
- It retrieves an English abstract if available, which might provide additional context or references.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Resource for the event
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commandedBy ?commander .
  
  # Optional: Get more details about the commander, such as name
  OPTIONAL { ?commander rdfs:label ?commanderLabel . FILTER (lang(?commanderLabel) = 'en') }
}
```

This query assumes that there is a direct relationship `dbo:commandedBy` linking the event to its commander. The optional part retrieves the label of the commander in English for better readability.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find awards given by the U.S. Congress
  ?award dbo:awardedBy dbr:United_States_Congress .
  
  # Identify Quincy Adams Gillmore and his military force
  ?gillmore dbo:associatedWithMilitaryForce ?force ;
           rdfs:label ""Quincy Adams Gillmore""@en .

  # Find wars involving the military force
  ?war dbo:participatingUnit ?force .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Cecilia Renata of Austria
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .

  # Find the child of her father who is a commander in war
  ?father dbo:child ?child .
  ?child dbo:militaryCommanderOf ?war .

  # Ensure this person is linked to societal events, general events, and television shows
  ?child dbo:societalEvent ?event1 .
  ?child dbo:event ?event2 .
  ?child dbo:televisionShow ?show .

  # Associate with the Algerian War
  FILTER(?war = dbr:Algerian_War)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName ?associatedArtist WHERE {
  # Find The Fabulous Thunderbirds' real name
  dbr:The_Fabulous_Thunderbirds dbo:bandMember ?member .
  
  ?member dbo:birthPlace ?birthPlace ;
          dbo:birthDate ?birthDate .

  OPTIONAL { ?member dbp:realName ?realName . }

  # Find Nick Curran's details and check association
  dbr:Nick_Curran dbo:birthPlace ?curranBirthPlace ;
                  dbo:birthDate ?curranBirthDate ;
                  dbo:bandMember ?associatedArtist .

  FILTER (?member = dbr:Nick_Curran)

  OPTIONAL { ?associatedArtist dbp:realName ?artistRealName . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile, Queen of Sicily is a parent of ?child
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # Roger II of Sicily is a parent of ?child
  dbr:Roger_II_of_Sicily dbo:spouse ?parent2 .
  ?parent2 dbo:child ?child .

  # ?child is a parent of William II of Sicily
  ?child dbo:child dbr:William_II_of_Sicily .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?royalChild ?alterEgo
WHERE {
  # Baeda Maryam I and his father
  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryamI .

  # Yeshaq I's parent (father) and a royal child of that parent
  dbr:Yeshaq_I dbo:father ?parentOfYeshaq .
  ?parentOfYeshaq dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild dbo:occupation dbr:Monarch . }

  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthplace ?warOfAwardee
WHERE {
  # Henry Clay Lewis's birth information
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States .

  # Find an award given by the United States Congress to a show or event
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:United_States_Congress .
  
  # The awardee is associated with a war (or event)
  ?awardee dbp:relatedEvent ?warOfAwardee .

  # Get the entity in the birthplace
  ?entityInBirthplace a dbo:Settlement ;
                     dbo:location ?birthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:musicalArtist true .
  ?person dbo:birthName ""Bob Thompson"" .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:producer dbr:Nat_Levine .
}
```",1,2,2,1,1,3,3,71,96,0,0,1.0,1.0,1.0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate ?office
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruno Retailleau""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER EXISTS { ?person dbo:occupation dbo:Politician . }
  OPTIONAL { ?person dbo:officeHolder ?office . }

}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Find an actor from those films who was born as Harriette Arlene Lake
  ?actor dbo:birthName ""Harriette Arlene Lake""@en ;
         dbo:actedIn ?film .

  # Get the spouse of this actor
  ?actor dbp:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?partyMember WHERE {
  # Find John Schneider and his spouse
  dbr:John_Schneider dbo:actorIn dbr:_1000_Dollars_a_Minute .
  dbr:John_Schneider foaf:mbox ?johnEmail .
  ?spouse dbo:spouseOf ?johnEmail .

  # Check if the spouse is a member of the Republican Party
  ?spouse dbo:memberOfParty dbr:Republican_Party_(United_States) .

  # Find Tisha Sterling's parent and their birth name
  ?parent dbo:child dbr:Tisha_Sterling .
  ?parent foaf:name ?birthName .

  # Ensure the spouse is the person with the same birth name as Tisha Sterling's parent
  FILTER (?spouse = ?personWithBirthName)
  BIND(?spouse AS ?personWithBirthName)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  # Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativePlace ?nativePlace .
  }

  # Uncle Murda band member
  OPTIONAL {
    ?bandMember dbp:memberOfBand dbr:Uncle_Murda ;
                dbo:nativePlace ?nativePlace .
  }

  # Bobby Shmurda
  OPTIONAL {
    dbr:Bobby_Shmurda dbo:nativePlace ?nativePlace .
  }

  # Constraints for the native place
  FILTER (
    EXISTS { ?nativePlace a dbo:Region . }
    && EXISTS { ?nativePlace dbp:country ""United States"" . }
    && EXISTS { ?nativePlace a dbo:State . }
    && EXISTS { ?nativePlace a dbo:Settlement . }
  )
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:child <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
  ?person a dbo:Person .
  BIND(?person AS ?parent)
}
```",1,1,2,1,1,3,3,71,1,1,1,0.5,0.5,0.5
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
    dbr:Cecilia_Renata_of_Austria dbo:father ?fatherOfCeciliaRenata .
    ?child dbo:parent ?fatherOfCeciliaRenata .
    dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharlesJoseph .
    ?child2 dbo:parent ?parentOfCharlesJoseph .
    FILTER (?child = ?child2)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find the predecessor of Stephen V of Hungary
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Find a child of this predecessor who is royalty and parent of Charles Martel of Anjou
  ?royalChild dbo:childOf ?predecessor ;
              rdf:type dbo:Monarch ;
              dbo:parent dbr:Charles_Martel_of_Anjou .
  
  # Step 3: Find the child of this royal person
  ?childOfChild dbo:childOf ?royalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Find Sam Concepcion and ensure he is a musical artist
  dbr:Sam_Concepcion dbo:profession dbr:Musical_artist .

  # Find Robert Lamar Thompson, also known as Lil Wayne, and ensure he is a musical artist
  dbr:Lil_Wayne rdfs:label ""Robert Lamar Thompson""@en .
  dbr:Lil_Wayne dbo:profession dbr:Musical_artist .

  # Get the band associated with Robert Lamar Thompson (Lil Wayne)
  dbr:Lil_Wayne dbo:band ?band .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:title ""The Live Anthology""@en .
  ?album dbo:writer ?writer .
  ?writer a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?event dbo:eventName ""Siege of Padua""@en .
  
  ?commander dbo:role ""Commander""@en ;
             dbo:participatedIn ?event .

  ?child dbo:parent ?commander .

  ?child a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?catherine a dbo:Person ;
             rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  OPTIONAL { ?catherine dbo:father ?father . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity ?warEntity
WHERE {
  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlaceEntity .

  # Toyotomi Hidenaga's war involvement
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?warEntity .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  ?person rdfs:label ""Victor Saville""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  ?native dbo:nativeOf ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  VALUES ?ladyElizabeth { 
    dbc:Lady_Elizabeth_Bowes-Lyon 
  }
  
  VALUES ?claude {
    dbc:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne 
  }

  ?ladyElizabeth dbo:parent ?parent1 .
  ?claude dbp:child ?ladyElizabeth .

  FILTER (?parent1 = ?parent)
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Find a person with the same birth name who is a member of Uncle Murda and native to Florida
  ?person dbo:birthName ?birthName .
  ?person dbo:memberOfBand dbr:Uncle_Murda .
  ?person dbo:nativePlace dbr:Florida .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  
  ?player dbo:playsFor ?club .
  ?club a dbo:SportsClub ;
        a dbo:Organisation ;
        a dbo:SoccerClub .

  ?season1 a dbo:FootballLeagueSeason ;
           a dbo:SportsTeamSeason ;
           a dbo:SportsSeason ;
           dbr:""2006–07_VfL_Bochum_season"" .
  
  ?season2 a dbo:FootballLeagueSeason ;
           a dbo:SportsTeamSeason ;
           a dbo:SportsSeason ;
           rdfs:subClassOf+ ?season1 .

  ?player dbo:playsFor ?club2 .
  ?club2 dbo:participatedIn ?season2 .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Carolyn_Jones 
    dbr:Sal_Mineo
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the manager of SBV Vitesse for the 2020–21 season
  ?team dbo:manager ?manager .
  
  # Ensure it's the correct team and season
  ?team rdfs:label ""SBV Vitesse""@en .
  FILTER(CONTAINS(LCASE(?teamLabel), ""vitesse"")) .

  # Check if the manager is native to West Germany
  ?manager dbo:nationality dbr:West_Germany ;
           dbp:birthPlace ?birthPlace .
  
  # Ensure birthplace is in West Germany
  ?birthPlace rdfs:label ?locationLabel .
  FILTER(CONTAINS(LCASE(?locationLabel), ""west germany""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Nothing to Gein""@en .
  
  ?band dbo:producer ?producer .

  ?producer a dbo:Organization ;
            a dbo:Group .

  ?member dbo:musicArtist ?producer .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  # Step 1: Get Joey B's birth name
  VALUES (?joeyB) { dbr:Joey_B }
  
  ?joeyB dbo:birthName ?birthName .
  
  # Step 2: Find other individuals with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER(?person != ?joeyB) # Exclude Joey B from results
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order ;
           dbo:parent ?alumnus .

  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby ;
          dbo:parent ?alumnus .

  ?child dbo:father ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work rdf:type dbo:Book .
  ?work rdf:type dbo:WrittenWork .
  ?work dbo:author dbr:Bill_Clinton .
}
```",1,4,2,1,1,3,3,71,6,1,0,0.8571428571428571,1.0,0.923076923076923
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:commanderOf dbr:World_War_II .

  ?work dbo:author ?person ;
        a dbo:Book .

  BIND(?person AS ?author)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee a dbo:AwardRecipient ;
          dbo:nationality dbr:Japan ;
          dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  ?awardee dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?reference dbo:subject ?awardee .
    ?reference a dbo:TelevisionShow .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?birthPlace WHERE {
  dbr:Akaler_Shandhaney dbo:starring ?actor .

  ?actor rdfs:label ?actorName .
  
  ?actor rdf:type dbo:Actor .

  ?actor dbp:birthPlace ?birthPlace .

  FILTER(LANG(?actorName) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person dbo:residence dbr:Sofia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,9,29,5,0.23684210526315788,0.6428571428571429,0.34615384615384615
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Cece Bell's birthplace
  dbr:Cecil_Alice_Bell dbo:birthPlace ?ceceBellBirthPlace .

  # Governor of Virginia (as of 2023, it is Glenn Youngkin)
  dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .
  
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Charles Martel of Anjou
  ?charlesMartel dbo:child ?person .
  FILTER(STR(?charlesMartel) = ""Charles_Martel_of_Anjou"")

  # Step 2: Find the parent of Charles Martel of Anjou
  ?person dbo:parent ?parent .

  # Step 3: Identify the father of this parent
  ?parent dbo:parent ?grandParent .

  # Step 4: Find the spouse of this father
  ?grandParent dbo:spouse ?spouse .

  # Step 5: Ensure the spouse is royalty
  OPTIONAL { ?spouse dbp:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }

  # Step 6: Connect to Philip, Despot of Romania
  ?philip dbo:child ?descendant .
  FILTER(STR(?philip) = ""Philip,_Despot_of_Romania"")
  ?descendant dbo:parent* ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find the Gillmore Medal and its awardees
  ?gillmoreMedal a dbo:Award ;
                 dbo:recipient dbr:Amasa_Tracy .

  # Find wars associated with Amasa Tracy
  ?war dbo:participant dbr:Amasa_Tracy .

  # Determine the force commanded by Amasa Tracy during those wars
  ?force dbo:commander dbr:Amasa_Tracy ;
         dbo:partOfWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?club WHERE {
  ?letsch a dbo:FootballManager ;
          foaf:name ""Thomas Letsch""@en .
  
  ?letsch dbo:managedClub ?club .
}
```",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfEugeneProfession ?parentOfAllanChild
WHERE {
  # Part 1: Parent of Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:occupation ?eugeneProfession .
  ?eugeneProfession rdfs:subClassOf* ?parentOfEugeneProfession .

  # Part 2: Parent of Allan Arbus' child
  OPTIONAL {
    dbr:Allan_Arbus dbo:child ?allanChild .
    ?allanChild dbo:parent ?parentOfAllanChild .
  }
}
```",5,5,6,3,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Roger II of Sicily's child
  ?child dbo:parent dbr:Roger_II_of_Sicily .
  
  # Alfonso VI's grandchild (child's child)
  ?grandchild dbo:parent ?intermediateParent .
  ?intermediateParent dbo:parent dbr:Alfonso_VI_of_Léon_and_Castile .

  # William I of Sicily's parent who is a royalty
  ?royaltyChild dbo:parent dbr:William_I_of_Sicily .
  ?father dbo:child ?royaltyChild .
  ?father rdf:type dbo:Monarch .

  # Find the individual satisfying all conditions
  FILTER (?child = ?grandchild && ?child = ?father)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?actorOfColorMeDeadDeathPlace WHERE {
  dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  
  dbr:Color_Me_Dead dbo:starring ?actorOfColorMeDead .
  
  ?actorOfColorMeDead dbo:deathPlace ?actorOfColorMeDeadDeathPlace .
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Identify Luiza Erundina in DBpedia
  dbr:Luiza_Erundina dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is a university, organisation, and educational institution
  ?almaMater rdf:type dbo:University ;
             rdf:type dbo:Organisation ;
             rdf:type dbo:EducationalInstitution .
}
```

This query does the following:
- Uses `dbr:Luiza_Erundina` to refer to Luiza Erundina in DBpedia.
- Retrieves her alma mater using the property `dbo:almaMater`.
- Ensures that the alma mater is classified as a university, organisation, and educational institution by checking its type against `dbo:University`, `dbo:Organisation`, and `dbo:EducationalInstitution`.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writer .
  
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  ?writer foaf:name ?artist .
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Ferdinand II, Holy Roman Emperor
  ?ferdinand a dbo:Person ;
             foaf:name ""Ferdinand II"" .

  # Eleonore of Austria, Queen of Poland
  ?eleonore a dbo:Person ;
            foaf:name ""Eleonore of Austria"" ;
            dbo:spouse dbr:King_Jan_II_Zygmunt_of_Poland .

  # Commander is child of Ferdinand II and father of Eleonore
  ?commander dbo:childOf ?ferdinand ;
             dbo:parentOf ?eleonore .

  # War that is a societal event, an event, and a television show
  ?war a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .

  # Commander in the war
  ?commander dbo:commanderIn ?war .

  # Association with 2nd Dragoon Regiment (France)
  ?regiment dbr:2nd_Dragoon_Regiment_(France) .
  ?commander dbo:memberOf ?regiment .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?spouse WHERE {
  # Find a disease that is also a societal event
  ?disease a dbo:Disease ;
           a dbo:SocietalEvent .

  # Find the commander in the war related to this disease/societal event
  ?war dbo:relatedTo ?disease .
  ?commander dbo:rank ""Commander""^^xsd:string ;
             dbo:militaryBranch dbr:United_States_Navy ;
             dbo:participatedIn ?war .

  # Find the author who is a politician and office holder
  ?author dbo:occupation dbo:Politician ;
          dbo:officeHolder true ;
          dbo:writtenWork dbr:An_Invitation_to_the_White_House .

  # Find the spouse of this author
  ?spouse dbo:spouse ?author .
  
  # Ensure the commander and author are connected through their roles
  ?commander dbp:relatedTo ?author .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantQuirós ?officeFeijóo ?tenantPSOE
WHERE {
  # Álvaro Quirós' residence country
  OPTIONAL { 
    dbr:Álvaro_Quirós dbo:residenceCountry ?tenantQuirós .
  }
  
  # Alberto Núñez Feijóo's office
  OPTIONAL { 
    dbr:Alberto_Núñez_Feijóo dbo:office ?officeFeijóo .
  }
  
  # Spanish Socialist Workers' Party administration tenant that is Spanish
  OPTIONAL {
    dbr:Spanish_Socialist_Workers'_Party dbo:administrationTenant ?tenantPSOE .
    FILTER (lang(?tenantPSOE) = ""es"") # Ensures the description is in Spanish
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?award a dbo:Award ;
        dbo:recipient ?person .
  ?person foaf:name ?recipientName .
  
  FILTER (
    str(?award) = ""http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath""
  )
}
```

This query assumes:
- `dbo:Award` is the class for awards.
- `dbo:recipient` links an award to its recipient.
- `foaf:name` provides the name of the person.

Make sure that the resource identifier for ""Knight Commander of the Order of the Bath"" matches what's available in DBpedia. Adjust the filter condition if necessary based on the exact URI used by DBpedia.",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_II_of_Sicily dbo:father ?father .
  
  ?father dbo:childOf dbr:Elvira_of_Castile_Queen_of_Sicily .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?office WHERE {
  # Find the leader of the Conservative Republican Party in Spain
  ?party dbo:leader ?leader .
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .

  # Ensure the leader is a politician and has an office in Madrid
  ?leader rdf:type dbo:Politician .
  ?office dbo:location dbr:Madrid ;
          dbo:occupant ?leader .

  # Filter to ensure we get results related to Madrid
  FILTER (lang(?partyLabel) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Ackquille Jean Pollard's details
  dbr:Ak'Sentia_II_Pollard dbo:nativePlace dbr:Florida .
  
  # Ak'Sentia II Pollard is a band member of an artist
  dbr:Ak'Sentia_II_Pollard dbo:memberOf ?bandMemberArtist .

  # The band member artist is associated with GS9
  ?bandMemberArtist dbo:associatedBand dbr:GS9 .
  
  # Ensure the result is a musical artist
  ?bandMemberArtist rdf:type dbo:MusicalArtist .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:producer dbr:Nat_Levine .
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,201,31,56,0.8663793103448276,0.7821011673151751,0.8220858895705522
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Boom_Shack_A_Lak dbo:lyricist ?writer .
}
```

This query assumes that the song ""Boom Shack-A-Lak"" is represented in DBpedia with the resource `dbr:Boom_Shack_A_Lak` and that the writers are linked using the `dbo:lyricist` property.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:nativePlace dbr:Middlesbrough ;
      dbo:parent ?parent .
}
```

This query assumes that the DBpedia resource for Patrick Bowes-Lyon is `dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne` and that his native place can be verified as Middlesex. Adjustments may be needed if these assumptions are incorrect.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Archduke Charles Joseph of Austria's parent
  ?archduke dbr:Archduke_Charles_Joseph_of_Austria ;
            dbo:parent ?parent .

  # Step 2: Parent's child (which is Archduke Charles Joseph)
  ?child dbr:Archduke_Charles_Joseph_of_Austria ;
         dbo:parent ?parent .

  # Step 3: Father of this child
  ?father1 dbo:spouse ?mother .
  ?mother dbo:child ?child .

  # Step 4: Maria Anna of Bavaria's child
  ?maria dbr:Maria_Anna_of_Bavaria ;
         dbo:birthYear ""1574""^^xsd:gYear ;
         dbo:child ?child2 .

  # Step 5: Father of Maria Anna's child
  ?father2 dbo:spouse ?mother2 .
  ?mother2 dbo:child ?child2 .

  # Ensure both fathers are the same and royalty
  FILTER (?father1 = ?father2)
  FILTER EXISTS { ?father1 a dbo:Monarch }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Identify band members of this artist who are also musical artists
  ?artist dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Filter by those native to Florida
  ?bandMember dbp:nativePlace dbr:Florida .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- Uses `rdfs:label` to find the DBpedia resource for ""The Shadow.""
- Utilizes `dbo:alterEgo` to retrieve the alter ego of this character.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_manager .

  # Person born on 1955-02-22 who is an athlete
  ?person2 dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sport ?sport .

  # Sergio Agüero's team
  dbr:Sergio_Agüero dbo:playsFor ?team ;

  # The person born in 1979 played for the same team as the athlete and Sergio Agüero
  ?person1 dbo:playsFor ?team ;
           dbo:playedWith ?person2 .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow WHERE {
  # Maria I of Portugal
  dbr:Maria_I_of_Portugal a dbo:Monarch ;
                          dbo:reigningMonarchOf dbr:Kingdom_of_Portugal .

  # Find wars she was involved in as a commander
  OPTIONAL { 
    ?war dbo:commander dbr:Maria_I_of_Portugal .
  }

  # Check if there is a television show related to the war
  OPTIONAL {
    ?tvShow dbo:subject ?war ;
            a dbo:TelevisionSeries .
  }
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Koichiro Matsuura""@en ;
          dbo:birthPlace dbr:Japan .
  
  ?person dbo:associatedWith ?war .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Linda Sue Cobb""@en .
  
  ?film dbr:12_Strong ;
        dbo:producer ?person .

  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        dbp:name ""Khlyst""@en .
  
  ?band dbo:bandMember ?member .

  ?member a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Myat Hpone Pyo""@en .
  
  ?father dbo:child ?person ;
          a dbo:Monarch ; # Assuming 'a dbo:Monarch' is used to denote royalty
  
  ?father dbp:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?party 
WHERE {
  # Find Daniel Elahi Galán's country of origin
  dbr:Daniel_El%C3%A1i_Gal%C3%A1n dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .

  # Find Roy Leonardo Barreras Montealegre's political party
  dbr:Roy_Leonardo_Barreras_Montealegre a dbo:Politician ;
                                     dbp:party ?party .
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mariano Rajoy""@en .
  ?position dbo:officeHolder ?person ;
            dbo:positionName ?office .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?profession ?character
WHERE {
  # Find Bob Thompson's band
  dbr:Bob_Thompson_(musician) dbo:musicalArtistInBand ?band .

  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:occupation ?profession .

  # Find a fictional character created by Walter B. Gibson that is both a comics character and an alter ego
  ?character dbo:creator dbr:Walter_B._Gibson ;
             rdf:type dbo:FictionalCharacter ;
             dbo:isComicsCharacter true ;
             dbo:alterEgoOf ?creation .
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorATL ?actorShelbyOaks WHERE {
  dbr:ATL (dbo:starring|dbo:castMember) ?actorATL .
  dbr:Shelby_Oaks (dbo:starring|dbo:castMember) ?actorShelbyOaks .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
    dbr:Cecilia_Renata_of_Austria dbo:father ?father .
    ?child dbo:parent ?father .
    ?child dbo:occupation dbr:Thirty_Years_War_commander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?birthName ?artist WHERE {
  ?native a dbo:Person ;
          dbo:nationality dbr:United_States_of_America ;
          dbo:stateOrProvince dbr:Florida ;
          dbp:birthday ?birthday .

  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida ;
          dbp:name ?artist ;
          dbp:birthName ?birthName .

  FILTER (?native != ?person)
  FILTER (?birthName = ?native)

}
```",4,5,5,3,2,3,3,71,0,0,59,0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Player in ""All or Nothing: Manchester City"" who is a soccer player and an athlete
  ?show dbo:actor ?player .
  FILTER (str(?show) = ""dbr:All_or_Nothing:_Manchester_City_(TV_series)"")
  
  ?player dbo:sport dbr:Soccer .
  ?player dbo:occupation dbr:Athlete .

  # Athlete born on February 22, 1955
  ?athlete dbo:dateOfBirth ?dob1 .
  FILTER (YEAR(?dob1) = 1955 && MONTH(?dob1) = 2 && DAY(?dob1) = 22)
  
  ?athlete dbo:occupation dbr:Athlete .

  # Person born on November 3, 1979, who is a soccer player and manager
  ?person dbo:dateOfBirth ?dob2 .
  FILTER (YEAR(?dob2) = 1979 && MONTH(?dob2) = 11 && DAY(?dob2) = 03)
  
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Soccer_Manager .

  # The player should be the same as the athlete and part of the team
  ?team dbo:member ?player .
  ?person dbo:memberOf ?team .

  # Ensure all conditions are met for the same player
  FILTER (?athlete = ?player && ?show != ?athlete)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?musicalArtist WHERE {
  ?person dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""musician""))
  OPTIONAL { ?person dbo:musicalArtist ?musicalArtist }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Producer of ""A Star Is Born"" (1937 film)
  ?film1 a dbo:Film ;
         dbo:title ""A Star Is Born""@en ;
         dbo:releaseDate ?date1 .
  FILTER(YEAR(?date1) = 1937)

  ?film1 dbo:producer ?producer .

  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?film2 a dbo:Film ;
         dbo:title ""The Adventures of Tom Sawyer""@en ;
         dbo:releaseDate ?date2 .
  FILTER(YEAR(?date2) = 1938)

  ?film2 dbo:producer ?producer .

  # Professional in the alter ego of The Shadow
  ?shadow dbr:The_Shadow ;
          dbo:alterEgo ?producer .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team ?actor WHERE {
  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:playsFor ?team .

  # Find films by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find an actor who is also a soccer player and athlete
  ?actor rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:Athlete ;
         rdf:type dbo:Actor .

  # Ensure the actor is in one of Manuel Huerga's films
  ?film dbo:starring ?actor .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo dbo:officeHolder ?office .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo WHERE {
  # Identify the TV show ""The Golden Master""
  dbr:The_Golden_Master dbo:genre ?genre .
  
  # Find characters associated with this series
  ?series dbo:starring ?character .
  
  # Check for alter ego or secret identity properties
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  OPTIONAL { ?character dbo:secretIdentity ?alterEgo . }

  FILTER (strstarts(str(?genre), ""TV series""))
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  # Spanish Socialist Workers' Party administration
  ?party dbr:Spanish_Socialist_Workers'_Party ;
         dbo:headOfGovernment ?administration .

  # Alberto Núñez Feijóo's office
  ?feijooOffice dbr:Alberto_Núñez_Feijóo ;
                dbo:headOfGovernment ?administration .

  # Tenant of Spain (current government)
  ?tenant dbr:Spain ;
          dbo:government ?administration .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfLeader ?residenceOfficeHolder
WHERE {
  # Step 1: Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberParty ?party .

  # Step 2: Identify the leader of that party
  ?party dbo:leader ?leader .
  
  # Step 3: Determine the office held by this leader in 2003 Madrid City Council election
  ?leader dbo:officeHolder ?office .
  ?office dbo:electionYear ""2003""^^xsd:gYear ;
          dbo:electionRegion dbr:Madrid_City_Council_Election_2003 .

  # Get the office of the leader and the residence office holder
  ?office dbo:officeOfLeader ?officeOfLeader .
  ?office dbo:residenceOfficeHolder ?residenceOfficeHolder .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Doctor .
  ?person dbo:field dbr:Medicine .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:HeadOfGovernment ;
          dbo:country dbr:Spain .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Find the owner of USS Arcadia (ID-1605)
  ?arcadia a dbo:Ship ;
           dbo:owner ?owner .

  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Step 2: Find the spouse of this owner who is an author
  ?owner dbo:spouse ?spouse .
  ?spouse a dbo:Writer ;
          dbo:work ?work .

  # Step 3: Determine the work authored by this person that is a book and written work
  ?work a dbo:Book, dbo:WrittenWork .

  # Step 4: Identify the politician associated with this work
  ?work dbo:author ?politician .
  ?politician a dbo:Politician ;
              dbo:officeHolder ?office .

  # Step 5: Find the war involving this politician, described as both a disease and societal event
  ?war a dbo:Disease, dbo:SocietalEvent ;
       dbo:commander ?commander ;
       dbo:participant ?politician .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Pianist ;
          foaf:name ""Ethan Iverson""@en .
  
  ?work dbo:composer ?person ;
        a dbo:Artist, dbo:MusicalArtist .

  FILTER (str(?person) = str(dbr:Ethan_Iverson))
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?reference
WHERE {
  # Eric Clapton's band memberships
  dbr:Eric_Claptom dbo:memberOf ?band .

  OPTIONAL {
    # Check for any reference or connection to The Fabulous Thunderbirds
    ?band dbo:relatedBand dbr:The_Fabulous_Thunderbirds .
    BIND(""Reference found"" AS ?reference)
  }

  FILTER NOT EXISTS { 
    ?band dbo:relatedBand dbr:The_Fabulous_Thunderbirds .
  }
  BIND(""No direct reference"" AS ?reference)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  
  ?person dbo:profession dbr:Writer ;
          dbo:musicalArtistOf dbr:The_Live_Anthology .

  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?work a dbo:Book ;
        dbo:country dbr:United_States ;
        dbo:author ?author .

  ?author a dbo:Politician, dbo:OfficeHolder ;
          dbo:officeHeld ?commanderRole ;
          dbp:writtenWork dbr:Promise_Me,_Dad .

  ?commanderRole dbo:organization dbr:North_Carolina_Air_National_Guard .
}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party WHERE {
  # Find the commander of Pickett's Charge
  ?charge dbo:commander ?commander .
  
  FILTER (str(?charge) = ""Pickett's_Charge"") .

  # Ensure the commander is a member of a ruling political party that is also an organization
  ?party dbo:type dbr:Political_party ;
         dbo:member ?commander ;
         dbo:location dbr:Westport,_Connecticut .
  
  FILTER EXISTS { ?party dbo:isOrganization true } .

  # Ensure the party is currently ruling (this might require additional context or assumptions)
  OPTIONAL {
    ?party dbp:rulingPartyOf ?country .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en') .
  ?person foaf:name ""Daniel Elahi Galán""@en .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?calder dbr:Robert_Calder .
  
  ?event dbo:agent ?calder ;
         a dbo:SocietalEvent .

  ?event dbo:force ?force .
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:nationality dbr:Poland .
  ?person a dbo:Athlete .
  ?person dbo:residence ?residence .
  
  FILTER (isBlank(?residence) || !bound(?residence)) # Handle cases where residence might not be specified
  OPTIONAL { ?residence a dbo:Country . }
  
  BIND(IF(bound(?residence), ?residence, dbr:Poland) AS ?country)
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Lesane Parish Crooks (Tupac Shakur)
  dbr:Tupac_Shakur dbo:birthName ""Lesane Parish Crooks"" .
  dbr:Tupac_Shakur dbo:musicalArtist ?artist1 .

  # Jo-Vaughn Virginie Scott (Joey Badass)
  dbr:Joey_Badass dbo:birthName ""Jo-Vaughn Virginie Scott"" .
  dbr:Joey_Badass dbo:musicalArtist ?artist2 .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Shirley Stoler's profession
  dbr:Shirley_Stoler dbo:profession ?profession .

  # Find a person with the same profession and native of New York
  ?person dbo:profession ?profession ;
          dbp:nativePlace dbr:New_York_(state) .
  
  # Ensure it's not Shirley Stoler herself
  FILTER (?person != dbr:Shirley_Stoler)

  # Assuming a child relationship is defined in DBpedia, e.g., via family relations
  ?child dbo:parent ?person .
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Antoinette of Brunswick-Wolfenbüttel""@en .
  
  ?princess dbo:child ?child .

  ?child rdf:type dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Step 2: Find the parent of this child
  ?parent dbo:child ?child .

  # Step 3: This parent must be an actor in a movie with Herschel Bernardi
  ?movie dbo:starring ?parent ;
         dbo:starring dbr:Herschel_Bernardi .
  
  # Step 4: This person should be the parent of someone who is a professional photographer
  ?photographer dbo:parent ?parent ;
                rdf:type dbo:Photographer .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?role WHERE {
  # Identify the Great Turkish War event
  dbr:The_Great_Turkish_War dbo:participatedIn ?event .
  
  # Find individuals who were commanders during this event
  ?commander dbo:positionHeld ?role ;
            dbo:participatedIn ?event .

  # Ensure the role is related to commanding
  FILTER(CONTAINS(LCASE(STR(?role)), ""commander"") || CONTAINS(LCASE(STR(?role)), ""general""))

  # Reference George Ducas
  OPTIONAL {
    dbr:George_Ducas dbo:positionHeld ?ducasRole .
    FILTER(?ducasRole = ?role)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors who played Lamont Cranston (The Shadow)
  ?shadowActor dbo:roleName ""Lamont Cranston""@en .
  ?shadowActor dbo:character dbr:Lamont_Cranston .

  # Find movies where Richard E. Grant acted that were adapted into TV shows
  ?movie dbo:starring dbr:Richard_E._Grant ;
         dbo:adaptationOf ?tvShow .

  # Check if the actor also acted in these movies
  ?shadowActor dbo:starring ?movie .
  
  BIND(?shadowActor AS ?actor)
}
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stuart Tosh""@en .
  OPTIONAL { 
    ?person dbo:associatedBand ?artist .
  }
}
```

This query does the following:
- Uses `dbo:Person` to identify entities that are people.
- Matches the name ""Stuart Tosh"" using the `foaf:name` property, assuming it's available in English (`@en`).
- Looks for an association with a band or musical artist through the `dbo:associatedBand` property.",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?countryOfWork
WHERE {
  # Find the birthplace of Winston Chang
  OPTIONAL {
    dbr:Winston_Chang dbo:birthPlace ?birthPlace .
  }

  # Find Hu Jieqing's spouse who is a writer and their country of work
  OPTIONAL {
    dbr:Hu_Jieqing dbo:spouse ?spouse .
    ?spouse rdf:type dbo:Writer .
    ?spouse dbo:countryOfWork ?countryOfWork .
  }
}
```",4,5,5,3,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?writer WHERE {
  # Find George Ducas in DBpedia
  dbr:George_Ducas dbo:works ?work .
  
  # Get the writer of each work
  ?work dbo:author ?writer .
}
```

This query uses the `dbo:works` property to find works associated with George Ducas and then uses `dbo:author` to retrieve the writers of those works.",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find an award associated with Rodney Lees
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Identify the awardee of this award
  ?award dbo:recipient ?awardee .

  # Find Arthur Stanley (politician)
  ?arthur dbr:Arthur_Stanley_(politician) a dbo:Person ;
          dbo:father ?father .

  # Ensure the father is also the parent of the awardee
  ?parent dbo:child ?awardee .
  FILTER (?father = ?parent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName (GROUP_CONCAT(?deathPlace; separator="", "") AS ?deathPlaces)
WHERE {
  # For ""The Sky Ranger"" (1928)
  {
    ?film1 a dbo:Film ;
           rdfs:label ""The Sky Ranger""@en .
    FILTER(YEAR(?film1) = 1928)

    ?film1 dbo:starring ?actor1 .

    ?actor1 foaf:name ?actorName ;
            dbo:deathPlace ?deathPlace1 .
  }

  # For ""Aladdin"" (1958)
  {
    ?film2 a dbo:Film ;
           rdfs:label ""Aladdin""@en .
    FILTER(YEAR(?film2) = 1958)

    ?film2 dbo:starring ?actor2 .

    ?actor2 foaf:name ?actorName ;
            dbo:deathPlace ?deathPlace2 .
  }

  # Combine death places for each actor
  BIND(CONCAT(STR(?deathPlace1), "" (The Sky Ranger)"", ""; "", STR(?deathPlace2), "" (Aladdin)"") AS ?deathPlaces)
}
ORDER BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person rdfs:label ""George Savage (politician)""@en .
  OPTIONAL { ?person dbo:wikiPageRedirects ?redirect . }
  ?redirect dbo:partyAffiliation ?party .

  FILTER NOT EXISTS { ?person rdfs:label ?otherLabel . FILTER (?otherLabel != ""George Savage (politician)"") }

  ?party a dbo:PoliticalParty ;
         a dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  ?eugeneCattin dbo:occupation ?profession .

  ?professional a dbo:Person ;
                dbo:occupation ?profession .
  
  FILTER(?professional != ?eugeneCattin)
}
```",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist WHERE {
  # The Fabulous Thunderbirds band members
  ?fabBand dbr:The_Fabulous_Thunderbirds ;
           dbo:member ?bandMember .

  # Band member of Eric Clapton's bands
  ?claptonBand dbr:Eric_Clapton ;
               dbo:member ?bandMember .

  # Associated musical artist of Nick Curran
  ?nickCurran dbr:Nick_Curran ;
              dbo:associatedMusicalArtist ?associatedArtist .
  
  # Ensure the associated artist is a musical artist and born as one
  ?associatedArtist a dbo:MusicalArtist ;
                   dbp:birthday ?birthday .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?partyLabel WHERE {
  # Find Bruno Retailleau
  { 
    ?person a dbo:Person ;
            foaf:surname ""Retailleau"" ;
            foaf:givenName ""Bruno Daniel Marie Paul"".
    OPTIONAL { ?person dbo:politicalAffiliation ?party. }
  } UNION
  # Find Guillaume Peltier
  {
    ?person a dbo:Person ;
            foaf:surname ""Peltier"" ;
            foaf:givenName ""Guillaume"".
    OPTIONAL { ?person dbo:politicalAffiliation ?party. }
  }

  # Filter for office holders and politicians
  FILTER EXISTS { ?person dbo:officeHolder true . } .
  FILTER EXISTS { ?person dbo:politician true . } .

  # Get the label of the party
  ?party rdfs:label ?partyLabel.
  
  # Ensure labels are in English
  FILTER (lang(?partyLabel) = ""en"")
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  # Find Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a region and an administrative region
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:AdministrativeRegion .

  # Find the governor of this place who is also a politician
  ?birthPlace dbp:governor ?governor .
  ?governor rdf:type dbo:Politician .
}
```",2,5,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child
WHERE {
  # Step 1: Find the spouse of Saw Shwe Khet
  dbr:Saw_Shwe_Khet dbo:spouse ?spouse .

  # Step 2: Find the parent of Min Hla Htut of Pyakaung
  dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?parent .

  # Step 3: Find the child of that parent
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandClaptonLabel ?bandWilsonRealName
WHERE {
  # Part 1: Band of Eric Clapton
  ?clapton dbo:bandMember ?bandClapton .
  ?bandClapton rdfs:label ?bandClaptonLabel .

  FILTER regex(?bandClaptonLabel, ""Eric Clapton"", ""i"")

  # Part 2: Real name of the band of Kim Wilson
  ?wilson dbo:bandMember ?bandWilson .
  ?bandWilson rdfs:label ?bandWilsonRealName .

  FILTER regex(?bandWilsonRealName, ""Kim Wilson"", ""i"")
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg ;
                 a dbo:Person .

  # Predecessor in royalty lineage
  ?predecessor dbo:royaltyStatus dbp:true ;
               dbo:child ?albrechtChild .

  # Spouse of Archduchess Helena and their child
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria ;
                dbo:child ?helenaChild .
  
  # Ensure the child is a royalty
  ?helenaChild dbo:royaltyStatus dbp:true .

  # Child of Archduchess Margarete Sophie
  ?margareteSophieChild dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria ;
                       a dbo:Person .

  # Conditions to match the question's requirements
  FILTER (?predecessor = ?helenaChild)
  FILTER (?albrechtChild = ?margareteSophieChild)

  # Return the child that matches all conditions
  BIND(?albrechtChild AS ?child)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan, known for ""Breaking Bad""
  { 
    dbr:Vince_Gilligan dbo:creatorOf dbr:Breaking_Bad .
    dbr:Vince_Gilligan dbo:birthPlace ?birthPlace1 .
    BIND(dbr:Vince_Gilligan AS ?person)
  }
  
  UNION
  
  # Cece Bell
  { 
    dbr:Cecily_Carrie_Bell dbo:birthPlace ?birthPlace2 .
    BIND(dbr:Cecily_Carrie_Bell AS ?person)
  }
  
  UNION
  
  # Glenn Youngkin
  { 
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace3 .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }

  # Bind the birth place to a common variable for output
  {
    VALUES (?birthPlace) { ?birthPlace1 ?birthPlace2 ?birthPlace3 }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the 2nd Dragoon Regiment (France)
  ?regiment dbo:commander ?commander .
  FILTER(STRSTARTS(LCASE(?regiment), ""dragoon regiment 2nd (france)""))

  # The war must be an event, societal event, and television show
  ?war dbo:participatedIn ?commander ;
       a dbo:Event ;
       dbo:socialEvent true ;
       dbo:televisionShow dbr:Television_Show .

  # The commander is the father of Eleonore of Austria, Queen of Poland
  ?eleonore dbo:father ?commander .
  FILTER(STRSTARTS(LCASE(?eleonore), ""eleonore of austria, queen of poland""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Carolyn Jones""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Ferdinand III and his child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  
  # The father of the child
  ?child dbo:father ?father .

  # Commander in the war related to 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?commander dbo:memberOf dbr:2nd_Dragoon_Regiment_(France) .
    ?commander dbo:occupation dbr:Military_commander .
    
    # Societal event, event, and television show
    ?event a dbo:SocietalEvent ;
           dbo:relatedWork ?televisionShow .
    ?televisionShow a dbo:TelevisionShow .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionParent ?childParent
WHERE {
  # Step 1: Find Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:occupation ?eugeneProfession .
  
  # Step 2: Find the parent of this profession
  ?eugeneProfession dbo:parentCategory ?professionParent .

  # Step 3: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?mariclareSpouse .
  
  # Step 4: Find the child of this spouse
  ?mariclareSpouse dbo:child ?childOfSpouse .

  # Step 5: Determine the parent of this child
  ?childOfSpouse dbo:parentCategory ?childParent .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  OPTIONAL { ?person foaf:name ?name . }
}
```

This query does the following:
- Uses `dbo:deathPlace` to find individuals who died in Taipei.
- Optionally retrieves their names using `foaf:name`, which is a common property for storing names.",1,1,2,1,1,3,2,20,0,0,220,0,0.0,0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Step 2: Identify the professional role of The Shadow
  ?shadow dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .

  # Step 3: Find the actor of ""ATL""
  ?atlFilm dbr:ATL (dbo:starring|dbo:actor) ?atlActor .

  # Step 4: Find a movie involving both the author and the ATL actor
  ?movie (dbo:author|dbo:starring) ?author ;
         (dbo:author|dbo:starring) ?atlActor .

  # Step 5: Retrieve an actor from that movie
  ?movie dbo:actor ?actor .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Find the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Find Harriette Arlene Lake and her party membership
  ?person dbp:birthName ""Harriette Arlene Lake"" ;
          dbo:partyAffiliation dbr:Republican_Party_(United_States) .

  # Check if they share a spouse
  ?actor dbo:spouse ?spouse .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?medal a dbo:Award ;
         rdfs:label ""Gillmore Medal""@en .
  ?medal dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?actor WHERE {
  ?professional dbo:alterEgo dbr:The_Shadow .
  
  ?film a dbo:Film ;
        rdfs:label ""Lasso the Moon""@en .
  
  ?actor dbo:actedIn ?film .
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent
WHERE {
  # Charles II of Naples' spouse
  ?spouseCharles2 dbp:spouse dbr:Charles_II_of_Naples .
  
  # Parent of the father (grandparent) of Charles II's spouse
  ?fatherOfSpouse dbo:child ?spouseCharles2 .
  ?grandparentCharles2 dbo:child ?fatherOfSpouse .
  FILTER EXISTS { ?grandparentCharles2 a dbo:Monarch } # Ensure royalty

  # Maria of Bytom's spouse
  ?spouseMaria dbp:spouse dbr:Maria_of_Bytom .

  # Parent of the father (grandparent) of Maria's spouse
  ?fatherOfSpouseMaria dbo:child ?spouseMaria .
  ?grandparentMaria dbo:child ?fatherOfSpouseMaria .

  # Match the two sets of grandparents
  FILTER (?grandparentCharles2 = ?grandparentMaria)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:United_States ;
         dbo:location dbr:Westport,_Connecticut ;
         a dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?realNameKimWilson ?associatedArtistNickCurran WHERE {
  # Find the band associated with Kim Wilson
  ?person a dbo:Musician ;
          foaf:name ""Kim Wilson"" ;
          dbo:memberOfBand ?band .
  
  # Get the real name of Kim Wilson
  ?person dbo:birthName ?realNameKimWilson .

  # Get the band's name
  ?band rdfs:label ?bandName .

  # Find Nick Curran as an associated artist with Kim Wilson
  ?associatedArtist a dbo:Musician ;
                    foaf:name ""Nick Curran"" .
  
  # Assuming there is some association property (e.g., dbo:collaboratedWith)
  ?person dbo:collaboratedWith ?associatedArtist .

  FILTER(LANG(?bandName) = 'en')
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Juan Carlos Molina's clubs
  VALUES (?molinaClub) { 
    dbr:Independiente_(Argentina)
    dbr:Racing_Club_de_Avellaneda
    dbr:Deportivo_Cuenca
    dbr:CD_Ulisses
    dbr:CA_Belgrano
    # Add more clubs if necessary
  }
  
  # Sergio Agüero's clubs
  VALUES (?agueroClub) { 
    dbr:Athletic_Club_(Argentina)
    dbr:Atlético_Madrid
    dbr:Manchester_City_F.C.
    # Add more clubs if necessary
  }

  # Players who played with Juan Carlos Molina
  ?molinaPlayer dbo:playsFor ?molinaClub ;
               a dbo:Footballer .

  # Players who played with Sergio Agüero
  ?agueroPlayer dbo:playsFor ?agueroClub ;
                a dbo:Footballer .

  # Find common players
  FILTER (?player = ?molinaPlayer && ?player = ?agueroPlayer)

  BIND(?molinaPlayer AS ?player)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find the person born as Darryl Paa Kwesi Bannerman-Martin
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Ensure this person is a musician (professional connection with Rod Argent)
  ?person dbo:profession dbr/Musician .

  # Find association with Paul McCartney
  ?association dbo:associatedMusicalArtist dbr/Paul_McCartney ;
               dbo:subject ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?party WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Roy Leonardo Barreras Montealegre"" .
  ?person dbo:birthPlace dbr:Colombia .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find the child of Archduke Charles Louis of Austria
  ?child dbo:parent dbr:Archduke_Charles_Louis_of_Austria .

  # Step 2: From that child, find their children (grandchildren)
  ?grandchild dbo:parent ?child .

  # Step 3: Filter grandchildren who are royalty
  ?grandchild a dbo:Monarch .

  # Step 4: Find the grandchild who is a predecessor of Carl, Duke of Württemberg
  ?predecessorRelation dbo:successor dbr:C._Duke_of_W%C3%BCrttemberg ;
                       dbo:predecessor ?grandchild .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInCharleston ?warOfAmasaTracy ?forceOfQuincyAdamsGillmore ?awardee
WHERE {
  # Entity in Charleston, South Carolina
  ?charleston dbo:location dbr:Charleston,_South_Carolina .
  ?entityInCharleston dbo:locatedIn ?charleston .

  # War involving Amasa Tracy
  ?amasaTracy a dbo:MilitaryPerson ;
              dbo:servedInMilitaryOrganization ?militaryOrganization .
  ?warOfAmasaTracy dbo:militaryConflict ?militaryOrganization .

  # Force led by Quincy Adams Gillmore
  ?quincyAdamsGillmore a dbo:MilitaryPerson ;
                       dbo:commanded ?force .
  ?forceOfQuincyAdamsGillmore rdfs:label ?forceLabel FILTER (CONTAINS(LCASE(?forceLabel), ""gillmore"")) .

  # Awardee of an award related to Quincy Adams Gillmore
  OPTIONAL {
    ?award dbo:recipient ?quincyAdamsGillmore .
    ?awardee dbo:recipient ?award .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Identify Allan Arbus
  dbr:Allan_Arbus a dbo:Person ;
                  dbo:child ?child .

  # Step 2: Find Parent of Allan Arbus's Child
  ?parent dbo:child ?child .
  
  # Step 3: Identify Person Decedent at Los Angeles
  ?decedent a dbo:Person ;
            dbp:deathPlace dbr:Los_Angeles, California ;
            dbo:spouseOrPartner ?parent .

  # Step 4: Find Work (Movie) Associated with Both
  ?work dbo:starring ?actor ;
        dbo:starring ?decedent ;
        a dbo:Film .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Always (1989 film)""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?show ?theme
WHERE {
  ?person1 foaf:name ""Anumta Qureshi""@en.
  ?person2 dbo:birthPlace dbr:Lahore.
  
  ?show dbo:castMember ?person1 .
  ?show dbo:castMember ?person2 .

  OPTIONAL { ?show dbo:theme ?theme }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?label WHERE {
  ?event a dbo:Event .
  OPTIONAL { ?event rdfs:label ?label . FILTER (lang(?label) = 'en') }
  ?event dbp:establishedYear ?year .
  ?event dbp:establishedMonth ?month .
  ?event dbp:establishedDay ?day .
  FILTER (?year = ""1955"" && ?month = ""12"" && ?day = ""02"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?warLabel WHERE {
  VALUES ?person { 
    dbr:Karl_Gustav_von_Baggovut 
    dbr:Aleksandr_Lvovich_Davydov
  }
  
  ?person dbo:commander ?war .
  UNION
  ?person dbo:participatedIn ?war .

  SERVICE <http://dbpedia.org/sparql> {
    ?war rdfs:label ?warLabel .
    FILTER (lang(?warLabel) = 'en')
  }
}
ORDER BY ?warLabel
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find The Shadow and its alter ego
  ?shadow a dbo:FictionalCharacter ;
          rdfs:label ""The Shadow""@en .
  
  # Step 2: Identify the producer associated with The Shadow's alter ego
  ?alterEgo dbo:profession ?professional ;
            dbo:characterName ?shadow .

  # Step 3: Find the actor of ""High Society Blues""
  ?movie dbo:title ""High Society Blues"" ;
         dbo:actor ?actor .
  
  # Step 4: Determine a notable work by this actor
  ?work dbo:actor ?actor ;
        (dbo:title|dbo:name) ?fame .

  FILTER(?fame != ""High Society Blues"")
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?memberName WHERE {
  # Identify Mark Eitzel in DBpedia
  dbr:Mark_Eitzel dbo:member ?band .
  
  # Find other members of the same band(s)
  ?band dbo:bandMember ?member .
  
  # Filter out Mark Eitzel himself from the results
  FILTER(?member != dbr:Mark_Eitzel) .

  # Get human-readable names for the members
  ?member rdfs:label ?memberName .
  FILTER(LANG(?memberName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find children of Roger II who are royalty
  ?child dbo:childOf dbp:Roger_II_of_Sicily ;
         a dbo:Royalty .

  # Ensure the child is also an office holder and related to William I
  ?reference dbo:officeHolder ?office ;
             dbo:royalty ?royalty ;
             dbo:childOf dbp:William_I_of_Sicily .
  
  # Link the reference to the child found earlier
  FILTER (?child = ?reference)

  # Find the father of this child
  ?father dbo:fatherOf ?child .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?album a dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  ?film a dbo:Film ;
        dbo:work ?album .

  ?film dbo:starring ?actor .
  
  FILTER (LANG(?album) = 'en')
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?name WHERE {
  ?artist a dbo:Artist ;
          a dbo:MusicalArtist .
  ?artist foaf:name ?name .
  ?artist dbo:birthPlace ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:England .
}
ORDER BY ?name
```",2,6,3,2,1,3,2,20,28,533,631,0.049910873440285206,0.042488619119878605,0.0459016393442623
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton as an author and office holder
  dbr:Hillary_Clinton a dbo:Politician ;
                      dbo:officeHolderOf some dbo:Office ;
                      dbo:author dbr:Back_to_Work_(book) .

  # Find the spouse of Hillary Clinton
  ?spouse dbo:spouse dbr:Hillary_Clinton .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?profession
WHERE {
  # Find characters in ""The Golden Master"" series
  ?series dbo:title ""The Golden Master""@en .
  
  # Characters associated with the series
  ?character dbo:partOfSeries ?series .

  # Alter egos of these characters
  ?character dbo:alterEgo ?alterEgo .

  # Professional roles of these characters
  ?character dbo:profession ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  ?child a dbo:Politician .

  ?child dbo:parent dbr:Victor_Stanley_(Royal_Navy_officer) .

  ?father dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer WHERE {
  # Find the successor of Yurii Khmelnytsky
  ?yuriikhmelnytsky dbo:succeededBy ?successor .
  FILTER (str(?yuriikhmelnytsky) = ""Yurii_Khmelnytsky"")

  # Ensure the successor is also a commander in the Great Turkish War
  ?successor dbo:commanderInWar dbr:Great_Turkish_War .

  # Find George Ducas and his associated writer
  dbr:George_Ducas dbo:writer ?writer .
  
  # Link the successor to George Ducas through their roles or titles
  ?successor rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""george duca"") || CONTAINS(LCASE(?label), ""ducas""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childMargareteSophie
WHERE {
  # Find a child of Archduchess Margarete Sophie of Austria
  ?childMargareteSophie dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find children of Philipp Albrecht, Duke of Württemberg
  ?childPhilippAlbrecht dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Check if the child of Margarete Sophie is a predecessor to any child of Philipp Albrecht
  FILTER EXISTS {
    ?predecessorRelation dbo:successor ?childPhilippAlbrecht .
    ?predecessorRelation dbo:predecessor ?childMargareteSophie .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?leader dbo:election dbr:Madrid_City_Council_election,_2003 .
  
  # Ensure this person is an office holder
  ?leader a dbo:OfficeHolder .

  # Get the residence (tenant) of this leader
  ?leader dbo:residence ?residence .
  ?residence dbo:tenant ?tenant .

  # Find the force related to Manuel Pinto da Costa
  ?force dbo:commander ?leader ;
         dbo:relatedTo dbr:Manuel_Pinto_da_Costa ;
         a (dbo:MilitaryConflict|dbo:SocietalEvent) .

  # Ensure this person is also an office holder and politician
  ?leader a dbo:Politician .
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?office WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:partyAffiliation ?party .
  
  # Ensure the entity is a political party
  ?party rdf:type dbo:PoliticalParty .

  # Find the leader of this political party who is also a politician
  ?party dbo:leader ?leader .
  ?leader rdf:type dbo:Politician .

  # Get the office held by this leader
  ?leader dbp:office ?office .

  # Find the tenant in Madrid related to this context
  ?tenant dbo:location dbr:Madrid .
  
  # Assuming the tenant is related to the political party or its activities
  ?party dbo:hasMember ?member .
  ?member dbo:residence ?tenant .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Identify the spouse of Philip's father
  ?spouse dbo:spouse ?father ;
          a dbo:Person .

  # Step 4: Check if this spouse is royalty and parent of Charles I of Hungary's father
  ?charlesFather dbo:child dbr:Charles_I_of_Hungary .
  ?spouse dbo:child ?charlesFather .
  
  FILTER EXISTS { ?spouse dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby
  ?edward dbo:child ?parent .
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .

  # Arthur Stanley (politician)
  ?arthur dbo:father ?parent .
  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .

  OPTIONAL {
    # Awardee of Rodney Lees' award
    ?awardee dbp:awardRecipientOf <http://dbpedia.org/resource/Rodney_Lees> .
    ?awardee dbo:parent ?parent .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person rdfs:label ""Min Hla Htut""@en .
  FILTER(CONTAINS(LCASE(str(?person)), ""pyakaung"")) .
  
  OPTIONAL { ?person dbo:parent ?parent . }
}
```

### Explanation:

- **PREFIX**: Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT**: Choose the variable `?parent` to retrieve.
- **FILTER**: Ensure that the person is associated with ""Pyakaung"" by checking if the label contains this term (case-insensitive).
- **OPTIONAL**: Use an optional pattern to find the parent, as not all entities may have this information.

This query assumes that DBpedia has a resource for ""Min Hla Htut of Pyakaung"" and uses labels and properties to identify familial relationships. Adjustments might be necessary based on actual data availability in DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Step 1: Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?parent .
  
  # Step 2: Children of Béla IV who are royalty
  ?child dbo:spouse|dbo:childOf ?parent ;
         a dbo:Monarch .

  # Step 3: Child of the child (grandchild) who is royalty
  ?grandchild dbo:spouse|dbo:childOf ?child ;
              a dbo:Monarch .

  # Step 4: Parent of the father of Charles I of Hungary
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
  ?charlesGrandparent dbo:spouse|dbo:childOf ?charlesFather .
  
  # Ensure the grandchild from step 3 is the same as the grandparent from step 4
  FILTER (?grandchild = ?charlesGrandparent)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?spouse WHERE {
  ?partyMember dbo:memberOf dbr:Democratic_Party_of_Louisiana .
  
  ?actor dbo:title dbr:_1000_Dollars_a_Minute ;
         dbo:spouse ?spouse .

  FILTER(?partyMember = ?spouse)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfEricClapton ?associatedArtistWithNicholasCurran
WHERE {
  # Find bands Eric Clapton has been a member of
  dbr:Eric_Claptom dbo:member ?bandOfEricClapton .
  
  # Find associated musical artists with Nicholas Michael Curran
  dbr:Nicholas_Michael_Curran dbo:associatedMusicalArtist ?artist .
  
  # Ensure the artist is a musical artist
  ?artist rdf:type dbo:MusicalArtist .
  
  # Bind results to variables
  BIND(?artist AS ?associatedArtistWithNicholasCurran)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?writer
WHERE {
  # Find the commander who is a politician and office holder in the Russo-Polish War
  ?commander dbo:occupation dbr:Politician ;
             dbo:officeHolder true ;
             dbo:participatedInBattle dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander .

  # Reference to George Ducas and find the writer of his work
  ?work dbo:author dbr:George_Ducas ;
        dbo:writtenBy ?writer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?album ?profession ?artist ?movie
WHERE {
  # Find the album for ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .

  # Get T.I.'s profession
  dbr:T.I. dbo:occupation ?profession .

  # Find other artists involved in the album
  ?album dbo:artist ?artist .
  
  FILTER(?artist != dbr:T.I.)

  OPTIONAL {
    # Attempt to find movies related to these artists or the album
    ?artist dbo:filmography ?movie .
  }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?hu a dbo:Person ;
      foaf:name ""Hu Jieqing""@en .
  
  ?hu dbo:spouse ?spouse .

  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?actor WHERE {
  # Find the movie ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  
  # Check if the actor is also a politician
  ?actor dbo:occupation dbr:Politician .
}
```

This query does the following:
- Uses `dbo:starring` to find actors in the movie ""Ab Kya Hoga.""
- Checks if any of these actors have an occupation that includes being a politician.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # For Pacely (The Pacelys)
  { 
    ?pacely dbo:musicalArtist ?artist .
    VALUES ?pacely { <http://dbpedia.org/resource/The_Pacelys> }
  } UNION
  # For Sarkodie
  { 
    ?sarkodie dbo:musicalArtist ?artist .
    VALUES ?sarkodie { <http://dbpedia.org/resource/Sarkodie> }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  # Duke Philipp of Württemberg's child (Philipp's child)
  ?philipChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Grandchild of Duke Philipp (child of his child)
  ?grandchild dbo:parent ?philipChild .

  # Predecessor of Carl, Duke of Württemberg
  ?grandchild dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .

  # Child of Archduchess Margarete Sophie of Austria
  ?grandchild dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?manager WHERE {
  # Find Thomas Letsch and his role as a manager
  ?letsch dbr:Thomas_Letsch .
  
  # Link to the team he managed
  ?letsch dbo:managerOf ?team .

  # Ensure the team is a soccer club, sports season, and sports team season
  ?team rdf:type dbo:SoccerClub ;
        rdf:type dbo:SportsSeason ;
        rdf:type dbo:SportsTeamSeason .
  
  # Retrieve the manager of the team (which should be Thomas Letsch)
  ?team dbo:manager ?manager .

  FILTER(?manager = ?letsch) # Ensure the manager is indeed Thomas Letsch
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?nativeArtist
WHERE {
  # Find the artist associated with Pacely
  ?pacely dbo:associatedMusicalArtist ?associatedArtist .
  
  # Find a person from Central Region, Ghana who is an artist and musician
  ?person dbp:nationality dbr:Ghana ;
          dbp:birthPlace dbr:Central_Region,_Ghana ;
          dbo:profession dbr:Musician ;
          dbo:occupation dbr:Artist .
  
  # Bind the person to nativeArtist variable
  BIND(?person AS ?nativeArtist)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?s dbp:father dbr:Toyotomi_Hideyoshi .
  ?s dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,1,3,0.0,0.0,0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbo:birthName ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?person dbp:stageName ?artist . }
  FILTER(?artist != """")
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Archduke Charles Louis of Austria's child
  ?child1 dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
  
  # Grandchild (child of the child) who is a royalty
  ?grandchild dbo:parent ?child1 .
  ?grandchild rdfs:subClassOf* dbo:Royalty .

  # Philipp Albrecht, Duke of Württemberg's child
  ?child2 dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure this child is also a child of Albrecht, Duke of Württemberg
  ?child2 dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # The grandchild must be a predecessor to the child of Philipp Albrecht
  FILTER (?grandchild < ?child2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Identify Robert Lamar Thompson (Lil Wayne) as a musical artist
  dbr:Lil_Wayne dbo:birthName ""Robert Lamar Thompson""@en .
  
  # Identify Walter B. Gibson's creation, The Shadow
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson ;
                 rdf:type dbo:FictionalCharacter ;
                 rdf:type dbo:ComicsCharacter .

  # Find the band associated with Lil Wayne
  ?band dbo:member dbr:Lil_Wayne .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Find children of Roger II of Sicily who are royalties
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  ?child1 a dbo:Royalty .

  # Find the parent of that child (which is Roger II's spouse)
  ?spouse1 dbo:child ?child1 .

  # Find the child of that spouse
  ?grandchild1 dbo:parent ?spouse1 .

  # Now, find children of Constance of Burgundy who are royalties
  ?child2 dbo:spouse dbr:Constance_of_Burgundy .
  ?child2 a dbo:Royalty .

  # Find the child of that spouse (which is Constance's child)
  ?grandchild2 dbo:parent ?child2 .

  # Find the child of that grandchild
  ?result dbo:parent ?grandchild2 .

  FILTER (?result != dbr:Roger_II_of_Sicily && ?result != dbr:Constance_of_Burgundy)
}
```",6,8,7,3,2,3,3,71,2,2,2,0.5,0.5,0.5
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?author ?spouse WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  ?event dbo:wikiPageRedirects dbr:Third_Taiwan_Strait_Crisis .
  ?event dbo:commander ?commander .

  # Find works authored by Bill Clinton that are books
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .

  # Find the author of ""An Invitation to the White House""
  ?invitation dbo:title ""An Invitation to the White House""@en ;
              dbo:author ?author .

  # Check if the spouse is a politician or office holder
  ?author dbp:spouse ?spouse .
  OPTIONAL { ?spouse dbo:occupation dbr:Politician . }
  OPTIONAL { ?spouse dbo:officeHolder true . }

  FILTER(?invitation = ?work) # Ensure the book matches
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfWilliamII ?childOfParentOfChildOfRogerII ?childOfChildOfAlfonsoVI
WHERE {
  # Father of William II of Sicily
  ?williamII dbo:parent ?fatherOfWilliamII .
  FILTER (str(?williamII) = ""William_II_of_Sicily"")

  # Child of the parent of the child (royalty) of Roger II of Sicily
  ?rogerII dbo:child ?childOfRogerII .
  FILTER (str(?rogerII) = ""Roger_II_of_Sicily"")
  
  ?childOfRogerII dbo:parent ?parentOfChildOfRogerII .
  ?parentOfChildOfRogerII dbo:child ?childOfParentOfChildOfRogerII .
  FILTER EXISTS { ?childOfParentOfChildOfRogerII a dbo:Monarch }

  # Child of the child of Alfonso VI of León and Castile
  ?alfonsoVI dbo:child ?childOfAlfonsoVI .
  FILTER (str(?alfonsoVI) = ""Alfonso_VI_of_León_and_Castile"")
  
  ?childOfAlfonsoVI dbo:child ?childOfChildOfAlfonsoVI .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
    # Step 1: Find the actor in ""High Society Blues""
    ?movie dbo:starring ?actor .
    FILTER(STRSTARTS(LCASE(?movie), LCASE(""high society blues"")))

    # Step 2: Find works associated with this actor
    ?work dbo:starring ?actor .

    # Step 3: Determine the claim to fame (assuming it's a well-known work)
    OPTIONAL {
        ?claimToFame dbo:starring ?actor .
        FILTER(STRSTARTS(LCASE(?claimToFame), LCASE(""high society blues"")) || 
               EXISTS { ?claimToFame dbo:wikiPageRedirects ?redirect . ?redirect rdfs:label ""Claim to Fame""@en })
    }

    # Ensure the claim to fame is a movie
    FILTER(STRSTARTS(LCASE(?claimToFame), LCASE(""movie"")))
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War .
  
  # Check if the war is linked to a disease
  ?war dbo:relatedTo dbr:Disease .

  # Check if the war is a societal event
  ?war dbo:socialEvent dbr:SocietalEvent .

  # Ensure involvement of the United States Navy
  ?war dbo:participatingOrganisation dbr:United_States_Navy .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfFather WHERE {
  # Child of Saw Shwe Khet that is a royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child rdf:type dbo:Monarch .

  # Spouse of this child
  ?spouse dbo:spouse ?child .

  # Father of this spouse (that is a royalty)
  ?father dbo:spouse ?spouse .
  ?father rdf:type dbo:Monarch .

  # Predecessor of the child of this spouse (that is a royalty)
  ?predecessorChild dbo:parent ?spouse .
  ?predecessorChild rdf:type dbo:Monarch .
  
  ?child2 dbo:parent ?spouse .
  ?child2 rdf:type dbo:Monarch .

  # Ensure predecessor relationship
  ?predecessorChild dbo:predecessor ?child2 .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  # Find the book ""Back to Work""
  dbr:Back_to_Work (dbo:author) ?author .

  # Ensure the author is a politician and an office holder
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find Hillary Clinton's spouse who matches the above criteria
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  FILTER (?author = ?spouse)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerName ?teamName ?playerName ?leagueSeason
WHERE {
  # Thomas Letsch as a manager
  dbr:Thomas_Letsch dbo:position ""Manager""@en .
  
  # Teams managed by Thomas Letsch
  ?team dbo:manager dbr:Thomas_Letsch ;
        a dbo:SoccerClub ;
        dbo:sportsTeamSeason ?teamSeason .

  # Team season characteristics
  ?teamSeason a dbo:SoccerLeagueSeason ;
              a dbo:SportsSeason ;
              a dbo:SportsTeamSeason .

  # Players in the team
  ?player dbo:playsFor ?team ;
          a dbo:FootballPlayer .
  
  # Player's team characteristics
  ?team a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:SoccerClub .

  # Successor of 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succesor ?successorSeason .
  
  ?successorSeason a dbo:FootballLeagueSeason ;
                   a dbo:SportsTeamSeason ;
                   a dbo:SportsSeason .

  # Linking player's team to the successor season
  ?team dbo:participatesIn ?successorSeason .

  # Extract names
  ?managerName rdfs:label ?managerLabel .
  FILTER (LANG(?managerLabel) = ""en"")
  
  ?teamName rdfs:label ?teamLabel .
  FILTER (LANG(?teamLabel) = ""en"")

  ?playerName rdfs:label ?playerLabel .
  FILTER (LANG(?playerLabel) = ""en"")

  ?leagueSeason rdfs:label ?seasonLabel .
  FILTER (LANG(?seasonLabel) = ""en"")
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label ?description WHERE {
  VALUES ?label { ""Наши парни"" ""Nashi parni"" }
  
  # Find the entity with the given label
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'ru' || lang(?label) = 'en')
  
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  OPTIONAL { ?entity rdfs:comment ?description . FILTER(lang(?description) = 'en') }

  # Ensure we get the most relevant entity
  MINUS { ?otherEntity rdfs:label ?label . FILTER(?entity != ?otherEntity) }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthPlace
WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Identify Nick Curran
  dbr:Nick_Curran a dbo:MusicArtist .

  # Find associated artists
  ?associatedArtist dbo:associatedWith dbr:Nick_Curran .
  
  # Ensure the associated artist is also a musical artist and was born as one
  ?associatedArtist a dbo:MusicalArtist ;
                   dbp:birthPlace ?birthPlace ;
                   dbp:occupation ""musician""@en .

  # Filter to ensure they were recognized as musicians at birth (if such data exists)
  OPTIONAL { ?associatedArtist dbo:genre ?genre . FILTER(?genre != """") }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Béla IV of Hungary's children
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Step 2: Child of one of these children who is royalty
  ?royalChild dbo:parent ?belavChild .
  ?royalChild a dbo:Monarch .

  # Step 3: Maria of Bytom's spouse
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .

  # Step 4: Father of this spouse who is royalty
  ?fatherOfSpouse dbo:child ?mariaSpouse .
  ?fatherOfSpouse a dbo:Monarch .

  # Step 5: Link back to the child of Béla IV's child
  ?belavChild2 dbo:parent ?royalChild .
  
  FILTER (?belavChild != ?belavChild2) # Ensure different generations

  BIND(?royalChild AS ?childOfChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?decedent dbo:deathPlace dbr:Taipei .
  ?decedent dbo:child ?child .
  ?child a dbo:Politician .
}
```",2,3,3,2,1,3,2,20,2,6,0,0.25,1.0,0.4
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ceceBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Cece Bell's birthplace
  dbr:Cecil_Alice_Bell dbo:birthPlace ?ceceBirthPlace .

  # Paulus Powell's birth region and its governor
  dbr:Paulus_Powell dbo:birthPlace ?powellBirthPlace .
  ?powellBirthPlace a dbo:AdministrativeRegion ;
                   dbo:governor ?governor .
  ?governor dbp:birthPlace ?governorBirthPlace .

  # Vince Gilligan's awardee birthplace
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:starring dbr:Vera_Lynn .
  ?work a ?type1 .
  ?work a ?type2 .
  
  FILTER (?type1 = dbo:Film || ?type1 = dbo:TelevisionShow)
  FILTER (?type2 = dbo:Film || ?type2 = dbo:TelevisionShow)
  FILTER(?type1 != ?type2)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .
  
  ?bayne dbo:participatedIn ?event .
  
  ?event a dbo:MilitaryConflict, dbo:Event ;
         rdfs:label ?warLabel .

  FILTER(LANG(?warLabel) = 'en')
}
```

This query does the following:
- Identifies William Bayne as a person.
- Finds events he participated in.
- Filters these events to those that are both military conflicts and general events.
- Returns the label of such wars.",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Identify Edward Stanley, 17th Earl of Derby
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child dbr:Arthur_Stanley_(politician) .
    
    # Find the parent of Edward Stanley, 17th Earl of Derby
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

    OPTIONAL {
        # Check for descendants who received the Commander of the Royal Victorian Order
        ?descendant dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
        ?parent dbo:child ?descendant .
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?authorName ?bookTitle
WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:occupation ?office .
  
  FILTER EXISTS { ?office rdf:type dbo:OfficeHolder }
  
  ?work a dbo:Book ;
        dbo:author ?person ;
        rdfs:label ?bookTitle .

  ?person foaf:name ?authorName .
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Charles Parsons (British Army officer)""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,4,5,0.0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find children of Ferdinand Albert II
  ?child dbo:father dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # For each child, find their parents
  ?child dbo:mother|dbo:father ?parent .

  # Filter to include only royalty
  ?parent a dbo:Monarch ;
          dbo:country dbr:Germany .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Bobby Shmurda as the associated musical artist
  dbr:Bobby_Shmurda a dbo:MusicalArtist .

  # Find band members of Bobby Shmurda who are also musical artists
  ?person dbo:memberOfBand dbr:Bobby_Shmurda ;
          a dbo:MusicalArtist .

  # Ensure these individuals are part of GS9
  ?person dbo:memberOfGroup dbr:GS9 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?leader dbo:country dbr:West_Germany .
  ?leader dbo:leader dbr:Chancellor_of_West_Germany .
  ?leader dbp:birthPlace ?native .
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Actor of High Society Blues
  ?actor dbo:starringIn dbr:High_Society_Blues .
  
  # Step 2: Professional Alter Ego of The Shadow
  ?alterEgo dbo:profession dbr:The_Shadow .
  ?actor dbo:alias ?alterEgo .

  # Step 3: Producer of The Adventures of Tom Sawyer (1938 film)
  ?producer dbo:produced dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .

  # Step 4: Claim to Fame
  ?movie dbo:starringIn ?actor .
  ?movie rdf:type dbo:Film .
  
  FILTER EXISTS { ?actor dbo:claimToFame ?movie }
  
  # Find the producer of this claim to fame movie
  ?producer dbo:produced ?movie .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?doonParent ?amyParent WHERE {
  # Find Doon Arbus entity
  ?doonArbus a dbo:Person ;
             rdfs:label ""Doon Arbus""@en .
  
  # Find Amy Arbus entity
  ?amyArbus a dbo:Person ;
            rdfs:label ""Amy Arbus""@en .

  # Get the parent of Doon Arbus
  ?doonArbus dbo:parent ?doonParent .

  # Get the parent of Amy Arbus
  ?amyArbus dbo:parent ?amyParent .
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?descendant WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alex dbo:child ?child1 .
  ?child1 dbo:child ?grandchild1 .
  ?grandchild1 dbo:child ?greatGrandchild .

  # Archduke Charles Louis of Austria
  ?charles dbo:child ?child2 .
  ?child2 dbo:child ?grandchild2 .

  # Ensure the descendant is a royalty
  ?descendant dbp:royalHouse ?royalHouse .
  
  # Match the great-grandchildren from both lines
  FILTER (?greatGrandchild = ?descendant || ?grandchild2 = ?descendant)
}
```",5,6,6,3,2,3,3,71,0,393,2,0.0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify Alexander Lvovich Davydov
  dbr:Aleksandr_Lvovich_Davydov 
    dbo:participatedInMilitaryConflict ?conflict .
  
  # Filter for wars (military conflicts)
  ?conflict a dbo:MilitaryConflict ;
           rdfs:label ?warLabel .

  FILTER(LANG(?warLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerOfVfLBochum ?sportsManager ?teamManagedBySportsManager
WHERE {
  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?managerOfVfLBochum .

  # Find a sports manager born on 1968-08-26
  ?sportsManager a dbo:SportsManager ;
                dbp:birthday ""1968-08-26""^^xsd:date .

  # Find the team managed by this sports manager
  ?sportsManager dbo:manager ?teamManagedBySportsManager .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:United_States .

  # Quincy Adams Gillmore's award
  dbr:Quincy_Adams_Gillmore dbo:award ?award .

  # Amasa Tracy's war
  dbr:Amasa_Tracy dbo:servedIn ?war .

  # Find a common entity related to the award and the war
  ?entity dbp:location ?birthPlace ;
          dbo:awardee ?awardRecipient .
  
  FILTER (?awardRecipient = dbr:Quincy_Adams_Gillmore)
  OPTIONAL { ?entity dbo:relatedWar ?war . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?pacely { dbr:Pacely }
  
  # Check for direct collaborations
  OPTIONAL {
    ?pacely dbo:collaboratedWith ?associatedArtist .
  }

  # Check for similar artists
  OPTIONAL {
    ?pacely dbo:similarArtists ?similarArtist .
    ?similarArtist rdfs:label ?associatedArtistLabel .
    FILTER (lang(?associatedArtistLabel) = ""en"")
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(REPLACE(STR(?similarArtist), "" "", ""_"")), ""[^a-z0-9_]"", """")))) AS ?associatedArtist
  }

  # Ensure at least one association is found
  FILTER (?associatedArtist != ?pacely)
}
ORDER BY ?associatedArtist",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?result WHERE {
  # Step 1: Find Min Hla Htut of Pyakaung's parent
  ?minHlaHtut dbo:parent ?parent .
  FILTER(STRSTARTS(LCASE(?minHlaHtut), ""min_hla_htut_of_pyakaung""))

  # Step 2: Find the spouse of Min Hla Htut's parent
  ?parent dbo:spouse ?spouse .

  # Step 3: Find Saw Shwe Khet and his royal child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch ; # Assuming royalty is represented by Monarch class

  # Step 4: Find the spouse of Saw Shwe Khet's royal child
  ?child dbo:spouse ?result .

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?writer .

  # Find a person who was a politician and office holder in the Russo-Polish War
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:Russo-Polish_War_(1654–1667) .

  # Find a commander in the Great Turkish War
  ?person dbo:commanderIn dbr:Great_Turkish_War .

  # Check if this person succeeded another commander
  OPTIONAL {
    ?succession dbp:succeededBy ?person .
    ?succession dbp:predecessor ?previousCommander .
  }

  # Ensure the writer and successor are the same person
  FILTER (?writer = ?person)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES (?francis) { dbr:François_Ier,_Duke_of_Lorraine }

  ?francis dbo:parent ?parent .
  
  ?parent dbo:royalty true .

  ?parent dbo:noble true .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:memberOfBand ?band .
}
```

This query does the following:
- Uses `rdfs:label` to find resources labeled as ""Kim Wilson"" in English.
- Assumes a property like `dbo:memberOfBand` (or similar) links Kim Wilson to a band. You might need to adjust this based on actual DBpedia schema if it differs.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  ?child dbo:parent ?parent .
  ?child dbo:occupation dbr:Royalty .

  ?grandchild dbo:parent ?child .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war dbo:wikiPageWikiLink dbr:Algerian_War .
  ?war a dbo:SocietalEvent ;
      a dbo:Event ;
      a dbo:TelevisionShow .
}
```

This query does the following:
- Links to the Algerian War using `dbo:wikiPageWikiLink`.
- Ensures the entity is an instance of `SocietalEvent`, `Event`, and `TelevisionShow`.",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeRegion WHERE {
  # Find the award entity in DBpedia
  ?award dbo:wikiPageWikiLink+ dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # Link the award to a region that is also an American state and settlement
  ?award dbo:nativeRegion ?nativeRegion .
  ?nativeRegion rdf:type dbo:State .
  ?nativeRegion rdf:type dbo:Settlement .
  ?nativeRegion dbo:country dbr:United_States_of_America .
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .
  
  ?child dbo:succeededBy dbr:Carl,_Duke_of_W%C3%BCrttemberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Step 2: Identify a notable work associated with this alter ego
  ?alterEgo dbo:work ?notableWork .

  # Step 3: Find the producer of this notable work
  ?notableWork dbo:producer ?professional .

  # Step 4: Find the actor who played Johnny Doughboy
  dbr:Johnny_Doughboy dbo:actor ?actor .

  # Step 5: Identify a notable work associated with this actor
  ?actor dbo:work ?actorNotableWork .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find the landmark with the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.116800000000001347""^^xsd:float .

  # Step 2: Identify the country of this landmark
  ?landmark dbo:country ?country .

  # Step 3: Find the ruling party in that country
  ?country dbp:government ?government .
  ?government dbo:headOfGovernment ?primeMinister ;
              dbo:partyLeader ?rulingPartyLeader .
  ?rulingParty a dbo:PoliticalParty ;
               dbo:leader ?rulingPartyLeader .

  # Step 4: Find Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?annSothernBirthName .

  # Step 5: Find the party member of the ruling party who is born as Ann Sothern
  ?partyMember dbo:birthName ?annSothernBirthName ;
               dbo:memberOf ?rulingParty .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?movie WHERE {
  # Find Doon Arbus' parent
  dbr:Doon_Arbus dbo:child dbr:?person .
  ?person dbo:parent ?parent .

  # Find movies Herschel Bernardi acted in, ensuring they are works
  dbr:Herschel_Bernardi dbo:actedIn ?movie .
  ?movie a dbo:Film .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse WHERE {
  # Step 1: Find Myat Hpone Pyo's predecessor who is royalty
  ?myatHponePyo dbo:successor ?predecessor .
  ?predecessor a dbo:Monarch .

  # Step 2: Identify Saw Shwe Khet's royal child
  ?sawShweKhet dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Step 3: Determine the father of this royal child
  ?father dbo:child ?royalChild .

  # Step 4: Identify the spouse of this father
  ?father dbo:spouse ?spouse .

  # Step 5: Find the child of Saw Min Hla that matches the spouse from step 4
  dbr:Saw_Min_Hla dbo:child ?spouse .

  # Bind Myat Hpone Pyo to ensure correct predecessor
  dbr:Myat_Hpone_Pyo ?myatHponePyo .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:William_I dbo:spouse ?person .
  
  ?person a dbo:Monarch ;
          dbo:country ?country .

  ?person dbo:officeHolderOf ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace.
}
```",2,2,3,2,1,2,2,9,0,2,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeWar ?baggovutWar WHERE {
  # Find the awardee of the Golden Sword for Bravery
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  
  # Wars in which the awardee participated
  ?person dbo:participatedIn ?awardeeWar .

  # Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?baggovutWar .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Middlesex .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 100",1,1,2,1,1,2,3,28,86,87,849,0.49710982658959535,0.09197860962566845,0.1552346570397112
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember
WHERE {
  # Step 1: Find the landmark at the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation = ""20.116800000000001347""^^xsd:float)

  # Step 2: Determine the ruling party of that location
  ?location dbo:isPartOf ?country .
  ?country dbo:government ?government .
  ?government dbo:partyLeader ?partyMember .

  # Ensure the landmark is part of the country
  FILTER(?landmark = ?location)

  # Step 3: Find Roger Pryor (actor) and his spouse
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
  
  # Step 4: Match the party member with the spouse of Roger Pryor
  ?partyMember dbp:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Stephen V of Hungary's children
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Charles I of Hungary's father
  ?father dbp:spouse dbr:Elizabeth_of_Poland_and_Bohemia ;
          dbo:child dbr:Charles_I_of_Hungary .

  # Charles I's grandfather (father's parent)
  ?grandparent dbo:child ?father .
  
  # Find the person who is both a child of Stephen V and a grandparent of Charles I
  FILTER (?child = ?grandparent)

  # Ensure the person is royalty
  ?person rdf:type dbo:Monarch ;
          rdfs:label ?name .

  # Link the person to the identified individual
  FILTER(?person = ?child)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of the 2006–07 VfL Bochum season
  ?successorSeason a dbo:FootballLeagueSeason ;
                   dbo:sportsTeam ?club .

  # The club is a sports club, organization, and soccer club
  ?club a dbo:SoccerClub, dbo:SportsOrganization, dbo:SportsClub .

  # Find the manager of the player in this club
  ?player dbo:playsFor ?club .
  ?manager dbo:manages ?player .

  # The successor season is also a sports team season and sports season
  ?successorSeason a dbo:SportsTeamSeason, dbo:SportsSeason .

  # The 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006-07 dbo:sportsTeam ?club ;
                                 dbo:season ?previousSeason .

  # Link the previous and successor seasons
  ?previousSeason dbo:successor ?successorSeason .

  # Find the leader of West Germany
  ?leader dbr:Chancellor_of_West_Germany .

  # The manager's native place is the administration (country) of this leader
  ?manager dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:administrativeRegion ?administration .
  ?administration dbo:headOfState ?leader .
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?theme 
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Anumta Qureshi""@en .
  
  ?show dbo:starring ?actor .
  ?show dbo:theme ?theme .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerAStarIsBorn ?producerCoraSueCollinsClaimToFame
WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:director ?producerAStarIsBorn .

  OPTIONAL {
    dbr:Cora_Sue_Collins dbo:film ?claimToFame .
    ?claimToFame dbo:producer ?producerCoraSueCollinsClaimToFame .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party ?leader ?residence WHERE {
  # Find George Savage and the party he is associated with
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbo:memberOfParty ?party .
  
  # Ensure the party is in the UK and is an organization
  ?party dbo:country dbr:United_Kingdom ;
         rdf:type dbo:Organization, dbo:PoliticalParty .

  # Find the leader of the party
  ?party dbo:leader ?leader .

  # Get the residence of the leader
  ?leader dbp:residence ?residence .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```

This query does the following:
- Uses `dbo:Person` to ensure we are querying about a person.
- Matches the name ""Sam Concepcion"" using the `foaf:name` property, assuming English language tag (`@en`) for specificity.
- Retrieves the occupation/profession using the `dbo:occupation` property.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Actress .
  ?person dbp:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?profession WHERE {
  ?professional dbo:birthPlace dbr:Paris .
  ?professional dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,80,4125,39560,0.019024970273483946,0.0020181634712411706,0.0036492188390922567
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Stephen V of Hungary and his child
  dbr:Stephen_V_of_Hungary dbo:child ?child .

  # Charles Martel of Anjou and his parent (which is the child of Stephen V)
  dbr:Charles_Martel_of_Anjou dbo:parent ?child .

  # Spouse of Stephen V (father of Charles Martel's parent)
  dbr:Stephen_V_of_Hungary dbo:spouse ?spouse .

  # Ensure the spouse is a royalty
  ?spouse rdf:type dbo:Monarch .
  
  # Philip, Despot of Romania for context
  OPTIONAL { 
    ?philip dbo:title dbr:Despot_of_Romania ;
            dbo:country dbr:Romania .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorOfColorMeDeadDeathPlace WHERE {
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  
  dbr:Color_Me_Dead dbo:starring ?actorOfColorMeDead .
  
  ?actorOfColorMeDead dbo:deathPlace ?actorOfColorMeDeadDeathPlace .
}",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Identify Saw Min Phyu's spouse
    ?spouse dbo:spouse dbr:Saw_Min_Phyu .
    
    # Step 2: Find the child of this spouse who is royalty
    ?child dbo:parent ?spouse ;
           a dbo:RoyalFamilyMember .

    # Step 3: Identify Min Hla Htut's parent
    ?minHlaHtutParent dbo:child dbr:Min_Hla_Htut ;
                      dbo:location dbr:Pyakaung .
    
    # Step 4: Find the child of this parent
    ?anotherChild dbo:parent ?minHlaHtutParent .

    # Step 5: Determine the predecessor of the royalty child
    ?predecessor dbo:successor ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual
WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?individual .

  # Ensure Saw Shwe Khet is the correct individual
  VALUES ?sawShweKhet { dbp:Saw_Shwe_Khet }

  # Trace Minye Kyawswa's lineage
  ?minyeKyawswaChild dbo:childOf ?minyeKyawswa .
  VALUES ?minyeKyawswa { dbp:Minye_Kyawswa }
  
  ?parentOfChild dbo:child ?minyeKyawswaChild .
  ?individual dbo:childOf ?parentOfChild .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?title WHERE {
  ?philip dbo:givenName ""Philip""@en .
  ?philip dbo:familyName ""Despot of Romania""@en .
  OPTIONAL { ?philip dbo:father ?parent . }
  OPTIONAL { ?philip dbo:mother ?parent . }
  FILTER EXISTS { 
    ?parent dbp:royalTitle ?title .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipientName ?warName WHERE {
  ?recipient dbo:award dbr:Medal_of_Honor .
  ?recipient rdfs:label ?recipientName .
  FILTER (LANG(?recipientName) = 'en') .

  ?serviceRecord dbo:participatedInWar ?war .
  ?war rdfs:label ?warName .
  FILTER (LANG(?warName) = 'en') .

  ?recipient dbo:militaryService ?serviceRecord .
}
ORDER BY ?recipientName
```

### Explanation

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT**: We select distinct recipient names and war names to avoid duplicates.
- **?recipient dbo:award dbr:Medal_of_Honor**: Filters individuals who have received the Medal of Honor.
- **rdfs:label**: Retrieves human-readable labels for recipients and wars, ensuring they are in English.
- **?serviceRecord dbo:participatedInWar ?war**: Links military service records to wars.
- **ORDER BY ?recipientName**: Orders results by recipient name for readability.

This query assumes that DBpedia has structured data linking Medal of Honor awardees to their military service and the wars they participated in. Adjustments may be needed based on actual data availability and structure.",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow WHERE {
  ?award rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:wikiPageWikiLink ?tvShow .
  ?tvShow a dbo:TelevisionSeries .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist WHERE {
  ?song dbo:title ""What You Know (T.I. song)""@en .
  ?song dbo:artist dbr:T.I._(rapper) .

  ?song dbo:album ?album .

  ?album dbo:artist ?artist .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?work dbo:starring dbr:Richard_E._Grant .
  ?work a dbo:Film ;
        a dbo:TelevisionShow .
  
  ?work dbo:starring ?actor .
  ?actor dbo:profession dbp:Actor .
  OPTIONAL { ?actor dbo:profession ?otherProfession . }
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Step 1: Identify Stephen V of Hungary's predecessor
  ?stephenV dbo:predecessor ?predecessor .
  FILTER(STR(?stephenV) = ""Stephen_V_of_Hungary"")

  # Step 2 & 3: Find the child of this predecessor who is royalty
  ?predecessor dbo:child ?child .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(str(?title)), ""king"") || CONTAINS(LCASE(str(?title)), ""queen""))

  # Step 4: Identify Maria of Bytom's spouse
  ?maria dbp:spouse ?spouse .

  # Step 5 & 6: Find the father of this spouse who is royalty
  ?spouse dbo:father ?royalFather .
  ?royalFather dbo:title ?fatherTitle .
  FILTER(CONTAINS(LCASE(str(?fatherTitle)), ""king"") || CONTAINS(LCASE(str(?fatherTitle)), ""queen""))

  # Step 7: Determine the parent of this royal father
  ?royalFather dbo:parent ?parent .

  # Step 8: Find the child of this parent
  ?parent dbo:child ?childOfChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Joey B's birth name
  VALUES (?joeyBBirthName) { ""Joseph Badu"" }

  # Find the person with this birth name
  ?joeyB dbo:birthName ?joeyBBirthName .

  # $pacely's associated musical artist
  dbr:Pacely dbo:associatedMusicalArtist ?associatedArtist .

  # Writer of ""The Live Anthology""
  ?writer dbo:profession dbr:Writer ;
          dbo:work ?liveAnthology .
  ?liveAnthology rdfs:label ""The Live Anthology""@en .

  # Ensure the writer is also a musical artist
  ?writer dbo:occupation dbr:MusicalArtist .

  # Find the person who matches all criteria
  ?person = ?joeyB ;
           = ?associatedArtist ;
           = ?writer .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # The administration of the Spanish Socialist Workers' Party (PSOE)
  ?administration dbo:partyLeader dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .

  # Linking the office to the PSOE-led administration
  ?office dbo:partOfAdministration ?administration .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentRodneyLeesAwardee ?parentEdwardStanleyAwardee
WHERE {
  # For Rodney Lees
  ?award dbo:recipient dbr:Rodney_Lees .
  ?awardee dbo:award ?award .
  ?awardee dbo:parent ?parentRodneyLeesAwardee .

  # For Edward Stanley, 17th Earl of Derby
  ?award2 dbo:recipient dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?awardee2 dbo:award ?award2 .
  ?awardee2 dbo:parent ?parentEdwardStanleyAwardee .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find a person with the same birthday as Tony Hollings
  ?person dbo:birthday ?sameBirthday .
  FILTER (?sameBirthday = ?birthday)

  # Ensure the person is an athlete, soccer player, sports manager, and soccer manager
  ?person rdf:type dbo:Athlete ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .

  # Check if this person is a player associated with Lai Sun Cheung
  OPTIONAL { 
    ?association dbp:player ?person .
    ?association dbp:manager dbr:Lai_Sun_Cheung .
  }
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAthens WHERE {
  # Napoleon Zervas and Greek Resistance
  ?zervas dbo:occupation ""Resistance fighter""@en .
  ?zervas dbo:spouseOrPartner ?greekResistanceLeader .
  ?greekResistanceLeader dbo:placeOfBirth dbr:Athens .

  # Nathan Söderblom and Nobel Peace Prize
  ?soderblom dbo:nobelPrize ""Nobel Prize in Peace""@en ;
             dbo:awardYear ""1930""^^xsd:gYear .

  # Find a common entity related to both, located in Athens
  ?entityInAthens dbo:place dbr:Athens .
  OPTIONAL { ?entityInAthens dbo:relatedTo ?zervas . }
  OPTIONAL { ?entityInAthens dbo:relatedTo ?soderblom . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hashibaWars ?koichiroWars WHERE {
  # Hashiba Hidekatsu (Toyotomi Hidetsugu)
  dbr:Toyotomi_Hidetsugu dbo:nationality dbr:Japan ;
                         rdfs:label ""Hashiba Hidekatsu""@en .
  
  # Wars involving Hashiba Hidekatsu
  ?hashibaWars dbo:participant dbr:Toyotomi_Hidetsugu .

  # Koichirō (Tokugawa Ieyasu)
  dbr:Tokugawa_Ieyasu dbo:nationality dbr:Japan ;
                     rdfs:label ""Koichirō""@en ;
                     foaf:originalName ""Matsudaira Takechiyo""@ja .
  
  # Wars involving Tokugawa Ieyasu
  ?koichiroWars dbo:participant dbr:Tokugawa_Ieyasu .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Identify his father
  ?father dbo:child ?philip .

  # Ensure this father is a child of Stephen V of Hungary
  ?stephenV a dbo:Person ;
            foaf:name ""Stephen V of Hungary""@en .
  ?father dbo:parent ?stephenV .

  # Retrieve the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .

  # Find William Gayner's birthplace
  dbr:William_Gayner dbp:birthPlace ?gaynerBirthPlace .
  
  # Extract region and country from the birthplace of William Gayner
  ?gaynerBirthPlace dbo:locatedInCountry ?country ;
                   dbo:locatedInRegion ?region .

  # Ensure the parent is native to this region and country
  ?parent dbp:nativePlace ?nativePlace .
  ?nativePlace dbo:locatedInCountry ?country ;
               dbo:locatedInRegion ?region .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?commander ?militaryForce WHERE {
  # Identify the event of the French campaign in Egypt and Syria
  VALUES ?event { dbr:French_Egyptian_Campaign_in_Syria }

  # Find the commander associated with this event
  ?event dbo:commander ?commander .

  # Ensure the event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Identify William Bayne's involvement in the military force
  OPTIONAL {
    ?militaryForce dbp:member dbr:William_Bayne_(Royal_Navy_officer) .
    ?event dbo:militaryForce ?militaryForce .
  }
}
```

This query does the following:
- It identifies the event ""French campaign in Egypt and Syria"" using its DBpedia resource.
- It retrieves the commander of this military conflict.
- It checks if William Bayne was a member of any military force involved in this event.",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thunderbirdsRef ?bandMember ?ericClaptonAssociation ?nickCurranArtist
WHERE {
  # Find The Fabulous Thunderbirds reference
  dbr:The_Fabulous_Thunderbirds dbo:member ?bandMember .
  
  # Check if the band member is associated with Eric Clapton
  OPTIONAL { ?bandMember dbo:musicalArtist dbr:Eric_Clapton . }
  
  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  
  # Return the reference to The Fabulous Thunderbirds
  BIND(dbr:The_Fabulous_Thunderbirds AS ?thunderbirdsRef)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  
  OPTIONAL { 
    ?reference dbo:wikiPageRedirects ?televisionShow .
    ?televisionShow rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  }
}
```

This query does the following:
- Selects individuals (`?awardee`) who have received the ""Anita Borg Institute Women of Vision Awards.""
- Ensures these individuals are Japanese by checking their nationality.
- Uses an optional pattern to link a reference (if available) that redirects to a television show labeled as ""Anita Borg Institute Women of Vision Awards.""",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerArtist ?stuartArtist
WHERE {
  # Part 1: Find the writer of ""Wizards of Waverly Place (soundtrack)""
  ?soundtrack dbo:composer ?writer .
  
  # Ensure the writer is a musical artist and an artist
  ?writer dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .

  # Get the associated musical artist for the writer
  ?writer dbo:associatedMusicalArtist ?writerArtist .

  # Part 2: Find Stuart Mcbeath Tosh's associated musical artist
  ?stuart a dbo:Person ;
          foaf:name ""Stuart Mcbeath Tosh"" .
  
  # Ensure Stuart is a musical artist and an artist
  ?stuart dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .

  # Get the associated musical artist for Stuart
  ?stuart dbo:associatedMusicalArtist ?stuartArtist .

  # Filter to ensure both are musical artists
  FILTER (?writerArtist != ?stuartArtist)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Tisha Sterling's parent
  ?parent dbo:child dbr:Tisha_Sterling .
  
  # Nat Levine's film product
  ?film dbo:producer dbr:Nat_Levine .

  # Actor of the film
  ?actor dbo:actedIn ?film .

  # Spouse of the actor
  ?spouse dbp:spouse ?actor ;
          dbp:birthName ?birthName .

  # Ensure the spouse is the parent of Tisha Sterling
  FILTER (?parent = ?spouse)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Reed_Howes dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?victorParent ?edwardParent WHERE {
  # Victor Stanley (Royal Navy officer)
  ?victor dbo:birthName ""Victor Stanley""@en .
  ?victor dbo:parent ?victorParent .

  # Edward Stanley, 17th Earl of Derby
  ?edward dbp:name ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?edwardParent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?war WHERE {
  ?hideyoshi dbo:child ?child .
  FILTER (str(?hideyoshi) = ""Toyotomi_Hideyoshi"") .

  OPTIONAL { ?child dbo:participatedIn ?war . }
  
  FILTER EXISTS { ?war dbp:country ""Japan"" } .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Audrey Hepburn
  ?movie dbo:starring dbr:Audrey_Hepburn .
  
  # Find the actor of ""Paradise"" (2013)
  ?paradiseMovie dbo:title ""Paradise (2013 film)""@en ;
                 dbo:starring ?paradiseActor .

  # Ensure the movie is a work and a film
  ?movie rdf:type dbo:Film .
  
  # Find common movies featuring both Audrey Hepburn and the actor from ""Paradise"" (2013)
  ?commonMovie dbo:starring ?paradiseActor ;
               dbo:starring dbr:Audrey_Hepburn .

  # Get the actors of these common movies
  ?commonMovie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?successor ?commanderWar
WHERE {
  # Find the commander in the Russo-Polish War (1654–1667)
  ?war dbo:wikiPageRedirects dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  ?commander dbo:positionHeld ?office ;
             dbo:memberOf ?militaryForce ;
             dbo:occupation dbr:Politician .

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander ;
             a dbo:OfficeHolder .

  # Find the war that is both a television show and societal event related to Battle of Vienna
  ?war2 dbo:wikiPageRedirects dbr:Battle_of_Vienna .
  
  ?commanderWar dbo:occupation dbr:Television_Show ;
                dbo:isPartOf dbr:Societal_Event .

}
```

This query attempts to find:
- A successor (`?successor`) of a commander in the Russo-Polish War who is both a politician and an office holder.
- A commander (`?commanderWar`) involved in a war that is described as both a television show and a societal event, related to the Battle of Vienna.

Note: The query assumes certain properties and relationships based on typical DBpedia schema. Adjustments may be necessary depending on actual data availability and structure in DBpedia.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","SELECT DISTINCT ?militaryForce WHERE {
  # Find military conflicts involving William Bayne
  ?conflict dbo:militaryConflictOf ?militaryForce .
  ?conflict dbo:referenceTo dbr:William_Bayne .

  UNION

  # Find the military force involved in the Battle of Cape Finisterre (1805)
  ?battle dbo:event dbr:Battle_of_Cape_Finisterre_(1805) ;
          dbo:militaryConflictOf ?militaryForce .

  UNION

  # Find the commander in the French campaign in Egypt and Syria
  ?campaign dbo:commander ?commander .
  ?campaign dbr:French_campaign_in_Egypt_and_Syria .
  ?conflict dbo:militaryConflictOf ?militaryForce ;
            dbo:referenceTo ?commander .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?officeHolder ?force 
WHERE {
  # Find the tenant of Madrid
  ?tenant dbo:location dbr:Madrid .
  
  # Find the office holder who is a politician and commander in a force
  ?officeHolder dbo:position ?commanderPosition ;
               rdf:type dbo:Politician ;
               dbo:memberOf ?force .

  # Ensure the force is both a military conflict and societal event
  ?force rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Link Manuel Pinto da Costa to the force
  dbr:Manuel_Pinto_da_Costa dbo:involvedIn ?force .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerCollins ?producerActor
WHERE {
  # Cora Sue Collins' work and its producer
  ?collinsWork dbo:author dbr:Cora_Sue_Collins .
  ?collinsWork dbo:producer ?producerCollins .

  # High Society Blues actor
  ?highSocietyBlues dbo:starring ?actor .
  
  # Another notable work by the actor and its producer
  ?otherWork dbo:starring ?actor .
  ?otherWork dbo:producer ?producerActor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
    # Step 1: Find Nate Newton's associated band (Converge)
    dbr:Nate_Newton dbo:musicalArtist dbr:Converge .

    # Step 2: Find bands that are also organizations and associated with Converge
    ?associatedBand a dbo:MusicalGroup ;
                   dbo:bandMember dbr:Nate_Newton ;
                   dbo:organization true .

    # Step 3: Find Mudvayne members
    ?mudvayneMember dbo:musicalArtist dbr:Mudvayne .

    # Step 4: Find common band member between Mudvayne and the associated band (from step 2)
    ?associatedBand dbo:bandMember ?commonMember .
    ?mudvayneMember dbo:bandMember ?commonMember .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Alfonso VI and his children
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?alfonsoChild .
  
  # Find the grandchildren of Alfonso VI
  ?alfonsoChild dbo:child ?grandchild .

  # Find Roger II and his children
  dbr:Roger_II_of_Sicily dbo:child ?rogerChild .

  # Match the grandchild with Roger II's child
  FILTER (?grandchild = ?rogerChild)
}
```",3,3,4,2,2,3,3,71,3,0,0,1.0,1.0,1.0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?album ?profession WHERE {
  # Find the actor from ""The Golden Master""
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:starring ?actor .

  # Find the album of the song ""What You Know"" by T.I.
  ?song dbr:What_You_Know_(T.I._song) .
  ?song dbo:fromAlbum ?album .

  # Determine any professional roles associated with this actor
  ?actor dbo:profession ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  dbr:François_I,_Duke_of_Lorraine dbo:child ?royalChild .
  
  # Step 2: Ensure the child is royalty
  ?royalChild a dbo:Monarch .

  # Step 3: Determine the father of this royal child (Francis I)
  ?royalChild dbo:father dbr:François_I,_Duke_of_Lorraine .

  # Step 4: Identify the parent of Francis I's father
  dbr:François_I,_Duke_of_Lorraine dbo:father ?grandFather .
  
  # Step 5: Find the spouse of Renée of Bourbon
  dbr:Renée_of_Bourbon dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Nothing_to_Gein dbo:productionCompany ?producer .
  
  ?producer a dbo:Organization .
  ?producer a dbo:Group .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  FILTER (str(?movie) = str(dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg))

  # Check if this actor is a parent to both Doon Arbus and Amy Arbus
  ?actor dbo:child dbr:Doon_Arbus .
  ?actor dbo:child dbr:Amy_Arbus .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Jamsetji_Tata a dbo:Person .
  dbr:Jamsetji_Tata dbo:founded ?work .
  ?work dbo:country dbr:India .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorOfMovie ?parentOfChild ?parentOfPhotographer
WHERE {
  # Step 1: Actor of the movie
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actorOfMovie .

  # Step 2: Spouse of Mariclare Costello
  ?mariclare dbp:spouse ?spouse .

  # Step 3 & 4: Child of spouse and their parent
  ?child dbo:parent ?spouse .
  ?child dbo:parent ?parentOfChild .

  # Step 5: Professional in Photography
  ?photographer dbo:occupation ""Photography""@en .

  # Step 6: Parent of Photographer
  ?photographer dbo:parent ?parentOfPhotographer .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorBirthPlace ?authorBirthPlace
WHERE {
  # Find Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?powellBirthPlace .
  
  # Ensure the birthplace is a region and administrative region
  ?powellBirthPlace rdf:type dbo:Region ;
                   rdf:type dbo:AdministrativeRegion .

  # Find the governor of that region
  ?governor dbo:governs ?powellBirthPlace ;
           dbo:birthPlace ?governorBirthPlace .
  
  # Find the author of ""El Deafo""
  dbr:El_Deafo dbo:author ?author .
  
  # Ensure the author is American
  ?author dbo:nationality dbr:United_States .

  # Get the birthplace of the author
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist WHERE {
  ?song dbo:title ""What You Know"" ;
        dbo:artist dbr:T.I. .

  ?song dbo:album ?album .
  
  ?album dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""A Picture of Britain""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Producer of ""Nothing to Gein"" who is an organization and a group
  ?producer dbo:produced dbr:Nothing_to_Gein .
  ?producer rdf:type dbo:MusicalGroup .

  # Band member of the producer
  ?member dbo:memberOf ?producer .

  # Associated musical artist of ""Cavalera Conspiracy"" who is an organization
  ?artist dbo:associatedBand dbr:Cavalera_Conspiracy .
  ?artist rdf:type dbo:MusicalArtist .

  # Band member of the associated musical artist
  ?member dbo:memberOf ?artist .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify VfL Bochum as a sports club, organization, and soccer club
  dbr:VfL_Bochum 
    a dbo:SportsClub ;
    a dbo:Organization ;
    a dbo:FootballClub .

  # Find the manager of VfL Bochum during the 2007–08 season
  ?teamManager 
    a dbo:FootballManager ;
    dbo:managedTeam dbr:VfL_Bochum ;
    dbo:managerialTenure ?tenure .

  # Filter for the specific season (2007-08)
  FILTER (
    EXISTS {
      ?tenure dbo:startYear ?startYear .
      ?tenure dbo:endYear ?endYear .
      FILTER (?startYear <= 2007 && ?endYear >= 2008)
    }
  )

  # Bind the manager to a variable
  ?teamManager dbo:managerName ?manager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeMauraLeader ?officeRajoyLeader WHERE {
  # Find Miguel Maura's political party and its leader
  ?miguelParty dbo:member dbr:Miguel_Maura ;
              dbo:leader ?rajoyLeader .
  
  # Find Mariano Rajoy's political party and its leader
  ?marianoParty dbo:member dbr:Mariano_Rajoy ;
               dbo:leader ?mauraLeader .

  # Get the offices held by the leaders of Miguel Maura's party
  ?officeMauraLeader dbo:positionHeldBy ?rajoyLeader .
  
  # Get the offices held by the leaders of Mariano Rajoy's party
  ?officeRajoyLeader dbo:positionHeldBy ?mauraLeader .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Vince Gilligan""@en .
  FILTER NOT EXISTS { ?person owl:sameAs* ?m. FILTER( isIRI(?m) ) }
  ?person dbo:award ?award .
}
```

This query does the following:
- Uses `rdfs:label` to find the resource for Vince Gilligan.
- Ensures that we are not matching a disambiguation page by filtering out resources with an `owl:sameAs` property pointing to another IRI.
- Retrieves any awards associated with him using the `dbo:award` predicate.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  ?office dbo:memberOf dbr:Spanish_Socialist_Workers'_Party .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear WHERE {
  dbr:Christian_IX_of_Denmark dbo:monarchOf dbr:Denmark .
  OPTIONAL { 
    ?reign dbo:startYear ?startYear ;
           dbo:endYear ?endYear .
    FILTER (?reign = dbr:Reign_of_Christian_IX)
  }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?movie WHERE {
  ?person dbp:name ""Linda Bruckheimer""@en .
  ?person dbo:spouse ?spouse .

  OPTIONAL {
    ?spouse dbo:producer ?movie .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?nativePlace WHERE {
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?award dbo:nativePlace ?nativePlace .
  
  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativePlace a dbo:Settlement } &&
          EXISTS { ?nativePlace dbo:country dbr:United_States_of_America })
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?parentName WHERE {
  VALUES ?person { 
    dbr:Mary_Elphinstone_Lady_Elphinstone 
    dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne
  }
  
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (LANG(?parentName) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?band WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person rdfs:label ""Eric Clapton""@en .
  ?person dbp:memberOf ?band .
}",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician WHERE {
  # Find Eleonora Menicucci's birth name
  dbr:Eleonora_Menicucci dbo:birthName ?birthName .

  # Find a politician with the same birth name
  ?politician a dbo:Politician ;
             dbp:birthName ?birthName .
}
```",2,3,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthday WHERE {
  dbr:Marcelo_Sarmiento dbo:birthDate ?birthday .
}
```

This query uses the `dbo:birthDate` property to retrieve the birth date of Marcelo Sarmiento. The resource identifier for Marcelo Sarmiento is assumed to be `dbr:Marcelo_Sarmiento`, which should match the DBpedia entry for him.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  VALUES ?person { dbr:Doon_Arbus }
  ?person dbo:parent ?parent .
}
```

This query does the following:
- It uses `dbo:parent` to find the parent of a person.
- The `VALUES` clause specifies ""Doon Arbus"" as the subject, using its DBpedia resource identifier (`dbr:Doon_Arbus`).
- The query selects the variable `?parent`, which will hold the result for Doon Arbus's parent.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?author
WHERE {
  # Michał Kazimierz Pac as a commander in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pas_(general) dbo:role dbr:Great_Turkish_War .

  # Find the successor who is a politician and an office holder
  ?successor dbo:predecessor dbr:Mikołaj_Kazimierz_Pas_(general) .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .

  # Author of ""Always the Love Songs""
  ?author dbo:work dbr:Always_the_Love_Songs .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?jstEntity
WHERE {
  # Find Chieko Asakawa's birthplace
  ?person rdfs:label ""Chieko Asakawa""@en .
  FILTER(LANG(?person) = 'en')
  ?person dbo:birthPlace ?birthPlace .

  # Find an entity in the region of Japan Standard Time
  ?jstEntity dbp:timeZone dbr:Japan_Standard_Time .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentAwardee ?parentEdwardStanley WHERE {
  # Find a person who is an awardee of the Commander of the Royal Victorian Order
  ?awardee dbo:honoraryTitle ""Commander of the Royal Victorian Order""@en .
  
  # Get the father of the awardee
  OPTIONAL { ?awardee dbp:father ?parentAwardee . }
  
  # Find Edward Stanley, 17th Earl of Derby
  ?edwardStanley rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Get the father of Edward Stanley, 17th Earl of Derby
  OPTIONAL { ?edwardStanley dbp:father ?parentEdwardStanley . }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # Child is a royalty
  ?child rdf:type dbo:Monarch .

  # Child has a child who is a father (royalty)
  ?child dbo:child ?grandChild .
  ?grandChild rdf:type dbo:Monarch .
  
  # Grandchild is the father of Charles I of Hungary
  ?grandChild dbo:spouse ?parent2 .
  ?parent2 dbo:child dbr:Charles_I_of_Hungary .

  # ChildOfChild is spouse of Charles II of Naples
  ?grandChild dbo:spouse dbr:Charles_II_of_Naples .

  BIND(?grandChild AS ?childOfChild)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- Uses `rdfs:label` to find the DBpedia resource for ""The Shadow.""
- Utilizes `dbo:alterEgo` to retrieve the alter ego of this character.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring dbr:Richard_E._Grant .
  ?work a ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow)) .

  ?character dbo:portrayedBy ?work ;
             rdfs:label ""The Shadow""@en .

  ?work dbo:starring ?actor .
  FILTER(?actor != dbr:Richard_E._Grant)
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ceceBirthPlace ?vinceBirthPlace WHERE {
  # Find Cece Bell's birthplace
  ?author a dbo:Writer ;
          dbo:nationality dbr:United_States ;
          dbo:work dbr:El_Deafo .
  OPTIONAL { ?author dbp:birthPlace ?ceceBirthPlace . }

  # Find Vince Gilligan's birthplace
  ?awardee a dbo:Person ;
           dbo:award ?award .
  FILTER (strstarts(str(?award), ""List of awards and nominations received by Vince Gilligan""))
  OPTIONAL { ?awardee dbp:birthPlace ?vinceBirthPlace . }

  # Ensure the author is Cece Bell
  VALUES ?author {
    dbr:Cecily_Ann_Bell
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  # Find the author of ""Smartbomb""
  ?smartbombBook dbo:title ""Smartbomb""@en .
  ?smartbombBook dbo:author ?author .

  # Find an actor from ""ATL""
  ?atlFilm dbo:title ""ATL (film)""@en .
  ?atlFilm dbo:starring ?actor .

  # Find a movie that features both the author of ""Smartbomb"" and the actor from ""ATL""
  ?movie dbo:starring ?author .
  ?movie dbo:starring ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession
WHERE {
  # The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:aliasName ?alterEgo .
  }
  
  # Profession of a notable singer (assuming we are looking for a specific individual)
  OPTIONAL {
    dbr:Singer dbo:occupation ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?parent dbo:child dbr:Tisha_Sterling .
  
  # Get the birth name of that parent
  ?parent dbp:birthName ?birthName .

  # Check if this person is a member of the Republican Party (United States)
  ?person dbp:birthName ?birthName ;
          dbo:partyMember dbr:Republican_Party_(United_States) .
  
  # Verify if they are married to Roger Pryor (actor)
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?timeZone
WHERE {
  ?country rdfs:label ""Japan""@en.
  ?country dbo:countryName ""Japan"".
  ?country dbp:timeZone ?timeZone.
}
```

Explanation:
- We use `rdfs:label` to match the English label for Japan, ensuring we get the correct resource.
- The property `dbo:countryName` is used as an additional filter to ensure accuracy.
- Finally, `dbp:timeZone` retrieves the time zone information.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?frederick dbr:Frederick_Stanley_16th_Earl_of_Derby .
  
  ?child dbo:parent ?frederick ;
         dbo:spouse ?victorStanleyParent .

  ?victorStanley dbr:Victor_Stanley_(Royal_Navy_officer) .
  ?victorStanley dbo:parent ?child .

  ?alumnus dbo:almaMater dbr:Eton_College ;
           dbo:child ?politicianChild .

  ?politicianChild a dbo:Politician .

  ?politicianChild dbo:parent ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
           rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .

  # Her parent (either father or mother)
  OPTIONAL { ?dorothea dbo:father ?parent . }
  OPTIONAL { ?dorothea dbo:mother ?parent . }

  # Parent's father
  ?parent dbo:father ?grandfather .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?vitesseManager ?bochumPlayer ?bochumManager
WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  dbr:SBV_Vitesse dbo:manager ?vitesseManager .
  
  OPTIONAL {
    # Players in VfL Bochum during the 2007–08 season
    ?player dbo:team dbr:VfL_Bochum ;
            dbo:season ?bochumSeason .
    
    FILTER (STRSTARTS(STR(?bochumSeason), ""2007–08"")) .

    # Manager of VfL Bochum during the 2007–08 season
    dbr:VfL_Bochum dbo:manager ?bochumManager ;
                   dbo:season ?bochumSeason .
    
    FILTER (STRSTARTS(STR(?bochumSeason), ""2007–08"")) .

    # Link player to manager
    ?player dbo:manager ?bochumManager .
  }
}",3,6,4,2,2,3,3,71,0,1,1,0.0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?startYear ?endYear
WHERE {
  VALUES ?olaf { dbr:Olaf_I_of_Denmark }
  
  ?olaf dbo:positionHeld ?position .
  OPTIONAL { ?position dbo:beginDate ?startYear . }
  OPTIONAL { ?position dbo:endDate ?endYear . }
}
ORDER BY ?position
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthName ?birthName .
  ?person dbo:placeOfBirth ?location .
  ?location dbo:country dbr:United_States .
  ?location rdfs:label ?cityLabel .
  FILTER (CONTAINS(LCASE(?cityLabel), ""florida""))
}
```",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  dbr:Hu_Jieqing dbo:spouse ?spouse .

  ?spause rdf:type dbo:Writer .
  
  ?spouse dbo:work ?work .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Rodney Lees' award
  ?rodneyLees dbo:awardReceived ?award .
  
  # Step 2: Find the awardee of that award
  ?otherAwardee dbo:awardReceived ?award .

  # Step 3: Identify an alumnus of Eton College who is a parent of a politician child
  ?alumnus dbr:Eton_College dbo:alumni ?parent .
  ?child dbo:parent ?parent ;
         rdf:type dbo:Politician .

  # Step 4: Ensure the awardee and the child share the same parent
  ?otherAwardee dbo:parent ?parent .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChildRoyalty
WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:spouse ?margareteSophie .
  ?margareteSophie foaf:name ""Margarete Sophie of Austria""@en .

  # Find a child of this parent (could be another sibling or child)
  ?siblingOrChild dbo:parent ?parent .

  # Find the child of Duke Philipp of Württemberg
  ?childOfPhilipp dbo:parent ?philipp .
  ?philipp foaf:name ""Philipp of Württemberg""@en .

  # Find the grandchild of Duke Philipp of Württemberg
  ?grandchild dbo:parent ?childOfPhilipp .

  # Check if any of these individuals are royalty
  OPTIONAL { ?siblingOrChild dbo:royaltyStatus dbp:true . }
  OPTIONAL { ?grandchild dbo:royaltyStatus dbp:true . }

  # Return the grandchild who is royalty
  BIND(IF(BOUND(?grandchild), ?grandchild, NULL) AS ?childOfChildRoyalty)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?rogerIII a dbo:Duke ;
            foaf:name ""Roger III, Duke of Apulia""@en .
  
  ?parent dbo:spouse ?rogerIII ;
          dbo:child ?rogerIII .

  ?parent dbo:child ?child .
  
  FILTER(?child != ?rogerIII)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbpedia-owl:participatedIn ?war .
  ?war a dbpedia-owl:MilitaryConflict ;
       a dbo:Event .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors of ""Dispatches from Elsewhere""
  ?series dbo:starring ?actor .
  
  FILTER (str(?series) = str(dbr:Dispatches_from_Elsewhere))

  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?profession .

  # Match the actor's profession with Shatrughan Sinha's profession
  ?actor dbo:profession ?sameProfession .
  
  FILTER (?sameProfession = ?profession)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?aladdinActorName ?aladdinActorDeathPlace
WHERE {
  # Reed Howes' death place
  dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .

  # Actor of Aladdin (1958)
  dbr:Aladdin_(film) dbo:starring ?actor .
  
  # Get the actor's name and death place
  ?actor rdfs:label ?aladdinActorName ;
         dbo:deathPlace ?aladdinActorDeathPlace .
  
  FILTER(LANG(?aladdinActorName) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }
  ?stephenV dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName WHERE {
  # Find the DBpedia resource for ""Shelby Oaks""
  dbr:Shelby_Oaks dbo:starring ?actor .
  
  # Retrieve the name of the actor
  ?actor rdfs:label ?actorName .
  
  FILTER (lang(?actorName) = 'en')
}
```

This query does the following:
- It identifies ""Shelby Oaks"" as a movie and looks for actors (`dbo:starring`) associated with it.
- It retrieves the names of these actors using `rdfs:label`.
- The filter ensures that only English labels are considered.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?realName ?band 
WHERE {
  # Kim Wilson as Nicholas Michael Curran
  dbr:Kim_Wilson a dbo:MusicalArtist ;
                 foaf:name ""Nicholas Michael Curran""^^xsd:string ;
                 dbo:associatedBand dbr:The_Fabulous_Thunderbirds .

  # The Fabulous Thunderbirds band
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               dbo:bandMember dbr:Kim_Wilson .

  # Real name of Kim Wilson
  dbr:Kim_Wilson foaf:name ?realName .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:spouse ?parent .

  # Find children of Béla IV
  ?parent dbo:child ?child .
  
  # Ensure the child is a person (to avoid non-person entities)
  ?child rdf:type dbo:Person .

  # Find grandchildren (children of each child)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?administration dbo:member dbr:Anxo_Quintana .
  ?administration a dbo:Government ;
                  dbo:head ?leader .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentCategory
WHERE {
  # Find Eugène Cattin's professions
  ?eugeneCattin dbo:name ""Eugène Cattin"" .
  
  # Ensure he is an actor in the specified work
  ?work dbp:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?work dbo:starring ?eugeneCattin .

  # Get his professions
  ?eugeneCattin dbo:occupation ?profession .

  # Find parent category of the profession
  ?profession rdfs:subClassOf+ ?parentCategory .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country ?administration
WHERE {
  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .

  # Álvaro Quirós' country of residence
  dbr:Álvaro_Quirós dbo:nationality ?country .

  # Spanish Socialist Workers' Party's administration
  dbr:Spanish_Socialist_Workers'_Party dbo:member ?administration .
  FILTER (lang(?administration) = ""es"") # Ensure the administration is Spanish

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person foaf:name ""Victor Stanley""@en .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:occupation dbr:Royal_Navy_officer .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
}
```",1,1,2,1,1,3,3,71,4,2,0,0.6666666666666666,1.0,0.8
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Movies with Iliza Shlesinger
  ?movie1 dbo:starring dbr:Iliza_Shlesinger .
  
  # Movies with Audrey Hepburn
  ?movie2 dbo:starring dbr:Audrey_Hepburn .

  # Ensure movies are classified as both works and films
  ?movie1 a dbo:Film ;
          a dbo:CreativeWork .
  ?movie2 a dbo:Film ;
          a dbo:CreativeWork .

  # Get actors from these movies
  ?movie1 dbo:starring ?actor .
  ?movie2 dbo:starring ?actor .
}
```",4,8,5,2,2,2,3,28,0,0,1,0,0.0,0
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Ye Jia""@en .
  ?movie dbo:starring ?actor .
}
```

This query assumes that the movie ""Ye Jia"" is represented in DBpedia with an English title and uses `dbo:starring` to find actors associated with it.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find the producer of ""Lotus"" (R.E.M. song)
  dbr:Lotus_(song) dbo:producer ?producer .
  
  # Ensure the producer is an organization, band/group
  ?producer a dbo:Band ;
            a dbo:MusicalGroup .

  # Step 2: Find associated musical artists of this producer
  ?artist dbo:associatedMusicalArtist ?producer .

  # Step 3: Determine the associated musical artist of these artists
  ?intermediateArtist dbo:associatedMusicalArtist ?artist .
  
  # Step 4: Identify Mark Eitzel's band membership
  dbr:Mark_Eitzel dbo:bandMemberOf ?eitzelBand .

  # Ensure the final artist is also a member of one of Mark Eitzel's bands
  ?finalArtist dbo:associatedMusicalArtist ?intermediateArtist .
  ?finalArtist dbo:bandMemberOf ?eitzelBand .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shatrughanProfession ?shadowAlterEgo ?dispatchesActor
WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanProfession .

  # The Shadow (Video Game) alter ego
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .

  # Actor of ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:actor ?dispatchesActor .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?author WHERE {
  # Find Kate Dimbleby's parent
  ?kateDimbleby dbo:parent ?parent .
  VALUES ?kateDimbleby { <http://dbpedia.org/resource/Kate_Dimbleby> } .

  # Find the author of ""A Picture of Britain""
  ?book dbp:title ""A Picture of Britain""@en ;
        dbo:author ?author .

  # Ensure the parent is also the author
  FILTER (?parent = ?author)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the Russo-Polish War event
  dbr:Russo-Polish_War_(1654–1667) dbo:participatedIn ?event .

  # Find individuals who were commanders in this war
  ?event dbo:commander ?commander .

  # Ensure the commander is a politician
  ?commander dbo:occupation dbr:Politician .

  # Ensure the commander held an office
  ?commander dbo:officeHolderOf ?office .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  ?spouse dbo:authorBook dbr:Back_to_Work_(2014_book) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",1,1,2,1,1,2,3,28,906,0,0,1.0,1.0,1.0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:country dbr:India .
  ?movie dbo:starring dbr:Dipankar_De .
}
```",1,3,2,1,1,3,2,20,3,1,0,0.75,1.0,0.8571428571428571
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfLeader ?tenantResidence
WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:party dbr:Conservative_Party_(Spain) .

  # Get the office held by this leader
  ?leader dbo:positionHeld ?officeOfLeader .

  # Find leaders from the 2003 Madrid City Council election
  ?councilElectionLeader a dbo:Politician ;
                        dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .

  # Get the residence of these council election leaders
  ?councilElectionLeader dbo:residence ?residence .

  # Find tenants of these residences
  ?tenantResidence dbo:tenant ?councilElectionLeader .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the producer of ""Lotus"" (R.E.M. song)
  dbr:Lotus_(song) dbo:producer ?producer .

  # Step 2: Ensure the producer is an organization, band, and group
  ?producer a dbo:MusicalGroup ;
           a dbo:Organization .

  # Step 3: Find associated musical artists of this producer
  ?producer dbo:associatedBandOrMusicArtist ?associatedArtist .

  # Step 4: Check if these associated artists are also producers or artists
  OPTIONAL { ?associatedArtist dbo:producer ?artistProducer . }
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorBirthPlace ?awardeeBirthPlace ?governorBirthPlace WHERE {
  # Birthplace of the author of ""El Deafo""
  dbr:Cecily_Ann_Bell dbo:nationality dbr:United_States .
  dbr:Cecily_Ann_Bell dbp:birthPlace ?authorBirthPlace .

  # Awardee related to Vince Gilligan's awards
  OPTIONAL {
    ?award dbo:recipient dbr:Vince_Gilligan .
    ?award dbo:recipient ?awardee .
    ?awardee dbp:birthPlace ?awardeeBirthPlace .
  }

  # Governor of Virginia
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Virginia ;
            dbp:birthPlace ?governorBirthPlace .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person foaf:name ""Edmund Hakewill-Smith""@en .
  ?person dbo:award ?award .
}
```

This query uses the `foaf:name` property to identify Edmund Hakewill-Smith and then retrieves any awards linked to him using the `dbo:award` property.",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en .
  
  OPTIONAL { 
    ?award dbo:recipient ?person .
  }
  
  OPTIONAL {
    ?person dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ""Photographer""@en .
}
```",1,1,2,1,1,3,3,71,0,0,937,0,0.0,0
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polloi dbo:birthday ?birthday .

  # Find teams Pablo Aimar played for
  dbr:Pablo_Aimar dbo:team ?team .

  # Find players with the same birthday as Marty Pollio and who are athletes
  ?player dbo:birthday ?birthday ;
          a dbo:Athlete .

  # Ensure the player is also associated with any of Pablo Aimar's teams
  ?player dbo:team ?team .

  # Ensure the player is related to Sergio Agüero in some way (e.g., same team)
  OPTIONAL { ?player dbo:teammate dbr:Sergio_Agüero . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAmy ?childOfAllan ?actorMovie ?movieWork WHERE {
  # Parent of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  ?amyArbus dbo:parent ?parentOfAmy .

  # Child of Allan Arbus and actor of a movie
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?childOfAllan dbo:child ?allanArbus ;
                dbo:actor ?actorMovie .

  # Movie work with person decedent at Los Angeles
  ?actorMovie dbo:workExample ?movieWork .
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Los_Angeles_County,_California .
  ?movieWork dbo:personDecedent ?decedent .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist ?realName
WHERE {
  # Find Nicholas Michael Curran's alias and associated musical artist
  ?person a dbo:Person ;
          foaf:name ""Nicholas Michael Curran"" .
  
  OPTIONAL { 
    ?alias dbo:associatedMusicalArtist ?musicalArtist .
    FILTER (?alias = ?person)
  }
  
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:realName ?realName .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel ?officeLabel WHERE {
  # Mariano Rajoy's political party affiliation
  dbr:Mariano_Rajoy dbo:politicalParty ?party .
  
  # Office held by Mariano Rajoy
  dbr:Mariano_Rajoy dbo:positionHeld ?office .

  # Filter for the office of President of the Government of Spain
  FILTER(?office = dbr:President_of_the_Government_of_Spain)

  # Get labels for readability
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    ?office rdfs:label ?officeLabel .
    
    FILTER(LANG(?partyLabel) = 'en')
    FILTER(LANG(?officeLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?cynthia { dbr:Cynthia_Morgan_(singer) }
  
  ?cynthia dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?cynthia)
}
```

This query does the following:
- It uses `dbo:associatedBand` to find bands associated with Cynthia Morgan.
- Then, it finds members of those bands using `dbo:member`.
- The filter ensures that the artist found is not Cynthia Morgan herself.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:location dbr:New_York_(state) .
}
```

This query assumes that awards have a `dbo:recipient` property for the awardee and a `dbo:location` property indicating where the award is associated. Adjustments may be needed based on specific DBpedia schema details.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?tishaSterling dbo:parent ?parent .
  FILTER (str(?tishaSterling) = ""Tisha_Sterling"") .

  # Get the birth name of the parent
  ?parent dbp:birthName ?birthName .

  # Check if this person is a member of the ruling party
  ?person dbp:birthName ?birthName .
  ?person dbo:partyMemberOf ?rulingParty .

  # Find the landmark at the specified elevation
  ?landmark dbo:elevation ?elevation .
  FILTER (xsd:float(?elevation) = 20.1168) .

  # Ensure the person is related to this landmark in some way
  ?person dbo:location ?landmark .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?subject { dbr:Ottoman_Empire }
  ?subject ?property ?value .
}
```

This query selects all properties and their corresponding values for the ""Ottoman Empire"" entity. It retrieves a wide range of information related to the empire, such as its capitals, leaders, countries it encompassed, etc.",1,1,2,1,1,2,2,9,0,0,247,0,0.0,0
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?show ?associatedArtist WHERE {
  # Find the show where Afeez Oyetoro acted
  ?show dbo:starring dbr:Afeez_Oyetoro .
  
  # Ensure the show is also a movie (film adaptation)
  ?show dbo:genre dbr:Film .

  # Get the actor of the show
  ?actor foaf:name ""Afeez Oyetoro""@en .

  # Find Cynthia Morgan's associated musical artist
  ?cynthia dbo:associatedMusicalArtist ?artist .
  ?artist foaf:name ?associatedArtist .

  # Ensure Cynthia Morgan is linked to the same show
  ?show dbo:starring dbr:Cynthia_Morgan .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?author dbo:book dbr:An_Invitation_to_the_White_House .
  ?author dbo:commanderInMilitaryConflict dbr:Third_Taiwan_Strait_Crisis .

  ?author dbo:spouse ?spouse .

  ?spouse a dbo:Politician ;
         dbo:officeHolder true .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?parentOfCattinProfession ?parentOfArbusChild
WHERE {
  # Part 1: Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Part 2: Parent of Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?cattinProfession .
  ?relatedProfession dbo:parent ?parentOfCattinProfession .
  FILTER(?relatedProfession = ?cattinProfession)

  # Part 3: Parent of Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  ?child dbo:parent ?parentOfArbusChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?singerBand
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson"" ;
          dbo:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { ?person dbo:profession dbr:Singer . }
  OPTIONAL { ?person dbo:profession dbr:Band_member . }

  BIND(CONCAT(STR(?person), STR(?singer)) AS ?singerBand)
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfNicholasII ?decedentAtBirthplaceSandroBertaggia
WHERE {
  # Nicholas II of Russia's native place
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativePlaceNicholasII .
  ?nativePlaceNicholasII a dbo:Country ;
                        rdfs:label ?nativeOfNicholasII .

  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlaceSandroBertaggia .
  ?birthPlaceSandroBertaggia a dbo:Country ;
                             rdfs:label ?birthplaceSandroBertaggiaLabel .

  # Person who died at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Country ;
              rdfs:label ?birthplaceSandroBertaggiaLabel .
  
  FILTER(?nativeOfNicholasII != """")
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  ?leader dbo:memberOf ?party ;
          a dbo:Politician .

  ?leader dbo:holdsPublicOffice ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthplace ?ebrahimAlkaziBirthplace WHERE {
  # Find movies that are Indian and feature Dipankar De
  ?movie dbo:starring dbr:Dipankar_De ;
         dbo:country dbr:India .

  # Get the actor of such a movie
  ?movie dbo:starring ?actor .
  
  # Get the birthplace of this actor
  ?actor dbp:birthPlace ?actorBirthplace .

  # Find Ebrahim Alkazi's birthplace
  dbr:Ebrahim_Alkazi dbp:birthPlace ?ebrahimAlkaziBirthplace .
}
```",4,6,5,3,2,3,2,20,2,14,0,0.125,1.0,0.2222222222222222
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?koichiroWar ?yamazaBirthPlaceEntity
WHERE {
  # Find Koichirō and any wars associated with him
  ?koichiro dbo:name ""Koichirō""@ja .
  OPTIONAL { ?koichiro dbo:participatedIn ?koichiroWar . }

  # Find Yamaza Enjirō's birthplace
  ?yamaza dbp:birthPlace ?birthPlace .

  # Get entities related to the birthplace of Yamaza Enjirō
  ?birthPlaceEntity a dbo:Place .
  ?birthPlaceEntity rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = ""ja"")
  
  # Ensure the birth place matches
  FILTER (?birthPlace = ?yamazaBirthPlace)
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?character rdfs:label ""Pac-Man""@en .
  OPTIONAL { ?character dbo:birthName ?birthName . }
  FILTER (lang(?birthName) = 'en')
}
```

This query does the following:
- Uses `rdfs:label` to identify the character ""Pac-Man.""
- Attempts to retrieve the birth name using `dbo:birthName`.
- Filters results to English language labels.

Note: If ""$pacely"" refers to a different individual, you would need to adjust the label accordingly.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?organisation WHERE {
  ?organisation a dbo:SportsClub .
  ?organisation a dbo:SportsTeam .
  ?organisation a dbo:SoccerClub .
  ?organisation dbo:location dbr:Hong_Kong_City .
  FILTER(CONTAINS(LCASE(?organisation), ""hong kong c""))
}",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  # Find Central, Louisiana
  ?city a dbo:City ;
        rdfs:label ""Central""@en ;
        dbo:country dbr:United_States_of_America ;
        dbo:stateOrProvince dbr:Louisiana .

  # Determine the ruling party in Louisiana
  ?party dbo:isRulingPartyIn ?state .
  ?state rdfs:label ""Louisiana""@en .

  # Find members of the ruling party
  ?member dbo:memberOf ?party ;
          a dbo:Person ;
          dbp:name ?name .
}",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Resident of Chappaqua, New York who is a politician and office holder
  ?resident dbo:residence dbr:Chappaqua,_New_York ;
            a dbo:Politician ;
            dbo:officeHolder ?office .

  # Commander in the war that is both a disease and societal event
  ?war a dbo:Disease, dbo:SocietalEvent .
  ?commander dbo:commanded ?war ;
             dbo:owner dbr:USS_Arcadia_(ID-1605) .

  # The resident is the commander
  FILTER (?resident = ?commander)

  # Author of the work that is a book
  ?work dbo:author ?author ;
        a dbo:Book, dbo:WrittenWork .
  
  # Linking the resident to the author through the work
  ?resident dbo:writtenWork ?work .

}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office ?country
WHERE {
  # Anxo Quintana as a leader in an event
  ?event dbo:leader dbr:Anxo_Quintana .
  
  # The office or role associated with the event
  ?event dbo:positionHeld ?office .

  # Anxo Quintana's residence country
  dbr:Anxo_Quintana dbp:residenceCountry ?country .

  # Ensure the country is a tenant of its own residence
  ?country dbo:country ?country .

  # Anxo Quintana is a citizen of Spain
  dbr:Anxo_Quintana dbo:nationality dbr:Spain .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?youngkinBirthPlace ?awardAwardee
WHERE {
  # Part 1: Birthplace of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .

  # Part 2: Awardee of an Award Received by Vince Gilligan
  OPTIONAL {
    ?award dbo:recipient dbr:Vince_Gilligan .
    ?award dbo:awardee ?awardAwardee .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?work ?producer
WHERE {
  # Find Janet Gaynor's professional role and works
  VALUES ?janetGaynor { dbr:Janet_Gaynor }
  
  ?janetGaynor dbo:profession ?professionalRole .
  FILTER (str(?professionalRole) = ""Actor"")
  
  OPTIONAL {
    ?janetGaynor dbo:filmography ?work .
  }

  # Find the producer of The Adventures of Tom Sawyer (1938)
  VALUES ?tomSawyerFilm { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }
  
  ?tomSawyerFilm dbo:producer ?producer .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?entityInColombia ?fatherName ?fatherParty 
WHERE {
  # Roy Barreras and his party
  dbr:Roy_Barreras a dbo:Person ;
                   dbo:partyAffiliation ?royParty .
  
  # Entity in Colombia (assuming it refers to Roy Barreras)
  ?entityInColombia rdfs:label ""Roy Barreras""@en .

  # Sofía Petro's father and his party
  dbr:Sofía_Petro dbo:father ?father ;
                  rdfs:label ""Sofía Petro""@en .
  
  ?father a dbo:Person ;
          rdfs:label ?fatherName ;
          dbo:partyAffiliation ?fatherParty .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?parent WHERE {
  # Step 1: Find the author of ""A Picture of Britain""
  ?work dbo:author ?author .
  ?work rdfs:label ""A Picture of Britain""@en .

  # Step 2: Identify a person who is an artist and musical artist, native of London
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London ;
          dbo:occupation dbr:Artist ;
          dbo:occupation dbr:Musical_artist .

  # Step 3: Find the parent of this person
  ?parent dbo:child ?person .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shadowProfession ?actorProfession
WHERE {
  # Find The Shadow and its profession
  { 
    ?shadow a dbo:FictionalCharacter ;
            rdfs:label ""The Shadow""@en .
    ?shadow dbo:occupation ?shadowProfession .
  }
  
  # Find an actor and its profession
  { 
    ?actor a dbo:Actor ;
           rdfs:label ?actorLabel .
    FILTER(CONTAINS(LCASE(?actorLabel), ""actor""))
    ?actor dbo:occupation ?actorProfession .
  }
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person dbo:nationality dbr:Spanish ;
          dbo:country dbr:Spain .
  ?person dbo:residenceLocation ?residence .
  ?residence a dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Find Bob Thompson who is a musician
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson"" .
  
  # Check if he has an alias or pseudonym as The Shadow
  OPTIONAL { 
    ?alias foaf:name ""The Shadow"" .
    ?bob foaf:nick ?alias .
  }
  
  # Find the band associated with him under that alias
  ?band dbo:member ?bob ;
        a dbo:Band .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Ferdinand III's child
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Cecilia Renata's father
  ?ceciliaFather dbo:spouse ?ceciliaMother ;
                dbp:children ?ceciliaChild .
  FILTER(?ceciliaChild = dbr:Cecilia_Renata_of_Austria) .

  # Common individual who is a child of Ferdinand III and related to Cecilia Renata's father
  ?commonIndividual dbo:parent ?child ;
                   dbo:parent ?ceciliaFather .

  # Check if the common individual was a commander in the Thirty Years' War
  ?commonIndividual dbo:occupation dbr:Commander_in_the_Thirty_Years'_War .

  # Find the father of this common individual
  ?commonIndividual dbo:parent ?father .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .
  
  ?parent dbo:child ?child .
  
  ?child rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?na'od dbo:parent ?father .
  FILTER (str(?na'od) = ""Na'od"") .

  ?father dbo:parent ?grandfather .

  ?grandfather a dbo:Monarch ;
              dbp:officeHolder true .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?band ?producer 
WHERE {
  # The Shadow's alter ego
  OPTIONAL { 
    dbr:The_Shadow dbo:aliasName ?alterEgo .
  }

  # Bob Thompson's band
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:memberOfBand ?band .
  }

  # Producer of Coke Studio Philippines
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?producer .
  }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Linda Bruckheimer""@en .
  ?person dbo:birthName ""Linda Bruckheimer"" .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","SELECT ?battleMilitaryForce ?warMilitaryForce WHERE {
  # Find military forces involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts ?battleEvent .
  ?battleEvent dbo:participatingMilitaryUnit ?battleMilitaryForce .

  # Find a military conflict or event related to William Bayne
  ?bayneEvent dbo:wikiPageRedirects dbr:William_Bayne ;
              (dbo:participatingMilitaryUnit|dbo:militaryConflicts) ?warEvent .
  ?warEvent dbo:participatingMilitaryUnit ?warMilitaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantSantiago ?countryQuirós ?officeFeijóo
WHERE {
  # Santiago de Compostela tenant (e.g., mayor)
  OPTIONAL { 
    dbr:Santiago_de_Compostela dbo:mayor ?tenantSantiago .
  }
  
  # Álvaro Quirós residence country
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residenceCountry ?countryQuirós .
  }

  # Alberto Núñez Feijóo office
  OPTIONAL {
    dbr:Alberto_Núñez_Feijóo dbo:office ?officeFeijóo .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?sawShweKhetChild dbo:parent dbr:Saw_Shwe_Khet .
  ?sawMinHlaChild dbo:parent dbr:Saw_Min_Hla .

  FILTER (?sawShweKhetChild = ?sawMinHlaChild)

  ?position dbo:officeHolder ?sawShweKhetChild .
  ?position dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?yandamuriVeerendranath dbo:birthPlace ?entity .
  FILTER(STR(?yandamuriVeerendranath) = ""Yandamuri_Veerendranath"")
  
  ?chennupatiJagadish dbo:almaMater ?entity .
  FILTER(STR(?chennupatiJagadish) = ""Chennupati_Jagadish"")
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vitesseManager ?bochumManager ?nativeCountryLeader
WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?vitesseTeam dbo:manager ?vitesseManager .
  ?vitesseTeam dbp:sport ""association football"" .
  ?vitesseTeam rdfs:label ""SBV Vitesse""@en .

  # Manager of VfL Bochum
  ?bochumTeam dbo:manager ?bochumManager .
  ?bochumTeam dbp:sport ""association football"" .
  ?bochumTeam rdfs:label ""VfL Bochum""@en .

  # Leader of West Germany and their native country
  ?leader dbo:nationality ?nativeCountryLeader .
  ?leader dbo:country dbr:West_Germany .
  ?westGermanyLeader rdfs:label ?leaderLabel .
  FILTER (CONTAINS(LCASE(?leaderLabel), ""chancellor"") || CONTAINS(LCASE(?leaderLabel), ""president""))

  # Ensure the leader's native country is a country
  ?nativeCountryLeader rdf:type dbo:Country .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?almaMater WHERE {
  ?person a dbo:Politician ;
          dbo:birthName ?birthName ;
          dbo:dateOfBirth ?dateOfBirth ;
          dbo:almaMater ?almaMater .
  
  FILTER (?dateOfBirth = ""1955-12-02""^^xsd:date)
  
  OPTIONAL { 
    ?person rdfs:label ""Eleonora Menicucci""@en .
  }
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find actors in ""Johnny Doughboy""
  ?actor dbo:actedIn dbr:Johnny_Doughboy .
  
  # Find their claim to fame (a notable work)
  ?actor dbo:notableWork ?work1 .

  # Find the producer of that work
  ?work1 dbo:producer ?producer1 .

  # Find actors in ""High Society Blues""
  ?actor2 dbo:actedIn dbr:High_Society_Blues .
  
  # Find their claim to fame (a notable work)
  ?actor2 dbo:notableWork ?work2 .

  # Ensure the works are movies
  FILTER(STRSTARTS(STR(?work1), ""http://dbpedia.org/resource/"") && STRSTARTS(STR(?work2), ""http://dbpedia.org/resource/""))
  
  # Find the producer of that work
  ?work2 dbo:producer ?producer2 .

  # Ensure both producers are the same
  FILTER(?producer1 = ?producer2)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?athensEntity WHERE {
  # Wars involving Konstantinos Ventiris
  VALUES (?person) { dbr:Konstantinos_Ventiris }
  ?person dbo:participatedIn ?war .

  UNION

  # Wars involving Napoleon Zervas
  VALUES (?person) { dbr:Napoleon_Zervas }
  ?person dbo:participatedIn ?war .

  UNION

  # Entities related to Athens
  ?athensEntity dbo:location dbr:Athens .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band ?member ?associatedArtist WHERE {
  # Eric Clapton's bands
  ?clapton dbo:bandMemberOf ?band .
  FILTER(?clapton = dbr:Eric_Clapton) .

  # Band members of those bands
  ?band dbo:bandMember ?member .

  # Associated musical artists with these band members
  ?member dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is a person born as a musical artist
  ?associatedArtist a dbo:MusicalArtist .
  
  # Check if there's any connection to Nick Curran
  OPTIONAL {
    ?associatedArtist foaf:name ""Nick Curran""@en .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # George Ducas as a commander in the Great Turkish War
  ?ducas a dbo:Person ;
         foaf:name ""George Ducas"" ;
         dbo:role [ 
           a dbo:MilitaryCommander ; 
           dbo:associatedWith dbr:Great_Turkish_War ] .

  # Works written by George Ducas
  ?work dbo:author ?writer .
  ?ducas dbo:works ?work .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Philip, Despot of Romania and his royal parent
  ?philip a dbr:Philip_Despot_of_Romania ;
          dbo:parent ?royalParent .
  
  FILTER EXISTS { ?royalParent dbo:occupation dbr:Royalty } .

  # Step 2: Find the spouse of this royal parent
  ?royalParent dbo:spouse ?grandSpouse .

  # Step 3: Identify Maria of Bytom and her spouse
  ?maria a dbr:Maria_of_Bytom ;
         dbo:spouse ?mariaSpouse .

  # Step 4: Find the royal parent of this spouse
  ?mariaSpouse dbo:parent ?royalParent2 .
  
  FILTER EXISTS { ?royalParent2 dbo:occupation dbr:Royalty } .

  # Step 5: Find the spouse of this royal parent
  ?royalParent2 dbo:spouse ?finalSpouse .

  # Return the spouse from step 2
  BIND(?grandSpouse AS ?spouse)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person rdfs:label ""Little Hat Jones""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbo:Country .
  
  BIND(?birthPlace AS ?country)
}
```",2,3,3,2,1,2,2,9,0,1,63421,0.0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?novel a dbo:Book .
  ?novel rdfs:label ""Cat Country""@en .
  OPTIONAL { ?novel dbo:country ?country . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Linda Bruckheimer and confirm she is the producer of ""12 Strong""
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .
  dbr:Linda_Bruckheimer dbo:profession dbr:Film_producer ;
                        dbo:worksFor dbr:""12_Strong"" .

  # Find her spouse
  OPTIONAL { dbr:Linda_Bruckheimer dbp:spouse ?spouse . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  ?person foaf:name ""Amy Arbus""@en .
  ?person dbo:child ?child .
  ?child foaf:name ""Amy Arbus""@en .
  ?person foaf:parent ?parent .
}
```

This query assumes that Amy Arbus is represented in DBpedia with the `foaf:name` property and uses both `dbo:child` and `foaf:parent` to find her parent.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?office WHERE {
  ?region rdfs:label ""Duchy of Schleswig""@en .
  OPTIONAL { 
    ?region dbo:administrativeRegion ?subRegion .
    ?subRegion dbo:mayor ?mayor .
    ?mayor dbo:officeHolder ?office .
  }
}
```

This query attempts to find any administrative regions related to the Duchy of Schleswig and then look for mayors associated with those regions. It uses optional patterns to account for the possibility that direct information might not be available.",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?tvShow ?writer WHERE {
  # Find the TV show that is also a societal event related to a war
  ?tvShow a dbo:TelevisionSeries ;
          dbo:genre ?warGenre .
  
  FILTER(CONTAINS(LCASE(STR(?warGenre)), ""war"")) .

  # Find Jean Baptist, Comte d'Arco as a character in this TV show
  ?character dbo:name ""Jean Baptist, Comte d'Arco""@en ;
             dbo:portrayedBy ?actor ;
             dbp:inSeries ?tvShow .
  
  # Determine his role as a commander
  ?role dbo:agent ?character ;
        dbo:roleName ?commanderRole .

  FILTER(CONTAINS(LCASE(STR(?commanderRole)), ""commander"")) .

  # Find the writer associated with George Ducas
  ?work dbo:author ?writer ;
        dbp:title ?georgeDucasWork .
  
  ?georgeDucas a dbo:Person ;
               dbo:name ""George Ducas""@en ;
               dbo:works ?work .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?child .

  ?child a dbo:Royalty .

  ?child dbo:parent ?parent .

  ?parent a dbo:RoyalFamily ;
          dbo:noble ?noble .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Helena_of_Austria dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .
  ?child a dbo:Monarch .
  ?predecessor dbo:successor ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRoyalParent WHERE {
  # Step 1: Find the child of Roger II and Elvira
  ?child dbo:parent dbr:Roger_II_of_Sicily .
  ?child dbo:parent dbr:Elvira_of_Castile .

  # Step 2: Find the parent of this child
  ?royalParent dbo:child ?child .

  # Step 3: Check if this parent is royalty
  ?royalParent a dbo:Monarch .

  # Step 4: Get the child of this royal parent
  ?childOfRoyalParent dbo:parent ?royalParent .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?professionalIdentity
WHERE {
  # Part 1: Find the album of T.I.'s song ""What You Know""
  dbr:T.I._song_What_You_Know dbo:album dbr:Album_Name .

  # Find an actor associated with this album
  dbr:Album_Name dbo:artist ?actor .
  
  FILTER (rdf:type(?actor, dbo:Actor)) .

  # Part 2: Identify the professional alter ego of ""The Shadow""
  dbr:The_Shadow dbo:alias dbr:Professional_Identity .

  BIND(dbr:Professional_Identity AS ?professionalIdentity)
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Bobby_Shmurda dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?alterEgo
WHERE {
  # Part 1: Find the father of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:father ?father .

  # Part 2: Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alias ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  # Find John McDermott and his death place
  ?johnMcDermott a dbo:Artist ;
                 foaf:name ""John McDermott"" ;
                 dbp:nationality dbr:United_States ;
                 dbp:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find the ruling party of this settlement
  ?rulingParty a dbo:PoliticalParty, dbo:Organization ;
               dbo:governs ?deathPlace .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  ?location a dbo:Settlement .
  ?location rdfs:label ?label .
  FILTER (LANG(?label) = 'en') .
}
```",1,3,2,1,1,3,2,20,6,649011,0,9.244750137515658e-06,1.0,1.8489329345801308e-05
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?teamAimara
WHERE {
  # Find teams for Juan Carlos Molina
  ?molinaTeam a dbo:FootballClub ;
              dbo:member ?playerMolina .
  
  # Find teams for Sergio Agüero
  ?agueroTeam a dbo:FootballClub ;
              dbo:member ?playerAgüero .

  # Ensure the player is in both teams
  FILTER (?playerMolina = ?playerAgüero)

  # Find team for Pablo Aimar
  dbr:Pablo_Aimar dbo:team ?teamAimara .
  
  # Ensure the same player is in both Molina's and Agüero's teams
  VALUES ?player { ?playerMolina }
  
  # Check if this player is also in Pablo Aimar's team
  ?teamAimara dbo:member ?player .

}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  # John Cleese
  dbr:John_Cleese dbo:profession dbr:Actor .
  
  # Shatrughan Sinha
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .

  # Find a movie or TV show where both are actors
  ?movie dbo:starring dbr:John_Cleese ;
         dbo:starring dbr:Shatrughan_Sinha .
  
  # Ensure it's a television show (or movie)
  ?movie rdf:type ?type .
  FILTER (?type IN (dbr:TelevisionShow, dbr:Film))
}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Carolyn Jones
  { 
    dbr:Carolyn_Jones dbo:deathPlace ?deathPlace .
    BIND(dbr:Carolyn_Jones AS ?person)
  }
  
  UNION
  
  # Actor of Aladdin (1958 film)
  { 
    dbr:Aladdin_(film) dbo:actor ?actor .
    ?actor dbo:deathPlace ?deathPlace .
    BIND(?actor AS ?person)
  }
  
  UNION
  
  # Reed Howes
  { 
    dbr:Reed_Howes dbo:deathPlace ?deathPlace .
    BIND(dbr:Reed_Howes AS ?person)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frédéric Bouraly""@en .
  ?person dbo:occupation ?profession .
}
```

This query does the following:
- Uses `foaf:name` to identify Frédéric Bouraly, assuming his name is available in English.
- Retrieves the occupation using the `dbo:occupation` property.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthDate .

  # Find persons who are both soccer players and managers with the same birthdate
  ?person a dbo:SoccerPlayer ;
          dbo:managerOf ?team ;  # This implies they have been a manager
          dbp:birthday ?birthdate .
  
  FILTER (?birthdate = ?marceloSarmientoBirthDate)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:birthName ""Hashiba Hidekatsu""@ja .
  ?person dbo:alias dbr:Toyotomi_Hidetsugu .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .
  ?event rdfs:label ?war .
  FILTER (lang(?war) = 'en')
}
```

### Explanation:
- **Prefixes**: `dbo` for DBpedia ontology, `dbr` for resources.
- **Variables**: `?war` to capture the name of the war or battle.
- **Pattern**:
  - Identify a person with the birth name ""Hashiba Hidekatsu"" and alias ""Toyotomi Hidetsugu"".
  - Find events (`?event`) where this person is an agent and are classified as military conflicts.
  - Extract the label of these events, ensuring it's in English.

This query aims to retrieve wars or battles involving Hashiba Hidekatsu by leveraging DBpedia's structured data on historical figures and events.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?resident WHERE {
  ?region dbo:timeZone dbr:Eastern_European_Time .
  ?region a dbo:Settlement .
  ?region rdfs:label ?settlement .
  FILTER (lang(?settlement) = 'en') .

  ?resident dbo:residence ?region .
  ?resident rdfs:label ?residentLabel .
  FILTER (lang(?residentLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,116,225,43,0.34017595307917886,0.7295597484276729,0.46399999999999997
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""actress""))
}
```",1,1,2,1,1,3,2,20,1719,4730,17522,0.26655295394634826,0.08934047086949742,0.13382639159205917
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Renée of Bourbon""@en .
  ?person dbo:spouse ?spouse .
}
```

This query does the following:
- It uses `dbo:Person` to identify that we are dealing with a person entity.
- It matches the name ""Renée of Bourbon"" using the `foaf:name` property, assuming it is available in DBpedia.
- It retrieves the spouse(s) using the `dbo:spouse` property.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandParent WHERE {
  # Step 1: Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claudius a dbo:Person ;
           foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .

  # Step 2: Find his children
  ?child dbo:parent ?claudius .

  # Step 3: For each child, find their parent (grandparent to Claude)
  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Hillary_Clinton .
}
```",1,3,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Hillary_Clinton dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    dbr:The_Live_Anthology dbo:author ?writer .
    
    ?writer dbo:profession dbr:Musical_artist .

    dbr:$pacely dbo:associatedMusicalArtist ?artist .

    FILTER (?writer = ?artist)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Yeshaq_I dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royalty true . }
  FILTER EXISTS { ?parent dbo:royalty true } 
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Emilia Yancheva Valeva"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  ?actor dbo:child dbr:Doon_Arbus ;
         dbo:child dbr:Amy_Arbus .

  ?movie dbo:starring ?actor .
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?song dbo:artist dbr:T.I.;
        rdfs:label ""What You Know""@en.
  
  ?song dbo:album ?album.
}
```

This query does the following:
- Uses `dbo:artist` to link the song to T.I.
- Filters songs with the label ""What You Know"" in English.
- Retrieves the album associated with this song using `dbo:album`.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?birthPlaceRegion ?birthPlaceCountry
WHERE {
  # Find the parent of Mary Elphinstone, Lady Elphinstone
  OPTIONAL { 
    dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent1 .
  }

  # Find the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  OPTIONAL {
    dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent2 .
  }

  # Combine parents into a single variable
  BIND(CONCAT(?parent1, "" "", ?parent2) AS ?parent)

  # Find the birthplace of William Gayner that is both a region and a country
  dbr:William_Gayner dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:type dbr:Region ;
             dbo:type dbr:Country .

  # Check if any parent is native to this birthplace
  OPTIONAL {
    ?parent dbo:nativePlace ?nativePlace .
    FILTER(?nativePlace = ?birthPlace)
  }

  # Return the results
  VALUES (?birthPlaceRegion ?birthPlaceCountry) { (STR(?birthPlace)) }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?edward dbo:child ?arthur .
  ?edward foaf:name ""Edward Stanley"" .
  ?edward dbo:title ""17th Earl of Derby""@en .
  
  OPTIONAL { ?edward dbo:parent ?father . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Japan .
}
```

This query uses the `dbo:country` property to find entities where Japan is listed as the country. The prefix `dbr:` is used for resources, and in this case, it refers to the resource representing Japan.",1,1,2,1,1,3,2,20,0,0,8916,0,0.0,0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Wars involving Toyotomi Hidenaga
  {
    ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:participant dbr:Toyotomi_Hidenaga .
    ].
    OPTIONAL { ?war rdfs:comment ?description }
  }

  UNION

  # Wars involving Toyotomi Hideyori
  {
    ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:participant dbr:Toyotomi_Hideyori .
    ].
    OPTIONAL { ?war rdfs:comment ?description }
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify the Battle of Vienna resource
  VALUES (?battle) { dbr:Battle_of_Vienna_1683 }

  # Find entities that participated in or commanded during the battle
  ?force dbo:participatedIn ?battle .
  UNION
  ?commander dbo:commanded ?force ;
             dbo:participatedIn ?battle .

  FILTER NOT EXISTS {
    ?force a dbo:Battle .
  }
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Rainer_Weiss dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInCharleston WHERE {
  ?tracy dbo:wikiPageDisambiguates ?disambiguation .
  FILTER(CONTAINS(LCASE(?disambiguation), ""amasa tracy"")) .

  ?tracy dbo:participatedIn ?war .
  
  OPTIONAL {
    ?war dbo:location dbr:Charleston,_South_Carolina .
    ?entityInCharleston dbo:wikiPageRedirects ?war .
  }
}
```

This query does the following:
- Identifies resources related to Amasa Tracy.
- Finds wars in which he participated.
- Checks if these wars have a location associated with Charleston, South Carolina.
- Optionally retrieves entities related to these wars that might redirect to them.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find awardees of Commander of the Royal Victorian Order
  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .

  # Step 2: Find Arthur Stanley's father
  ?arthur dbr:Arthur_Stanley_(politician) .
  ?arthur dbo:father ?father .

  # Step 3: Find Edward Stanley, 17th Earl of Derby's child and that child's parent
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?child dbo:parent ?edward ;
         dbo:parent ?grandParent .

  # Step 4: Ensure the parent is both a politician and an office holder
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Combine conditions to find the common entity
  FILTER (?father = ?parent && ?grandParent = ?parent)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?writer WHERE {
  # Find songs by Apache Indian
  ?album dbo:artist dbr:Apache_Indian .
  ?album dbo:song ?song .

  OPTIONAL {
    # Get the writer of each song
    ?song dbo:lyricist ?writer .
  }
}
```

This query does the following:
- It selects albums associated with Apache Indian.
- For each album, it finds songs (`?song`).
- It optionally retrieves the lyricist or writer (`?writer`) for each song.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  # Identify the work authored by Bill Clinton
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .

  # Ensure the work is ""An Invitation to the White House""
  FILTER (str(?work) = str(dbr:An_Invitation_to_the_White_House)).

  # Find the spouse of Bill Clinton
  ?spouse dbo:spouse dbr:Bill_Clinton ;
          a dbo:Politician, dbo:OfficeHolder .

  # Bind the author to Bill Clinton
  BIND(dbr:Bill_Clinton AS ?author)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  # Step 2: Find other professionals in the same field
  ?actor dbo:profession ?sinhaProfession .
  
  # Ensure it's not Shatrughan Sinha himself
  FILTER (?actor != dbr:Shatrughan_Sinha)

  # Step 3: Identify movies or TV shows featuring both Richard E. Grant and this actor
  ?work dbo:starring ?grant .
  ?work dbo:starring ?actor .

  # Ensure the work is a movie or television show
  FILTER (?work IN (dbr:Category:Film, dbr:Category:Television_series))

  # Identify Richard E. Grant's resource
  dbr:Richard_E._Grant rdfs:label ""Richard E. Grant""@en .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Constance of Burgundy
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .

  # Find her spouse
  ?spouse dbo:spouseOf ?constance ;
          a dbo:Person .

  # Find the children of the spouse (children of Constance)
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Find the grandchildren of the spouse (grandchildren of Constance)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Ensure the grandchild is royalty
  ?grandchild dbo:royalTitle ?title .

  # Ensure the grandchild is also a child of Roger II of Sicily
  ?rogerII dbr:Roger_II_of_Sicily ;
           dbo:child ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Gustavo_Petro dbo:partyAffiliation ?party .
}
```

This query uses the `dbo:partyAffiliation` property to find the political party associated with Gustavo Petro. The resource identifier for Gustavo Petro is assumed to be `dbr:Gustavo_Petro`, which should match DBpedia's naming conventions.",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Shwe Khet""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```

This query does the following:
- It looks for an entity (`?person`) that is of type `dbo:Person` and has a name ""Saw Shwe Khet"".
- It then finds any spouse (`?spouse`) related to this person.
- Finally, it retrieves the name of the spouse.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoRajoyOffice ?albertoRuizGallardonResidence ?partyLeaderOffice
WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoRuizGallardonResidence .

  # Miguel Maura's party and its leader
  dbr:Miguel_Maura dbo:partyLeader ?partyLeader .
  
  # Ensure the leader is a politician
  ?partyLeader rdf:type dbo:Politician .

  # Get the office of the party leader
  ?partyLeader dbo:office ?partyLeaderOffice .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the child of Saw Min Hla
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  ?child dbo:parent ?sawMinHla .

  # Find the father of Myat Hpone Pyo and his spouse
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?father dbo:child ?myatHponePyo .
  ?spouse dbo:sibling ?father .

  # Ensure the person is royalty
  ?child dbo:royaltyStatus dbr:Royalty .

  FILTER (?child = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Find the alter ego of ""The Shadow""
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .

  # Find professionals in both categories
  ?professional dbo:profession ?samProfession .
  ?professional dbo:alterEgo ?shadowAlterEgo .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:father ?father .
  
  ?father dbo:child dbr:Maximilian_I,_Holy_Roman_Emperor .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Alexander_of_W%C3%BCrttemberg dbo:spouse ?parent1 .
  
  ?parent1 dbo:child ?child .
  
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?singerRole ?bandName
WHERE {
  # The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:alias dbr:Lamont_Clayton .
    BIND(dbr:Lamont_Clayton AS ?alterEgo)
  }

  # Bob Thompson's roles in music
  OPTIONAL {
    dbr:Bob_Thompson_Musician dbo:singerOfBand dbr:Some_Band ;
                               rdfs:label ?singerRole .
    FILTER(CONTAINS(LCASE(?singerRole), ""singer""))
  }
  
  OPTIONAL {
    dbr:Bob_Thompson_Musician dbo:memberOfBand dbr:Another_Band ;
                              rdfs:label ?bandName .
  }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:childOf ?parent .

  # Find Frederick Stanley, 16th Earl of Derby and his children
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Filter the child to be a politician
  ?child rdf:type dbo:Politician .

  # Get the parent of this child (who is also Edward Stanley's parent)
  ?child dbo:parent ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?coachingRelation dbo:agent <http://dbpedia.org/resource/Aleksandr_Filimonov> .
  ?coachingRelation dbo:player ?player .
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  # Find the child common to Saw Shwe Khet and Saw Min Hla
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child dbo:parent dbr:Saw_Min_Hla .

  # Identify the spouse of the father of Myat Hpone Pyo
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  ?spouse dbo:spouse ?father .

  # Ensure the identified individual is a royalty
  FILTER (?child = ?spouse)
  ?spouse rdf:type dbo:Royalty .

  # Find the predecessor (parent) of this individual
  ?predecessor dbo:child ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warMilitaryForce ?eventMilitaryForce
WHERE {
  # Find military force associated with William Bayne in a war
  ?bayne dbo:wikiPageRedirects dbr:William_Bayne .
  ?bayne dbo:militaryConflict ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:militaryForce ?warMilitaryForce .

  # Find military force associated with Robert Calder in an event
  ?calder dbo:wikiPageRedirects dbr:Robert_Calder .
  ?calder dbo:event ?event .
  ?event rdf:type dbo:Event, dbo:SocietalEvent ;
         dbo:militaryForce ?eventMilitaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residence
WHERE {
  # Leader of 2003 Madrid City Council Election
  ?leader a dbo:OfficeHolder ;
          dbo:electedDuring dbr:Madrid_City_Council_election,_2003 ;
          dbo:officeHolderOf dbr:Mayor_of_Madrid .

  # Commander in Central African Republic Civil War
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:roleInEvent dbr:Central_African_Republic_Civil_War .

  # Ensure both are the same person
  FILTER (?leader = ?commander)

  # Find the residence of this individual
  ?residence dbo:tenant ?leader .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Linda Sue Cobb"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?relation ?description WHERE {
  VALUES ?subject { dbr:Toyotomi_Hidetsugu }
  
  ?subject dbo:wikiPageDisambiguates ?disambiguation .
  OPTIONAL { ?disambiguation rdfs:label ?relation . FILTER (lang(?relation) = 'en') }

  ?incident dbo:wikiPageRedirects* ?subject .
  ?incident dbo:wikiPageDescription ?description .
  FILTER (lang(?description) = 'en')

  ?incident dbo:location dbr:Japan .

  OPTIONAL {
    ?incident dbo:relatedEntity ?entity .
    ?entity rdfs:label ?entityLabel .
    FILTER (lang(?entityLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Step 1: Find Archduchess Margarete Sophie of Austria's child
  ?margareteSophie a dbo:Person ;
                  rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  
  ?child1 dbo:parent ?margareteSophie .

  # Step 2: Find Alexander of Württemberg's great-grandchild
  ?alexander dbr:Alexander_of_W%C3%BCrttemberg ;
             rdfs:label ""Alexander of Württemberg""@en .
  
  ?child2 dbo:parent ?alexander .
  ?grandChild1 dbo:parent ?child2 .
  ?greatGrandChild dbo:parent ?grandChild1 .

  # Step 3: Find the predecessor of Carl, Duke of Württemberg
  ?carl dbr:Carl,_Duke_of_W%C3%BCrttemberg ;
        rdfs:label ""Carl, Duke of Württemberg""@en .
  
  ?predecessor dbo:succeededBy ?carl .

  # Find the common ancestor (child of Margarete Sophie and great-grandchild of Alexander)
  FILTER (?child1 = ?greatGrandChild)

  # Ensure the predecessor is related to the common ancestor
  OPTIONAL { ?commonAncestor dbo:parent ?predecessor }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:wikiPageWikiLink dbr:Poland .
  ?entity dbo:wikiPageWikiLink ?war .
  
  FILTER (
    ?war IN (dbr:Russo-Turkish_War_(1787–1792), dbr:War_of_the_Polish_Succession) # Adjust based on DBpedia's categorization
  )
}
```

### Explanation:
- **PREFIX**: Define the namespaces for DBpedia ontology and resources.
- **SELECT DISTINCT ?entity**: Retrieve distinct entities linked to both Poland and a war involving Suvorov.
- **FILTER**: Ensure the entity is linked to a specific war, adjusting based on how DBpedia categorizes the War of Alexander Suvorov.

This query assumes that the relevant wars are categorized under `dbr:Russo-Turkish_War_(1787–1792)` or similar. Adjust the filter as necessary based on actual DBpedia entries.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person dbo:occupation dbr:Photographer .
  ?person dbo:occupation dbr:Actor .
  ?work dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?work dbo:performer ?person .
  ?person foaf:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?musicalArtist ?region
WHERE {
  # Uncle Murda's band member
  dbr:Uncle_Murda dbo:member ?bandMember .

  # Musical artist from Florida with a specific birth name
  ?musicalArtist dbo:nationality dbr:United_States ;
                dbo:birthPlace dbr:Florida ;
                dbp:birthName ?birthName .
  
  # Coro de la Pontificia Universidad Católica de Puerto Rico's award region
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  ?award dbo:region ?region .
  FILTER (strstarts(str(?region), ""Puerto Rico"") || strstarts(str(?region), ""Florida""))
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Vasilyevich_Suvorov dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?leaderResidenceTenant
WHERE {
  # Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Commander involved in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice ;
             dbo:memberOf ?war .
  ?war rdfs:label ""Central_African_Republic_Civil_War""@en .

  # Leader's residence tenant from the 2003 Madrid City Council election
  ?leader dbo:residence ?residence .
  ?tenant dbo:office ?councilOffice ;
          dbo:memberOf ?election .
  ?election rdfs:label ""2003_Madrid_City_Council_election""@en .
  ?residence dbo:tenant ?tenant .

  # Ensure the tenant is an office holder
  ?tenant a dbo:OfficeHolder .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Determine his father
  ?father dbo:child ?philip .

  # Step 3: Find the spouse of that father
  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""National Party of Greece""@en .
  OPTIONAL { 
    ?party dbp:leader ?leader .
  }
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?decedent
WHERE {
  # Find the predecessor of Ada Watson
  ?ada a dbo:Person ;
       foaf:name ""Ada Watson"" ;
       dbo:successor ?predecessor .
  
  # Find Mark Tournier's birth place and ensure it is a settlement
  ?markTournier a dbo:Person ;
                foaf:name ""Mark Tournier"" ;
                dbo:birthPlace ?birthPlace .
  FILTER (dbo:Settlement ?birthPlace)

  # Find someone who died at the birth place of Mark Tournier
  ?decedent a dbo:Person ;
            dbo:deathPlace ?birthPlace .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:office ?office .
  FILTER EXISTS { ?office dbo:country dbr:Spain }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Color Me Dead""@en .
  ?movie dbo:starring ?actor .
  FILTER(LANG(?movie) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Roger Pryor"" .
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?father WHERE {
  # Step 1: Identify Constance of Burgundy
  dbr:Constance_of_Burgundy a dbo:Person .

  # Step 2: Find her spouse
  ?spouse dbo:spouse dbr:Constance_of_Burgundy .
  
  # Step 3: Child of the spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 4: Grandchild (child of the child)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Step 5: Ensure grandchild is royalty
  ?grandchild dbo:royalty true .

  # Step 6: Reference to William I who is royalty and office holder
  ?reference dbo:officeHolder dbr:William_I_of_Western_Frisia ;
             a dbo:Person .
  ?reference dbo:royalty true .

  # Step 7: Child of the reference, ensuring they are royalty
  ?childOfReference dbo:parent ?reference ;
                    a dbo:Person .
  ?childOfReference dbo:royalty true .

  # Step 8: Father relationship
  ?father dbo:child ?grandchild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
    # Step 1: Find the person born on 1979-11-03 who is a soccer player and manager
    ?person dbo:birthday ""1979-11-03""^^xsd:date ;
            rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

    # Step 2: Find films directed by Manuel Huerga
    ?film dbo:director dbr:Manuel_Huerga ;
          rdf:type dbo:Film .

    # Step 3: Find the actor in that film who is also a soccer player and athlete
    ?actor dbo:starringIn ?film ;
           rdf:type dbo:SoccerPlayer, dbo:Athlete .

    # Link the person from step 1 to the actor from step 3
    ?person dbp:alias ?actor .

    # Step 4: Get the team of the person identified in step 1
    ?person dbo:team ?team .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?warCommander WHERE {
  # George Pickett's political party affiliation
  dbr:George_Pickett dbo:politicalParty ?party .
  
  # Check if the party is Republican Party (United States)
  OPTIONAL { ?party rdfs:label ""Republican Party (United States)""@en . }
  
  # Wars where George Pickett was a commander
  OPTIONAL {
    dbr:George_Pickett dbo:commanderOf ?war .
    ?war rdf:type dbo:SocietalEvent .
  }

  BIND(dbr:George_Pickett AS ?partyMember)
  BIND(?war AS ?warCommander)
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent
WHERE {
    # Step 1: Find actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
    ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
    ?movie dbo:starring ?actor .

    # Step 2: Find spouse of Mariclare Costello
    dbr:Mariclare_Costello dbo:spouse ?spouse .

    # Step 3: Find child of that spouse
    ?spouse dbo:child ?child .

    # Step 4: Find parent of that child
    ?child dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ebrahimBirthplace ?utpalDuttBirthplace WHERE {
  # Ebrahim Alkazi's birthplace
  dbr:Ebrahim_Alkazi dbo:birthPlace ?ebrahimBirthplace .

  # Utpal Dutt, the actor of ""Akaler Shandhaney""
  dbr:Utpal_Dutt dbo:birthPlace ?utpalDuttBirthplace .
}
```",3,3,4,2,2,3,2,20,2,5,0,0.2857142857142857,1.0,0.4444444444444445
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?stuartArtist ?billyArtist
WHERE {
  # Find band members of The Alan Parsons Project
  ?bandMember dbo:memberOf dbr:The_Alan_Parsons_Project .

  # Find associated musical artists of Stuart McBeath Tosh
  OPTIONAL {
    ?stuart dbr:Stuart_McBeath_Tosh .
    ?stuart dbo:associatedMusicalArtist ?stuartArtist .
  }

  # Find associated musical artists of Billy Lyall
  OPTIONAL {
    ?billy dbr:Billy_Lyall .
    ?billy dbo:associatedMusicalArtist ?billyArtist .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?countryLabel ?rulingPartyLabel WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = ""20.116800000000001347""^^xsd:float)
  
  ?landmark dbo:locatedInCountry ?country .
  ?country rdfs:label ?countryLabel .

  OPTIONAL {
    ?party dbp:country ?country ;
           dbp:headOfGovernment ?leader .
    ?party rdfs:label ?rulingPartyLabel .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInCharleston ?forceOfAwardee ?warOfAmasaTracy
WHERE {
  # Entity in Charleston, South Carolina
  ?entityInCharleston dbo:location dbr:Charleston,_South_Carolina .

  # Gillmore Medal awardee and their force
  ?awardee dbp:award ""Gillmore Medal"" .
  ?awardee dbo:militaryUnit ?forceOfAwardee .

  # Amasa Tracy and the war he was involved in
  dbr:Amasa_Tracy dbo:participatedInWar ?warOfAmasaTracy .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""golden sword for bravery"")) .

  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  ?person dbo:memberOfBand ?band .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:SoccerManager ;
          dbo:teamManaged dbr:Hong_Kong_C_Team .
  
  FILTER EXISTS { 
    ?player a dbo:SportsManager .
  }
  
  ?yeJiaPlayer a dbo:AssociationFootballPlayer ;
               dbo:playsFor dbr:Ye_Jia .
  
  FILTER (?player = ?yeJiaPlayer)
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region
WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Japan Standard Time""@en .
  ?timeZone dbp:country ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?band ?profession
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:aliasName ?alterEgo .

  # Robert Lamar Thompson's band
  OPTIONAL {
    dbr:Robert_Lamar_Thompson dbo:musicalArtistBand ?band .
  }

  # Sam Concepcion's profession
  OPTIONAL {
    dbr:Sam_Concepcion dbo:profession ?profession .
  }
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?club WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .

  ?managerRole dbo:agent ?person ;
               dbo:team ?club .
  
  ?club a dbo:SoccerClub ;
        dbo:sportSeason ?season .

  ?season a dbo:SportsSeason, dbo:TeamSeason .
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandName WHERE {
  # Find musical associations for Nick Curran
  OPTIONAL {
    ?nickCurran a dbo:MusicalArtist ;
                foaf:name ""Nick Curran"" .
    ?association dbo:associatedBandOrMusicalArtist ?associatedArtist .
    FILTER (?nickCurran = ?association)
  }
  
  # Find the band associated with Kim Wilson and its real name
  OPTIONAL {
    ?kimWilson a dbo:MusicalArtist ;
               foaf:name ""Kim Wilson"" .
    ?band dbo:leadMember ?kimWilson ;
          dbo:name ?bandName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?uncleMurda a dbo:MusicalArtist ;
              rdfs:label ""Uncle Murda""@en .
  
  OPTIONAL { 
    ?group dbo:member ?bandMember .
    ?uncleMurda dbp:associatedBand ?group .
  }
  
  FILTER (lang(?uncleMurdaLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # The Shadow's alter ego
  dbr:Lamont_Cranston a dbo:Person .

  # Actor in a movie that is a television show with Richard E. Grant
  ?movie dbo:starring dbr:Richard_E._Grant ;
         dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:label ""Television film""@en . }
  
  ?actor dbo:starring ?movie .

  # Professional in the profession of Shatrughan Sinha
  dbr:Shatrughan_Sinha a dbo:Actor ;
                      dbo:profession ?profession .
  FILTER EXISTS { ?profession rdfs:label ""Politician""@en } .
  
  ?actor dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?carolynJonesDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  
  # Carolyn Jones' death place
  dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify the commander in the Third Taiwan Strait Crisis
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInMilitaryOperation dbr:Third_Taiwan_Strait_Crisis .

  # Step 2: Find works associated with Hillary Clinton that are books
  ?work dbo:author ?author ;
        rdf:type dbo:Book ;
        dbo:wikiPageRedirects dbr:Hillary_Clinton .

  # Step 3: Determine if any authors of these books are politicians and office holders
  ?author a dbo:Politician, dbo:OfficeHolder .

  # Step 4: Retrieve the spouse of such an author
  ?author dbp:spouse ?spouse .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Find the Gillmore Medal resource
  ?medal a dbo:Award ;
         rdfs:label ""Gillmore Medal""@en .
  
  # Find awardees of the Gillmore Medal
  ?awardEvent dbo:recipient ?awardee ;
              dbo:award ?medal .

  OPTIONAL {
    # Check if there is any force related to the awardee
    ?awardee dbo:fieldOfStudy ?force .
  }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Tisha Sterling's resource
  dbr:Tisha_Sterling dbo:parent ?parent .

  # Get the birth name of one of her parents
  ?parent dbo:birthName ?birthName .

  # Find a person with that birth name
  ?person dbo:birthName ?birthName .
}
```

This query assumes:
- Tisha Sterling's DBpedia resource is `dbr:Tisha_Sterling`.
- The ontology properties used are `dbo:parent` for parent relationships and `dbo:birthName` for the birth names of individuals.",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Human Remains (band)""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?darrylProfession ?elormAssociatedArtist WHERE {
  # Find Darryl Paa Kwesi Bannerman-Martin and check if he is a musician
  ?darryl dbo:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  OPTIONAL { ?darryl dbo:occupation ?darrylProfession . FILTER(CONTAINS(LCASE(?darrylProfession), ""musician"")) }

  # Find Elorm Kabu Amenyah and his associated musical artist
  ?elorm dbo:name ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?elorm dbp:associatedMusicalArtist ?elormAssociatedArtist }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # T.I.'s album containing a song and musical work
  ?album dbo:artist dbr:T.I. ;
         dbo:song ?song .
  ?song dbo:title ?title .

  # Actor of Shelby Oaks
  dbr:Shelby_Oaks dbo:actor ?actor .

  # Find the professional name that matches all criteria
  ?actor foaf:name ?professionalName .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?birthPlace WHERE {
  dbr:Uncle_Murda dbo:member ?bandMember .

  ?bandMember dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbo:Region .
  ?birthPlace dbo:country dbr:United_States .
  ?birthPlace rdf:type dbo:State .
  ?birthPlace rdf:type dbo:Settlement .

  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?coro dbo:location dbr:Puerto_Rico .

  ?birthPlace dbo:country dbr:Puerto_Rico .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?place rdfs:label ""Duchy of Schleswig""@en .
  ?place dbo:mayor ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?author WHERE {
  # Find George Ducas in DBpedia
  dbr:George_Ducas a dbo:Writer .
  
  # Get works by George Ducas
  ?work dbo:writer dbr:George_Ducas ;
        a dbo:CreativeWork .

  # Get authors of those works (in case they have multiple contributors)
  ?work dbo:author ?author .
}
```

This query does the following:

- It identifies ""George Ducas"" as an instance of `dbo:Writer`.
- It retrieves all creative works (`dbo:CreativeWork`) associated with George Ducas.
- For each work, it finds the author(s) using the `dbo:author` property.

Note: The resource identifier for George Ducas (`dbr:George_Ducas`) should be verified in DBpedia to ensure accuracy. If George Ducas has a different or more specific URI, you would need to adjust that part of the query accordingly.",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""George Ducas""@en .
  ?artist dbo:work ?work .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person dbo:name ""Álvaro Quirós""@en .
  ?person dbo:residence ?residence .
  FILTER EXISTS { ?residence rdf:type dbo:Country }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the father of Baeda Maryam I
  ?father dbo:spouse ?mother .
  ?baedaMaryamI dbo:parent ?father ;
                rdfs:label ""Baeda Maryam I""@en .

  # Identify the alter ego of The Shadow
  ?alterEgo rdfs:label ""The Shadow""@en .

  # Find the commander in Siege of Mukha who is royalty and has an alter ego as The Shadow
  ?commander dbo:event dbr:Siege_of_Mukha ;
             dbo:nationality ?nationality ;
             dbo:parent ?father ;
             rdfs:label ?labelCommander .
  
  FILTER CONTAINS(LCASE(?labelCommander), ""royalty"") .

  # Ensure the commander's alter ego is The Shadow
  ?commander dbr:The_Shadow_Alter_Ego ?alterEgo .

  # Find the child of this parent if they are royalty
  ?child dbo:parent ?father .
  FILTER CONTAINS(LCASE(?childLabel), ""royalty"") .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find John Cleese and his roles
  dbr:John_Cleese dbo:birthName ""Richard Grant Esterhuysen""@en .
  
  # Find actors in Ab Kya Hoga who are also politicians
  ?person dbp:profession dbr:Politician ;
          dbo:actorIn dbr:Ab_Kya_Hoga .

  # Find movies that are television shows involving these actors
  ?movie dbo:genre dbr:Television_show ;
         dbo:starring ?actor .
  
  # Ensure the actor is also an actor in a movie that John Cleese acted in
  ?cleeseMovie dbo:starring dbr:John_Cleese ;
               dbo:starring ?actor .

  FILTER(?movie = ?cleeseMovie)
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:givenName ""Ferdinand"" .
  ?person dbo:familyName ""II"" .
  ?person dbo:title ""Holy Roman Emperor"" .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ceceBirthPlace ?governorBirthPlace WHERE {
  # Cece Bell's birthplace
  dbp:Cece_Bell dbo:birthPlace ?ceceBirthPlace .

  # Current governor of Virginia's birthplace
  ?governor a dbo:Governor ;
            dbp:stateOrProvince ""Virginia""@en ;
            dbo:birthPlace ?governorBirthPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Charles II of Naples""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find artists associated with Wizards of Waverly Place soundtrack
  ?soundtrack dbo:associatedMusicalArtist ?artist .
  FILTER(STRSTARTS(LCASE(?soundtrack), ""wizards_of_waverly_place_soundtrack""))

  # Ensure the artist is also a member of The Alan Parsons Project
  ?bandMember dbo:memberOf dbr:The_Alan_Parsons_Project ;
              owl:sameAs ?artist .

  # Ensure the artist is both a musical artist and an artist
  ?artist rdf:type dbo:MusicalArtist .
  ?artist rdf:type dbo:Artist .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maria_Anna_of_Bavary (dbo:birthYear) ""1574""^^xsd:gYear .
  
  ?mother dbo:spouse ?father . 
  ?mother dbo:child ?child .

  FILTER (?mother = dbr:Maria_Anna_of_Bavary)

  ?child a dbo:Monarch ;
         dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?alumnus dbo:child ?child .
  ?child a dbo:Politician .
}
```",2,3,3,2,1,3,3,71,6,34,1,0.15,0.8571428571428571,0.2553191489361702
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedBand
WHERE {
  # Find Nicholas Michael Curran by birth date
  ?curran a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .

  # Find bands associated with Nicholas Michael Curran
  ?association dbo:musicalArtist ?curran ;
               dbo:band dbr:The_Fabulous_Thunderbirds .
  
  # Get members of The Fabulous Thunderbirds
  ?member dbo:memberOfBand dbr:The_Fabulous_Thunderbirds .

  # Find bands associated with these members
  ?memberAssociation dbo:musicalArtist ?member ;
                     dbo:band ?associatedBand .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?theme ?figureName WHERE {
  # Find the settlement based on its descriptions and location in Pakistan
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Pakistan ;
              rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""heart of pakistan"") ||
         CONTAINS(LCASE(?label), ""paris of the east"") ||
         CONTAINS(LCASE(?label), ""city of gardens"") ||
         CONTAINS(LCASE(?label), ""city of literature""))
  
  # Find a figure native to this settlement
  ?figure dbo:nativePlace ?settlement ;
          rdfs:label ?figureName .
  
  # Find the theme of Dikhawa associated with this figure or settlement
  OPTIONAL {
    ?dikhawaEvent dbo:theme ?theme .
    ?dikhawaEvent dbo:location ?settlement .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:sportTeamLeague dbr:Eredivisie .
  ?team rdfs:label ""SBV Vitesse""@en .
  ?season dbo:participatingTeams ?team ;
          dbo:seasonStartYear ?startYear ;
          dbo:seasonEndYear ?endYear .
  FILTER (?startYear = 2020 && ?endYear = 2021) .
  ?team dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa a dbo:Person .

  # Identify the military conflict (force) he was involved in as a commander
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander dbr:Manuel_Pinto_da_Costa .

  # Find the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Ensure the commander is an office holder and politician
  ?commander a dbo:Person ;
             dbo:officeHolder ?office ;
             rdf:type dbo:Politician .
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?leader dbo:partyMember dbr:Conservative_Party_(Spain);
          a dbo:Politician;
          dbo:office ?office.

  # Ensure the office is linked to Alberto Ruiz-Gallardón's residence
  ?office dbo:location dbr:Residence_of_Alberto_Ruiz-Gallardon.

  # Ensure the office is also linked to Mariano Rajoy's office
  ?office dbo:location dbr:Office_of_Mariano_Rajoy.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfSara ?royalChild ?parentOfRoyalChild
WHERE {
  # Find Princess Sara bint Faisal's parent
  ?sara a dbo:Person ;
        rdfs:label ""Princess Sara bint Faisal""@en .
  
  OPTIONAL { 
    ?sara dbo:child ?child .
    ?child dbo:parent ?parentOfSara .
  }
  
  # Find Prince Faisal bin Hussein's royal child
  ?faisal a dbo:Person ;
          rdfs:label ""Prince Faisal bin Hussein""@en .
  
  ?faisal dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royal .

  # Find the parent of the royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace WHERE {
  # Find the resource for ""Color Me Dead""
  ?movie rdfs:label ""Color Me Dead""@en .
  
  # Get the actors of this movie
  ?movie dbo:starring ?actor .

  # Filter to ensure we only consider actors who have a death place listed
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  
  FILTER (BOUND(?deathPlace))
}
```",2,2,3,2,1,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT ?country WHERE {
  ?person rdfs:label ""Dawid Olejniczak""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type schema:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,1,108,0.0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace WHERE {
  ?award dbo:wikiPageRedirects dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?person .
  
  ?person dbo:nationality dbr:Japan .
  ?person dbp:birthPlace ?birthPlace .
}
```

This query does the following:
- Uses `dbo:wikiPageRedirects` to find awards related to ""Anita Borg Institute Women of Vision Awards"".
- Retrieves recipients (`?person`) of these awards.
- Filters recipients by nationality, specifically those with Japanese nationality (`dbr:Japan`).
- Selects the birthplace (`dbp:birthPlace`) of these filtered individuals.",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadow WHERE {
  # Find Lamont Cranston
  ?lamontCranston a dbo:Agent ;
                  rdfs:label ""Lamont Cranston""@en .
  
  # Find The Shadow as the alter ego of Lamont Cranston
  ?shadow dbo:alterEgoOf ?lamontCranston ;
          rdfs:label ""The Shadow""@en .

  # Yeshaq I and his child Baeda Maryam I
  ?yeshaqI a dbo:Monarch ;
           dbo:child ?baedaMaryamI ;
           rdfs:label ""Yeshaq I""@en .
  
  ?baedaMaryamI a dbo:Monarch ;
                dbo:parent ?yeshaqI ;
                rdfs:label ""Baeda Maryam I""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?tenantResidence ?officeCommander
WHERE {
  # Leader of Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:partyMemberOf dbr:Conservative_Party_(Spain) .
  
  ?leader dbo:holdsOffice ?officeLeader .

  # Tenant of Alberto Ruiz-Gallardón's Residence
  ?tenant dbo:residence dbr:Alberto_Ruiz-Gallardón_Residence .
  
  ?tenant a dbo:Politician ;
          dbo:holdsOffice ?tenantResidence .

  # Commander in Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?officeCommander ;
             dbo:involvedIn dbr:Central_African_Republic_Civil_War_(2012–present) .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his child
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # The grandchild who is royalty and parent of Charles Martel of Anjou
  ?grandchild dbo:parent ?belavChild ;
              a dbo:Monarch ;  # Assuming royalty means being a Monarch
              dbo:child dbr:Charles_Martel_of_Anjou .
  
  # The spouse relationship involving Philip, Despot of Romania
  ?philipParent dbo:child ?philipDespot .
  ?grandchild dbo:spouse ?fatherOfPhilipParent .
  ?fatherOfPhilipParent dbo:parent ?philipParent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceCountry ?administrationTenant
WHERE {
  # Find Álvaro Quirós's residence country
  ?person dbo:nationality dbr:Spain .
  ?person foaf:name ""Álvaro Quirós"" .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .

  BIND(?residence AS ?residenceCountry)

  # Find the administration tenant of PSOE
  ?party dbo:country dbr:Spain .
  ?party foaf:name ""Spanish Socialist Workers' Party"" .
  ?administration dbo:member ?party .
  ?administration dbo:head ?tenant .

  FILTER EXISTS { ?tenant dbo:nationality dbr:Spain }

  BIND(?tenant AS ?administrationTenant)
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?actorLabel ?musicianLabel
WHERE {
  ?person a dbo:Actor .
  ?person rdfs:label ?actorLabel .
  
  ?person a dbo:Musician .
  ?person rdfs:label ?musicianLabel .

  FILTER (lang(?actorLabel) = 'en' && lang(?musicianLabel) = 'en')
}
ORDER BY ?person
```

This query retrieves individuals who are both actors and musicians, displaying their labels in English. You can replace `dbo:Musician` with the appropriate class for any other profession you have in mind.",2,2,3,1,2,3,3,71,0,0,4210,0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify the actor from ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Find the spouse of this actor
  ?actor dbp:spouse ?spouse .

  # Step 3: Check if the spouse is a member of the ruling party in a country with a landmark at elevation 20.1168 meters
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:locationCountry ?country .
  
  ?party dbo:country ?country ;
         dbo:isRulingParty true .

  ?spouse dbp:politicalAffiliation ?party .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?writer WHERE {
  # Find the soundtrack resource
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writer .
  
  # Ensure the writer is also a musical artist
  ?writer rdf:type dbo:MusicalArtist .

  # Ensure the writer is also an artist
  ?writer rdf:type dbo:Artist .
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` for DBpedia ontology classes.
  - `dbr:` for DBpedia resources.
  - `rdf:` for RDF type.

- **SELECT DISTINCT ?writer**: We are interested in distinct writers associated with the soundtrack.

- **dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writer**: This line finds individuals who have a composer role related to the ""Wizards of Waverly Place"" soundtrack.

- **?writer rdf:type dbo:MusicalArtist**: Ensures that the writer is classified as a musical artist.

- **?writer rdf:type dbo:Artist**: Ensures that the writer is also classified as an artist.

This query captures the intent by ensuring the individual meets all specified roles and associations.",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:memberOfBand ?band .
}
```

This query does the following:
- Uses `rdfs:label` to find the resource for ""Kim Wilson"" in English.
- Assumes a property like `dbo:memberOfBand` (or similar) links Kim Wilson to a band. You might need to adjust this based on actual DBpedia schema if it differs.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfBirthplaceCountry ?nativeOfJamshedpur
WHERE {
  # Shobhna Samarth's birthplace
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .
  
  # Find native of the birthplace country
  ?nativeOfBirthplaceCountry dbo:nativePlace ?birthPlace .

  # Native of Jamshedpur
  dbr:Jamshedpur dbo:nativePlace ?nativeOfJamshedpur .
}
```",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Doctor .
  ?professional foaf:name ?name .
  FILTER (CONTAINS(LCASE(?name), ""medicine""))
}
LIMIT 10
```

This query assumes you are looking for doctors associated with the field of medicine. It selects professionals who have a type of `dbo:Doctor` and whose names contain the word ""medicine."" Adjustments can be made based on more specific requirements or different fields.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Identify Grant Heslov by his birth name and profession
  ?person a dbo:Actor ;
          foaf:name ""Grant Heslov"" ;
          foaf:birthdayYear ?birthYear .
  
  FILTER EXISTS { ?person foaf:givenName ""Richard"" }
  FILTER EXISTS { ?person foaf:surname ""Esterhuysen"" }

  # Find movies or TV shows associated with Grant Heslov
  ?work dbo:starring ?person ;
        a ?type .

  # Check if the work is both a movie and a television show
  VALUES ?type { dbr:Film dbr:TelevisionShow }

  # Retrieve actors of that particular work
  ?work dbo:starring ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac's role in the Battle of Vienna
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commanderOf dbr:Battle_of_Vienna .

  # Find successors who are politicians and office holders
  ?successor dbo:commanderOf dbr:Battle_of_Vienna .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .

  # Ensure the successor is distinct from Michał Kazimierz Pac
  FILTER (?successor != dbr:Micha%C5%82_Kazimierz_Pac)
}",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKimWilson ?artistNickCurran WHERE {
  # Find the band associated with Kim Wilson
  OPTIONAL {
    ?kimWilson dbo:associatedBand ?bandKimWilson .
    FILTER EXISTS { ?bandKimWilson rdfs:label ""The Fabulous Thunderbirds""@en }
  }

  # Find the musical artist associated with Nick Curran
  OPTIONAL {
    ?nickCurran dbo:associatedMusicalArtist ?artistNickCurran .
  }

  # Bind Kim Wilson and Nick Curran to their respective DBpedia resources
  VALUES (?kimWilson ?nickCurran) {
    (dbr:Kim_Wilson dbr:Nick_Curran)
  }
}
```",3,3,4,1,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?stuartToshAssociatedArtist ?billyLyallAssociatedArtist WHERE {
  # Find Stuart Tosh's association with The Alan Parsons Project
  OPTIONAL { 
    ?stuartTosh dbo:associatedBand dbr:The_Alvin_Lee_Project .
    FILTER(CONTAINS(LCASE(STR(?stuartTosh)), ""stuart tosh""))
  }
  
  # Find associated musical artist for Stuart Tosh
  OPTIONAL {
    ?stuartTosh dbo:associatedMusicalArtist ?stuartToshAssociatedArtist .
  }

  # Find associated musical artist for Billy Lyall
  OPTIONAL {
    ?billyLyall dbo:associatedMusicalArtist ?billyLyallAssociatedArtist .
    FILTER(CONTAINS(LCASE(STR(?billyLyall)), ""billy lyall""))
  }
}
```",3,3,4,1,3,2,3,28,1,55858,0,1.790221808482071e-05,1.0,3.580379520229144e-05
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Na'od's father
  ?naod dbr:Na'od ;
        dbo:spouse ?parent1 .
  
  # Parent of the commander
  ?commander dbr:CommanderInSiegeOfMukha ;
             dbo:spouse ?parent2 .

  # Commander's parent (child of this person)
  ?parent2 dbo:child ?parent3 .

  # Na'od's father's father (grandfather)
  ?parent1 dbo:child ?naod .
  ?parent1 dbo:child ?parent4 .
  
  # Grandfather is a royalty and office holder
  ?parent4 dbo:spouse ?officeHolder ;
           rdf:type dbo:Monarch .

  # Linking grandfather to Na'od's father
  ?parent4 dbo:child ?parent1 .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Mudvayne""@en .
  
  ?band dbo:bandMember ?member .
}
```

This query does the following:
- It looks for an entity that is of type `dbo:Band` and has the label ""Mudvayne"" in English.
- It then finds individuals who are members of this band using the property `dbo:bandMember`.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Maria I of Portugal
  dbr:Maria_I_of_Portugal a dbo:Person .

  # Find ""The Force"" as a television show
  OPTIONAL { 
    ?tvShow a dbo:TelevisionSeries ;
            rdfs:label ""The Force""@en .
    FILTER (lang(?tvShowLabel) = 'en')
  }

  # Find ""The Force"" as a military conflict
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ""The Force""@en .
    FILTER (lang(?conflictLabel) = 'en')
  }

  # Check if Maria I of Portugal is related to either the TV show or the military conflict
  OPTIONAL { 
    ?force dbr:Maria_I_of_Portugal dbo:spouseOrPartner ;
           a ?tvShow .
  }
  OPTIONAL {
    ?force dbr:Maria_I_of_Portugal dbo:spouseOrPartner ;
           a ?conflict .
  }

  # Return the resource that matches both conditions
  FILTER (?tvShow || ?conflict)
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  # William I of Sicily's child who is royalty
  ?child dbo:parent dbr:William_I_of_Sicily ;
         rdf:type dbo:Monarch .

  # This child must be the grandchild of Constance of Burgundy's spouse (who is royalty)
  ?spouse dbo:spouse dbr:Constance_of_Burgundy ;
          rdf:type dbo:Monarch .
  
  ?grandparent dbo:child ?spouse .
  ?child dbo:parent ?grandparent .

  # Find the father of this child
  ?father dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Helena, Archduchess of Austria""@en .
  FILTER NOT EXISTS { ?spouse rdfs:label ?label . FILTER (lang(?label) != ""en"") }
  
  # Ensure the spouse is a royalty
  ?spouse rdf:type ?type .
  VALUES ?type {
    dbo:Monarch
    dbo:RoyalFamilyMember
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeRegion WHERE {
  # Find bands from New York with a member named Ackquille Jean Pollard who is also in Uncle Murda
  ?band dbo:location dbr:New_York_(state) .
  ?bandMember dbo:memberOf ?band ;
              foaf:name ""Ackquille Jean Pollard""@en .
  ?bandMember dbo:memberOf dbr:Uncle_Murda .

  # Find awards associated with these bands
  ?award dbo:recipient ?band .

  # Determine the native region of these awards, ensuring it is both a region and a state/settlement in America
  ?award dbo:nativeRegion ?nativeRegion .
  ?nativeRegion rdf:type dbo:State ;
                dbo:country dbr:United_States_of_America ;
                dbo:settlement true .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find the actor of ""1,000 Dollars a Minute""
  {
    SELECT ?actor WHERE {
      ?movie dbo:title ""1,000 Dollars a Minute""@en .
      ?movie dbo:starring ?actor .
    }
  }

  UNION

  # Find Harriette Arlene Lake
  {
    SELECT ?person WHERE {
      ?person foaf:name ""Harriette Arlene Lake"" .
    }
  }

  # Get the spouse of either the actor or Harriette Arlene Lake
  {
    ?individual dbo:spouse ?spouse .
    FILTER (?individual = ?actor || ?individual = ?person)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?calderForce ?bayneWar ?campaignCommander
WHERE {
  # Find military force associated with Robert Calder
  ?calderForce a dbo:MilitaryConflict ;
               dbo:commander dbr:Robert_Calder ;
               rdf:type dbo:SocietalEvent .

  # Find military conflict (war) associated with William Bayne
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:commander dbr:William_Bayne ;
            rdf:type dbo:Event .

  # Find commander of the French Campaign in Egypt and Syria
  ?campaignCommander dbo:commanderOf dbr:French_campaign_in_Egypt_and_Syria .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Player in the film who is also a soccer player and athlete
  ?player dbo:actor ?film ;
          a dbo:SoccerPlayer, dbo:Athlete .

  # Juan Carlos Molina's team
  ?team dbo:member dbr:Juan_Carlos_Molina_(footballer) .
  
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person dbp:birthday ""1979-11-03""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  # The person must be in the same team as Juan Carlos Molina
  ?team dbo:member ?person .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:stateOrProvince dbr:Florida .
  ?bandMemberRelation dbo:member dbr:Bobby_Shmurda .
  ?bandMemberRelation dbo:member ?person .
  ?person a dbo:MusicalArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find band members of Uncle Murda
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  
  # Ensure the person is a native of Florida
  ?bandMember dbo:nativePlace dbr_Florida .

  # Ensure the person's birth name matches their native status
  ?bandMember dbp:birthday ?birthday .
  ?bandMember foaf:name ?birthName .
  
  # Ensure the person is a musical artist
  ?bandMember dbo:occupation dbr_Musical_artist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor in Rustlers' Rhapsody
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .

  # Ensure the same actor is known as The Shadow's alter ego
  ?alterEgo dbo:alias dbr:The_Shadow_Alter_Ego .
  ?alterEgo dbo:profession dbr:Actor .
  ?alterEgo foaf:name ?actorName .
  
  FILTER (?actor foaf:name = ?actorName)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?artist a dbo:Band ;
          rdfs:label ""Cavalera Conspiracy""@en .
  
  OPTIONAL { 
    ?artist dbo:bandMember ?member .
  }
}
```",2,3,3,2,1,3,2,20,1,1,88,0.5,0.011235955056179775,0.021978021978021976
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorShelbyOaks ?albumArtistWhatYouKnow
WHERE {
  # Find actors in the movie ""Shelby Oaks""
  dbr:Shelby_Oaks dbo:starring ?actorShelbyOaks .

  # Find the album of the song ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  
  # Find artists associated with that album
  ?album dbo:artist ?albumArtistWhatYouKnow .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person ?name WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER regex(?name, ""Darryl Paa Kwesi Bannerman-Martin"", ""i"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?writer WHERE {
  # Find the war that is both a television show and a societal event
  ?war dbo:type/dbo:subClassOf* dbr:War .
  ?war dbo:type/dbo:subClassOf* dbr:Television_Show .
  
  # Identify Jean Baptist, Comte d'Arco's role in the war
  ?role dbo:agent dbr:Jean_Baptist_Comte_d%27Arco ;
        dbo:position ?commander ;
        dbo:relatedTo ?war .

  # Find Yurii Khmelnytsky and his successor
  ?successorRelation dbo:successorOf dbr:Yurii_Khmelnytsky ;
                     dbo:predecessor ?yuriiKhmelnytsky ;
                     dbo:successor ?commander .

  # Identify the writer related to George Ducas
  ?work dbo:author dbr:George_Ducas .
  ?writer dbo:author ?work .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?leader dbo:partyLeaderOf dbr:National_Party_of_Greece .
  
  ?leader dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbp:title ""Earl of Derby""@en .
  
  # Find his children
  ?child dbo:spouseOrPartnerOf ?edward ;
         a dbo:Person .

  # Filter for the child who is a politician and an alumnus of Eton College
  ?child dbo:almaMater <http://dbpedia.org/resource/Eton_College> .
  ?child dbo:occupation dbp:Politician .

  # Retrieve the parent of this specific child
  ?parent dbo:spouseOrPartnerOf ?child ;
          a dbo:Person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?movie a dbo:Film .
  ?movie rdfs:label ""12 Strong""@en .
  FILTER (LANG(?movie) = 'en') .
  ?movie dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName ?awardee WHERE {
  # Janusz Kamiński's DBpedia resource
  VALUES ?januszKaminski { dbr:Janusz_Kamiński }

  # Find awards and nominations related to Janusz Kamiński
  ?award dbo:recipient ?januszKaminski .
  
  OPTIONAL {
    ?award dbo:awardee ?awardee .
  }
  
  FILTER(?awardee != ?januszKaminski) # Ensure the awardee is not Janusz Kamiński himself

  SERVICE <http://dbpedia.org/sparql> {
    ?award rdfs:label ?awardName .
    FILTER(LANG(?awardName) = 'en')
  }
}
ORDER BY ?awardName
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Find the grandchild of Duke Philipp of Württemberg
  ?grandparent a dbo:Duke ;
               foaf:name ""Philipp of Württemberg""@en .
  ?parent dbo:spouseOrPartnerOf ?grandparent ;
          dbo:child ?grandchild .

  # Step 2: Find the child of Philipp Albrecht and Archduchess Margarete Sophie
  ?philippAlbrecht a dbo:Duke ;
                   foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  ?margareteSophie a dbo:Archduchess ;
                   foaf:name ""Margarete Sophie of Austria""@en .
  ?child dbo:spouseOrPartnerOf ?philippAlbrecht ;
         dbo:spouseOrPartnerOf ?margareteSophie ;
         dbo:child ?descendant .

  # Step 3: Find the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Step 4: Ensure the predecessor is a descendant of the grandchild from step 1
  ?grandchild dbo:parentOf ?ancestor .
  ?ancestor dbo:parentOf ?result ;
            owl:sameAs ?predecessor .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # HMS ""Triumph"" and Battle of Cape Finisterre (1805)
  dbr:HMS_Triumph dbo:participatedIn dbr:Battle_of_Cape_Finisterre_1805 .
  
  # William Bayne's involvement
  dbr:William_Bayne dbo:militaryConflict dbr:Battle_of_Cape_Finisterre_1805 .

  # Commander of HMS ""Triumph"" and Battle of Cape Finisterre (1805)
  ?commander dbo:commanded dbr:HMS_Triumph .
  ?commander dbo:commanded dbr:Battle_of_Cape_Finisterre_1805 .

  # Commander involved in William Bayne's military conflict
  ?commander dbo:militaryConflict dbr:Battle_of_Cape_Finisterre_1805 .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polio dbo:birthday ?martyBirthday .

  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?aimarTeam .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthday ?athleteBirthday .
  
  FILTER (YEAR(?martyBirthday) = YEAR(?athleteBirthday) &&
          MONTH(?martyBirthday) = MONTH(?athleteBirthday) &&
          DAY(?martyBirthday) = DAY(?athleteBirthday))

  # Ensure the athlete is part of Pablo Aimar's team
  ?athlete dbo:team ?aimarTeam .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:citizenship dbr:Spain .
}
```",1,2,2,1,1,3,3,71,6,0,1544,1.0,0.003870967741935484,0.007712082262210797
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  dbr:Mariclare_Costello dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .
  ?child dbo:parent ?spouse .
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            foaf:name ?name .
  ?decedent dbo:parent ?spouse .
  ?movie dbo:starring ?decedent ;
         rdf:type dbo:Film .
  ?movie dbo:starring ?actor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfAwardee ?parentOfChild
WHERE {
  # Part 1: Parent of the Awardee of Rodney Lees' Award
  ?award dbo:recipient ?awardee .
  ?award dbo:recipientRodneyLees dbp:RodneyLees .
  ?awardee dbp:parent ?parentOfAwardee .

  # Part 2: Parent of the Child of Frederick Stanley, 16th Earl of Derby
  ?child dbo:childFrederickStanley dbp:FrederickStanley16thEarlOfDerby .
  ?child dbp:parent ?parentOfChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Identify Frédéric Bouraly's profession
  ?frédéricBouraly a dbo:Person ;
                  foaf:name ""Frédéric Bouraly""@en .
  
  ?frédéricBouraly dbo:profession ?profession .

  # Find other professionals with the same profession
  ?professional a dbo:Person ;
                dbo:profession ?profession .
  
  FILTER(?professional != ?frédéricBouraly)
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?character dbo:alterEgo ""The Shadow""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  ?character dbo:portrayedBy ?actor .
  ?movie dbo:title ?title .
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?role WHERE {
  dbr:Nashi_Parni a dbo:Band .
  
  ?bandMember dbo:memberOf dbr:Nashi_Parni ;
              a dbo:MusicArtist .

  OPTIONAL {
    ?bandMember foaf:name ""Aleksandr Filimonov""@en .
    ?bandMember dbo:role ?role .
  }

  BIND(?bandMember AS ?player)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birthplace of the current governor of Virginia
  ?governor a dbo:Governor ;
            dbp:stateOrTerritory ""Virginia"" ;
            dbo:birthPlace ?governorBirthPlace .

  # Birthplace of Vince Gilligan
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en ;
                 dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person .
  ?person dbo:givenName ""Philip"" ;
          dbo:familyName ""I, Prince of Taranto"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?frederickStanley ?politicianChild ?father
WHERE {
  # Step 1: Find the awardee of ""Commander of the Royal Victorian Order""
  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Step 2: Find the parent of this awardee
  ?parentOfAwardee dbo:child ?awardee .

  # Step 3: Identify Frederick Stanley, 16th Earl of Derby
  dbr:Fredrick_Stanley_16th_Earl_of_Derby dbo:child ?child .
  
  # Filter for the child who is a politician
  ?child dbo:occupation dbr:Politician .

  # Step 4: Determine the parent (father) of this child
  BIND(dbr:Fredrick_Stanley_16th_Earl_of_Derby AS ?frederickStanley)
  BIND(?child AS ?politicianChild)
  BIND(dbr:Fredrick_Stanley_16th_Earl_of_Derby AS ?father)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person a dbo:Politician ;
          dbo:officeHolder true .
  ?work dbo:author ?person ;
        a dbo:Book .
  ?event dbo:commander ?person ;
         rdfs:label ""Third Taiwan Strait Crisis""@en .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel
WHERE {
  dbr:The_Thirty_Years_War dbo:commander ?commander .
  
  ?commander rdfs:label ?commanderLabel .
  
  FILTER(LANG(?commanderLabel) = 'en')
}
ORDER BY ?commanderLabel
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce
WHERE {
  # Find William Bayne and his associated wars
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict ?war .
  
  # Ensure the war is both a military conflict and an event
  ?war a dbo:War ;
       a dbo:Event .

  # Find the military forces involved in these wars
  ?war dbo:participatingMilitaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Charles Parsons""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```

### Explanation:

- **Prefixes**: 
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `dbr:` is used for DBpedia resources (like specific people or awards).
  - `foaf:name` is used to specify the name of a person.

- **SELECT Clause**: We are selecting the variable `?award`, which represents any award associated with Charles Parsons.

- **WHERE Clause**:
  - We look for an entity (`?person`) that is a type of `dbo:MilitaryPerson`.
  - The `foaf:name` property is used to match ""Charles Parsons"" in English.
  - An optional pattern is used to find if this person has any awards linked via the `dbo:award` property.

This query assumes that Charles Parsons is represented as a military person in DBpedia and that his awards are directly linked through the `dbo:award` property. Adjustments might be needed based on how data is structured in DBpedia.",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Emilia_(Bulgarian_singer) dbo:memberOf ?band .
  
  ?band dbo:member ?bandMember .
  
  FILTER NOT EXISTS { 
    ?bandMember rdfs:label ""Emilia (Bulgarian singer)""@en .
  }
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?spouseOfCharlesII
WHERE {
  OPTIONAL { 
    dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .
  }

  OPTIONAL { 
    dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?show rdf:type dbo:TelevisionShow .
  ?show rdfs:label ""Coke Studio Philippines""@en .
  OPTIONAL { ?show dbo:producer ?producer . }
}
```

This query does the following:
- It looks for a resource of type `dbo:TelevisionShow` with an English label ""Coke Studio Philippines.""
- It attempts to find any associated producer using the property `dbo:producer`.

Note that the exact property might vary, and additional exploration in DBpedia may be necessary if this query does not return results. You might need to adjust the properties based on available data.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInResidenceCountry
WHERE {
  # Find a person who is native to Łódź, Poland, and is an athlete
  ?person dbo:nationality dbr:Poland ;
          dbo:birthPlace dbr:Łódź ;
          dbo:occupation dbr:Athlete .

  # Find wars associated with Alexander Suvorov
  ?suvorovWar dbo:participatedIn dbr:Alexander_Suvorov .
  
  # Determine the residence country of the person found above
  ?person dbo:residenceCountry ?country ;
          dbp:birthPlace dbr:Łódź .

  # Ensure the entity in the residence is a country
  ?entityInResidenceCountry rdf:type dbo:Country ;
                            rdfs:label ?countryLabel .
  
  FILTER (lang(?countryLabel) = 'en')
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent
WHERE {
  # Find the actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  # Find the parent of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?officeCommander
WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOf ?party .
  
  # Find the leader of that party and their office
  ?leader dbo:positionHeldBy ?party ;
          a dbo:Politician ;
          dbo:officeHolder ?officeLeader .

  # Find a commander in the Central African Republic Civil War
  ?commander a dbo:Commander ;
             dbo:officeHolder ?officeCommander ;
             dbo:participatedIn dbr:Central_African_Republic_Civil_War_(2012–present) .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?actor WHERE {
  dbr:Doon_Arbus dbo:child dbr:?Parent .
  
  ?Parent rdf:type dbo:Person .

  ?Movie dbo:starring ?Actor .
  ?Actor rdf:type dbo:Person .
  
  ?Movie rdf:type dbo:Film .
  
  ?Actor dbp:deathPlace dbr:Los_Angeles .

  BIND(?Parent AS ?parent)
  BIND(?Actor AS ?actor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan's award awardee (Breaking Bad)
  OPTIONAL {
    ?award dbr:Vince_Gilligan dbo:recipient .
    ?award dbo:category dbr:Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composition .
    ?person dbo:award ?award .
    ?person dbo:birthPlace ?birthPlace .
  }

  # Cece Bell, author of El Deafo
  OPTIONAL {
    ?book dbo:author dbr:Cecily_Bell .
    ?book rdfs:label ""El Deafo""@en .
    ?person dbr:Cecily_Bell .
    ?person dbo:birthPlace ?birthPlace .
  }

  # Glenn Youngkin
  OPTIONAL {
    ?person dbr:Glenn_Youngkin .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?partyMember ?personWithBirthName
WHERE {
  # Part 1: Spouse of Roger Pryor (actor)
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .

  # Part 2: Party member of the ruling party in Central, Louisiana
  # Assuming we have a way to identify the ruling party, e.g., via a known resource or property
  ?rulingParty dbp:rulingPartyIn dbr:Central,_Louisiana .
  ?partyMember dbo:memberOf ?rulingParty .

  # Part 3: Person born as Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ""Anne Sothern""^^xsd:string .
  ?personWithBirthName dbo:birthName ""Anne Sothern""^^xsd:string .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?show afeezOyetoro:actedInActor dbr:Afeez_Oyetoro .
  ?show dbo:type dbr:Film .
  ?show dbo:starring ?actor .
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant
WHERE {
  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  
  # Office of the leader of the Conservative Republican Party (Spain)
  dbr:Conservative_Party_(Spain) dbo:leader ?leader .
  ?leader dbo:officeLocation ?office .

  # Common tenant who is a politician
  ?tenant dbo:residence ?residence ;
          dbo:officeLocation ?office ;
          rdf:type dbo:Politician .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person rdfs:label ""$pacely""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace ?glennYoungkinBirthPlace
WHERE {
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .

  # Cece Bell, author of ""El Deafo"", American birthplace
  dbr:Cecily_Bell dbo:nationality dbr:United_States ;
                  dbp:birthPlace ?ceceBellBirthPlace .
  
  # Glenn Youngkin's birthplace
  dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?charge rdf:type dbo:MilitaryOperation .
  ?charge rdfs:label ""Pickett's Charge""@en .
  
  ?charge dbo:participatedIn ?battle .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .

  FILTER (lang(?chargeLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?award dbo:recipient dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?award dbo:profession dbr:Actress .
  ?award dbo:nativePlace ?nativePlace .
  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativePlace a dbo:Settlement } &&
          EXISTS { ?nativePlace dbo:country dbr:United_States_of_America })
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find persons who died at this location
  ?decedent dbo:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,3,28,906,0,0,1.0,1.0,1.0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Commander of the 2nd Dragoon Regiment (France)
  ?regiment dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?regiment), ""http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)""))

  # War that is a societal event, an event, and a television show
  ?war dbo:participatingUnit ?regiment ;
       rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event ;
       dbo:televisionShow ?tvShow .

  # Commander participated in the war
  ?commander dbo:participatedInWar ?war .

  # Child of Ferdinand II, Holy Roman Emperor
  ?child dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  FILTER(?commander = ?child)

  # Father of the child of Ferdinand III, Holy Roman Emperor
  ?grandchild dbo:parent ?commander ;
              dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?renetaBirthplace ?alumnus ?alumnusBirthplace
WHERE {
  # Reneta Kamberova's birthplace
  dbr:Reneta_Kamberova dbo:birthPlace ?renetaBirthplace .

  # An alumnus of Пловдивски университет „Паисий Хилендарски“ and their birthplace
  ?alumnus dbo:almaMater dbr:Пловдивски_университет_„Паисий_Хилендарски“ .
  ?alumnus dbo:birthPlace ?alumnusBirthplace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  ?child dbo:parent dbr:Princess_Muna_al-Hussein .
  ?child dbo:royalty ?true .

  ?grandchild dbo:parent ?child .
  ?grandchild dbo:royalty ?true .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?person { dbr:George_Hamilton_Cameron }
  
  # Find references through wikiPageWikiLink (links to other Wikipedia pages)
  ?person dbo:wikiPageWikiLink ?reference .
  
  # Optionally, find works authored by him
  OPTIONAL {
    ?work dbo:author ?person .
    ?work dbo:wikiPageRedirects ?reference .
  }
}
```

This query does the following:
- It identifies George Hamilton Cameron using his DBpedia resource identifier.
- It retrieves entities linked to him via `dbo:wikiPageWikiLink`, which are Wikipedia pages he is directly linked to.
- Optionally, it considers works authored by him and any redirects associated with those works.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?war a dbo:War .
  
  # War is related to a disease
  ?war dbo:relatedToDisease ?disease .

  # War is a societal event
  ?war dbo:societalEvent true .

  # Commander of the war for the United States Navy
  ?commander dbo:commandedBy dbr:United_States_Navy .
  ?commander dbo:commandedWar ?war .
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Find Cece Bell's birthplace
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .

  # Find the current governor of Virginia and their birthplace
  OPTIONAL {
    SELECT ?currentGovernor WHERE {
      ?currentGovernor a dbo:GubernatorialCandidate ;
                      dbo:stateOrTerritory dbr:Virginia ;
                      dbo:electionYear ?year .
      FILTER (?year >= 2020) # Assuming the current year is 2023 or later
    }
    OPTIONAL { ?currentGovernor dbo:birthPlace ?governorBirthPlace . }
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  VALUES ?region { 
    dbr:Bulgaria 
    dbr:Estonia 
    dbr:Finland 
    dbr:Greece 
    dbr:Hungary 
    dbr:Lithuania 
    dbr:Moldova 
    dbr:Poland 
    dbr:Romania 
    dbr:Russia 
    dbr:Ukraine
  }
  
  ?person dbo:nationality ?region .
  ?person a dbo:Person .

  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",3,4,4,3,1,3,2,20,56,5564,86,0.0099644128113879,0.39436619718309857,0.019437695244706697
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderOffice ?leaderOffice
WHERE {
  # Office of the commander in Central African Republic Civil War
  ?commanderOffice dbo:officeHolder ?person .
  ?person a dbo:Politician ;
          dbo:memberOf dbr:Central_African_Republic_Civil_War .

  # Person is also a tenant of Madrid
  ?person dbo:residence dbr:Madrid .

  # Office of the leader of a political party associated with Miguel Maura
  ?leaderOffice dbo:officeHolder ?politician .
  ?politician a dbo:Politician ;
              dbo:memberOf ?party .
  ?party dbo:foundingMember dbr:Miguel_Maura .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamAimar ?teamMolina ?actorAthlete
WHERE {
  # Pablo Aimar's team
  dbr:Pablo_Aimar dbo:playsFor ?teamAimar .

  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?teamMolina .

  # Actor in ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actorAthlete dbo:spouseOrPartner ?allOrNothingRole .
  ?allOrNothingRole dbo:title dbr:All_or_Nothing:_Manchester_City .
  ?actorAthlete dbo:occupation dbr:Soccer_player .
  ?actorAthlete dbo:occupation dbr:Athlete .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickCurranArtist ?fabulousThunderbirdsRealName ?claptonsBandMemberBand 
WHERE {
  # Part 1: Associated Musical Artist of Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  }

  # Part 2: Real Name of The Fabulous Thunderbirds
  OPTIONAL {
    dbr:The_Fabulous_Thunderbirds dbo:member ?fabMember .
    ?fabMember foaf:name ?fabulousThunderbirdsRealName .
  }
  
  # Part 3: Band of a Band Member of Eric Clapton
  OPTIONAL {
    dbr:Eric_Clapton dbo:bandMember ?claptonsBandMember .
    ?claptonsBandMember dbo:memberOf ?claptonsBandMemberBand .
  }
}
```",5,5,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?nativeCountry WHERE {
  # Find manager of VfL Bochum in the 2007–08 season
  ?vflBochum dbr:VfL_Bochum .
  ?vflBochum dbp:season200708Manager ?manager .

  # Find manager of SBV Vitesse in the 2020–21 season
  ?sbVVitesse dbr:SBV_Vitesse .
  ?sbVVitesse dbp:season202021Manager ?manager .

  # Ensure the manager is a sports club and organization, specifically a soccer club
  ?manager dbo:type dbr:Soccer_club .

  # Find native country of the manager
  ?manager dbo:nationality dbr:West_Germany .
  
  # Get manager's name
  ?manager rdfs:label ?managerName .
  
  # Get native country label
  dbr:West_Germany rdfs:label ?nativeCountry .

  FILTER (lang(?managerName) = 'en')
  FILTER (lang(?nativeCountry) = 'en')
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personDecedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find people who were natives of both Grand Duchy of Finland and Russian Empire
  ?personDecedent dbp:nativeOf dbr:Grand_Duchy_of_Finland ;
                  dbp:nativeOf dbr:Russian_Empire .

  # Ensure the person decedent was born in Sandro Bertaggia's birthplace
  ?personDecedent dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?event WHERE {
  # Michał Kazimierz Pac
  ?person dbr:Micha%C5%82_Kazimierz_Pac .
  
  # Force commanded by Michał Kazimierz Pac
  ?person dbo:commander ?force .

  # Event that the force participated in, which is a military conflict
  ?force dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,3,5,0,0.375,1.0,0.5454545454545454
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  ?person dbo:spouse ?spouse .
}
```

This query does the following:
- Uses `dbo:Person` to ensure we are dealing with a person entity.
- Matches Carrie Johnson by name using `foaf:name`.
- Retrieves the spouse of this person using the `dbo:spouse` property.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Henry Clay Lewis' birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Quincy Adams Gillmore's force (interpreted as a place of service)
  dbr:Quincy_Adams_Gillmore dbo:militaryServiceLocation ?serviceLocation .

  # Ensure the settlement is American
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
  
  ?serviceLocation rdf:type dbo:Settlement ;
                   dbo:country dbr:United_States_of_America .

  # Find common settlement
  FILTER (?birthPlace = ?serviceLocation)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?party WHERE {
  ?central a dbo:PopulatedPlace ;
           rdfs:label ""Central, Louisiana""@en .
  
  ?governingEntity dbo:location ?central ;
                   a dbo:Government ;
                   dbo:partyLeader ?leader .

  ?leader dbo:affiliation ?party .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInAthens
WHERE {
  # Find wars associated with Konstantinos Karamanlis
  ?person dbo:leaderOf dbr:National_Party_of_Greece .
  ?person foaf:name ""Konstantinos Karamanlis"" .

  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }

  # Find entities in Athens
  ?entityInAthens dbo:location dbr:Athens .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  ?plotkin a dbo:MusicalArtist ;
           foaf:name ""James Plotkin"" .
  
  ?plotkin dbo:associatedWith ?artist1 .

  # Step 2: Find the associated musical artist of the first artist
  ?artist1 dbo:associatedWith ?artist2 .

  # Step 3: Identify a band member of this second artist who is part of a band related to ""Burnt by the Sun""
  ?bandMember dbo:memberOf ?band ;
              dbo:memberOf ?group ;
              dbo:memberOf ?organisation .
  
  ?band dbr:Burnt_by_the_Sun_(band) .

  # Ensure the band is also a group and an organization
  ?group a dbo:Band .
  ?organisation a dbo:Organization .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Find Allan Arbus
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .

  # Find his children
  ?child dbo:parent ?allanArbus .

  # For each child, find their parent (the grandparent)
  ?child dbo:parent ?grandparent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace ?teamName WHERE {
  # Thomas Letsch's native place (West Germany)
  dbr:Thomas_Letsch dbo:nationality dbr:Germany .
  OPTIONAL { 
    dbr:Thomas_Letsch dbo:birthPlace ?nativePlace .
    FILTER(CONTAINS(LCASE(STR(?nativePlace)), ""west germany""))
  }

  # Thomas Letsch's management role
  ?managementRole dbp:manager dbr:Thomas_Letsch ;
                  dbo:team dbr:Soccer_Club ; # Placeholder for actual club resource
                  dbo:startDate ?startDate .
  
  # Get the team name
  ?managementRole dbo:team ?team .

  BIND(STR(?team) AS ?teamName)
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?barrerasParty ?petroFatherName ?petroFatherParty
WHERE {
  # Find the political party of Roy Leonardo Barreras Montealegre
  ?barreras a dbo:Politician ;
            dbo:birthName ""Roy Leonardo Barreras Montealegre"" .
  OPTIONAL { ?barreras dbo:politicalParty ?barrerasParty . }

  # Find Sofía Petro's father and his political party
  ?sofiaPetro a dbo:Person ;
              dbp:birthName ""Sofía Petro"" .
  ?sofiaPetro dbo:childOf ?father .
  ?father dbo:birthName ?petroFatherName .
  OPTIONAL { ?father dbo:politicalParty ?petroFatherParty . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en ;
          dbo:birthName ""Harriette Arlene Lake"" .
  
  OPTIONAL { ?person dbo:memberOf ?party . }
  
  FILTER EXISTS {
    ?location dbo:country dbr:United_States ;
              dbo:stateOrProvince dbr:Louisiana ;
              dbo:settlement dbr:Central,_Louisiana .
    
    ?party dbo:country dbr:United_States ;
           dbo:stateOrProvince dbr:Louisiana ;
           dbo:settlement dbr:Central,_Louisiana .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  dbr:William_Bayne_(Royal_Navy_officer) dbo:occupation dbr:Royal_Navy_officer .

  OPTIONAL { 
    dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?war .
  }

  FILTER EXISTS {
    ?war rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event .
  }
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the commander of the Battle of Vienna
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Vienna"")

  # Check if this commander is linked to a television show
  ?commander dbo:wikiPageRedirects ?tvShow .

  # Check if this commander is linked to a societal event
  ?commander dbo:socialEvent ?event .

  # Ensure there's a reference to George Ducas as an author
  ?work dbo:author dbr:George_Ducas .
  ?work dbo:wikiPageRedirects ?commander .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Caroline Louise Bevan Symonds""@en .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Joey B's birth name
  dbr:Davido dbo:birthName ?birthName .
  
  # Step 2: Find the writer of ""The Live Anthology""
  ?writer dbo:work ?anthology .
  ?anthology rdfs:label ""The Live Anthology""@en .

  # Step 3: Find a musical artist with the same profession as this writer
  ?person dbo:birthName ?birthName ;
          dbo:profession dbr:Writer ;
          dbo:occupation dbr:MusicalArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?frederick dbp:title ""16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  
  # Check if the child is a politician
  OPTIONAL { ?child dbo:profession ?profession . }
  FILTER (
    EXISTS { ?child dbo:profession ?politician . 
             ?politician rdfs:label ?label .
             FILTER (CONTAINS(LCASE(?label), ""politician"")) }
  )
  
  # Find the father of that child
  OPTIONAL { ?child dbp:father ?father . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Rustler's_Rhapsody dbo:starring ?actor .
  
  ?actor dbo:profession dbr:Actor .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ottomanEntity ?award WHERE {
  # Find an entity related to the Ottoman Empire
  ?ottomanEntity a dbo:Place ;
                 dbo:country dbr:Ottoman_Empire .

  # Find awards associated with Charles Parsons
  ?parsonsAward a dbo:Award ;
                dbo:recipient dbr:Charles_Parsons_(British_Army_officer) .

  # Check if there is any reference or connection between the Ottoman Empire entity and the award
  OPTIONAL { ?ottomanEntity dbo:relatedTo ?parsonsAward }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?producer WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:aliasName ?alterEgo .

  # Cora Sue Collins' claim to fame (work) and its producer
  OPTIONAL {
    ?collinsWork dbo:creator dbr:Cora_Sue_Collins .
    ?collinsWork dbo:producer ?producer .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university WHERE {
  ?university a dbo:University .
  ?university rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""пловдивски университет „паисий хилендарски“""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel ?type
WHERE {
  ?entity dbo:country dbr:United_States .
  OPTIONAL { ?entity a ?type . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,63421,0,0.0,0
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person foaf:givenName ""Cynthia"" .
  ?person foaf:familyName ""Morgan"" .
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), LCASE(""cynthia ikponmwenosa morgan"")))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOf ?party .
  
  # Find the leader of that party
  ?party dbo:leader ?leader .

  # Find the office held by this leader
  ?leader dbo:positionHeld ?office .

  # Find Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .

  # Ensure the leader is a politician (optional, for clarity)
  ?leader rdf:type dbo:Politician .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace WHERE {
  # Ekaterina Zaharieva's birthplace
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement in an EET region
  ?region dbp:timeZone ""Eastern European Time"" .
  ?birthPlace dbo:locatedIn ?region .
  FILTER (isBlank(?birthPlace) || ?birthPlace != dbr:Ekaterina_Zaharieva)
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?work dbo:starring dbr:Richard_E._Grant .
  ?work a ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow)) .
  ?work dbo:starring ?actor .
  FILTER(?actor != dbr:Richard_E._Grant)
}
```",2,3,3,2,1,3,3,71,46,288,7,0.1377245508982036,0.8679245283018868,0.23772609819121446
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?paradiseActor ?alwaysActor ?januszSpouse WHERE {
  # Actor of ""Paradise"" (2013 film)
  ?paradiseFilm dbo:title ""Paradise""@en .
  ?paradiseFilm dbo:releaseDate ?date1 .
  FILTER(YEAR(?date1) = 2013) .
  ?paradiseFilm dbo:starring ?paradiseActor .

  # Actor of ""Always"" (1989 film)
  ?alwaysFilm dbo:title ""Always""@en .
  ?alwaysFilm dbo:releaseDate ?date2 .
  FILTER(YEAR(?date2) = 1989) .
  ?alwaysFilm dbo:starring ?alwaysActor .

  # Spouse of Janusz Kamiński
  dbp:Janusz_Kamiński dbp:spouse ?januszSpouse .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?samProfession ?shadowAlterEgo ?bobBand
WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # The Shadow's alter ego professional role
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  
  # Bob Thompson (musician) band association
  dbr:Bob_Thompson_(musician) dbo:band ?bobBand .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force ?war
WHERE {
  # Quincy Adams Gillmore
  dbr:Quincy_Adam_Gillmore dbo:awardRecipient ?awardee .

  # Awardee's connection to Charleston, South Carolina
  ?awardee dbp:location dbr:Charleston,_South_Carolina .

  # Force associated with the awardee
  ?awardee dbo:militaryService ?force .

  # War involving the awardee of the Medal of Honor
  ?awardee dbo:medalOfHonorRecipient true .
  ?awardee dbo:participatedInWar ?war .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Los_Angeles .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,2883,2731,0,0.5135375846099038,1.0,0.6785924443921384
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName ?child WHERE {
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }

  ?peterIV dbo:alsoKnownAs ?realName .

  ?peterIV dbo:spouse|dbo:child ?child .
  ?child a dbo:Monarch ;
         rdfs:label ?childLabel .
  
  FILTER (lang(?childLabel) = 'en')

  OPTIONAL { ?child dbo:royalHouse ?house }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  
  # Commander in the Thirty Years' War who is also a parent of one of Ferdinand's children
  ?commander dbo:spouseOrPartner ?parent .
  ?parent dbo:child ?child .
  ?commander dbo:occupation dbr:Thirty_Years'_War_commander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent ?fatherOfFather WHERE {
  # Step 1: Identify Yeshaq I and his parent who is royalty
  ?yeshaqI a dbr:Yeshaq_I ;
           dbo:parent ?royalParent .
  
  FILTER EXISTS { ?royalParent dbo:nationality dbr:Ethiopian_Royalty } .

  # Step 2: Find the child of this royal parent (which is Yeshaq I)
  ?childOfParent dbo:parent ?royalParent ;
                a dbr:Yeshaq_I .

  # Step 3: Identify Na'od and his paternal grandfather who is royalty and an office holder
  ?naod a dbr:Na'od ;
        dbo:father ?father .
  
  ?fatherOfFather dbo:parent ?father ;
                  dbo:nationality dbr:Ethiopian_Royalty ;
                  dbo:officeHolder true .

  # Step 4: Establish the connection between these entities
  FILTER (?childOfParent = ?yeshaqI)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?movie dbo:title ""Shelby Oaks""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?alterEgo dbo:characterName ?goldenMasterAlterEgo .
  FILTER(?goldenMasterAlterEgo = ""Specific Alter Ego Name"") # Replace with actual name if known

  ?professional dbo:alterEgo ?alterEgo .

  ?atlFilm dbr:ATL_(film) .
  ?atlFilm dbo:starring ?actor1 .
  
  ?shelbyOaksFilm dbr:Shelby_Oaks .
  ?shelbyOaksFilm dbo:starring ?actor2 .

  FILTER(?actor1 = ?professional && ?actor2 = ?professional)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I
  dbr:William_I_of_Germany a dbo:Monarch ;
                            dbo:spouse ?parent .

  # Find children of William I who are royalty
  ?child dbo:childOf ?parent ;
         a dbo:Monarch .

  # Ensure the parent is also an office holder
  ?parent a dbo:OfficeHolder .

  # Determine the father of this child
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?band { dbr:The_Fabulous_Thunderbirds }
  ?band dbo:officialWebsite ?reference .
}
```

This query searches for the official website of The Fabulous Thunderbirds. If you want to include other types of references, such as links to their DBpedia page or related pages, you can expand the query:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?band { dbr:The_Fabulous_Thunderbirds }
  OPTIONAL { ?band dbo:officialWebsite ?reference . }
  OPTIONAL { ?band dbo:wikiPageWikiLink ?reference . }
}
```

This expanded query will return both the official website and any DBpedia page links related to The Fabulous Thunderbirds.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find the author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .
  
  # Ensure the author is a politician and office holder
  ?author rdf:type dbo:Politician ;
          dbo:officeHolderOf ?office .

  # Find the spouse of the author
  ?author dbo:spouse ?spouse .

  # The owner of USS Arcadia should be the same as the spouse of the author
  ?owner rdfs:label ?spouseLabel .
  
  FILTER (lang(?spouseLabel) = 'en')

  # Find the commander in a war that is both a disease and societal event
  dbr:World_War_I dbo:commander ?commander ;
                  dbo:wikiPageRedirects ?diseaseEvent .

  # Ensure the war is linked to a disease or societal event
  ?diseaseEvent rdf:type dbo:Disease ;
                dbo:societalEvent ?event .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?university dbo:alumni ?alumnus .
  FILTER(?university = <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski>)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Bobby Shmurda and his associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .
  
  # Find a band member of the artist who is also a musical artist
  ?artist dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Identify the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .

  # Ensure the award's native region is an American state and settlement
  ?award dbp:nativeRegion ?region .
  ?region a dbo:State ;
          a dbo:Settlement ;
          dbo:country dbr:United_States_of_America .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?birthName WHERE {
  ?person a foaf:Person .
  ?person schema:name ""Harriette Arlene Lake"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find children of Albrecht, Duke of Württemberg
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg ;
                 a dbo:Person .

  # Find grandchildren (children of the child) of Archduke Charles Louis of Austria
  ?childOfArchduke dbp:father dbr:Charles_Louis_Archduke_of_Austria ;
                   a dbo:Person .
  
  ?grandchild dbp:parent ?childOfArchduke ;
              a dbo:Person .

  # Ensure the grandchild is also a child of Albrecht's child
  ?albrechtChildChild dbp:parent ?albrechtChild ;
                     a dbo:Person .

  FILTER (?grandchild = ?albrechtChildChild)

  # Filter for royalty status
  ?grandchild dbo:occupation dbr:Royalty .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emilia Yancheva Valeva""@en ;
          dbp:birthdayYear ?year .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band dbo:bandMember ?bandMember .
  }
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chieko Asakawa""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?book dbo:author ?author .
  
  FILTER(STR(?book) = STR(dbr:An_Invitation_to_the_White_House))
  
  ?author dbo:occupation dbr:Politician .
  
  ?author dbo:officeHolderOf ?office .
  
  ?author dbo:spouse ?spouse .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  
  # Check for political affiliation
  ?party dbr:Republican_Party_(United_States) .
  ?person dbo:memberOfParty ?party .

  # Find spouse who is an actor in a film produced by Nat Levine
  ?spouse dbo:spouse ?person .
  ?spouse dbo:profession dbr:Actor .
  
  ?film dbo:actor ?spouse ;
        dbo:producer ?producer .
  
  ?producer dbo:name ""Nat Levine"" .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eugène Cattin""@en .
  ?person dbo:occupation ?profession .
}
```

This query does the following:
- It uses `foaf:name` to match Eugène Cattin's name.
- It retrieves the occupation using `dbo:occupation`.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo and his father
  ?myatHponePyo dbo:father ?father .
  
  # Step 2: Check if the father is royalty
  ?father a dbo:Monarch .

  # Step 3: Identify Min Hla Htut of Pyakaung and his parent(s)
  dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?minHlaHtutsParent .
  
  # Step 4: Find the spouse of Myat Hpone Pyo's father who is also a child of Min Hla Htut's parent
  ?father dbo:spouse ?spouse .
  ?spouse dbo:parent ?minHlaHtutsParent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Actor from ""Ab Kya Hoga""
  ?abKyaHogaActor dbo:actor dbr:Ab_Kya_Hoga .
  
  # Step 2: Alter ego of ""The Shadow""
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .

  # Step 3: Professional is both an actor and a politician
  ?professional dbo:profession dbr:Actor ;
                dbo:profession dbr:Politician ;
                
                # Match with the actor from ""Ab Kya Hoga""
                (dbo:actor|dbo:alterEgo) ?abKyaHogaActor ;
                
                # Match with the alter ego of ""The Shadow""
                (dbo:actor|dbo:alterEgo) ?shadowAlterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?award ?war ?birthplace
WHERE {
  # Quincy Adams Gillmore's military rank or force
  dbr:Quincy_A._Gillmore dbo:militaryRank ?rank .
  OPTIONAL { ?rank rdfs:label ?force FILTER (lang(?force) = ""en"") }

  # Award given by the United States Congress related to a war
  ?award dbo:awardedBy dbr:United_States_Congress ;
         dbo:relatedToWar ?war .

  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  FILTER (dbo:Settlement ?birthplace)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result WHERE {
  # Find the parent of Roger III, Duke of Apulia
  ?rogerIII dbo:parent ?parentOfRogerIII .
  
  # Find a child of this parent (which is Roger III)
  ?childOfParent dbo:child ?rogerIII .

  # Find children of Alfonso VI
  ?alfonsoVI dbo:child ?childOfAlfonsoVI .

  # Find a grandchild of Alfonso VI
  ?grandChildOfAlfonsoVI dbo:child ?childOfAlfonsoVI .

  # The result is the child of Roger III and the grandchild of Alfonso VI
  FILTER (?childOfParent = ?grandChildOfAlfonsoVI)
  
  BIND(?childOfParent AS ?result)
}
```",4,4,5,2,2,3,3,71,2,14366,2,0.00013919821826280623,0.5,0.00027831895352073476
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent
WHERE {
  # Step 1: Identify Princess Aisha bint Faisal
  ?princess a dbo:Person ;
            rdfs:label ""Princess Aisha bint Faisal""@en .

  # Step 2: Find her parent who is a royalty
  ?princess dbo:parent ?parent .
  ?parent a dbo:RoyalFamilyMember .

  # Step 3: Determine the child of this royal parent
  ?parent dbo:child ?child .

  # Step 4: Find the parent of this child if they are also a royalty
  ?child dbo:parent ?grandparent .
  ?grandparent a dbo:RoyalFamilyMember .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 2: Find his parent
  ?parent dbo:spouseOrPartner ?edward ;
          dbo:child ?intermediateChild .

  # Step 3: Find the child of that parent
  ?parent dbo:child ?child .

  # Step 4: Check if the child is both a politician and an office holder
  ?child a dbo:Politician ;
         dbo:officeHolder true .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  dbr:Marty_Polloi dbo:birthday ?birthday .

  ?athlete a dbo:Athlete ;
           dbo:birthday ?sameBirthday .
  
  FILTER (?sameBirthday = ?birthday)
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Always_the_Love_Songs dbo:lyricist ?writer .
}
```

This query assumes that ""Always the Love Songs"" is available as `dbr:Always_the_Love_Songs` in DBpedia and uses the `dbo:lyricist` property to find its writer. Adjust the resource identifier if necessary based on actual DBpedia data.",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:childOf ?parent1 .

  # Step 2: Find the child of that parent who is a politician and office holder
  ?child dbo:parent ?parent1 .
  ?child dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdf:type dbo:PoliticalOffice } &&
    EXISTS { ?child dbo:officeHolder true }
  )

  # Step 3: Identify the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Step 4: Find the parent of that awardee
  ?awardee dbo:parent ?parent2 .

  # Step 5: Find the common parent
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?parent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?partyLeader
WHERE {
  # Find Manuel Pinto da Costa's office as commander in a military conflict
  ?person dbr:Manuel_Pinto_da_Costa .
  ?person dbo:office ?commanderOffice .
  ?commanderOffice dbo:position ""Commander"" .
  ?conflict dbo:participant ?person .
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:socialEvent true .

  # Find the office of the leader in Conservative Republican Party (Spain)
  ?partyLeader dbo:leader ?party .
  ?party dbr:Conservative_Republican_Party_(Spain) .
  ?partyLeader rdf:type dbo:PoliticalPartyOffice .
  
  # Ensure both offices are held by politicians
  ?person dbo:occupation dbo:Politician .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  # Find the DBpedia resource for George Hamilton Cameron
  VALUES ?person { dbr:George_Hamilton_Cameron }

  # Look for awards associated with this person
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:characterName dbr:Johnny_Doughboy .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:date ""2009-01-01""^^xsd:date ;
            dbo:region dbr:Galicia ;
            dbo:winner ?party .
  ?party dbo:leader ?leader .
}
```

This query assumes:
- The election is represented with a `dbo:date` property for the year.
- The region is specified using `dbo:region`.
- The winning party or candidate has a `dbo:winner` property.
- The leader of the party is linked via `dbo:leader`.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?author dbo:book dbr:An_Invitation_to_the_White_House .
  ?author dbo:book dbr:Back_to_Work_(book) .
  ?author dbo:officeHolderOf ?office .
  ?author dbo:commanderIn ?crisis .
  FILTER(?crisis = dbr:Third_Taiwan_Strait_Crisis)
  
  ?author dbp:spouse ?spouse .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Woodrow Wilson as an author and politician
  dbr:Woodrow_Wilson dbo:author dbr:An_Invitation_to_the_White_House .
  dbr:Woodrow_Wilson dbo:author dbr:Back_to_Work_(book) .
  
  # Woodrow Wilson as a commander in World War I
  dbr:World_War_I dbo:commander dbr:Woodrow_Wilson .

  # Spouse of Woodrow Wilson
  dbr:Woodrow_Wilson dbo:spouse ?spouse .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gibsonProfession ?shadowProfession ?princeBand
WHERE {
  # Walter B. Gibson and his creation ""The Shadow""
  dbr:Walter_B._Gibson dbo:profession ?gibsonProfession .
  
  # The Shadow as a fictional character
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson ;
                 rdf:type dbo:FictionalCharacter .

  # Profession related to ""The Shadow""
  dbr:The_Shadow dbo:profession ?shadowProfession .

  # Robert Lamar Thompson (Prince) and his band
  dbr:Prince dbo:bandMember ?princeBand .
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?battle a dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Fort Royal""@en .
  
  ?battle dbp:combatant ?force .
}
```

This query does the following:
- It selects entities (`?force`) that are combatants in the battle.
- It identifies the battle using its label and type (assuming it's a military engagement).
- It uses the `dbp:combatant` property to find forces involved.",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip dbo:birthName ""Philip, Despot of Romania""@en .
  
  # Step 2: Determine his parent (assuming mother for simplicity)
  ?parent dbo:child ?philip ;
          a dbo:Person .

  # Step 3: Find the father of this parent (Philip's grandparent)
  ?grandfather dbo:spouse ?parent ;
               a dbo:Person .

  # Step 4: Check if this grandparent is a royalty
  ?grandfather dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 5: Retrieve the spouse of this royal grandparent
  ?grandfather dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Child of the parent identified above
  ?child dbo:parent ?parent .
  
  # Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .
  ?predecessor dbo:succeededBy ?philippChild .

  # The entity we are looking for is a royalty and the child of the child identified above
  ?childOfChild dbo:parent ?child .
  ?childOfChild rdf:type dbo:Monarch .
  
  FILTER (?childOfChild = ?predecessor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession WHERE {
  # Find ""The Shadow"" created by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Get the alter ego of ""The Shadow""
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Ensure the alter ego is a fictional character and a comics character
  ?alterEgo rdf:type dbo:FictionalCharacter ;
            dbo:genre dbr:Comics .

  # Get professions related to Sam Concepcion (actor/singer)
  FILTER EXISTS {
    dbr:Sam_Concepcion dbo:profession ?samProfession .
    VALUES ?samProfession { dbr:Actor dbr:Singer }
  }

  # Match the alter ego's profession with Sam Concepcion's
  ?alterEgo dbo:profession ?profession .
  FILTER (?profession IN (dbr:Actor, dbr:Singer))
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person rdf:type dbo:Writer .
  ?person foaf:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  
  OPTIONAL { 
    ?person dbo:profession dbo:MusicalArtist .
  }
  
  OPTIONAL {
    ?work dbo:author ?person ;
          rdfs:label ""The Live Anthology""@en .
  }
}
```

### Explanation

- **PREFIX**: Defines common namespaces used in DBpedia.
- **SELECT ?person**: We're interested in finding the person.
- **rdf:type dbo:Writer**: Ensures the person is a writer.
- **foaf:name**: Matches the full name of the person.
- **OPTIONAL { ... }**: Checks if the person is also a musical artist and authored ""The Live Anthology"".
- **rdfs:label**: Filters works by their English label.

This query should return the person who matches all specified criteria.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?residence ?office WHERE {
  VALUES (?person ?label) { 
    (<http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> ""Alberto Ruiz-Gallardón"")
    (<http://dbpedia.org/resource/Mariano_Rajoy> ""Mariano Rajoy"")
  }
  
  ?person foaf:name ?name .
  
  OPTIONAL {
    ?person dbo:residence ?residence .
  }
  
  OPTIONAL {
    ?person foaf:workplaceHomepage ?office .
  }
}
```",3,3,4,2,2,3,3,71,0,6,2,0.0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club ?manager WHERE {
  # Find a soccer club in Bristol
  ?club a dbo:SoccerClub ;
        dbo:location dbr:Bristol .

  # Find Jamie McCunnie's manager
  ?player dbo:nationality dbr:Jamie_McCunnie ;
          dbo:currentManager ?manager .
  
  # Ensure the player is associated with the club
  ?player dbo:playsFor ?club .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"SELECT DISTINCT ?work ?author WHERE {
  # Find Joe Biden
  VALUES (?biden) { dbr:Joe_Biden }

  # Find works by Joe Biden that are written works and works
  ?work dbo:author ?biden .
  ?work a dbo:CreativeWork ;
        a dbo:WrittenWork .

  OPTIONAL {
    # Additional filter for American books
    ?work dbo:country dbr:United_States ;
          a dbo:Book .
  }

  # Get the author of the work
  ?work dbo:author ?author .
}
```",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player dbo:member ?club .
  ?club rdf:type dbo:SoccerClub .
  ?club rdf:type dbo:SportsTeam .
  ?player foaf:name ""Jamie McCunnie"" .
}
```

This query does the following:
- Selects players (`?player`) who are members of a club (`?club`).
- Ensures that the club is both a `SoccerClub` and a `SportsTeam`.
- Filters for players with the name ""Jamie McCunnie"".

Note: The exact properties and classes might need adjustment based on DBpedia's current schema, as it can evolve over time.",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club rdfs:label ""Lai Sun Cheung""@en .
  ?club dbo:teamMember ?player .
}
```

### Explanation:
- **Prefixes**:
  - `dbo:` is used for DBpedia ontology classes and properties.
  - `dbr:` is used for DBpedia resources.

- **Query Structure**:
  - We select players (`?player`) who are team members of a club (`?club`).
  - The club is identified by its label ""Lai Sun Cheung"" in English.
  - The property `dbo:teamMember` links the club to its players.

This query assumes that the relationship between clubs and players is captured using the `dbo:teamMember` property, which is common for sports teams in DBpedia. Adjustments might be necessary if a different property is used or if additional filtering is required based on specific criteria (e.g., active players).",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?event ?tvShow WHERE {
  # Step 1: Find Ferdinand II's child who was a commander in war
  ?parent dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:occupation dbr:Military_commander .

  # Step 2: Connect to societal event and television show related to 2nd Dragoon Regiment (France)
  ?event dbo:relatedEvent dbr:2nd_Dragoon_Regiment_(France) .
  ?tvShow dbo:basedOn ?event .

  # Step 3: Find the father of the child of the parent of Archduke Charles Joseph
  ?archdukeParent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  ?parentChild dbo:child ?archdukeParent .
  ?grandparent dbo:child ?parentChild .

  # Ensure all parts are connected
  FILTER(?child = ?grandparent)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rodney Lees""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?successorName WHERE {
  # Find George Ducas
  dbr:George_Ducas a dbo:Person ;
                   dbo:spouse ?spouse .

  # Find the successor who is a politician and office holder during the Russo-Polish War
  ?successor a dbo:Politician, dbo:OfficeHolder ;
             dbo:officePeriod ?period .
  
  # Ensure the period overlaps with the Russo-Polish War (1654–1667)
  FILTER (?period >= ""1654-01-01""^^xsd:date && ?period <= ""1667-12-31""^^xsd:date)

  # Find a relationship indicating succession
  ?successor dbo:predecessor dbr:George_Ducas .

  # Get the name of the successor
  ?successor rdfs:label ?successorName .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ceceBirthPlace ?governorBirthPlace WHERE {
  # Find Cece Bell's birthplace
  ?ceceBell dbo:birthPlace ?ceceBirthPlace .
  FILTER(STRSTARTS(STR(?ceceBell), ""http://dbpedia.org/resource/Cece_Bell""))

  # Find Paulus Powell's birth region (administrative region)
  ?paulusPowell dbo:birthPlace ?region .
  ?region a dbo:AdministrativeRegion .
  FILTER(STRSTARTS(STR(?paulusPowell), ""http://dbpedia.org/resource/Paulus_Powell""))

  # Find the governor of that region
  ?governor dbp:governmentRole dbr:Governor ;
            dbo:birthPlace ?governorBirthPlace .
  FILTER(STRSTARTS(STR(?region), STR(?governor))) 
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?gilliganBirthPlace WHERE {
  # Cece Bell, author of El Deafo
  dbr:El_Deafo dbo:author dbr:Cecelia_Bell .
  FILTER (LANG(dbr:Cecelia_Bell) = ""en"") . # Ensure the resource is in English
  OPTIONAL { dbr:Cecelia_Bell dbo:birthPlace ?authorBirthPlace } .

  # Vince Gilligan
  dbr:Vince_Gilligan dbo:birthPlace ?gilliganBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find Daniel Elahi Galán's birthplace to confirm his country of origin
  dbr:Dani_Elái_Galán dbo:birthPlace ?birthPlace .
  
  # Ensure the birth place is in Colombia
  ?birthPlace dbo:country dbr:Colombia .

  # Retrieve entities associated with Colombia
  ?entity dbo:country dbr:Colombia .
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player (SAMPLE(?team) AS ?agüeroTeam)
WHERE {
  # Find the team of Sergio Agüero
  dbr:Sergio_Ag%C3%BCero dbo:playsFor ?team .

  # Get Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbp:birthday ?birthday .

  # Find a person who is both a soccer player and manager, born on the same day as Marcelo Sarmiento
  ?person dbo:birthDate ?sameBirthday .
  FILTER (YEAR(?sameBirthday) = YEAR(?birthday) && MONTH(?sameBirthday) = MONTH(?birthday) && DAY(?sameBirthday) = DAY(?birthday))
  
  # Ensure the person is a soccer player and manager
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Soccer_manager .

  # Bind the person to the variable ?player
  BIND(?person AS ?player)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person dbo:alterEgo dbr:The_Shadow .
  ?person dbo:memberOfBand ?band .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Third Taiwan Strait Crisis""@en .
  
  OPTIONAL { 
    ?event dbo:commander ?commander .
  }
}
```

This query attempts to find the commander associated with the event labeled as the ""Third Taiwan Strait Crisis."" Note that the exact property (`dbo:commander`) might need adjustment based on DBpedia's schema and available data.",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES (?band ?member) { (dbr:The_Fabulous_Thunderbirds dbr:Kim_Wilson) }
  
  ?band dbo:bandMember ?member .
  
  OPTIONAL { ?band dbo:wikiPageExternalLink ?reference . }
  OPTIONAL { ?member dbo:wikiPageExternalLink ?reference . }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorParty
WHERE {
  # Patrice Martin-Lalande's office
  dbr:Patrice_Martin-Lalande dbo:office ?office .
  
  # Successor in the same office
  ?successor dbo:office ?office ;
            a dbo:Politician ;
            dbp:nationality ""French""@en .

  # Get the political party of the successor
  ?successor dbp:party ?successorParty .
}
```",2,4,3,2,1,2,2,9,0,1,6,0.0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin 
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  # Roger II of Sicily's child
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  
  # Constance of Burgundy's spouse and their child
  ?spouse dbo:spouse dbr:Constance_of_Burgundy .
  ?grandchild dbo:parent ?spouse .
  
  # The person is the same as both Roger II's child and Constance's grandchild
  FILTER (?child1 = ?grandchild)
  
  # The person is royalty
  ?person rdf:type dbo:Monarch .
  FILTER (?person = ?child1)

  # The person is also a father of William I of Sicily's royal child
  ?royalChild dbo:parent ?person .
  ?williamChild dbo:parent dbr:William_I_of_Sicily .
  
  # Ensure the royal child is royalty
  FILTER (?royalChild = ?williamChild)
  FILTER (?royalChild rdf:type dbo:Monarch)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?charlesI dbo:spouse ?mother .
  ?charlesI dbp:father ?father .

  ?father dbo:parent ?grandfather .
  
  ?grandfather a dbo:Monarch .
  ?grandfather dbo:spouse ?charlesII .
  ?charlesII rdfs:label ""Charles II of Naples""@en .

  ?grandfather dbo:childOf ?stephenV .
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .

  ?charlesI rdfs:label ""Charles I of Hungary""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamName WHERE {
  ?player foaf:name ""Pablo Aimar""@en .
  ?player dbp:team ?team .
  ?team rdfs:label ?teamName .
  FILTER (LANG(?teamName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Dispatches from Elsewhere""@en .
  FILTER NOT EXISTS { ?movie rdfs:label ?otherLabel . FILTER(?otherLabel != ""Dispatches from Elsewhere""@en) }
  
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,1,1.0,0.8333333333333334,0.9090909090909091
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Poland .
  ?person dbo:birthPlace dbr:Łódź .
  ?person a dbo:Athlete .
}
```",1,3,2,1,1,3,2,20,0,10,4,0.0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""Theodor Heuss""@en .
  ?person dbo:presidentOf ?country .
  ?country rdfs:label ?administration .
  FILTER (lang(?administration) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?nativePlace WHERE {
  VALUES ?person { dbr:Ackquille_Jean_Pollard }
  
  ?award dbo:wikiPageRedirects* dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  ?award dbo:nativePlace ?nativePlace .

  ?nativePlace rdf:type/rdfs:subClassOf* (dbo:Region dbo:AmericanState dbo:Settlement) .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseChild
WHERE {
  # Step 1: Find Charles II of Naples' spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse who is royalty
  ?spouse dbo:child ?spouseChild .
  ?spouseChild a dbo:Monarch .

  # Step 3: Identify predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Step 4: Find the child of this predecessor who is royalty
  ?predecessor dbo:child ?predecessorChild .
  ?predecessorChild a dbo:Monarch .

  # Step 5: Determine parent of father (royalty) of Charles I of Hungary
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
  ?charlesFather a dbo:Monarch .
  ?charlesFather dbo:parent ?parentOfFather .

  # Combine relationships to find the final answer
  FILTER (?spouseChild = ?predecessorChild && ?parentOfFather = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager
WHERE {
  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  # This person managed a player in the 2007–08 VfL Bochum season
  ?player dbp:team dbr:VfL_Bochum ;
          dbo:manager ?person .
  
  # The 2007-08 VfL Bochum season is a soccer club, sports club, organization, and soccer club season
  dbr:VfL_BochumSeason rdf:type dbo:SoccerClubSeason , dbo:SportsTeamSeason , dbo:SportsSeason ;
                       dbp:team dbr:VfL_Bochum .

  # Find the manager of the VfL Bochum team during that season
  ?manager dbo:managedTeam dbr:VfL_Bochum ;
           dbo:managementPeriod ?season .
  
  # Ensure the management period matches the 2007-08 season
  FILTER (?season = dbr:2007–08_VfL_Bochum_season)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?work WHERE {
  # Find Hillary Clinton and her spouse
  dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .
  
  # Ensure the spouse is Bill Clinton
  ?spouse rdfs:label ""Bill Clinton""@en .

  # Find works authored by Bill Clinton that are books
  ?work dbo:author ?spouse ;
        a dbo:Book ;
        a dbo:CreativeWork .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royPartyLabel ?fatherPartyLabel
WHERE {
  # Roy Barreras' political party
  dbpedia:Roy_Barreras dbo:politicalParty ?royParty .
  ?royParty rdfs:label ?royPartyLabel .

  # Sofía Petro's father
  dbpedia:Sofia_Petro dbo:parent ?sofiaFather .
  
  # Political party of Sofía Petro's father
  ?sofiaFather dbo:politicalParty ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Smita_Patil> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?officeCommander
WHERE {
  # Leader of Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:partyMemberOf dbr:Conservative_Party_(Spain) .
  
  # Office held by the leader
  ?leader dbo:holdsOffice ?officeLeader .

  # Tenant of Madrid
  ?officeLeader dbo:location dbr:Madrid .

  # Commander in Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?officeCommander .
  
  # Office held by the commander
  ?officeCommander dbo:relatedEvent dbr:Central_African_Republic_Civil_War .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Michał Kazimierz Pac's involvement in a military conflict
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commanderOf ?conflict .
  
  # Ensure the conflict is an event and a military conflict
  ?conflict rdf:type dbo:Event ;
            rdf:type dbo:MilitaryConflict .

  # Find the successor who is also a commander of the same conflict
  ?successor dbo:commanderOf ?conflict .

  # Ensure the successor is a politician and an office holder
  ?successor rdf:type dbo:Politician .
  OPTIONAL { ?successor dbo:officeHolderOf ?office . }
  
  FILTER(?successor != dbr:Micha%C5%82_Kazimierz_Pac)
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Identify Yeshaq I's parent who is royalty
  dbr:Yeshaq_I dbo:parent dbr:Zara_Yaqob .
  
  # Zara Yaqob is a royalty
  dbr:Zara_Yaqob rdf:type dbo:Monarch .

  # The child of the royal parent (Zara Yaqob) is Yeshaq I
  ?child dbo:parent dbr:Zara_Yaqob .
  FILTER (?child = dbr:Yeshaq_I)

  # Return Lamont Cranston as the alter ego
  BIND(dbr:Lamont_Cranston AS ?alterEgo)
}
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Princess Aisha bint Faisal
  ?princess a dbo:Person ;
            rdfs:label ""Princess Aisha bint Faisal""@en .

  # Find her parent who is also royalty
  ?parent dbo:child ?princess .
  ?parent a dbo:RoyalFamilyMember .

  # Find the child of that royal parent
  ?child dbo:parent ?parent ;
         a dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Walter B. Gibson's creation and its alter ego
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  dbr:Lamont_Cranston dbo:fictionalAlterEgoOf dbr:The_Shadow .

  # Profession of Lamont Cranston (fictional context)
  dbr:Lamont_Cranston dbo:profession ?fictionalProfession .

  # Jonathan Manalo's profession
  dbr:Jonathan_Manalo dbo:profession ?realWorldProfession .

  # Find a professional who matches both professions
  ?professional dbo:profession ?matchingProfession .
  
  FILTER (?matchingProfession = ?fictionalProfession && ?matchingProfession = ?realWorldProfession)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:musicalArtist dbr:GS9 .
  
  # Band member who is also a musical artist
  dbr:GS9 dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Bobby Shmurda's birth name and native region
  dbr:Bobby_Shmurda dbp:birthName ""Bobby Shmurda"" .
  
  # Coro de la Pontificia Universidad Católica de Puerto Rico is associated with Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativeRegion dbr:Puerto_Rico .
  dbr:Puerto_Rico a dbo:State, dbo:Settlement, dbo:Region ;
                 dbo:country dbr:United_States .

  # Ensure the band member is American
  ?bandMember dbo:nationality dbr:United_States .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  ?child2 dbo:parent dbr:William_I_of_Sicily .
  ?child2 rdf:type dbo:Monarch .
  ?child2 dbo:parent ?father .
  FILTER (?child1 = ?father)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistStuart ?artistBilly WHERE {
  # For Stuart Mcbeath Tosh
  OPTIONAL {
    ?stuart a dbo:MusicalArtist ;
            foaf:name ""Stuart Mcbeath Tosh"" .
    ?stuart dbo:associatedBandOrMusicalArtist ?artistStuart .
  }

  # For Billy Lyall
  OPTIONAL {
    ?billy a dbo:MusicalArtist ;
           foaf:name ""Billy Lyall"" .
    ?billy dbo:associatedBandOrMusicalArtist ?artistBilly .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativePlace WHERE {
  # VfL Bochum as a sports club, organization, and soccer club
  dbr:VfL_Bochum dbo:type/dbo:SportsClub .
  dbr:VfL_Bochum dbo:type/dbo:Organization .
  dbr:VfL_Bochum dbo:type/dbo:SoccerClub .

  # Manager of VfL Bochum in the 2007–08 season
  ?manager dbp:managedTeam dbr:VfL_Bochum ;
           dbp:managementPeriod ?period .
  
  FILTER(CONTAINS(?period, ""2007-08""))

  # Manager's native place is West Germany
  ?manager dbo:nationality dbr:Germany_West .

  # Get the native place of the manager
  ?manager dbo:nativePlace ?nativePlace .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalParent WHERE {
  # Maria of Bytom's spouse
  ?maria dbp:spouse ?mariaSpouse .
  
  # Philip I, Prince of Taranto's father
  ?philip dbo:father ?philipFather .

  # Spouse of Philip I's father
  ?philipFather dbp:spouse ?philipFatherSpouse .

  # Parent of Maria of Bytom's spouse (royalty)
  ?mariaSpouse dbo:parent ?royalParent .
  
  # Parent of the spouse of Philip I's father (royalty)
  ?philipFatherSpouse dbo:parent ?royalParent .

  # Ensure the parent is royalty
  ?royalParent a dbo:Monarch ;
               dbp:title ?title .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""ATL""@en .
  ?actor foaf:name ?actorName .
}
```

This query does the following:
- It looks for a film (`?film`) that has an English label ""ATL.""
- It finds actors (`?actor`) who are linked to this film via the `dbo:starring` property.
- It retrieves the names of these actors using the `foaf:name` property.",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?person dbo:nativePlace ?place .
  FILTER regex(str(?place), ""Florida"", ""i"") .
  ?band dbo:member ?person .
  ?band foaf:name ""Uncle Murda"" .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Pollio dbo:birthday ?martyBirthday .

  # Find athletes born on Marty Pollio's birthday
  ?athlete dbo:birthday ?martyBirthday ;
           a dbo:Athlete .

  # Check if the athlete is also a soccer player and manager, born on 1979-11-03
  OPTIONAL { ?athlete dbo:birthDate ""1979-11-03""^^xsd:date . }
  OPTIONAL { ?athlete dbo:sport dbr:Soccer . }
  OPTIONAL { ?athlete dbo:occupation dbr:Soccer_manager . }

  # Retrieve the team associated with this person
  ?athlete dbo:team ?team .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Sandro Bertaggia's birthplace that is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .
  FILTER (isBlank(?birthCountry) || (
    ?birthCountry rdf:type <http://dbpedia.org/ontology/Country> .
  ))

  # Alexander II, Grand Duke of Finland's native administration
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:nativePlace ?nativeAdmin .

  # Person who died at Sandro Bertaggia's birthplace and was native to Alexander II's administration
  ?decedent dbo:deathPlace ?birthCountry .
  ?decedent dbo:nativePlace ?nativeAdmin .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference
WHERE {
  ?subject dbo:wikiPageRedirects dbr:George_Ducas .
  ?subject ?p ?reference .
}
```",1,1,2,1,1,3,3,71,1,24,1,0.04,0.5,0.07407407407407407
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?person rdfs:label ""Tony Hollings""@en .
  ?person dbo:birthDate ?birthday .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find a commander in the Algerian War
  ?commander dbo:militaryConflict dbr:Algerian_War .
  
  # Ensure this person is linked to societal events, general events, and television shows
  ?event1 dbo:type dbr:SocietalEvent ;
         dbo:agent ?commander .
  ?event2 dbo:type dbr:Event ;
          dbo:agent ?commander .
  ?tvShow dbo:type dbr:TelevisionShow ;
          dbo:creator ?commander .

  # Find the child of Ferdinand III, Holy Roman Emperor
  ?child dbp:father dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Ensure this commander is the father of that child
  ?child dbp:mother ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfCharlesII WHERE {
  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Spouse's parent (father) who is royalty
  ?spouseOfCharlesII dbo:parent ?father .
  ?father a dbo:Monarch .

  # Maria of Bytom and her spouse
  dbr:Maria_of_Bytom dbo:spouse ?spouseOfMaria .

  # Spouse's child (child) who is royalty
  ?spouseOfMaria dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Béla IV of Hungary and his royal child
  dbr:Béla_IV_of_Hungary dbo:child ?belasRoyalChild .
  ?belasRoyalChild a dbo:Monarch .

  # Matching the royalty lineage
  FILTER (?father = ?royaltyChild && ?spouseOfCharlesII = ?spouseOfMaria)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Identify commanders in the Korean War
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolderOf dbr:Korean_War .

  # Find written works by these commanders
  ?work dbo:author ?commander ;
        a dbo:WrittenWork .

  # Get the author of the work (which is the commander)
  OPTIONAL { ?work dbo:authorName ?author . }
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of Smartbomb
  ?smartbomb dbo:author ?author .
  
  # Find The Shadow's alter ego profession
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .

  # Find a movie that connects both the author and the professional
  ?movie dbo:writer ?author ;
         dbo:actor ?actor .
  
  OPTIONAL { 
    ?movie dbo:starring ?professional .
    ?professional rdfs:label ?professionLabel .
    FILTER (CONTAINS(LCASE(?professionLabel), LCASE(str(?profession))))
  }
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathDate ?date .
  FILTER (YEAR(?date) = 1850 && MONTH(?date) = 8 && DAY(?date) = 5)
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Person`.
- Filters those whose `dbo:deathDate` matches August 5, 1850.
- Optionally retrieves their names using the `foaf:name` property if available.
- Orders the results by name for easier reading.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find Phantomsmasher and its associated musical artist
  ?phantomsmasher a dbo:MusicalArtist ;
                  dbo:associatedBandOrMusicalArtist ?associatedArtist .

  # Ensure the associated artist is a band, group, and organization
  ?associatedArtist a dbo:Band ;
                   a dbo:Group ;
                   a dbo:Organization .

  # Find a reference to ""Burnt by the Sun"" that is a group
  dbr:Burnt_by_the_Sun a dbo:Group .

  # Find band members of the associated artist
  ?bandMember dbo:memberOfBandOrMusicalArtist ?associatedArtist .
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Get Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Get Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?profession .

  # Find a person with the same birth name as Bob Thompson and who is a musical artist
  ?person dbp:birthName ?birthName ;
          a dbo:MusicalArtist .

  # Ensure the person has the same profession as Sam Concepcion
  ?person dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)

  # Find the band associated with this person
  ?band dbo:member ?person .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Duke Anthony Ulrich of Brunswick and his children who are royalty
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:spouse ?parent .
  
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .

  # The child is the spouse of Prince Augustus William of Prussia
  ?child dbo:spouse dbr:Prince_Augustus_William_of_Prussia .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?administrationLocation WHERE {
  # Find Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:monarch ?kingdom .
  
  # Get territories he ruled
  ?kingdom dbo:ruledTerritory ?territory .

  # Ensure administration is linked to Copenhagen
  OPTIONAL { 
    ?administrationLocation dbo:administrativeCapital ?copenhagen .
    FILTER (str(?copenhagen) = ""Copenhagen"")
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find territories administered by Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:administeredTerritory ?territory .

  # Match the death place with one of the territories
  FILTER (?deathPlace = ?territory)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?person rdfs:label ""Denis Kolodin""@en .
  ?person a dbo:Person .
  
  OPTIONAL { ?person dbo:spouse ?club . } # Example, adjust based on data
  OPTIONAL { ?person dbo:employee ?club . }
  OPTIONAL { ?person dbo:memberOf ?team .
             ?team a dbo:SoccerClub .
             BIND(?team AS ?club) }
  
  FILTER (langMatches(lang(?person), ""EN""))
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  # Find Denis Kolodin in DBpedia
  ?person a dbo:FootballPlayer ;
          foaf:name ""Denis Kolodin""@en .
  
  # Check for nicknames associated with him
  ?person dbo:nickname ?nickname .

  # Ensure the nickname is also recognized as a soccer club
  ?club a dbo:SoccerClub ;
        rdfs:label ?nicknameLabel .
  
  FILTER (lang(?nicknameLabel) = ""en"")
  FILTER (?nickname = ?nicknameLabel)
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # George Pickett as the commander of Pickett's Charge
  dbr:Picketts_Charge dbo:commander ?commander .
  
  # Check if the commander was a member of the Republican Party (United States)
  ?commander dbo:memberOfParty ?party .
  FILTER (?party = dbr/Republican_Party_(United_States))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  
  ?child dbo:childOf ?philippAlbrecht ;
         dbo:childOf ?albrecht .

  ?predecessor dbo:parentOf ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?awardee WHERE {
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en .
  
  ?vinceGilligan dbo:award ?award .

  ?otherAwardee dbo:award ?award ;
                a dbo:Person ;
                foaf:name ?name .
                
  FILTER(?vinceGilligan != ?otherAwardee)
}
```

### Explanation

- **Prefixes**: `dbo` is used for DBpedia ontology, and `rdf` for RDF properties.
- **Vince Gilligan's Resource**: We assume Vince Gilligan can be identified by his name using the `foaf:name` property.
- **Award Property**: The query uses `dbo:award` to find awards associated with Vince Gilligan.
- **Other Awardees**: For each award, it finds other individuals (`?otherAwardee`) who have received the same award.
- **Filter**: Ensures that Vince Gilligan is not listed as an awardee of his own awards.

This query should return a list of distinct individuals who have received the same awards as Vince Gilligan.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Placeholder for a specific query once the question is clarified.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?deathPlace
WHERE {
  # Find wars involving Napoleon Zervas
  ?person dbo:name ""Napoleon Zervas""@en .
  ?person dbo:participatedIn ?war .

  # Find the death place of Antonios Varthalitis and ensure it's a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor ?ducasReference WHERE {
  # Find the successor of Yurii Khmelnytsky
  ?yuriikhmelnytsky dbo:successor ?successor .
  
  # Ensure we are referring to Yurii Khmelnytsky by name
  ?yuriikhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .

  OPTIONAL {
    # Reference George Ducas
    ?ducas foaf:name ""George Ducas""@en .
    BIND(""Reference to George Ducas"" AS ?ducasReference)
  }
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # For Alberto Ruiz-Gallardón
  OPTIONAL {
    ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
    ?residence dbo:occupant ?tenant .
  }
  
  OPTIONAL {
    ?office dbo:employee dbr:Alberto_Ruiz-Gallardón .
    ?office dbo:occupant ?tenant .
  }

  # For Miguel Maura
  OPTIONAL {
    ?residence2 dbo:resident dbr:Miguel_Maura .
    ?residence2 dbo:occupant ?tenant .
  }
  
  OPTIONAL {
    ?office2 dbo:employee dbr:Miguel_Maura .
    ?office2 dbo:occupant ?tenant .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?office ?residence WHERE {
  # Mariano Rajoy's office during the 2003 Madrid City Council election
  dbr:Mariano_Rajoy dbo:positionHeld [
    dbo:startDate ?start;
    dbo:endDate ?end;
    dbo:organization dbr:Madrid_City_Council;
    dbo:office ?office.
  ].

  # Ensure the office is related to the 2003 election
  FILTER (?start <= ""2003-05-01""^^xsd:date && (?end >= ""2003-05-01""^^xsd:date || !bound(?end))).

  # Find the residence associated with the office
  ?office dbo:location ?residence.
  
  # Ensure the person is an office holder
  dbr:Mariano_Rajoy a dbo:OfficeHolder.
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award
WHERE {
    dbr:Royal_Swedish_Academy_of_Sciences dbo:associatedWith ?show .
    dbr:Max_Born dbo:receivedAward ?award .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  # Step 1: Identify T.I.'s works that are songs and musical works
  ?work dbo:artist dbr:T.I. ;
        a dbo:Songs .

  # Step 2: Find albums associated with these works
  ?album dbo:song ?work .

  # Step 3: Identify actors in movies related to these albums
  ?movie dbo:starring ?actor .
  ?movie dbp:basedOn ?album .
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?georgeDucasReference ?tvShow ?societalEvent
WHERE {
  # Find the commander in the Russo-Polish War who is a politician and office holder
  ?commander dbo:officeHolderOf ?war .
  ?war dbp:name ""Russo-Polish War (1654–1667)"" .

  FILTER EXISTS { ?commander dbo:occupation dbr:Politician }
  FILTER EXISTS { ?commander dbo:officeHolderOf ?office }

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander .

  # Reference to George Ducas in relation to the war
  ?georgeDucasReference dbo:relatedTo ?war .
  ?georgeDucasReference rdfs:label ""George Ducas""@en .

  # Connect Jean Baptist, Comte d'Arco with a television show and societal event
  ?tvShow dbo:genre dbp:SocietalEvent ;
          dbo:character dbr:Jean_Baptiste,_Comte_d%27Arco .
  
  ?societalEvent dbo:relatedTo ?tvShow .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict related to ""The Triple X's""
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce ?tripleXs .

  # Identify ""The Triple X's"" as a military force
  ?tripleXs a dbo:MilitaryUnit ;
            dbo:commander ?commander .

  # Find the societal event related to Robert Calder
  ?event a dbo:SocietalEvent ;
         dbo:relatedTo dbr:Robert_Calder .

  # Connect the military conflict and societal event through Robert Calder
  ?conflict dbo:relatedTo ?event .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?painting WHERE {
  ?painting a dbo:Painting .
  ?painting rdfs:label ""Der Blau""@en .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
    ?dorothea dbo:father ?father .
    
    FILTER (str(?dorothea) = ""Dorothea_of_Lorraine"")

    ?parent dbo:child ?father .

    ?renée dbp:spouse ?spouse .
    
    FILTER (str(?renée) = ""Renée_of_Bourbon"")

    FILTER (?parent = ?spouse)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?battleForce
WHERE {
  # Part 1: Commander of the French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:commandedBy ?commander .

  # Part 2: Military force involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:militaryForce ?battleForce .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:givenName ""Richard"" . }
  OPTIONAL { ?person foaf:familyName ""Esterhuysen"" . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER (?birthName = ""Richard Grant Esterhuysen"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
    # Step 1: Identify movies related to Ian Gregson
    ?movie dbo:awardRecipient dbr:Ian_Gregson .
    
    # Step 2: Determine Linda Bruckheimer's spouse
    dbr:Linda_Bruckheimer dbo:spouse ?spouse .

    # Step 3: Find the producer of the movie that connects these two entities
    ?movie dbo:producer ?producer .
    ?movie dbo:actor ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?entityInAthens
WHERE {
  # Wars associated with Konstantinos Ventiris
  OPTIONAL {
    ?ventiris dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation dbo:participatedIn ?war1 .
    FILTER(CONTAINS(LCASE(STR(?ventiris)), ""konstantinos ventiris""))
  }

  # Wars associated with the leader of National Party of Greece
  OPTIONAL {
    ?leader dbo:wikiPageDisambiguates ?partyLeader .
    ?partyLeader dbo:memberOf dbr:National_Party_of_Greece .
    ?partyLeader dbo:participatedIn ?war2 .
    FILTER(CONTAINS(LCASE(STR(?leader)), ""leader of national party of greece""))
  }

  # Entity in Athens
  OPTIONAL {
    ?entityInAthens dbo:location dbr:Athens .
  }
}
```",4,4,5,2,3,2,3,28,0,261,1,0.0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Spouse of Saw Shwe Khet
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  
  # Child of the parent of Min Hla Htut of Pyakaung
  ?parent dbo:child dbr:Min_Hla_Htut_of_Pyakaung ;
          dbo:parentOf ?grandparent .
  ?spouse dbo:childOf ?parent .

  # Predecessor of Myat Hpone Pyo
  ?myatHponePyo dbo:predecessor ?spouse .
  FILTER (?myatHponePyo = dbr:Myat_Hpone_Pyo)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Allan Arbus and his children
  { 
    ?allan a dbo:Person ;
           foaf:name ""Allan Arbus""@en .
    ?childAllan dbo:childOf ?allan .
    ?parentAllan dbo:parentOf ?childAllan .
  }
  
  UNION
  
  # Amy Arbus and her children
  { 
    ?amy a dbo:Person ;
         foaf:name ""Amy Arbus""@en .
    ?childAmy dbo:childOf ?amy .
    ?parentAmy dbo:parentOf ?childAmy .
  }

  # Combine the results to get distinct parents
  VALUES (?parent) {
    (?parentAllan)
    (?parentAmy)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Find Constance of Burgundy
  ?constance a dbo:Person ;
             dbp:name ""Constance of Burgundy""@en .
  
  # Step 2: Identify her spouse(s)
  ?constance dbo:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  ?spouse a dbo:Monarch .

  # Step 4: Find children of this royal spouse
  ?spouse dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?nickCurran { dbr:Nick_Curran }
  
  ?nickCurran dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?nickCurran)
}
```

This query does the following:
- Uses `dbo:associatedBand` to find bands associated with Nick Curran.
- Uses `dbo:member` to find members of those bands, which should include other artists.
- Filters out Nick Curran himself from the results.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?work a dbo:Book ;
        dbo:abstract ?abstract ;
        dbo:country dbr:United_States .
  
  ?work dbo:author ?author .

  ?person dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          a dbo:Politician ;
          dbo:positionHeld ?commanderRole .

  ?commanderRole dbp:title ""Commander"" .

  FILTER(CONTAINS(LCASE(?abstract), ""written work""))
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Lamont Cranston is the alter ego of The Shadow
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Dawit I's child who was a king in Na'od
  ?child dbo:parent dbr:Dawit_I ;
         dbo:spouse ?spouse ;
         dbo:officeHolderOf dbr:Na'od ;
         rdf:type dbo:King .

  # The grandfather of Lamont Cranston
  ?father dbo:parent ?child .
  ?grandfather dbo:parent ?father .

  # Ensure the person is a child of Dawit I and fits the criteria
  FILTER (?child = ?spouse) 
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Peter IV of Aragon
  ?peterIV a dbo:Monarch ;
           dbp:name ""Peter IV of Aragon""@en .

  # Find his father and ensure he is royalty
  ?father dbo:spouse|dbo:partner ?peterIV .
  ?father a dbo:Monarch .

  # Identify the child of this royal father
  ?child dbo:parent ?father ;
         a dbo:Person .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the father of Cecilia Renata of Austria
  ?father dbo:spouse dbr:Cecilia_Renata_of_Austria .
  
  # Find the child of this father
  ?child dbo:parent ?father .

  # Ensure this child is a commander in the war related to Ferdinand III
  ?commander dbo:commanded ?war .
  ?war dbo:participatedIn dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Link the child to the commander role
  FILTER(?child = ?commander)

  # Ensure this person is associated with the 2nd Dragoon Regiment (France)
  ?regiment dbo:commandedBy ?child .
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # Check if this person is linked to a societal event, an event, and a television show
  ?event dbo:relatedTo ?child .
  ?event rdf:type/(dbo:SocietalEvent|dbo:Event|dbo:TelevisionShow) .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book rdfs:label ""Back to Work""@en .
  ?book dbo:author ?author .
  FILTER (lang(?book) = 'en')
}
```

This query does the following:
- Uses `rdfs:label` to find resources labeled as ""Back to Work"" in English.
- Retrieves the author using the `dbo:author` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorName ?birthPlaceAuthor ?nameYoungkin ?birthPlaceYoungkin
WHERE {
  # Find Cece Bell as the author of ""El Deafo""
  ?book dbo:author dbr:Cece_Bell .
  ?book rdfs:label ""El Deafo""@en .

  # Get her birthplace
  dbr:Cece_Bell dbo:birthPlace ?birthPlaceAuthor ;
                dbp:name ?authorName .

  # Find Glenn Youngkin's resource and birthplace
  dbr:Glenn_Youngkin dbp:name ?nameYoungkin ;
                     dbo:birthPlace ?birthPlaceYoungkin .
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  # Find Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?team .
  
  # Find the person born on 1979-11-03 who is both a soccer player and manager
  ?person dbp:birthday ""1979-11-03""^^xsd:date ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .
  
  # Link the team to the person (assuming they are related through playing for the same team)
  ?person dbo:playsFor ?team .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?partyLabel WHERE {
  ?person dbo:birthName ""Bruno Daniel Marie Paul Retailleau""@en .
  ?person rdf:type dbo:Politician ;
          rdf:type dbo:OfficeHolder .
  ?person dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for the DBpedia ontology (`dbo`) and properties (`dbp`).
- **SELECT**: We are selecting the variable `?residence`, which will hold the residence information.
- **WHERE Clause**:
  - We look for a resource `?person` that is of type `dbo:Politician`.
  - The name of this person should match ""Alberto Ruiz-Gallardón"" in English (`@en`).
  - We use an `OPTIONAL` clause to find the residence property, which allows us to handle cases where the residence might not be explicitly listed.

This query assumes that Alberto Ruiz-Gallardón is categorized under `dbo:Politician` and has a name entry in DBpedia. Adjustments may be needed if his resource uses different properties or classifications.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .
  
  ?person dbo:officeHolder ?administration ;
          dbo:country dbr:Spain .
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ceceBirthPlace ?awardeeBirthPlace WHERE {
  # Cece Bell's birthplace
  dbr:Cecil_Alice_Bell a dbo:Writer ;
    dbo:birthPlace ?ceceBirthPlace .

  # Vince Gilligan and his awards
  OPTIONAL {
    dbr:Vince_Gilligan a dbo:Person ;
      dbo:award ?award .
    
    # Find the awardee of one of these awards
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist WHERE {
  VALUES ?fabulousThunderbirds { dbr:The_Fabulous_Thunderbirds }
  VALUES ?nickCurran { dbr:Nick_Curran }

  ?bandMember dbo:memberOf ?fabulousThunderbirds .
  ?bandMember a dbo:MusicalArtist .

  ?person dbp:birthday ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .
  
  ?bandMember dbo:memberOf ?fabulousThunderbirds .

  ?nickCurran dbo:associatedBand ?associatedBand .

  FILTER (?person != ?bandMember)

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?actor dbo:actedIn dbr:High_Society_Blues .
  
  # Identify a notable work (movie) for this actor
  ?notableWork dbo:starring ?actor ;
               a dbo:Film .

  # Get the producer of this notable work
  ?notableWork dbo:producer ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Find children of Saw Shwe Khet who are royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:RoyalFamilyMember .

  # Find the father of this child, who is also royalty
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:RoyalFamilyMember }
  FILTER EXISTS { ?father a dbo:RoyalFamilyMember }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Find the profession of Eugène Cattin and its parent
  ?eugene dbo:profession ?profession ;
          rdfs:label ""Eugène Cattin""@en .
  ?parent owl:equivalentClass ?profession .
  
  # Find actors in those movies who are professionals in the parent profession
  ?movie dbo:starring ?actor .
  ?actor dbo:profession ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfParent WHERE {
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:child dbr:Dorothea_of_Denmark.

  ?parent dbo:child dbr:Dorothea_of_Denmark.

  ?parent dbo:father ?fatherOfParent.
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?member dbo:bandMember ?band ;
          rdfs:label ?realName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Rod Argent's profession
  ?rodArgent dbo:profession ?profession .
  VALUES ?rodArgent { <http://dbpedia.org/resource/Rod_Argent> }

  # Joey B's birth name
  ?joeyB dbp:birthName ?birthName .
  VALUES ?joeyB { <http://dbpedia.org/resource/Joe_Brown_(musician)> } # Assuming Joey B is Joe Brown

  # Elorm Kabu Amenyah's associated musical artist
  ?elormKabuAmenyah dbo:associatedMusicalArtist ?artist .
  VALUES ?elormKabuAmenyah { <http://dbpedia.org/resource/Elorm_Kabu_Amenyah> }

  # Find a professional who matches all criteria
  ?professional dbo:profession ?profession ;
                dbp:birthName ?birthName ;
                dbo:associatedMusicalArtist ?artist .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfPhotographer
WHERE {
  # Find Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Find the parent of that child
  ?child dbo:parent ?parentOfChild .

  # Find professionals in Photography
  ?photographer dbp:occupation dbr:Photography .

  # Find the parent of those professionals
  ?photographer dbo:parent ?parentOfPhotographer .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Princess Muna al-Hussein
  ?princess a dbo:Person ;
            foaf:name ""Muna al-Hussein""@en .

  # Her child who is royalty
  ?child dbo:child ?princess ;
         a dbo:RoyalFamilyMember .

  # Parent of that royal child
  ?parent dbo:spouse ?child .
  
  # Ensure the parent is not Princess Muna herself (to avoid circular logic)
  FILTER (?parent != ?princess)

  # Grandparent (parent of the royal child)
  ?grandparent dbo:spouse ?parent ;
               a dbo:RoyalFamilyMember .
}
```

This query does the following:
- Identifies Princess Muna al-Hussein.
- Finds her children who are members of a royal family (`dbo:RoyalFamilyMember`).
- Determines the spouse (parent) of that child.
- Ensures the parent is not Princess Muna herself to avoid circular logic.
- Finally, it identifies the grandparent by finding the spouse of this parent.",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?artist { dbr:Apache_Indian }
  ?album dbo:artist ?artist .
  ?album a ?type .
  FILTER(?type IN (dbo:Album, dbo:Singles))
  OPTIONAL { ?album dbo:title ?title . BIND(CONCAT(""Album: "", ?title) AS ?work) }
  OPTIONAL {
    ?song dbo:lyricist ?artist ;
          dbo:title ?title .
    BIND(CONCAT(""Song: "", ?title) AS ?work)
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerOfJohnnyDoughboy ?producerOfJanetGaynorMovie
WHERE {
  # Find the producer of ""Johnny Doughboy""
  ?movie1 a dbo:Film ;
          rdfs:label ""Johnny Doughboy""@en .
  
  ?movie1 dbo:director ?producerOfJohnnyDoughboy .

  # Find a movie that is a claim to fame for Janet Gaynor as both actor and producer
  ?movie2 a dbo:Film ;
          dbo:starring dbr:Janet_Gaynor ;
          dbo:director dbr:Janet_Gaynor .
  
  ?movie2 rdfs:label ?title .

  # Ensure the movie is a claim to fame for Janet Gaynor
  OPTIONAL { 
    ?claimToFame dbo:subject dbr:Janet_Gaynor ;
                 dbo:object ?movie2 .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:starring dbr:Richard_E._Grant ;
        dbo:character [ 
          dbo:alterEgo dbr:The_Shadow_(video_game) ;
          dbo:profession foaf:Agent
        ] .
  
  ?actor dbo:actedIn ?show ;
         a foaf:Person ;
         dbo:occupation dbr:Actor .
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?year ?laureate ?contribution WHERE {
  ?prize a dbo:NobelPrizeInPhysics .
  ?prize dbo:year ?year .
  ?prize dbo:laureates ?laureate .
  OPTIONAL { ?laureate dbo:abstract ?contribution }
}
ORDER BY ?year
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Juan Carlos Molina (footballer)
  ?molina dbo:wikiPageID ""Juan_Carlos_Molina_(footballer)""@en .
  
  # Actor from All or Nothing: Manchester City
  ?actor dbo:wikiPageID ""All_or_Nothing:_Manchester_City""@en ;
         dbo:castMember ?allOrNothingActor .

  # Player associated with both Juan Carlos Molina and the actor
  ?player dbo:player ?molina .
  ?player dbo:player ?allOrNothingActor .

  # The player is a soccer player and an athlete
  ?player dbo:sport dbp:Soccer ;
          dbo:athlete ?athlete .

  # Team of person born on Marcelo Sarmiento's birthday
  ?person dbo:birthday ?birthday .
  FILTER (STR(?birthday) = ""1978-10-12""^^xsd:date) ; # Assuming Marcelo Sarmiento's birthday is October 12, 1978
  ?team dbo:member ?person .

  # The player is also a soccer manager
  ?player dbo:sport dbp:Soccer ;
          dbo:manager ?team .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?calderForce ?bayneConflict
WHERE {
  # Find the French campaign in Egypt and Syria
  ?campaign a dbo:MilitaryOperation ;
            rdfs:label ""French campaign in Egypt and Syria""@en .

  # Find the commander of this campaign
  ?campaign dbo:commander ?commander .

  # Ensure the event is both a societal event and an event
  ?campaign a dbo:SocietalEvent, dbo:Event .

  # Find Robert Calder's military force
  ?calderForce dbo:commandedBy dbr:Robert_Calder ;
               a dbo:MilitaryUnit .

  # Find William Bayne's military conflict
  ?bayneConflict dbo:participatedIn dbr:William_Bayne_(Royal_Navy_officer) ;
                 a dbo:MilitaryConflict, dbo:Event .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Phantomsmasher"" .
  
  OPTIONAL { 
    ?band dbo:associatedBand ?person ;
          dbp:name ""Human Remains"" .
  }
  
  OPTIONAL {
    ?band dbo:member ?person .
  }
}
```

This query does the following:
- Searches for a person named ""Phantomsmasher"" who is a `MusicalArtist`.
- Checks if this artist is associated with or a member of a band named ""Human Remains.""",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?person { dbr:Peter_IV_of_Aragon }
  ?person dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,118,1,0.0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military force involved in the Battle of Vienna
  ?battle dbo:militaryForce ?militaryForce .
  
  FILTER (str(?battle) = ""Battle_of_Vienna"")

  # Find the commander of this military force
  ?militaryForce dbo:commander ?commander .

  # Ensure there is a link between the commander, a television show, and a societal event
  ?commander dbo:wikiPageRedirects ?tvShow .
  ?tvShow rdf:type dbo:TelevisionSeries .
  
  OPTIONAL {
    ?tvShow dbo:socialEvent ?event .
    FILTER (str(?event) = ""Societal_event"")
  }
}
```",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""Ackquille Jean Pollard""@en .
  ?person dbo:birthPlace ?place .
  FILTER (str(?place) = str(dbpedia:Florida))
}
```

This query does the following:
- Uses `foaf:name` to match the full name ""Ackquille Jean Pollard"".
- Checks if the `dbo:birthPlace` of this person is Florida.
- Filters results to ensure the birthplace matches exactly with the DBpedia resource for Florida.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Maria Anna of Bavaria (born 1574)
  dbr:Maria_Anna_of_Bavary_(1574) dbo:spouse ?fatherOfChild .
  
  # Child of Maria Anna and her spouse
  ?child dbo:parent dbr:Maria_Anna_of_Bavary_(1574) ;
         dbo:parent ?fatherOfChild .

  # Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:spouse ?motherOfFerdinandsChild .
  
  # Child of Ferdinand III
  ?ferdinandChild dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor ;
                  dbo:parent ?motherOfFerdinandsChild .

  # The father of Ferdinand's child is Ferdinand himself
  FILTER (?fatherOfChild = dbr:Ferdinand_III,_Holy_Roman_Emperor)

  # Ensure the child is royalty
  ?child a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Sam Concepcion's URI and his profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  
  ?sam dbo:occupation ?profession .

  # Find other professionals with the same occupation
  ?otherProfessional a dbo:Person ;
                    dbo:occupation ?profession .
  
  FILTER(?sam != ?otherProfessional)
}
```",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantSantiago ?countryResidence
WHERE {
  # Santiago de Compostela's tenant (assuming it refers to the city itself)
  dbr:Santiago_de_Compostela dbo:locatedIn dbr:Spain .
  
  # A Spanish citizen's residence that is a country
  ?citizen dbo:nationality dbr:Spain .
  ?citizen dbo:residence ?countryResidence .
  FILTER (isLiteral(?countryResidence) && datatype(?countryResidence) = xsd:string)
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shadowProfession ?actorProfession
WHERE {
  # Find The Shadow and its profession
  { 
    ?shadow dbo:wikiPageRedirects <http://dbpedia.org/resource/The_Shadow> .
    ?shadow dbo:occupation ?shadowProfession .
  }
  
  # Find an actor and its profession
  {
    ?actor dbp:profession ""Actor""@en .
    ?actor dbo:occupation ?actorProfession .
  }
}
```

### Explanation

- **The Shadow**: We use `dbo:wikiPageRedirects` to find the correct DBpedia resource for ""The Shadow"" since it might be redirected.
- **Occupation**: The property `dbo:occupation` is used to find the professional role associated with both entities.

This query will return the professions related to ""The Shadow"" and a general actor. Adjustments may be needed based on specific DBpedia schema changes or additional context.",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  ?person foaf:name ""Brian Kemp""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:office ?office .
  ?office dbo:partOf ?institution .
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Prince Faisal bin Hussein
  ?person a dbo:Person ;
          foaf:name ""Faisal bin Hussein""@en .
  
  # Step 2: Find his children
  ?child dbo:spouseOrPartnerOf ?person ;
         a dbo:Person .

  # Step 3: Check if the child is royalty
  OPTIONAL { ?child dbp:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Step 4: Determine parent of the royal child
  ?parent dbo:spouseOrPartnerOf ?child ;
          a dbo:Person .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find child of Archduchess Margarete Sophie of Austria
  ?child dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Ensure the same individual is a child of Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Ensure this individual is a predecessor to Carl, Duke of Württemberg
  ?child dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find Afeez Oyetoro's DBpedia resource
  dbr:Afeez_Oyetoro dbo:birthName ""Afeez Oyetoro"" .
  
  # Find a show/movie that Afeez Oyetoro acted in
  ?show dbo:starring dbr:Afeez_Oyetoro .

  # Ensure the show is both a TV series and a movie
  ?show rdf:type dbo:TelevisionShow ;
        dbo:basedOnFilm dbr:?movie .
  
  # Find other actors of this show/movie
  ?show dbo:starring ?actor .
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Stephen V of Hungary
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Ensure the same person is a parent of Charles Martel of Anjou
  ?child dbo:child dbr:Charles_Martel_of_Anjou .
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Find players in ""All or Nothing: Manchester City""
  ?show rdfs:label ""All or Nothing: Manchester City""@en .
  ?show dbo:castMember ?player .

  # Ensure the player is a soccer player and an athlete
  ?player dbo:sport dbr:Soccer .
  ?athlete dbp:occupation ""Athlete"" .
  FILTER (?player = ?athlete)

  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?team .

  # Ensure the player is in Pablo Aimar's team
  ?player dbo:playsForTeam ?team .

  # Find Marty Pollio's birthdate
  dbr:Marty_Polio dbp:birthday ?birthday .

  # Find athletes born on Marty Pollio's birthday
  ?person dbp:birthday ?birthday .
  ?person dbp:occupation ""Athlete"" .
  FILTER (?player = ?person)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  ?bandMember rdf:type dbo:Person .
  ?bandMember dbp:nativePlace dbr:Florida .
  BIND(?bandMember AS ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royaltyChild
WHERE {
  # Step 1: Identify Roger II of Sicily
  dbr:Roger_II_of_Sicily a dbo:Monarch ;
                          dbo:child ?child .

  # Step 2: For each child, find their parents (which could be Roger II or another spouse)
  ?child dbo:parent ?parent .

  # Step 3: From these parents, find their children who are royalties
  ?parent dbo:child ?royaltyChild .
  
  FILTER EXISTS { ?royaltyChild a dbo:Monarch }
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional (COUNT(?artist) AS ?count)
WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_musical_artist dbo:birthName ?bobBirthName .

  # Find artists with the same birth name as Bob Thompson and in the same band/profession as Sam Concepcion
  ?artist a dbo:MusicalArtist ;
          dbo:birthName ?bobBirthName ;
          dbo:profession ?samProfession .
}
GROUP BY ?professional
ORDER BY DESC(?count)
LIMIT 1
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?alterEgo WHERE {
  # Find the actor born as Richard Grant Esterhuysen
  ?actor dbo:birthName ""Richard Grant Esterhuysen"" .
  
  # Ensure this actor has acted in a movie that became a television show
  ?movie dbo:starring ?actor ;
         dbo:adaptationOf dbr:The_Shadow_(TV_series) .

  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  dbr:Billy_Lyall dbo:associatedBand ?band .
}
```

This query uses the `dbo:associatedBand` property to find bands associated with Billy Lyall. The resource identifier for Billy Lyall is assumed to be `dbr:Billy_Lyall`, which should match DBpedia's internal naming conventions.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee
WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Awardees of Commander of the Royal Victorian Order
  ?awardee dbo:title ""Commander of the Royal Victorian Order""@en ;
          dbo:parent ?parentOfAwardee .

  # Find the parent of the child of Frederick Stanley
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .
  
  ?artist a dbo:Artist, dbo:MusicalArtist ;
          dbo:dateOfDeath ?deathDate .

  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)

  ?movie dbo:starring ?artist .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player rdfs:label ""Jamie McCunnie""@en .
  ?player dbo:playsFor ?club .

  ?club rdf:type dbo:SportsClub ;
        dbo:sport dbr:Soccer .

  ?club dbo:manager ?manager .
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES (?person) { dbr:George_Hamilton_Cameron }
  
  ?person dbo:awardsReceived ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:director dbr:Manuel_Huerga .
}
```",1,2,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?event WHERE {
  # Anxo Quintana's involvement in an office or position
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  # Office held by Anxo Quintana related to Santiago de Compostela
  ?office dbo:location dbr:Santiago_de_Compostela ;
          dbo:agent ?person .

  # Event related to the office of leader/administration
  ?event dbo:place ?office ;
         a dbo:Event .
  
  FILTER EXISTS { ?office dbp:title ?title . FILTER regex(?title, ""leader|administration"", ""i"") }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?antoinetopic dbo:title ""Antoine, Duke of Lorraine""@en .
  ?antoinetopic dbo:child ?child .
  ?child rdf:type ?type .
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  ?artist dbo:bandMember ?bandMember .
  
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",2,3,3,2,1,3,3,71,1,1,6,0.5,0.14285714285714285,0.22222222222222224
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Birthplaces of Paulus Powell, Vince Gilligan, and Cece Bell
  VALUES (?person) { 
    dbr:Paulus_Powell 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  ?person dbo:birthPlace ?birthPlace.

  # Check if the birthplace is a region or administrative region
  OPTIONAL {
    ?birthPlace rdf:type ?type.
    FILTER (?type IN (dbo:Region, dbo:AdministrativeRegion))
  }

  # Find governors of these regions
  OPTIONAL {
    ?regionGovernor dbo:governs ?birthPlace.
    ?regionGovernor a dbo:Politician.
    ?regionGovernor dbp:birthPlace ?governorBirthPlace.
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeLabel ?awardLabel
WHERE {
  ?person dbo:award dbr:Nobel_Prize_in_Physics .
  ?person rdfs:label ?awardeeLabel .
  FILTER(LANG(?awardeeLabel) = 'en') .

  OPTIONAL {
    ?person dbo:award ?otherAward .
    ?otherAward rdfs:label ?awardLabel .
    FILTER(LANG(?awardLabel) = 'en')
  }
}
ORDER BY ?awardeeLabel
```

### Explanation

- **PREFIX**: Defines the namespaces for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT**: Ensures unique pairs of awardees and their awards are returned.
- **WHERE Clause**:
  - `?person dbo:award dbr:Nobel_Prize_in_Physics`: Matches individuals who have won the Nobel Prize in Physics.
  - `?person rdfs:label ?awardeeLabel`: Retrieves the label (name) of each awardee, filtering for English language labels.
  - **OPTIONAL Clause**: Finds other awards (`?otherAward`) received by these individuals and retrieves their labels, again filtering for English.

- **ORDER BY**: Sorts results alphabetically by the awardee's name.

This query will return a list of Nobel Prize in Physics awardees along with any other awards they have received.",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .
  ?child rdf:type dbo:Royalty .
  ?predecessor dbo:successor ?child .
  ?predecessor dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfIndia ?workNativeOf
WHERE {
  # Jamsetji Tata's nationality or birthplace in India
  VALUES (?tata) { dbr:Jamsetji_Tata }
  
  OPTIONAL {
    ?tata dbo:nationality dbr:India .
    BIND(""India"" AS ?nativeOfIndia)
  }
  
  OPTIONAL {
    ?tata dbo:birthPlace ?birthPlace .
    FILTER(?birthPlace = dbr:India)
    BIND(""India"" AS ?nativeOfIndia)
  }

  # Work known for that is Indian
  OPTIONAL {
    ?tata dbo:knownFor ?work .
    ?work dbo:nationality dbr:India .
    BIND(dbo:location ?workNativeOf)
  }
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  FILTER NOT EXISTS { ?child a dbo:Person . FILTER (!CONTAINS(LCASE(str(?child)), 'politician')) }
  OPTIONAL { ?child dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(str(?occupation)), 'politician')) }
}
```",1,2,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  
  OPTIONAL { 
    ?series dbr:All_or_Nothing:_Manchester_City .
    ?series dbo:actor ?person .
    ?person dbo:sport dbr:Soccer .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Stuart Mcbeath Tosh"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonPerson WHERE {
  # Find a child of Ferdinand II, Holy Roman Emperor
  ?child2 dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  # Find a father of a child of Ferdinand III, Holy Roman Emperor
  ?father dbo:child ?child3 .
  ?child3 dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .

  # The common person is both the child and the father
  FILTER (?child2 = ?father)
  
  BIND(?child2 AS ?commonPerson)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person rdfs:label ""Linda Miller (actress)""@en .
  ?person dbo:spouse|dbo:partner ?parent .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?singerRole ?alterEgoRole ?band
WHERE {
  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Find professional roles related to singing for Bob Thompson
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:profession ?singerRole .
    FILTER(CONTAINS(LCASE(?singerRole), ""singer""))
  }

  # Find the alter ego of The Shadow and its professional role
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  OPTIONAL {
    ?alterEgo dbo:profession ?alterEgoRole .
  }

  # Find the band associated with a person born as a musical artist
  ?person dbo:birthName ?birthName .
  FILTER EXISTS { ?person dbo:occupation dbr:Musical_artist }
  OPTIONAL {
    ?person dbo:band ?band .
  }
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?event ?country
WHERE {
  # Anxo Quintana's leadership event
  ?person rdfs:label ""Anxo Quintana""@en .
  ?event dbo:leader ?person ;
         a dbo:Event .

  # Álvaro Quirós' residence country and its relation to Santiago de Compostela
  ?resident rdfs:label ""Álvaro Quirós""@en .
  ?country dbo:residence ?resident ;
           dbo:location dbr:Santiago_de_Compostela .

  # Linking the office of leadership to the event
  ?event dbo:office ?office .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSawShweKhet ?predecessorOfRoyalChild WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?spouseOfSawShweKhet .
  VALUES ?sawShweKhet { <http://dbpedia.org/resource/Saw_Shwe_Khet> } .

  # Find Saw Min Phyu's spouse and their royal child
  ?sawMinPhyu dbo:spouse ?spouseOfSawMinPhyu .
  VALUES ?sawMinPhyu { <http://dbpedia.org/resource/Saw_Min_Phyu> } .
  
  ?spouseOfSawMinPhyu dbo:child ?royalChild .
  ?royalChild a dbo:Monarch . # Assuming royalty is represented by Monarch

  # Find the predecessor of this royal child
  ?royalChild dbo:predecessor ?predecessorOfRoyalChild .
  
  # Ensure the spouse of Saw Shwe Khet is the same as the predecessor of the royal child
  FILTER (?spouseOfSawShweKhet = ?predecessorOfRoyalChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?location WHERE {
  VALUES ?coro { dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico }

  ?award dbo:recipient ?coro .
  ?award dbo:country dbr:United_States .
  ?award dbp:settlement ?location .
  FILTER EXISTS { ?location a dbo:Settlement }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:residence ?countryResidence .
  ?countryResidence a dbo:Country .

  ?person dbo:placeOfBirth ?santiagoDeCompostela .
  ?santiagoDeCompostela rdfs:label ""Santiago de Compostela""@en .

  ?person dbo:officeHolderOf dbr:Alberto_Núñez_Feijóo .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team
WHERE {
  # Get players for Juan Carlos Molina and Sergio Agüero
  ?molinaPlayer dbo:player <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> .
  ?agüeroPlayer dbo:player <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .

  # Find a person who is both a player and a manager
  ?person dbo:player ?team ;
          dbo:manager ?team .

  # Get the birthdate of Marcelo Sarmiento
  ?sarmiento dbp:birthday ?birthday .
  FILTER (str(?birthday) = ""1977-07-19"") # Assuming this is his birthday

  # Ensure the team is associated with the birthday of Marcelo Sarmiento
  ?team dbp:manager ?person ;
        dbo:birthDate ?birthday .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfRogerPryor ?personWithBirthName
WHERE {
  # Part 1: Find the spouse of Roger Pryor (actor)
  ?rogerPryor dbo:birthName ""Roger Pryor""@en .
  ?rogerPryor a dbo:Actor .
  ?rogerPryor dbo:spouse ?spouseOfRogerPryor .

  # Part 2: Find the person born with the birth name of Tisha Sterling's parent
  ?tishaSterling dbp:birthName ""Tisha Sterling""@en .
  ?parentOfTishaSterling dbo:child ?tishaSterling .
  ?parentOfTishaSterling dbo:birthName ?birthName .

  # Find a person with the same birth name as Tisha Sterling's parent
  ?personWithBirthName dbo:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the TV show ""All or Nothing: Manchester City""
  ?show dcterms:title ""All or Nothing: Manchester City""@en .
  
  # The player is part of this show
  ?show dbo:castMember ?player .

  # The player is an actor
  ?player dbo:occupation dbr:Actor .

  # The player is also a soccer player/athlete
  OPTIONAL { ?player dbo:sport dbr:Soccer . }
  OPTIONAL { ?player dbo:occupation dbr:Athlete . }

  FILTER EXISTS { ?player dbo:sport dbr:Soccer } || 
               EXISTS { ?player dbo:occupation dbr:Athlete }
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonFather WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?catherineFather .
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:mother ?dorotheasMother .
  ?dorotheasMother dbo:father ?commonFather .
  FILTER (?catherineFather = ?commonFather)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfShelbyOaks ?professionalIdentityOfTheShadow
WHERE {
  # Find the actor of Shelby Oaks
  ?shelbyOaks a dbo:FilmCharacter ;
              dbo:portrayedBy ?actorOfShelbyOaks .
  
  FILTER regex(str(?shelbyOaks), ""Shelby Oaks"", ""i"")

  # Find the professional identity associated with The Shadow
  ?theShadow a dbo:FictionalCharacter ;
             rdfs:label ""The Shadow""@en ;
             dbo:alterEgoOf ?professionalIdentityOfTheShadow .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse
  ?spouse dbo:child ?child .

  # Step 3: Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Step 4: Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Step 5: Identify Roger III, Duke of Apulia's parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .

  # Step 6: Ensure the grandchild is also a child of this parent
  ?parent dbo:child ?grandchild .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?ceciliaRenata a dbr:Cecilia_Renata_of_Austria ;
                 dbo:father ?commonFather .

  ?eleonore a dbr:Eleonore_of_Austria,_Queen_of_Poland ;
            dbo:father ?commonFather .

  ?commonFather dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?birthNamePerson ?bandMember
WHERE {
  # Step 1: Find a native of Florida who is a musical artist
  ?native dbo:nativePlace dbr:Florida ;
          dbo:occupation dbr:Musical_artist .

  # Step 2: Find another person born as the birth name of this native and also a musical artist
  ?birthNamePerson dbp:birthday ?birthday ;
                   dbp:birthName ?birthName ;
                   dbo:occupation dbr:Musical_artist .
  
  FILTER (?birthName = ?native && ?birthName != ?native)

  # Step 3: Check if this person is a band member of an associated musical artist of Bobby Shmurda
  ?associatedArtist dbo:associatedBandMember ?bandMember ;
                   dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  
  FILTER (?birthNamePerson = ?bandMember)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?alterEgo
WHERE {
  # Find actors in ATL (film)
  ?movie dbo:title ""ATL""@en .
  ?movie dbo:starring ?actor .

  # Find the alter ego in The Golden Master series
  ?series dbo:title ""The Golden Master""@en .
  ?series dbo:character ?alterEgo .
  ?alterEgo dbo:profession ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:spouse|dbo:partner dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find children who are also children of Albrecht, Duke of Württemberg
  ?child dbo:parent ?parent ;
         dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Check if any of these children have grandchildren who are royalty
  ?grandchild dbo:parent ?child .
  
  # Filter to ensure the grandchild is a royalty
  ?grandchild rdf:type dbo:Monarch ;
              rdfs:label ?name .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Manuel Pinto da Costa as an individual
  dbr:Manuel_Pinto_da_Costa dbo:presidentOf dbr:São_Tomé_and_Príncipe .

  # Find forces associated with him
  ?force dbo:leader dbr:Manuel_Pinto_da_Costa .
  
  # Ensure the force is involved in military conflicts and societal events
  ?force a dbo:MilitaryConflict ;
        dbo:socialEvent ?event .
}
```

This query attempts to find an entity (`?force`) that:
- Is led by Manuel Pinto da Costa.
- Is classified as both a `MilitaryConflict` and has some association with a `socialEvent`.

Note: The exact classes like `dbo:MilitaryConflict` and `dbo:socialEvent` might need adjustment based on the actual DBpedia ontology, as these are illustrative.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Identify the disease/societal event
  ?event a dbo:Disease ;
         dbo:socialEventOf ?society .

  # Find the commander involved in this event
  ?commander dbo:rank ""Commander""^^xsd:string ;
             dbo:militaryBranch dbr:United_States_Navy ;
             dbo:participatedInWar ?war .
  
  # Ensure the war is related to the societal event/disease
  ?war dbo:relatedEvent ?event .

  # Check if this commander is married to Bill Clinton
  ?commander dbo:spouse dbr:Bill_Clinton .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandchild ?predecessorChild
WHERE {
  # Alexander of Württemberg and his descendants
  ?alex dbo:birthYear ""1804""^^xsd:gYear ;
        dbo:deathYear ""1881""^^xsd:gYear ;
        dbp:name ""Alexander of Württemberg""@en .
  
  ?child1 dbo:parent ?alex ;
          dbo:spouse ?spouse1 .

  ?grandchild dbo:parent ?child1 ;
              dbo:spouse ?spouse2 .

  ?greatGrandchild dbo:parent ?grandchild .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philipp dbp:name ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?child2 dbo:parent ?philipp .

  # Find the predecessor (older sibling) of Philipp's child
  ?predecessorChild dbo:parent ?philipp ;
                    dbo:birthYear ?year1 .
  FILTER (?year1 < ?child2BirthYear)
  OPTIONAL { ?child2 dbp:birthDate ?child2BirthDate . BIND(YEAR(?child2BirthDate) AS ?child2BirthYear) }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentProfession
WHERE {
  dbr:Eugène_Cattin dbo:profession ?profession .

  ?profession dbo:broader ?parentProfession .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  # Find the resource for Afeez Oyetolo
  ?actor a dbo:Actor ;
         foaf:name ""Afeez Oyetolo""@en .
  
  # Find shows/movies where Afeez Oyetolo starred
  ?show dbo:starring ?actor .

  # Ensure the show is classified as a movie or TV series
  ?show rdf:type ?type .
  FILTER (
    ?type = dbo:Film || 
    ?type = dbo:TelevisionSeries
  )
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip ;
          dbo:title ?titleParent .
  FILTER(CONTAINS(LCASE(str(?titleParent)), ""royalty""))

  # Step 3: Determine the father of that parent
  ?grandfather dbo:spouse ?parent .

  # Step 4: Identify the spouse of this grandfather
  ?spouse dbo:spouse ?grandfather .

  # Step 5: Find Béla IV of Hungary's child who is royalty
  ?belaIV a dbo:Person ;
          foaf:name ""Béla IV of Hungary""@en .
  
  ?royalChild dbo:child ?belaIV ;
              dbo:title ?titleRoyalChild .
  FILTER(CONTAINS(LCASE(str(?titleRoyalChild)), ""royalty""))

  # Step 6: Determine the child of that royal child
  ?grandchild dbo:child ?royalChild .

  # Ensure the grandchild is the same person as Philip
  FILTER(?philip = ?grandchild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?miguelMauraOffice
WHERE {
  # Find the office of the commander in the Central African Republic Civil War
  ?war dbr:Central_African_Republic_Civil_War .
  ?war dbo:hasCommander ?commander .
  ?commander dbo:office ?commanderOffice .
  
  FILTER EXISTS { ?commander a dbo:Politician . }
  FILTER EXISTS { ?commander a dbo:OfficeHolder . }

  # Find the office of Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelMauraOffice .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Archduchess Helena of Austria
  ?helena a dbo:Archduchess ;
          foaf:name ""Helena of Austria""@en .
  
  # Step 2: Find her spouse
  ?helena dbp:spouse ?spouse .

  # Step 3: Identify the child of the spouse
  ?child dbp:parent ?spouse .

  # Step 4: Check if the child is a royalty
  ?child dbo:royalTitle ?title .
  
  # Step 5: Find the predecessor (parent) of this royal child
  ?predecessor dbp:child ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Stephen V of Hungary and his child
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?stephenV dbo:child ?child .

  # Charles I of Hungary's grandparent who is royalty
  ?charlesI a dbo:Monarch ;
            foaf:name ""Charles I of Hungary""@en .
  
  ?charlesI dbp:father ?father .
  ?father dbo:parent ?grandparent .
  ?grandparent a dbo:Monarch .

  # Philip, Despot of Romania's grandparent who is royalty and their spouse
  ?philip a dbo:Despot ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?philip dbp:father ?parent .
  ?parent dbo:parent ?grandparent2 .
  ?grandparent2 a dbo:Monarch .

  ?grandparent2 dbo:spouse ?spouse .

  # Ensure the grandparent from Charles I and Philip are the same
  FILTER (?grandparent = ?grandparent2)

  # The child of Stephen V should be the spouse of the common grandparent
  FILTER (?child = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
    ?child dbo:parent dbr:Philip_I_of_Castile .
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(STR(?title)), ""king"") || CONTAINS(LCASE(STR(?title)), ""queen""))

    dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?parent .

    ?child dbo:parent ?parent .

    ?child dbo:father ?father .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""William Gayner"" .
  ?person dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { ?birthPlace a dbo:Region . }
  FILTER EXISTS { ?birthPlace a dbo:Country . }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:The_Shadow_(video_game) dbo:character dbr:Lamont_Andrews .
  
  dbr:Lamont_Andrews a dbo:FictionalCharacter ;
                     dbo:portrayedBy ?actor .

  ?actor a dbo:Actor .
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlaceEntityInJapan
WHERE {
  # Find awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  # Filter for Japanese awardees
  ?awardee dbp:nationality dbr:Japan .

  # Get birthplace of the awardee
  ?awardee dbo:birthPlace ?birthPlace .

  # Find entities in Japan that match the birthplace
  ?birthPlaceEntityInJapan a dbo:Place ;
                          dbo:country dbr:Japan ;
                          rdfs:label ?label .
  
  FILTER (CONTAINS(LCASE(?label), LCASE(STR(?birthPlace)))) .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  # Find Apache Indian's musical work
  ?work dbo:artist dbr:Apache_Indian ;
        a dbo:MusicalWork .

  # Find Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .

  # Connect the musical work to Victor Saville's birthplace
  ?work dbp:originCountry ?country .
  ?country dbo:locationCity ?birthPlace .

  # Get the writer of the musical work
  ?work dbo:composer ?writer .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
}
```

This query does the following:
- Uses `foaf:name` to find the person with the name ""Hon. Mary Frances Bowes-Lyon"".
- Retrieves the parent of this person using the `dbo:parent` property.",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?campaign ?battle1Force ?battle2Force WHERE {
  # Commander of the French campaign in Egypt and Syria
  ?campaign a dbo:MilitaryCampaign ;
            dbo:commander ?commander ;
            rdfs:label ""French campaign in Egypt and Syria""@en .
  
  # Military force involved in the Battle of Fort Royal
  ?battle1 dbr:Battle_of_Fort_Royal ;
           dbo:militaryForce ?battle1Force .

  # Military force involved in the Battle of Cape Finisterre (1805)
  ?battle2 dbr:Battle_of_Cape_Finisterre_(1805) ;
           dbo:militaryForce ?battle2Force .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
    # Step 1: Find Mariclare Costello's spouse
    ?mariclare a dbo:Person ;
               foaf:name ""Mariclare Costello""@en .
    
    ?spouse dbo:spouseOf ?mariclare .

    # Step 2: Find the children of this spouse
    ?child dbo:parent ?spouse .

    # Step 3: Determine the parents of these children
    ?parent dbo:child ?child .

    # Step 4: Identify Amy Arbus's parent
    ?amy a dbo:Person ;
         foaf:name ""Amy Arbus""@en .
    
    ?amyParent dbo:child ?amy .

    # Step 5: Find commonality between the parents from step 3 and Amy Arbus's parent
    FILTER (?parent = ?amyParent)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel WHERE {
  # Resource for the Great Turkish War
  dbr:The_Great_Turkish_War dbo:participatedIn ?event .
  
  # Find individuals who were commanders in this event
  ?event dbo:commandedBy ?commander .

  # Get labels for better readability
  SERVICE <http://dbpedia.org/sparql> {
    ?commander rdfs:label ?commanderLabel .
    FILTER (lang(?commanderLabel) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?character a dbo:FictionalDetective .
  ?character rdfs:label ""The Shadow""@en .
  OPTIONAL { ?character dbo:creator ?creator . }
  OPTIONAL { ?character dbo:portrayedBy ?actor . }
  
  FILTER (lang(?characterLabel) = 'en')
  
  BIND(COALESCE(?creator, ?actor) AS ?professional)
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAlbrecht WHERE {
  # Find child of Albrecht, Duke of Württemberg
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Find child of Philipp Albrecht, Duke of Württemberg
  ?philippChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Find predecessor of the child of Philipp Albrecht
  ?predecessor dbo:successor ?philippChild .
  
  # Ensure the predecessor is the same as the child of Albrecht
  FILTER (?childOfAlbrecht = ?predecessor)
  
  # Find parent of Archduchess Margarete Sophie of Austria
  ?parentArchduchess dbo:child dbr:Margarete_Sophie,_Archduchess_of_Austria .
  
  # Ensure the child is a royalty
  ?childOfAlbrecht rdf:type dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person dbo:occupation dbr:Sports_manager .
  ?person dbo:managerOf ?team .
  ?team a ?type .
  FILTER (
    ?type = dbr:Soccer_club_season ||
    ?type = dbr:Sports_season ||
    ?type = dbr:Sports_team_season
  )
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?award ?date WHERE {
  ?award dbo:date ""300""^^xsd:gYear .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbp:birthPlace dbr:Athens . }
  OPTIONAL { ?awardee dbp:deathPlace dbr:Athens . }
}
```

This query attempts to find awards given in the year 300, their recipients (awardees), and checks if these awardees have any connection to Athens as a birth or death place.",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person dbp:name ""William I of Sicily""@en .
  ?child a dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?work ?role ?producer
WHERE {
  # Janet Gaynor's claim to fame works (movies or other works)
  VALUES (?claimToFame) { 
    dbr/A_Star_Is_Born_(1937_film) 
    dbr/Little_Orphan_Annie_(film) 
    dbr/Seventh_Heaven_(1927_film) 
  }
  
  ?work dbo:starring dbr:Janet_Gaynor .
  ?work rdf:type dbo:Film .

  # Find her role in these works
  OPTIONAL {
    ?work dbp:role ?role .
  }

  # Find the producers of these works
  OPTIONAL {
    ?work dbo:producer ?producer .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfFather WHERE {
  # Step 1: Find Maria Anna of Bavaria
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthYear ?birthYear .
  FILTER(?birthYear = 1574)

  # Step 2: Find her children
  ?child dbo:parent ?mariaAnna .

  # Step 3: Find the father of each child
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?child .

  # Step 4: Find the children of this father
  ?childOfFather dbo:parent ?father .

  # Step 5: Filter for royalty and commander in Thirty Years' War
  ?childOfFather a dbo:Monarch ;
                 dbo:militaryCommanderIn ?thirtyYearsWar .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .

  # Check if the person is an athlete
  ?person dbo:sportsTeam dbr:Athlete .

  # Check if the person is a soccer player
  ?person dbo:sport dbr:Soccer .

  # Check if the person is a sports manager
  ?person dbo:occupation dbr:Sports_Manager .

  # Check if the person is a soccer manager
  ?person dbo:managerSportTeam dbr:Soccer .
}
```",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award [ a dbo:Award ; 
                      rdfs:label ""Knight Commander of the Order of the Bath""@en ] .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryEvent, dbo:SocietalEvent .

  ?event dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfAward WHERE {
  # Find bands from New York State
  ?band a dbo:Band ;
        dbo:country dbr:United_States ;
        dbo:stateOrProvince dbr:New_York_(state) .

  # Find awards that are regions, states, and settlements in America
  ?award a dbo:Award ;
         dbo:country dbr:United_States ;
         (dbo:region|dbo:stateOrProvince|dbo:settlement) ?nativeOfAward .

  # Link the band to the award
  ?band dbo:awardReceived ?award .
}
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac's role as commander in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac dbo:commanderOf dbr:Great_Turkish_War .
  
  # Successor who is a politician and office holder
  ?successor dbo:successorOf dbr:Mikołaj_Kazimierz_Pac ;
             a dbo:Politician, dbo:OfficeHolder .

  # Involvement in the Great Turkish War
  ?successor dbo:commanderOf dbr:Great_Turkish_War .
  
  # Reference to George Ducas (contextual relationship)
  OPTIONAL { ?successor dbo:relatedTo dbr:George_Ducas }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ackquille Jean Pollard (2 Chainz)
  dbr:2_Chainz a dbo:MusicalArtist ;
               foaf:name ""Ackquille Jean Pollard""@en .

  # Associated musical artist of Bobby Shmurda
  ?associatedArtist dbo:associatedBandMember dbr:Bobby_Shmurda ;
                   dbo:genre ?genre .

  # Check if the person is a band member and a musical artist
  ?person dbo:bandMemberOf ?associatedArtist ;
          a dbo:MusicalArtist .

  # Native region related to an award in New York (state)
  ?person dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country dbr:United_States ;
               dbo:stateOrProvince dbr:New_York_(state) .

  # Ensure the person is American
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_States .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Thomas Letsch's managed teams
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?country .

  # Filter for soccer club season, sports season, and sports team season
  ?team a dbo:SoccerClub ;
        dbo:sportSeason ?season .
  ?season a dbo:SportsSeason , dbo:SportsTeamSeason .

  # Get the manager of the filtered teams
  ?team dbo:manager ?manager .
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryConflict ?militaryForce1 ?militaryForce2
WHERE {
  # Find military conflicts involving William Bayne
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:reference [ 
                     dbo:referenceName ""William Bayne""^^xsd:string ] .

  # Find the military force of this conflict
  ?militaryConflict dbo:militaryForce ?militaryForce1 .
  
  # Find events related to a military force that is also a societal event
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:force ?militaryForce2 .

  # Find the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:award [ 
              a dbo:Award ;
              dbo:name ""Knight Commander of the Order of the Bath""^^xsd:string ] .
  
  # Link the military force to the awardee
  ?militaryForce2 dbo:member ?awardee .

}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorAlways ?actorParadise ?spouseJanuszKaminski WHERE {
  # Actor of ""Always"" (1989)
  dbr:Always_(film) dbo:starring ?actorAlways .
  FILTER EXISTS { ?actorAlways a dbo:Actor . }
  
  # Actor of ""Paradise"" (2013)
  dbr:Paradise_(2013_film) dbo:starring ?actorParadise .
  FILTER EXISTS { ?actorParadise a dbo:Actor . }

  # Spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbp:spouse ?spouseJanuszKaminski .

  OPTIONAL {
    ?award dbo:recipient dbr:Janusz_Kamiński .
    FILTER NOT EXISTS { ?award dbo:nominationOnly true . }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
}
```

This query selects distinct individuals (`?person`) who have been awarded the ""Commander of the Royal Victorian Order."" The `dbr:Commander_of_the_Royal_Victorian_Order` is assumed to be the DBpedia resource for this specific award.",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  ?child dbo:parent ?politician .
  ?politician dbo:spouse ?spouse .
  ?spouse dbo:child ?anotherChild .
  ?politician rdf:type dbo:Politician .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?actor
WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Audrey_Hepburn .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Audrey_Hepburn)
}
```",2,4,3,2,1,2,3,28,61,32,1,0.6559139784946236,0.9838709677419355,0.7870967741935484
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?actor WHERE {
  # Step 1: Find parent of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?parent .

  # Step 2: Find movies with Herschel Bernardi and the actor from step 1
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Ensure the actor is related to Doon Arbus through parent
  ?parent dbo:child ?actor .

  # Step 3: Find professionals in Eugène Cattin's profession and their parents
  OPTIONAL {
    ?professional dbo:profession ?eugeneProfession .
    dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
    ?professional dbo:parent ?relatedParent .
    
    # Ensure the parent from step 1 is related to this professional's parent
    FILTER(?parent = ?relatedParent)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  # Roger II of Sicily's child who is royalty
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  ?child1 rdf:type dbo:Monarch .

  # Parent of that child (grandchild of Roger II)
  ?grandchild dbo:child ?child1 .

  # William I of Sicily's child who is royalty
  ?child2 dbo:parent dbr:William_I_of_Sicily .
  ?child2 rdf:type dbo:Monarch .

  # Father of that child (parent of the royal child)
  ?person dbo:child ?child2 .

  # Elvira of Castile's child
  ?elviraChild dbo:child dbr:Elvira_of_Castile .
  
  # The person must be the same as Elvira's child
  FILTER (?grandchild = ?elviraChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandRealName WHERE {
  # Part 1: Identify Nicholas Michael Curran
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran""@en .
  
  # Part 2: Find associated musical artist
  ?association dbo:associatedBandOrMusicalArtist ?associatedArtist .

  # Part 3: Reference Kim Wilson's band
  dbr:Kim_Wilson dbo:band dbr:The_Blues_Brothers ;
                 dbo:associatedBandOrMusicalArtist ?band .
  
  ?band foaf:name ?bandRealName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Shatrughan Sinha's profession as an actor
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .
  
  # Richard E. Grant's television show
  dbr:The_Princess_Diaries_2:_Royal_Engagement dbo:starring dbr:Richard_E._Grant .

  # Find a professional who is an actor and involved in the same TV show
  ?professional dbo:profession dbr:Actor .
  ?professional dbo:starring dbr:Richard_E._Grant .
}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?associatedArtist
WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Check if this person has any band memberships
  OPTIONAL { 
    ?bandMembership dbo:member ?person .
    ?bandMembership dbo:band ?band .
  }

  # Find associated musical artists under the persona ""Nick Curran""
  OPTIONAL {
    ?association dbp:associatedMusicalArtist ?associatedArtist ;
                 dbp:persona dbr:Nick_Curran .
    FILTER (?associatedArtist != ?person)
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace
WHERE {
  ?person dbp:name ""Christian Ditlev Ammentorp Hansen""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbpedia-owl:PopulatedPlace .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  ?actor dbo:sport dbr:Soccer .
  ?actor dbo:occupation dbr:Athlete .
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfCountry
WHERE {
    # Step 1: Identify Theodor Heuss's native country
    dbr:Theodor_Heuss dbo:nationality ?country .

    # Step 2: Find the person born on 1968-08-26 who is a sports manager
    ?person dbp:birthday ""1968-08-26""^^xsd:date ;
            rdf:type dbo:SportsManager .

    # Step 3: Determine the team managed by this sports manager
    ?team dbo:manager ?person ;
          rdf:type dbo:SoccerClubSeason ;
          dbo:sportTeamSeason ?season .

    # Step 4: Find the native of the administration (country) related to Theodor Heuss
    ?nativeOfCountry dbo:nationality ?country .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoOffice ?leaderName ?leaderOffice
WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoOffice .

  # Leader of the Partido Popular (Conservative Republican Party, Spain)
  ?partyLeader a dbo:Politician ;
               dbo:memberOfParty dbr:Partido_Popular_(Spain) .
  
  # Get the name and office of the leader
  ?partyLeader foaf:name ?leaderName .
  ?partyLeader dbo:office ?leaderOffice .

  # Filter to get the current leader (assuming a property like dbo:currentLeader exists)
  FILTER EXISTS { ?partyLeader dbo:currentLeader true }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cecilia Renata of Austria""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  # Step 1: Identify the award related to Quincy Adams Gillmore
  ?award dbo:recipient ?awardee .
  ?award dbo:relatedPerson dbr:Quincy_Adams_Gillmore .

  # Step 2: Find the war associated with Amasa Tracy
  ?war dbo:participant ?tracy .
  ?tracy rdfs:label ""Amasa Tracy""@en .

  # Step 3: Link force to both awardee and war
  ?force dbo:member ?awardee .
  ?force dbo:participatedIn ?war .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Smartbomb""@en .
  FILTER (LANG(?book) = 'en') .
  ?book dbo:author ?author .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:work true .
  ?movie dbo:actor ?actor .

  ?person dbo:deathPlace dbr:Los_Angeles .
  ?person dbo:parent ?child .
  ?child dbo:occupation dbr:Photographer .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthplace .

  # Ensure the birthplace is both a region and a country
  ?birthplace rdf:type dbo:Region .
  ?birthplace rdf:type dbo:Country .

  # Retrieve the native of the birthplace
  ?native dbo:nativeOf ?birthplace .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find a person with the same birthday who is an athlete, soccer player, sports manager, and soccer manager
  ?person dbo:birthDate ?sameBirthday .
  FILTER (?sameBirthday = ?birthday)

  ?person dbo:sportsTeam ?team .
  ?team rdf:type dbo:SoccerClub .

  ?person rdf:type dbo:Athlete .
  ?person rdf:type dbo:SoccerPlayer .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Paulus Powell""@en.
  ?person dbo:birthPlace ?birthPlace.

  FILTER (
    (EXISTS { ?birthPlace a dbo:Region . } &&
     EXISTS { ?birthPlace a dbo:AdministrativeRegion . })
  )
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the award given by the United States Congress
  ?award dbo:awardingBody dbr:United_States_Congress ;
         a dbo:Award .

  # Find recipients of this award who are associated with a war
  ?recipient dbo:recipientOf ?award .
  ?war dbo:hasParticipant ?recipient .

  # Find the entity in Charleston, South Carolina
  ?entity dbo:location dbr:Charleston,_South_Carolina ;
          dbo:relatedTo ?recipient .

  # Find recipients of the Gillmore Medal and their associated forces
  ?gillmoreAward a dbo:Award ;
                 rdfs:label ""Gillmore Medal""@en .
  ?force dbo:hasParticipant ?gillmoreRecipient .
  ?gillmoreRecipient dbo:recipientOf ?gillmoreAward .

  # Ensure the recipient of the award from Congress is also related to the Gillmore Medal
  FILTER (?recipient = ?gillmoreRecipient)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  dbr:Elvira_of_Castile_queen_of_Sicily dbo:child ?child .
  ?child a dbo:Monarch .
  ?child dbo:officeHolderOf dbr:William_I_of_Sicily .
  ?child dbo:father ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Identify Dave Grohl as the writer of ""No Alternative""
  dbr:Dave_Grohl dbo:occupation dbr:Musical_artist .
  
  # Step 2: Find band members associated with Dave Grohl
  OPTIONAL { 
    ?band dbo:member dbr:Dave_Grohl .
    ?band dbo:member ?member .
  }
  
  # Step 3: Determine the musical artist associated with ""Filthy Friends""
  dbr:Filthy_Friends dbo:member dbr:Corin_Tucker .
  
  # Corin Tucker is a member of Sleater-Kinney
  OPTIONAL {
    ?sleaterKinney dbo:member dbr:Corin_Tucker .
  }
  
  # Return the artist associated with both conditions
  FILTER (?band = ?sleaterKinney)
  BIND(?member AS ?artist)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shadowProfession ?sinhaProfession
WHERE {
  # Find The Shadow's profession in his alter ego
  ?shadow dbo:alterEgo dbr:The_Shadow .
  ?shadow dbo:occupation ?shadowProfession .

  # Find Shatrughan Sinha's profession
  dbp:Sinha:Shatrughan dbo:occupation ?sinhaProfession .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05"") .

  ?person dbo:honoursReceived dbr:Medal_of_Honor .
  
  ?person dbo:award ?war .
  ?war dbo:conflict ?conflict .

  ?person dbp:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States .

  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER regex(?label, ""American"", ""i"") .

  ?birthplace dbo:settlement ?entity .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Japan .
}
```

This query uses the `dbo:country` property to find entities where Japan is listed as the country. The prefix `dbr:` is used for resources, and in this case, it refers to the resource representing Japan.",1,1,2,1,1,2,3,28,0,0,104,0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?thirdLevelArtist WHERE {
  # Find associated artists of R.E.M.
  ?artist1 dbo:associatedMusicalArtist dbr:R.E.M. .
  
  # For each artist found, find their associated artists
  ?artist2 dbo:associatedMusicalArtist ?artist1 .
  
  # Ensure the third level artist is distinct and not R.E.M. itself
  ?artist3 dbo:associatedMusicalArtist ?artist2 .
  FILTER(?artist3 != dbr:R.E.M.)
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran"" ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1945 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 30)

  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }

  OPTIONAL {
    ?bandMember a dbo:Band ;
                dbo:member ?person .
    ?bandMember dbp:name ?band .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentAmy ?parentDoon ?actor ?movie WHERE {
  # Find parents of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?parentAmy .
  }
  
  # Find parents of Doon Arbus
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?parentDoon .
  }

  # Find an actor from a movie that is a work
  ?movie dbo:type dbr:Film ;
         dbo:starring ?actor .

  # Filter by person who was a decedent at Los Angeles
  OPTIONAL {
    ?person dbp:placeOfDeath dbr:Los_Angeles .
    ?actor dbo:birthPlace ?person .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobCreweBirthPlace ?workCreationPlace WHERE {
  # Birthplace of Bob Crewe
  dbr:Bob_Crewe dbo:birthPlace ?bobCreweBirthPlace .

  # Works by Ethan Iverson that are musical works
  ?work dbo:creator dbr:Ethan_Iverson ;
        a ?workType .
  
  FILTER (
    ?workType = dbo:MusicalWork OR 
    ?workType = dbo:Album OR 
    ?workType = dbo:Composition
  )

  # Assuming the place of creation or release as ""birthplace"" for the work
  OPTIONAL { ?work dbo:locationCreatedOrRecorded ?workCreationPlace }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the event ""French Campaign in Egypt and Syria""
  dbr:French_campaign_in_Egypt_and_Syria a dbo:MilitaryConflict ;
    dbo:militaryCommander ?commander .

  # Find military forces associated with this campaign
  ?campaign dbo:participatingMilitaryUnit ?militaryForce .
  
  # Ensure William Bayne is referenced as a commander or participant
  OPTIONAL { ?commander rdfs:label ""William Bayne""@en }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?spouse WHERE {
  # Step 1: Identify Nat Levine and a film he produced
  ?natLevine dbo:birthName ""Nat Levine""@en .
  ?film dbo:producer ?natLevine .

  # Step 2: Find an actor in that film
  ?actor dbo:actedIn ?film .

  # Step 3: Find the spouse of this actor
  ?spouse dbo:spouse ?actor .

  # Step 4: Identify the ruling party in Central, Louisiana
  ?central dbr:Council_of_Central,_Louisiana .
  ?central dbo:government ?government .
  ?partyMember dbo:memberOf ?government .
  ?government dbp:rulingParty ?rulingParty .

  # Ensure we are linking the correct entities
  FILTER(?spouse != ?actor)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find books authored by Hillary Clinton
  ?book a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .

  # Identify Bill Clinton as the author of these works and check his roles
  ?work a dbo:WrittenWork, dbo:Book ;
        dbo:author dbr:Bill_Clinton .
  
  FILTER EXISTS { ?work = ?book } .

  # Check if Bill Clinton is a politician and office holder
  ?billClinton dbo:occupation dbr:Politician ;
               dbo:officeHolder true .

  FILTER (?billClinton = dbr:Bill_Clinton) .

  # Find the spouse of Bill Clinton
  ?spouse dbo:spouse dbr:Bill_Clinton .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard"" ;
          dbo:nationality dbr:United_States ;
          dbo:memberOfBand dbr:Uncle_Murda .

  ?place a dbo:Settlement, dbo:State, dbo:Award, dbo:Region ;
         dbp:country dbr:Puerto_Rico ;
         rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  ?person dbo:nativePlace ?place .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?eventType
WHERE {
  # Identify Robert Calder's resource
  dbr:Robert_Calder a dbo:Person .

  # Find events related to Robert Calder
  ?event dbo:agent dbr:Robert_Calder .
  
  # Filter for military and societal events
  ?event a ?eventType .
  FILTER (
    (?eventType = dbo:MilitaryConflict || 
     ?eventType = dbo:SocietalEvent) &&
    (EXISTS { ?event dbo:type dbo:MilitaryConflict } ||
     EXISTS { ?event dbo:type dbo:SocietalEvent })
  )
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Bill Clinton as the author of ""An Invitation to the White House""
  dbr:Bill_Clinton dbo:author dbr:An_Invitation_to_the_White_House .

  # Find his spouse
  dbr:Bill_Clinton dbo:spouse ?spouse .

  # Ensure the spouse is a politician and an office holder
  ?spouse rdf:type dbo:Politician .
  ?spouse dbo:officeHolder true .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfNicholasII ?nativeOfAlexanderII
WHERE {
  # Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:country dbr:Russia .
  dbr:Russia dbo:birthPlace ?nativeOfNicholasII .

  # Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:country dbr:Finland .
  dbr:Finland dbo:birthPlace ?nativeOfAlexanderII .
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:nationality dbr:Poland .
  ?person dbo:sport ?sport . # Assuming this property indicates they are an athlete
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Joey B""@en .
  ?person dbo:birthName ?birthName .
  ?person a dbo:Musician .
  FILTER(LANG(?birthName) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild1 ?grandchild2 WHERE {
  # Duke Philipp of Württemberg's grandchild who is royalty
  ?parent1 dbo:spouse|dbo:partner ?duke .
  ?duke rdfs:label ""Duke Philipp of Württemberg""@en .
  ?parent1 dbo:child ?child1 .
  ?child1 dbo:child ?grandchild1 .
  ?grandchild1 a dbo:Monarch .

  # Archduke Charles Louis of Austria's grandchild who is royalty
  ?parent2 dbo:spouse|dbo:partner ?archduke .
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?parent2 dbo:child ?child2 .
  ?child2 dbo:child ?grandchild2 .
  ?grandchild2 a dbo:Monarch .

  # Ensure the grandchildren are distinct individuals
  FILTER(?grandchild1 != ?grandchild2)
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent dbo:spouse|dbo:child ?archduke .
  
  FILTER(?archduke = db:Archduke_Charles_Joseph_of_Austria) .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # His children who are politicians
  ?child dbo:parent ?frederick ;
         a dbo:Politician .

  # These children's children
  ?grandchild dbo:parent ?child .

  # Check if these grandchildren have a parent who is both a politician and an office holder
  ?politicianOfficeHolder dbo:parent ?grandchild ;
                         a dbo:Politician, dbo:GovernmentOfficial .

  # Ensure this grandparent is also the parent of Victor Stanley
  ?politicianOfficeHolder dbo:parent dbr:Victor_Stanley_(Royal_Navy_officer) .

  # The father we are looking for is the child of Frederick Stanley who fits all criteria
  BIND(?child AS ?father)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?playerLabel WHERE {
  ?team dbp:name ""1. FC Magdeburg""@en .
  ?team dbo:teamMember ?player .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation:

- **PREFIX**: Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT**: Choose variables `?player` (the member) and `?playerLabel` (human-readable name).
- **WHERE**:
  - Find the team with the name ""1. FC Magdeburg"".
  - Use `dbo:teamMember` to find players associated with this team.
  - Use a service call to get labels in English for better readability.",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Ensure the film is a product (specifically a film)
  ?film rdf:type dbo:Film .

  # Find actors of these films
  ?film dbo:starring ?actor .

  # Check if the actor is a member of the Republican Party
  ?actor dbp:politicalAffiliation dbr:Republican_Party_(United_States) .

  # Get the spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreForce ?tracyWar ?lewisBirthplace
WHERE {
  # Quincy Adams Gillmore's military rank or force
  dbr:Quincy_Adams_Gillmore dbo:militaryRank ?gillmoreForce .

  # Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:participatedInWar ?tracyWar .

  # Henry Clay Lewis's birthplace, which is a settlement and American
  dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirth .
  ?lewisBirth rdf:type dbo:Settlement .
  ?lewisBirth dbo:country dbr:United_States .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?force WHERE {
  # Gillmore Medal awardees
  { 
    ?awardee dbo:award dbr:Gillmore_Medal .
    OPTIONAL { ?awardee dbo:militaryService ?service . }
    OPTIONAL { ?service dbo:branch ?force . }
  }

  UNION

  # Medal of Honor awardees
  {
    ?awardee dbo:award dbr:Medal_of_Honor .
    OPTIONAL { ?awardee dbo:militaryService ?service . }
    OPTIONAL { ?service dbo:branch ?force . }
  }
}
```",4,4,5,2,2,3,3,71,0,2991,3,0.0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Baeda Maryam I
  dbr:Baeda_Maryam_I a dbo:Person .

  # Step 2: Find his children
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Step 3: Determine their fathers
  ?child dbo:father ?father .

  # Step 4: Filter by royalty and office holder
  ?father a dbo:Monarch ; 
          dbo:officeHolderOf ?office .
}
```

This query does the following:
- Identifies Baeda Maryam I as a person.
- Finds individuals who are children of Baeda Maryam I.
- For each child, identifies their father.
- Filters these fathers to ensure they are both monarchs (royalty) and hold an office.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?stevieWonder ?associatedArtist
WHERE {
  # Find Stevie Wonder by his birth name and profession
  ?stevieWonder a dbo:Musician ;
                foaf:name ""Stevie Wonder"" ;
                foaf:givenName ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # Find the associated artist with the name $pacely
  ?associatedArtist a dbo:MusicalArtist ;
                    foaf:name ""$pacely""@en .
  
  # Relationship between Stevie Wonder and the associated artist
  ?stevieWonder dbo:collaboratedWith ?associatedArtist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInYeJia ?manager WHERE {
  # Ye Jia is a player
  dbr:Ye_Jia dbo:position ?playerInYeJia .
  
  # Manager who is both a sports manager and a soccer manager
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .

  # Reference organization that is a sports club, team, and soccer club
  ?reference a dbo:SportsClub ;
             a dbo:SportsTeam ;
             a dbo:SoccerClub .
  
  # The player in Ye Jia and the manager are associated with the same reference
  ?playerInYeJia dbo:team ?reference .
  ?manager dbo:worksFor ?reference .

  # The organization is related to Hong Kong C
  ?reference dbo:location dbr:Hong_Kong_C .
}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:creator ?author .
  ?work dbo:title ""Cora Sue Collins""@en .
  ?character dbo:portrayedBy ?author ;
             rdfs:label ""Kent Allard (print)""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find players who are actors in ""All or Nothing: Manchester City""
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
  
  # Ensure the actor is a soccer player and an athlete
  ?actor rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:Athlete .

  # Find teams that Pablo Aimar was part of
  ?team dbo:member dbr:Pablo_Aimar .

  # Ensure the actor was also part of these teams
  ?actor dbo:member ?team .
  
  BIND(?actor AS ?player)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?work dbo:author dbr:Aleksandr_Filimonov .
  ?work dbo:writer ?player .
}
```

This query does the following:
- It looks for works (`?work`) where Aleksandr Filimonov is listed as an author.
- It then finds any player or writer (`?player`) associated with those works.",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?charge dbo:event = dbr:Battle_of_Gettysburg ;
         dbo:partOf = dbr:American_Civil_War .
  
  ?commander dbo:commandedMilitaryForce = ?force ;
             dbo:positionHeld = dbr:Commander_in_Chief_of_the_Army_of_Northern_Virginia .

  ?force dbo:event = ?charge .
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgoProfessional WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  ?alterEgo dbo:profession ?alterEgoProfessional .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?work WHERE {
  # Step 1: Identify the fictional character Kent Allard and his alter ego
  ?fictionalCharacter rdfs:label ""Kent Allard""@en .
  ?fictionalCharacter dbo:author ?alterEgo .

  # Step 2: Find works associated with this alter ego
  ?work dbo:creator ?alterEgo .

  # Step 3: Check if any of these works involve Janet Gaynor
  ?work dbo:actor dbr:Janet_Gaynor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:author dbr:Bill_Clinton .
  ?book rdf:type dbo:Book .

  ?war dbo:commander dbr:United_States_Navy .
  ?war rdf:type dbo:Disease ;
       rdf:type dbo:SocietalEvent .

  ?bill dbo:spouse dbr:Hillary_Clinton .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank
WHERE {
  dbr:Quincy_A._Gillmore dbo:militaryRank ?rank .
}
```

This query assumes that Quincy Adams Gillmore's DBpedia resource is `dbr:Quincy_A._Gillmore` and uses the property `dbo:militaryRank` to find his rank. Adjustments might be necessary if the exact property or resource URI differs.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find Janet Gaynor's claim to fame movie and its producer
  ?movie dbo:starring dbr:Janet_Gaynor .
  ?movie dbo:producer ?producer1 .

  # Find the producer of ""The Adventures of Tom Sawyer"" (1938)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer2 .

  # Find a fictional character related to Kent Allard
  ?character dbo:fictionalWork dbr:Kent_Allard .
  
  # Ensure the producer is common in both contexts
  FILTER (?producer1 = ?producer2)
  BIND(?producer1 AS ?producer)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?awardeeName WHERE {
  # Step 1: Identify Vince Gilligan and his awards
  VALUES (?vince) { dbr:Vince_Gilligan }
  
  ?vince dbo:awardReceived ?award .
  
  # Step 2: Find other awardees of the same award
  ?otherAwardee dbo:awardReceived ?award .
  
  # Ensure we don't select Vince Gilligan himself
  FILTER (?otherAwardee != ?vince)
  
  # Step 3: Retrieve birthplace and name of these awardees
  OPTIONAL { ?otherAwardee dbo:birthPlace ?awardeeBirthPlace }
  OPTIONAL { ?otherAwardee rdfs:label ?awardeeName . FILTER (lang(?awardeeName) = 'en') }
}
ORDER BY ?awardeeName",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMemberBand WHERE {
  # Find Nick Curran
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .

  # Find associated musical artist with Nick Curran
  ?association dbo:artist ?associatedArtist .
  FILTER (?association = ?nickCurran) .

  # Find person born on 1945-03-30 who is a musical artist
  ?person a dbo:MusicalArtist ;
          dbp:birthday ""1945-03-30""^^xsd:date ;
          foaf:name ?name .

  # Find band member of this person who is also a musical artist
  ?bandMember dbo:member ?person .
  ?bandMember dbo:artist ?bandMemberBand .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadow ?child
WHERE {
  # Find The Shadow as the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  
  # Find a child of Dawit I
  dbr:Dawit_I dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerOf ?team .
  
  OPTIONAL { 
    ?person dbo:sportTeam ?team .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Duke ;
          foaf:name ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?member ?band 
WHERE {
  # Step 1: Find the musical artist associated with Phantomsmasher
  dbr:Phantomsmasher dbo:musicalArtist ?artist .

  # Step 2: Find band members of this artist
  ?member dbo:memberOf ?artist .
  
  # Step 3: Ensure these members are part of a band that is also a group and an organization
  ?band dbo:bandMember ?member ;
        rdf:type dbo:Band ;
        rdf:type dbo:Group ;
        rdf:type dbo:Organization .

  # Step 4: Specifically relate to Burnt by the Sun (band)
  ?band dbr:Burnt_by_the_Sun_(band) .
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?person .
  ?person dbo:nationality ?nativeCountry .

  # VfL Bochum manager for the 2006–07 season
  OPTIONAL { 
    dbr:VfL_Bochum dbp:managerInSeason200607 ?vlbManager .
  }

  # SBV Vitesse manager for the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse dbp:managerInSeason202021 ?svvManager .
  }

  # Check if managers are the same person
  FILTER (?vlbManager = ?svvManager)

}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?actorBirthPlace WHERE {
  # Find the awardee of Sangeet Natak Akademi Fellowship and their birthplace
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Find the actor of ""Akaler Shandhaney"" and their birthplace
  ?actor dbo:actedIn dbr:Akaler_Shandhaney .
  ?actor dbo:birthPlace ?actorBirthPlace .
}",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce ?commander WHERE {
  # Find wars involving William Bayne
  ?bayne dbo:militaryConflict ?war .
  FILTER (strstarts(str(?bayne), ""dbr:William_Bayne_(Royal_Navy_officer)"")) .

  # Find wars involving the 30th Regiment of Foot
  ?regiment dbo:militaryConflict ?war .
  FILTER (strstarts(str(?regiment), ""dbr:30th_(Cambridgeshire)_Regiment_of_Foot"")) .

  # Ensure the war is both a conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Retrieve military forces involved in the war
  ?war dbo:militaryForce ?militaryForce .

  # Retrieve commanders of the military force
  ?commander dbo:commanderOf ?militaryForce .
}
ORDER BY ?war",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInAP
WHERE {
  dbr:Chennupati_Jagadish dbo:almaMater ?almaMater .

  ?entityInAP dbp:stateOrProvince dbr:Andhra_Pradesh .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- Uses `rdfs:label` to find the DBpedia resource for ""The Shadow.""
- Utilizes `dbo:alterEgo` to retrieve the alter ego of this character.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ""Ada Jane Low""@en .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete ;
          dbo:birthDate ""1955-02-22""^^xsd:date .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?person .

  ?film dbo:teamMember dbr:Pablo_Aimar .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of Johnny Doughboy
  ?actor dbo:role dbr:Johnny_Doughboy .
  
  # Find the professional associated with The Shadow
  ?professional dbo:alterEgo dbr:The_Shadow .
  
  # Ensure they are the same person
  FILTER (?actor = ?professional)
  
  # Find the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Boxer"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?creator WHERE {
  ?work dbo:wikiPageRedirects dbr:El_Deafo .
  ?work dbo:creator ?creator .
  ?creator dbp:nationality dbr:American .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryOfWork ?birthPlaceOfChild
WHERE {
  # Lao She's work and its country
  dbr:Lao_She dbo:work dbr:Rickshaw_Boy .
  dbr:Rickshaw_Boy dbo:country dbr:China .

  # Chiang Ching-kuo's child who is a politician
  dbr:Chiang_Ching-kuo dbo:child dbr:Lee_Teng-hui .
  dbr:Lee_Teng-hui rdf:type dbo:Politician .
  dbr:Lee_Teng-hui dbo:birthPlace ?birthPlaceOfChild .

  # Bind the country of Lao She's work
  BIND(dbr:China AS ?countryOfWork)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Prince Faisal bin Hussein
  ?prince a dbo:Person ;
          foaf:name ""Faisal bin Hussein""@en .

  # Identify his children who are royalty
  ?child dbo:childOf ?prince ;
         dbo:royalty true .

  # Find the parents of these royal children
  ?parent dbo:parentOf ?child .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in those films who are also soccer players and athletes
  ?film dbo:starring ?actor .
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Find persons born on the same birthday as Marcelo Sarmiento
  ?person dbp:birthday ?birthday .
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager .
  
  # Match the birthday of Marcelo Sarmiento
  ?marcelo dbr:Marcelo_Sarmiento .
  ?marcelo dbp:birthday ?marceloBirthday .

  FILTER (?birthday = ?marceloBirthday)

  # Ensure the actor is the same person as the one born on the same birthday
  FILTER (?actor = ?person)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Actor of ""1,000 Dollars a Minute""
  dbr:""1,_000_Dollars_a_Minute"" dbo:actor ?actor .
  
  # Spouse of the actor
  ?actor dbo:spouse ?spouse .
  
  FILTER (?spouse != dbr:Ann_Sothern) # Ensure spouse is not Ann Sothern herself

  # Check if the spouse's birth name matches Ann Sothern's birth name
  ?spouse dbo:birthName ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile, Queen of Sicily
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:spouse dbr:Roger_II_of_Sicily .
  
  # Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .

  # Elvira's child must also be Roger's child
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Shadow video game alter ego is Lamont Cranston
  dbr:The_Shadow_(video_game) dbo:alterEgo dbr:Lamont_Cranston .
  
  # Lamont Cranston is a comics character
  dbr:Lamont_Cranston dbo:genre dbr:Comics .

  # Roger Moore, born as Richard Grant Esterhuysen, played Lamont Cranston in a movie and TV show
  dbr:Roger_Moore dbo:birthName ""Richard Grant Esterhuysen""@en ;
                  dbo:role dbr:Lamont_Cranston_in_a_movie ;
                  dbo:role dbr:Lamont_Cranston_in_a_tv_show .

  # Bind the actor to Roger Moore
  ?actor rdfs:label ""Roger Moore""@en .
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  ?shadowAlterEgo dbo:profession ?professional .
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  FILTER (?professional = ?producer)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Roger II and Elvira of Castile
  dbr:Roger_II_of_Sicily dbo:spouse dbr:Elvira_of_Castile .
  
  # Their child who is also a royalty
  ?child dbo:parent dbr:Roger_II_of_Sicily ;
         dbo:parent dbr:Elvira_of_Castile ;
         a dbo:Monarch .

  # William I of Sicily as the father of this child
  ?child dbo:father dbr:William_I_of_Sicily .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ""Eastern European Time"" .
  
  ?place dbo:timeZone ?timeZone ;
         a dbo:Place ;
         dbo:isPartOf ?region .

  FILTER EXISTS { ?region a dbo:Region . }
}
```",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:United_States_Congress .
  ?awardee dbo:deathDate ""1850-08-05""^^xsd:date .
  ?awardee dbo:birthPlace ?settlement .
  ?settlement a dbo:Settlement .
  ?awardee dbp:nationality dbr:United_States .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?commander dbo:spouse ?eleonore .
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .

  ?commander dbo:commandedMilitaryForce dbr:Algerian_War .
  
  OPTIONAL { ?commander dbo:societalEvent ?event1 . }
  OPTIONAL { ?commander dbo:event ?event2 . }
  OPTIONAL { ?commander dbo:televisionShow ?show . }

  FILTER EXISTS { ?commander dbo:societalEvent ?event1 } .
  FILTER EXISTS { ?commander dbo:event ?event2 } .
  FILTER EXISTS { ?commander dbo:televisionShow ?show } .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:father ?parent .

  ?parent dbo:spouse ?spouse .

  ?spouse rdf:type dbo:Monarch .
  ?spouse rdf:type dbo:Noble .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Lvovich_Davydov dbo:occupation ?occupation .
  
  OPTIONAL { ?occupation dbo:participatedIn ?war . }
  
  ?war dbo:location dbr:Russian_Empire .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Baeda Maryam I""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?petroPartyLabel ?barrerasPartyLabel
WHERE {
  # Find Gustavo Petro and his political party
  dbr:Gustavo_Petro dbo:party ?petroParty .
  
  # Get the label for Gustavo Petro's party
  ?petroParty rdfs:label ?petroPartyLabel .

  # Find Roy Leonardo Barreras Montealegre and his political party
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:party ?barrerasParty .
  
  # Get the label for Roy Leonardo Barreras's party
  ?barrerasParty rdfs:label ?barrerasPartyLabel .

  # Ensure both are politicians (optional, as they are known to be)
  dbr:Gustavo_Petro a dbo:Politician ;
                   dbo:nationality dbr:Colombia .
  
  dbr:Roy_Leonardo_Barreras_Montealegre a dbo:Politician ;
                                        dbo:nationality dbr:Colombia .

  # Filter to ensure labels are in English
  FILTER (lang(?petroPartyLabel) = 'en')
  FILTER (lang(?barrerasPartyLabel) = 'en')
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?maria dbo:spouse ?spouse .
  ?maria rdfs:label ""Maria of Bytom""@en .

  ?spouse dbo:parent ?father .
  
  ?father a dbo:Monarch ; # Assuming Monarch is a class for royalty
          dbp:country ?country . # Optional, to ensure the father has a country associated with royalty

  FILTER(LANG(?mariaLabel) = ""en"") # Ensure we are matching the English label
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:CreativeWork ;
        dbo:author dbr:Joe_Biden .
}
```

This query selects works (`?work`) that are instances of `dbo:CreativeWork` and have Joe Biden as their author.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Iliza_Shlesinger)
}
```",2,4,3,2,1,2,3,28,6,31,1,0.16216216216216217,0.8571428571428571,0.27272727272727276
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find the awardee of 1930
  ?person dbo:awardYear ""1930"" ;
          dbo:occupation ?occupation .
  
  # Find wars associated with this person
  ?person dbo:participatedInWar ?war1 .

  # Find the leader of National Party of Greece
  ?leader dbp:party dbr:National_Party_of_Greece ;
          dbo:position ""Leader"" ;
          dbo:occupation ?occupation2 .
  
  # Find wars associated with this leader
  ?leader dbo:participatedInWar ?war2 .

}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?child WHERE {
  ?commander a dbo:Person ;
             dbo:spouseOrPartner ?baedaMaryamI ;
             dbo:occupation dbr:Siege_of_Mukha ;
             dbo:nationality dbr:Ethiopia .
  
  ?baedaMaryamI dbp:father ?commander .

  OPTIONAL {
    ?parent a dbo:Person ;
            dbo:child ?commander .
    
    FILTER EXISTS { ?parent dbo:royalty ""true""^^xsd:boolean }
  }

  OPTIONAL {
    ?child a dbo:Person ;
           dbo:parent ?parent .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfChild
WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  ?archduke a dbo:Person ;
            rdfs:label ""Archduke Charles Joseph of Austria""@en .

  # Step 2: Find his parent (assuming father for simplicity)
  ?parent dbo:child ?archduke .
  
  # Step 3: Determine the child of that parent
  ?child dbo:child ?parent .

  # Step 4: Identify the father of that child
  ?fatherOfChild dbo:spouse ?mother ;
                 dbo:child ?child .
}
```

This query assumes:
- The relationship `dbo:child` is used to denote parent-child relationships.
- We are looking for a male parent (father) in step 4, assuming the spouse of the mother is the father.",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .

  # Step 2: Find his children
  ?child dbo:parent ?frederick .

  # Step 3: For each child, find their parents
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?georgeDucas dbo:wikiPageDisambiguates dbr:George_Ducas .
  ?jeanBaptist dbo:wikiPageDisambiguates dbr:Jean_Baptiste,_Comte_d'Arco .

  ?georgeDucas dbo:commanderOf ?war .
  ?jeanBaptist dbo:commanderOf ?war .

  ?war a dbo:War .
  ?war dbo:wikiPageRedirects ?tvShow .
  ?tvShow a dbo:TelevisionProgramme .
  
  ?war dbo:socialEvent ?societalEvent .
  ?societalEvent a dbo:SocietalEvent .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?club rdf:type dbo:FootballClub .
  ?club foaf:name ""1. FC Magdeburg""@en .
  ?club dbo:member ?player .
  FILTER (isLiteral(?player) = false)
}
```

Explanation:
- `PREFIX dbo:` and `PREFIX dbr:` are used to define the namespaces for DBpedia ontology and resources.
- We select players (`?player`) who are members of a club (`?club`).
- The club is identified by its type (`dbo:FootballClub`) and name (""1. FC Magdeburg"").
- The relationship between the club and its members is captured using `dbo:member`.
- A filter ensures that only non-literal entities (actual players) are selected.",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Amasa_Tracy dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent
WHERE {
  # Roger II of Sicily
  dbr:Roger_II_of_Sicily a dbo:Monarch ;
                          dbo:spouse ?spouse .

  # Children of Roger II
  ?child dbo:parent dbr:Roger_II_of_Sicily ;
         a dbo:Person .

  # Parent of the child (should be Roger II)
  ?childOfParent dbo:parent ?child .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Father of William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?childOfParent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?movie dbo:starring dbr:Janet_Gaynor .
  ?movie dbo:genre dbr:Film .
  ?movie dbo:work dbr:Claim_to_Fame .
  
  OPTIONAL { 
    ?alterEgo dbo:alterEgoOf dbr:The_Shadow .
    ?movie dbo:relatedWork ?alterEgo .
  }
  
  ?movie dbo:producer ?producer .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?establishmentDate
WHERE {
  # Eleonora Menicucci's alma mater
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .

  # Federal University of Paraíba establishment date
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?establishmentDate .
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?residence WHERE {
  OPTIONAL {
    dbr:George_H._Cameron dbo:awardReceived ?award .
  }

  OPTIONAL {
    ?leader dbo:positionHeld [
      a dbo:Leadership ;
      dbo:organization dbr:Ulster_Unionist_Party
    ] .
    ?leader dbo:residenceLocation ?residence .
  }
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Identify ""Burnt by the Sun"" as a musical artist
  dbr:Burnt_by_the_Sun a dbo:MusicalArtist .

  # Step 2: Find associated musical artists that are bands, groups, and organizations
  ?associatedArtist dbo:associatedBand dbr:Burnt_by_the_Sun ;
                   a dbo:Band ;
                   a dbo:Group ;
                   a dbo:Organization .

  # Step 3: Determine the reference group related to these entities
  ?referenceGroup dbo:member ?associatedArtist ;
                  a dbo:Group .

  # Step 4: Extract band members of this reference group
  ?bandMember dbo:memberOf ?referenceGroup .
}
```",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Lamont Cranston as The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Find actors in the film ATL
  dbr:ATL (dbo:starring|dbo:castMember) ?actor .
  
  # Ensure the actor is a professional (likely an actor)
  ?actor rdf:type dbo:Actor .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the DBpedia resource for Nicki Minaj
  VALUES ?nickiMinaj { dbr:Nicki_Minaj }
  
  # Look for associated musical artists through various properties
  OPTIONAL { 
    ?nickiMinaj dbo:associatedMusicalArtist ?artist .
  }
  UNION
  OPTIONAL {
    ?collaboration dbo:performer ?nickiMinaj ;
                   dbo:performer ?artist .
  }
  UNION
  OPTIONAL {
    ?influence dbo:influencedBy ?nickiMinaj ;
               dbo:influencer ?artist .
  }

  FILTER(?artist != ?nickiMinaj)
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child1 .
  
  ?child1 dbo:child ?grandchild .

  ?grandchild dbo:spouse ?spouse .
  ?grandchild dbo:child dbr:William_II_of_Sicily .
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile dbo:child ?child .
  
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfYeshaqI WHERE {
  # Yeshaq I and his child who is royalty
  dbr:Yeshaq_I dbo:spouse ?parent . 
  ?parent dbo:child ?childOfYeshaqI .
  ?childOfYeshaqI a dbo:Monarch .

  # Na'od's father (paternal grandfather) who is royalty and an office holder
  dbr:Na'od dbo:father ?naodFather .
  ?naodFather dbo:father ?grandfather .
  ?grandfather a dbo:Monarch .
  ?grandfather dbo:officeHolder ?office .

}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```

This query does the following:
- Uses `dbo:country` to find entities that have a relationship indicating they are in the United Kingdom.
- Filters results specifically for those linked to `dbr:United_Kingdom`, which is the DBpedia resource representing the UK.",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderName WHERE {
  # Find the resource for Pickett's Charge
  dbr:Picketts_Charge dbo:commandedBy ?commander .
  
  # Get the name of the commander
  ?commander rdfs:label ?commanderName .
  
  FILTER (lang(?commanderName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?war { dbr:Algerian_War }
  ?war dbo:combatant ?entity .
  ?entity rdfs:label ?label .
  FILTER(LANG(?label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee ?awardYear WHERE {
  # Find shows related to the Royal Swedish Academy of Sciences
  ?show dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences .
  
  # Find Nobel Prize in Physics awardees
  ?nobelPrizeAward dbo:prize dbr:Nobel_Prize_in_Physics ;
                  dbo:recipient ?awardee ;
                  dbo:date ?awardYear .

  # Link the show to the Nobel Prize event or related context
  ?show dbo:subject ?nobelPrizeAward .
}
ORDER BY ?awardYear",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find Mariclare Costello's spouse
  ?spouse dbo:spouse dbr:Mariclare_Costello .
  
  # Find the child of this spouse
  ?child dbo:parent ?spouse .

  # Determine the parent of this child (which could be the spouse or another person)
  ?parent dbo:parent ?child .

  # Ensure the person is an actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?parent dbo:film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .

  # Check if this person is a parent of Amy Arbus
  ?parent dbo:child dbr:Amy_Arbus .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the territory administered from this settlement
  ?deathPlace dbp:administersTerritory ?territory .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthPlace
WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Glenn_Youngkin 
  }
  
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfPrinceOmar ?parentOfRoyalChild
WHERE {
  # Step 1: Find the parent of Prince Omar bin Faisal
  ?princeOmar a dbo:Person ;
              rdfs:label ""Prince Omar bin Faisal""@en .
  
  ?princeOmar dbo:child ?parentOfPrinceOmar .

  # Ensure the parent is royalty
  ?parentOfPrinceOmar a dbo:Monarch .

  # Step 2: Find a royal child of this parent
  ?parentOfPrinceOmar dbo:child ?royalChildOfParent .
  
  # Ensure the child is royalty
  ?royalChildOfParent a dbo:Monarch .

  # Step 3: Find the parent of this royal child
  ?royalChildOfParent dbo:child ?parentOfRoyalChild .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Theodor Heuss's birthplace
  dbr:Theodor_Heuss dbo:nativePlace ?heussBirthplace .

  # Manager of the 2020–21 SBV Vitesse season
  OPTIONAL { 
    ?manager dbp:managedTeam dbr:SBV_Vitesse .
    FILTER (YEAR(?managementStart) <= 2020 && YEAR(?managementEnd) >= 2021)
    ?manager dbo:nativePlace ?vitesseManagerBirthplace .
  }

  # Country of birth for Theodor Heuss
  ?heussBirthplace dbo:country ?heussCountry .

  # Country of birth for the Vitesse manager
  ?vitesseManagerBirthplace dbo:country ?vitesseManagerCountry .

  # Check if both are from the same country
  FILTER (?heussCountry = ?vitesseManagerCountry)
  
  BIND(?heussCountry AS ?country)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:actor ?person .
  
  ?person foaf:name ""Ann Sothern"" .
  ?person dbo:birthName ""Ann Sothern"" .

  ?person dbo:partyMember <http://dbpedia.org/resource/Republican_Party_(United_States)> .

  ?person dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find members of Stone Sour
  ?person dbo:bandMember dbr:Stone_Sour .
  
  # Find the same person as a member of Mudvayne
  ?person dbo:bandMember dbr:Mudvayne .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find Daniel Elahi Galán's nationality
  dbr:Daniel_Elái_Galán dbo:nationality ?country .

  # Find Gustavo Petro's party affiliation
  dbr:Gustavo_Petro dbo:partyAffiliation ?party .

  # Find entities in the same country and party
  ?entity dbo:nationality ?country .
  ?entity dbo:partyAffiliation ?party .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person foaf:alias ""The Shadow"" . }
  
  ?band dbo:member ?person .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Philipp_Albrecht,_Duke_of_Württemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?entityInCharleston ?war
WHERE {
  # Quincy Adams Gillmore's military force
  dbr:Quincy_A._Gillmore dbo:militaryService ?service .
  ?service dbo:rank ?force .

  # Entity in Charleston, South Carolina related to the Civil War
  ?charlestonEvent a dbo:Event ;
                  dbp:location dbr:Charleston,_South_Carolina ;
                  dbp:relatedToWar dbr:American_Civil_War .

  # Gillmore's Medal of Honor and the war associated with it
  dbr:Quincy_A._Gillmore dbo:awardedMedalOfHonor ?medal .
  ?medal dbp:forAction ?action .
  ?action dbp:relatedToWar ?war .
  
  FILTER(?war = dbr:American_Civil_War)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?child foaf:name ""Tisha Sterling""@en .
  OPTIONAL { ?child dbo:wikiPageRedirects ?redirect . }
  FILTER NOT EXISTS { ?redirect foaf:name ""Tisha Sterling""@en . }
  
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerCollins ?producerGaynor ?shadowAlterEgo
WHERE {
  # Cora Sue Collins' claim to fame and its producer
  ?collinsWork dbo:performer dbr:Cora_Sue_Collins .
  ?collinsWork dbo:producer ?producerCollins .

  # Janet Gaynor's claim to fame (movie/work) and its producer
  ?gaynorWork dbo:starring dbr:Janet_Gaynor ;
              a dbo:Film .
  ?gaynorWork dbo:producer ?producerGaynor .

  # The Shadow's professional alter ego
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthplace ?war
WHERE {
  # Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryService ?service .
  ?service dbo:unitName ?force .

  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Medal of Honor awardee's war
  ?awardee dbo:award dbr:Medal_of_Honor .
  ?awardee dbo:militaryService ?service2 .
  ?service2 dbo:conflict ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of ""Dispatches from Elsewhere""
  ?tvShow dbo:title ""Dispatches from Elsewhere""@en .
  ?tvShow dbo:starring ?actor .

  # Determine Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  # Check if the actor is also a professional in the same field as Shatrughan Sinha
  ?actor dbo:profession ?actorProfession .
  
  FILTER (?actorProfession = ?sinhaProfession)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?birthDate WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?harriet ?roger WHERE {
  ?harriet a dbo:Person ;
           rdfs:label ""Harriet Andersson""@en ;
           dbo:birthName ""Harriette Arlene Lake""@en .
  
  ?harriet dbo:spouse ?roger .

  ?roger a dbo:Actor ;
         rdfs:label ?rogerLabel .
  
  FILTER(CONTAINS(LCASE(?rogerLabel), ""roger pryor""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse
WHERE {
  # Find Myat Hpone Pyo and his predecessor
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?position dbo:incumbent ?myatHponePyo ;
            dbo:predecessor ?predecessor .

  # Find the father of Myat Hpone Pyo
  ?father dbo:child ?myatHponePyo .

  # Find the spouse of the father and ensure they are royalty
  ?spouse dbo:spouse ?father .
  ?spouse a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer
WHERE {
  # Find Yurii Khmelnytsky and his successor
  ?yuriiKhmelnytsky a dbo:Hetman ;
                   foaf:succedBy ?successor .

  FILTER (str(?yuriiKhmelnytsky) = ""Yurii_Khmelnytsky"")

  # Find the writer of ""Always the Love Songs""
  ?book dbo:author ?writer .
  FILTER (str(?book) = ""Always_the_Love_Songs"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbo:Settlement .

  ?birthPlace dbp:country dbr:United_States .
}
```",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceVinceAwardee ?birthPlaceCeceBell ?birthPlaceGovernorVirginia
WHERE {
  # Vince Gilligan's award and awardee's birthplace
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composition .
  ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composition ;
           dbp:birthPlace ?birthPlaceVinceAwardee .

  # Cece Bell's birthplace
  dbr:Cecilie_Bell dbp:birthPlace ?birthPlaceCeceBell .

  # Governor of Virginia's birthplace
  ?governor dbo:office dbr:Governor_of_Virginia ;
           a dbo:Politician ;
           dbp:birthPlace ?birthPlaceGovernorVirginia .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the Algerian War entity
  dbr:Algerian_War a dbo:MilitaryConflict ;
                   dbo:participatingMilitaryForce ?militaryForce .

  # Identify commanders associated with this military force
  ?militaryForce dbo:commander ?commander .

  # Ensure the war is described as a societal event, an event, and a television show
  dbr:Algerian_War dbo:socialEvent ?societalEvent ;
                   a dbo:Event ;
                   dbo:televisionShow ?tvShow .
}
```

This query attempts to find commanders associated with the military forces involved in the Algerian War. It also checks if the war is described as a societal event, an event, and a television show.",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Step 2: Find his child who is a politician
  ?child a dbo:Politician .

  # Step 3: Identify an alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .

  # Step 4: Find the child of this alumnus who is a politician
  ?alumnus dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  # Ensure the child from step 2 and step 4 are the same person
  FILTER (?child = ?politicianChild)

  # Step 5: Determine the parent of the child from step 2
  ?parent dbo:child ?child .

  # Step 6: Check if this parent is both a politician and an office holder
  ?parent a dbo:Politician .
  ?parent dbo:officeHolder ?office .

  # Step 7: Find the grandparent (parent of the parent) who is a politician and an office holder
  ?grandparent dbo:child ?parent .
  ?grandparent a dbo:Politician .
  ?grandparent dbo:officeHolder ?office2 .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fellowship WHERE {
  ?sangeetNatakAkademi a dbo:Award ;
                      rdfs:label ""Sangeet Natak Akademi""@en .
  
  ?fellowship dbo:awardedBy ?sangeetNatakAkademi ;
              a dbo:Fellowship .
}
```

This query does the following:
- It identifies the Sangeet Natak Akademi as an award entity.
- It looks for fellowships (`dbo:Fellowship`) awarded by this institution.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  FILTER (
    ?place IN (dbr:Russian_Empire, 
               dbr:Saint_Petersburg, 
               dbr:Moscow, 
               dbr:Kiev, 
               dbr:Odessa, 
               dbr:Warsaw, 
               dbr:Riga, 
               dbr:Tbilisi, 
               dbr:Estonia, 
               dbr:Lithuania, 
               dbr:Latvia, 
               dbr:Ukraine, 
               dbr:Bessarabia, 
               dbr:Caucasus, 
               dbr:Poland) .
  )
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,5475,0,0.0,0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Birmingham .
  OPTIONAL { ?person foaf:name ?name . }
}
```

This query selects individuals (`?person`) who have Birmingham as their birthplace and optionally retrieves their names using the `foaf:name` property.",1,1,2,1,1,3,2,20,0,0,1531,0,0.0,0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?albertoResidence ?commanderOffice
WHERE {
  # Office held by Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoResidence .

  # Commander's office in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice ;
             dbo:heldIn ?war .
  
  # Ensure the war is the Central African Republic Civil War
  ?war rdfs:label ""Central African Republic Civil War""@en .

  # Filter to ensure the commander is an office holder and a politician
  FILTER EXISTS { ?commander a dbo:Politician }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  ?person foaf:name ""Anumta Qureshi""@en .
  ?person dbo:starring ?show .
}
```

This query does the following:
- Uses `foaf:name` to match Anumta Qureshi's name.
- Utilizes `dbo:starring` to find shows she has starred in.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find Bill Clinton as the spouse of Hillary Clinton
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton ;
                   dbo:presidentOf dbr:United_States .

  # Assuming a metaphorical interpretation, find a significant event during his presidency related to health and society
  ?event dbo:relatedTo dbr:Bill_Clinton ;
         dbo:category ?category .
  
  FILTER(?category IN (dbr:Disease, dbr:Societal_event)) .

  # Find the commander associated with this event
  ?event dbo:commander ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  
  # The award is associated with a region that is American, a state, and a settlement
  ?region dbo:country dbr:United_States ;
          a dbo:State , dbo:PopulatedPlace .
  
  ?award dbo:awardedBy ?region .

  # The awardee is a band from New York (state)
  ?band dbo:location dbr:New_York_(state) ;
        a dbo:Band .
  
  ?award dbo:recipient ?band .
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?warOfZervas WHERE {
  # Find the awardee of 1930
  ?awardee dbo:dateReceived ""1930""^^xsd:gYear ;
          dbo:award ?award .
  
  # Find wars associated with the awardee
  ?award dbo:relatedEvent ?warOfAwardee .

  # Find Napoleon Zervas and his related wars
  dbr:Napoleon_Zervas dbo:spouseOrPartner ?zervasWarParticipant .
  ?zervasWarParticipant dbo:participatedIn ?warOfZervas .
}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find a band from New York that won an award
  ?band dbo:nationality dbr:United_States ;
        dbo:stateOrProvince dbr:New_York_(state) ;
        dbo:award ?award .

  # Step 2: Determine the region related to this award
  ?award dbp:name ?regionName .
  
  FILTER (strstarts(str(?regionName), ""American"") || strstarts(str(?regionName), ""State"") || strstarts(str(?regionName), ""Settlement""))

  # Step 3: Find a musical artist native to Florida with the birth name matching the region
  ?person dbo:nationality dbr:United_States ;
          dbo:stateOrProvince dbr:Florida ;
          dbo:birthName ?regionName ;
          rdf:type dbo:MusicalArtist .
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find James Plotkin's associated musical artists
  ?plotkin a dbo:MusicalArtist ;
           foaf:name ""James Plotkin"" .
  
  ?plotkin dbo:associatedBandOrMusicalArtist ?firstLevelArtist .

  # Step 2: For each first-level artist, find their associated musical artists
  ?firstLevelArtist dbo:associatedBandOrMusicalArtist ?secondLevelArtist .

  # Step 3: Check if the second-level artist is a band member of Human Remains
  ?secondLevelArtist dbo:bandMemberOf dbr:Human_Remains .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Yamaza Enjirō's birthplace
  VALUES (?yamaza) { dbr:Yamaza_Enjir%C5%8D }
  ?yamaza dbo:birthPlace ?birthPlace .

  # Wars involving Toyotomi Hidenaga
  VALUES (?hidenaga) { dbr:Toyotomi_Hidenaga }
  ?hidenaga dbo:participatedInWar ?war1 .

  # Wars involving Hashiba Hidekatsu
  VALUES (?hidekatsu) { dbr:Hashiba_Hidekatsu }
  ?hidekatsu dbo:participatedInWar ?war2 .

  # Find entities related to these wars
  OPTIONAL { ?war1 dbo:location ?entity . }
  OPTIONAL { ?war2 dbo:location ?entity . }

  FILTER(?birthPlace = ?entity)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict (war) associated with ""Battle of Fort Royal""
  dbr:Battle_of_Fort_Royal dbo:participatedIn ?conflict .
  
  # Find the commander involved in this conflict
  ?conflict dbo:commander ?commander .

  # Ensure the commander is also related to ""The Triple X's""
  OPTIONAL {
    ?unit dbo:commander ?commander .
    ?unit rdfs:label ""The Triple X's""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  VALUES (?marceloSarmientoBirthDate) {
    SELECT ?birthDate WHERE { 
      dbr:Marcelo_Sarmiento dbo:birthDate ?birthDate .
    }
  }

  ?player a dbo:SoccerPlayer ;
          dbo:SoccerManager ;
          dbo:birthDate ?marceloSarmientoBirthDate .

  ?agueroTeam dbo:team dbr:Sergio_Agüero .

  VALUES (?athleteBirthDate) { ""1955-02-22""^^xsd:date }
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?athleteBirthDate .

  OPTIONAL {
    ?player dbo:team ?team .
  }

  OPTIONAL {
    ?athlete dbo:team ?team .
  }

  FILTER(?team != dbr:Sergio_Agüero)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administrationPeriod WHERE {
  VALUES ?person { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark 
  }
  
  OPTIONAL {
    ?person dbo:monarchOf dbr:Denmark .
    ?person dbo:reigningMonarchStartYear ?startYear .
    ?person dbo:reigningMonarchEndYear ?endYear .
    
    BIND(CONCAT(""Reigned from "", STR(?startYear), "" to "", STR(?endYear)) AS ?administrationPeriod)
  }
}
```",2,2,3,1,2,2,3,28,0,2,1,0.0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Picketts_Charge dbo:militaryConflictOf ?conflict .
  ?conflict dbo:participatingMilitaryForce dbr:Confederate_Army .
  ?conflict a dbo:MilitaryConflict ;
           dbo:relatedEvent ?war .
  FILTER (strstarts(str(?war), ""American Civil War""))
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find the professional who is both a photographer and actor in the specified film
  ?person dbo:occupation dbp:Photographer .
  ?film dbo:actor ?person .
  FILTER (str(?film) = ""Judgment: The Trial of Julius and Ethel Rosenberg""^^xsd:string)
  
  # Ensure the person is also an actor
  ?person dbo:occupation dbp:Actor .

  # Find Doon Arbus
  ?doonArbus rdfs:label ""Doon Arbus""@en .
  
  # Retrieve parents for both individuals
  OPTIONAL { ?person dbo:parent ?parent . }
  OPTIONAL { ?doonArbus dbo:parent ?parent . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find movies in which Herschel Bernardi acted
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Ensure the movie is associated with Amy Arbus as a parent
  ?movie dbo:starring ?person .
  ?person foaf:name ""Amy Arbus"" .
  ?person dbo:parent dbr:Herschel_Bernardi .

  # Find other actors in these movies
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Herschel_Bernardi)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father ?child
WHERE {
  # Isabella of Austria's father
  ?isabella dbo:mother ?mother .
  ?mother dbo:spouse ?father .
  
  FILTER (str(?isabella) = ""Isabella_of_Austria"")

  # Commander in Siege of Padua
  ?commander dbo:commandedMilitaryEngagement ?siege .
  ?siege rdfs:label ?siegeLabel .

  FILTER (CONTAINS(LCASE(?siegeLabel), ""padua""))

  # Child of the commander who is royalty
  ?child dbo:parent ?commander .
  ?child rdf:type dbo:RoyalPerson .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?awardee WHERE {
  # Find Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:nationality dbr:United_States ;
                       dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace rdf:type dbo:Settlement ;
             dbp:country dbr:United_States .

  # Find Medal of Honor awardees related to wars
  ?awardee dbo:award dbr:Medal_of_Honor ;
          dbo:warFoughtIn ?war .
  
  # Match the birthplace of the awardee with Henry Clay Lewis's birthplace
  ?awardee dbo:birthPlace ?matchedBirthPlace .
  FILTER (?matchedBirthPlace = ?birthPlace)
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent
WHERE {
  # First child of Princess Muna al-Hussein who is a royalty
  ?child1 dbo:spouse* <http://dbpedia.org/resource/Princess_Muna_al-Hussein> .
  ?child1 rdf:type dbo:RoyalFamilyMember .

  # Second child (royalty) of the first child
  ?child2 dbo:parent ?child1 ;
          rdf:type dbo:RoyalFamilyMember .

  # Princess Sara bint Faisal's parent is the second child
  <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> dbo:parent ?child2 .
  
  # The parent of the second child (which we want to find)
  ?parent dbo:child ?child2 .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession ?associatedArtist
WHERE {
  VALUES (?birthName ?alias) { (""Tupac Shakur"" ""2Pac"") (""Darryl Paa Kwesi Bannerman-Martin"" ""Stormzy"") }
  
  # Find the person based on their birth name or alias
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }
  OPTIONAL {
    ?person foaf:name ?alias .
  }

  # Ensure they are musicians
  ?person a dbo:Musician .

  # Get their profession
  ?person dbo:profession ?profession .

  # Find associated musical artists
  ?person dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Audrey_Hepburn .
}
```",1,3,2,1,1,2,3,28,15,6,0,0.7142857142857143,1.0,0.8333333333333333
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Identify the ruling party in Central, Louisiana
  ?centralLocation a dbo:AdministrativeRegion ;
                  dbo:country dbr:United_States_of_America ;
                  rdfs:label ""Central, Louisiana""@en .
  
  ?rulingParty dbo:location ?centralLocation ;
               dbo:member ?partyMember .

  # Step 2: Find the parent of Tisha Sterling and their birth name
  ?tishaSterling a dbo:Person ;
                 dbp:name ""Tisha Sterling"" ;
                 dbo:parent ?parent .
  
  ?parent dbp:birthName ?birthName .

  # Step 3: Identify Roger Pryor's spouse
  ?rogerPryor a dbo:Actor ;
              dbp:name ""Roger Pryor""@en ;
              dbo:spouse ?spouse .

  # Step 4: Combine conditions to find the person who matches both criteria
  FILTER (?birthName = ?spouse)
  
  # Ensure the party member is the same as the person matching both conditions
  BIND(?partyMember AS ?personMatchingBothConditions)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2 WHERE {
  # Find a work by Cora Sue Collins and its producer
  ?work dbo:author dbr:Cora_Sue_Collins .
  ?work dbo:producer ?producer1 .

  # Find the actor of High Society Blues
  ?highSocietyBlues dbo:starring ?actor .
  
  # Find another movie by this actor and its producer
  ?anotherMovie dbo:starring ?actor ;
               dbo:producer ?producer2 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Identify actors of these films
  ?film dbo:starring ?actor .

  # Step 3: Determine Ann Sothern's birth name
  ?annSothern foaf:name ""Ann Sothern""@en ;
              foaf:mbox <http://dbpedia.org/resource/Ann_Sothern#birthName> .
  
  # Extract the birth name of Ann Sothern
  ?annSothern dbo:birthName ?birthName .

  # Step 4: Find persons born as Ann Sothern's birth name
  ?person foaf:name ?birthName ;
          foaf:mbox <http://dbpedia.org/resource/Ann_Sothern#birthName> .
  
  # Step 5: Determine the spouse of any actor who is also a person identified in step 4
  ?actor dbo:spouse ?spouse .
  FILTER (?person = ?actor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:title ""An Invitation to the White House""@en .
  ?author dbo:title ""Back to Work (book)""@en .
  
  ?author dbo:spouse ?spouse .

  FILTER EXISTS { ?spouse dbo:occupation dbr:Politician }
  FILTER EXISTS { ?spouse dbo:officeHolder ?_ } # Check if they hold an office
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?movie WHERE {
  # Step 1: Identify the alter ego in ""The Golden Master""
  ?series dbo:title ""The Golden Master""@en .
  ?series dbo:character ?alterEgo .
  
  # Find the professional associated with this alter ego
  ?alterEgo dbo:actor ?professional .

  # Step 2: Identify the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Step 3: Connect to a movie featuring both the professional and the author
  ?movie dbo:starring ?professional ;
         dbo:starring ?author .
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfArthur ?parentOfFredericksChild
WHERE {
  # Find Arthur Stanley (politician) and his father
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbo:spouse ?spouse .
  OPTIONAL { ?arthur dbo:child ?child . }
  OPTIONAL { ?child dbo:parent ?fatherOfArthur . }

  # Find Frederick Stanley, 16th Earl of Derby and his child
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby"" .
  ?frederick dbo:child ?fredericksChild .

  # Find the parent of Frederick's child
  OPTIONAL { ?fredericksChild dbo:parent ?parentOfFredericksChild . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?sawMinPhyu dbo:spouse ?spouse .
  FILTER(STR(?sawMinPhyu) = ""Saw Min Phyu"") .

  ?spouse dbo:child ?child .
  
  ?child a dbp:Royalty .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Princess Antoinette of Brunswick-Wolfenbüttel
  ?princess a dbo:Person ;
            dbp:name ""Antoinette of Brunswick-Wolfenbüttel""@en ;
            dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:Royalty .

  # Find the spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,2,20,2,3,2,0.4,0.5,0.4444444444444445
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Paris .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,114,8752,39526,0.012858109632303182,0.002875882946518668,0.0047004494289366264
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?philip .
  FILTER(?philip = db:Philip_I_of_Castile) .
  
  ?child dbo:parent ?person .
  ?child a ?royaltyClass .

  # Assuming royalty classes might include categories like Monarch, King, Queen, etc.
  VALUES ?royaltyClass {
    <http://dbpedia.org/ontology/Monarch>
    <http://dbpedia.org/ontology/King>
    <http://dbpedia.org/ontology/Queen>
  }
}
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis' death place that is a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Konstantinos Ventiris associated war
  dbr:Konstantinos_Ventiris dbo:associatedWith ?war .

  # Find the intersection of these places and wars
  ?settlement rdf:type dbo:Settlement .
  FILTER (?settlement = ?deathPlace)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:SoccerPlayer .
  ?actor a dbo:Athlete .
  
  # Actor in ""All or Nothing: Manchester City""
  ?castMember dbo:cast dbr:All_or_Nothing:_Manchester_City .
  ?castMember dbp:characterName ?actor .

  # Played with Pablo Aimar
  ?team dbo:member ?player1, ?player2 .
  ?player1 rdfs:label ""Pablo Aimar""@en .
  ?player2 rdfs:label ?actorLabel .
  FILTER(LANG(?actorLabel) = 'en') .

  # Born on February 22, 1955
  ?actor dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1955 && MONTH(?date) = 2 && DAY(?date) = 22)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?officeHolder ?militaryConflict WHERE {
  # Find the tenant of Madrid
  ?tenant dbo:location dbr:Madrid .
  
  # Find an office holder who is also a politician and involved in a military conflict with Manuel Pinto da Costa
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:memberOf ?militaryConflict .
  
  FILTER EXISTS { ?militaryConflict dbo:participant dbr:Manuel_Pinto_da_Costa . }
  
  # Find the office of Miguel Maura
  ?office dbr:Miguel_Maura .

  # Bind the person to the office holder variable
  BIND(?person AS ?officeHolder)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistStuartTosh ?bandMemberDavidPaton
WHERE {
  # Find the musical artist associated with Stuart Tosh
  ?stuartTosh a dbo:Person ;
              foaf:name ""Stuart Tosh"" ;
              dbo:musicGroup ?artistStuartTosh .

  # Find the musical artist associated with David Paton
  ?davidPaton a dbo:Person ;
              foaf:name ""David Paton"" ;
              dbo:musicGroup ?artistDavidPaton .

  # Find band members of the group associated with David Paton
  ?artistDavidPaton dbo:bandMember ?bandMemberDavidPaton .
  
  # Check if Stuart Tosh is a member of any of these bands
  OPTIONAL { ?bandMemberDavidPaton foaf:name ""Stuart Tosh"" }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:name ""Roy Barreras""@en .
  ?person dbo:country dbr:Colombia .
  ?person dbo:partyAffiliation ?party .
}
```

This query does the following:
- Uses `dbo:name` to find resources associated with the name ""Roy Barreras.""
- Ensures the person is linked to Colombia using `dbo:country`.
- Retrieves the political party affiliation using `dbo:partyAffiliation`.",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  { 
    ?person1 rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
    ?person1 dbo:parent ?parent .
  }
  
  UNION
  
  # Find Hon. Mary Frances Bowes-Lyon
  {
    ?person2 rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
    ?person2 dbo:parent ?parent .
  }
}",3,3,4,2,2,2,3,28,2,0,0,1.0,1.0,1.0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Nicholas Michael Curran
  ?curran a dbo:Person ;
          foaf:name ""Nicholas Michael Curran"" .

  # Check if he is associated with any musical artists
  ?curran dbo:musicArtist ?artist .

  # Ensure the artist is related to The Fabulous Thunderbirds or Eric Clapton's band
  OPTIONAL {
    ?artist dbo:bandMember dbr:The_Fabulous_Thunderbirds .
  }
  UNION
  OPTIONAL {
    ?claptonBand a dbo:MusicalGroup ;
                 dbo:member dbr:Eric_Clapton .
    ?artist dbo:bandMember ?claptonBand .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  
  # Person is an athlete
  ?person dbo:occupation dbr:Athlete .

  # Person is a soccer player
  ?person dbo:sport dbr:Soccer .

  # Person is a sports manager
  ?person dbo:occupation dbr:Sports_manager .

  # Person is a soccer manager
  ?person dbo:occupation dbr:Soccer_manager .

  # Manager of Hong Kong C Team
  ?manager dbo:occupation dbr:Sports_manager ;
           dbo:occupation dbr:Soccer_manager .
  
  # Person is a player under this manager for the Hong Kong C Team
  ?team dbo:coach ?manager ;
        rdfs:label ""Hong Kong national football team C""@en .
  
  ?player dbo:playsForTeam ?team ;
          dbp:position ""Player""@en .
  
  ?player dbo:occupation dbr:Athlete ;
          dbo:sport dbr:Soccer .

  # The person we are looking for is the player
  ?player foaf:name ?personName .
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Spanish Socialist Workers' Party
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
    dbo:country dbr:Spain .

  # Leader of the party during the 2009 Galician regional election
  ?leader dbo:party dbr:Spanish_Socialist_Workers'_Party ;
          dbo:election dbr:2009_Galician_regional_election .

  # Office held by this leader
  ?office a dbo:Office ;
          dbo:holder ?leader .

  # Administration related to Spain
  ?administration dbo:country dbr:Spain ;
                  dbo:tenant ?tenant .

  # Ensure the office is linked to the administration
  ?office dbo:partOf ?administration .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:title ""The First Glove""@en .
  ?work a dbo:Book .
  ?work dbo:author ?author .
}
```

This query does the following:
- Searches for a resource (`?work`) that has a title of ""The First Glove"" in English.
- Ensures that this resource is an instance of `dbo:Book`.
- Retrieves the author(s) associated with this work using the `dbo:author` property.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce ?bayneConflict ?bayneForce WHERE {
  # Battle of Cape Finisterre (1805)
  VALUES ?battle { dbr:Battle_of_Cape_Finisterre_(1805) }
  
  # Get military forces involved in the battle
  ?battle dbo:participatingMilitaryUnit ?battleForce .
  
  # William Bayne's involvement in a conflict
  ?bayneConflict dbo:participant ?bayne .
  FILTER (str(?bayne) = ""William_Bayne_(Royal_Navy_officer)"")
  
  # Get military forces involved in the conflict
  ?bayneConflict dbo:participatingMilitaryUnit ?bayneForce .
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Identify Shatrughan Sinha's profession
  ?sinha a dbo:Person ;
         foaf:name ""Shatrughan Sinha""@en .
  
  ?sinha dbo:profession ?profession .

  # Find other professionals with the same profession
  ?professional a dbo:Person ;
                dbo:profession ?profession .
  
  FILTER(?professional != ?sinha) # Exclude Shatrughan Sinha himself
}
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Find the birthplace of a notable Sangeet Natak Akademi Fellowship awardee
  ?awardee dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  ?awardee foaf:name ?name .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Find the birthplace of Smita Patil
  ?smitaPatil foaf:name ""Smita Patil"" .
  ?smitaPatil dbo:birthPlace ?smitaPatilBirthPlace .
}
```

This query assumes that DBpedia has entries for awardees with the `dbo:award` property set to ""Sangeet Natak Akademi Fellowship"". It retrieves the birthplaces of these individuals and Smita Patil.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?birthdate .

  # Find individuals who are both soccer players and managers
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbp:dateOfBirth ?birthDate .

  # Ensure the birthdate matches Marcelo Sarmiento's birthdate
  FILTER (?birthDate = ?birthdate)

  # Get the team associated with the person
  ?person dbo:team ?team .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Artist .
  ?person dbo:occupation dbr:Musical_artist .
  ?person dbo:birthPlace dbr:London .
  ?person foaf:name ?name .
}
```",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
    { 
        ?person a dbo:MusicalArtist ;
                foaf:name ""Nick Curran""@en .
        OPTIONAL { ?collaboration dbo:performer ?person ; dbo:performer ?artist . }
        BIND(?artist AS ?entity)
    } UNION {
        ?clapton a dbo:MusicalArtist ;
                 foaf:name ""Eric Clapton""@en .
        ?collaboration dbo:performer ?clapton ;
                       dbo:performer ?member .
        ?member a dbo:MusicalArtist .
        OPTIONAL { ?memberMemberBand dbo:band ?member ; dbo:band ?band . }
        BIND(?band AS ?entity)
    }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?countryEntity
WHERE {
  # Find Sofía Petro and her father
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  ?sofia dbo:parent ?father .

  # Get the political party of Sofía Petro's father
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Daniel Elahi Galán and his country
  ?daniel a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  
  ?daniel dbo:nationality ?countryEntity .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies featuring Iliza Shlesinger
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  
  # Find Janusz Kamiński's spouse
  ?janusz dbo:spouse ?spouse .

  # Ensure the movie is a film and work
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:Work .

  # Check if the spouse acted in the same movie
  ?movie dbo:starring ?spouse .

  # Find awards received by Janusz Kamiński
  ?award dbo:recipient ?janusz .
  
  # Return the actor who is also the spouse of Janusz Kamiński
  BIND(?spouse AS ?actor)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneMilitaryForce ?calderMilitaryForce WHERE {
  # Find William Bayne's military conflict
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:agent dbr:William_Bayne_(Royal_Navy_officer) .
  
  OPTIONAL { 
    ?bayneEvent dbo:militaryForce ?bayneMilitaryForce .
  }
  
  # Find Robert Calder's event that is both military and societal
  ?calderEvent a dbo:Event, dbo:MilitaryForce ;
               dbo:agent dbr:Robert_Calder .
  
  OPTIONAL {
    ?calderEvent dbo:militaryForce ?calderMilitaryForce .
  }
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  VALUES ?person { 
    dbr:Konstantinos_Ventiris 
    dbr:Napoleon_Zervas 
  }
  
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Step 1: Find awardees of Commander of the Royal Victorian Order
    ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .

    # Step 2: Identify children of Frederick Stanley, 16th Earl of Derby
    ?child dbo:parent dbr:Fredrick_Stanley,_16th_Earl_of_Derby ;
           a dbo:Person .

    # Determine which child is a politician
    ?politicianChild rdf:type dbo:Politician ;
                     dbo:parent dbr:Fredrick_Stanley,_16th_Earl_of_Derby .
    
    # Find the father of that politician
    ?father dbo:child ?politicianChild .

    # Step 3: Determine the parent of the awardee
    ?awardee dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Ab Kya Hoga""@en .
  ?movie dbo:type dbr:Television_show .
  ?tvShow dbo:title ?title .
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  FILTER(?movie = ?tvShow)
  ?actor dbo:actedIn ?movie ;
         dbo:profession dbr:Politician .
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?birthDate ?administrationRole ?mayorName ?mayorAdministration
WHERE {
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:name ?personName ;
                                                        dbo:birthday ?birthDate .

  OPTIONAL {
    ?person dbo:positionHeld ?administrationRole .
  }

  # Find the Mayor of Duchy of Schleswig
  ?mayor a dbo:Mayor ;
         dbp:office ?mayorOffice ;
         dbo:name ?mayorName .

  FILTER(CONTAINS(LCASE(?mayorOffice), ""duchy of schleswig""))

  OPTIONAL {
    ?mayor dbo:positionHeld ?mayorAdministration .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles.

  # Parent's children (including Charles)
  ?childOfParent dbo:parent ?parentOfCharles.
  
  # Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?childOfFerdinand.

  # Common child between the two sets
  FILTER (?childOfParent = ?childOfFerdinand)

  # Father of this common child
  ?childOfParent dbo:father ?father.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate
WHERE {
  dbr:Eleonora_Menicucci_de_Oliveira dbo:almaMater ?almaMater .
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Natives of Jamshedpur
  {
    ?person a dbo:Person ;
            dbo:name ?name ;
            dbo:birthPlace dbr:Jamshedpur .
  }
  
  UNION
  
  # Natives of any place in India
  {
    ?person a dbo:Person ;
            dbo:name ?name ;
            dbo:birthPlace ?place .
    ?place dbo:country dbr:India .
  }
}
ORDER BY ?name
```",2,2,3,1,2,2,2,9,0,0,21,0,0.0,0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?profession
WHERE {
  # Find Emilia and her band members
  dbr:Emilia_(Bulgarian_singer) dbo:memberOf ?band .
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicArtist .

  # Find Jamie T's profession
  dbr:Jamie_T dbo:profession ?jamieTProfession .

  # Match the professions
  ?bandMember dbo:profession ?profession .
  FILTER (?profession = ?jamieTProfession)
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInCharleston WHERE {
  # Find Quincy Adams Gillmore's military force or command
  dbr:Quincy_A._Gillmore dbo:militaryCommanderOf ?force .
  
  # Find entities in Charleston, South Carolina related to him
  ?entityInCharleston a dbo:MilitaryConflict ;
                     dbo:location dbr:Charleston,_South_Carolina ;
                     dbo:participated ?gillmoreEntity .

  OPTIONAL {
    ?gillmoreEntity dbo:agent dbr:Quincy_A._Gillmore .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?thirdLevelArtist WHERE {
  # Step 1: Find James Plotkin's resource
  ?plotkin a dbo:Musician ;
           foaf:name ""James Plotkin""@en .

  # Step 2: Find artists associated with James Plotkin
  ?plotkin dbo:associatedMusicalArtist ?firstLevelArtist .

  # Step 3: For each first-level artist, find their associated artists
  ?firstLevelArtist dbo:associatedMusicalArtist ?thirdLevelArtist .
}
```",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Person 1
  ?person1 a dbo:SoccerPlayer ;
           dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:managerOf ?team .

  # Find Person 2
  ?person2 a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:playsFor ?team .

  # Ensure Person 1 is a player in the team of Person 2
  ?playerTeam dbo:member ?person1 .
  FILTER (?playerTeam = ?team)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify the TV show
  dbr:All_or_Nothing:_Manchester_City dbo:starring ?actor .

  # Ensure the actor is a soccer player
  ?actor dbo:sport ?sport .
  FILTER (str(?sport) = ""Association football"")

  # Ensure the actor is an athlete
  ?actor rdf:type dbo:Athlete .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Rodney_Lees dbo:award ?award .
  
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person foaf:name ""Cora Sue Collins""@en .
  ?person dbo:birthName ?name .
  FILTER(CONTAINS(LCASE(?name), ""cora sue collins""))
  
  OPTIONAL { ?person dbo:notableWork ?work . }
}
```

This query does the following:
- Uses `foaf:name` to find entities with the name ""Cora Sue Collins"".
- Filters results using `dbo:birthName` to ensure it matches ""Cora Sue Collins"" in a case-insensitive manner.
- Retrieves any notable works associated with her using `dbo:notableWork`.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?s dbp:name ""Roger II of Sicily""@en .
  ?s dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }

  ?peterIV dbo:father ?father .

  ?father dbo:child ?child .
  ?child a dbo:Monarch .
  
  FILTER (?child != ?peterIV)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseProducer
WHERE {
  # Linda Bruckheimer's spouse
  ?linda a dbo:Person ;
         dbp:name ""Linda Bruckheimer""@en .
  ?linda dbo:spouse ?spouse .

  # Producers of ""12 Strong""
  ?movie a dbo:Film ;
         rdfs:label ""12 Strong""@en .
  ?movie dbo:producer ?producer .

  # Find the common entity
  FILTER (?spouse = ?producer)
  BIND(?spouse AS ?spouseProducer)
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?belavictor rdf:type dbo:Monarch ;
              foaf:name ""Béla IV of Hungary""@en .
  
  ?belavictor dbo:child ?child .

  ?child rdf:type ?type .
  FILTER (?type IN (dbo:Monarch, dbo:RoyalFamilyMember))
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cece_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find alter ego in The Golden Master series
  ?series dbo:character ?alterEgo .
  ?alterEgo rdfs:label ""The Golden Master""@en .

  # Find actor of the alter ego
  ?alterEgo dbo:portrayedBy ?actor .

  # Ensure the actor is also in ATL (film)
  ?atlFilm dbo:starring ?actor .
  ?atlFilm dbr:ATL_(film) .

  # Check for another movie involvement
  OPTIONAL {
    ?anotherMovie dbo:starring ?actor .
    FILTER(?anotherMovie != dbr:ATL_(film))
  }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?theme ?creatorName ?birthPlaceLabel WHERE {
  # Find Dikhawa and its theme
  OPTIONAL { 
    dbr:Dikhawa dbo:abstract ?abstract .
    BIND(SUBSTR(?abstract, STRSTARTS(UCASE(?abstract), ""THEME: "")) AS ?theme)
  }
  
  # Find the creator of Dikhawa
  OPTIONAL {
    dbr:Dikhawa dbo:creator ?creator .
    ?creator foaf:name ?creatorName .
    
    # Check if the creator is native to Lahore
    OPTIONAL {
      ?creator dbp:birthPlace dbr:Lahore .
      BIND(""Native of Lahore"" AS ?birthPlaceLabel)
    }
  }
  
  # If no specific birthplace information, get any available birthplace label
  FILTER(!bound(?birthPlaceLabel))
  OPTIONAL {
    ?creator dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
}
```",2,2,3,1,2,2,2,9,0,75567,1,0.0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find Kiyosu's time zone
  dbr:Kiyosu dbo:timeZone ?kiyosuTimeZone .
  
  # Find Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?asakawaBirthPlace .

  # Match the region of Kiyosu's time zone with Chieko Asakawa's birthplace
  ?kiyosuTimeZone dbo:region ?region .
  ?asakawaBirthPlace dbp:country ?region .
  
  # Return the entity that matches the criteria
  ?entity dbp:country ?region .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Robert Calder's involvement in military events
  ?calderEvent dbo:agent dbr:Robert_Calder .
  
  # The event is related to the French Campaign in Egypt and Syria
  ?calderEvent dbo:isPartOf dbr:French_campaign_in_Egypt_and_Syria .

  # Find the military force associated with this event
  ?calderEvent dbo:militaryForce ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warKonstantinos ?warLeader WHERE {
  # Find wars associated with Konstantinos Ventiris
  OPTIONAL {
    ?person rdfs:label ""Konstantinos Ventiris""@en .
    ?person dbo:participatedIn ?warKonstantinos .
  }

  # Find the leader of National Party of Greece and their wars
  OPTIONAL {
    ?party rdfs:label ""National Party (Greece)""@en .
    ?party dbo:leader ?leaderPerson .
    ?leaderPerson rdfs:label ?leaderLabel .
    ?leaderPerson dbo:participatedIn ?warLeader .
  }
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find the band member of The Alan Parsons Project
  ?person dbo:memberOfBand dbr:The_Alan_Parsons_Project .
  
  # Filter to find Stuart Tosh specifically
  FILTER(?person = dbr:Stuart_Tosh)
  
  # Get the name of the band member
  ?person rdfs:label ?bandMember .
  
  # Find associated musical artists with Stuart Tosh
  OPTIONAL {
    ?association dbo:associatedMusicalArtist ?person .
    ?association rdfs:label ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?commander dbo:spouse ?mother .
  ?mother dbo:parent dbr:Eleonore_of_Austria_(1616-1675) .
  ?commander dbo:occupation ""Commander""@en .
  FILTER EXISTS { ?commander dbo:participatedIn dbr:Thirty_Years'_War }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?party WHERE {
  VALUES (?person ?name) {
    (dbr:Roy_Leonardo_Barreras_Montealegre ""Roy Leonardo Barreras Montealegre"")
    (dbr:Gustavo_Petro ""Gustavo Petro"")
  }
  
  ?person dbo:birthPlace dbr:Colombia .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:partyAffiliation ?party .
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce ?battleCommander ?campaignCommander ?calderEvent ?calderForce 
WHERE {
  # Battle of Fort Royal details
  VALUES ?battle { dbr:Battle_of_Fort_Royal }
  
  ?battle dbo:militaryUnit ?battleForce .
  ?battle dbo:commander ?battleCommander .

  # French Campaign in Egypt and Syria commander
  VALUES ?campaign { dbr:French_campaign_in_Egypt_and_Syria }
  
  ?campaign dbo:commander ?campaignCommander .

  # Robert Calder's event that is both military and societal
  VALUES ?calder { dbr:Robert_Calder_(Royal_Navy_officer) }
  
  ?event dbo:agent ?calder .
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  
  ?event dbo:militaryUnit ?calderForce .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Step 1: Identify Stephen V of Hungary
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .

  # Step 2: Find his predecessor
  ?predecessor dbo:successor ?stephenV .

  # Step 3: Identify the children of the predecessor
  ?childOfPredecessor dbo:parent ?predecessor ;
                     a dbo:Person .

  # Step 4: Determine which child is royalty
  ?royalChild dbr:Category:Royalty ;
              rdf:type dbo:Person ;
              foaf:name ?name .

  FILTER (?childOfPredecessor = ?royalChild)

  # Step 5: Find the children of this royal child
  ?childOfChild dbo:parent ?royalChild ;
               a dbo:Person .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember WHERE {
  # Match the album ""Sappy""
  dbr:Sappy dbo:composer ?writer .

  # Find band members associated with the writer
  ?writer dbo:member ?band .
  ?band dbo:member ?bandMember .
  
  FILTER(?bandMember != ?writer) # Exclude the writer themselves if they are listed as a member
}
```

### Explanation

- **dbr:Sappy**: Represents the DBpedia resource for the album ""Sappy.""
- **dbo:composer**: Used to find the composer(s) or writer(s) of the album.
- **dbo:member**: Used to identify members of a band.

This query will return distinct band members associated with the writers of the album ""Sappy.""",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scottLaFaroBirthplace ?laurynHillBirthplace
WHERE {
  dbr:Scott_LaFaro dbo:birthPlace ?scottLaFaroBirthplace .
  dbr:Lauryn_Hill dbo:birthPlace ?laurynHillBirthplace .
}",3,4,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Find William Tennant and his command
  ?tennant a dbo:MilitaryPerson ;
           foaf:name ""William Tennant"" ;
           dbo:commanderOf ?force .

  # Identify the war he was involved in
  ?force dbo:participatedIn ?war .

  # Filter for societal events and military conflicts related to World War II
  ?war a dbo:MilitaryConflict ;
      dbo:wikiPageRedirects dbr:World_War_II .

  # Find the event of sinking Prince of Wales and Repulse
  OPTIONAL {
    ?event dbo:participatedIn ?war ;
           dbo:wikiPageRedirects dbr:Sinking_of_Prince_of_Wales_and_Reprulse .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Cecily_Bell dbo:birthPlace ?birthPlace .
}
```

This query uses the `dbo:birthPlace` property to find the birthplace of Cece Bell, who is represented in DBpedia as ""Cecily Bell"" (note that names might be slightly different in DBpedia).",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find books authored by Hillary Clinton
  ?book dbo:author dbr:Hillary_Clinton ;
        a dbo:Book .

  # Identify the author who is also a politician and office holder
  ?author dbo:authored ?book ;
          a dbo:Politician, dbo:OfficeHolder .

  # Retrieve the spouse of this author
  ?author dbp:spouse ?spouse .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?actorProfession ?otherProfession
WHERE {
  ?person a dbo:Actor .
  ?person dbo:occupation ?actorProfession .
  FILTER (str(?actorProfession) = ""Actor"") .

  OPTIONAL {
    ?person dbo:occupation ?otherProfession .
    FILTER (!str(?otherProfession) = ""Actor"")
  }
}
```",2,2,3,1,2,2,3,28,0,0,4210,0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?person ?regionState
WHERE {
  # Uncle Murda's band member
  ?uncleMurda dbo:memberOf ?band .
  ?band dbo:bandMember ?bandMember .
  FILTER (str(?uncleMurda) = ""Uncle_Murda"") .

  # Person born as Bobby Shmurda's birth name
  ?person dbp:birthName ""Robert Williams""@en .
  FILTER (str(?person) = ""Bobby_Shmurda"") .

  # A band from New York that won an award
  ?band dbo:originPlace dbr:New_York_(state) .
  ?awardEvent dbo:recipient ?band .
  ?regionState a dbo:Region ;
               dbo:country dbr:United_States_of_America ;
               rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""new york"")) .

  # Ensure the awardee is a band
  ?awardEvent a dbo:Award .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?recipient dbo:recipientOf ?award .
  ?recipient dbo:occupation ?occupation .
  ?occupation dbo:relatedTo ?war .
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the war involving the 30th (Cambridgeshire) Regiment of Foot
  ?war dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
       a dbo:MilitaryConflict, dbo:Event .

  # Find the commander in that war
  ?commander dbo:commandedMilitaryForce ?militaryForce .
  ?militaryForce dbo:participatedIn ?war .

  # Ensure the military force is involved in the Battle of Fort Royal
  ?battle dbr:Battle_of_Fort_Royal ;
         a dbo:MilitaryConflict, dbo:Event .
  ?militaryForce dbo:participatedIn ?battle .

  # Find the event associated with Robert Calder
  ?event dbo:agent dbr:Robert_Calder ;
         a dbo:SocietalEvent, dbo:Event .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Caroline Louise Bevan Symonds"" .
}
```

This query searches for a DBpedia resource where the `dbo:birthName` property matches ""Caroline Louise Bevan Symonds."" The result will be the DBpedia resource representing this person.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?author ?spouse WHERE {
  # Find the commander during the Third Taiwan Strait Crisis
  ?crisis dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?crisis)), ""third taiwan strait crisis""))

  # The author of a work related to Bill Clinton and Hillary Clinton
  ?work dbo:author ?author ;
        dbo:subject dbr:Bill_Clinton, dbr:Hillary_Clinton .

  # Ensure the work is a book
  ?work rdf:type dbo:Book .

  # Find the spouse who is a politician
  ?author dbp:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLabel WHERE {
  VALUES ?person { dbr:Margarete_Sophie_of_Austria }
  OPTIONAL { ?person dbo:mother ?mother . BIND(?mother AS ?parent) }
  OPTIONAL { ?person dbo:father ?father . BIND(?father AS ?parent) }
  ?parent rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Ann_Sothern dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?claimToFame ?actor WHERE {
  # Find the producer of ""A Star Is Born (1937 film)""
  dbr:A_Star_Is_Born_(1937_film) dbo:director ?producer .

  # Find a notable work by this producer
  ?producer dbo:notableWorks ?claimToFame .

  # Identify an actor from this claim to fame
  ?claimToFame dbo:starring ?actor .

  # Ensure the actor is Johnny Doughboy
  VALUES ?actor { dbr:Johnny_Doughboy }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:fictionalWork ?work .
  ?work dbo:genre dbr:Comics .
  ?character rdfs:label ?name .
  FILTER CONTAINS(LCASE(?name), ""alter ego"") .
  ?character dbo:alias ?alterEgo .
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace ?youngkinBirthPlace
WHERE {
  # Vince Gilligan's award and awardee
  ?award dbo:recipient dbr:Bryan_Cranston .
  ?award dbo:creator dbr:Vince_Gilligan .
  
  # Birthplace of the awardee (Bryan Cranston)
  dbr:Bryan_Cranston dbo:birthPlace ?awardeeBirthPlace .

  # Glenn Youngkin's birthplace
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?nativePlace WHERE {
  ?person dbo:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
  ?parent dbo:nativePlace ?nativePlace .
  FILTER(CONTAINS(LCASE(?nativePlace), ""middlesex""))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?war .
  
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  dbr:William_Bayne_(Royal_Navy_officer) dbo:award ?orderOfTheBath .
  
  ?orderOfTheBath rdf:type dbo:SocietalEvent ;
                  rdf:type dbo:Event .

  ?war dbo:militaryForce ?militaryForce .
  ?orderOfTheBath dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:placeOfBurial dbr:Melbourne_Cemetery .
  ?person dbo:child dbr:Ada_Watson .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:spouse ?mother .

  ?child dbo:parent dbr:François_Ier,_Duke_of_Lorraine ;
         a dbo:Monarch ;

  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?team
WHERE {
  # Find Marcelo Sarmiento's birthday
  VALUES ?marceloSarmientoBirthday {
    SELECT ?birthday WHERE { 
      dbr:Marcelo_Sarmiento dbo:birthday ?birthday .
    }
  }

  # Find an athlete born on 1955-02-22
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date ;
           a dbo:Athlete .

  # Find a soccer player and manager with the same birthday as Marcelo Sarmiento
  ?soccerPerson dbo:birthday ?marceloSarmientoBirthday ;
                a dbo:SoccerPlayer, dbo:SportsManager .

  # Get the team of the athlete
  ?athlete dbp:team ?team .

  # Ensure the soccer player and manager is associated with the same team
  OPTIONAL { 
    ?soccerPerson dbp:team ?team .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childName WHERE {
  # Identify Ferdinand II, Holy Roman Emperor
  ?ferdinand2 a dbo:Person ;
              foaf:name ""Ferdinand II"" ;
              dbo:title ""Holy Roman Emperor""@en .

  # Find his children
  ?ferdinand2 dbo:child ?child .

  # Check if the child was a commander in the Thirty Years' War
  OPTIONAL { ?child dbo:occupation dbp:Commander . }
  OPTIONAL { ?child dbo:participatedIn dbp:ThirtyYearsWar . }

  # Get the name of the child
  ?child foaf:name ?childName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?siege dbo:event = dbr:Siege_of_Padua .
  ?commander dbo:commanded ?siege .
  ?child dbo:parent ?commander ;
         a dbo:RoyalFamilyMember ;
         dbo:spouse ?mother .

  ?catherine dbo:father ?person ;
             rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  
  ?isabella dbo:father ?person ;
            rdfs:label ""Isabella of Austria""@en .

  FILTER (lang(?catherineLabel) = 'en' && lang(?isabellaLabel) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  ?person dbo:holdsPublicOffice ?office .

  OPTIONAL { 
    ?office dbo:location dbr:Santiago_de_Compostela .
  }
  
  OPTIONAL { 
    ?office dbo:country dbr:Spain .
  }
}
```

### Explanation

- **PREFIX**: Defines common namespaces for DBpedia.
- **SELECT DISTINCT ?office**: Retrieves distinct offices held by the person.
- **?person a dbo:Person; foaf:name ""Alberto Núñez Feijóo""@en**: Identifies Alberto Núñez Feijóo as a person.
- **dbo:holdsPublicOffice ?office**: Finds offices held by him.
- **OPTIONAL { ?office dbo:location dbr:Santiago_de_Compostela }**: Filters offices located in Santiago de Compostela.
- **OPTIONAL { ?office dbo:country dbr:Spain }**: Ensures the office is related to Spain.

This query captures the intent of finding offices held by Alberto Núñez Feijóo that are associated with both Santiago de Compostela and Spain.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbp:country ""United States""^^xsd:string .

  # Gillmore Medal Awardee
  ?awardee dbo:awardReceived dbr:Gillmore_Medal .

  # Amasa Tracy's war
  dbr:Amasa_Tracy dbo:militaryConflict ?war .

  # Force of the awardee and war
  ?force dbo:partOfMilitaryUnit ?unit .
  ?awardee dbo:memberOf ?force .
  ?force dbo:participatedIn ?war .

  # Entity in the birthplace that is a settlement and American
  ?entity dbo:locatedIn ?birthPlace ;
          a dbo:Settlement ;
          dbp:country ""United States""^^xsd:string .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .
  
  # Find the military force associated with this awardee
  ?awardee dbo:militaryForce ?militaryForce1 .

  # Find the Battle of Fort Royal and its associated military force
  dbr:Battle_of_Fort_Royal dbo:participatedInMilitaryConflict ?battleEvent .
  ?battleEvent dbo:militaryForce ?militaryForce2 .

  # Ensure the military forces are the same
  FILTER (?militaryForce1 = ?militaryForce2)

  # Ensure the event is both a general and societal event
  ?event rdf:type dbo:Event ;
         rdfs:subClassOf* dbo:SocietalEvent .
  
  # Link the awardee's force to the event
  ?awardee dbo:militaryForce ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # GS9 as the associated musical artist
  dbr:GS9 a dbo:MusicalBand ;
          dbo:member ?member .

  # Find band members who are also musical artists and native to Florida
  ?member dbp:nativePlace dbr:Florida ;
          a dbo:Artist, dbo:MusicalArtist .

  # Ensure the person is the same as Bobby Shmurda's birth name
  ?person dbo:birthName ?birthName .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the album of ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  
  # Find actors associated with that album
  ?album dbo:artist ?actor .

  # Ensure the actor is also an actor in ""Shelby Oaks""
  ?actor dbo:film ?shelbyOaks .
  dbr:Shelby_Oaks dbo:starring ?shelbyActor .
  
  FILTER (?actor = ?shelbyActor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?marianoOffice ?tenant
WHERE {
  # Office held by Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Office held by Mariano Rajoy
  dbr:Mariano_Rajoy dbo:office ?marianoOffice .

  # Residence of Alberto Ruiz-Gallardón and its tenant
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  ?residence dbo:tenant ?tenant .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?soccerPlayer WHERE {
  # Find Marty Pollio's birthdate
  VALUES ?martyPollio (dbr:Marty_Polio) .
  
  ?martyPollio dbo:birthday ?birthday .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?athleteBirthDate .
  FILTER (?athleteBirthDate = ?birthday)

  # Find soccer players who are actors in ""All or Nothing: Manchester City""
  ?soccerPlayer a dbo:SoccerPlayer, dbo:Actor ;
                dbo:actorIn dbr:All_or_Nothing:_Manchester_City ;
                dbo:birthDate ?soccerPlayerBirthDate .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find individuals associated with the Central African Republic Civil War as commanders
  ?war dbo:commander ?commander .
  
  FILTER (strstarts(str(?war), ""Central_African_Republic_Civil_War""))

  # Ensure the commander is also a politician
  ?commander dbo:occupation dbr:Politician .

  # Ensure the commander holds an office
  OPTIONAL { ?commander dbo:officeHolderOf ?office . }
  
  FILTER EXISTS { ?commander dbo:officeHolderOf ?office } .
}
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:country dbr:India ; # Ensures the movie is Indian
         dbo:starring dbr:Dipankar_De . # Links Dipankar De to the movie

  ?movie dbo:starring ?actor . # Finds other actors in the same movie
  FILTER(?actor != dbr:Dipankar_De) # Excludes Dipankar De from the results
}
```",2,4,3,2,1,3,2,20,11,1,6,0.9166666666666666,0.6470588235294118,0.7586206896551724
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find ""Paradise"" (2013 film)
  dbr:Paradise_(2013_film) dbo:starring ?actor .

  # Check if the actor is married to Janusz Kamiński
  OPTIONAL { ?actor dbo:spouse dbr:Janusz_Kamiński . }

  # Find movies with Audrey Hepburn and check for common actors
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Audrey_Hepburn .

  FILTER EXISTS {
    ?actor dbo:starring ?movie .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
  # Actors in ""Always (1989 film)""
  ?alwaysFilm a dbo:Film ;
              rdfs:label ""Always""@en .
  
  ?alwaysFilm dbo:starring ?actor1 .
  ?actor1 foaf:name ?actorName .

  # Films with Iliza Shlesinger
  ?ilizaFilm a dbo:Film ;
             dbo:starring dbr:Iliza_Schlesinger .

  ?ilizaFilm dbo:starring ?actor2 .
  ?actor2 foaf:name ?commonActor .

  FILTER(?actor1 = ?actor2)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile's child who is royalty
  ?elviraChild dbo:parent dbr:Elvira_of_Castile ;
               a dbo:RoyalFamily .

  # William I of Sicily's child who is royalty
  ?williamChild dbo:parent dbr:William_I_of_Sicily ;
                a dbo:RoyalFamily .

  # Parent of Roger III, Duke of Apulia
  ?rogerParent dbo:child dbr:Roger_III,_Duke_of_Apulia .

  # The child must be the same in both relationships and related to Roger's parent
  FILTER (?elviraChild = ?williamChild)
  OPTIONAL { ?child dbo:parent ?rogerParent }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?partyMember WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)

  OPTIONAL { ?landmark dbp:location ?location . }
  
  ?country dbo:capital ?location .
  ?party dbo:country ?country ;
         dbo:isRulingParty ""true""^^xsd:boolean .

  ?member dbo:memberOf ?party .
  
  BIND(?member AS ?partyMember)
}
```",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?profession
WHERE {
  # Find the resource for ""The Live Anthology""
  ?work dbr:The_Live_Anthology .
  
  # Identify the writer of this work
  ?work dbo:author ?writer .

  # Check if the writer is a musical artist
  ?writer dbo:occupation ?profession .
  FILTER (CONTAINS(LCASE(?profession), ""musician"") || CONTAINS(LCASE(?profession), ""singer"") || CONTAINS(LCASE(?profession), ""songwriter""))
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?song WHERE {
  # Identify the resource for Nick Curran
  VALUES ?nickCurran { dbr:Nick_Curran }

  # Retrieve albums associated with Nick Curran
  ?album dbo:artist ?nickCurran .
  
  OPTIONAL {
    # Retrieve songs from those albums
    ?song dbo:album ?album ;
          rdfs:label ?songLabel .
    
    FILTER (lang(?songLabel) = 'en')
  }
}
ORDER BY ?album
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""20.116800000000001347""^^xsd:float)
}",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}
```

This query selects the producer of the specified film by querying the `dbo:producer` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?settlement WHERE {
  # Find Amasa Tracy and his involvement in a war
  ?tracy dbo:name ""Amasa Tracy""@en .
  ?tracy dbo:spouse ?person1 .
  
  # Find the person who died on 1850-08-05
  ?person2 dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  # Ensure the birthplace is a settlement and American
  ?person2 dbo:birthPlace ?settlement .
  ?settlement rdf:type dbo:Settlement .
  ?settlement dbo:country dbr:United_States .

  # Link the person to Amasa Tracy through relationships (e.g., spouse)
  ?person1 dbo:spouse ?person2 .

  # Find the war involving Amasa Tracy
  ?tracy dbo:occupation ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?father ?child WHERE {
  # Part 1: Find the alter ego of Lamont Cranston (The Shadow)
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Part 2: Find Dawit I and his child Baeda Maryam I
  dbr:Dawit_I dbo:child dbr:Baeda_Maryam_I ;
              a dbo:Person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName (GROUP_CONCAT(?deathPlace; separator="", "") AS ?deathPlaces)
WHERE {
  # Find actors for ""Color Me Dead""
  {
    ?film dbr:Color_Me_Dead .
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
  }

  UNION

  # Find actors for ""The Sky Ranger (1928 film)""
  {
    ?film dbr:The_Sky_Ranger_(1928_film) .
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
  }

  FILTER(?deathPlace != """")
}
GROUP BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?movieActor ?albumArtist
WHERE {
  # The Shadow's alter ego and profession
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  dbr:Lamont_Cranston dbo:profession ?professional .

  # Actor in a movie related to ""What You Know"" (T.I. song)
  ?movie dbo:title ?title .
  ?movie dbo:actor ?movieActor .
  FILTER(CONTAINS(LCASE(?title), ""what you know"")) .

  # Artist associated with an album of ""What You Know""
  ?album dbo:artist ?albumArtist .
  ?album dbo:song dbr:What_You_Know_(T.I._song) .
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Steve Miller"" ;  # Assuming Steve Miller is the person in question
          dbo:birthName ""Nicholas Michael Curran"" .
  
  ?band dbo:member ?person ;
        dbr:The_Fabulous_Thunderbirds .

  ?person dbo:associatedBand ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?administrationOlafI ?territory
WHERE {
  # Administration of Christian IX of Denmark
  OPTIONAL { 
    ?christianIX dbo:positionHeld ?administrationChristianIX .
    FILTER (strstarts(str(?administrationChristianIX), ""dbr:""))
  }
  
  # Administration of Olaf I of Denmark
  OPTIONAL { 
    ?olafI dbo:positionHeld ?administrationOlafI .
    FILTER (strstarts(str(?administrationOlafI), ""dbr:""))
  }

  # Death place of Christian Ditlev Ammentorp Hansen
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Territories administered from this location by either Christian IX or Olaf I
  OPTIONAL {
    ?administrationChristianIX dbo:location ?territory .
    FILTER (strstarts(str(?territory), ""dbr:"") && ?territory = ?deathPlace)
  }
  
  OPTIONAL {
    ?administrationOlafI dbo:location ?territory .
    FILTER (strstarts(str(?territory), ""dbr:"") && ?territory = ?deathPlace)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician""))
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Person`.
- Retrieves their name using `foaf:name`.
- Filters those whose birth name is exactly ""Darryl Paa Kwesi Bannerman-Martin"".
- Checks if one of their occupations contains the term ""musician"" (case-insensitive).",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?person rdfs:label ""Ada Watson""@en .
  ?person dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?person dbo:deathPlace dbr:Los_Angeles ;
          dbo:film ?movie .
}
```",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?person dbo:name ""Antonios Varthalitis""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  ?album dbo:writer ?writer .
  
  VALUES ?album { dbr:No_Alternative }
  
  ?bandMember dbo:member ?writer .
  
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .
  
  ?associatedArtist a dbo:Band ;
                   dbo:member ?remMember .
  ?remMember dbr:R.E.M. .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Archduke Charles Louis of Austria
  ?charles a dbo:Person ;
           dbo:spouse ?spouse1 .

  # Child of Archduke Charles Louis
  ?child1 dbo:parent ?charles ;
          rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Grandchild (child of the child) who is royalty
  ?childOfChild dbo:parent ?child1 ;
                rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Archduchess Helena of Austria
  ?helena a dbo:Person ;
          dbo:spouse ?spouse2 .

  # Child of the spouse of Archduchess Helena who is royalty
  ?child2 dbo:parent ?spouse2 ;
          rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Albrecht, Duke of Württemberg
  ?albrecht a dbo:Person ;
            dbo:child ?child3 .

  # Child of both the spouse of Helena and Albrecht
  ?child2 = ?child3 .

  # Predecessor relationship
  ?childOfChild dbo:predecessor ?child2 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?campaignMilitaryForce ?battleMilitaryForce WHERE {
  # Find the commander in the French campaign in Egypt and Syria
  ?campaign a dbo:MilitaryConflict ;
            dbo:commander ?commander .
  
  FILTER (str(?campaign) = ""French_Egyptian_Campaign"" || str(?campaign) = ""Syrian_Campaign"") .

  # Get military force involved in the campaign
  ?campaign dbo:militaryForce ?campaignMilitaryForce .

  # Find William Bayne's involvement
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .
  
  OPTIONAL {
    ?commander dbr:William_Bayne .
  }

  # Get military force involved in the Battle of Cape Finisterre (1805)
  ?battle a dbo:MilitaryConflict ;
          dbo:date ?date ;
          dbo:militaryForce ?battleMilitaryForce .

  FILTER (str(?battle) = ""Battle_of_Cape_Finisterre_(1805)"" && year(xsd:dateTime(?date)) = 1805) .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?writer WHERE {
  # Jean Baptist, Comte d'Arco and his role in a war
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?person dbo:role ?role .
  ?war dbo:name ?warName ;
       dbo:depiction ?tvShow .

  # War that is both a TV show and a societal event
  FILTER CONTAINS(LCASE(?tvShow), ""television"") .
  FILTER CONTAINS(LCASE(?warName), ""war"") .

  # Successor of Yurii Khmelnytsky
  ?khmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?khmelnytsky dbo:succeededBy ?successor .

  # Writer of ""Always the Love Songs""
  ?book dbo:title ""Always the Love Songs""@en ;
        dbo:author ?writer .

  # Linking the commander to the successor
  ?role dbo:commanderOf ?war .
  ?person dbo:succeededBy ?successor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfShelbyOaks ?artistOfAlbum ?professionalInShadow
WHERE {
  # Actor of Shelby Oaks
  dbr:Shelby_Oaks dbo:starring ?actorOfShelbyOaks .

  # Album of What You Know (T.I. song)
  dbr:What_You_Know_(song) dbo:album ?album .
  ?album dbo:artist ?artistOfAlbum .

  # Professional in the alter ego of The Shadow
  ?person rdfs:label ""The Shadow""@en .
  ?person dbo:alias ?professionalInShadow .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?child dbo:parent dbr:William_I_of_Sicily .
  ?child dbo:parent dbr:Elvira_of_Castile .
  ?child a dbo:Monarch .
  ?child dbo:father ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personDecedent WHERE {
  # Find Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Find persons who died at this birthplace
  ?personDecedent dbp:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,154,57,655,0.7298578199052133,0.1903584672435105,0.3019607843137255
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse a dbo:Monarch }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find children of William I of Sicily who are royalty
  ?child1 dbo:parent dbr:William_I_of_Sicily .
  ?child1 a dbo:Monarch .

  # Find children of Roger II of Sicily who are royalty
  ?child2 dbo:parent dbr:Roger_II_of_Sicily .
  ?child2 a dbo:Monarch .

  # Identify common child
  FILTER (?child1 = ?child2)

  # Get the father of this child
  ?child1 dbo:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person dbo:givenName ""Jean Baptiste""@en .
  ?person dbo:familyName ""Comte d'Arco""@en .
  ?person dbo:commanderOf ?war .

  ?war a dbo:War .
  ?war dbp:wikiPageRedirects ?tvShow .
  ?tvShow a dbo:TelevisionSeries .
  
  OPTIONAL {
    ?event dbo:relatedEvent ?war .
    ?event a dbo:SocietalEvent .
  }
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorName ?birthPlaceLabel WHERE {
  ?governor dbo:officeHolder dbr:Office_of_the_Governor_of_Virginia .
  ?governor rdfs:label ?governorName .
  FILTER (CONTAINS(LCASE(?governorName), ""current"") || CONTAINS(LCASE(?governorName), ""incumbent""))
  
  OPTIONAL { ?governor dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . }
}
ORDER BY DESC(?governorName)
LIMIT 1
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Ensure the actor is a soccer player and an athlete
  ?actor dbo:occupation dbr:Soccer_player ;
         dbo:occupation dbr:Athlete .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?season a dbo:SoccerClubSeason ;
          dbo:team dbr:VfL_Bochum ;
          dbo:manager ?manager .
  
  ?manager rdfs:label ""Thomas Letsch""@en .
}
```",3,6,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?person .

  # Ensure this person was a commander in the Great Turkish War
  OPTIONAL { ?person dbo:militaryConflict dbr:Great_Turkish_War . }

  # Ensure this person is the successor of Yurii Khmelnytsky
  OPTIONAL {
    ?yurii dbo:succeededBy ?person ;
           rdfs:label ""Yurii Khmelnytsky""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberArtist ?associatedArtist WHERE {
  # Find the band ""Khlyst""
  dbr:Khlyst a dbo:Band ;
             dbo:bandMember ?member .

  # Check if the member is also a musical artist
  ?member a dbo:MusicalArtist .

  # Get associated artists for this member
  ?member dbo:associatedActs ?associatedArtist .
  
  # Ensure we only consider members who are recognized as musical artists
  ?member rdfs:label ?memberArtist FILTER (LANG(?memberArtist) = 'en') .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Juan Carlos Molina as a footballer
  dbr:Juan_Carlos_Molina dbo:occupation dbo:Footballer .
  
  # The player we are looking for is an athlete and actor in a film directed by Manuel Huerga
  ?player dbo:occupation dbo:Athlete ;
          dbo:actorIn ?film .
  ?film dbo:director dbr:Manuel_Huerga ;
        rdf:type dbo:Film .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?politicianName WHERE {
  # Find actors in the movie ""Ab Kya Hoga""
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .

  # Ensure the actor is associated with the specific movie
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""http://dbpedia.org/resource/Ab_Kya_Hoga_(2006_film)"")))

  # Check if the actor has a profession as a politician
  ?actor dbo:profession ?politician .
  ?politician a dbo:Politician .

  # Return the actor and their name in the context of being a politician
  BIND(?actor AS ?politician)
  OPTIONAL { ?politician foaf:name ?politicianName }
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the player associated with VfL Bochum in the 2006-07 season
  ?player dbo:team dbr:VfL_Bochum.
  
  # Identify the manager of that player
  ?player dbo:managedBy ?manager.

  # Ensure the manager is part of a sports club, organization, and soccer club
  ?manager dbo:worksFor ?club.
  ?club rdf:type dbo:SportsClub .
  ?club rdf:type dbo:Organization .
  ?club rdf:type dbo:SoccerClub .

  # Find the successor season of 2006-07 VfL Bochum
  dbr:VfL_Bochum_season_2006–07 dbo:succeeds ?successorSeason.
  ?successorSeason rdf:type dbo:FootballLeagueSeason .
  ?successorSeason rdf:type dbo:SportsTeamSeason .
  ?successorSeason rdf:type dbo:SportsSeason .

  # Ensure the player is part of the successor season
  ?player dbo:team dbr:VfL_Bochum.
  ?player dbo:participatedIn ?successorSeason.
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?commander WHERE {
  ?work a dbo:CreativeWork ;
        dbo:author ?commander .
  
  ?commander dbo:officeHolderOf ?office ;
             dbo:occupation dbr:Military_commander .

  ?office dbo:relatedEvent dbr:Korean_War .
}
```",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace ?ceceBellBirthPlace
WHERE {
  # Part 1: Find a notable awardee related to Vince Gilligan's work
  # Assuming we are looking for an Emmy Award winner from ""Breaking Bad""
  dbr:Breaking_Bad dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
  
  # Example: Bryan Cranston, a notable awardee
  dbr:Bryan_Cranston dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Actor_in_a_Drama_Series ;
                     dbo:birthPlace ?awardeeBirthPlace .

  # Part 2: Find Cece Bell's birthplace
  dbr:Cece_Bell dbo:birthPlace ?ceceBellBirthPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInPoland ?warOfCommander WHERE {
  # Maria I of Portugal and her commander
  dbr:Maria_I_of_Portugal dbo:commander ?commander .
  
  # Commander's involvement in a war (military conflict)
  ?commander dbo:conflict ?warOfCommander .

  # The force led by the commander is related to both a television show and a military conflict
  ?force dbo:relatedTo ?televisionShow .
  ?force dbo:relatedTo ?warOfCommander .
  
  FILTER (isLiteral(?televisionShow) && contains(str(?televisionShow), ""television""))

  # Entity or event in Poland
  ?entityInPoland dbo:place dbr:Poland .

  # Link the force to an entity in Poland
  ?force dbo:place ?entityInPoland .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Elena_Žalinkevičaitė-Petrauskienė 
    dbr:Alexander_Lvovich_Davydov
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (lang(?birthPlaceLabel) = 'en')
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?entity dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?award dbo:recipient ?entity .
  ?place rdf:type dbo:Region ;
         dbo:country dbr:United_States_of_America ;
         rdf:type dbo:State ;
         rdf:type dbo:Settlement .
  ?award dbo:location ?place .
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artistStuartTosh ?artistBillyLyall
WHERE {
  ?stuartTosh a dbo:Musician ;
              foaf:name ""Stuart Tosh""@en .
  
  ?billyLyall a dbo:Musician ;
              foaf:name ""Billy Lyall""@en .

  OPTIONAL { ?stuartTosh dbo:associatedBand ?artistStuartTosh . }
  OPTIONAL { ?billyLyall dbo:associatedBand ?artistBillyLyall . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Myat Hpone Pyo's father
  ?myathponepyo dbo:father ?father .
  
  # Step 2: Identify the spouse of this father who is royalty
  ?father dbo:spouse ?spouse .
  ?spouse dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty""))

  # Step 3: Find Minye Kyawswa's lineage
  ?minyekyawswa dbo:child ?child1 .
  ?child1 dbo:parent ?parent .

  # Step 4: Match the spouse with the child of the parent found in step 3
  FILTER(?spouse = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player
WHERE {
  ?yeJia rdfs:label ""Ye Jia""@en .
  ?laiSunCheung rdfs:label ""Lai Sun Cheung""@en .

  ?team dbo:member ?yeJia .
  ?team dbo:member ?player .
  
  ?anotherTeam dbo:member ?laiSunCheung .
  ?anotherTeam dbo:member ?player .
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person WHERE {
  ?person dbo:party dbr:Republican_Party_(United_States) .
  OPTIONAL { ?person foaf:name ""Ann Sothern""@en . }
  UNION
  OPTIONAL { ?person schema:birthName ""Ann Sothern""@en . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Find the author of El Deafo
  dbr:El_Deafo dbo:author ?author .

  # Check if the author is American
  ?author dbo:nationality dbr:United_States .

  # Get the birthplace of the author
  ?author dbp:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?roger a dbo:Person ;
         dbp:name ""Roger III, Duke of Apulia""@en .
  
  ?parent dbo:spouse|dbo:child ?roger .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu's spouse and their royal child
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  ?child dbo:parent ?spouse ;
         a dbo:Monarch .  # Assuming royalty is represented by Monarch

  # Step 2: Identify Minye Kyawswa's grandchild
  ?grandchild dbo:parent ?minyeChild .
  ?minyeChild dbo:parent dbr:Minye_Kyawswa .

  # Step 3: Find the predecessor of the royal child
  ?predecessor dbo:successor ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?philipp .
  FILTER(?philipp = <http://dbpedia.org/resource/Duke_Philipp_of_W%C3%BCrttemberg>).
  
  OPTIONAL { ?person dbo:child ?child . }
}
```

This query assumes that Duke Philipp of Württemberg is linked as a spouse to the person whose children we are interested in. If he is directly listed with `dbo:child`, you would adjust the query accordingly.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Identify ""Burnt by the Sun"" band
  dbr:Burnt_by_the_Sun (dbo:musicalArtist|dbo:bandMember) ?artist .

  # Find members associated with this artist
  ?artist dbo:bandMember ?member .
  
  # Ensure the member is also classified as a band, group, and organization
  ?member rdf:type ?type1 .
  FILTER (?type1 IN (dbr:Band, dbr:MusicalGroup, dbr:Organization))
}
```

This query does the following:
- It identifies ""Burnt by the Sun"" using its DBpedia resource.
- It finds artists or band members associated with ""Burnt by the Sun.""
- It filters these members to ensure they are classified as a band, musical group, and organization.",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalInSameProfession ?associatedMusicalArtist
WHERE {
    # Step 1: Find Rod Argent's profession
    dbr:Rod_Argent dbo:profession ?rodArgentsProfession .

    # Step 2: Find the birth name of $pacely (assuming $pacely is a placeholder for Snoop Dogg)
    dbr:Snoop_Dogg foaf:name ?snoopDoggsBirthName .
    
    # Step 3: Find another professional in Rod Argent's profession
    ?professionalInSameProfession dbo:profession ?rodArgentsProfession .

    # Step 4: Find an associated musical artist for the person with Snoop Dogg's birth name
    ?person foaf:name ?snoopDoggsBirthName .
    ?associatedMusicalArtist dbo:associatedBandOrMusicalArtist ?person .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war WHERE {
  # Find entities related to the ""Golden Sword for Bravery""
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  
  FILTER(CONTAINS(LCASE(?awardLabel), ""golden sword for bravery"")).

  # Find awardees of this award
  ?awardee dbo:recipientOf ?award .

  # Link awardees to wars they participated in during the Russian Empire era
  ?war dbo:participatedIn ?awardee ;
       dbo:country ?country .
  
  FILTER(?country = dbr:Russian_Empire) .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find the parent of Roger III
  ?rogerIII dbo:parent ?parentOfRogerIII .
  
  # Identify a reference person who is royalty and an office holder, related to William I
  ?referencePerson dbo:child ?child ;
                   rdf:type dbo:Monarch ;
                   dbp:officeHolder ?office .

  ?williamI dbo:child ?referencePerson .
  
  # Find the child of the reference person who is also a royalty
  ?child rdf:type dbo:Monarch ;
         dbo:parent ?parentOfReferenceChild .

  # The father of this child should be the same as the parent of Roger III
  ?father dbo:child ?child .
  FILTER (?parentOfRogerIII = ?parentOfReferenceChild)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Find Charles I of Hungary
  ?charles a dbo:Monarch ;
           dbp:name ""Charles I of Hungary""@en .
  
  # Get his father
  ?charles dbo:father ?father .

  # Get the father's parent (grandfather)
  ?father dbo:parent ?grandfather .

  # Ensure grandfather is royalty
  ?grandfather a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace
WHERE {
  # Find the current governor of Virginia and their birthplace
  ?governor dbo:stateOrProvince dbr:Virginia .
  ?governor dbo:positionTitle ""Governor"" .
  ?governor dbp:birthPlace ?governorBirthPlace .

  # Find an awardee associated with Vince Gilligan (e.g., Emmy Awards for Breaking Bad)
  ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Actor_in_a_Drama_Series .
  ?awardee dbp:birthPlace ?awardeeBirthPlace .

  # Ensure the awardee is linked to Vince Gilligan
  ?awardee dbo:creator dbr:Vince_Gilligan .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:socialEventRelatedTo ?societalEvent ;
      dbo:depictionInMedia ?tvShow .

  ?tvShow a dbo:TelevisionSeries .

  ?regiment dbo:commander ?commander ;
           dbo:participatedInMilitaryConflict ?war .
  
  FILTER(STR(?regiment) = ""Second_Dragoon_Regiment_(France)"")
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  OPTIONAL {
    ?vitesseSeason a dbo:SoccerLeagueSeason ;
                  dbo:club dbr:SBV_Vitesse ;
                  dbo:manager ?vitesseManager .
    FILTER(CONTAINS(LANG(?vitesseSeason), ""en""))
    FILTER(STRSTARTS(STR(?vitesseSeason), ""2020–21""))
  }

  # Manager of VfL Bochum
  OPTIONAL {
    ?bochumClub a dbo:SoccerTeam ;
                dbo:manager ?bochumManager .
    FILTER(CONTAINS(LANG(?bochumClub), ""en""))
    FILTER(STRSTARTS(STR(?bochumClub), ""VfL_Bochum""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Predecessor of Myat Hpone Pyo
  ?successor dbo:predecessor dbr:Myat_Hpone_Pyo .
  
  # Spouse of Saw Shwe Khet
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet ;
          rdf:type dbo:Person .

  # Child of the parent of the child of Minye Kyawswa
  ?child dbo:parent ?grandparent .
  ?grandparent dbo:child ?minyeChild .
  ?minyeChild dbo:parent dbr:Minye_Kyawswa .

  # The person must satisfy all conditions
  FILTER (?successor = ?spouse && ?successor = ?child)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # The child is a politician
  ?child rdf:type dbo:Politician .

  # Victor Stanley as parent of the child
  ?child dbo:parent dbr:Victor_Stanley_(Royal_Navy_officer) .

  # Get the father of this child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
