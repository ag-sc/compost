id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Native country of Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:nativePlace ?nativeFinland .
  
  # Native country of Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativeRussia .

  # Birthplace country of Sandro Bertaggia
  dbr:Sandro_Bertaggia dbo:birthPlaceCountry ?birthBertaggia .

  # Person who died in the birthplace country of Sandro Bertaggia
  ?person dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?birthBertaggia)

  # The person must be native to both Alexander II's and Nicholas II's countries
  ?person dbo:nativePlace ?nativeFinland .
  ?person dbo:nativePlace ?nativeRussia .

}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?birthName WHERE {
  ?person a dbo:Artist ;
          dbo:birthPlace ?place .
  
  ?place rdfs:label ""Central Region, Ghana""@en .

  OPTIONAL { ?person foaf:name ?birthName . }
  
  ?person dbo:profession ?writerProf ;
          dbo:associatedBand ?band .
  
  ?writerProf rdfs:label ""Writer""@en .
  
  ?band rdfs:label ""The Live Anthology""@en .
  
  ?person dbo:associatedBand ?pacelyArtist .
  
  ?pacelyArtist foaf:name ""$pacely"" .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find The Shadow's alter ego
SELECT ?alterEgo WHERE {
    dbr:The_Shadow dbo:aliasName ?alterEgo .
}

# Step 2: Find the actor of ""Lasso the Moon"" album
SELECT ?actor WHERE {
    dbr:Lasso_the_Moon dbo:performer ?actor .
}

# Step 3: Determine the film and work related to ""Lasso the Moon""
SELECT DISTINCT ?film WHERE {
    ?album dbo:title ""Lasso the Moon""@en .
    ?album dbo:relatedWork ?film .
}

# Step 4: Identify Frédéric Bouraly's profession
SELECT ?profession WHERE {
    dbr:François_Bouraly dbo:occupation ?profession .
}

# Step 5: Find a professional in both fields (The Shadow's alter ego and Frédéric Bouraly's profession)
SELECT DISTINCT ?person WHERE {
    # Assuming we have found The Shadow's alter ego as ?alterEgo
    VALUES (?alterEgo) { ""Lamont Cranston""@en } # Hypothetical value based on known information

    # Assuming we have found Frédéric Bouraly's profession as ?profession
    VALUES (?profession) { dbr:Actor } # Hypothetical value based on known information

    ?person rdfs:label ?alterEgo .
    ?person dbo:occupation ?profession .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  ?arcadia a dbo:Ship ;
           dbo:owner ?owner .

  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Step 2: Find a disease and societal event related to that person
  OPTIONAL { ?disease dbo:relatedTo ?owner . }
  OPTIONAL { ?event dbo:relatedTo ?owner ; a dbo:SocietalEvent . }

  # Step 3: Identify works by Bill Clinton
  ?billClintonWork dbo:author dbr:Bill_Clinton ;
                   a dbo:Book .

  # Step 4: Determine Hillary Clinton's spouse who is also an author
  ?hillarySpouse dbo:spouse dbr:Hillary_Clinton ;
                 dbo:officeHolder true ;
                 dbo:author ?work .

  # Step 5: Find the commander in the war related to both the disease/societal event and the authorship connection
  OPTIONAL { ?commander dbo:relatedTo ?disease . }
  OPTIONAL { ?commander dbo:relatedTo ?event . }
  OPTIONAL { ?commander dbo:relatedTo ?billClintonWork . }
  OPTIONAL { ?commander dbo:relatedTo ?work . }

  FILTER(?commander != dbr:Hillary_Clinton && ?commander != dbr:Bill_Clinton)
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Laura Bush is the author of ""An Invitation to the White House""
  dbr:Laura_Bush dbo:authorOf dbr:An_Invitation_to_the_White_House .

  # George W. Bush is her spouse and a politician
  dbr:George_W._Bush dbo:spouse dbr:Laura_Bush .
  dbr:George_W._Bush a dbo:Politician .

  # George H.W. Bush was a commander in World War II
  dbr:George_H._W._Bush dbo:commanderOf dbr:World_War_II .

  # USS Arcadia (ID-1605) was owned by the United States during WWI
  dbr:USS_Arcadia_(ID-1605) dbo:owner dbr:United_States .

  # George W. Bush authored ""Decision Points""
  dbr:George_W._Bush dbo:authorOf dbr:Decision_Points .

  # Hillary Clinton resided in Chappaqua, NY
  dbr:Hillary_Clinton dbo:residence dbr:Chappaqua,_New_York .
  dbr:Hillary_Clinton a dbo:Politician .

  # Bill Clinton is her spouse and a politician
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Constance of Burgundy's spouse and their child (her grandchild)
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Constance_of_Burgundy .
  ?grandchild dbo:parent ?spouse ;
              a dbo:Person ;
              dbo:royalty ""true""^^xsd:boolean .

  # William I of Sicily's child who is royalty
  ?williamIChild dbo:parent dbr:William_I_of_Sicily ;
                 a dbo:Person ;
                 dbo:royalty ""true""^^xsd:boolean .
  
  # Roger II of Sicily's parent's child who is royalty
  ?rogerIIParent dbo:child dbr:Roger_II_of_Sicily .
  ?rogerIIChild dbo:parent ?rogerIIParent ;
                a dbo:Person ;
                dbo:royalty ""true""^^xsd:boolean .

  # The individual must be the grandchild of Constance's spouse
  # and the father of William I's royal child, and also a descendant of Roger II's parent
  ?individual = ?grandchild .
  ?williamIChild dbo:parent ?individual .
  ?rogerIIChild = ?individual .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorBirthPlace ?awardeeBirthPlace WHERE {
  # Find the Indian movie with Dipankar De
  ?movie dbo:country dbr:India ;
         dbo:actor dbr:Dipankar_De .

  # Get the birthplace of any actor from that movie
  ?movie dbo:actor ?actor .
  ?actor foaf:birthPlace ?actorBirthPlace .

  # Find the awardee of Sangeet Natak Akademi Fellowship
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship ;
          foaf:birthPlace ?awardeeBirthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?award ?hostInstitution WHERE {
  ?awardee dbo:award dbr:Nobel_Prize_in_Physics .
  ?awardee dbo:award ?award .
  
  OPTIONAL {
    ?prizeEvent dbo:organizer ?hostInstitution .
    FILTER (isBlank(?hostInstitution) || 
            ?hostInstitution a <http://dbpedia.org/ontology/EducationalOrganization>)
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:officeHolderOf [dbo:officeName ""Commander in Korean conflict""] .
  ?person dbo:authorOf ?work .
  ?work rdf:type dbo:WrittenWork ;
        dbo:abstract ?abstract .
  FILTER CONTAINS(LCASE(?abstract), ""american"") .

  ?person dbo:authorOf ?book .
  ?book rdf:type dbo:Book .

  ?person dbo:officeHolderOf [dbo:officeName ""Commander in North Carolina Air National Guard""] .
  ?person dbo:politicalParty ?party .
}
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?institution WHERE {
  # Rainer Weiss as a Nobel laureate in Physics
  dbr:Rainer_Weiss dbo:nobelPrizeAwardedFor dbr:Nobel_Prize_in_Physics .
  
  # Find the institution associated with Rainer Weiss
  OPTIONAL { 
    dbr:Rainer_Weiss dbo:almaMater ?institution .
  }
  
  # Filter to ensure it's an educational institution
  FILTER EXISTS {
    ?institution a dbo:EducationalInstitution .
  }
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # George Pickett's war
  dbr:George_Pickett dbo:commanderInWar ?war .

  # Ruling party that is both an organization and a political party at the death place of John McDermott
  ?party a dbo:PoliticalParty ;
        dbo:location ?deathPlace ;
        rdf:type dbo:Organization .
  
  # Party member who was also a commander in the same war as George Pickett
  ?partyMember dbo:memberOf ?party ;
               dbo:commanderInWar ?war .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata a dbo:Person ;
                foaf:surname ""Austria"" ;
                dbo:father ?father1 .

  # Child of Cecilia Renata's father
  ?child1 dbo:father ?father1 .

  # Archduke Charles Joseph of Austria's parent
  ?charlesJoseph a dbo:Person ;
                 foaf:surname ""Austria"" ;
                 dbo:parent ?parent2 .

  # Child of this parent
  ?child2 dbo:parent ?parent2 .

  # Commander in the Algerian War
  ?commander a dbo:MilitaryPerson ;
             dbo:militaryConflict dbr:Algerian_War_of_Independence ;
             dbo:rank ?rank .

  # Societal event, event, and television show (interpreted as notable figure)
  ?person a dbo:Person ;
          dbo:occupation ?occupation .
  
  FILTER (?occupation IN (""Societal Event"", ""Event"", ""Television Show""))

  # Linking all parts
  FILTER(?child1 = ?commander && ?child2 = ?commander)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the commander in the Thirty Years' War
  ?commander dbo:occupation dbr:Thirty_Years'_War.

  # Step 2: Find Maria Anna of Bavaria's children who are royalty
  ?child dbo:parent dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  ?child a dbo:Royal .

  # Step 3: Determine the father of this royal child (Maria Anna's husband)
  ?father dbo:spouse dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  ?father dbo:child ?child .

  # Step 4: Find Archduke Charles Joseph of Austria's parent
  ?parent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .

  # Step 5: Determine the father of a child of this parent (likely his father)
  ?grandfather dbo:child ?parent .
  
  # Combine conditions to find the commander who fits all criteria
  FILTER (?commander = ?father && ?commander = ?grandfather)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria's children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbo:spouse ?husband .
  
  ?mariaAnna dbo:child ?child .

  # The child must be royalty and a commander in war
  ?child a dbo:Monarch ;
         dbo:occupation dbr:Military_commander .

  # Algerian War context
  ?algerianWar dbo:participatingMilitaryForce dbr:French_Army ;
               dbo:wikiPageRedirects ?relatedEvent .
  
  ?relatedEvent rdf:type ?eventType .
  FILTER (?eventType IN (dbr:Societal_event, dbr:Event, dbr:Television_show))

  # Ferdinand III's child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinandChild .

  # The child must be the same person in both contexts
  FILTER (?child = ?ferdinandChild)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDuke ?spouseOfSpouse
WHERE {
  # Step 1: Find Duke Anthony Ulrich of Brunswick's child who is royalty
  dbr:Duke_Anton_Ulrich_of_Brunswick dbo:child ?childOfDuke .
  ?childOfDuke rdf:type dbo:Monarch .

  # Step 2: Find Princess Antoinette of Brunswick-Wolfenbüttel's child who is royalty
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?childOfAntoinette .
  ?childOfAntoinette rdf:type dbo:Monarch .

  # Step 3: Find the spouse of Princess Antoinette's child who is royalty
  ?childOfAntoinette dbo:spouse ?spouseOfChild .

  # Step 4: Find the spouse of the spouse from step 3
  ?spouseOfChild dbo:spouse ?spouseOfSpouse .
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # George H. Cameron's award
  OPTIONAL { 
    dbr:George_H._Cameron dbo:awardReceived ?cAward .
    ?cAward dbo:recipient ?commonEntity .
  }

  # Political party of George Savage and its leader
  OPTIONAL {
    dbr:George_Savage_(politician) dbo:memberOfParty ?party .
    ?party dbo:leader ?leader .
    ?leader dbo:residence ?rResidence .

    # Check if the residence is linked to an organization or political party
    ?rResidence dbo:organization ?commonEntity .
  }

  FILTER (?commonEntity != dbr:George_H._Cameron && ?commonEntity != dbr:George_Savage_(politician))
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Orson Welles and his role in ""The Shadow""
  dbr:Orson_Welles a dbo:Actor ;
                  foaf:name ""Richard Grant Esterhuysen""^^xsd:string .
  
  dbr:The_Shadow a dbo:Film ;
                 dbo:starring dbr:Orson_Welles .

  # Vinod Khanna and his dual role as actor and politician
  dbr:Vinod_Khanna a dbo:Actor, dbo:Politician ;
                   foaf:name ""Vinod Khanna""^^xsd:string .
  
  dbr:Ab_Kya_Hoga a dbo:Film ;
                 dbo:starring dbr:Vinod_Khanna .

  # Check if there is any connection between the two actors
  OPTIONAL {
    ?actor dbo:starring dbr:The_Shadow .
    ?actor dbo:starring dbr:Ab_Kya_Hoga .
  }
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Maria of Bytom's spouse
  ?maria a dbo:Spouse;
         foaf:name ""Maria of Bytom""@en.
  
  ?spouse1 dbo:spouse ?maria;
           foaf:name ?name1.

  # Father of the spouse and his parent who is royalty
  ?father1 dbo:child ?spouse1;
           foaf:name ?fatherName1.
  
  ?parentOfFather dbo:child ?father1;
                  a dbo:Monarch;
                  foaf:name ?parentName.

  # Charles II of Naples' spouse
  ?charles2 a dbo:Spouse;
            foaf:name ""Charles II of Naples""@en.
  
  ?spouse2 dbo:spouse ?charles2;
           foaf:name ?name2.

  # Child of the spouse and their child
  ?child1 dbo:child ?spouse2;
          foaf:name ?childName1.
  
  ?grandChild dbo:child ?child1;
              foaf:name ?grandChildName.

  # Predecessor of Stephen V of Hungary
  ?stephen5 a dbo:Monarch;
            foaf:name ""Stephen V of Hungary""@en.
  
  ?predecessor dbo:succeededBy ?stephen5;
               a dbo:Monarch;
               foaf:name ?predName.

  # Child of the predecessor who is royalty
  ?royalChild dbo:child ?predecessor;
              a dbo:Monarch;
              foaf:name ?royalChildName.

  # Combine relationships to find common entity
  FILTER(?parentOfFather = ?royalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?paradiseActor ?hepburnFilm ?commonFilm ?kaminskiSpouse WHERE {
  # Find the actor of ""Paradise"" (2013 film)
  dbr:Paradise_(2013_film) dbo:starring ?paradiseActor .

  # Find a movie featuring Audrey Hepburn
  dbr:Audrey_Hepburn dbo:starring ?hepburnFilm .
  
  # Ensure the hepburnFilm is also a film (work)
  ?hepburnFilm rdf:type dbo:Film .

  # Find Janusz Kamiński's spouse
  dbr:Janusz_Kamiński foaf:mbox ?kaminskiEmail .
  OPTIONAL { ?kaminskiEmail foaf:maker ?kaminskiSpouse } .

  # Check if there is a common film featuring both the actor from ""Paradise"" and Audrey Hepburn
  ?commonFilm dbo:starring ?paradiseActor ;
             dbo:starring dbr:Audrey_Hepburn .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?figure ?war ?awardee WHERE {
  # Step 1: Identify William Bayne's military force in a war
  ?bayne dbr:William_Bayne .
  ?bayne dbo:militaryConflict ?war .
  ?bayne dbo:militaryForce ?militaryForce .

  # Step 2: Find the figure known as ""The Triple X's""
  ?figure rdfs:label ?figureLabel .
  FILTER(CONTAINS(LCASE(?figureLabel), ""the triple x's"")) .
  
  # Step 3: Determine the military conflict associated with ""The Triple X's""
  ?figure dbo:militaryConflict ?tripleXWar .

  # Step 4: Find the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Step 5: Determine if this awardee was a commander in a war
  ?awardee dbo:commanderIn ?warCommander .

  # Step 6: Check for societal events
  OPTIONAL { ?event dbo:societalEvent true . }

  # Linking the military force of the war associated with William Bayne to other entities
  FILTER(?militaryForce = ?tripleXWar || ?militaryForce = ?warCommander)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?awardWar ?congressShowWar WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Settlement . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_States . }

  # Quincy Adams Gillmore's award and related war
  dbr:Quincy_Adam_Gillmore dbo:awardReceived ?award .
  ?award dbo:relatedEvent ?awardWar .

  # United States Congress show and related war
  ?congressShow dbo:awardedBy dbr:United_States_Congress .
  ?congressShow dbo:relatedEvent ?congressShowWar .

  # Ensure the birthplace is a settlement in America
  FILTER EXISTS { ?birthPlace a dbo:Settlement . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_States . }

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify GS9 members who are both artists and musical artists
  ?gs9Member dbo:memberOf dbr:GS9 ;
             a dbo:MusicalArtist, dbo:Artist .

  # Step 2: Find their birth name and correlate with regions associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?gs9Member dbp:birthdayBirthName ?birthName .
  
  # Assuming we have a way to link the birth name to a region (this part is hypothetical as DBpedia might not directly provide this)
  ?region dbo:award dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
          dbp:name ?birthName .

  # Step 3: Identify Florida natives among these correlated individuals
  ?floridaNative dbo:nativePlace dbr:Florida ;
                dbp:birthdayBirthName ?birthName ;
                a dbo:MusicalArtist .

  # Step 4: Find band members of this Florida-native musical artist who are also recognized as musical artists themselves
  ?bandMember dbo:memberOf ?floridaNative ;
              a dbo:MusicalArtist .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity ?birthPlace WHERE {
  # Find the time zone for Kiyosu and its region
  dbr:Kiyosu dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .

  # Find Japanese awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee dbo:nationality dbr:Japan ;
          dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .

  # Ensure there is a connection to a television show
  ?awardee dbo:reference ?tvShow .
  FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionShow }

  # Get the birthplace of such an awardee
  ?awardee dbo:birthPlace ?birthPlace .

  # Ensure the entity is Japanese and related to the region found earlier
  ?entity dbo:nationality dbr:Japan ;
          dbo:birthPlace ?birthPlace .
  FILTER (?region = ?entityRegion)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?stephenV dbo:father ?predecessor .
  FILTER (str(?predecessor) = ""Stephen_IV_of_Hungary"")

  # Step 2: Parent of the father of Charles I of Hungary
  ?charlesI dbo:father ?parentOfCharlesI .
  ?parentOfCharlesI dbo:father ?grandparentOfCharlesI .

  # Step 3: Spouse of the father of the parent of Philip, Despot of Romania
  ?philip dbo:father ?parentOfPhilip .
  ?parentOfPhilip dbo:father ?grandparentOfPhilip .
  ?grandparentOfPhilip dbo:spouse ?spouseOfGrandparent .

  # Ensure all are royalty
  ?predecessor a dbo:Monarch ;
               dbo:country dbr:Hungary .
  ?grandparentOfCharlesI a dbo:Monarch ;
                        dbo:country dbr:Hungary .
  ?spouseOfGrandparent a dbo:Monarch ;
                       dbo:country dbr:Romania .

  # Find the grandchild of the predecessor who is royalty
  ?predecessor dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Paulus Powell's birth place and its region
  ?paulusPowell a dbo:Person ;
                foaf:name ""Paulus Powell"" ;
                dbo:birthPlace ?birthPlace1 .
  
  ?birthPlace1 a dbo:Region, dbo:AdministrativeRegion .

  # Governor of the region where Paulus Powell was born
  ?regionGovernor a dbo:Politician ;
                  dbo:governor ?birthPlace1 ;
                  dbo:birthPlace ?governorBirthPlace .

  # Birth place of Cece Bell, author of ""El Deafo""
  ?author a dbo:Person ;
          foaf:name ""Cece Bell"" ;
          dbo:birthPlace ?authorBirthPlace .
  
  # Awardee related to Vince Gilligan
  ?vinceGilliganAward a dbo:Award ;
                      dbo:recipient ?awardee ;
                      dbo:givenBy dbr:Vince_Gilligan .

  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse ?personBornWithBirthName WHERE {
  # Step 1: Find the landmark at the given elevation
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Step 2: Identify the ruling party and its member associated with this landmark
  ?landmark dbo:location dbr:LocationWithRulingParty .
  ?rulingParty dbp:rulingPartyOf dbr:LocationWithRulingParty .
  ?partyMember dbo:memberOf ?rulingParty .

  # Step 3: Find the actor of ""1,000 Dollars a Minute""
  ?film dbo:title ""1,000 Dollars a Minute"" .
  ?actor dbo:starringIn ?film .

  # Step 4: Identify the spouse of this actor
  ?actor dbp:spouse ?spouse .

  # Step 5: Determine the birth name of Tisha Sterling's parent
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent dbp:birthName ?birthName .

  # Step 6: Find a person born with that birth name
  ?person dbp:birthName ?birthName ;
          rdf:type dbo:Person .
  
  FILTER(?partyMember != ?spouse && ?partyMember != ?person)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query to find the birth name of Bob Thompson (musician)
SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" .
  ?person foaf:givenname ?firstName ;
          foaf:surname ?lastName .
  OPTIONAL { ?person foaf:birthday ?birthday . }
  OPTIONAL { ?person foaf:name ?fullName . }
  FILTER regex(?fullName, ""^Bob Thompson"", ""i"")
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
LIMIT 1

# Query to find the alter ego of Walter B. Gibson's creation
SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter ;
             dbo:creator ?creator .
  ?creator foaf:name ""Walter B. Gibson"" .
  OPTIONAL { ?character rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  FILTER regex(?name, ""The Shadow"", ""i"")
}
LIMIT 1
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Nat Levine's film
  ?film dbo:director dbr:Nat_Levine .
  
  # Step 2: Find the actor of that film
  ?film dbo:starring ?actor .

  # Step 3: Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Step 4 & 5: Person born as birth name of parent of Tisha Sterling and party member of Republican Party (United States)
  ?parent dbp:child dbr:Tisha_Sterling .
  ?parent foaf:name ?birthName .
  
  ?person foaf:name ?birthName ;
          dbo:partyAffiliation dbr:Republican_Party_(United_States) .

  # Ensure the spouse matches the person from step 4 & 5
  FILTER (?spouse = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Find the manager of VfL Bochum in the 2006–07 season
  ?player dbo:playsFor dbr:VfL_Bochum.
  ?season dbo:sportTeam dbr:VfL_Bochum; 
          dbo:startDate ?start;
          dbo:endDate ?end.
  FILTER (YEAR(?start) = 2006 && YEAR(?end) = 2007).
  
  ?player dbo:manager ?manager.
  
  # Ensure the manager is associated with a sports club that is also an organization and soccer club
  ?club dbo:sportTeam ?manager;
        rdf:type dbo:SoccerClub, dbo:Organization.

  # Find successor football league season
  ?successorSeason dbo:successor ?season;
                   rdf:type dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason.
  
  # Check if the manager is native to Germany (administration of West Germany's leader)
  ?manager dbo:nativePlace dbr:Germany.

  # Verify if this manager was born on 1968-08-26
  ?manager dbo:dateOfBirth ""1968-08-26""^^xsd:date.
  
  # Return the manager's name
  ?manager rdfs:label ?managerName.
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildRoyalty WHERE {
  # Step 1: Identify parent of Archduchess Margarete Sophie of Austria
  ?parent a dbo:Person ;
          dbo:spouse|dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Step 2: Find child of that parent who is royalty
  ?childOfParent a dbo:RoyalFamilyMember ;
                 dbo:child ?parent .
  
  # Step 3: Identify Philipp Albrecht's child and its predecessor
  ?philippAlbrechtChild a dbo:Person ;
                        dbo:child dbr:Philipp_Albrecht,_Duke_of_Württemberg .

  ?predecessor a dbo:RoyalFamilyMember ;
               dbo:successor ?philippAlbrechtChild .
  
  # Step 4: Trace three generations from Alexander of Württemberg
  ?alexander dbr:Alexander_of_Württemberg ;
             dbo:child ?grandchild1 .

  ?grandchild1 dbo:child ?greatGrandchild1 .

  ?greatGrandchild1 dbo:child ?greatGreatGrandchild1 .
  
  # Final condition: The child of the child who is royalty and fits all criteria
  ?childOfChildRoyalty a dbo:RoyalFamilyMember ;
                       dbo:child ?predecessor ;
                       dbo:child ?greatGreatGrandchild1 .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?persona ?associatedArtist ?realName ?band2 WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person rdf:type dbo:MusicalArtist .

  # Determine the band associated with this person
  ?band1 dbo:bandMember ?person .

  # Find Nick Curran's persona and his associated musical artists
  dbr:Nick_Curran dbo:persona ?persona .
  ?persona dbo:associatedBand ?associatedArtist .

  # Identify Kim Wilson's real name and the band he is associated with
  dbr:Kim_Wilson dbo:realName ?realName .
  ?band2 dbo:bandMember dbr:Kim_Wilson .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Paulus Powell's birthplace and its governor
SELECT ?birthPlace (SAMPLE(?governor) AS ?governorName)
WHERE {
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:AdministrativeRegion ;
              dbo:governmentHead ?governor .
  ?governor rdf:type dbo:Politician .
}
GROUP BY ?birthPlace

UNION

# Query for the author of ""El Deafo"" and their birthplace
SELECT ?author (SAMPLE(?authorBirthPlace) AS ?authorBirthPlace)
WHERE {
  dbr:El_Deafo dbo:author ?author .
  ?author rdf:type dbo:Writer ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?authorBirthPlace .
}
GROUP BY ?author

UNION

# Query for Vince Gilligan's birthplace
SELECT ?vinceGilliganBirthPlace
WHERE {
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}

```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find the musical artist born on March 30, 1945
SELECT ?artist WHERE {
    ?artist a dbo:MusicalArtist .
    ?artist dbo:birthday ""1945-03-30""^^xsd:date .
}

# Step 2: Check if this person has an associated persona named Nick Curran and identify any band they are part of
SELECT ?persona ?band WHERE {
    ?artist dbr:Nick_Curran .
    OPTIONAL { ?artist dbo:associatedBand ?band . }
}

# Step 3: Find another musical artist who shares the same birthdate (March 30, 1945) and determine their real name
SELECT DISTINCT ?otherArtist ?realName WHERE {
    ?otherArtist a dbo:MusicalArtist .
    ?otherArtist dbo:birthday ""1945-03-30""^^xsd:date .
    ?otherArtist dbp:name ?realName .
}

# Step 4: Find the reference to the real name of The Fabulous Thunderbirds
SELECT ?realName WHERE {
    dbr:The_Fabulous_Thunderbirds dbo:bandMember ?member .
    ?member dbp:birthDate ""1945-03-30""^^xsd:date .
    ?member dbp:name ?realName .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?finalParent
WHERE {
  # Step 1: Find Princess Muna al-Hussein's child who is a royalty
  ?childMuna dbo:parent dbr:Princess_Muna_al-Hussein .
  ?childMuna rdf:type dbo:RoyalFamilyMember .

  # Step 2: Find the parent of that child (who is also a royalty)
  ?parentChildMuna dbo:child ?childMuna .
  ?parentChildMuna rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify Princess Aisha bint Faisal's parent who is a royalty
  ?parentAisha dbo:child dbr:Princess_Aisha_bint_Faisal .
  ?parentAisha rdf:type dbo:RoyalFamilyMember .

  # Step 4: Determine the child of this parent who is a royalty
  ?childParentAisha dbo:parent ?parentAisha .
  ?childParentAisha rdf:type dbo:RoyalFamilyMember .

  # Step 5: Find the parent of the child identified in step 4
  ?finalParent dbo:child ?childParentAisha .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?movie WHERE {
  # Step 1: Identify Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Step 2: Find the parent of Allan Arbus's child
  ?parentOfChild dbo:child ?child .

  # Step 3: Ensure this person is an actor in a movie (a work)
  ?actorRole dbo:agent ?parentOfChild ;
             dbo:work dbr:Movie .
  
  # Step 4: Check if the person died in Los Angeles
  ?parentOfChild dbo:deathPlace dbr:Los_Angeles .

  # Step 5: Ensure this person has a child who is a professional in Eugène Cattin's profession
  ?professionalChild dbo:parent ?parentOfChild .
  ?eugeneCattin dbo:profession ?profession .
  ?professionalChild dbo:profession ?profession .
  
  # Bind the movie to return it as part of the result
  ?actorRole dbo:work ?movie .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace (GROUP_CONCAT(?name; separator="", "") AS ?names)
WHERE {
  # Governor of Virginia
  { 
    SELECT ?person ?birthPlace WHERE {
      ?person dbo:officeHolder dbr:Governor_of_Virginia .
      ?person dbo:birthPlace ?birthPlace .
      FILTER EXISTS { ?person a dbo:Politician }
    } LIMIT 1
  }

  # Author of ""El Deafo""
  UNION 
  {
    SELECT ?author ?birthPlace WHERE {
      dbr:Cecelia_Ann_Bell dbo:birthPlace ?birthPlace ;
                           dbo:profession dbp:Author .
    }
  }

  # Awardee related to Vince Gilligan (e.g., Bryan Cranston)
  UNION
  {
    SELECT ?awardee ?birthPlace WHERE {
      ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Actor_in_a_Drama_Series ;
               dbo:profession dbp:Actor .
      ?awardee dbo:work dbr:Breaking_Bad .
    } LIMIT 1
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello"" .
  
  ?spouse dbo:spouseOf ?mariclare .

  # Step 2: Find the child of Mariclare Costello's spouse
  ?child dbo:parent ?spouse .

  # Step 3: Determine the parent of this child (either Mariclare or her spouse)
  ?parent dbo:parent ?child .
  
  FILTER (?parent = ?mariclare || ?parent = ?spouse)

  # Step 4: Identify Eugène Cattin's profession
  ?eugene a dbo:Person ;
          foaf:name ""Eugène Cattin"" .

  ?eugeneProf dbo:profession ?eugene .
  
  # Step 5: Find a professional in that field
  ?professional dbo:profession ?eugeneProf .

  # Step 6: Identify an actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?actor a dbo:Actor ;
         dbo:actedIn ?judgmentWork .
  
  ?judgmentWork foaf:name ""Judgment: The Trial of Julius and Ethel Rosenberg"" .

  # Step 7: Determine the parent of both the professional from step 5 and the actor from step 6
  ?parent dbo:parent ?professional ;
          dbo:parent ?actor .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?clubNickname ?playerInWork WHERE {
  # Denis Kolodin and his soccer club
  ?kolodin a dbo:SoccerPlayer ;
           foaf:name ""Denis Kolodin""@en .
  
  ?kolodin dbo:playsFor ?club .

  # Club nickname
  ?club dbo:nickname ?clubNickname .

  # Aleksandr Filimonov and his work
  ?filimonov a dbo:Writer ;
             foaf:name ""Aleksandr Filimonov""@en .
  
  ?work dbo:author ?filimonov ;
        rdfs:label ?workLabel .

  # Find player in the writer's work
  ?playerInWork dbo:characterName ?workLabel .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist ?actor WHERE {
  # Step 1: Find Cynthia Morgan's birth name
  ?cynthiaMorgan a dbo:MusicalArtist ;
                 foaf:name ""Cynthia Morgan"" ;
                 foaf:givenName ?firstName ;
                 foaf:familyName ?lastName .

  # Step 2: Associate the birth name with any musical artist
  OPTIONAL {
    ?musicalEntity foaf:givenName ?firstName ;
                   foaf:familyName ?lastName ;
                   a dbo:MusicalArtist .
    BIND(?musicalEntity AS ?musicalArtist)
  }

  # Step 3: Find Afeez Oyetoro's role in ""The Wedding Party""
  ?afeezOyetoro a dbo:Actor ;
                foaf:name ""Afeez Oyetoro"" ;
                dbo:actedIn ?movie .
  
  FILTER(?movie = <http://dbpedia.org/resource/The_Wedding_Party_(2016_film)>)

  # Step 4: List other actors from the same movie
  ?actor a dbo:Actor ;
         dbo:actedIn ?movie .

  FILTER(?actor != ?afeezOyetoro)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInDeathPlace WHERE {
  # Antonios Varthalitis death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Awardee of 1930 and associated war
  ?awardee dbo:awardYear ""1930"" ;
          dbo:associatedWithWar ?commonWar .

  # Leader of National Party of Greece and associated war
  ?leader dbo:partyLeader dbr:National_Party_of_Greece ;
          dbo:associatedWithWar ?commonWar .

  # Ensure the same war is common between awardee and leader
  FILTER(?commonWar = ?commonWar)

  # Find an entity in the death place related to the common war
  ?entityInDeathPlace rdf:type dbo:Settlement ;
                     dbo:location ?deathPlace ;
                     dbo:associatedWithWar ?commonWar .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Golden Master Series - Alter ego
  VALUES (?alterEgo) { ""Pantalaimon"" }
  
  # Smartbomb (Book)
  ?book dcterms:title ""Smartbomb""@en .
  ?book dbo:author dbr:Jane_McGonigal .

  # Find an actor who acted in a movie with Jane McGonigal
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Jane_McGonigal .

  # T.I.'s Song/Musical Work and Album
  ?song dbo:title ""Whatever You Like""@en ;
        dbo:album dbr:Paper_Trail .
  
  # Find an actor associated with the album Paper Trail
  ?album dbo:starring ?actor .
  FILTER(?album = dbr:Paper_Trail)
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find The Shadow's alter ego in comics
SELECT ?alterEgo WHERE {
    dbr:The_Shadow dbo:alterEgo dbr:?character .
    ?character dbo:genre dbr:Comics .
}

# Step 2: Identify the actor from a movie/TV show with Richard E. Grant
SELECT DISTINCT ?actor WHERE {
    ?movie dbo:starring dbr:Richard_E._Grant ;
           dbo:starring ?actor .
    OPTIONAL { ?tvShow dbo:starring dbr:Richard_E._Grant ;
                   dbo:starring ?actor . }
}

# Step 3: Find the politician associated with Ab Kya Hoga and their profession
SELECT DISTINCT ?politician ?profession WHERE {
    ?politician dbo:title dbr:Ab_Kya_Hoga .
    ?politician dbo:occupation ?profession .
}

# Combine results to find a match
SELECT DISTINCT ?alterEgo ?actor ?profession WHERE {
    # The Shadow's alter ego in comics
    dbr:The_Shadow dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:genre dbr:Comics .

    # Actor from movie/TV show with Richard E. Grant
    ?movie dbo:starring ?actor ;
           dbo:starring dbr:Richard_E._Grant .
    OPTIONAL { ?tvShow dbo:starring ?actor ;
                   dbo:starring dbr:Richard_E._Grant . }

    # Politician's profession from Ab Kya Hoga
    ?politician dbo:title dbr:Ab_Kya_Hoga .
    ?politician dbo:occupation ?profession .

    # Match the actor's profession with the politician's profession
    ?actor dbo:occupation ?profession .
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Find the award and its awardees
  ?award dbo:recipient ?awardee .
  FILTER regex(str(?award), ""Edmund Hakewill-Smith"") .

  # Identify the military force associated with the awardee
  ?awardee dbo:militaryForce ?force .

  # Ensure the force was involved in the sinking of HMS Prince of Wales and Repulse
  ?event dbo:agent ?force .
  ?event dbo:subject dbr:Sinking_of_Prince_of_Wales_and_Repulse .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?brunoParty ?successorParty WHERE {
  # Find Bruno Retailleau and his party affiliation
  ?bruno a dbo:OfficeHolder ;
         foaf:surname ""Retailleau"" ;
         foaf:givenName ""Bruno Daniel Marie Paul"" .
  ?bruno dbo:partyAffiliation ?brunoParty .

  # Find Patrice Martin-Lalande's successor who is also a politician and French
  ?patrice a dbo:OfficeHolder ;
           foaf:surname ""Martin-Lalande"" ;
           foaf:givenName ""Patrice"" .
  ?successor dbo:successorOf ?patrice ;
             a dbo:Politician ;
             dbo:nationality dbr:France .

  # Find the successor's party affiliation
  ?successor dbo:partyAffiliation ?successorParty .
}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling"" .
  
  ?parent foaf:child ?tishaSterling .

  # Step 2: Get the birth name of this parent
  ?parent schema:birthName ?birthName .

  # Step 3: Identify films produced by Nat Levine
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine"" .
  
  ?film dbo:producer ?natLevine .

  # Step 4: Find actors in these films
  ?actor dbo:actor ?film .

  # Step 5: Determine the spouse of these actors
  ?spouse dbo:spouse ?actor ;
          schema:birthName ?birthName .

  # Step 6: Identify landmarks with specific elevation and ruling party
  ?landmark geo:elevation ""20.1168""^^xsd:float .
  
  ?partyMember a dbo:Person ;
               dbo:memberOf ?rulingParty ;
               foaf:name ?spouseName .
  
  FILTER(?birthName = ?spouseName)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Child of Baeda Maryam I (Eskender)
  ?child rdfs:label ""Eskender""@en .

  # Eskender's father, Amda Seyon I
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
  ?father rdfs:label ""Amda Seyon I""@en .

  # Father of Amda Seyon I (Yekuno Amlak)
  ?grandfather dbo:parent ?father .
  ?grandfather rdfs:label ""Yekuno_Amlak""@en .

  # Yekuno Amlak's father, Dawit I
  ?dawitI dbo:child ?grandfather .
  ?dawitI rdfs:label ""Dawit_I""@en .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfSpouseLabel WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  ?francisI a dbo:Duke ;
            rdfs:label ""Francis I, Duke of Lorraine""@en .

  # Step 2: Find his child who is royalty
  ?child dbo:parent ?francisI ;
         a dbo:Monarch ;  # Assuming Monarch as a class for royalty

  # Step 3: Determine the father of this royal child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Step 4: Identify the spouse of this father, who is both royalty and a noble
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch ;  # Assuming Monarch as a class for royalty
          dbo:nobleRank ?nobleRank .

  # Step 5: Find the parent of this spouse
  ?parentOfSpouse dbo:child ?spouse .
  
  # Return the label of the parent of the spouse
  ?parentOfSpouse rdfs:label ?parentOfSpouseLabel .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?deathPlace WHERE {
  # Reed Howes
  OPTIONAL {
    VALUES (?person) { dbr:Reed_Howes }
    ?person rdfs:label ?name .
    ?person dbo:deathPlace ?deathPlace .
  }

  # Actor of ""Color Me Dead""
  OPTIONAL {
    ?actor dbo:film dbr:Color_Me_Dead .
    ?actor rdfs:label ?actorName .
    ?actor dbo:deathPlace ?colorMeDeadDeathPlace .
    BIND(CONCAT(""Actor of Color Me Dead: "", ?actorName) AS ?name)
    BIND(?colorMeDeadDeathPlace AS ?deathPlace)
  }

  # Actor of ""Aladdin"" (1958 film)
  OPTIONAL {
    ?actor dbo:film dbr:Aladdin_(1958_film) .
    ?actor rdfs:label ?aladdinActorName .
    ?actor dbo:deathPlace ?aladdinDeathPlace .
    BIND(CONCAT(""Actor of Aladdin (1958): "", ?aladdinActorName) AS ?name)
    BIND(?aladdinDeathPlace AS ?deathPlace)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is a royalty
  ?childShweKhet dbo:parent dbr:Saw_Shwe_Khet ;
                rdf:type dbo:Monarch .

  # Step 2: Find the predecessor of the child of Saw Min Phyu's spouse
  ?spouseMinPhyu dbo:spouse dbr:Saw_Min_Phu ;
                 rdf:type dbo:Monarch .
  
  ?childSpouseMinPhyu dbo:parent ?spouseMinPhyu ;
                      rdf:type dbo:Monarch .

  # Assuming 'predecessor' is represented by a property like dbo:successor
  ?predecessor dbo:successor ?childSpouseMinPhyu .

  # Step 3: Identify Minye Kyawswa's descendant
  ?descendantMinKyawswa dbo:parent ?childMinKyawswa ;
                       rdf:type dbo:Monarch .
  
  ?childMinKyawswa dbo:parent dbr:Minye_Kyawswa .

  # Step 4: Find the spouse of the father (who is royalty) of the predecessor
  ?fatherPredecessor dbo:child ?predecessor ;
                    rdf:type dbo:Monarch .
  
  ?spouseFatherPredecessor dbo:spouse ?fatherPredecessor .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .
  
  ?player dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1981 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 1)

  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
  ?manager dbo:person ?player .

  ?team a dbo:SportsClub ;
        a dbo:SportsTeam ;
        a dbo:SoccerClub ;
        rdfs:label ""Hong Kong C""@en .
  
  ?team dbo:member ?player .
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelMauraOffice ?manuelPintoDaCostaOffice ?tenantOfLeaderResidence
WHERE {
  # Office of the leader of Miguel Maura's party
  dbr:Miguel_Maura dbo:party ?party .
  ?party dbo:leader ?leader .
  ?leader dbo:officeHolder ?miguelMauraOffice .

  # Office of the commander in Manuel Pinto da Costa's force
  dbr:Manuel_Pinto_da_Costa dbo:militaryConflict ?conflict .
  ?conflict dbo:commander ?manuelPintoDaCostaOffice .

  # Tenant of the residence of the leader of 2003 Madrid City Council election
  dbr:Madrid_City_Council_Election_2003 dbo:leader ?madridLeader .
  ?madridLeader dbo:residence ?residence .
  ?residence dbo:tenant ?tenantOfLeaderResidence .
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Step 1: Find the author of ""El Deafo"" who is American
SELECT ?author WHERE {
  ?book dcterms:title ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author dbo:nationality dbc:United_States .
}

# Step 2: Get the birthplace of this author
SELECT ?birthPlace WHERE {
  ?author dbo:birthPlace ?birthPlace .
  ?book dcterms:title ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author dbo:nationality dbc:United_States .
}

# Step 3: Find Vince Gilligan's award
SELECT ?award WHERE {
  dbo:Vince_Gilligan dbo:receivedAward ?award .
}

# Step 4: Get the birthplace of the awardee associated with that award
SELECT ?awardeeBirthPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
  ?award dbo:receivedBy dbo:Vince_Gilligan .
}

# Step 5: Determine Paulus Powell's birthplace (region and administrative region)
SELECT ?region, ?adminRegion WHERE {
  dbo:Paulus_Powell dbo:birthPlace ?location .
  ?location rdf:type dbo:AdministrativeRegion .
  ?location dbo:partOf ?region .
  ?location dbo:administrativeArea ?adminRegion .
}

# Step 6: Identify a politician who is the governor of this region
SELECT ?governor WHERE {
  ?governor dbo:officeHolder ?position .
  ?position dbo:officeName ""Governor""@en .
  ?position dbo:region ?region .
  FILTER(?region IN (?region))
}

# Step 7: Get the birthplace of this governor
SELECT ?governorBirthPlace WHERE {
  ?governor dbo:birthPlace ?governorBirthPlace .
  ?governor dbo:officeHolder ?position .
  ?position dbo:officeName ""Governor""@en .
  ?position dbo:region ?region .
  FILTER(?region IN (?region))
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadow ?alterEgo ?grandfather WHERE {
  # The Shadow (Lamont Cranston)
  dbr:The_Shadow a dbo:FictionalCharacter ;
                 foaf:name ""The Shadow"" ;
                 dbo:aliasName ""Lamont Cranston"" .

  # Alter ego of Lamont Cranston
  ?shadow dbo:aliasName ""Lamont Cranston"" .
  
  # Prince Raoul de Richleau (father)
  dbr:Prince_Raoul_de_Richelieu a dbo:FictionalCharacter ;
                               foaf:name ""Raoul de Richleau"" .

  # Prince Philippe de Richleau (grandfather and royalty)
  ?grandfather a dbo:Person ;
               dbo:title ""Prince"" ;
               dbo:spouse dbr:Princess_Marie_de_Richelieu ;
               dbo:child dbr:Prince_Raoul_de_Richelieu .
  
  # Linking the grandfather to The Shadow
  ?shadow dbo:parent ?raoul .
  ?raoul dbo:parent ?grandfather .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Herschel Bernardi's movies
  ?movie dbo:starring dbr:Herschel_Bernardi .

  # Mariclare Costello's spouse and their child
  ?spouse dbo:spouse dbr:Mariclare_Costello .
  ?child dbo:parent ?spouse .

  # Eugène Cattin's profession and a parent in that profession
  ?eugeneCattin dbo:profession ?profession .
  ?parent dbo:profession ?profession .
  ?parent dbo:parent ?someone .

  # The movie must involve the child of Mariclare Costello's spouse and the parent with Eugène Cattin's profession
  ?movie dbo:starring ?child .
  ?movie dbo:starring ?parent .

  # Find other actors in that movie
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Herschel_Bernardi)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse
WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent that is royalty
  ?parent dbo:child ?philip .
  ?parent dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 3: Determine the spouse of this royal parent
  ?spouse dbo:spouse ?parent .

  # Step 4: Identify Maria of Bytom's spouse
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?mariaSpouse dbo:spouse ?maria .

  # Step 5: Find the father of this spouse that is royalty
  ?father dbo:child ?mariaSpouse .
  ?father dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""king"") || CONTAINS(LCASE(?title2), ""queen"") || 
         CONTAINS(LCASE(?title2), ""prince"") || CONTAINS(LCASE(?title2), ""princess""))

  # Step 6: Determine the child of this royal father
  ?child dbo:parent ?father .

  # Step 7: Identify Stephen V of Hungary's predecessor
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:successor ?stephenV .

  # Step 8: Find the child that is royalty of this predecessor
  ?royalChild dbo:parent ?predecessor .
  ?royalChild dbo:title ?title3 .
  FILTER(CONTAINS(LCASE(?title3), ""king"") || CONTAINS(LCASE(?title3), ""queen"") || 
         CONTAINS(LCASE(?title3), ""prince"") || CONTAINS(LCASE(?title3), ""princess""))

  # Step 9: Determine the parent of this royal child
  ?parentOfRoyalChild dbo:child ?royalChild .

  # Step 10: Ensure consistency in relationships and return the spouse from step 3
  FILTER(?spouse = ?mariaSpouse)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person dbo:commanderInWar dbr:Gulf_War .
  ?ship dbo:owner ?government .
  ?government dbo:president ?person .
  ?book dbo:author ?person ;
        a dbo:Book .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?alterEgo ?fatherOfFather
WHERE {
  # Dawit I's child (assuming Dawit II)
  ?dawitII dbo:parent dbr:Dawit_II_of_Ethiopia .
  ?dawitII dbo:child ?childOfDawitI .

  # Lamont Cranston's alter ego
  ?lamontCranston rdfs:label ""Lamont Cranston""@en .
  ?lamontCranston dbo:alterEgo ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow""))

  # Child of Baeda Maryam I and their father
  ?baedaMaryamII dbo:parent dbr:Baeda_Maryam_I .
  ?baedaMaryamII dbo:child ?childOfBaedaMaryamI .
  
  # Father of the father (royalty and office holder)
  ?fatherOfFather dbo:child ?childOfBaedaMaryamI .
  ?fatherOfFather a dbo:Monarch ; 
                  dbo:officeHolder ?office .

  # Linking all parts
  ?childOfDawitI dbo:relatedTo ?alterEgo .
  ?childOfDawitI dbo:relatedTo ?fatherOfFather .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?commander dbo:child ?person .
  ?commander dbo:occupation dbr:Military_commander .
  ?siege dbo:participatedIn ?commander .
  FILTER(CONTAINS(LCASE(STR(?siege)), ""padua"")) .

  ?person a dbo:Monarch ;
          dbo:spouse ?spouse .

  ?isabella dbo:parent ?person ;
            rdfs:label ""Isabella of Austria""@en .

  ?philipMother dbo:parent ?person .
  ?philipMother dbo:child dbr:Philip_I_of_Castile .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child who is a politician
  ?child1 rdf:type dbo:Politician .

  # This child must be a parent of the Rodney Lees award awardee
  ?child1 dbo:parent ?awardee .
  ?awardee dbo:award dbr:Rodney_Lees_Award .

  # Edward Stanley, 17th Earl of Derby and his parents
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent1 .
  
  # Parent who is a politician and an office holder
  ?parent1 rdf:type dbo:Politician ;
           dbo:officeHolder true .

  # The child of Frederick Stanley must be the same as the parent of Edward Stanley's parent
  ?child1 = ?parent1 .

  # Get the father of this child (politician)
  ?child1 dbo:father ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  ?francisI a dbo:Duke ;
            rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  # Step 2: Find his spouse who is royalty and noble
  ?spouse dbo:spouse ?francisI ;
          a dbo:Queen ; # Assuming the spouse is a Queen for royalty and nobility
          rdfs:label ?spouseLabel .

  FILTER CONTAINS(LCASE(?spouseLabel), ""royalty"") .
  FILTER CONTAINS(LCASE(?spouseLabel), ""noble"") .

  # Step 3: Determine their child
  ?child dbo:parent ?francisI ;
         dbo:parent ?spouse .

  # Step 4: Identify the father of this child (should be Francis I)
  
  # Step 5: Find the parent of the father (Francis I's father)
  ?parentOfFather dbo:child ?francisI .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?teamSeason WHERE {
  # Step 1: Identify the leader of West Germany around 1968
  ?leader a dbo:HeadOfGovernment ;
          dbo:country dbr:Germany ;
          dbo:endTime ?endTime .
  
  FILTER (?endTime > ""1968-01-01""^^xsd:date && ?endTime < ""1970-01-01""^^xsd:date)

  # Step 2: Find sports managers born on August 26, 1968, native to Germany
  ?manager a dbo:SportsManager ;
           dbo:birthDate ""1968-08-26""^^xsd:date ;
           dbo:nationality dbr:Germany ;
           dbo:managedTeam dbr:VfL_Bochum .

  # Step 3: Identify the soccer club season associated with this manager
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:manager ?manager .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?workCountry WHERE {
  # Step 1: Identify Hu Jieqing's spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Writer .

  # Step 2: Determine the country of the work of this spouse
  ?work dbo:author ?spouse ;
        dbo:country ?workCountry .

  # Step 3: Identify a person who died in Taipei
  ?decedent dbo:deathPlace dbr:Taipei .

  # Step 4: Find the child of this decedent who is a politician
  ?decedent dbo:child ?politician .
  ?politician rdf:type dbo:Politician .

  # Step 5: Determine the birthplace of this political figure
  ?politician dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?awardee ?conflict
WHERE {
  # French Campaign in Egypt and Syria
  dbr:French_Egyptian_Campaign dbo:commander ?commander .
  
  # Military force involved in the campaign
  dbr:French_Egyptian_Campaign dbo:militaryForce ?militaryForce .

  # William Bayne as an awardee of Knight Commander of the Order of the Bath
  dbr:William_Bayne,_1st_Baronet dbo:awardedBy dbr:Order_of_the_Bath .
  
  # Napoleonic Wars as a military conflict and event
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdfs:label ""Napoleonic_Wars""@en .

  # Linking the campaign to the broader conflict
  dbr:French_Egyptian_Campaign dbo:partOf ?conflict .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find the award Rodney Lees received
  dbr:Rodney_Lees dbo:award ?award .

  # Step 2: Find the parent of another awardee of the same award
  ?otherAwardee dbo:award ?award .
  ?otherAwardee dbo:parent ?parent1 .

  # Step 3: Identify the alumnus of Eton College and their child who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?child dbo:parent ?alumnus ;
         rdf:type dbo:Politician .

  # Step 4: Find the parent of Frederick Stanley, 16th Earl of Derby's child
  dbr:Fredrick_Stanley_16th_Earl_of_Derby dbo:child ?derbyChild .
  ?derbyParent dbo:parent ?derbyChild .

  # Final step: Match the parents from steps 2 and 4
  FILTER (?parent1 = ?derbyParent)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather WHERE {
  # Baeda Maryam I and his child Eskender (Amda Seyon II)
  dbr:Baeda_Maryam_I dbo:child dbr:Eskender_(emperor) .
  
  # Amda Seyon I is the father of Eskender
  dbr:Amda_Seyon_I dbo:child dbr:Eskender_(emperor) .

  # Yekuno Amlak is the father of Amda Seyon I
  dbr:Yekuno_Amlak dbo:child dbr:Amda_Seyon_I .
  
  # Commander in Siege of Mukha (assuming a known figure, e.g., Ahmad ibn Ibrahim al-Ghazi)
  dbr:Ahmad_ibn_Ibrahim_al-Ghazi dbo:commanderIn dbr:Siege_of_Mukha .

  # Royal parent of the commander
  ?royalParent dbo:child dbr:Ahmad_ibn_Ibrahim_al-Ghazi .
  
  # Child of the royal parent
  ?child dbo:parent ?royalParent .
  
  # Father of the father (grandfather) of the child
  ?father dbo:child ?child .
  ?grandfather dbo:child ?father .

  # Lamont Cranston as The Shadow
  dbr:Lamont_Cranston dbo:fictionalCharacter dbr:The_Shadow .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shelbyActor ?tiAlbumArtist ?goldenMasterAlterEgo
WHERE {
  # Find the actor associated with Shelby Oaks
  ?shelbyOaks a dbo:Film ;
              dbo:actor ?shelbyActor .
  
  FILTER regex(str(?shelbyOaks), ""Shelby Oaks"", ""i"")

  # Find T.I.'s album and its artist
  ?tiAlbum dbo:artist ?tiAlbumArtist ;
           dbo:song ?song .

  ?song a dbo:Songs ;
        dbo:musicalWork true .
  
  FILTER regex(str(?tiAlbum), ""T.I."", ""i"")
  
  # Identify the alter ego in The Golden Master series
  ?goldenMasterSeries a dbo:TelevisionSeries ;
                      dbo:actor ?goldenMasterActor .

  ?goldenMasterActor dbo:alterEgo ?goldenMasterAlterEgo .
  
  FILTER regex(str(?goldenMasterSeries), ""The Golden Master"", ""i"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfMyatHponePyosFather WHERE {
  # Myat Hpone Pyo's father who is a royalty
  ?myatHponePyo dbo:father ?royalFather .
  ?royalFather rdf:type dbo:Monarch .

  # Spouse of Myat Hpone Pyo's royal father
  ?royalFather dbo:spouse ?spouseOfMyatHponePyosFather .

  # Saw Min Phyu's spouse who is a royalty
  ?sawMinPhyu dbo:spouse ?royalSpouse .
  ?royalSpouse rdf:type dbo:Monarch .

  # Child of Saw Min Phyu's royal spouse
  ?royalSpouse dbo:child ?childOfRoyalSpouse .

  # Minye Kyawswa's child and its parent
  ?minyeKyawswa dbo:child ?minyeChild .
  ?minyeChild dbo:parent ?minyeParent .

  # Predecessor of the child of Saw Min Phyu's royal spouse
  ?childOfRoyalSpouse dbo:predecessor ?predecessor .

  # Ensure the predecessor is the same as the spouse of Myat Hpone Pyo's father
  FILTER (?spouseOfMyatHponePyosFather = ?predecessor)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musician WHERE {
  # Rod Argent's associated musicians (The Zombies)
  VALUES (?person) { dbr:Rod_Argent }
  ?band dbo:member ?musician .
  ?band rdfs:label ""The Zombies""@en .

  UNION

  # Tupac Shakur's associated musicians
  VALUES (?person) { dbr:Tupac_Shakur }
  ?album dbo:artist ?musician .
  ?album dbo:artist dbr:Tupac_Shakur .

  UNION

  # Amakye Dede as an artist from Central Region, Ghana
  VALUES (?person) { dbr:Amakye_Dede }
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region""@en .

}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlaceEntity ?award
WHERE {
  # Find Burhan Belge's birthplace
  ?burhanBelge a dbo:Person ;
               foaf:name ""Burhan Belge"" ;
               dbo:birthPlace ?birthPlace .
  
  # Get the entity of the birthplace
  ?birthPlace rdfs:label ?birthPlaceEntity .

  # Find Charles Parsons' award, ensuring he is a British Army officer
  ?charlesParsons a dbo:MilitaryPerson ;
                  foaf:name ""Charles Parsons"" ;
                  dbo:nationality dbr:United_Kingdom ;
                  dbo:award ?award .
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?danielCountry ?danielParty ?royParty ?fatherName ?fatherParty 
WHERE {
  # Daniel Elahi Galán's country and party
  OPTIONAL { 
    dbr:Daniela_Elái_Galán dbo:nationality ?country .
    ?country rdfs:label ?danielCountry .
    FILTER (lang(?danielCountry) = 'en')
  }
  
  OPTIONAL {
    dbr:Daniela_Elái_Galán dbo:party ?party .
    ?party rdfs:label ?danielParty .
    FILTER (lang(?danielParty) = 'en')
  }

  # Roy Leonardo Barreras Montealegre's party
  OPTIONAL {
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:party ?royPartyEntity .
    ?royPartyEntity rdfs:label ?royParty .
    FILTER (lang(?royParty) = 'en')
  }

  # Sofía Petro's father and his party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?father .
    ?father rdfs:label ?fatherName .
    FILTER (lang(?fatherName) = 'en')

    OPTIONAL {
      ?father dbo:party ?fatherPartyEntity .
      ?fatherPartyEntity rdfs:label ?fatherParty .
      FILTER (lang(?fatherParty) = 'en')
    }
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfNapoleonZervas ?warOfAwardee30 ?deathPlaceSettlement WHERE {
  # War involving Napoleon Zervas
  ?zervas dbo:nationality dbr:Greece ;
          dbo:occupation dbr:Resistance_leader .
  ?warOfNapoleonZervas dbo:participatedIn ?zervas .

  # Awardee of ""30"" (assuming an award related to number 30)
  ?awardee dbp:award ""AwardNameRelatedTo30""@en ;
           dbo:participatedIn ?warOfAwardee30 .

  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .

  FILTER (isIRI(?warOfNapoleonZervas) && isIRI(?warOfAwardee30))
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alumnus ?birthPlace ?residence
WHERE {
  ?alumnus foaf:alumni <http://dbpedia.org/resource/Plovdiv_University_Paisii_Hilendarski> .
  ?alumnus dbo:birthPlace ?birthPlace .
  
  ?alumnus dbo:residence ?residence .
  ?residence a dbo:Settlement .
  
  # Filter for settlements in the EET region
  {
    VALUES ?country { <http://dbpedia.org/resource/Bulgaria> <http://dbpedia.org/resource/Romania> <http://dbpedia.org/resource/Ukraine> }
    ?residence dbo:country ?country .
  } UNION {
    # Additional filtering for specific regions within these countries if necessary
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  dbr:VfL_Bochum_season_2006-07 dbo:succeeds ?successorSeason .
  
  # Thomas Letsch's managerial role in that successor season
  ?successorSeason dbo:manager ?letschRole .
  ?letschRole dbp:name ""Thomas Letsch"" .

  # Ensure the manager is linked to a sports club fitting the criteria
  ?letschRole dbo:team ?sportsClub .
  ?sportsClub rdf:type dbo:SoccerClub ;
              rdf:type dbo:SportsOrganization .

  # Find the native country of the administration related to West Germany
  dbr:West_Germany dbo:leader ?leader .
  ?leader dbp:nativeCountry ?nativeCountry .
  
  # Ensure the manager is associated with this administrative context
  ?letschRole dbp:nativeCountry ?nativeCountry .

  # Return the manager's name
  ?managerName rdfs:label ?managerLabel .
  FILTER (lang(?managerLabel) = ""en"")
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is royalty
  ?child a dbo:Monarch ;
         dbo:parent dbr:Saw_Shwe_Khet .

  # Step 2: Find Minye Kyawswa's grandchild who is royalty
  ?grandchild a dbo:Monarch ;
              dbo:parent ?parentOfGrandchild .
  
  ?parentOfGrandchild dbo:parent dbr:Minye_Kyawswa .

  # Step 3: Determine the predecessor of Saw Shwe Khet's child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify the parent of Minye Kyawswa's grandchild
  ?parentOfGrandchild dbr:Saw_Shwe_Khet#predecessor .

  # Step 5: Find the father of this parent
  ?father a dbo:Man ;
          dbo:spouse ?parentOfGrandchild .

  # Step 6: Determine the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Emeli Sandé""@en ;
          dbo:birthName ""Emilia Yancheva Valeva""@en .
  
  OPTIONAL { 
    ?collaboration dbo:member ?person .
    ?collaboration dbo:bandMember ?bandMember .
  }
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?work WHERE {
  # Find a commander involved in the Korean conflict
  ?commander dbo:officeHolderOf ?koreanConflict .
  
  # Ensure the person is an author of a written work and a book
  ?commander dbo:author ?work .
  ?work rdf:type dbo:Book .
  ?work dbo:country dbr:United_States .

  # The work should be associated with Joe Biden as an author
  ?bidenWork dbo:author dbr:Joe_Biden ;
             rdf:type dbo:Book .
  
  # Link the commander's work to Joe Biden's book
  ?commander dbo:author ?bidenWork .
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse
WHERE {
  # Step 1: Identify the landmark at elevation 20.116800000000001347
  ?landmark dbo:elevation ""20.1168""^^xsd:float .
  
  # Step 2: Determine the ruling party member associated with this landmark
  ?landmark dbo:locatedInCountry ?country .
  ?country dbp:government ?government .
  ?government dbo:headOfGovernment ?partyLeader .
  ?partyLeader dbo:memberParty ?rulingParty .
  ?rulingParty dbo:member ?partyMember .

  # Step 3: Identify the product (film) associated with Nat Levine
  dbr:Nat_Levine dbo:producedFilm ?film .

  # Step 4: Find the actor of that film
  ?film dbo:starring ?actor .

  # Step 5: Determine the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Step 6: Identify the person born as Ann Sothern's birth name
  dbr:Ann_Sothern dbp:birthName ""Anne Sothern"" .
  ?person dbp:birthName ""Anne Sothern"" .
  
  # Step 7: Combine these elements
  FILTER (?spouse = ?partyMember && ?spouse = ?person)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild
WHERE {
  # Archduchess Margarete Sophie of Austria's parent and sibling
  ?parent a dbo:Person ;
          dbo:child ?margareteSophie .
  ?sibling dbo:child ?parent .

  # Sibling's child who is royalty
  ?siblingChild dbo:child ?sibling ;
                rdfs:label ?siblingLabel .
  FILTER CONTAINS(LCASE(?siblingLabel), ""royalty"")

  # Duke Philipp of Württemberg's grandchild and predecessor
  ?philippChild dbo:child ?dukePhilipp .
  ?philippGrandchild dbo:child ?philippChild .
  
  # Predecessor in lineage or title (assuming a simple predecessor relationship)
  ?predecessor dbo:successor ?philippGrandchild .

  # Archduchess Helena of Austria's spouse and their royal child
  ?helenaSpouse dbo:spouse ?helena ;
                dbo:child ?royalChild .
  FILTER CONTAINS(LCASE(?royalChild), ""royalty"")

  # Find the intersection of these conditions
  VALUES ?childOfChild { ?siblingChild ?predecessor }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warToyotomiHideyori ?entityYamazaBirthplace ?warHirohito WHERE {
  # War of Toyotomi Hideyori
  OPTIONAL { 
    dbr:Toyotomi_Hideyori dbo:spouse ?parent .
    ?parent dbo:child dbr:Toyotomi_Hideyori .
    ?warToyotomiHideyori dbo:participant dbr:Toyotomi_Hideyori .
  }

  # Entity in the birth place of Yamaza Enjirō
  OPTIONAL {
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
    ?entityYamazaBirthplace dbo:location ?birthPlace .
  }
  
  # War of Emperor Hirohito (Akihito)
  OPTIONAL {
    dbr:Hirohito dbo:givenName ""Akihito"" ;
                 dbo:spouse ?spouse .
    ?warHirohito dbo:participant dbr:Hirohito .
  }
}
```",6,6,7,2,3,2,3,28,0,3397,2,0.0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # $pacely's birth name and profession
  VALUES (?birthName) { ""Calvin Cordozar Broadus Jr."" }
  ?snoop dbo:birthName ?birthName .
  
  # The writer of ""The Live Anthology"" who is also a musical artist
  ?dylan dbr:The_Live_Anthology dbo:author ?writer ;
        rdf:type dbo:MusicalArtist .

  # Joey B's birth name and profession
  VALUES (?joeyBBirthName) { ""Joseph Anthony Budden II"" }
  ?joeB dbo:birthName ?joeyBBirthName .
  
  # Ensure the artist is Snoop Dogg, who matches all criteria
  ?snoop rdf:type dbo:MusicalArtist ;
         rdfs:label ?artistLabel .

  FILTER(CONTAINS(LCASE(?artistLabel), ""snoop dogg""))
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify the reference person (a royalty and an office holder)
  ?reference a dbo:Monarch ;
             a dbo:OfficeHolder .

  # Step 2: Find William I's children
  ?child1 dbo:parent ?williamI .
  ?williamI rdfs:label ""William I""@en .

  # Step 3: Determine Constance of Burgundy's spouse who is also royalty, then find their child with Roger II of Sicily
  ?spouse a dbo:Monarch ;
          dbo:spouse ?constanceBurgundy .
  ?constanceBurgundy rdfs:label ""Constance of Burgundy""@en .

  ?child2 dbo:parent ?spouse ;
          dbo:parent ?rogerII .
  ?rogerII rdfs:label ""Roger II of Sicily""@en .

  # Step 4: Identify the child of that child
  ?grandChild dbo:parent ?child2 .

  # Step 5: Determine the father of this specific child
  ?father dbo:spouse ?mother .
  ?mother dbo:parent ?grandChild .
  
  FILTER(?reference = ?child1 || ?reference = ?child2)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage WHERE {
  # Step 1: Identify the producer of ""Storm in a Teacup""
  ?film dbo:producer dbr:David_Puttnam .
  FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/""))

  # Step 2: Check if David Puttnam is also credited as a writer for ""The True Self"" by Steven Kapur
  OPTIONAL {
    ?work dbo:writer dbr:David_Puttnam .
    FILTER(STRSTARTS(STR(?work), ""http://dbpedia.org/resource/""))
    ?work rdfs:label ""The True Self""@en .
    ?work dbo:artist dbr:Steven_Kapur .
  }

  # Step 3: Find the birthplace of David Puttnam
  OPTIONAL {
    dbr:David_Puttnam dbo:birthPlace ?birthPlace .
  }

  # Step 4: Retrieve the native language or ethnicity of that birthplace
  OPTIONAL {
    ?birthPlace dbo:nativeLanguage ?nativeLanguage .
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the birthplace of James Soong (Chiang Wei-kuo)
SELECT ?birthPlace WHERE {
  dbr:James_Soong dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the country of origin of Lao She's work ""Rickshaw Boy""
SELECT ?country WHERE {
  dbr:Lao_She dbo:work ?work .
  ?work dbo:countryOfOrigin ?country .
  FILTER(CONTAINS(LCASE(STR(?work)), ""rickshaw boy""))
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?player WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director ?director .
  ?director foaf:name ""Manuel Huerga""@en .

  # Find teams associated with Marcelo Sarmiento's birthdate and roles
  ?person dbp:birthday ?birthday ;
          dbp:sport ""Soccer""@en ;
          dbp:occupation ""Football manager""@en .
  ?team dbp:member ?person .
  ?marcelo dbo:birthDate ?birthday .

  # Find athletes born on February 22, 1955
  ?athlete dbo:birthDate ?dateBirth .
  FILTER (YEAR(?dateBirth) = 1955 && MONTH(?dateBirth) = 2 && DAY(?dateBirth) = 22)

  # Marcelo Sarmiento's birthdate
  ?marcelo foaf:name ""Marcelo Sarmiento""@en .

  # Find common player/actor among these entities
  ?film dbp:starring ?player .
  ?team dbp:member ?player .
  ?athlete foaf:name ?playerName .
  FILTER (str(?player) = str(?playerName))
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?profession1 ?actor1 ?actor2 WHERE {
  # The Shadow's alter ego and profession
  dbr:The_Shadow_Comics_Alter_Ego dbo:alterEgoName ""Lamont Cranston"" .
  dbr:Lamont_Cranston dbo:occupation dbr:Detective .

  # Ab Kya Hoga actor who is also a politician
  ?actor1 dbo:profession dbr:Actor ;
          dbo:profession dbr:Politician ;
          dbo:film dbr:Ab_Kya_Hoga .
  
  # Richard E. Grant's profession
  dbr:Richard_E._Grant dbo:occupation dbr:Actor .

  # Find the common actor profession
  ?actor2 rdfs:label ""Arjun Bijlani""@en .
  FILTER(?actor1 = ?actor2)

  BIND(""Detective"" AS ?profession1)
  BIND(""Actor"" AS ?profession2)
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
           dbp:name ""Dorothea of Denmark"" ;
           dbp:title ""Electress Palatine""@en .

  # Her father
  ?dorothea dbo:father ?father .

  # Her grandfather (father's father)
  ?father dbo:father ?grandfather .

  # Grandfather as a commander in the Siege of Padua
  ?grandfather dbo:occupation ""Commander""@en ;
               dbo:participatedIn dbp:Siege_of_Padua .

  # Ensure grandfather is royalty
  ?grandfather dbo:nationality dbr:Royal_House .

  # Philip I of Castile's parent (his father)
  ?philip a dbo:Person ;
          dbp:name ""Philip I of Castile"" .
  
  ?philip dbo:father ?parentOfPhilipp .

  # Ensure grandfather is the father of Philip I of Castile's parent
  ?grandfather dbo:child ?parentOfPhilipp .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?force ?birthPlaceName WHERE {
  # Identify Quincy Adams Gillmore and his awards
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }
  
  # Find the award given by United States Congress
  ?award dbo:awardee ?gillmore ;
         dbo:issuer dbr:United_States_Congress .
  
  # Determine the military force associated with the awardee of this award
  ?force dbo:member ?gillmore .

  # Find the war linked to this award
  ?award dbo:relatedWar ?war .

  # Extract details about his birthplace
  ?gillmore dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and he was American
  ?birthPlace rdf:type dbo:Settlement ;
             dbp:nationality dbr:United_States .
  
  # Get the name of the birthplace
  ?birthPlace rdfs:label ?birthPlaceName .

  FILTER (lang(?birthPlaceName) = 'en')
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politician WHERE {
  # Victor Stanley (Royal Navy officer) and his parent who is a politician
  ?victor dbr:Victor_Stanley_(Royal_Navy_officer) .
  ?victor dbo:parent ?parentVictor .
  ?parentVictor dbo:occupation dbr:Politician .

  # Edward Stanley, 17th Earl of Derby and his parent who is a politician and an office holder
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?edward dbo:parent ?parentEdward .
  ?parentEdward dbo:occupation dbr:Politician ;
                dbo:officeHolder true .

  # Alumnus of Eton College and their child's parent who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?child dbo:parent ?parentChild .
  ?parentChild dbo:occupation dbr:Politician .

  # Find the common politician in these relationships
  FILTER (?parentVictor = ?politician)
  FILTER (?parentEdward = ?politician)
  FILTER (?parentChild = ?politician)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nationality dbr:Finland .
  ?person dbo:nationality dbr:Russia .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?commander ?successor ?officeHolder
WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvShow dbo:title ""Always the Love Songs""@en .
  ?tvShow dbo:creator ?writer .

  # Find commander in the Battle of Vienna and their successor
  ?battle dbo:name ""Battle of Vienna (1683)""@en ;
          dbo:commander ?commander .
  
  OPTIONAL {
    ?commander dbo:succeededBy ?successor .
  }

  # Check if the successor is a politician or office holder
  OPTIONAL {
    ?successor dbo:occupation dbr:Politician ;
               dbo:officeHeld ?officeHolder .
  }
  
  # Link Michał Kazimierz Pac to the Battle of Vienna
  ?battle dbo:participant dbr:Micahel_Kazimierz_Pac .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leader ?residenceCountry
WHERE {
  # Find the leader of PSOE around 2009
  ?psoeLeader dbo:positionTitle ""President""@en;
              dbo:party dbr:Spanish_Socialist_Workers'_Party;
              dbp:termStart ?startYear.
  
  FILTER (?startYear <= 2009 && (BOUND(?endYear) -> ?endYear >= 2009 || !BOUND(?endYear)))

  # Find the leader during the Galician regional election in 2009
  ?galiciaLeader dbo:positionTitle ""President""@en;
                 dbo:election dbr:Galician_regional_election,_2009;
                 dbp:party dbr:Spanish_Socialist_Workers'_Party.

  # Identify a notable Spanish citizen and their country of residence
  ?citizen dbo:nationality dbr:Spain;
           dbo:residenceCountry ?residenceCountry.
  
  FILTER EXISTS { ?citizen dbo:notableFor ?notableThing }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?individual
WHERE {
  # Alfonso VI of León and Castile's grandchild
  ?alfonsoVI dbo:spouse ?spouse .
  ?alfonsoVI dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # Roger II of Sicily's child
  ?rogerII dbo:parent ?parentRoger .
  ?parentRoger dbo:child ?rogerII .
  ?rogerII dbo:child ?child2 .

  # Reference to William I
  ?reference dbo:officeHolder ?office .
  ?reference dbo:spouse ?williamI .
  ?williamI rdf:type dbo:Monarch .

  # Intersection of the individuals who are royalty
  FILTER (?grandchild = ?child2)
  FILTER (?individual IN (VALUES ?grandchild) UNION VALUES ?child2))
  FILTER EXISTS { ?individual rdf:type dbo:Monarch }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find the child who is royalty of Prince Faisal bin Hussein
WITH {
    SELECT ?child WHERE {
        ?person dbo:spouse ?faisal .
        FILTER(STR(?faisal) = ""Prince_Faisal_bin_Hussein"")
        ?person dbo:child ?child .
        OPTIONAL { ?child dbp:title ?title . }
        FILTER EXISTS { ?child dbp:title ?title } # Ensure the child is royalty
    }
} AS %children_of_faisal

# Step 2: Find the child who is royalty of Princess Muna al-Hussein, and their parent who is royalty
WITH {
    SELECT ?grandchild ?parent WHERE {
        ?person dbo:spouse ?munah .
        FILTER(STR(?munah) = ""Princess_Muna_al-Hussein"")
        ?person dbo:child ?child .
        OPTIONAL { ?child dbp:title ?title . }
        FILTER EXISTS { ?child dbp:title ?title } # Ensure the child is royalty
        ?child dbo:child ?grandchild .
        OPTIONAL { ?grandchild dbp:title ?g_title . }
        FILTER EXISTS { ?grandchild dbp:title ?g_title } # Ensure grandchild is royalty
        ?grandchild dbo:parent ?parent .
    }
} AS %royalty_grandchildren

# Step 3: Find the common parent of the identified individuals from steps 1 and 2
SELECT DISTINCT ?commonParent WHERE {
    VALUES ?faisal_child { %children_of_faisal }
    VALUES ?munah_grandchild { %royalty_grandchildren }
    
    ?faisal_child dbo:parent ?commonParent .
    ?munah_grandchild dbo:parent ?commonParent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfCommander ?residenceLeader ?officeOfPartyLeader
WHERE {
  # Find Manuel Pinto da Costa's office in a military conflict
  ?manuelPinto daCosta dbo:occupation ?officeOfCommander .
  ?officeOfCommander dbo:field dbr:Military_conflict .

  # Identify the leader of the 2003 Madrid City Council election and their residence
  ?electionLeader dbo:electedAs dbr:Madrid_City_Council_election_2003 .
  ?residenceLeader dbo:resident ?electionLeader .
  
  # Find the office held by the leader of the Conservative Republican Party (Spain)
  ?partyLeader dbo:leaderOf dbr:Conservative_and_Royalist_Party_(Spain) .
  ?officeOfPartyLeader dbo:positionHeldBy ?partyLeader .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band 
WHERE {
  # Step 1: Find Bob Thompson's birth name and band
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbo:birthName ?birthName .
  
  OPTIONAL { ?bob dbo:memberOfBand ?band . }

  # Step 2: Identify Walter B. Gibson's fictional character
  ?fictionalCharacter dbo:creator dbr:Walter_B._Gibson ;
                     a dbo:FictionalCharacter, dbo:ComicsCharacter .

  # Step 3: Find the producer of Coke Studio Philippines
  ?producer a dbo:TelevisionProducer ;
            dbo:producedBy dbr:Coke_Studio_Philippines .
  
  # Linking all elements together (assuming some logical connection exists)
  FILTER(?band = ?fictionalCharacter && ?birthName = ?producer) 
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .
  
  # Actor is a soccer player and athlete
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .

  # Person born on Marty Pollio's birthday who is an athlete
  ?person dbp:birthday ?birthdayPollio ;
          dbo:sport dbr:Athletics .
  
  FILTER (?birthdayPollio = ""1975-07-19""^^xsd:date) # Assuming Marty Pollio's birthday

  # Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?manager dbp:birthday ?birthdaySarmiento ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_Manager .

  FILTER (?birthdaySarmiento = ""1971-09-01""^^xsd:date) # Assuming Marcelo Sarmiento's birthday

  # Ensure the actor is linked to these persons
  ?actor dbp:birthday ?birthdayPollio .
  ?actor dbo:team ?manager .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?militaryConflict ?ruizGallardonResidence ?politicalParty ?partyLeaderOffice
WHERE {
  # Manuel Pinto da Costa's office as a commander in a military conflict
  ?manuelPinto daCosta dbo:office ?commanderOffice .
  ?commanderOffice dbo:positionHeldBy dbr:Manuel_Pinto_da_Costa ;
                   dbo:relatedEvent ?militaryConflict .
  
  # Military Conflict is both an event and societal event
  ?militaryConflict a dbo:MilitaryConflict ;
                   a dbo:SocietalEvent .

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .

  # Political party led by Miguel Maura and its office
  ?politicalParty dbo:leader dbr:Miguel_Maura ;
                  a dbo:PoliticalParty .
  ?partyLeaderOffice dbo:office ?politicalParty .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Nate Newton's primary band
  dbr:Nate_Newton dbo:musicalArtist dbr:Converge .
  
  # Producer of ""Nothing to Gein""
  dbr:""Nothing_to_Gein"" dbo:producer ?producer .

  # Check if the producer is part of any musical group or organization
  OPTIONAL { ?producer dbo:bandMember ?groupMember . }

  # Find associated musical artist that is a band and an organization for the producer
  OPTIONAL {
    ?producer dbo:musicalArtist ?associatedBand .
    FILTER (rdf:type(?associatedBand, dbo:MusicalGroup) && rdf:type(?associatedBand, dbo:Organization))
  }
  
  # Band member of this associated musical artist
  OPTIONAL { 
    ?associatedBand dbo:bandMember ?finalBandMember .
  }

  # Return the band member if all conditions are met
  FILTER (?groupMember != dbr:Nate_Newton && ?finalBandMember != dbr:Nate_Newton)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?calderEvent ?bayneWar WHERE {
  # Find the commander of the war involving ""The Triple X's""
  ?tripleXs a dbo:MilitaryConflict ;
            dbo:commander ?commander .

  # Identify the military force and event related to Robert Calder
  ?calderForce a dbo:MilitaryForce ;
               dbo:event ?calderEvent .
  ?calder dbr:Robert_Calder ;
          dbo:militaryForce ?calderForce .

  # Determine the war connected to William Bayne and its commander
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:commander ?bayneCommander .
  ?bayne dbr:William_Bayne ;
         dbo:militaryConflict ?bayneWar .

  # Link Robert Calder's military force to the event of ""The Triple X's""
  ?calderForce dbo:event ?tripleXsEvent .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?residenceCountry ?officeEvent ?officeCountry
WHERE {
  # Anxo Quintana's political affiliation with PSOE
  db:Anxo_Quintana dbo:memberOf db:Spanish_Socialist_Workers'_Party .

  # Residence of a Spanish citizen from Spain (assuming residence is in Spain)
  OPTIONAL { 
    db:Spain dbo:nationality db:Anxo_Quintana .
    ?residenceCountry dbo:countryName ""Spain""@en .
  }

  # Anxo Quintana's role as a leader
  OPTIONAL {
    ?officeEvent dbo:leader db:Anxo_Quintana .
    ?officeEvent dbo:location ?officeLocation .
    ?officeLocation dbo:country ?officeCountry .
  }
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName WHERE {
  # Alfonso IV of Aragon and his children who are royalty
  ?alfonsoIV a dbo:Monarch ;
             rdfs:label ""Alfonso IV of Aragon""@en .
  
  ?alfonsoIVChild dbo:parent ?alfonsoIV ;
                  a dbo:Person ;
                  rdfs:label ?childLabel .

  # Martin of Aragon and his parent
  ?martin a dbo:Monarch ;
          rdfs:label ""Martin of Aragon""@en .
  
  ?martinParent dbo:parent ?martin ;
                a dbo:Person ;
                rdfs:label ?parentLabel .

  # Find the child of Martin's parent who is royalty
  ?childOfParent dbo:parent ?martinParent ;
                 a dbo:Monarch ;
                 rdfs:label ?childName .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Shadow's alter ego in comics and video games
  dbr:The_Shadow (dbo:alterEgo) ?alterEgo .
  
  # Actor who played this character in a movie adaptation
  ?movie dbo:starring ?actor .
  ?movie dbo:basedOnWork ?alterEgo .

  # Ensure the actor has appeared in a television show
  ?tvShow dbo:starring ?actor .
  
  # Richard Grant Esterhuysen's profession (actor)
  dbr:Richard_Grant_Esterhuysen dbo:profession dbr:Actor .
  
  # Shatrughan Sinha is an actor
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .

  FILTER(?actor != dbr:Richard_Grant_Esterhuysen)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
# Query 1: Find the band of the person born on 1945-03-30 who is a musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:musicalArtist true .
  ?person dbo:associatedBand ?band .
}

# Query 2: Identify Nicholas Michael Curran's associated musical artists
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?curran ?artist WHERE {
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:associatedBand ?band .
  ?band dbo:musicalArtist ?artist .
}

# Query 3: Find Kim Wilson's real name for his band
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?wilson ?realName WHERE {
  ?wilson rdfs:label ""Kim Wilson""@en .
  ?wilson dbo:associatedBand ?band .
  ?band rdfs:label ?realName .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentLocation WHERE {
  # Identify the deceased artist and musical artist
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:dateOfDeath ?deathDate .
  
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)

  # Find the native location of this person
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?location .

  # Ensure the location is English and a settlement
  ?location rdf:type dbo:Settlement ;
            dbp:country dbr:England .

  # Get the parent location of the identified location
  ?location dbo:parentCountryOrTerritory ?parentLocation .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
# Step 1: Find Linda Sue Cobb's spouse
SELECT ?spouse WHERE {
  ?person rdfs:label ""Linda Sue Cobb""@en .
  ?person dbo:spouse ?spouse .
}

UNION

# Step 2: Identify the movie associated with Ian Gregson (poet) and its producer
SELECT ?producer WHERE {
  ?movie dbo:awardRecipient ?recipient .
  ?recipient rdfs:label ""Ian Gregson""@en ;
             rdf:type dbo:Poet .
  
  ?movie dbo:productionCompany ?company .
  ?company dbo:president|dbo:executiveProducer ?producer .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Step 1: Find the sports manager born on 1968-08-26
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date .
  
  # Step 2: Check if this person was the manager of VfL Bochum in the 2007–08 season
  ?season a dbo:SportsTeamSeason ;
          dbo:sport dbr:Soccer ;
          dbo:team dbr:VfL_Bochum ;
          dbo:manager ?person .
  
  # Step 3: Identify the administration (country) of the leader of West Germany
  ?westGermanyLeader dbo:leaderOf dbr:West_Germany ;
                    dbo:nativePlace ?country .
  
  # Step 4: Find teams associated with this country and check if our manager managed any of them
  ?team a dbo:SoccerClub, dbo:Organization ;
        dbo:administeredBy ?country .
  
  OPTIONAL {
    ?otherSeason a dbo:SportsTeamSeason ;
                 dbo:sport dbr:Soccer ;
                 dbo:team ?team ;
                 dbo:manager ?person .
  }
  
  # Return the manager's name
  ?person rdfs:label ?managerName .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?member dbo:member dbr:Khlyst_(band) .
  ?member rdf:type dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of this member
  ?associatedArtist dbo:associatedBand ?member .

  # Step 3: Identify the reference group for Burnt by the Sun
  dbr:Burnt_by_the_Sun dbo:referenceGroup ?referenceGroup .
  
  # Step 4: Determine the band and organization that includes this reference group
  ?band rdf:type dbo:MusicalBand ;
        dbo:member ?referenceGroup .

  # Step 5: Find a band member of the associated musical artist found in step 2
  ?finalArtist dbo:member ?associatedArtist .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  VALUES (?bobbyShmurdaBirthName) { dbr:Bobby_Shmurda ""Ackquille_Jean_Pollard"" }
  
  # Grammy Award associated with New York
  ?award dbo:location dbr:New_York_City ;
         a dbo:Award .
  
  # Band from New York that won the award
  ?band dbo:award ?award ;
        dbo:country dbr:United_States ;
        dbo:stateOrProvince dbr:New_York_(state) .

  # GS9 member who is also an artist and musical artist
  ?gs9Member dbo:memberOf dbr:GS9 ;
             a dbo:MusicalArtist, dbo:Artist .
  
  # Link the band to the GS9 member
  ?band dbo:associatedBandMember ?gs9Member .

  # Find the person who matches all criteria
  ?person rdfs:label ?bobbyShmurdaBirthName ;
          dbo:nativeOf ?awardLocation .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInMolinaTeam ?soccerPlayerManager ?athleteActor
WHERE {
  # Find Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?playerInMolinaTeam .

  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthDate ?marceloSarmientoBirthDate .

  # Find a soccer player and manager born on the same date as Marcelo Sarmiento
  ?soccerPlayerManager dbo:birthDate ?marceloSarmientoBirthDate .
  ?soccerPlayerManager rdf:type dbo:SoccerPlayer ;
                       rdf:type dbo:SoccerManager .

  # Identify Manuel Huerga's film
  dbr:Manuel_Huerga dbo:film ?huergasFilm .

  # Find an athlete actor in that film
  ?athleteActor dbo:actor ?huergasFilm .
  ?athleteActor rdf:type dbo:Athlete ;
                rdf:type dbo:SoccerPlayer .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?birthNamePerson ?awardRegion ?awardeeBand WHERE {
  # Bobby Shmurda's band member who is also a musical artist
  ?bobby dbo:musicalArtist dbr:Bobby_Shmurda .
  ?bobby dbo:associatedBandMember ?bandMember .
  FILTER (dbo:musicalArtist(?bandMember)) .

  # Person born as the birth name of someone native to Florida, and is a musical artist
  ?native dbr:Florida dbo:native .
  ?native dbp:birthName ?birthName .
  ?person dbp:birthName ?birthName .
  FILTER (dbo:musicalArtist(?person)) .

  # Award related to New York state that is associated with a region, American state, and settlement
  ?award dbo:awardee ?awardeeBand ;
         dbo:region dbr:New_York_(state) ;
         dbo:country dbr:United_States .
  FILTER (dbo:band(?awardeeBand)) .

  # Linking the entities together
  BIND(?bandMember AS ?commonEntity)
  BIND(?person AS ?birthNamePerson)
  BIND(?awardRegion AS ?region)
  FILTER (?bandMember = ?birthNamePerson && ?bandMember = ?awardeeBand)
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Gillmore_Medal .
  ?person dbo:militaryForce ?force .
  ?award dbo:awardingBody dbr:United_States_Congress ;
         dbo:war ?war .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  ?place dbo:country dbr:United_States .
  
  FILTER EXISTS { ?person dbo:award ?award }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?awardee WHERE {
  # Identify the war as World War II
  dbr:World_War_II dbo:hasPart ?battle .
  
  # Find commanders involved in the sinking event
  ?battle dbo:commandedBy ?commander .
  FILTER (CONTAINS(LCASE(STR(?commander)), ""admiral sir tom phillips"") || CONTAINS(LCASE(STR(?commander)), ""vice-admiral sir geoffrey layton""))

  # Find awardees of the CBE associated with this force
  ?awardee dbo:awardReceived dbr:Commander_of_the_Order_of_the_British_Empire .
  ?awardee dbo:memberOf ?force .
  ?force dbo:commandedBy ?commander .

  # Ensure it's a societal event and military conflict
  ?war dbo:type dbr:Military_Conflict ;
       dbo:isPartOf dbr:World_War_II .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Mariclare Costello's spouse
  ?mariclareCostello dbo:spouse ?spouse .
  
  # Child of Mariclare Costello and her spouse
  ?child dbo:parent ?spouse ;
         dbo:parent ?mariclareCostello .

  # Parent of the child (either Mariclare or her spouse)
  ?parent foaf:parent ?child .

  # Eugène Cattin's profession
  ?eugeneCattin dbo:profession ?profession .
  
  # Professional in the same field as Eugène Cattin
  ?professional dbo:profession ?profession ;
                foaf:parent ?parent .

  # Person who died in Los Angeles
  ?decedent dbo:deathPlace ?deathPlace ;
            dbo:actor ?movie .
  FILTER (str(?deathPlace) = ""Los Angeles"")

  # The movie is a work
  ?movie rdf:type dbo:Film .

  # Actor of the movie
  ?actor dbo:actor ?movie .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?role ?tvShow WHERE {
  # Identify George Ducas and his role
  ?georgeDucas a dbo:Person ;
               rdfs:label ""George Ducas""@en .

  # Find Yurii Khmelnytsky's successor
  ?yuriKhmelnytsky a dbo:Person ;
                   rdfs:label ""Yurii Khmelnytsky""@en .
  
  ?successor dbo:succeededBy ?yuriKhmelnytsky ;
             dbo:role ?role .

  # Connect the successor to the Battle of Vienna
  ?battleOfVienna a dbo:MilitaryConflict ;
                  rdfs:label ""Battle of Vienna (1683)""@en .
  
  ?successor dbo:commanderIn ?battleOfVienna .

  # Link to any television show or societal event
  OPTIONAL {
    ?tvShow dbo:subject ?successor ;
            dbo:title ?title .
    FILTER regex(?title, ""television"", ""i"")
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?finalChild WHERE {
  # Step 1: Find the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?childFerdinand dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Determine the spouse of that child
  ?spouseChild dbo:spouse ?childFerdinand .

  # Step 3: Find the child of Princess Antoinette who is royalty
  ?royalChild dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  FILTER EXISTS { ?royalChild rdf:type dbo:Monarch } .

  # Step 4: Identify the spouse of this royal child
  ?spouseRoyalChild dbo:spouse ?royalChild .

  # Step 5: Find the child of the parent (from step 2) who is a royalty
  ?finalChild dbo:parent ?spouseChild .
  FILTER EXISTS { ?finalChild rdf:type dbo:Monarch } .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?residenceCountry ?athlete
WHERE {
  # Step 1: Identify Napoleon Bonaparte as a commander in the French Revolutionary Wars
  dbr:Napoleon_Bonaparte dbo:nationality dbr:France ;
                          dbo:occupation dbr:Commander .

  # Step 2: Determine his residence that is a country (Elba, part of Italy)
  dbr:Elba dbo:country dbr:Italy .
  
  # Step 3: Find a Polish athlete from Łódź
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź ;
           dbo:sport dbp:Sprinter .

  FILTER (str(?athlete) = ""Irena_Szewińska"")
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify GS9 members who are artists and musical artists
  ?gs9Member dbo:type dbr:GS9 ;
             dbo:member ?person .
  ?person a dbo:Artist, dbo:MusicalArtist .

  # Step 2: Find associated musical artists of these members
  ?associatedArtist dbo:associatedBand ?gs9Member ;
                   a dbo:MusicalArtist .

  # Step 3: Determine native regions (states and settlements) of these associated artists
  ?associatedArtist dbo:nativePlace ?nativeRegion .
  ?nativeRegion a dbo:State, dbo:Settlement, dbo:Region ;
                dbp:country dbr:United_States .

  # Step 4: Identify awardees who are bands from these regions
  ?awardee dbo:award ?nativeRegion ;
          a dbo:Band .

  # Step 5: Find New York state connections
  ?personNY dbo:birthPlace dbr:New_York_(state) .
  ?personNY foaf:name ?nameNY .
  
  ?associatedArtist foaf:name ?nameAssociatedArtist .
  FILTER (?nameNY = ?nameAssociatedArtist)

  # Step 6: Identify band members who are musical artists associated with these awardees
  ?bandMember dbo:member ?awardee ;
              a dbo:MusicalArtist .
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the death place of John McDermott
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .

  # Identify Pickett's Charge and its commanders
  dbr:Picketts_Charge dbo:commanderInWar ?commander .
  
  # Find political parties ruling in the death place of John McDermott
  ?party a dbo:PoliticalParty ;
         dbo:rulingPartyOf ?deathPlace .

  # Find individuals who are members of these parties and also commanded in Pickett's Charge
  ?partyMember dbo:partyMember ?party ;
               rdf:type dbo:Person ;
               owl:sameAs ?commander .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War Commander
  ?war dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/Algerian_War""))

  # Charles de Gaulle as a societal event, event, and television show
  OPTIONAL { ?commander dbo:wikiPageWikiLink dbr:Societal_event . }
  OPTIONAL { ?commander dbo:wikiPageWikiLink dbr:Event . }
  OPTIONAL { ?commander dbo:wikiPageWikiLink dbr:Television_show . }

  # Maria Anna of Bavaria's child who is royalty and a father
  ?mariaAnna dbo:child ?royaltyFather .
  FILTER(STRSTARTS(STR(?mariaAnna), ""http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(1574-1646)""))
  FILTER EXISTS { ?royaltyFather dbo:fatherOf ? . }
  FILTER EXISTS { ?royaltyFather a dbo:Monarch . }

  # Archduke Charles Joseph of Austria's parent's father
  ?charlesJoseph dbo:parent ?parent .
  ?parent dbo:parent ?grandParent .
  FILTER(STRSTARTS(STR(?charlesJoseph), ""http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria""))
  FILTER(STRSTARTS(STR(?grandParent), ""http://dbpedia.org/resource/Leopold_V,_Duke_of_Austria""))

  # Linking Ferdinand III to Charles de Gaulle
  ?royaltyFather rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify ""The Triple X's"" and their associated military force.
SELECT ?tripleXs ?militaryForce WHERE {
  ?tripleXs a dbo:MilitaryUnit ;
            rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""the triple x's""))
  
  OPTIONAL { ?tripleXs dbo:militaryBranch ?militaryForce . }
}

# Step 2: Determine the war involving this military force and its commander.
SELECT ?war ?commander WHERE {
  ?militaryForce dbo:participatedInWar ?war .
  ?war dbo:commander ?commander .
}

# Step 3: Find out who was awarded the Knight Commander of the Order of the Bath and their related military force.
SELECT ?awardee ?relatedMilitaryForce WHERE {
  ?awardee dbo:award ""Knight Commander of the Order of the Bath"" ;
           dbo:militaryBranch ?relatedMilitaryForce .
}

# Step 4: Identify the war involving this military force.
SELECT ?war WHERE {
  ?relatedMilitaryForce dbo:participatedInWar ?war .
}

# Step 5: Connect William Bayne to these details.
SELECT ?baynesRole WHERE {
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?war ;
                                         dbo:role ?baynesRole .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Archduchess Margarete Sophie of Austria's father
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:father ?father .

  # Carl, Duke of Württemberg's predecessor (likely his father)
  dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessorOrMonarch ?predecessor .

  # Alexander of Württemberg's descendants
  dbr:Alexander_of_W%C3%BCrttemberg (dbo:child|dbo:grandChild|dbo:greatGrandChild)* ?descendant .

  # Find the individual who is both a child of Margarete Sophie's father and predecessor to Carl, Duke of Württemberg
  ?father dbo:child ?individual .
  ?predecessor dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessorOrMonarch .

  # Ensure the individual is a descendant of Alexander of Württemberg and royalty
  VALUES ?descendant { ?individual }
  FILTER EXISTS {
    ?individual a dbo:Royal .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find awards and nominations for Janusz Kamiński
  ?award dbo:recipient dbr:Janusz_Kamiński .
  
  # Step 2: Identify the spouse of the awardee
  ?award dbo:winner ?awardee .
  ?awardee foaf:mbox ?email .  # Assuming we can identify the person by email or similar property
  ?awardee dbo:spouse ?spouse .

  # Step 3: Find movies with Audrey Hepburn and another actor
  ?movie1 dbo:starring dbr:Audrey_Hepburn ;
          dbo:starring ?actor1 .
  
  # Step 4: Find movies with Iliza Shlesinger and an actor
  ?movie2 dbo:starring dbr:Iliza_Shlesinger ;
          dbo:starring ?actor2 .

  # Step 5: Check for common actors between these movies
  FILTER (?actor1 = ?actor2)

  # Ensure the spouse is also the actor in both movies
  FILTER (?spouse = ?actor1 && ?spouse = ?actor2)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?stephenV dbo:father ?predecessor .
  FILTER(STRSTARTS(STR(?predecessor), ""dbr:""))

  # Step 2: Parent of the Father (Royalty)
  ?predecessor dbo:father ?grandparent .
  FILTER(STRSTARTS(STR(?grandparent), ""dbr:"") && 
         EXISTS { ?grandparent a dbo:Monarch })

  # Step 3: Spouse of Maria of Bytom
  dbr:Maria_of_Bytom dbo:spouse ?spouseMaria .

  # Step 4: Father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?fatherPhilip .

  # Step 5: Spouse of the Father from Step 4
  ?fatherPhilip dbo:spouse ?spouseFatherPhilip .

  # Step 6: Child of the Child (Royalty)
  ?grandparent dbo:child ?child .
  ?child dbo:child ?childOfChild .
  FILTER(STRSTARTS(STR(?childOfChild), ""dbr:"") && 
         EXISTS { ?childOfChild a dbo:Monarch })

  # Ensure all conditions are met
  FILTER(?spouseMaria = ?spouseFatherPhilip)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
    # Step 1: Find the writer of the album ""Sappy""
    dbr:Sappy a dbo:Album ;
        dbo:composer ?writer .

    # Step 2: Identify band members of the writer
    ?bandMember dbo:member ?writer .
    
    # Step 3: Find R.E.M.'s associated musical artist
    dbr:R.E.M. dbo:associatedMusicalArtist ?remAssociatedArtist .

    # Step 4: Find the associated musical artist of the band member
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
    
    FILTER(?associatedArtist != ?remAssociatedArtist)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the alter ego in ""The Golden Master"" series
  ?series dbr:The_Golden_Master_series .
  ?character dbo:alterEgoOf ?series .
  ?actor dbo:portrayal ?character .

  # Find actor associated with T.I.'s album ""What You Know""
  ?album dbr:Urban_Legend_(T.I._album) .
  ?song dbo:song ?album ;
        rdfs:label ""What You Know""@en .
  ?musicVideo dbo:musicVideoOf ?song .
  ?actor2 dbo:portrayal ?musicVideo .

  # Find actor in a movie with C. Alexander Hertelendy
  ?author dbr:C._Alexander_Hertelendy .
  ?movie dbo:writer ?author ;
         dbo:starring ?actor3 .

  # Check if the same professional fits all criteria
  FILTER (?actor = ?actor2 && ?actor = ?actor3)
}
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?successor ?force ?writer 
WHERE {
  # Jean Baptist, Comte d'Arco and his war
  dbr:Jean_Baptist,_Comte_d%27Arco dbo:commander ?war .
  
  # War as a television show or societal event
  ?war rdf:type ?type1 .
  FILTER (?type1 IN (dbr:Television_show, dbr:Societal_event)) .

  # Commander of the war
  ?war dbo:commander ?commander .

  # Successor who is a politician and office holder
  ?commander dbo:successor ?successor .
  ?successor rdf:type ?type2 .
  FILTER (?type2 IN (dbr:Politician, dbr:Office_holder)) .

  # Michał Kazimierz Pac's force as an event or military conflict
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commander ?force .
  ?force rdf:type ?type3 .
  FILTER (?type3 IN (dbr:Event, dbr:Military_conflict)) .

  # Writer of George Ducas' work
  ?writer dbo:author dbr:George_Ducas .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantOfPSOEAdministration ?countryOfÁlvaroQuiros ?eventOfAnxoQuintanaLeader 
WHERE {
  # Find the tenant of the administration related to PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:head ?tenantOfPSOEAdministration .
  
  # Find the country where Álvaro Quiros resides
  dbr:Álvaro_Quiros dbo:country ?countryOfÁlvaroQuiros .

  # Find the event where Anxo Quintana was a leader
  ?event dbo:leader dbr:Anxo_Quintana ;
         rdf:type dbo:Event .
  
  BIND(?tenantOfPSOEAdministration AS ?tenantOfPSOEAdministration)
  BIND(?countryOfÁlvaroQuiros AS ?countryOfÁlvaroQuiros)
  BIND(?event AS ?eventOfAnxoQuintanaLeader)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?kimBand ?ericBand ?associatedArtist ?nickRealName WHERE {
  # Kim Wilson's band
  ?kimWilson dbo:bandMember ?kimBand .
  FILTER(STRSTARTS(LCASE(?kimWilson), ""kim wilson"")) .

  # Eric Clapton's band and associated artists
  ?ericClapton dbo:bandMember ?ericBand .
  FILTER(STRSTARTS(LCASE(?ericClapton), ""eric clapton"")) .
  OPTIONAL {
    ?associatedArtist dbo:associatedMusicalArtist ?ericClapton .
  }

  # Nick Curran's real name or persona
  ?nickCurran foaf:name ""Nick Curran"" ;
              dbp:birthDate ?birthDate ;
              dbo:bandMember ?nickBand .
  OPTIONAL {
    ?nickRealName foaf:name ?realName .
    FILTER(STRSTARTS(LCASE(?nickRealName), ""nick curran"")) .
  }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor (SAMPLE(?lassoWork) AS ?lassoWork) (SAMPLE(?shadowAlterEgo) AS ?shadowAlterEgo)
WHERE {
  # Find the work associated with ""Lasso the Moon""
  ?lassoWork dbo:title ""Lasso the Moon""@en .
  
  # Find actors of this work
  ?lassoWork dbo:actor ?actor .

  # Find the alter ego of ""The Shadow""
  ?shadowAlterEgo dbo:alternateName dbr:The_Shadow_Alter_Ego .

  # Find actors associated with this alter ego
  ?shadowAlterEgo dbo:actor ?actor .
}
GROUP BY ?actor
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthName ?producer ?band 
WHERE {
  # Find Bob Thompson's birth name and professional alias related to The Shadow
  VALUES (?bob) { dbr:Bob_Thompson_(musician) }
  ?bob dbo:birthName ?birthName .
  
  OPTIONAL {
    ?shadow dbo:alterEgo ?bob .
    ?shadow dbp:name ""The Shadow"" .
  }

  # Find the producer of Coke Studio Philippines
  ?producer dbo:profession dbr:Music_producer ;
            dbo:worksFor dbr:Coke_Studio_Philippines .

  # Find the band associated with Bob Thompson's birth name
  ?artist dbo:birthName ?birthName ;
          dbo:band ?band .
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country (GROUP_CONCAT(DISTINCT ?party1; separator="", "") AS ?partyOfRoy) 
         (GROUP_CONCAT(DISTINCT ?fatherParty; separator="", "") AS ?partyOfSofiasFather)
WHERE {
  # Daniel Elahi Galán's country
  dbr:Daniel_Elahi_Galán dbo:nationality ?country .

  # Roy Barreras' party
  dbr:Roy_Barreras dbo:memberOf ?party1 .
  
  # Sofía Petro's father and his party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?father .
    ?father dbo:memberOf ?fatherParty .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalSpouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip ;
          a dbo:RoyalFamilyMember .

  # Step 3: Determine the spouse of this parent
  ?spouse1 dbo:spouse ?parent .

  # Step 4: Identify Béla IV of Hungary
  ?belaIV a dbo:Person ;
          rdfs:label ""Béla IV of Hungary""@en .
  
  # Step 5: Find his child who is royalty
  ?child dbp:royalty ?belaIV .

  # Step 6: Determine the parent of this child
  ?parent2 dbo:child ?child .

  # Step 7: Identify Maria of Bytom and her spouse
  ?maria a dbo:Person ;
         rdfs:label ""Maria of Bytom""@en .
  
  ?spouse3 dbo:spouse ?maria .

  # Step 8: Find the father of this spouse who is royalty
  ?father dbp:parent ?spouse3 ;
          a dbo:RoyalFamilyMember .

  # Step 9: Determine the parent of this father
  ?grandParent dbo:child ?father .

  # Final step: Find the spouse of the individual identified in step 3
  ?finalSpouse dbo:spouse ?spouse1 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton's work
  dbr:Hillary_Clinton dbo:author dbr:Living_History .
  
  # Spouse of the author who is a politician and office holder
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton ;
                   a dbo:Politician ;
                   dbo:officeHolder dbr:President_of_the_United_States .

  # Commander in the war related to AIDS
  dbr:AIDS dbo:commanderInWar dbr:Bill_Clinton .

  # Owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner dbr:United_States_Government .

  # Author related to the owner
  dbr:Franklin_D._Roosevelt dbo:author ?work ;
                           a dbo:Politician .

  # Resident politician and office holder in Chappaqua, New York
  dbr:Hillary_Clinton dbo:residence dbr:Chappaqua,_New_York ;
                     a dbo:Politician .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardAwardeeBirthPlace ?authorBirthPlace WHERE {
  # Paulus Powell's birth place and its governor
  ?paulusPowell dbo:birthPlace ?birthPlaceRegion .
  FILTER (str(?birthPlaceRegion) = ""Paulus Powell"") .

  ?region dbo:governor ?governor .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Vince Gilligan's award and the awardee's birth place
  ?vinceGilligan dbo:award ?award .
  FILTER (str(?vinceGilligan) = ""Vince Gilligan"") .

  ?award dbo:recipient ?awardAwardee .
  ?awardAwardee dbo:birthPlace ?awardAwardeeBirthPlace .

  # Author of a reference to El Deafo who is American
  ?elDeafoReference dbo:author ?author .
  FILTER (str(?elDeafoReference) = ""El Deafo"") .

  ?author dbo:nationality dbr:United_States .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu's spouse
  ?spouse a dbo:Person ;
          dbo:spouse ?sawMinPhyu .
  
  FILTER(?sawMinPhyu = dbpedia:Saw_Min_Phyu) .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?spouse ;
         rdfs:label ?childLabel ;
         a ?royaltyClass .
  
  FILTER(CONTAINS(LCASE(?childLabel), ""royal"")) .

  # Step 3: Determine the predecessor of this royal child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify Min Hla Htut's parent
  ?parent a dbo:Person ;
          dbo:child ?minHlaHtut .
  
  FILTER(?minHlaHtut = dbpedia:Min_Hla_Htut_of_Pyakaung) .

  # Step 5: Find their child
  ?anotherChild dbo:parent ?parent .

  # Step 6: Identify the spouse who is royalty
  ?royalSpouse a dbo:Person ;
               dbo:spouse ?anotherChild ;
               rdfs:label ?royalSpouseLabel .
  
  FILTER(CONTAINS(LCASE(?royalSpouseLabel), ""royal"")) .

  # Step 7: Identify Saw Shwe Khet's child who is royalty
  ?sawShweKhetChild dbo:parent dbpedia:Saw_Shwe_Khet ;
                   rdfs:label ?childLabel2 ;
                   a ?royaltyClass2 .
  
  FILTER(CONTAINS(LCASE(?childLabel2), ""royal"")) .

  # Step 8: Determine the father who is royalty
  ?father a dbo:Person ;
          dbo:spouse ?sawShweKhetChild ;
          rdfs:label ?fatherLabel .
  
  FILTER(CONTAINS(LCASE(?fatherLabel), ""royal"")) .

  # Step 9: Find their spouse
  ?finalSpouse dbo:spouse ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find Hon. Mary Frances Bowes-Lyon's parent
  dbr:Mary_Frances_Bowes-Lyon dbo:parent ?parent1 .

  # Find Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's children
  dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  # Filter for the child who is a native of Middlesex
  ?child dbo:nativePlace dbr:Middlesex .

  # Find this child's parent
  ?child dbo:parent ?parent2 .

  # Check if there is a common parent
  FILTER (?parent1 = ?parent2)
  
  # Assign the common parent to the result variable
  BIND(?parent1 AS ?commonParent)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Step 1: Find Kent Allard's alter ego
SELECT ?alterEgo WHERE {
  ?kentAllard dbo:wikiPageRedirects ?alterEgo .
  ?kentAllard rdfs:label ""Kent Allard""@en .
}

# Step 2: Find the movie and work associated with Kent Allard's alter ego
SELECT ?movie ?work WHERE {
  ?alterEgo dbo:film ?movie .
  ?alterEgo dbo:book ?work .
}

# Step 3: Find the actor of ""High Society Blues""
SELECT ?actor WHERE {
  ?highSocietyBlues dbo:starring ?actor .
  ?highSocietyBlues rdfs:label ""High Society Blues""@en .
}

# Step 4: Find another work produced by this actor
SELECT ?anotherWork WHERE {
  ?actor dbo:producedAtLocation ?anotherWork .
}

# Step 5: Identify the producer of a work related to Cora Sue Collins
SELECT ?producer WHERE {
  ?coraSueCollinsWork dbo:producer ?producer .
  ?coraSueCollinsWork rdfs:label ""Cora Sue Collins""@en .
}

# Step 6: Find the professional role that links all these elements
SELECT DISTINCT ?professionalRole WHERE {
  VALUES (?entity) { ?alterEgo ?actor ?producer }
  ?entity dbo:profession ?professionalRole .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Step 1: Find Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Step 2: Find athletes who are soccer players born on that date
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthday ?birthday .

  # Step 3: Ensure they are also sports managers and soccer managers
  ?manager a dbo:SportsManager, dbo:SoccerManager ;
           dbo:player ?athlete .

  # Step 4: Find the manager of Hong Kong C
  ?organization a dbo:SportsClub, dbo:SportsTeam, dbo:SoccerClub ;
                rdfs:label ""Hong Kong C""@en .
  
  ?organization dbo:manager ?manager .

  # Linking all components to find the player
  BIND(?athlete AS ?player)
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?member dbo:member dbr:Khlyst_(band) .
  ?member rdf:type dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of that member
  ?associatedArtist dbo:associatedBand ?member .
  
  # Step 3: Determine which band or group is associated with Burnt by the Sun
  ?burntBySunAssociatedGroup dbo:associatedBand dbr:Burnt_by_the_Sun_(band) .

  # Step 4: Find a band member from the associated musical artist who belongs to the identified group
  ?finalArtist dbo:member ?burntBySunAssociatedGroup .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor who played Johnny Doughboy and their notable work
  ?actor dbo:birthName ?name .
  ?actor dbo:spouse ?spouse .
  ?spouse foaf:name ""Johnny Doughboy"" .

  OPTIONAL { 
    ?work dbo:starring ?actor .
    ?work dbo:producer ?producer .
  }

  # Find the actor associated with Kent Allard and their notable work
  ?alterEgo dbo:reference dbr:Kent_Allard_(print) .
  ?actor2 dbo:birthName ?name2 .
  ?actor2 dbo:spouse ?spouse2 .
  ?spouse2 foaf:name ?alterEgo .

  OPTIONAL { 
    ?work2 dbo:starring ?actor2 .
    ?work2 dbo:producer ?producer2 .
  }

  # Find Janet Gaynor's notable work
  dbr:Janet_Gaynor dbo:birthName ?name3 .
  ?work3 dbo:starring dbr:Janet_Gaynor .
  ?work3 dbo:producer ?producer3 .

  FILTER(?producer = ?producer2 || ?producer = ?producer3)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?awardee ?war ?commander
WHERE {
    # Step 1: Identify the force that is an event and a societal event
    ?force a dbo:MilitaryConflict ;
          rdfs:label ?forceLabel .
    
    FILTER CONTAINS(LCASE(?forceLabel), ""event"") .

    # Step 2: Find the awardee of Knight Commander of the Order of the Bath associated with this force
    ?awardee dbo:award ?orderOfTheBath .
    ?orderOfTheBath rdfs:label ""Knight Commander of the Order of the Bath"" ;
                    dbo:recipient ?awardee .

    # Step 3: Determine the military conflict (war) related to this individual
    ?awardee dbo:militaryConflict ?war .
    
    # Step 4: Identify William Bayne's reference in relation to this war
    OPTIONAL {
        ?bayne dbo:name ""William Bayne"" ;
               dbo:militaryConflict ?war .
    }

    # Step 5: Find the commander of the 30th (Cambridgeshire) Regiment of Foot during this war
    ?commander dbo:commanded ?regiment .
    ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot"" ;
              dbo:militaryConflict ?war .

    # Ensure all variables are bound to meaningful values
    FILTER(?force != dbr:Unknown && ?awardee != dbr:Unknown && ?war != dbr:Unknown && ?commander != dbr:Unknown)
}
ORDER BY ?forceLabel
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?samProfession ?bobBand ?alterEgoCharacter
WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:occupation ?samProfession .

  # Bob Thompson (musician) and his band
  ?person foaf:name ""Bob Thompson"" .
  ?person dbo:birthName ?bobBirthName .
  ?person dbo:band ?bobBand .
  FILTER EXISTS { ?person rdf:type dbr:Musician } .

  # Alter ego creation by Walter B. Gibson
  dbr:Walter_B._Gibson dbo:created ?alterEgoCharacter .
  ?alterEgoCharacter rdf:type dbo:FictionalCharacter ;
                     dbo:wikiPageWikiLink dbr:Comics .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?grandchild ?greatGrandChild WHERE {
  # Archduchess Helena of Austria's spouse who is a royalty and their child
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria ;
          rdf:type dbo:Monarch .
  ?child dbo:parent ?spouse, dbr:Archduchess_Helena_of_Austria .

  # Predecessor of this child (likely parent)
  ?predecessor dbo:child ?child .

  # Archduke Charles Louis of Austria's royal child and their grandchild
  ?royalChild dbo:parent dbr:Archduke_Charles_Louis_of_Austria ;
              rdf:type dbo:Monarch .
  ?grandchild dbo:parent ?royalChild .

  # Great-grandchild of Alexander of Württemberg who is a royalty
  ?greatGrandParent dbo:birthYear ""1804""^^xsd:gYear ;
                   dbo:deathYear ""1881""^^xsd:gYear ;
                   rdfs:label ""Alexander of Württemberg""@en .
  ?grandchildOfGreatGrandParent dbo:parent ?greatGrandParent ;
                               rdf:type dbo:Monarch .
  ?greatGrandChild dbo:parent ?grandchildOfGreatGrandParent .

  # Ensure the individuals are connected through their royal lineage
  FILTER(?predecessor = ?grandchild && ?grandchild = ?greatGrandChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2 WHERE {
  # Step 1: Find the actor of ""High Society Blues"" who is also associated with ""The Shadow""
  ?actor dbo:actorIn dbr:High_Society_Blues .
  ?actor dbo:alterEgo dbr:The_Shadow .

  # Step 2 and 3: Determine their claim to fame (a movie and a work) and its producer
  ?fame1 dbo:title ?title1 ;
         dbo:producer ?producer1 .
  FILTER EXISTS { ?fame1 rdf:type dbo:Film . }
  FILTER EXISTS { ?fame1 rdf:type dbo:Work . }

  # Step 4: Find the actor of ""Johnny Doughboy""
  ?actor2 dbo:actorIn dbr:Johnny_Doughboy .

  # Step 5: Determine their claim to fame (a work) and its producer
  ?fame2 dbo:title ?title2 ;
         dbo:producer ?producer2 .
  FILTER EXISTS { ?fame2 rdf:type dbo:Work . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the war of the awardee of the Golden Sword for Bravery in the Russian Empire
SELECT DISTINCT ?recipient ?war WHERE {
  ?award dbo:wikiPageRedirects dbr:Golden_Sword_for_Bravery .
  ?award dbo:awardedBy dbr:Russian_Empire .
  ?recipient dbo:receivedAward ?award .
  ?recipient dbo:participatedIn ?war .
}

# Query for the war of the awardee of an award numbered 25
SELECT DISTINCT ?recipient ?war WHERE {
  ?award dbo:wikiPageRedirects ?awardResource .
  FILTER regex(str(?awardResource), ""25"", ""i"") .
  ?recipient dbo:receivedAward ?award .
  ?recipient dbo:participatedIn ?war .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the actor of ""Dispatches from Elsewhere""
SELECT ?actor WHERE {
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .
}

# Query to find an actor from ""Ab Kya Hoga"" who is also a politician
SELECT DISTINCT ?actor WHERE {
  ?series rdfs:label ""Ab Kya Hoga""@en .
  ?series dbo:starring ?actor .
  ?actor dbo:occupation dbr:Politician .
}

# Query to find the alter ego in ""The Shadow (video game)""
SELECT ?character WHERE {
  ?game rdfs:label ""The Shadow (video game)""@en .
  ?game dbo:mainCharacter ?character .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardName WHERE {
  # Step 1: Find bands from New York
  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) .

  # Step 2: Identify members of these bands who are also in Uncle Murda
  ?member dbo:memberOf ?band, dbr:Uncle_Murda .

  # Step 3: Match their birth names with those of musical artists from Florida
  ?artist a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida ;
          dbp:birthday ?birthday .
  ?member dbp:birthName ?birthName .
  FILTER (?member = ?artist)

  # Step 4: Find the award associated with this awardee
  ?award dbo:recipient ?band ;
         dbo:name ?awardName .

  # Ensure the award is native to a region that is an American state and settlement
  ?region dbo:country dbr:United_States_of_America ;
          rdf:type dbo:State, dbo:Settlement .
  ?award dbo:nativeRegion ?region .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?book dbo:author dbr:Hillary_Clinton .
  ?book dbo:author ?spouse .
  ?spouse foaf:name ""Bill Clinton"" .
  
  ?gulfWar dbo:commander ?commander .
  ?commander foaf:name ""Bill Clinton"" .

  ?officeHolder dbo:residence dbr:Chappaqua,_New_York .
  ?officeHolder foaf:name ""Bill Clinton"" .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseOfFather WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is royalty.
  ?child dbo:parent dbr:Saw_Shwe_Khet ;
         a dbo:Monarch .

  # Step 2: Determine the spouse of that child's father (who must also be royalty).
  ?father dbo:spouse ?mother .
  ?father dbo:child ?child .
  ?father a dbo:Monarch .
  
  # Find the spouse of this father.
  ?father dbo:spouse ?spouseOfFather .

  # Step 3: Identify Saw Min Hla's child who is royalty.
  ?minHlaChild dbo:parent dbr:Saw_Min_Hla ;
               a dbo:Monarch .

  # Step 4: Find the predecessor of the child of the spouse identified in step 2.
  ?spouseOfFatherChild dbo:parent ?spouseOfFather .
  ?predecessor dbo:successor ?spouseOfFatherChild .
  
  # Ensure that Saw Min Phyu's spouse is royalty and find their child.
  ?minPhyuSpouse dbo:spouse dbr:Saw_Min_Phyu ;
                 a dbo:Monarch .
  ?minPhyuSpouseChild dbo:parent ?minPhyuSpouse .

  FILTER(?predecessor = ?minHlaChild)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?actor ?spouse WHERE {
  # Films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Actors in these films
  ?film dbo:starring ?actor .

  # Spouses of these actors
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```

This query attempts to find films produced by Nat Levine and the actors who starred in them, along with their spouses. However, due to the complexity and specificity of the question, additional steps would require more detailed data that may not be available directly through DBpedia.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?song ?album ?actorInAlbum ?series ?alterEgo ?actorInSeries
WHERE {
  # Find T.I.'s songs
  dbr:T.I. dbo:song ?song .
  
  # Get the album of the song
  ?song dbo:releaseDate ?date ;
        dbo:album ?album .

  # Assume actors might be involved in music videos or promotional content (hypothetical)
  OPTIONAL {
    ?album dbo:musicVideo ?video .
    ?video dbo:actor ?actorInAlbum .
  }

  # Find ""The Golden Master"" series and alter ego
  dbr:The_Golden_Master_series dbo:character ?alterEgo ;
                               dbo:actor ?actorInSeries .

  # Filter for the professional alter ego (assuming a specific character)
  FILTER(?alterEgo = dbr:Specific_Alter_Ego_Character)

}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName ?actorRole ?musicalArtist WHERE {
  # Find Cynthia Morgan's birth name
  dbr:Cynthia_Morgan dbo:birthName ?birthName .

  # Find Afeez Oyetoro's role in a movie/show
  dbr:Afeez_Oyetoro dbo:role ?actorRole .

  # Look for any musical artist associated with both entities
  OPTIONAL {
    ?musicalArtist dbo:associatedWith ?birthName .
    ?musicalArtist dbo:associatedWith ?actorRole .
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?university ?foundingDate
WHERE {
  # Find Eleonora Menicucci's alma mater
  ?eleonora dbo:name ""Eleonora Menicucci""@en .
  ?eleonora dbo:almaMater ?university .

  # Ensure the person is a politician
  ?eleonora rdf:type dbo:Politician .

  # Find Luiza Erundina's alma mater and check if it matches
  ?luiza dbo:name ""Luiza Erundina""@en .
  ?luiza dbo:almaMater ?university .

  # Get the founding date of the university
  ?university dbp:foundingDate ?foundingDate .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the main artist of ""Wizards of Waverly Place (soundtrack)""
SELECT ?artist WHERE {
    ?album dbo:title ""Wizards of Waverly Place (soundtrack)"" .
    ?album dbo:performer ?artist .
}

UNION

# Step 2: Find Stuart Tosh's associated musical artist
SELECT ?stuartArtist WHERE {
    dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartArtist .
}

UNION

# Step 3: Find David Paton's associated musical artist and its band members
SELECT ?davidArtist ?bandMember WHERE {
    dbr:David_Paton dbo:associatedMusicalArtist ?davidArtist .
    ?davidArtist dbo:member ?bandMember .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query 1: Alma Mater of Eleonora Menicucci
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
    ?person a dbo:Politician ;
            foaf:name ""Eleonora Menicucci""@en .
    ?person dbo:almaMater ?almaMater .
}

# Query 2: Establishment Date of Federal University of Paraíba
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?foundingDate WHERE {
    ?university a dbo:University ;
                foaf:name ""Federal University of Paraíba""@en ;
                dbp:foundingDate ?foundingDate .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Stuart Mcbeath Tosh's associated band
  dbr:Stuart_McBeath_Tosh dbo:musicalArtist dbr:Average_White_Band .
  
  # David Paton's associated band
  dbr:David_Paton dbo:musicalArtist dbr:Simple_Minds .

  # Writer for Wizards of Waverly Place soundtrack and their musical artist
  ?writer dbo:work dbr:Wizards_of_Waverly_Place_(soundtrack) .
  ?writer dbo:musicalArtist ?artist1 .

  # Find common musical artist
  OPTIONAL { dbr:Average_White_Band dbo:musicalArtist ?commonArtist . }
  OPTIONAL { dbr:Simple_Minds dbo:musicalArtist ?commonArtist . }
  OPTIONAL { ?artist1 rdfs:label ?commonArtistLabel FILTER(CONTAINS(LCASE(?commonArtistLabel), ""average white band"") || CONTAINS(LCASE(?commonArtistLabel), ""simple minds"")) }

  # Ensure the common artist is a musical artist
  ?commonArtist a dbo:MusicalArtist .
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaName ?timeZone ?region
WHERE {
  ?mitaka a dbo:PopulatedPlace ;
          rdfs:label ?mitakaName ;
          dbo:location dbr:Tokyo ;
          dbo:country dbr:Japan .
  
  OPTIONAL { ?mitaka dbo:timeZone ?tz . }
  BIND(COALESCE(?tz, ""Asia/Tokyo"") AS ?timeZone) # Default to Asia/Tokyo if not specified

  OPTIONAL {
    ?region a dbo:AdministrativeRegion ;
            dbo:country dbr:Japan .
    ?mitaka dbo:partOf ?region .
    ?region rdfs:label ?regionName .
  }
  
  FILTER (lang(?mitakaName) = 'en')
}
ORDER BY ?mitakaName
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild (SAMPLE(?father) AS ?fatherOfChild)
WHERE {
  # Step 1: Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Step 2: Spouse's child
  ?spouse dbo:child ?child .

  # Step 3: Grandchild who is royalty
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild rdf:type dbo:Monarch }

  # Step 4: Reference person related to William I, who is royalty and office holder
  ?reference dbo:officeHolder ?office .
  ?reference dbo:spouse dbr:William_I .
  FILTER EXISTS { ?reference rdf:type dbo:Monarch }
  
  # Step 5: Child of the reference person who is royalty
  ?reference dbo:child ?childOfReference .
  FILTER EXISTS { ?childOfReference rdf:type dbo:Monarch }

  # Step 6: Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # Step 7: Father of the child from step 5 related to parent of Roger III
  ?childOfReference dbo:father ?fatherOfChild .
  ?fatherOfChild dbo:parent ?parentOfRoger .
  
  # Ensure grandchild is the same as fatherOfChild
  FILTER (?grandchild = ?fatherOfChild)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorLabel ?deathPlaceLabel WHERE {
  VALUES ?actor { 
    dbr:Jon_Hall 
    dbr:George_Raft 
    dbr:Douglas_Fairbanks
  }
  
  ?actor dbo:birthName ?actorLabel .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?deathPlace rdfs:label ?deathPlaceLabel . FILTER (lang(?deathPlaceLabel) = 'en') }
}
```",6,6,7,2,3,2,3,28,0,4,1,0.0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?targetPerson WHERE {
  # Step 1: Alexander of Württemberg's great-grandchild
  ?alex dbo:child ?child1 .
  ?child1 dbo:child ?grandchild1 .
  ?grandchild1 dbo:child ?greatGrandchild1 .

  # Step 2: Parent of Archduchess Margarete Sophie and her grandchild who is royalty
  ?margareteSophie dbo:parent ?parentMargarete .
  ?parentMargarete dbo:child ?child2 .
  ?child2 dbo:child ?grandchild2 .
  FILTER (EXISTS { ?grandchild2 rdfs:subClassOf* <http://dbpedia.org/ontology/RoyalFamily> }).

  # Step 3: Predecessor of the child of Archduchess Helena's spouse
  ?helena dbo:spouse ?spouseHelena .
  FILTER (EXISTS { ?spouseHelena rdfs:subClassOf* <http://dbpedia.org/ontology/RoyalFamily> }).
  ?spouseHelena dbo:child ?child3 .
  ?predecessor dbo:succ ?child3 .

  # Find the intersection of these relationships
  ?greatGrandchild1 foaf:name ?targetPerson .
  FILTER (?greatGrandchild1 = ?grandchild2 && ?greatGrandchild1 = ?predecessor)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warToyotomi ?descriptionToyotomi ?warTokugawa ?descriptionTokugawa WHERE {
  # Toyotomi Hideyori and the Siege of Osaka
  dbr:Toyotomi_Hideyori dbo:spouseOrPartner ?parent .
  ?parent rdfs:label ""Hideyoshi""@en .
  
  OPTIONAL { 
    ?warToyotomi dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ""Siege of Osaka""@en .
    ?warToyotomi dbo:description ?descriptionToyotomi .
  }
  
  # Tokugawa Ieyasu and the Battle of Sekigahara
  dbr:Tokugawa_Ieyasu rdfs:label ""Matsudaira Takechiyo""@en ;
                      dbo:birthName ?koichiro .
  OPTIONAL {
    ?warTokugawa dbo:wikiPageDisambiguates ?disambiguation2 .
    ?disambiguation2 rdfs:label ""Battle of Sekigahara""@en .
    ?warTokugawa dbo:description ?descriptionTokugawa .
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?carolineSpouse ?johnSpouse WHERE {
  ?caroline a dbo:Person ;
            foaf:name ""Caroline Louise Bevan Symonds""@en .
  
  OPTIONAL { ?caroline dbo:spouse ?carolineSpouse . }
  
  ?john a dbo:Person ;
        foaf:name ""John Boxer""@en .

  OPTIONAL { ?john dbo:spouse ?johnSpouse . }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity WHERE {
  # Step 1: Identify the person who died on 1850-08-05
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  
  # Step 2: Check if Quincy Adams Gillmore was an awardee related to this person
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  ?award dbo:recipient ?person .

  # Step 3: Find the war associated with the Medal of Honor awarded to Quincy Adams Gillmore
  ?medalOfHonorAward dbo:war ?war .
  ?medalOfHonorAward dbo:recipient dbr:Quincy_Adams_Gillmore .
  
  # Step 4: Locate the birthplace of the person, ensuring it's a settlement and American
  ?person dbo:birthPlace ?birthPlaceEntity .
  ?birthPlaceEntity rdf:type dbo:Settlement .
  ?birthPlaceEntity dbo:country dbr:United_States .

}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?decedent WHERE {
  # Find Ada Jane Low's predecessor
  dbr:Ada_Jane_Low dbo:office ?office .
  ?office dbo:predecessor ?predecessor .

  # Ensure Ada Jane Low is a politician
  dbr:Ada_Jane_Low rdf:type dbo:Politician .

  # Find Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Find the person who died at this birthplace
  ?decedent dbo:deathPlace ?birthPlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceEET ?birthplaceAlumnus WHERE {
  # Find birthplaces of residents from regions using Eastern European Time (EET)
  {
    SELECT DISTINCT ?region ?birthplaceEET WHERE {
      ?region dbo:timeZone dbr:Eastern_European_Time .
      ?person dbo:nationality ?region ;
              dbo:birthPlace ?birthplaceEET .
    }
  }

  # Find birthplaces of alumni from the University of Plovdiv ""Paisius Hilendarski""
  {
    SELECT DISTINCT ?alumnus ?birthplaceAlumnus WHERE {
      ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski ;
               dbo:birthPlace ?birthplaceAlumnus .
    }
  }
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find Marcelo Sarmiento's birthday
SELECT ?marceloSarmientoBirthday WHERE {
    dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .
}

# Step 2: Find soccer players and managers born on that day
SELECT DISTINCT ?person (GROUP_CONCAT(?team; separator="", "") AS ?teams) WHERE {
    # Replace with actual birthday from step 1
    VALUES (?birthday) { ""YYYY-MM-DD""^^xsd:date } 

    ?person dbo:birthday ?birthday .
    ?person a dbo:SoccerPlayer ;
            OPTIONAL { ?person a dbo:SportsManager . }
    ?playerTeam dbo:team ?person .
    ?playerTeam rdfs:label ?team .
} GROUP BY ?person

# Step 3: Find Marty Pollio's birthday
SELECT ?martyPollioBirthday WHERE {
    dbr:Marty_Polloi dbo:birthday ?martyPollioBirthday .
}

# Step 4: Find athletes born on that day
SELECT DISTINCT ?athlete (GROUP_CONCAT(?team; separator="", "") AS ?teams) WHERE {
    # Replace with actual birthday from step 3
    VALUES (?birthday) { ""YYYY-MM-DD""^^xsd:date } 

    ?athlete dbo:birthday ?birthday .
    ?athlete a dbo:Athlete .
    ?athleteTeam dbo:team ?athlete .
    ?athleteTeam rdfs:label ?team .
} GROUP BY ?athlete

# Step 5: Find actors in ""All or Nothing: Manchester City"" who are soccer players and athletes
SELECT DISTINCT ?actor (GROUP_CONCAT(?team; separator="", "") AS ?teams) WHERE {
    ?actor dbo:spouseOrPartner dbr:All_or_Nothing:_Manchester_City .
    ?actor a dbo:SoccerPlayer ;
           a dbo:Athlete .
    ?actorTeam dbo:team ?actor .
    ?actorTeam rdfs:label ?team .
} GROUP BY ?actor
```

Note: Replace `""YYYY-MM-DD""` with the actual birthdates obtained from steps 1 and 3.",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Lesane Parish Crooks (Tupac Shakur)
  VALUES (?birthName) { ""Lesane Parish Crooks"" }
  ?tupac dbo:birthName ?birthName .
  ?tupac dbo:associatedBand dbr:Tupac_Shakur .

  # Rocky Dawuni from Central Region, Ghana
  ?rocky dbo:nationality dbr:Ghana ;
         dbo:region dbr:Central_Region_(Ghana) ;
         a dbo:MusicalArtist .

  # Neil Peart and Rush
  ?neil dbo:birthName ""Neil Ellwood Peart"" .
  ?rush dbo:member ?neil .
  ?rush a dbo:Band .

  # Collecting the associated artists
  VALUES (?artist) {
    ?tupac
    ?rocky
    ?rush
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?tvShow ?writer ?successor WHERE {
  # Commander in the Battle of Vienna and related TV show
  VALUES (?battle) { dbr:Battle_of_Vienna_1683 }
  ?battle dbo:commander ?commander .
  
  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?tvShow .
    ?tvShow dbo:genre ""Television series"" .
    FILTER EXISTS { ?tvShow dbo:societalEvent true } # Assuming societal event is a property
  }
  
  # Reference to the writer of works by George Ducas
  dbr:George_Ducas dbo:work ?work .
  ?work dbo:author ?writer .

  # Successor in Russo-Polish War (1654–1667) who is also a politician or office holder
  VALUES (?war) { dbr:Russo-Polish_War_(1654%E2%80%931667) }
  ?war dbo:commander ?successor .
  
  OPTIONAL {
    ?successor dbo:officeHolder true .
    ?successor dbo:occupation ""Politician"" .
  }

  # Linking the commander and successor
  FILTER (?commander != ?successor)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?organization WHERE {
  # Find an award associated with George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  
  # Identify the political party related to George Savage
  ?party rdf:type dbo:PoliticalParty ;
         dbo:member dbr:George_Savage_(politician) .

  # Determine the leader of that party and their residence
  ?leader dbo:positionHeld ?party ;
          dbo:residence ?residence .
  
  # Ensure the entity is both an organization and a political party
  ?organization rdf:type dbo:Organization, dbo:PoliticalParty ;
                rdfs:label ?label .

  FILTER (CONTAINS(LCASE(?label), ""award"") || CONTAINS(LCASE(?label), ""party""))
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?royalty ?parent ?commander ?event
WHERE {
  # Maria Anna of Bavaria's children
  VALUES (?mariaAnna) { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  ?mariaAnna dbo:child ?child .
  
  # Find the father of one of these children who is royalty
  ?child dbo:father ?royalty .
  FILTER EXISTS { ?royalty a dbo:Monarch . }

  # Archduke Charles Joseph of Austria's parent
  VALUES (?charlesJoseph) { dbr:Archduke_Charles_Joseph_of_Austria }
  
  ?charlesJoseph dbo:parent ?parent .

  # Commander in the war related to the 2nd Dragoon Regiment (France)
  VALUES (?dragoonRegiment) { dbr:2nd_Dragoon_Regiment_(France) }
  
  ?commander dbo:commanded ?dragoonRegiment .
  FILTER EXISTS { ?commander a dbo:MilitaryPerson . }

  # Societal events, events, and television shows
  OPTIONAL {
    ?event dbo:subject ?royalty ;
           a (dbo:SocietalEvent | dbo:Event | dbo:TelevisionShow) .
  }
  
  OPTIONAL {
    ?event dbo:subject ?commander ;
           a (dbo:SocietalEvent | dbo:Event | dbo:TelevisionShow) .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  # Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Find the child of that spouse (which should be Mariclare's child)
  ?child dbo:parent ?spouse .
  
  # Identify a person who is both:
  # - A decedent at Los Angeles
  # - The parent of a professional in Photography
  ?person dbo:deceasedPlace dbr:Los_Angeles ;
          dbo:parent ?professionalPhotographer .

  ?professionalPhotographer dbo:profession dbr:Photography .
  
  # Ensure this person is the same as the spouse's child's parent (i.e., Mariclare's spouse)
  FILTER(?spouse = ?person)

  # Find a movie where this person acted
  ?movie dbo:actor ?person .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }

  # Step 2: Find his child who is a politician and an office holder
  ?child dbo:parent ?edwardStanley .
  ?child dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(?occupation), ""politician"") .
  FILTER EXISTS { ?child dbo:officeHolder ?true }

  # Step 3: Determine the parent of this child
  ?grandParent dbo:child ?child .

  # Step 4: Identify the awardee of Commander of the Royal Victorian Order among this parent's children
  ?awardee dbo:parent ?grandParent .
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .

  # Step 5: Find the father of the politician child of an Eton College alumnus
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?politicianChild dbo:parent ?alumnus .
  FILTER CONTAINS(LCASE(?politicianChild), ""politician"") .
  ?father dbo:child ?politicianChild .

  # Step 6: Combine these relationships to find the final answer
  ?finalParent dbo:child ?awardee .
  ?finalParent dbo:child ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?role ?territory ?mayor ?adminTerritory
WHERE {
  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL {
    ?person rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
    ?person dbo:positionHeld ?role .
    ?role dbo:administrativeArea ?territory .
  }

  # Mayor of the Duchy of Schleswig
  OPTIONAL {
    ?mayor rdfs:label ""Mayor of the Duchy of Schleswig""@en .
    ?mayor dbo:positionHeld ?adminRole .
    ?adminRole dbo:administrativeArea dbr:Duchy_of_Schleswig .
  }

  # Territory administered from Copenhagen
  OPTIONAL {
    ?adminTerritory dbo:capital dbr:Copenhagen .
    ?adminTerritory dbo:administrativeArea ?territoryAdmin .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  # Step 1: Find the producer of ""Storm in a Teacup"" and their birthplace
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
  
  ?producer dbo:birthPlace ?birthPlace .

  # Step 2: Identify Apache Indian as a musical artist
  dbr:Apache_Indian dbo:musicArtist ?work .

  # Step 3: Find the writer of that work who is native to the birthplace of the producer
  ?work dbo:writer ?writer .
  
  ?writer dbo:birthPlace ?nativeBirthPlace .
  
  FILTER (?nativeBirthPlace = ?birthPlace)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team
WHERE {
  # Step 1: Find the soccer player and manager born on 1979-11-03
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  # Step 2: Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?actor .
  
  # Ensure the actor is also a soccer player and athlete
  ?actor a dbo:SoccerPlayer, dbo:Athlete .

  # Step 3: Find the team of the person from step 1
  ?person dbo:team ?team .

  # Step 4: Identify Marty Pollio's birthdate
  dbr:Marty_Pollio dbo:birthDate ?martyBirthDate .

  # Find an athlete born on Marty Pollio's birthday
  ?athlete dbo:birthDate ?martyBirthDate ;
           a dbo:Athlete .
  
  # Ensure the team of the person from step 1 is also associated with the actor in the film
  ?actor dbo:team ?team .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native 
WHERE {
  # Step 1: Identify David Luckman's residence
  dbr:David_Luckman dbo:residence ?residence .

  # Step 2: Determine the sports club managed by David Luckman
  dbr:David_Luckman dbo:managerOf ?club .
  
  # Ensure the club is a sports club and soccer club
  ?club rdf:type dbo:SportsClub ;
        dbo:sportTeamType dbr:Soccer .

  # Step 3: Connect Jamie McCunnie as a player in this club
  ?player dbo:nationality dbr:Jamie_McCunnie ;
          dbo:playsFor ?club .
  
  # Step 4: Identify the native of the residence
  ?native dbo:nativePlace ?residence .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Claude Bowes-Lyon's child
  ?child dbo:spouse|dbo:childOf dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # William Gayner's birthplace (region and country)
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region ;
              dbo:country ?country .

  # Hon. Mary Frances Bowes-Lyon's parent
  ?maryFrances dbr:Hon._Mary_Frances_Bowes-Lyon ;
               dbo:parent ?parent .

  # Connect the child of Claude Bowes-Lyon to William Gayner's birthplace and Hon. Mary Frances Bowes-Lyon's parent
  ?child dbo:birthPlace ?birthPlace .
  
  FILTER(?country != dbr:United_Kingdom) # Assuming we need a specific region/country other than UK

}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
# Query to find the actor of High Society Blues and their claim to fame that is a movie or work they produced
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorHighSocietyBlues ?claimToFameHighSocietyBlues WHERE {
  ?movie dcterms:title ""High Society Blues""@en .
  ?movie dbo:starring ?actorHighSocietyBlues .
  OPTIONAL { 
    ?actorHighSocietyBlues dbo:workProduced ?claimToFameHighSocietyBlues .
    FILTER EXISTS { ?claimToFameHighSocietyBlues a dbo:Film . }
  }
}

# Query to find the actor of Johnny Doughboy and their claim to fame that is a work they produced
SELECT ?actorJohnnyDoughboy ?claimToFameJohnnyDoughboy WHERE {
  ?movie dcterms:title ""Johnny Doughboy""@en .
  ?movie dbo:starring ?actorJohnnyDoughboy .
  OPTIONAL { 
    ?actorJohnnyDoughboy dbo:workProduced ?claimToFameJohnnyDoughboy .
  }
}

# Query to check if these two actors share a common profession
SELECT DISTINCT ?commonProfession WHERE {
  VALUES (?actor1 ?actor2) { (<actorHighSocietyBluesURI> <actorJohnnyDoughboyURI>) }
  ?actor1 dbo:profession ?prof1 .
  ?actor2 dbo:profession ?prof2 .
  FILTER(?prof1 = ?prof2)
  BIND(?prof1 AS ?commonProfession)
}
```

Note: Replace `<actorHighSocietyBluesURI>` and `<actorJohnnyDoughboyURI>` with the actual URIs obtained from the first two queries.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer ?birthName ?associatedArtist WHERE {
  # Find the writer who is also a musical artist associated with ""The Live Anthology""
  ?writer dbo:profession dbr:Writer ;
          dbo:occupation dbr:Musical_Artist ;
          dbp:work dbr:The_Live_Anthology .

  # Get the birth name of this writer
  ?writer dbp:birthdayBirthName ?birthName .

  # Find an artist from Central Region, Ghana with the same birth name
  ?artist dbo:nativePlace dbr:Central_Region,_Ghana ;
          dbp:birthdayBirthName ?birthName .

  # Ensure association with Elorm Kabu Amenyah
  ?writer dbo:associatedMusicalArtist dbr:Elorm_Kabu_Amenyah .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring dbr:Vera_Lynn .

  ?artist a dbo:Artist, dbo:MusicalArtist .
  ?artist dbo:nativePlace ?location .
  ?location rdf:type dbo:Settlement ;
            dbo:country dbr:England .

  ?parent dbo:child ?artist .
  
  ?movie dbo:author ?author .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonProducer WHERE {
  # Step 1: Actor of ""High Society Blues""
  ?actorHighSociety a dbo:Actor ;
                    dbo:film dbr:High_Society_Blues .

  # Step 2: Producer of their claim to fame (movie)
  ?fameMovieHighSociety dbo:starring ?actorHighSociety ;
                        dbo:producer ?producer1 .
  
  # Step 3: Actor of ""Johnny Doughboy""
  ?actorJohnnyDoughboy a dbo:Actor ;
                       dbo:film dbr:Johnny_Doughboy .

  # Step 4: Producer of their claim to fame (work)
  ?fameWorkJohnnyDoughboy dbo:starring ?actorJohnnyDoughboy ;
                          dbo:producer ?producer2 .
  
  # Step 5: Alter ego of Kent Allard
  dbr:Kent_Allard dbo:fictionalAlterEgo ?alterEgo .

  # Step 6: Professional in alter ego's reference
  ?professional a dbo:Professional ;
                dbo:associatedWith ?alterEgo .

  # Step 7: Common producer
  FILTER (?producer1 = ?producer2)
  BIND(?producer1 AS ?commonProducer)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?managerNativeCountry WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .

  # Sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date ;
          dbo:nationality ?nativeCountry .

  # Manager of a player in the successor of the 2006–07 VfL Bochum season (i.e., 2007–08)
  ?player a dbo:FootballPlayer ;
          dbo:team dbr:VfL_Bochum_2007%E2%80%9308_season .

  # Manager manages this player
  ?manager dbo:managedTeam ?team .
  ?team dbo:member ?player .

  # Determine the native country of the manager
  ?nativeCountry rdfs:label ?managerNativeCountry .
  
  FILTER(LANG(?managerNativeCountry) = ""en"")
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  # Step 1: Identify Nate Newton's band that is both a musical artist and an organization
  dbr:Nate_Newton dbo:bandMember ?nateBand .
  ?nateBand rdf:type dbo:MusicalArtist ;
            rdf:type dbo:Organization .

  # Step 2: Find the producer of ""Nothing to Gein"" who is also an organization and a group
  dbr:Nothing_to_Gein dbo:producer ?producer .
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Group .

  # Step 3: Identify common band member between Nate Newton's band and the producer's bands
  ?commonBandMember dbo:bandMember ?nateBand ;
                    dbo:bandMember ?producerBand .
  ?producerBand dbo:musicalArtist ?producer .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Shirley Stoler and her profession
  dbr:Shirley_Stoler dbo:occupation ?profession .

  # Children of Shirley Stoler
  dbr:Shirley_Stoler dbo:child ?child .

  # Award associated with New York (state) that is also a settlement
  ?award dbo:location dbr:New_York_City ;
         rdf:type dbo:Award .

  # Awardee native to the award's location
  ?awardee dbo:nationality dbc:United_States ;
           dbo:awardReceived ?award .
  
  # Ensure the awardee is from New York City (considered a settlement)
  ?awardee dbo:birthPlace dbr:New_York_City .

  # Filter for American children
  ?child dbo:nationality dbc:United_States .
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?tvShow ?militaryConflict ?writer
WHERE {
  # King John III Sobieski as commander in the Battle of Vienna
  dbr:King_John_III_of_Poland dbo:commanderOf dbr:Battle_of_Vienna .

  # Television show or societal event named after him
  OPTIONAL { 
    ?tvShow dbo:name ""King John III""@en .
    ?tvShow dbo:subject dbr:King_John_III_of_Poland .
  }

  # Successor in a political role
  OPTIONAL {
    ?successor dbo:succeededBy dbr:King_John_III_of_Poland .
    ?successor dbo:occupation dbr/Politician .
  }

  # Military conflict involving Michał Kazimierz Pac
  OPTIONAL {
    ?militaryConflict dbo:participant dbr:Mikolaj_Kazimierz_Pac .
  }

  # Reference to the writer of the work of George Ducas
  OPTIONAL {
    ?work dbo:author dbr:George_Ducas .
    ?writer dbo:relatedTo ?work .
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?award ?nativePlace ?child WHERE {
  # Find awards associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbo:associatedAward ?award .
  
  # Ensure the award's native place is an American settlement
  ?award dbo:nativePlace ?nativePlace ;
         dbo:country dbr:United_States_of_America .
  
  # Find Shirley Stoler and her children
  wd:Q1234567 dbo:child ?child . # Replace Q1234567 with the actual Wikidata ID for Shirley Stoler
  
  # Check if the child is associated with the award
  ?child dbo:awardReceived ?award .
}
```

Note: The query assumes placeholders like `wd:Q1234567` for Shirley Stoler's Wikidata ID, which should be replaced with the correct identifier. Additionally, the exact properties and relationships might need adjustment based on available data in DBpedia or Wikidata.",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?force ?birthPlace ?personDeceased WHERE {
  # Amasa Tracy's involvement in a war
  dbr:Amasa_Tracy dbo:militaryConflict ?war .
  
  # Quincy Adams Gillmore and his award
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  
  # Force commanded by Quincy Adams Gillmore
  OPTIONAL { 
    ?force dbo:commander dbr:Quincy_Adams_Gillmore .
  }
  
  # Person deceased on 1850-08-05
  ?personDeceased dbp:deathDate ""1850-08-05""^^xsd:date ;
                  dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is an American settlement
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .
  
  # Linking the war, force, and person deceased
  FILTER(?war = ?force)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardeeBirthplace ?actorBirthplace WHERE {
  # Part 1: Birthplace of the awardee of Sangeet Natak Akademi Fellowship
  {
    SELECT DISTINCT ?awardee ?awardeeBirthplace WHERE {
      ?awardee dbo:award <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
      OPTIONAL { ?awardee dbp:birthPlace ?awardeeBirthplace . }
    } LIMIT 1
  }

  # Part 2: Birthplace of an actor in a movie with Dipankar De
  {
    SELECT DISTINCT ?actor ?actorBirthplace WHERE {
      ?movie dbo:starring dbr:Dipankar_De .
      ?movie dbo:starring ?actor .
      FILTER(?actor != dbr:Dipankar_De)
      OPTIONAL { ?actor dbp:birthPlace ?actorBirthplace . }
    } LIMIT 1
  }
}
```",5,7,6,3,2,3,2,20,0,2,2,0.0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?playerName WHERE {
  # Find the nickname of the Russia national football team
  dbr:Russia_national_football_team dbo:nickname ?nickname .

  # Find players who are members of the Russia national football team and have a writing role
  ?player dbo:member dbr:Russia_national_football_team ;
          dbo:occupation dbr:Writer .
  
  # Check if these players have written works with Aleksandr Filimonov
  ?work dbo:author ?player ;
        dbo:author dbr:Aleksandr_Filimonov .

  # Return the nickname and player name
  BIND(?player rdfs:label AS ?playerName)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?royalFigure WHERE {
  # Find Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  dbr:The_Shadow dbo:realName dbr:Richard_Grayson .

  # Richard Grayson is the alter ego
  BIND(dbr:Richard_Grayson AS ?alterEgo)

  # Find Yeshaq I's children
  dbr:Yeshaq_I dbo:child ?yeshaqChild .

  # Find the child of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:child ?baedaChild .

  # Find the father of Baeda Maryam I's child (grandfather)
  ?baedaChild dbo:parent ?grandfather .

  # The royal figure is a parent to this grandfather and a child of Yeshaq I
  ?yeshaqChild dbo:parent ?royalFigure .
  ?royalFigure dbo:child ?grandfather .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?psoeLeader ?spainHeadOfState
WHERE {
  # Find the leader of the Spanish Socialist Workers' Party (PSOE)
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?psoeLeader .

  # Find the head of state or government of Spain
  dbr:Spain dbo:headOfGovernment ?spainHeadOfState .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?royaltyChild ?realName
WHERE {
  # Find Martin of Aragon's father
  ?martin dbo:father ?father .
  FILTER(STR(?martin) = ""Martin_of_Aragon"")

  # Check if the father has any children who are royalty
  ?father dbo:child ?child .
  OPTIONAL { 
    ?child dbo:monarch ?royaltyChild .
    FILTER(EXISTS { ?royaltyChild a dbo:Monarch })
  }

  # Find Peter IV of Aragon's real name
  ?peterIV foaf:name ?realName .
  FILTER(STR(?peterIV) = ""Peter_IV_of_Aragon"")
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?athlete WHERE {
  # Find the war associated with Maria I of Portugal that is also a TV show
  ?war dbo:wikiPageRedirects dbr:Maria_I_of_Portugal .
  ?war dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ""War""@en .
  
  # Ensure the war has a television representation
  OPTIONAL { 
    ?tvShow dbo:subject ?war .
    ?tvShow rdf:type dbr:Television_series .
  }
  
  # Identify Poland as the country of residence for Łódź
  dbr:Łódź dbo:country dbr:Poland .

  # Find an athlete native to Łódź, Poland
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź .
  
  FILTER EXISTS { ?tvShow . } # Ensure there is a TV show related to the war
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?deathPlace ?territoryAdministered ?mayorOfSchleswig ?birthPlace
WHERE {
  # Christian Ditlev Ammentorp Hansen's death place
  ?hansen dbo:deathPlace ?deathPlace .
  FILTER EXISTS { ?deathPlace rdf:type dbp:Settlement }

  # Territory administered from the death place
  ?administeringEntity dbo:administers ?territoryAdministered .
  ?administeringEntity dbo:location ?deathPlace .

  # Duchy of Schleswig's administration and mayor
  ?schleswig dbo:mayor ?mayorOfSchleswig .
  FILTER (str(?schleswig) = ""Duchy_of_Schleswig"")

  # Prince Christian's birthplace
  ?princeChristian dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace rdf:type dbp:Settlement }
  FILTER (str(?princeChristian) = ""Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck"")
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelPartyLeaderOffice ?manuelConflictRole
WHERE {
  # Miguel Maura's political party and its leader's office
  dbr:Miguel_Maura dbo:member ?party .
  ?party dbo:leader ?leader .
  ?leader dbo:office ?miguelPartyLeaderOffice .

  # Manuel Pinto da Costa's military conflict role
  dbr:Manuel_Pinto_da_Costa dbo:commanderOf ?conflict .
  ?conflict dbo:role ?manuelConflictRole .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?birthPlace ?region 
WHERE {
  ?award dbo:reference dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:awardee ?entity .
  ?entity dbo:nationality dbr:Japan .
  ?entity dbo:birthPlace ?birthPlace .
  ?region dbo:timeZone dbr:Japan_Standard_Time .
  ?entity dbo:reference ?show .
  ?show rdf:type dbo:TelevisionShow .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Find the award received by Ian Gregson
  ?award dbo:recipient ?ianGregson .
  ?ianGregson foaf:name ""Ian Gregson""@en .

  # Step 2: Find the movie associated with this award
  ?award dbo:subject ?movie .
  
  # Step 3: Identify Linda Bruckheimer's birth name and spouse
  ?lindaBruckheimer foaf:name ""Linda Bruckheimer""@en ;
                   foaf:birthday ?birthDate .
  ?lindaBruckheimer foaf:nick ?birthName .
  ?spouse dbo:spouse ?lindaBruckheimer .

  # Step 4: Find the producer of the movie
  ?movie dbo:producer ?producer .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify Robert Lamar Thompson as Kid Rock
  dbr:Kid_Rock a dbo:MusicalArtist ;
               foaf:name ""Robert Lamar Thompson""@en .

  # Find bands associated with Kid Rock
  OPTIONAL { 
    ?band dbo:member dbr:Kid_Rock .
  }
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band ?nickCurran WHERE {
  # Step 1: Identify the person born on March 30, 1945, who is a musical artist.
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Determine which band this person was a member of.
  OPTIONAL { ?bandMember dbo:member ?person .
             ?bandMember dbo:name ?band . }

  # Step 3: Check for any reference to The Fabulous Thunderbirds.
  OPTIONAL { ?reference dbo:subject ?person ;
                      dbo:object dbr:The_Fabulous_Thunderbirds . }

  # Step 4: Identify the associated musical artist known as Nick Curran.
  OPTIONAL { ?nickCurran dbo:name ""Nick Curran"" .
              ?association dbo:associatedMusicalArtist ?person . }
}
```",7,9,8,3,3,3,3,71,0,2,1,0.0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify the producer of ""Lotus"" by R.E.M.
SELECT ?producer WHERE {
    dbr:Lotus_(R.E.M._song) dbo:producer ?producer .
}

# Step 2: Check if the producer is an organization and a band/group
SELECT DISTINCT ?producer WHERE {
    ?producer rdf:type dbo:MusicalArtist ;
              rdf:type dbo:Organization ;
              rdf:type dbo:Band .
}

# Step 3: Find associated musical artist of the producer
SELECT DISTINCT ?associatedArtist WHERE {
    ?producer dbo:associatedBand ?associatedArtist .
}

# Step 4: Identify the writer of the album ""Sappy""
SELECT ?writer WHERE {
    dbr:Sappy_(album) dbo:composer ?writer .
}

# Step 5: Check if the writer is a band member
SELECT DISTINCT ?writer WHERE {
    ?writer rdf:type dbo:MusicalArtist ;
            dbo:bandMember ?band .
}

# Step 6: Find associated musical artist of the writer
SELECT DISTINCT ?associatedArtist WHERE {
    ?writer dbo:associatedBand ?associatedArtist .
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGoldenSwordAwardee ?warOf25thAnniversaryAwardee ?birthPlaceEntity WHERE {
  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .

  # Find awardees of the Golden Sword for Bravery and their associated wars
  ?goldenSwordAwardee dbo:award ""Golden Sword for Bravery""@en .
  ?goldenSwordAwardee dbo:participatedInWar ?warOfGoldenSwordAwardee .

  # Find awardees of the 25th anniversary award and their associated wars
  ?twentyFifthAnniversaryAwardee dbo:award ""25th Anniversary Award""@en .
  ?twentyFifthAnniversaryAwardee dbo:participatedInWar ?warOf25thAnniversaryAwardee .

  # Ensure we are considering the same entity for both awards if applicable
  OPTIONAL { ?goldenSwordAwardee = ?twentyFifthAnniversaryAwardee }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor who played Lamont Cranston (The Shadow)
  ?shadowActor dbo:character dbr:Lamont_Cranston .
  
  # Movie featuring both the actor and Douglas Coupland
  ?movie dbo:starring ?shadowActor ;
         dbo:starring dbr:Douglas_Coupland .

  # Actor associated with T.I.'s album ""Paper Trail""
  ?album dbr:Paper_Trail ;
         dbo:artist dbr:T.I. ;
         dbo:track ?song .
  
  ?song dbo:lyricsBy ?actor .

  FILTER(?shadowActor = ?actor)
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Rodney Lees' award awardee
  ?awardAwardee dbo:recipient ?rodneyLees .
  
  # Step 2: Find the parent of this awardee
  ?awardAwardee dbo:parent ?parent .

  # Step 3: Identify Eton College alumnus and their child's politician parent
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?child dbo:parent ?politicianParent .
  ?child dbo:parent ?alumnus .
  ?politicianParent a dbo:Politician .

  # Step 4: Find Edward Stanley, 17th Earl of Derby's politician office holder parent
  ?edwardStanley dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?officeHolderParent dbo:parent ?edwardStanley .
  ?officeHolderParent a dbo:Politician ;
                     dbo:officeHolder ?office .

  # Step 5: Combine information
  FILTER (?parent = ?politicianParent && ?parent = ?officeHolderParent)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant1 ?tenant2 ?tenant3 WHERE {
  # Leader of the 2003 Madrid City Council Election
  ?leader dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .
  ?leader dbo:residence ?office1 .
  ?office1 dbp:tenant ?tenant1 .

  # Commander in Central African Republic Civil War
  ?commander dbo:occupation dbr:Politician ;
             dbo:memberOf dbr:Central_African_Republic_Civil_War .
  ?commander dbo:office ?office2 .
  ?office2 dbp:tenant ?tenant2 .

  # Leader of the Party of Miguel Maura
  ?party dbo:leader dbr:Miguel_Maura ;
         a dbo:PoliticalParty .
  ?party dbo:headquarters ?office3 .
  ?office3 dbp:tenant ?tenant3 .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalEntity WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  ?spouse dbo:spouse dbr:Constance_of_Burgundy .
  
  # Step 2: Find the child of that spouse
  ?child1 dbo:parent ?spouse .
  
  # Step 3: Find the grandchild (child of the child) and ensure they are royalty
  ?grandchild dbo:parent ?child1 .
  ?grandchild a dbo:Monarch .

  # Step 4: Identify the reference related to William I who is both royalty and an office holder
  ?reference dbo:officeHolder dbr:William_I_of_Wales ;
             a dbo:Monarch .

  # Step 5: Find the child of this reference and ensure they are royalty
  ?child2 dbo:parent ?reference .
  ?child2 a dbo:Monarch .

  # Step 6: Identify Roger II of Sicily's parent
  ?rogerParent dbo:child dbr:Roger_II_of_Sicily .

  # Step 7: Find the child of that parent and ensure they are royalty
  ?parentChild dbo:parent ?rogerParent .
  ?parentChild a dbo:Monarch .

  # Final step: Ensure the grandchild from Constance's spouse matches either child2 or parentChild
  VALUES (?finalEntity) { ?grandchild ?child2 ?parentChild }
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationEvent ?country
WHERE {
  # Anxo Quintana's role in an administration
  dbr:Anxo_Quintana dbo:officeHolder ?administrationEvent .
  
  # The administration event is linked to a country
  ?administrationEvent dbo:location ?country .

  # Ensure the administration is related to Spain or Spanish entities
  FILTER EXISTS { ?administrationEvent dbo:country dbr:Spain . }

  # Ensure Anxo Quintana's citizenship and party affiliation are Spanish
  dbr:Anxo_Quintana dbo:nationality dbr:Spanish_citizenship .
  ?party dbo:member dbr:Anxo_Quintana ;
         dbo:politicalAffiliation dbr:Spanish_Socialist_Workers'_Party .

  FILTER EXISTS { ?party dbo:country dbr:Spain . }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the person born as $pacely
  VALUES (?pacely) { 
    dbr:Kanye_West # Assuming Kanye West was born as $pacely
  }
  
  # Find the person born as Joey B
  VALUES (?joeyB) { 
    dbr:Joey_Badass # Assuming Joey Badass was born as Jo-Vaughn Virginie Scott
  }

  # Rod Argent is known for The Zombies
  VALUES (?rodArgent) {
    dbr:Rod_Argent
  }
  
  # Find musical associations for $pacely (Kanye West)
  ?pacely dbo:associatedBand ?band1 .
  ?band1 dbo:genre ?genre1 .

  # Find musical associations for Joey B (Joey Badass)
  ?joeyB dbo:associatedBand ?band2 .
  ?band2 dbo:genre ?genre2 .

  # Find musical associations for Rod Argent
  ?rodArgent dbo:associatedBand ?band3 .
  ?band3 dbo:genre ?genre3 .

  # Return the associated artists/bands
  VALUES (?artist) {
    ?band1
    ?band2
    ?band3
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeRegion ?bandMember
WHERE {
  # Step 1: Find the native region of the award ""Coro de la Pontificia Universidad Católica de Puerto Rico""
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativeCountry ?nativeRegion .
  
  # Ensure the region is a state and settlement in America
  ?nativeRegion rdf:type dbo:State ;
                dbo:country dbr:United_States_of_America .

  # Step 2: Find Ackquille Jean Pollard (Bobby Shmurda) born in this region
  dbr:Bobby_Shmurda foaf:name ""Ackquille Jean Pollard"" ;
                    dbo:birthPlace ?nativeRegion .

  # Step 3: Identify a GS9 member who is an artist and musical artist
  ?gs9Member rdf:type dbo:MusicalArtist, dbo:Artist ;
             dbo:memberOf dbr:GS9 .
  
  # Step 4: Find the associated musical artist of this GS9 member
  ?associatedArtist dbo:associatedBandMember ?gs9Member .

  # Step 5: Retrieve a band member of this associated musical artist
  ?bandMember dbo:associatedBandMember ?associatedArtist .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  
  # Actor in ""Ab Kya Hoga""
  ?abKyaHoga dbr:Ab_Kya_Hoga ;
             dbo:actor ?person .

  # Actor with Richard E. Grant
  ?grantWork dbr:Richard_E._Grant ;
             dbo:actor ?grantPerson .
  ?grantWork dbo:actor ?person .

  # Politician
  ?person dbo:occupation dbr:Politician .

  # Alter ego of The Shadow is Lamont Cranston
  ?shadowCharacter dbr:The_Shadow ;
                  dbo:alterEgo dbr:Lamont_Cranston .
  ?person dbo:character ?shadowCharacter .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardNativePlace WHERE {
  ?person dbo:birthPlace dbr:New_York_(state) .
  ?parent dbo:profession dbr:Actress .
  ?person dbo:parent ?parent .
  ?award dbo:recipient ?person .
  ?award dbo:nativePlace ?nativePlace .
  
  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativePlace a dbo:Settlement } &&
          EXISTS { ?nativePlace dbo:country dbr:United_States_of_America })

  BIND(?nativePlace AS ?awardNativePlace)
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?deathPlaceSettlement ?konstantinosWar ?nationalPartyLeaderWar
WHERE {
  # Antonios Varthalitis's death place that is a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Konstantinos Ventiris's war
  dbr:Konstantinos_Ventiris dbo:participatedIn ?konstantinosWar .

  # Leader of National Party of Greece and their associated war
  {
    SELECT DISTINCT ?leader ?nationalPartyLeaderWar WHERE {
      ?leader foaf:name ?name .
      FILTER regex(?name, ""National Party of Greece"", ""i"") .
      ?leader dbo:participatedIn ?nationalPartyLeaderWar .
    }
  }

  # Ensure the death place is the same for all
  BIND(?deathPlace AS ?commonDeathPlace)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?birthplace WHERE {
  # Step 1: Identify the person who died on 1850-08-05
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (str(?deathDate) = ""1850-08-05""^^xsd:date)

  # Step 2: Determine their birthplace
  ?person dbo:birthPlace ?birthplace .

  # Step 3: Check if the birthplace is an American settlement
  ?birthplace a dbo:Settlement ;
              dbp:country dbr:United_States_of_America .

  # Step 4: Identify Medal of Honor awardees involved in wars
  ?medalOfHonorAwardee dbo:recipient ?person .
  ?medalOfHonorAwardee dbo:conferralDate ?date ;
                      dbo:awardedFor ?event .
  ?event a dbo:MilitaryConflict .

  # Step 5: Find Gillmore Medal awardees and their forces
  ?gillmoreMedalAwardee dbo:recipient ?person .
  ?gillmoreMedalAwardee dbo:force ?force .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?partyMember ?personWithParentBirthName
WHERE {
  # Spouse of Roger Pryor (actor)
  ?rogerPryor a dbo:Actor ;
              foaf:name ""Roger Pryor"" .
  ?rogerPryor dbo:spouse ?spouse .

  # Ruling party member in the landmark at elevation 20.116800000000001347
  ?landmark dbp:elevation ""20.1168""^^xsd:float ;
            dbo:country ?country .
  ?country dbo:rulingParty ?rulingParty .
  ?partyMember dbo:memberOf ?rulingParty .

  # Person born as the birth name of the parent of Tisha Sterling
  ?tishaSterling foaf:name ""Tisha Sterling"" .
  ?parent dbo:child ?tishaSterling ;
          foaf:name ?birthName .
  ?personWithParentBirthName foaf:name ?birthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Part 1: Find musical artist associated with Stuart Mcbeath Tosh
  ?person foaf:givenName ""Stuart"" .
  ?person foaf:surname ""Mcbeath Tosh"" .
  ?person dbo:musicalArtist ?artist1 .

  # Part 2: Find writer of Wizards of Waverly Place soundtrack who is also a musical artist and band member of The Alan Parsons Project
  ?soundtrack dbo:title ""Wizards of Waverly Place (soundtrack)"" .
  ?soundtrack dbo:writer ?person2 .
  ?person2 dbo:musicalArtist ?artist2 .
  ?person2 dbo:bandMember <http://dbpedia.org/resource/The_Alvin_Parsons_Project> .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?laurynHillBirthplaceLabel ?ethanIversonBirthplaceLabel
WHERE {
  # Lauryn Hill's birthplace
  dbpedia:Lauryn_Hill dbo:birthPlace ?laurynHillBirthplace .
  ?laurynHillBirthplace rdfs:label ?laurynHillBirthplaceLabel .

  # Ethan Iverson's birthplace
  dbpedia:Ethan_Iverson dbo:birthPlace ?ethanIversonBirthplace .
  ?ethanIversonBirthplace rdfs:label ?ethanIversonBirthplaceLabel .
  
  FILTER (lang(?laurynHillBirthplaceLabel) = 'en')
  FILTER (lang(?ethanIversonBirthplaceLabel) = 'en')
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Step 1: Identify Richard Grant Esterhuysen
  ?person foaf:name ""Richard Grant Esterhuysen""@en .
  
  # Step 2: Find his professional alias in a TV show/movie
  ?alias dbo:profession dbr:Actor ;
         dbo:basedOn dbr:The_Shadow_(video_game) .

  # Step 3: Connect the alter ego to The Shadow (video game)
  ?tvShow dbo:genre dbr:Action_adventure_television_series ;
          dbo:starring ?alias .
  
  # Ensure it's a TV show that is also a movie
  ?movie dbo:basedOn ?tvShow .

  # Step 4: Confirm the profession as an actor
  ?person dbo:profession dbr:Actor .

  # Linking all together to find the actor
  ?alias foaf:name ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?deathPlaceSettlement ?olafAdministers ?princeChristianAdministers
WHERE {
  # Christian Ditlev Ammentorp Hansen's death place as a settlement
  ?hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbp:Settlement .

  # Olaf I of Denmark's administered territories
  ?olaf dbo:administers ?olafAdministers .

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birthplace and administration
  ?princeChristian dbo:birthPlace ?princeBirthPlace .
  ?princeChristian rdf:type dbo:Monarch .
  ?princeChristian dbo:administers ?princeChristianAdministers .

}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
# Step 1: Find the producer of ""A Star Is Born"" (1937)
SELECT ?producer WHERE {
    ?film rdf:type dbo:Film .
    ?film rdfs:label ""A Star Is Born""@en .
    ?film dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 1937) .
    ?film dbo:productionCompany ?company .
    ?company dbo:president ?producer .
}

# Step 2: Find the actor of ""Johnny Doughboy""
SELECT ?actor WHERE {
    ?film rdf:type dbo:Film .
    ?film rdfs:label ""Johnny Doughboy""@en .
    ?film dbo:starring ?actor .
}

# Step 3: Determine the claim to fame of this actor
SELECT DISTINCT ?famousWork WHERE {
    ?actor dbo:birthName ?name .
    ?actor dbo:profession dbr:Actor .
    ?actor dbo:notableWorks ?work .
    FILTER(?actor = <URI_of_actor_from_step_2>) # Replace with actual URI from step 2
}

# Step 4: Identify the fictional character linked to Kent Allard
SELECT ?character WHERE {
    ?person rdfs:label ""Kent Allard""@en .
    ?person dbo:fictionalCharacter ?character .
}

# Step 5: Find the producer of the claim to fame work
SELECT ?producer WHERE {
    ?work rdf:type dbo:Film .
    FILTER(?work = <URI_of_famous_work_from_step_3>) # Replace with actual URI from step 3
    ?work dbo:productionCompany ?company .
    ?company dbo:president ?producer .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?commanderOffice ?tenant
WHERE {
  # Office of the leader of Miguel Maura's party
  dbr:Miguel_Maura dbo:politicalParty ?party .
  ?leader dbo:positionHeld ?party ;
          dbo:office ?officeLeader .

  # Office of the commander in Central African Republic Civil War
  ?commander dbo:commanderRole ?war ;
             dbo:office ?commanderOffice .
  FILTER(CONTAINS(LCASE(?war), ""central african republic civil war""))

  # Tenant of Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  ?tenant dbo:occupantOf ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerName ?teamName WHERE {
  # Step 1: Identify the manager born on 1968-08-26 and native of West Germany
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .

  # Step 2: This person manages a player in the successor team of 2006–07 VfL Bochum season
  ?person dbo:managerOf ?player .
  ?player dbo:playsFor ?club .
  
  # Identify the successor of the 2006-07 VfL Bochum season
  ?successorSeason a dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason ;
                   dbo:succeededBy dbr:2006%E2%80%9307_VfL_Bochum_season .

  # The club must be part of the successor season
  ?club dbo:participatedIn ?successorSeason .
  
  # Step 3: Find the team this manager manages in the identified successor season
  ?person dbo:managerOfTeam ?team ;
          dbo:manages ?teamName .

  # Ensure the team is part of the successor season
  ?team dbo:participatedIn ?successorSeason .
  
  # Get the name of the manager and the team
  ?person rdfs:label ?managerName .
  FILTER (lang(?managerName) = 'en')
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
    # The alter ego of The Shadow
    dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
    
    # Cora Sue Collins' claim to fame, ""The Shadow""
    dbr:Cora_Sue_Collins dbo:creatorOf dbr:The_Shadow_(novel_series) .

    # The movie ""High Society Blues"" and its actor
    dbr:High_Society_Blues dbo:starring dbr:George_Hamilton .
    
    # The 1994 film ""The Shadow""
    dbr:The_Shadow_(film) dbo:starring dbr:George_Hamilton ;
        dbo:producer ?producer .

    FILTER EXISTS { ?producer dbo:produced dbr:The_Shadow_(novel_series) }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the resource that is both a film and an album named ""Lasso the Moon""
  ?work rdfs:label ""Lasso the Moon""@en .
  FILTER(CONTAINS(str(?work), ""film"") && CONTAINS(str(?work), ""album""))

  # Get actors involved in this work
  ?work dbo:actor ?actor .

  # Ensure the actor is professional in a field related to Frédéric Bouraly's profession
  OPTIONAL {
    ?actor dbo:profession dbr:Fredric_Bouraly .
  }

  FILTER EXISTS { ?actor dbo:profession ?prof }
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tripleXWar ?tripleXCommander ?bayneConflict ?bayneForce ?calderEvent ?societalEvent
WHERE {
  # Find the military conflict involving ""The Triple X's""
  ?tripleXWar dbo:militaryConflict [
    dbo:commander ?tripleXCommander .
  ] .

  # Find the military force associated with William Bayne during a specific conflict
  dbr:William_Bayne_(Royal_Navy_officer) dbo:memberOfMilitaryForce ?bayneForce ;
                                         dbo:militaryConflict ?bayneConflict .

  # Identify the event and societal event related to Robert Calder
  dbr:Robert_Calder dbo:event ?calderEvent .
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedTo ?calderEvent .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthCountry ?institution 
WHERE {
  # Find Little Hat Jones' birthplace and check if it is a country
  ?person rdfs:label ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  BIND(?birthPlace AS ?birthCountry)

  # Find an institution associated with Brian Kemp's administration
  ?kemp rdfs:label ""Brian Kemp""@en .
  ?kemp dbo:office ?office .
  ?office dbo:head ?kemp ;
          dbo:department ?institution .
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistStuart ?artistDavid ?artistBilly WHERE {
  # Find the band associated with Stuart Mcbeath Tosh
  OPTIONAL { 
    ?stuart dbo:memberOf ?bandStuart .
    ?bandStuart rdfs:label ?artistStuart .
    FILTER(CONTAINS(LCASE(?artistStuart), ""average white band""))
  }

  # Find the band associated with David Paton
  OPTIONAL {
    ?david dbo:memberOf ?bandDavid .
    ?bandDavid rdfs:label ?artistDavid .
    FILTER(CONTAINS(LCASE(?artistDavid), ""simple minds"") || CONTAINS(LCASE(?artistDavid), ""the alan parsons project""))
  }

  # Find the band associated with Billy Lyall
  OPTIONAL {
    ?billy dbo:memberOf ?bandBilly .
    ?bandBilly rdfs:label ?artistBilly .
    FILTER(CONTAINS(LCASE(?artistBilly), ""bay city rollers""))
  }
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?conflict ?tvShow ?country 
WHERE {
  # Find the military conflict associated with Maria I of Portugal
  ?person dbo:birthPlace dbr:Maria_I_of_Portugal .
  ?person dbo:associatedWith ?conflict .
  
  # Check if this conflict is depicted in a TV show
  OPTIONAL { ?tvShow dbo:depicts ?conflict . }
  
  # Find Dawid Olejniczak's country of residence
  ?olejniczak foaf:name ""Dawid Olejniczak"" .
  ?olejniczak foaf:based_near ?country .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild WHERE {
  # Step 1: Identify a child of Béla IV of Hungary
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Step 2: Find the grandchild (child of the child) who is royalty
  ?grandchild dbo:parent ?belavChild .
  ?grandchild rdf:type dbo:Monarch .

  # Step 3: Identify Philip I, Prince of Taranto's father and his spouse
  ?philipFather dbo:child dbr:Philip_I,_Prince_of_Taranto .
  ?spouseOfPhilipsFather dbo:spouse ?philipFather .

  # Step 4: Find the parent of this spouse who is royalty
  ?parentOfSpouse dbo:child ?spouseOfPhilipsFather .
  ?parentOfSpouse rdf:type dbo:Monarch .

  # Step 5: Identify the spouse of Maria of Bytom
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .

  # Step 6: Find the father of this spouse who is royalty
  ?fatherOfMariaSpouse dbo:child ?mariaSpouse .
  ?fatherOfMariaSpouse rdf:type dbo:Monarch .

  # Ensure the grandchild from step 2 matches the final condition
  FILTER (?grandchild = ?parentOfSpouse && ?parentOfSpouse = ?fatherOfMariaSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Saw Min Phyu's spouse and their royal child
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  ?royalChild dbo:child ?spouse ;
              a dbo:Royal .

  # Step 2: Parent of Min Hla Htut and their child
  ?parent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .
  ?childOfParent dbo:child ?parent .

  # Step 3: Father of Myat Hpone Pyo who is royalty and his spouse
  ?royalFather dbo:father dbr:Myat_Hpone_Pyo ;
               a dbo:Royal .
  ?spouseOfRoyalFather dbo:spouse ?royalFather .

  # Find the predecessor of the royal child from step 1 that matches the individuals from steps 2 and 3
  ?predecessor dbo:predecessor ?royalChild .
  
  FILTER (?childOfParent = ?royalChild && ?spouseOfRoyalFather = ?royalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show ?description WHERE {
  VALUES ?cityAlias { ""The Heart of Pakistan"" ""Paris of the East"" ""City of Gardens"" ""City of Literature"" }
  
  ?london dbr:Lahore rdfs:label ?cityLabel .
  FILTER(CONTAINS(LCASE(?cityLabel), LCASE(?cityAlias)))
  
  OPTIONAL {
    ?show dbo:subject ?london ;
          dbo:producer ?anumtaQureshi .
    ?anumtaQureshi rdfs:label ""Anumta Qureshi"" .
    ?show dbo:description ?description .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:child ?parent .
  
  # Parent's father (Dorothea's grandfather)
  ?parent dbo:father ?grandfather .

  # Grandfather was a commander in the Siege of Padua and royalty
  ?grandfather dbo:occupation dbr:Commander_in_the_Siege_of_Padua ;
               a dbo:Monarch .
  
  # Grandfather is also father of Catherine of Austria, Queen of Portugal
  ?grandfather dbo:child dbr:Catherine_of_Austria,_Queen_of_Portugal .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Duke Philipp of Württemberg's child's child
  ?philippChild a dbo:Person ;
                dbo:childOf dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?philippGrandchild a dbo:Person ;
                     dbo:childOf ?philippChild .

  # Philipp Albrecht, Duke of Württemberg's child and that child's child
  ?albrechtChild a dbo:Person ;
                 dbo:childOf dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?albrechtGrandchild a dbo:Person ;
                      dbo:childOf ?albrechtChild .

  # Archduchess Margarete Sophie of Austria's parent
  ?margareteParent a dbo:Person ;
                   dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Child of the child of the parent of Archduchess Margarete Sophie of Austria
  ?parentChild a dbo:Person ;
               dbo:childOf ?margareteParent .
  ?royalGrandchild a dbo:Person ;
                   dbo:childOf ?parentChild .

  # Conditions to find the individual
  FILTER (?philippGrandchild = ?individual)
  FILTER (?individual < ?albrechtGrandchild) # Predecessor condition
  FILTER (?individual = ?royalGrandchild)
  FILTER EXISTS { ?individual a dbo:Monarch } # Ensure royalty

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent ?nativeOfNicholasIIAdmin
WHERE {
  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:nativePlace ?birthplace .
  
  # Ensure the birthplace is a country
  ?birthplace rdf:type dbo:Country .

  # Find decedent at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthplace .

  # Nicholas II of Russia's administrative region
  dbr:Nicholas_II_of_Russia dbo:countryAdministeredBy ?adminCountry .
  
  # Ensure the administration is a country
  ?adminCountry rdf:type dbo:Country .

  # Find native of Nicholas II's administrative country
  ?nativeOfNicholasIIAdmin dbo:nativePlace ?adminCountry .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfPeterIV ?realNameOfChildOfAlfonsoIV
WHERE {
  # Find the child of Peter IV of Aragon who is royalty
  ?person dbo:father dbr:Peter_IV_of_Aragon .
  ?person a dbo:Monarch .

  BIND(?person AS ?childOfPeterIV)

  # Find the real name of a royal child of Alfonso IV of Aragon
  ?anotherPerson dbo:father dbr:Alfonso_IV_of_Aragon .
  ?anotherPerson a dbo:Monarch .
  
  OPTIONAL { ?anotherPerson rdfs:label ?realNameOfChildOfAlfonsoIV }
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?royaltyOfficeHolder ?parentOfRogerIII ?childOfParentOfRogerIII
WHERE {
  # Alfonso VI's child
  ?alfonsoVI dbo:spouse ?spouse .
  ?alfonsoVI dbo:child ?childAlfonsoVI .

  # Grandchild of Alfonso VI
  ?childAlfonsoVI dbo:child ?grandchild .

  # Royalty and Office Holder related to the grandchild and William I
  ?royaltyOfficeHolder dbo:parent ?grandchild .
  ?royaltyOfficeHolder dbo:spouse|dbo:partner ?williamI .
  ?royaltyOfficeHolder a dbo:Monarch ; 
                      dbo:officeHeld ?office .

  # Parent of Roger III, Duke of Apulia
  ?rogerIII dbr:Duke_of_Apulia ;
           dbo:parent ?parentOfRogerIII .

  # Child of the parent of Roger III
  ?parentOfRogerIII dbo:child ?childOfParentOfRogerIII .
  
  FILTER (?royaltyOfficeHolder = ?childOfParentOfRogerIII)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query 1: Find The Shadow's alter ego
SELECT ?realName WHERE {
  ?person rdfs:label ""The Shadow""@en .
  ?person foaf:name ?realName .
}

# Query 2: Find the band of Robert Lamar Thompson
SELECT ?band WHERE {
  ?artist dbo:birthName ""Robert Lamar Thompson"" .
  ?artist dbo:associatedBand ?band .
}

# Query 3: Find the producer of Coke Studio Philippines
SELECT ?producer WHERE {
  ?show dbp:name ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?realName ?associatedArtist WHERE {
  # Eric Clapton's band
  OPTIONAL {
    ?clapton dbo:memberOf ?band .
    FILTER (str(?clapton) = ""Eric_Clapperton"")
  }

  # The Fabulous Thunderbirds' real name
  OPTIONAL {
    ?thunderbird dbo:member ?realName .
    FILTER (str(?thunderbird) = ""The_Fabulous_Thunderbirds"")
  }

  # Nick Curran's associated musical artist
  OPTIONAL {
    ?curran dbo:associatedMusicalArtist ?associatedArtist .
    FILTER (str(?curran) = ""Nick_Curran"")
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office
WHERE {
  ?anxo dbo:positionHeld ?office .
  ?office dbo:partOf ?administration .
  
  ?administration dbo:member ?party .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  ?alvaro dbp:residenceCountry ?country .
  ?country a dbo:Country .

  FILTER (?anxo = dbr:Anxo_Quintana)
  FILTER (?alvaro = dbr:Álvaro_Quirós)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author1 ?author2 WHERE {
  # Author of a work by Joe Biden
  dbr:Joe_Biden dbo:author ?author1 .
  
  # Commander in North Carolina Air National Guard who is an American politician and author of a book
  ?person dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          rdf:type dbo:Politician ;
          dbo:nationality dbr:United_States ;
          dbo:author ?author2 .
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAthens WHERE {
  # Leader of the National Party of Greece and their war
  ?leader dbo:partyLeaderOf dbr:National_Party_of_Greece .
  ?leader dbo:spouseOrPartner ?war1 .

  # Awardee related to ""30"" (assuming Nobel Prize)
  ?awardee dbp:nobelPrizeYear ?year .
  FILTER(?year = 1930) # Assuming the 30th Nobel Prize
  ?awardee dbo:spouseOrPartner ?war2 .

  # Entity in Athens related to both wars
  ?entityInAthens a dbo:Place ;
                  dbp:location dbr:Athens .
  ?entityInAthens dbo:relatedTo ?war1 .
  ?entityInAthens dbo:relatedTo ?war2 .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is royalty.
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child a dbo:Royalty .

  # Step 2: Determine Min Hla Htut of Pyakaung's parent.
  ?minHlaHtutParent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .

  # Step 3: Find the predecessor of Saw Shwe Khet's child.
  ?predecessor dbo:successor ?child .
  
  # Step 4: Identify the father of this predecessor, ensuring he is royalty.
  ?father dbo:parent ?predecessor .
  ?father a dbo:Royalty .

  # Step 5: Find the spouse of this royal father.
  ?father dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,2,1,0.0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
# Query for actor in ""Rustlers' Rhapsody""
SELECT ?actor WHERE {
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Query for professional associated with ""The Shadow""
SELECT ?professional WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:profession ?professional .
}

UNION

# Query for Frédéric Bouraly's profession
SELECT ?profession WHERE {
  dbpedia:Fr%C3%A9d%C3%A9ric_Bouraly dbo:occupation ?profession .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?commander ?militaryForce ?successor ?officeHolder
WHERE {
  # Step 1: Identify the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?writer .

  # Step 2: Find the commander in the Battle of Vienna
  ?battle dbr:Battle_of_Vienna ;
         dbo:commander ?commander .

  # Step 3: Determine the military force involved in the Battle of Vienna
  ?battle dbo:militaryForce ?militaryForce .

  # Step 4: Identify the successor of this commander during the Russo-Polish War (1654–1667)
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) ;
       dbo:commanderSuccessor ?successor .
  
  # Ensure the successor is a politician and office holder
  ?successor dbo:occupation dbr:Politician ;
             dbo:officeHolder ?officeHolder .

  # Link the commander from the Battle of Vienna to the successor in the Russo-Polish War
  FILTER(?commander = ?warCommander)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenantOfSantiago ?residenceCountry ?officeEvent
WHERE {
  # Find the tenant (mayor) of Santiago de Compostela
  ?santiago dbo:name ""Santiago de Compostela""@en .
  ?santiago dbo:mayor ?tenantOfSantiago .

  # Anxo Quintana's role in an event as a leader/administrator
  ?quintana foaf:name ""Anxo Quintana"" .
  ?event dbo:leader ?quintana ;
         rdf:type dbo:Event .
  BIND(?event AS ?officeEvent)

  # Residence of a Spanish citizen is Spain
  ?citizen foaf:nationality <http://dbpedia.org/resource/Spain> .
  ?citizen dbo:residenceCountry ?residenceCountry .
  FILTER(STRSTARTS(LCASE(STR(?residenceCountry)), ""spain""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .

  # Step 2: Find the parent of that child (grandparent)
  ?minyeKyawswaGrandparent dbo:parentOf ?minyeKyawswaChild .

  # Step 3: Identify Myat Hpone Pyo's predecessor
  ?myatHponePyo dbo:predecessor ?predecessor .
  FILTER(?myatHponePyo = dbr:Myat_Hpone_Pyo) .

  # Step 4: Find a royal child of Saw Shwe Khet
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet ;
                   a dbo:RoyalPerson .

  # Step 5: Identify the father of that child
  ?father dbo:parentOf ?sawShweKhetChild .

  # Step 6: Find the spouse of that father
  ?spouse dbo:spouse ?father .

  # Final condition: The predecessor must be the same as the spouse found in step 6
  FILTER(?predecessor = ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Hillary Clinton""@en .
  ?work dbo:author ?author ;
        rdf:type dbo:Book ;
        rdfs:label ?bookTitle .
  FILTER (lang(?bookTitle) = 'en')
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonChild WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  ?consSpouse dbo:spouse dbr:Constance_of_Burgundy .

  # Step 2: Find the child of that spouse who is royalty
  ?childOfConsSpouse dbo:child ?consSpouse .
  ?childOfConsSpouse dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""king"") || CONTAINS(LCASE(?title1), ""queen""))

  # Step 3: Find Roger II of Sicily's parent
  ?parentOfRogerII dbo:child dbr:Roger_II_of_Sicily .

  # Step 4: Find the child of that parent who is royalty
  ?childOfParentOfRogerII dbo:child ?parentOfRogerII .
  ?childOfParentOfRogerII dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""king"") || CONTAINS(LCASE(?title2), ""queen""))

  # Step 5: Find William II of Sicily's father
  ?fatherOfWilliamII dbo:parent dbr:William_II_of_Sicily .

  # Step 6: Identify the common child who is also the father of William II of Sicily
  FILTER(?childOfConsSpouse = ?childOfParentOfRogerII && ?childOfConsSpouse = ?fatherOfWilliamII)
  
  BIND(?childOfConsSpouse AS ?commonChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace ?almaMater WHERE {
  # Find Yandamuri Veerendranath's birthplace
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthplace .

  # Find Australian scientists who received the Australian Laureate Fellowship and their alma maters
  ?scientist a dbo:Scientist ;
             dbp:nationality ""Australian""@en ;
             dbo:awardReceived dbr:Australian_Laureate_Fellowship .
  
  ?scientist dbo:almaMater ?almaMater .

  # Filter to find common entity between birthplace and alma mater
  FILTER(?birthplace = ?almaMater)
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace WHERE {
  VALUES ?actor { 
    dbr:Sal_Mineo 
    dbr:Rudolph_Valentino 
    dbr:George_Raft
  }
  
  ?actor dbo:deathPlace ?deathPlace .
}
```",5,5,6,2,3,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentDoonArbus ?parentProfessional ?actorName ?movieTitle
WHERE {
  # Find the parent of Doon Arbus
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?parentDoonArbus .
  }

  # Identify Eugène Cattin's profession and find a professional with that same profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
  OPTIONAL {
    ?professional dbo:profession ?eugeneProfession ;
                  dbo:parent ?parentProfessional .
  }
  
  # Find the actor of a movie where someone decedent at Los Angeles is involved
  ?movie dbo:actor ?actor .
  ?actor dbo:deathPlace dbr:Los_Angeles_County,_California .
  ?movie rdfs:label ?movieTitle .

  # Ensure we get distinct actors and movies
  FILTER (lang(?movieTitle) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:alumnusOf dbp:Eton_College .
  
  ?child dbo:childOf ?alumnus ;
         a dbo:Politician .

  ?parent dbo:parentOf ?child .
  ?parent dbo:parentOf ?awardee .
  ?awardee dbo:honoraryTitle ""Commander of the Royal Victorian Order""^^xsd:string .

  ?grandchild dbo:childOf ?alumnus ;
              dbo:childOf ?frederickStanleyChild .
  
  ?frederickStanleyChild dbo:childOf dbp:Fredrick_Stanley_16th_Earl_of_Derby .
  
  FILTER (?parent = ?father)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royaltyChild
WHERE {
  # Step 1: Find Duchess Luise's spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luisesSpouse .

  # Step 2: Find the spouse of that spouse
  ?luisesSpouse dbo:spouse ?secondSpouse .

  # Step 3: Determine the parent of this second spouse
  ?secondSpouse dbo:parent ?parentOfSecondSpouse .

  # Step 4: Identify children of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?childOfFerdinandAlbert .

  # Step 5: Find the royalty among these children's parents
  ?parentOfSecondSpouse dbo:child ?royaltyChild .
  ?royaltyChild dbo:parent ?childOfFerdinandAlbert .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfCommander ?grandparent ?reference 
WHERE {
  # Step 1: Identify the commander in Siege of Mukha who is a royalty
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander a dbo:Monarch .

  # Step 2: Find their child who is also a royalty
  ?childOfCommander dbo:parent ?commander ;
                   a dbo:Monarch .

  # Step 3: Determine the father's parent (grandparent) who is both a royalty and an office holder
  ?fatherOfChild dbo:parent ?childOfCommander .
  ?grandparent dbo:parent ?fatherOfChild ;
               a dbo:Monarch, dbo:OfficeHolder .

  # Step 4: Link to Baeda Maryam I
  ?childOfBaedaMaryamI dbo:parent dbr:Baeda_Maryam_I .
  ?grandparent dbo:parent ?fatherOfChild ;
               dbo:parent ?childOfBaedaMaryamI .

  # Step 5: Include reference information
  OPTIONAL { ?entity rdfs:seeAlso ?reference }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Step 2: Find the parent of that child (grandchild of Allan Arbus)
  ?child dbo:parent ?grandparent .

  # Step 3: Identify Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:occupation ?profession .

  # Step 4: Find a professional in that same field
  ?professional dbo:occupation ?profession .
  
  # Step 5: Determine the parent of this professional
  ?professional dbo:parent ?parentOfProfessional .

  # Step 6: Identify Herschel Bernardi's movie work
  dbr:Herschel_Bernardi dbo:actedIn ?movie .

  # Step 7: Find an actor from that movie
  ?actor dbo:actedIn ?movie .
  
  # Ensure it is not Herschel Bernardi himself
  FILTER (?actor != dbr:Herschel_Bernardi)

  # Step 8: Determine the parent of this second actor
  ?actor dbo:parent ?parentOfActor .

  # Find common parent between grandchild's parent and professional's parent
  VALUES ?commonParent { ?grandparent ?parentOfProfessional }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Laura Bush as the author of ""An Invitation to the White House""
  ?author dbo:title ""An Invitation to the White House""@en .
  ?author rdfs:label ""Laura Bush""@en .

  # Check if Laura Bush's spouse is a politician and office holder
  ?spouse dbo:spouse ?author ;
          rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find Dwight D. Eisenhower as the commander in World War II (related to polio)
  ?commander dbo:title ""At Ease: Stories I Tell to Friends""@en ;
             dbo:commanderOf dbr:World_War_II ;
             dbo:occupation dbo:Politician ;
             dbo:officeHolder true .

  # Check if Eisenhower's work is authored by someone who resided in Chappaqua, NY
  ?resident dbo:residence dbr:Chappaqua,_New_York ;
            dbo:author ?commander .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Step 1: Find Janet Gaynor's claim to fame (movie)
SELECT ?movie WHERE {
    wd:Q12345 dbo:film ?movie .
}

# Step 2: Find the producer of that movie
SELECT ?producer WHERE {
    ?movie dbo:producer ?producer .
}

# Step 3: Identify Lamont Cranston's claim to fame (work)
SELECT ?work WHERE {
    wd:Q67890 dbo:work ?work .
}

# Step 4: Find Johnny Doughboy's actor
SELECT ?actor WHERE {
    wd:Q11111 foaf:name ""Johnny Doughboy""@en .
    ?actor dbo:character ?doughboyRole .
    ?doughboyRole rdfs:label ""Johnny Doughboy""@en .
}

# Step 5: Find the producer of the work associated with Johnny Doughboy's actor
SELECT ?producer WHERE {
    ?work dbo:producer ?producer .
}
```

Note: The above SPARQL queries assume that:
- `wd:Q12345` is the DBpedia identifier for Janet Gaynor.
- `wd:Q67890` is the DBpedia identifier for Lamont Cranston (The Shadow).
- `wd:Q11111` is the DBpedia identifier for ""The Front Page"" or similar work associated with Johnny Doughboy.

These identifiers need to be verified and replaced with actual DBpedia resource IDs. The queries are structured to find the relevant entities and their relationships, but they may require adjustments based on the exact structure of the data in DBpedia.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the actor of The Sky Ranger (1928 film)
SELECT ?actor ?deathPlace WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""The Sky Ranger"" .
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?actor), STR(dbr:)))
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
}

UNION

# Query for Carolyn Jones
SELECT ?person ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carolyn Jones""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace }
}

UNION

# Query for the actor of Aladdin (1958 film)
SELECT ?actor ?deathPlace WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""Aladdin"" ;
        dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1958)
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?actor), STR(dbr:)))
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?predecessor dbo:predecessor dbr:Stephen_V_of_Hungary .

  # Step 2: Child of the predecessor
  ?child dbo:parent ?predecessor .
  
  # Step 3: Parent of Philip, Despot of Romania
  ?philipParent dbo:parent dbr:Philip_Despot_of_Romania .
  
  # Step 4: Father of the parent (grandfather)
  ?grandfather dbo:parent ?philipParent .

  # Step 5: Spouse of the grandfather
  ?spouse dbo:spouse ?grandfather .

  # Step 6: Parent of Charles Martel of Anjou
  ?charlesParent dbo:parent dbr:Charles_Martel_of_Anjou .
  
  # Ensure spouse is also parent of Charles' parent
  FILTER(?spouse = ?charlesParent)

  # Step 7: Child of the child that is royalty
  ?grandchild dbo:parent ?child .
  ?grandchild a dbo:Monarch ; # Assuming Monarch as a proxy for royalty

  # Ensure grandchild is royalty
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  # Identify the author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .
  
  # Ensure the author is Bill Clinton
  ?author rdfs:label ""Bill Clinton""@en .

  # Find the spouse of Bill Clinton who is a politician and office holder
  ?spouse dbo:spouse ?author ;
          rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  
  # Ensure the spouse is Hillary Rodham Clinton
  ?spouse rdfs:label ""Hillary Rodham Clinton""@en .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?deathSettlement ?territoryAdministeredFromDeath ?mayorSchleswig
WHERE {
  # Administration of Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:monarch ?country .
  ?country dbo:administrativeHead ?administrationChristianIX .

  # Death place of Christian Ditlev Ammentorp Hansen and territory administered from there
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathSettlement .
  FILTER (isBlank(?deathSettlement) || strStarts(str(?deathSettlement), ""http://dbpedia.org/resource/""))

  OPTIONAL {
    ?deathSettlement dbo:administers ?territoryAdministeredFromDeath .
  }

  # Administration of the mayor of Duchy of Schleswig
  dbr:Duchy_of_Schleswig dbo:mayor ?mayorSchleswig .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfRoyalParent
WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          rdfs:label ""Philip, Despot of Romania""@en .

  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip .
  ?parent dbo:spouse ?royalParentSpouse .
  
  # Ensure the parent is royalty
  ?parent dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 3: Determine the spouse of this royal parent
  ?royalParentSpouse a dbo:Person .

  # Step 4: Identify Maria of Bytom's spouse
  ?maria dbp:surname ""Bytom""@en ;
         dbo:spouse ?mariaSpouse .

  # Step 5: Find the father of Maria's spouse who is royalty
  ?fatherOfMariaSpouse dbo:child ?mariaSpouse .
  
  # Ensure this father is royalty
  ?fatherOfMariaSpouse dbp:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""king"") || CONTAINS(LCASE(?title2), ""queen"") || 
         CONTAINS(LCASE(?title2), ""prince"") || CONTAINS(LCASE(?title2), ""princess""))

  # Step 6: Determine the child of Stephen V of Hungary
  ?stephenV a dbo:Person ;
            rdfs:label ""Stephen V of Hungary""@en .
  
  ?childOfStephenV dbo:parent ?stephenV ;
                   dbo:spouse ?mariaSpouseFather .

  # Ensure this child is the same as the father from step 5
  FILTER(?fatherOfMariaSpouse = ?childOfStephenV)

  # Step 7: Identify the spouse of this royal individual
  ?mariaSpouseFather dbo:spouse ?spouseOfRoyalParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?collinsWork ?gaynorMovie ?gaynorWork WHERE {
  # Find the alter ego of Kent Allard in print media
  OPTIONAL { 
    dbr:Kent_Allard dbo:alterEgo ?alterEgo .
    FILTER EXISTS { ?alterEgo dbo:mediaType dbr:Print_media }
  }

  # Find a work that is Cora Sue Collins' claim to fame
  OPTIONAL {
    dbr:Cora_Sue_Collins dbo:filmProduction ?collinsWork .
  }

  # Find a movie and another work that are Janet Gaynor's claims to fame
  OPTIONAL {
    dbr:Janet_Gaynor dbo:filmProduction ?gaynorMovie .
  }
  OPTIONAL {
    dbr:Janet_Gaynor dbo:work ?gaynorWork .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:sportManagerOf dbr:Hong_Kong_C_Team .
  ?person dbo:sportManagerOf dbr:Soccer .
  ?person dbo:athlete true .
  ?person dbo:sportPlayerOf dbr:Soccer .
  ?person dbo:birthDate ?birthday .

  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthDate ?hollingsBirthday .

  FILTER (?birthday = ?hollingsBirthday)
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the producer of Coke Studio Philippines
  ?producer a dbo:Producer ;
            dbo:worksFor dbr:Coke_Studio_Philippines .

  # Find the band associated with this producer
  ?band dbo:member ?producer .
  
  # Identify Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) foaf:name ""Bob Thompson""^^xsd:string ;
                              foaf:birthName ?bobBirthName .

  # Find professionals who are both producers and band members
  ?professional a dbo:Producer ;
                dbo:member ?band .
  
  # Filter by birth name matching Bob Thompson's birth name
  ?professional foaf:birthName ?bobBirthName .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Philip, Despot of Romania's parent who is royalty
  ?philip dbo:child ?parent1 .
  ?parent1 dbp:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""royalty"")) .

  # Parent1's spouse (Philip's grandparent)
  ?parent1 dbo:spouse ?grandparentSpouse .
  
  # Béla IV of Hungary's child who is royalty
  ?belaIV dbo:child ?child2 .
  ?child2 dbp:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""royalty"")) .

  # Child2's parent (Béla IV)
  ?child2 dbo:parent ?belaIV .

  # Charles I of Hungary's father who is royalty
  ?charlesI dbo:father ?father3 .
  ?father3 dbp:title ?title3 .
  FILTER(CONTAINS(LCASE(?title3), ""royalty"")) .

  # Father3's parent (Charles I's grandparent)
  ?father3 dbo:parent ?grandparent3 .

  # Ensure the spouse of Philip's grandparent is royalty
  ?grandparentSpouse dbp:title ?spouseTitle .
  FILTER(CONTAINS(LCASE(?spouseTitle), ""royalty"")) .

  # Linking the two lineages through common individuals or titles if necessary
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?hostInstitution WHERE {
  ?award a dbo:Award ;
        dbo:category ""Nobel Prize in Physics"" ;
        dbo:recipient dbr:Rainer_Weiss .
  
  OPTIONAL { 
    ?award dbo:presentedBy ?hostInstitution .
  }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace ?war ?force 
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  FILTER (STRSTARTS(STR(?birthplace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?birthplace a dbo:Settlement } &&
          EXISTS { ?birthplace dbo:country dbr:United_States })

  # Award show related to United States Congress
  ?awardShow dbp:awardee ?congressAwardee .
  FILTER (STRSTARTS(STR(?awardShow), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?awardShow dbo:recipient dbr:United_States_Congress })
  
  # War associated with the awardee of the award show
  ?congressAwardee dbo:occupation ?occupation .
  FILTER (STRSTARTS(STR(?occupation), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?occupation dbo:relatedWar ?war })

  # Gillmore Medal awardee and their force
  ?gillmoreAward dbp:awardee ?gillmoreAwardee .
  FILTER (STRSTARTS(STR(?gillmoreAward), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?gillmoreAward dbo:name ""Gillmore Medal"" })
  
  ?gillmoreAwardee dbo:militaryForce ?force .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor ?ducasWork WHERE {
  # Michał Kazimierz Pac as a commander in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac dbo:positionHeld ?office ;
                             dbo:memberOf ?force .
  
  # The force is related to the Great Turkish War
  ?force dbo:partOf dbr:Great_Turkish_War .

  # Commander's successor who is a politician and office holder
  ?commander dbo:succeededBy ?successor .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder ?office .

  # Reference to George Ducas's work
  dbr:George_Ducas dbo:work ?ducasWork .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
# Query 1: Residence of the Leader of the Ulster Unionist Party
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?residence WHERE {
    ?party a dbo:PoliticalParty ;
           dbp:name ""Ulster Unionist Party"" .
    ?party dbo:leader ?leader .
    ?leader dbo:residence ?residence .
}

# Query 2: Entity in the Award of Reference to George Hamilton Cameron
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?entity WHERE {
    ?person a dbo:Person ;
            foaf:name ""George Hamilton Cameron"" .
    ?person dbo:honoraryTitle ?award .
    ?award dbo:recipient ?entity .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?samProfession ?bandName ?alterEgoCharacter
WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Robert Lamar Thompson (likely known as Vanilla Ice) and his band
  dbr:Vanilla_Ice foaf:name ""Robert Lamar Thompson""@en .
  OPTIONAL { dbr:Vanilla_Ice dbo:band ?band . }
  OPTIONAL { ?band dbo:name ?bandName . }

  # Walter B. Gibson's fictional character (The Shadow)
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson ;
                 a dbo:FictionalCharacter, dbo:ComicsCharacter .
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Identify Roger III's parent
  ?parent dbo:child ?rogerIII .
  VALUES ?rogerIII { <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> } .

  # Step 2: Find a child of that parent who is royalty
  ?parent dbo:child ?individual1 .
  ?individual1 rdf:type dbo:Monarch .

  # Step 3: Identify Constance of Burgundy's spouse and their child
  ?constance <http://dbpedia.org/ontology/spouse> ?spouse .
  VALUES ?constance { <http://dbpedia.org/resource/Constance_of_Burgundy> } .
  
  ?spouse dbo:child ?individual2 .
  ?individual2 rdf:type dbo:Monarch .

  # Step 4: Find William I of Sicily's royal child
  ?williamI dbo:child ?royalChild .
  VALUES ?williamI { <http://dbpedia.org/resource/Wilhelm_I_of_Sicily> } .
  ?royalChild rdf:type dbo:Monarch .

  # Step 5: Identify the father of this royal child
  ?father dbo:child ?royalChild .

  # Final condition: The individual must match both criteria
  FILTER (?individual1 = ?individual || ?individual2 = ?individual)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?leaderOffice ?countryResidence
WHERE {
  # Spanish Socialist Workers' Party related administration
  ?psOE dbo:office ?administration .
  
  # Leader of the PSOE in the 2009 Galician regional election
  ?election dbr:Galicia_election,_2009-05-22/dbo:leader ?leader .
  ?leader dbo:party dbr:Spanish_Socialist_Workers'_Party .

  # Office held by the leader during the election
  ?leader dbo:office ?leaderOffice .

  # Álvaro Quirós' residence information
  dbr:Álvaro_Quirós dbo:residence ?residence .
  ?residence a dbo:Country .
  
  BIND(?residence AS ?countryResidence)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Yeshaq I's child who is royalty
  ?yeshaqI dbr:Yeshaq_I .
  ?yeshaqI dbo:spouse ?parent . 
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .

  # Dawit II, the grandchild of Yeshaq I
  ?dawitII dbr:Dawit_II .
  ?dawitII dbo:father ?yeshaqIChild .
  ?yeshaqIChild dbo:child ?dawitII .
  
  # Baeda Maryam I's child, Zara Yaqob
  ?baedaMaryamI dbr:Baeda_Maryam_I .
  ?baedaMaryamI dbo:child ?zaraYaqob .
  ?zaraYaqob dbr:Zara_Yaqob .

  # Dawit II is the parent of Zara Yaqob
  ?dawitII dbo:parent ?zaraYaqob .

  FILTER(?child = ?yeshaqIChild)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?profession WHERE {
  # The Shadow creation by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Lamont Cranston's profession (fictional)
  ?character rdfs:label ""Lamont Cranston""@en .
  ?character dbo:profession ?alterEgoProfession .

  # Jonathan Manalo's profession
  dbr:Jonathan_Manalo dbo:occupation dbr:Music_Producer .

  # Bob Thompson's band and profession
  dbr:The_Dawn dbo:bandMember dbr:Bob_Thompson .
  dbr:Bob_Thompson dbo:profession ?musicProfession .

  FILTER(?alterEgoProfession = ?musicProfession)
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify Tisha Sterling's parent
SELECT ?parent WHERE {
    dbr:Tisha_Sterling dbo:parent ?parent .
}

# Step 2: Find the birth name of that parent
SELECT ?birthName WHERE {
    ?parent foaf:name ?name ;
            dbo:birthName ?birthName .
}

# Step 3: Identify the actor from ""1,000 Dollars a Minute""
SELECT ?actor WHERE {
    dbr:1000_Dollars_a_Minute dbo:starring ?actor .
}

# Step 4: Determine the spouse of that actor
SELECT ?spouse WHERE {
    ?actor dbo:spouse ?spouse .
}

# Step 5: Find the ruling party in Central, Louisiana
SELECT ?rulingParty WHERE {
    dbr:Central,_Louisiana dbo:government ?government .
    ?government dbo:rulingParty ?rulingParty .
}

# Step 6: Identify a member of that party
SELECT ?partyMember WHERE {
    ?rulingParty dbo:member ?partyMember .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albumActor ?movieActor WHERE {
  # Find T.I.'s album which is a song and musical work
  dbr:T.I. dbo:album ?album .
  ?album rdf:type dbo:SongsAlbum ;
         dbo:genre ?genre .

  # Get the actor associated with this album
  ?album dbo:performer ?albumActor .

  # Find The Shadow's alter ego
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  ?shadowAlterEgo dbo:profession ?profession .

  # Identify a movie involving both actors
  ?movie dbo:starring ?albumActor ;
         dbo:starring ?shadowActor .
  
  # Ensure the shadow actor is associated with The Shadow's alter ego
  ?shadowActor dbo:alterEgo ?shadowAlterEgo .

  # Get the common actor for the album and movie
  BIND(?albumActor AS ?movieActor)
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?residenceCountry WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:partyMember dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:office dbr:Minister_of_Public_Works,_Transport_and_Housing_(Spain) .
  ?person dbo:termStart ?start .
  FILTER (?start <= ""2009-01-01""^^xsd:date && (BOUND(?end) -> ?end > ""2009-01-01""^^xsd:date || !BOUND(?end))) .
  OPTIONAL { ?person dbo:residenceCountry ?residenceCountry . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager ?player ?country 
WHERE {
  # Thomas Letsch's managerial role in VfL Bochum during the 2007-08 season
  dbr:Thomas_Letsch dbo:position ""Manager""@en .
  dbr:VfL_Bochum dbp:sportSeason dbr:2007–08_VfL_Bochum_season ;
                 dbo:manager ?manager .

  # Ensure the manager is Thomas Letsch
  FILTER(?manager = dbr:Thomas_Letsch)

  # Player managed by Thomas Letsch during that season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:manager ?manager .

  # Leader of West Germany (likely Helmut Kohl) and his native country
  dbr:Helmut_Kohl dbo:nationality ?country .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?war ?militaryConflict ?writer
WHERE {
  # Jean Baptist, Comte d'Arco as a commander
  dbr:Jean_Baptist,_Comte_d%27Arco dbo:positionHeld ?commanderRole .
  
  # Wars that are television shows or societal events
  ?war a dbo:War ;
      dbo:genre ?genre .
  FILTER (?genre IN (dbr:Television_show, dbr:Societal_event)) .

  # Successor who is a politician and office holder
  ?successor dbo:predecessor dbr:Jean_Baptist,_Comte_d%27Arco ;
            dbo:positionHeld ?officeRole .
  FILTER EXISTS { ?successor dbo:occupation dbr:Politician }
  FILTER EXISTS { ?successor dbo:officeHolder true }

  # Michał Kazimierz Pac and the military conflict
  dbr:Michał_Kazimierz_Pac dbo:participatedIn ?militaryConflict .

  # Writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author ?writer .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Philipp Albrecht's child
  ?philippChild dbo:childOf dbr:Philipp_Albrecht,_Duke_of_Württemberg .
  
  # Grandchild of Philipp Albrecht
  ?grandchild dbo:childOf ?philippChild .

  # Great-great-grandchild of Alexander of Württemberg
  ?greatGreatGrandchild dbo:childOf ?intermediate1 .
  ?intermediate1 dbo:childOf ?intermediate2 .
  ?intermediate2 dbo:childOf ?intermediate3 .
  ?intermediate3 dbo:childOf dbr:Aleksander_W%C5%82adys%C5%82aw_August_Karol_Jerzy_Zygmunt_Aleksander_of_W%C3%BCrtemberg .

  # Grandchild of Archduke Charles Louis who is royalty
  ?royalGrandchild dbo:childOf ?intermediate4 .
  ?intermediate4 dbo:childOf dbr:Charles_Louis,_Archduke_of_Austria .
  ?royalGrandchild a dbo:RoyalFamilyMember .

  # Find the common individual among these relationships
  FILTER (?grandchild = ?greatGreatGrandchild && ?grandchild = ?royalGrandchild)

  # Determine their predecessor (parent)
  ?predecessor dbo:childOf ?grandchild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for Glenn Youngkin's birthplace
SELECT ?birthPlace WHERE {
  wd:Q1115010 dbo:birthPlace ?birthPlace .
}

UNION

# Query for a notable awardee of Vince Gilligan (assuming Bryan Cranston, the lead actor in Breaking Bad)
SELECT ?birthPlace WHERE {
  wd:Q1773 dbo:birthPlace ?birthPlace .
}

UNION

# Query for Cece Bell's birthplace
SELECT ?birthPlace WHERE {
  wd:Q5702900 dbo:birthPlace ?birthPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's politician child
  ?child1 dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
          a dbo:Politician .

  # Edward Stanley, 17th Earl of Derby's parent who is a politician and office holder
  ?parent2 dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby ;
           a dbo:Politician ;
           dbo:officeHolder ?office .

  # The child of the above parent who received the Commander of the Royal Victorian Order
  ?awardee dbo:parent ?parent2 ;
          dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

  # Linking the father of both relevant children
  ?father dbo:child ?child1, ?awardee .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tvShow ?actorName WHERE {
  # Shatrughan Sinha's television roles
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .
  ?tvShow dbo:starring dbr:Shatrughan_Sinha .

  # Richard Grant Esterhuysen (The Shadow) as an actor or performer
  dbr:The_Shadow dbo:birthName ""Richard Grant Esterhuysen""@en ;
                 dbo:profession ?actorProfession .
  
  FILTER(?actorProfession = dbr:Actor || ?actorProfession = dbr:Voice_Actor)

  # Find commonality in acting roles
  ?tvShow dbo:starring ?commonActor .
  ?commonActor rdfs:label ?actorName .
  FILTER(lang(?actorName) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Clint Hocking, author of Smartbomb
  dbr:Smartbomb dbo:author dbr:Clint_Hocking .

  # Clint Hocking's involvement in a movie
  OPTIONAL { 
    ?movie dbo:writer dbr:Clint_Hocking .
    ?actor dbo:actedIn ?movie .
  }

  # T.I.'s album ""Paper Trail""
  dbr:Paper_Trail dbo:albumOfSong dbr:What_You_Know_(T.I._song) .

  # Actor associated with the album
  OPTIONAL {
    ?musicVideo dbo:videoForSong dbr:What_You_Know_(T.I._song) .
    ?actorInMusicVideo dbo:actedIn ?musicVideo .
  }

  # Lamont Cranston's professional role
  ?professional dbo:profession dbr:Lamont_Cranston .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorBirthplace ?awardeeBirthplace WHERE {
  # Birthplace of Soumitra Chatterjee, the actor in ""Akaler Shandhaney""
  dbr:Soumitra_Chatterjee dbo:birthPlace ?actorBirthplace .

  # Birthplace of Ustad Bismillah Khan, a Sangeet Natak Akademi Fellowship awardee
  dbr:Bismillah_Khan dbo:birthPlace ?awardeeBirthplace .
}
```",5,5,6,3,2,3,2,20,1,5,1,0.16666666666666666,0.5,0.25
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query to find Henry Clay Lewis's birthplace that is a settlement and American
SELECT ?birthPlace WHERE {
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}

# Query to find the Medal of Honor awardee associated with Quincy Adams Gillmore
SELECT ?awardee WHERE {
  ?event dbp:recipient ?awardee ;
         dbp:award ""Medal of Honor""^^xsd:string ;
         dbo:relatedEvent dbr:Quincy_Adams_Gillmore .
}

# Query to find the force of the Medal of Honor awardee
SELECT ?force WHERE {
  ?awardee dbo:militaryService ?service .
  ?service dbo:branch ?force .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Dorothea of Denmark's parent
  ?dorothea dbo:parent ?parent .
  VALUES ?dorothea { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> } .

  # Step 2: Find the father of that parent
  ?parent dbo:father ?grandfather .

  # Step 3: Determine Maximilian I's child who is this grandfather
  ?maximilianChild dbo:child ?grandfather .
  VALUES ?maximilian { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> } .
  ?maximilian dbo:child ?maximilianChild .

  # Step 4: Ensure the person is royalty and connected to Philip I of Castile
  ?grandfather dbp:spouse ?philipI .
  VALUES ?philipI { <http://dbpedia.org/resource/Philip_I_of_Castile> } .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInPersonBorn ?soccerPlayerActor WHERE {
  # Find Marty Pollio's birthdate
  VALUES (?martyBirthDate) { 
    SELECT ?birthDate WHERE {
      dbr:Marty_Pollio dbo:birthDate ?birthDate .
      FILTER (datatype(?birthDate) = xsd:date)
    }
  }

  # Find athletes born on the same date as Marty Pollio
  ?personBorn dbo:birthDate ?martyBirthDate ;
             a dbo:Athlete ;
             dbo:name ?playerInPersonBorn .

  # Find films directed by Manuel Huerga
  VALUES (?film) {
    SELECT ?film WHERE {
      ?film dbo:director dbr:Manuel_Huerga .
      ?film a dbo:Film .
    }
  }

  # Find soccer players who are actors in the film
  ?actorInFilm dbo:name ?soccerPlayerActor ;
               dbo:role ?role ;
               dbo:film ?film .
  FILTER EXISTS { ?actorInFilm a dbo:SoccerPlayer . }
  FILTER EXISTS { ?actorInFilm a dbo:Actor . }

  # Find Pablo Aimar's team
  VALUES (?pabloAimarTeam) {
    SELECT ?team WHERE {
      dbr:Pablo_Aimar dbo:team ?team .
    }
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfCommander ?residenceLeader ?officeMiguelMaura
WHERE {
  # Manuel Pinto da Costa's office in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:politicalPartyMember ?party .
  ?conflict dbo:militaryConflictParticipant ?participant .
  ?participant dbo:officeHolder ?officeOfCommander .
  FILTER (?officeOfCommander != """" && ?officeOfCommander != ""null"") .

  # Residence of the leader from the 2003 Madrid City Council election
  dbr:Madrid_City_Council_election_2003 dbo:electedLeader ?leader .
  ?leader dbo:residence ?residenceLeader .

  # Miguel Maura's office
  dbr:Miguel_Maura dbo:officeHolder ?officeMiguelMaura .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Find children of Maria Anna of Bavaria
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:spouse ?husband .
  
  ?mariaAnna dbo:child ?child .

  # Step 2: Identify the child who is royalty and a commander in war
  ?child a dbo:Monarch ;
         dbo:commanderOf ?regiment .
  
  FILTER EXISTS { ?regiment dbo:name ""2nd Dragoon Regiment (France)""@en }
  
  # Step 3: Connect to societal event, event, and television show
  OPTIONAL {
    ?event dbo:relatedEvent ?child .
    ?event a dbo:SocietalEvent ;
           dbo:isPartOf ?televisionShow .
  }

  # Step 4: Find the father of Ferdinand III's child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:father ?father .

  FILTER (?child = ?father)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Find Linda Bruckheimer's birth name
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer"" ;
         dbo:birthName ?birthName .

  # Find her spouse using the birth name
  ?spouse a dbo:Person ;
          dbo:birthName ?birthName ;
          dbo:spouse ?linda .

  # Identify movies produced by this spouse
  ?movie dbo:producer ?spouse ;
         dbo:productionCompany ?company .

  # Get the producer of those movies
  ?company dbo:producer ?producer .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  ?person a dbo:Person ;
          dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:force dbr:Quincy_Adams_Gillmore ;
          dbo:award ?award .
  
  ?award dbo:awardingBody dbr:United_States_Congress .

  ?person dbo:birthPlace ?place .
  
  ?place a dbo:Settlement ;
        dbo:country dbr:United_States_of_America .

  BIND(?place AS ?settlement)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify The Shadow's alter ego in comics
SELECT ?alterEgo WHERE {
    dbr:The_Shadow (dbo:alterEgo) ?alterEgo .
    FILTER EXISTS { ?alterEgo dbo:wikiPageWikiLink dbr:Category:Comics_characters . }
}

# Step 2: Find Shatrughan Sinha's profession
SELECT ?profession WHERE {
    dbr:Shatrughan_Sinha dbo:occupation ?profession .
}

# Step 3: Identify Richard E. Grant's movie adapted into a TV show
SELECT DISTINCT ?movie WHERE {
    dbr:Richard_E._Grant dbo:filmRole ?role .
    ?role dbo:work ?movie .
    FILTER EXISTS { ?tvShow dbo:basedOn ?movie . }
    FILTER EXISTS { ?tvShow dbo:type dbr:Television_series . }
}

# Step 4: Find actors common to both the movie and its TV adaptation
SELECT DISTINCT ?actor WHERE {
    ?role dbo:actor ?actor .
    ?role dbo:work ?movie .
    ?tvRole dbo:actor ?actor .
    ?tvRole dbo:work ?tvShow .
    FILTER EXISTS { ?tvShow dbo:basedOn ?movie . }
}

# Step 5: Combine information to find the professional character
SELECT DISTINCT ?alterEgo WHERE {
    # The Shadow's alter ego from comics
    dbr:The_Shadow (dbo:alterEgo) ?alterEgo .
    FILTER EXISTS { ?alterEgo dbo:wikiPageWikiLink dbr:Category:Comics_characters . }
    
    # Profession matching Shatrughan Sinha
    ?profession dbr:Shatrughan_Sinha/dbo:occupation .
    ?alterEgo dbo:occupation ?profession .

    # Actor in both the movie and TV show
    ?actor (dbo:filmRole|dbo:televisionRole) ?role .
    ?role dbo:work ?movie .
    ?tvShow dbo:basedOn ?movie .
    ?tvRole dbo:actor ?actor .
    ?tvRole dbo:work ?tvShow .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Step 1: Identify musical artists from Florida
  ?artist dbo:nationality dbr:United_States ;
          dbo:stateOrProvince dbr:Florida ;
          a dbo:MusicalArtist .

  # Step 2: Find awards associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Step 3: Determine the region/state/settlement associated with the award
  ?region a dbo:State ;
          dbo:country dbr:United_States ;
          dbo:award ?award .

  # Step 4: Identify band members of Bobby Shmurda's associated musical artist
  ?bobbyArtist dbo:associatedBandMember ?bandMember .
  ?bobbyArtist rdfs:label ""Bobby Shmurda""@en .

  # Step 5: Match the person with the birth name criteria
  ?person dbo:nationality dbr:United_States ;
          dbo:stateOrProvince ?region ;
          dbo:birthName ?birthName ;
          dbo:associatedBandMember ?bandMember .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the album of T.I.'s song ""What You Know""
SELECT ?album ?actor WHERE {
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  OPTIONAL { ?album dbo:performer ?artist . }
  OPTIONAL { ?artist dbo:profession dbr:Actor . ?artist foaf:name ?actor . }
}

# Query for the series ""The Golden Master"" and its alter ego
SELECT ?series ?alterEgo ?professional WHERE {
  # Assuming ""The Golden Master"" is a placeholder for an actual series name
  OPTIONAL { 
    dbr:The_Golden_Master dbo:spinOff ?alterEgo .
    ?alterEgo dbo:actor ?professional .
  }
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfVictorSavilleBirthplace ?writerOfMusicalWork
WHERE {
  # Victor Saville's birthplace
  dbr:Victor_Saville dbo:nativePlace ?birthplace .
  
  # Native of the birthplace
  ?person dbo:nativePlace ?birthplace .
  BIND(?person AS ?nativeOfVictorSavilleBirthplace)
  
  # Steven Kapur's musical work related to ""the true self""
  ?work dbo:composer dbr:Steven_Kapur ;
        dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""true self"") || CONTAINS(LCASE(?title), ""self""))
  
  # Writer of the musical work
  ?work dbo:lyricist ?writer .
  BIND(?writer AS ?writerOfMusicalWork)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?universityLuiza (SAMPLE(?foundingDateLuiza) AS ?foundingDateLuiza)
         ?universityEleonora (SAMPLE(?foundingDateEleonora) AS ?foundingDateEleonora)
WHERE {
  # Alma mater for Luiza Erundina
  ?luiza dbo:almaMater ?universityLuiza .
  ?universityLuiza a dbo:University ;
                  a dbo:EducationalOrganization ;
                  dbo:foundingDate ?foundingDateLuiza .

  FILTER (str(?luiza) = ""http://dbpedia.org/resource/Luiza_Erundina"")

  # Alma mater for Eleonora Menicucci de Oliveira
  ?eleonora dbo:almaMater ?universityEleonora .
  ?universityEleonora a dbo:University ;
                      a dbo:EducationalOrganization ;
                      dbo:foundingDate ?foundingDateEleonora .

  FILTER (str(?eleonora) = ""http://dbpedia.org/resource/Eleonora_Menicucci_de_Oliveira"")
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Find the child of the child (grandchild) of Duke Philipp of Württemberg
  ?grandchild1 dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg ;
              dbo:parent ?childOfDukePhilipp .
  
  # Step 2: Find the child of the child (grandchild) of Archduke Charles Louis of Austria who is royalty
  ?grandchild2 dbo:parent dbr:Archduke_Charles_Louis_of_Austria ;
              dbo:parent ?childOfCharlesLouis ;
              a dbo:RoyalFamilyMember .
  
  # Step 3: Find the child of the spouse of Archduchess Helena of Austria who is royalty
  ?spouse dbr:Archduchess_Helena_of_Austria dbo:spouse ;
          dbo:child ?royalChildOfSpouse .
  
  # Step 4: Find the predecessor of the royal child of the spouse
  ?predecessor dbo:succeededBy ?royalChildOfSpouse .

  # Combine results to find a common individual
  FILTER (?grandchild1 = ?commonIndividual && ?grandchild2 = ?commonIndividual && ?predecessor = ?commonIndividual)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result WHERE {
  # Step 1: Minye Kyawswa's child
  ?childMinyeKyawswa dbo:parent dbr:Minye_Kyawswa .
  
  # Step 2: Parent of that child (grandchild of Minye Kyawswa)
  ?grandchildMinyeKyawswa dbo:parent ?childMinyeKyawswa .

  # Step 3: Spouse of Saw Shwe Khet
  ?spouseSawShweKhet dbo:spouse dbr:Saw_Shwe_Khet .
  
  # Step 4: Predecessor of the spouse
  ?predecessor dbo:successor ?spouseSawShweKhet .

  # Step 5: Saw Min Phyu's spouse and their child
  ?spouseSawMinPhyu dbo:spouse dbr:Saw_Min_Phu .
  ?childSpouseSawMinPhyu dbo:parent ?spouseSawMinPhyu .

  # Combine conditions for the final result
  ?result rdf:type dbo:Monarch ;
          dbo:successor ?predecessor ;
          dbo:parent ?grandchildMinyeKyawswa .
  
  FILTER (?result = ?grandchildMinyeKyawswa)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Eleonore of Austria's father
  dbr:Eleonore_of_Austria (dbo:father) ?father .
  
  # Charles II, Archduke of Austria
  OPTIONAL { ?father rdfs:label ""Charles II, Archduke of Austria""@en . }
  
  # Maria Anna of Bavaria and her child
  dbr:Maria_Anna_of_Bavaria (dbo:child) ?child .
  
  # The father of the child is Charles II
  OPTIONAL { ?child dbo:father ?father . }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickCurranArtist ?kimWilsonBand ?bandMemberName ?bandMemberArtist
WHERE {
  # Find associated musical artist of Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  }

  # Real name of the band of Kim Wilson
  dbr:Kim_Wilson dbo:musicalBand ?kimWilsonBand .

  # Find a person born on 1945-03-30 and their associated musical artist or band
  OPTIONAL {
    ?bandMember foaf:birthday ""1945-03-30""^^xsd:date ;
                dbo:associatedMusicalArtist ?bandMemberArtist .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfPhotographer ?actorChild ?movieWork ?decedentPerson WHERE {
  # Allan Arbus as a photographer
  dbr:Allan_Arbus dbo:occupation dbr:Photography .
  
  # Parent of Allan Arbus
  OPTIONAL { 
    dbr:Allan_Arbus dbp:parent ?parentOfPhotographer .
  }
  
  # Child of Allan Arbus who is an actor
  OPTIONAL {
    ?actorChild dbp:parent dbr:Allan_Arbus ;
                dbo:occupation dbr:Actor .
  }
  
  # Movies (works) the child has acted in
  OPTIONAL {
    ?movieWork dbo:starring ?actorChild .
  }
  
  # Person decedent at Los Angeles associated with these works
  OPTIONAL {
    ?decedentPerson dbp:deathPlace dbr:Los_Angeles ;
                    dbo:work ?movieWork ;
                    dbo:deathDate ?deathDate .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfPoliticianChild ?parentOfAwardee
WHERE {
  # Step 1: Identify a child of Frederick Stanley who is a politician
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  ?child rdf:type dbo:Politician .

  # Step 2: Find the parent of that child
  ?child dbo:parent ?parentOfPoliticianChild .

  # Step 3: Identify Rodney Lees' award and awardee
  dbr:Rodney_Lees dbo:awardReceived ?award .
  ?awardee dbo:awardReceived ?award .

  # Step 4: Determine the parent of the awardee
  ?awardee dbo:parent ?parentOfAwardee .

  # Step 5: Find commonality (if any)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dizzeeRascal ?drDre WHERE {
  # Identify Dizzee Rascal by birth name
  ?dizzeeRascal dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Confirm profession as writer and musical artist
  ?dizzeeRascal dbo:occupation dbr:Writer ;
                dbo:occupation dbr:Musical_artist .

  # Link Dizzee Rascal to Pink Floyd via The Live Anthology
  ?album dbo:artist dbr:Dizzee_Rascal ;
         rdfs:label ""The Live Anthology""@en .
  
  ?pinkFloydAlbum dbo:artist dbr:Pink_Floyd ;
                  rdfs:label ""The Live Anthology""@en .

  # Identify Dr. Dre through association with Tupac Shakur
  ?tupac dbo:associatedMusicalArtist dbr:Dr._Dre .
  ?drDre dbo:birthName ""$pacely""@en .

  # Establish connection between Dizzee Rascal and Dr. Dre
  FILTER EXISTS { ?dizzeeRascal dbo:associatedMusicalArtist ?drDre }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  # Identify Bill Clinton as the author of a book who resides in Chappaqua, New York
  ?bill dbo:residence dbr:Chappaqua,_New_York .
  ?bill dbo:spouse ?hillary .
  ?bill dbo:occupation dbr:Politician .
  ?bill dbo:officeHolder dbr:President_of_the_United_States .
  ?bill dbo:writtenWork ?work .
  ?work a dbo:Book .

  # Identify Hillary Clinton as the spouse of Bill Clinton, who is also an author and politician
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?bill .
  ?hillary dbo:occupation dbr:Politician .
  ?hillary dbo:officeHolder ?office .
  ?hillary dbo:writtenWork ?work2 .
  ?work2 a dbo:Book .

  # Ensure Bill Clinton was the commander during the Third Taiwan Strait Crisis
  ?bill dbo:commanderOf dbr:Third_Taiwan_Strait_Crisis .

  BIND(?bill AS ?author)
  BIND(?hillary AS ?spouse)
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather ?commanderParent WHERE {
  # Step 1: Identify Na'od
  VALUES ?naod { dbr:Na'ad_I }

  # Step 2: Find Na'od's Father
  ?naod dbo:father ?father .

  # Step 3: Determine the Grandfather (Father of the Father)
  ?father dbo:father ?grandfather .
  FILTER EXISTS { ?grandfather dbo:royaltyTitle ?title }
  FILTER EXISTS { ?grandfather dbo:officeHolder ?office }

  # Step 4: Identify the Commander in Siege of Mukha
  ?siege dbr:Siege_of_Mukha dbo:commander ?commander .
  FILTER EXISTS { ?commander dbo:royaltyTitle ?title }

  # Step 5: Find the Parent of the Commander
  ?commander dbo:father|dbo:mother ?commanderParent .
  FILTER EXISTS { ?commanderParent dbo:royaltyTitle ?parentTitle }

  # Step 6: Reference to The Shadow's Alter Ego (fictional context)
  OPTIONAL {
    ?shadow dbr:The_Shadow dbo:alterEgo ?alterEgo .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band WHERE {
  # Find Bob Thompson's birth name
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson"" ;
       foaf:givenName ?birthName .

  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion"" ;
       dbo:profession ?profession .
  
  FILTER(?profession = dbo:Singer)

  # Find The Shadow's alter ego and associated band
  ?shadow a dbo:Person ;
          foaf:name ""The Shadow"" ;
          dbo:alterEgoOf ?person .

  ?person dbo:band ?band .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?danielCountry ?gustavoParty
WHERE {
  # Roy Leonardo Barreras Montealegre's party
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:party ?royParty .

  # Daniel Elahi Galán's country
  dbr:Dani_Elái_Galán dbo:nationality ?danielCountry .

  # Gustavo Petro's party
  dbr:Gustavo_Petro dbo:party ?gustavoParty .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucas ?successor ?michałKazimierzPacEvent ?battleOfVienna
WHERE {
  # George Ducas and his successor
  dbr:George_Ducas dbo:officeHolder ?office .
  ?office dbo:successor ?successor .

  # Successor is a politician and office holder in the force
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder ?forceOffice .

  # Force is an event and military conflict involving Michał Kazimierz Pac
  ?forceOffice dbo:militaryConflict ?michałKazimierzPacEvent .
  dbr:Mihály_Kazimír_Pálakovich dbo:involvedInMilitaryConflicts ?michałKazimierzPacEvent .

  # Michał Kazimierz Pac's war is a television show and societal event
  ?michałKazimierzPacEvent rdf:type dbo:SocietalEvent ;
                           dbo:televisionShow ?tvShow .

  # Connect to the Battle of Vienna
  ?battleOfVienna dbo:militaryConflict ?forceOffice .
  dbr:Battle_of_Vienna rdf:type dbo:MilitaryConflict .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Artist ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London ;
          dbo:occupation dbo:MusicalArtist ;
          dbo:deathDate ""2020-06-18""^^xsd:date ;
          dbo:authorOf ?work .
  ?work a dbo:Film ;
        dbo:genre dbr:Television_Show .
  
  OPTIONAL { ?person dbp:parent ?parent . }
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find the parent of Princess Aisha bint Faisal who is royalty
  ?princessAisha a dbo:Person ;
                 foaf:name ""Princess Aisha bint Faisal""@en ;
                 dbo:parent ?parentAisha .
  
  ?parentAisha a dbo:RoyalFamilyMember .

  # Step 2: Find the child of Prince Faisal bin Hussein who is royalty
  ?princeFaisal a dbo:Person ;
                foaf:name ""Prince Faisal bin Hussein""@en ;
                dbo:child ?childFaisal .
  
  ?childFaisal a dbo:RoyalFamilyMember .

  # Step 3: Find the common parent of both identified royals
  ?parentAisha dbo:parent ?commonParent .
  ?childFaisal dbo:parent ?commonParent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor known as John Cleese
  ?cleese a dbo:Actor ;
          foaf:name ""John Cleese""@en .
  
  # Identify television shows that are movies and involve John Cleese
  ?show dbo:starring ?cleese ;
        dbo:genre dbr:Sitcom ;
        dbo:adaptationOfFilm ?film .

  # Find the actor from ""Ab Kya Hoga"" who played a politician
  ?abKyaHogaActor a dbo:Actor ;
                  dbo:role ?role .
  
  ?role dbo:characterName ?politicianCharacter ;
        dbo:inMediaWork dbr:Ab_Kya_Hoga .

  FILTER EXISTS { ?politicianCharacter rdfs:label ""Politician""@en }

  # Ensure the actor from ""Ab Kya Hoga"" is also an actor in a show involving John Cleese
  ?abKyaHogaActor dbo:starring ?show .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Get the producer of ""The Adventures of Tom Sawyer"" (1938 film)
SELECT ?producer WHERE {
    dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:director ?director .
    ?director dbo:worksFor ?productionCompany .
    ?productionCompany dbo:president ?producer .
}

# Step 2: Get the actor of ""High Society Blues"" and their claim to fame
SELECT DISTINCT ?actor ?claimToFame WHERE {
    dbr:High_Society_Blues dbo:starring ?actor .
    ?actor dbo:notableWorks ?claimToFame .
    FILTER (isLiteral(?claimToFame))
}

# Step 3: Find the fictional character associated with Kent Allard
SELECT ?fictionalCharacter WHERE {
    dbr:Kent_Allard dbo:fictionalAlterEgo ?fictionalCharacter .
}

# Step 4: Check if there is a common producer for both works
SELECT DISTINCT ?commonProducer WHERE {
    # Producer of ""The Adventures of Tom Sawyer"" (1938)
    dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:director ?director1 .
    ?director1 dbo:worksFor ?productionCompany1 .
    ?productionCompany1 dbo:president ?producer1 .

    # Producer of the claim to fame
    ?actor dbo:notableWorks ?claimToFame .
    ?claimToFame dbo:producer ?producer2 .

    FILTER (?producer1 = ?producer2)
    BIND(?producer1 AS ?commonProducer)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?curranBand ?artist1945Band ?thunderbirdsRealName WHERE {
  # Find Nicholas Michael Curran and his associated band
  OPTIONAL {
    ?curran a dbo:MusicalArtist ;
            foaf:name ""Nicholas Michael Curran"" .
    ?curran dbo:bandMemberOf ?curranBand .
  }

  # Find the person born on March 30, 1945, who is a musical artist and their band
  OPTIONAL {
    ?artist1945 a dbo:MusicalArtist ;
                foaf:birthday ""1945-03-30""^^xsd:date .
    ?artist1945 dbo:bandMemberOf ?artist1945Band .
  }

  # Find the real name of The Fabulous Thunderbirds
  ?thunderbirds a dbo:Band ;
               dbp:name ""The Fabulous Thunderbirds"" .
  ?thunderbirds dbo:realName ?thunderbirdsRealName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Janusz Kamiński's spouse
SELECT ?spouse WHERE {
    ?person dbo:spouse ?spouse .
    ?person foaf:name ""Janusz Kamiński""@en .
}

# Step 2: Find a movie with both Janusz Kamiński's spouse and Audrey Hepburn
SELECT DISTINCT ?movie WHERE {
    ?movie dbo:actor ?spouseActor .
    ?spouseActor foaf:name ?spouseName .
    
    ?movie dbo:actor ?audreyHepburnActor .
    ?audreyHepburnActor foaf:name ""Audrey Hepburn""@en .

    FILTER(?spouseName = <SPONSPOUSE_NAME> || ?spouseName = ""<SPONSPOUSE_NAME>""@en)
}

# Step 3: Find movies with Iliza Shlesinger
SELECT DISTINCT ?ilizaMovie WHERE {
    ?movie dbo:actor ?ilizaActor .
    ?ilizaActor foaf:name ""Iliza Shlesinger""@en .
}

# Step 4: Find the common movie from steps 2 and 3
SELECT DISTINCT ?commonMovie WHERE {
    VALUES (?movie1) { (<MOVIE_FROM_STEP_2>) }
    VALUES (?movie2) { (<ILIZA_MOVIES_FROM_STEP_3>) }

    FILTER(?movie1 = ?movie2)
}
```

Note: Replace `<SPONSPOUSE_NAME>`, `<MOVIE_FROM_STEP_2>`, and `<ILIZA_MOVIES_FROM_STEP_3>` with the actual values obtained from executing the previous queries.",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:birthPlace ?birthPlace .

  # Filter for birthplaces in the JST time zone region
  OPTIONAL { 
    ?birthPlace dbp:timeZone ""Asia/Tokyo""^^xsd:string .
  }
  
  FILTER EXISTS {
    ?birthPlace dbp:timeZone ""Asia/Tokyo""^^xsd:string .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander dbo:commanderOf ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?commander a dbo:Royalty .

  # Identify the parent of this royal commander
  ?parent dbo:child ?commander .
  
  # Ensure the parent is also royalty
  ?parent a dbo:Royalty .

  # Find the child of this royal parent who is Baeda Maryam I's father
  ?child dbo:fatherOf <http://dbpedia.org/resource/Baeda_Maryam_I> .
  ?child dbo:child ?parent .

  # Reference to Lamont Cranston (The Shadow)
  OPTIONAL {
    ?shadow rdfs:label ""The Shadow""@en .
    FILTER(?shadow = ?commander) # Assuming a direct reference is possible
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Find the successor season of VfL Bochum's 2006-07 season
  ?season dbo:sport dbr:Soccer ;
          dbo:club dbr:VfL_Bochum ;
          dbo:startDate ?startYear .
  
  FILTER (YEAR(?startYear) = 2007)

  # Find the manager of this successor season
  ?manager dbp:team dbr:VfL_Bochum ;
           dbo:nationality dbr:Germany .

  # Ensure the manager is native to Germany, the administration country of Theodor Heuss
  ?theodorHeuss dbo:nationality dbr:Germany .
  
  # Find the team managed by Thomas Letsch
  ?letschTeam dbp:manager dbr:Thomas_Letsch ;
              a dbo:SoccerClubSeason .

  # Ensure the manager is linked to both conditions
  ?manager dbp:team ?letschTeam .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAmyArbus ?parentOfChildOfSpouse ?actorOfMovie
WHERE {
  # Parent of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  
  ?amyArbus dbo:parent ?parentOfAmyArbus .

  # Spouse of Mariclare Costello
  ?mariclareCostello a dbo:Person ;
                     foaf:name ""Mariclare Costello""@en .
  
  ?mariclareCostello dbo:spouse ?spouseOfMariclare .

  # Child of the spouse
  ?childOfSpouse dbo:parent ?spouseOfMariclare .

  # Parent of that child
  ?childOfSpouse dbo:parent ?parentOfChildOfSpouse .

  # Actor of a movie with decedent at Los Angeles
  ?movie a dbo:Film ;
         dbo:actor ?actorOfMovie .
  
  ?decedent dbo:deathPlace dbr:Los_Angeles,_California ;
            dbo:associatedWith ?movie .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInAgüeroTeam ?playerInAthleteTeam
WHERE {
  # Step 1: Find Sergio Agüero's team at birth
  SELECT ?team WHERE {
    dbr:Sergio_Agüero dbo:birthday ?agüeroBirthday .
    ?person dbo:birthday ?agüeroBirthday ;
            dbo:birthPlace ?place ;
            dbo:playsFor ?team .
  } LIMIT 1

  # Step 2: Find the soccer player and manager born on Marcelo Sarmiento's birthday
  SELECT ?soccerPlayerManager WHERE {
    dbr:Marcelo_Sarmiento dbo:birthday ?sarmientoBirthday .
    ?person dbo:birthday ?sarmientoBirthday ;
            a dbo:SoccerPlayer, dbo:SoccerManager .
  } LIMIT 1

  # Step 3: Find the team of the soccer player and manager from step 2
  SELECT ?team WHERE {
    ?soccerPlayerManager dbo:playsFor ?team .
  }

  # Step 4: Find the athlete born on Marty Pollio's birthday
  SELECT ?athlete WHERE {
    dbr:Marty_Pollio dbo:birthday ?pollioBirthday .
    ?person dbo:birthday ?pollioBirthday ;
            a dbo:Athlete .
  } LIMIT 1

  # Step 5: Find the player in the athlete's team at birth
  SELECT ?playerInAthleteTeam WHERE {
    ?athlete dbo:playsFor ?team .
    ?person dbo:birthday ?birthDate ;
            dbo:playsFor ?team .
  }

  # Final step: Get the player in Sergio Agüero's team at his birth
  SELECT ?playerInAgüeroTeam WHERE {
    ?person dbo:birthday ?agüeroBirthday ;
            dbo:playsFor ?team .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Step 2: Find the grandchild that is royalty
  ?grandchild dbo:parent ?albrechtChild .
  ?grandchild dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty""))

  # Step 3: Identify the parent of Archduchess Margarete Sophie of Austria
  ?margareteParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Step 4: Find the predecessor of a specific child related to Archduchess Helena's spouse
  ?helenaSpouse dbp:spouse dbr:Archduchess_Helena_of_Austria .
  ?helenaChild dbo:parent ?helenaSpouse .
  ?predecessor dbo:successor ?helenaChild .

  # Step 5: Combine conditions to find the matching grandchild
  FILTER(?grandchild = ?margareteParent && ?grandchild = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice ?tenantResidence
WHERE {
  # Office of the Commander in Central African Republic Civil War
  ?commander a dbo:Person ;
             dbo:officeHolder ?commanderOffice ;
             dbo:politicalParty ?party .
  FILTER EXISTS { ?party rdfs:label ""Central African Republic Civil War""@en }
  
  # Office of the Leader of Conservative Republican Party (Spain)
  ?leader a dbo:Person ;
          dbo:positionHeld ?leaderOffice ;
          dbo:partyLeader dbr:Conservative_Party_(Spain) .
  
  # Tenant of the Residence of the Leader in 2003 Madrid City Council Election
  ?electionCandidate a dbo:Person ;
                     dbo:electedAs ?tenantResidence ;
                     dbo:election ?election .
  FILTER EXISTS { ?election rdfs:label ""2003 Madrid City Council election""@en }
  
  # Ensure all are politicians
  ?commander dbo:occupation dbr:Politician ;
             dbo:officeHolder ?commanderOffice .
  ?leader dbo:occupation dbr:Politician ;
          dbo:positionHeld ?leaderOffice .
  ?electionCandidate dbo:occupation dbr:Politician ;
                     dbo:electedAs ?tenantResidence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Shatta Wale (Elorm Kabu Amenyah)
  VALUES (?shattaWale) { dbr:Shatta_Wale }
  ?shattaWale dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?shattaWale dbo:musicalArtist ?artist1 .

  # Musician from Central Region, Ghana
  ?musician dbo:nationality dbr:Ghana ;
            dbo:birthPlace ?place .
  ?place dbp:country dbr:Ghana ;
         dbp:region ""Central Region""@en .
  
  # Profession similar to Rod Argent (Musician)
  ?musician dbo:occupation dbr:Musician .

  # Find associated musical artist
  ?musician dbo:musicalArtist ?artist2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?nickname WHERE {
  # Denis Kolodin's details
  dbr:Denis_Kolodin dbo:occupation ?occupation .
  
  # The First Glove and its writer
  dbr:The_First_Glove dbo:author ?writer .

  # Players associated with Denis Kolodin (assuming a role like coach or manager)
  ?player dbo:manager ?denisKolodinRole .
  FILTER(?denisKolodinRole = dbr:Denis_Kolodin) .

  # Nickname of the player that is also a soccer club
  ?player rdfs:label ?nicknameLabel .
  ?club rdfs:label ?nicknameLabel .
  FILTER(CONTAINS(LCASE(STR(?nicknameLabel)), ""soccer"") || CONTAINS(LCASE(STR(?nicknameLabel)), ""football"")) .

  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?nicknameLabel), "" "", ""_""))) AS ?club)
  
  # Ensure the nickname is a soccer club
  ?club dbo:category dbr:Soccer_clubs .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify Elorm Kabu Amenyah as Joey B
  VALUES (?joeyB) { dbr:Joey_B }
  
  # Find the writer of ""The Live Anthology"" who is also a musical artist
  ?writer dbo:profession dbr:Musical_artist ;
          dbo:work dbr:The_Live_Anthology .
  
  # Check if there's an association between Joey B and this writer as musical artists
  OPTIONAL { ?joeyB dbo:associatedMusicalArtist ?artist . }
  OPTIONAL { ?writer dbo:associatedMusicalArtist ?artist . }

  FILTER (?joeyB = ?writer || EXISTS { ?joeyB dbo:associatedMusicalArtist ?artist } ||
          EXISTS { ?writer dbo:associatedMusicalArtist ?artist })
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warOfAwardee ?warOfBaggovut ?entityInBirthPlace
WHERE {
  # Find the awardee of the Golden Sword for Bravery and their war
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedIn ?warOfAwardee .
  
  # Find Karl Gustav von Baggovut's wars
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?warOfBaggovut .

  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė and any notable entity there
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  ?entityInBirthPlace dbo:location ?birthPlace .

  # Ensure we get labels for readability
  OPTIONAL { ?warOfAwardee rdfs:label ?awardeeWarLabel . FILTER (lang(?awardeeWarLabel) = 'en') }
  OPTIONAL { ?warOfBaggovut rdfs:label ?baggovutWarLabel . FILTER (lang(?baggovutWarLabel) = 'en') }
  OPTIONAL { ?entityInBirthPlace rdfs:label ?birthPlaceEntityLabel . FILTER (lang(?birthPlaceEntityLabel) = 'en') }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Identify T.I.'s song and album
SELECT ?song ?album WHERE {
  ?song dbo:artist dbr:T.I. ;
        a dbo:Songs .
  OPTIONAL { ?song dbo:album ?album . }
}

# Step 2: Find the author of ""Smartbomb""
SELECT ?author WHERE {
  ?book dbo:title ""Smartbomb""@en ;
        dbo:author ?author .
}

# Step 3: Find a movie featuring both T.I. and the author
SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:T.I. ;
         dbo:starring ?author .
  
  # Assuming we have found the author from the previous query, replace `?author` with the actual URI of the author.
}

# Step 4: Determine the professional role of the author in the movie
SELECT DISTINCT ?role WHERE {
  ?movie dbo:starring ?author ;
         dbo:profession ?role .
  
  # Again, replace `?author` with the actual URI of the author found earlier.
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Query for Battle of Cape Finisterre (1805)
SELECT ?battle ?force1 ?force2 WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatedIn ?event .
  ?event dbo:opposingMilitaryForce ?force1 .
  ?event dbo:opposingMilitaryForce ?force2
}

UNION

# Query for military conflict involving William Bayne
SELECT ?war ?commander ?force WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:commander ?commander .
  ?commander rdfs:label ""William Bayne""@en .
  ?war dbo:opposingMilitaryForce ?force
}

UNION

# Query for military conflict involving ""The Triple X's""
SELECT ?figure ?war ?force WHERE {
  ?figure a dbo:MilitaryPerson .
  ?figure rdfs:label ""The Triple X's""@en .
  ?figure dbo:commander ?war .
  ?war dbo:opposingMilitaryForce ?force
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Saw Shwe Khet's child
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet .
  
  # Step 2: Find Minye Kyawswa's grandchild
  ?minyeKyawswaGrandparent dbo:childOf dbr:Minye_Kyawswa ;
                          dbo:child ?minyeKyawswaChild .
  ?minyeKyawswaGrandchild dbo:childOf ?minyeKyawswaChild .

  # Step 3: Find Myat Hpone Pyo's father's spouse
  ?myatHponePyoFather dbo:spouse ?fatherSpouse ;
                      dbo:child dbr:Myat_Hpone_Pyo .
  
  # Commonality and royalty check
  VALUES (?commonEntity) {
    ?sawShweKhetChild
    ?minyeKyawswaGrandchild
    ?fatherSpouse
  }
  
  ?commonEntity a dbo:Monarch ;
               dbo:country dbr:Myanmar .

  # Step 5: Find the predecessor of this common royal entity
  ?predecessor dbo:succession ?commonEntity .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # Pickett's Charge and its commander
  dbr:Picketts_Charge dbo:commander ?commander .
  
  # General George Pickett as the commander
  ?commander rdfs:label ""George Pickett""@en .

  # Political party in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .

  # Check if the commander was ever a member of any political party
  OPTIONAL { ?commander dbo:memberOf ?party }
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child1 ?parentOfChild1 ?fatherOfChild2
WHERE {
  # Step 1: Identify a child of Roger II who is royalty
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  ?child1 a dbo:Monarch .

  # Step 2: Find the parent of that child (should be Roger II)
  ?parentOfChild1 dbo:child ?child1 .

  # Step 3: Identify a reference person who is royalty and an office holder related to William I
  ?referencePerson dbo:officeHolder dbr:William_I_of_Sicily .
  ?referencePerson a dbo:Monarch .
  
  # Ensure this person is also a child of Elvira of Castile, Queen of Sicily
  ?referencePerson dbo:parent dbr:Elvira_of_Castile .

  # Step 4: Find the father of this second child (the reference person)
  ?fatherOfChild2 dbo:child ?referencePerson .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?spouse WHERE {
  # Step 1: Identify the film associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Find the actor of that film
  ?film dbo:starring ?actor .

  # Step 3: Determine the spouse of that actor
  ?actor dbo:spouse ?spouse .

  # Step 4: Identify a party member at a landmark with specific elevation
  ?landmark dbo:elevation ?elevation .
  FILTER(xsd:decimal(?elevation) = 20.116800000000001347)
  
  ?partyMember dbo:birthName ""Harriette Arlene Lake"" ;
               dbo:memberOf ?rulingParty ;
               dbo:locatedAt ?landmark .

  # Ensure the ruling party is indeed a ruling party
  ?rulingParty dbo:type dbr:Ruling_Party .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # VfL Bochum and its players in the 2007-08 season
  ?player dbo:playsFor dbr:VfL_Bochum ;
          dbo:playedInSeason dbr:2007–08_VfL_Bochum_season .

  # Manager of the player who is also a manager of VfL Bochum in that season
  ?manager dbo:manages ?player ;
           dbo:managesTeam dbr:VfL_Bochum ;
           dbo:nationality dbr:Germany .

  # The manager must have managed another team during a sports season on 1968-08-26
  ?otherSeason dbo:date ""1968-08-26""^^xsd:date .
  ?manager dbo:managesTeam ?otherTeam ;
           dbo:managedInSeason ?otherSeason .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Nat Levine's film product
  dbr:Nat_Levine dbo:film ?film .
  
  # Actor of the film
  ?film dbo:starring ?actor .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Check if spouse is a party member in Central, Louisiana (assuming major political parties)
  OPTIONAL { 
    ?spouse dbo:politicalAffiliation ?party .
    FILTER (
      (?party = dbr/Democratic_Party_(United_States) || ?party = dbr/Republican_Party_(United_States))
    )
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tupacArtist ?ghanaianArtist WHERE {
  # Identify Tupac Shakur by his birth name and find associated artist
  VALUES ?lesaneParishCrooks { dbr:Lesane_Parish_Crooks }
  ?lesaneParishCrooks dbo:birthName ""Lesane Parish Crooks""@en.
  OPTIONAL {
    ?lesaneParishCrooks dbp:alias ?tupacArtist.
    FILTER(?tupacArtist IN (dbr:Tupac_Shakur, dbr:2Pac))
  }

  # Identify a musician from the Central Region of Ghana
  ?ghanaianMusician dbo:nationality dbr:Ghana .
  ?ghanaianMusician dbo:birthPlace ?centralRegion.
  ?centralRegion dbp:country dbr:Ghana ;
                 dbp:region ""Central""@en.
  OPTIONAL {
    ?ghanaianMusician dbp:alias ?ghanaianArtist.
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Arthur Stanley (politician)
  OPTIONAL { 
    dbr:Arthur_Stanley_(politician) dbo:parent ?arthurFather .
    BIND(?arthurFather AS ?father)
  }

  # Awardee of Rodney Lees
  OPTIONAL {
    ?awardee dbo:awardReceivedBy ?rodneyLeesAward .
    ?awardee dbo:parent ?leesParent .
    BIND(?leesParent AS ?father)
  }
  
  # Child of the parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardParent .
    ?child dbo:parent ?edwardParent ;
           a dbo:Politician ;
           dbo:officeHolder ?office .
    ?child dbo:parent ?derbyChildParent .
    BIND(?derbyChildParent AS ?father)
  }

  # Filter to find the common father
  FILTER (?father = ?arthurFather || ?father = ?leesParent || ?father = ?derbyChildParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for members of Der Blau
SELECT ?member WHERE {
  ?group rdfs:label ""Der Blau""@en .
  ?group dbo:member ?member .
}

UNION

# Query for designer(s) of Aston Martin AMR1
SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR_1 dbo:designer ?designer .
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?bandMember ?awardRegion ?state ?settlement WHERE {
  # Step 1: Identify Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .
  
  # Step 2 & 3: Find a band member of the associated musical artist who is also a musical artist
  ?artist dbo:associatedBandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
  ?artist dbp:name ""Bobby Shmurda"" .

  # Step 4: Identify awards related to New York (state) and their native regions, states, and settlements
  ?award dbo:location dbr:New_York_(state) ;
         dbo:nativeRegion ?region ;
         dbo:nativeState ?state ;
         dbo:nativeSettlement ?settlement .

  # Step 5: Determine which bands received these awards
  ?band dbo:awardsReceived ?award .
  ?band rdf:type dbo:Band .
  
  FILTER(?person = ?birthName)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .
  
  # Marty Pollio's birthday
  ?martyPollio dbo:birthday ?birthdayMarty .

  # Person who is an athlete and shares the same birthday as Marty Pollio
  ?athlete dbo:birthday ?birthdayMarty ;
           dbo:occupation dbr:Athlete .

  # Actor from ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?actor dbo:role <http://dbpedia.org/resource/Category:Soccer_players_in_All_or_Nothing:_Manchester_City> ;
         dbo:occupation dbr:Soccer_player ;
         dbo:occupation dbr:Athlete .

  # Team of the person born on 1979-11-03
  ?person dbo:team ?team .

  # Check if this team is also associated with the actor
  ?actor dbo:team ?team .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Actor in ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
  ?actor dbo:sport dbr:Soccer .
  ?actor dbo:occupation dbr:Athlete .

  # Check if the actor was born on February 22, 1955, and is an athlete
  ?actor dbp:birthday ""1955-02-22""^^xsd:date .
  
  # Verify that the player shares a birthday with Marcelo Sarmiento (February 22)
  ?player dbp:birthday ?birthday .
  FILTER (?birthday = ""1955-02-22""^^xsd:date)

  # Ensure the player is involved in soccer as both a player and manager
  ?player dbo:sport dbr:Soccer .
  ?player dbo:occupation [a dbo:SoccerPlayer ; dbo:subClassOf+ dbo:SoccerManager] .

  # Link actor to player (assuming they are the same entity)
  FILTER (?actor = ?player)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?award WHERE {
  # Identify the war related to the sinking of Prince of Wales and Repulse
  VALUES ?event { dbr:Sinking_of_Prince_of_Wales_and_Repulse }
  
  ?event dbo:partOf ?war .
  FILTER(?war = dbr:World_War_II)

  # Find the commander associated with this event
  ?commander dbo:rank ?rank ;
            dbo:serviceIn ?force ;
            dbo:commanded ?event .

  # Identify the award received by Edmund Hakewill-Smith
  ?award dbo:name ""Victoria Cross"" .
  ?recipient dbo:receivedAward ?award ;
             rdfs:label ""Edmund Hakewill-Smith""@en .

  FILTER(?commander = dbr:Admiral_Sir_Tom_Phillips)
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist WHERE {
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:bandMember ?band .
  ?band dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER EXISTS { ?associatedArtist rdf:type dbo:MusicalArtist . }
  FILTER EXISTS { ?associatedArtist rdf:type dbo:Artist . }

  ?associatedArtist dbo:memberOfBand dbr:GS9 .

  ?person foaf:name ?birthName .
  ?musicalArtist foaf:name ?birthName .
  
  ?musicalArtist rdf:type dbo:MusicalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?work ?commander ?successor WHERE {
  # Find works by George Ducas
  ?work dbo:author dbr:George_Ducas .
  
  # Identify Jean Baptist, Comte d'Arco in relation to a television show and societal event
  ?jeanBaptist dbo:wikiPageRedirects ?tvShow .
  ?jeanBaptist dbo:wikiPageRedirects ?event .

  # Determine the commander of the Russo-Polish War (1654–1667)
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  # Identify the successor of this commander who is also a politician and office holder
  ?successor dbo:succeeded ?commander ;
             a dbo:Politician ;
             dbo:officeHolder true .

  # Link Jean Baptist as the successor
  ?jeanBaptist dbr:Jean_Baptiste,_Comte_d'Arco .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?childWar ?birthPlaceEntity WHERE {
  # Toyotomi Hideyoshi's child and related war
  dbr:Toyotomi_Hideyori dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:placeOfBirth ?birthPlace . FILTER(?birthPlace = dbr:Kyoto) }
  
  # Siege of Osaka (related to Toyotomi Hideyori)
  dbr:Siege_of_Osaka dbo:participatedIn ?childWar .
  ?childWar dbo:participant dbr:Toyotomi_Hideyori .

  # Wars involving Toyotomi Hidenaga
  OPTIONAL {
    ?war dbo:participant dbr:Hashiba_Hideyoshi .
    FILTER(?war != dbr:Siege_of_Osaka)
  }

  # Kyoto as birthplace entity for Yamaza Enjirō
  dbr:Kyoto a dbo:Place .
  BIND(dbr:Kyoto AS ?birthPlaceEntity)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?awardee ?force 
WHERE {
  # Find awards given by the United States Congress
  ?award dbo:awardedBy dbr:United_States_Congress .
  
  # Find awardees of these awards who were involved in a war and have a connection to Charleston, South Carolina
  ?awardee dbo:receivedAward ?award ;
           dbo:placeOfBirth ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""charleston south carolina""))
  
  OPTIONAL { ?awardee dbo:militaryConflict ?war . }
  
  # Find Quincy Adams Gillmore's award and military force
  dbr:Quincy_Adams_Gillmore dbo:receivedAward ?gillmoreAward ;
                            dbo:militaryForce ?force .
  
  # Check if the awardee from the first part is the same as Quincy Adams Gillmore
  FILTER(?awardee = dbr:Quincy_Adams_Gillmore)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childBirthPlace ?laoSheWorkCountry WHERE {
  # Find the person who died in Taipei
  ?person dbo:deathPlace dbr:Taipei .
  
  # Ensure this person has a child who is a politician
  ?person dbo:child ?child .
  ?child dbo:occupation dbr:Politician .

  # Get the birthplace of this political child
  ?child dbo:birthPlace ?childBirthPlace .

  # Find Lao She's notable work and its associated country
  dbr:Lao_She dbo:notableWork ?work .
  ?work dbo:country ?laoSheWorkCountry .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandGrandchild WHERE {
  # Step 1: Alexander of Württemberg's lineage
  ?alexander dbo:birthDate ""1804""^^xsd:gYear .
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  
  ?child1 dbo:parent ?alexander ;
          rdf:type dbo:Person .

  ?grandChild1 dbo:parent ?child1 ;
               rdf:type dbo:Person .

  ?grandGrandchild dbo:parent ?grandChild1 ;
                   rdf:type dbo:Person .

  # Step 2: Archduchess Margarete Sophie of Austria's child
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?margaretesChild dbo:parent ?margareteSophie ;
                   rdf:type dbo:Person .

  # Step 3: Predecessor condition
  FILTER (?grandGrandchild != ?margaretesChild) .
  
  # Step 4: Archduchess Helena of Austria's spouse and their child
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?spouse dbo:spouse ?helena ;
          rdf:type dbo:Person .

  ?helenasChild dbo:parent ?spouse ;
                rdf:type dbo:Person .

  # Step 5: Predecessor condition for Archduchess Helena's child
  FILTER (?grandGrandchild != ?helenasChild) .
  
  # Step 6: Ensure the individual is royalty
  ?grandGrandchild rdf:type dbo:Monarch ;
                   rdfs:label ?name .

}
ORDER BY ?name
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for the birth place of the current Governor of Virginia
SELECT ?governorName ?birthPlace WHERE {
  ?governor dbo:officeHolderOf dbr:Governor_of_Virginia.
  ?governor dbo:name ?governorName.
  ?governor dbp:birthPlace ?birthPlace.
}

UNION

# Query for the birth place of Cece Bell, author of ""El Deafo""
SELECT ?authorName ?birthPlace WHERE {
  dbr:Cecily_Ann_Bell dbo:wikiPageDisambiguates dbr:Cece_Bell.
  dbr:Cecily_Ann_Bell dbp:name ?authorName.
  dbr:Cecily_Ann_Bell dbp:birthPlace ?birthPlace.
}

UNION

# Query for the birth place of an awardee associated with Vince Gilligan
SELECT ?awardeeName ?birthPlace WHERE {
  ?award dbo:recipient dbr:Vince_Gilligan.
  ?award dbo:recipient ?awardee.
  ?awardee dbp:name ?awardeeName.
  ?awardee dbp:birthPlace ?birthPlace.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Parent of Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent1 .

  # Awardee related to Rodney Lees and their parent
  ?awardee dbo:awardReceived dbr:Rodney_Lees_Award ;
          dbo:parent ?parent2 .

  # Alumnus of Eton College who is a politician and their child (politician)
  ?alumnus dbo:almaMater dbr:Eton_College ;
           rdf:type dbo:Politician ;
           dbo:child ?child .
  ?child rdf:type dbo:Politician ;
         dbo:parent ?parent3 .

  # Check for a common parent
  FILTER (?parent1 = ?parent2 && ?parent1 = ?parent3)
  BIND(?parent1 AS ?commonParent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander30thRegiment ?war30thRegiment 
         ?bayneMilitaryForce ?bayneWar 
         ?calderSocietalEvent ?calderMilitaryForce
WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot and its war
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?commander30thRegiment .
  ?commander30thRegiment dbo:militaryConflict ?war30thRegiment .

  # Find the military conflict associated with William Bayne
  dbr:William_Bayne dbo:militaryForce ?bayneMilitaryForce .
  ?bayneMilitaryForce dbo:militaryConflict ?bayneWar .

  # Find the societal event related to Robert Calder's military force
  dbr:Robert_Calder dbo:militaryForce ?calderMilitaryForce .
  ?calderMilitaryForce dbo:societalEvent ?calderSocietalEvent .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Bill Clinton as an author and politician
  dbr:Bill_Clinton dbo:author dbr:My_Life .
  dbr:Bill_Clinton a dbo:Politician .

  # Hillary Clinton's relationship to Bill Clinton
  dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .
  
  # Confirming the book ""My Life"" by Bill Clinton
  ?book dbo:author dbr:Bill_Clinton ;
        rdfs:label ""My Life""@en .

  # Ensuring Hillary Clinton is the spouse of the author (Bill Clinton)
  ?spouse dbo:spouse dbr:Bill_Clinton .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName ?nickCurranArtist ?association
WHERE {
  # Kim Wilson's band
  dbr:Kim_Wilson dbo:band ?band .
  ?band rdfs:label ?bandName .

  # Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .

  # Check for any association between Kim Wilson's band and Nick Curran
  OPTIONAL {
    ?association dbo:member ?kimWilson .
    ?association dbo:member ?nickCurran .
    FILTER(?band = ?association)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native 
WHERE {
  # Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a region and country
  ?birthPlace rdf:type dbo:Region ;
              dbo:country ?country .

  # Identify Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne's parent
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?commonParent .
  
  # Ensure the same person is also a parent of Hon. Mary Frances Bowes-Lyon
  dbr:Hon._Mary_Frances_Bowes-Lyon dbo:parent ?commonParent .

  # Find the native of the birthplace region and country
  ?native dbo:nativeOf ?birthPlace ;
          dbo:nativeOf ?country .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William I of Sicily's royal child
  ?child1 dbo:parent dbr:William_I_of_Sicily ;
          a dbo:Monarch .

  # Alfonso VI's grandchild who is royalty
  ?grandchild dbo:parent ?child1 ;
              dbo:parent ?alfonsoChild ;
              a dbo:Monarch .
  
  # Child of Alfonso VI
  ?alfonsoChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile .

  # Roger II's royal child and their parent
  ?rogerChild dbo:parent ?parent ;
              a dbo:Monarch .
  
  ?parent dbo:parent dbr:Roger_II_of_Sicily .

  # The father of the grandchild (royalty) who is also a child of Alfonso VI's child
  ?grandchild dbo:parent ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find Cavalera Conspiracy and its associated organization
  ?cavaleraConspiracy a dbo:Band ;
                     rdfs:label ""Cavalera Conspiracy""@en .
  
  OPTIONAL { 
    ?cavaleraConspiracy dbo:associatedMusicalArtist ?organization .
  }
  
  # Find band members of Cavalera Conspiracy or the associated organization
  ?member dbo:bandMemberOf ?cavaleraConspiracy ;
          rdfs:label ?memberLabel .

  UNION

  ?member dbo:bandMemberOf ?organization ;
          rdfs:label ?memberLabel .

  # Find producer of ""Nothing to Gein"" that is an organization and a group
  ?nothingToGein dbr:Nothing_to_Gein ;
                 dbo:producer ?producer .
  
  FILTER (isLiteral(?producer) = false)
  
  ?producer a dbo:Organization, dbo:MusicalGroup .

  # Find band members of the producer
  ?member2 dbo:bandMemberOf ?producer ;
           rdfs:label ?memberLabel2 .

  # Match common band member
  FILTER (?member = ?member2)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Find Vince Gilligan's award and the birthplace of an awardee
SELECT DISTINCT ?awardeeBirthPlace WHERE {
    ?gilligan dbo:award ?award .
    FILTER(?gilligan = dbpedia:Vince_Gilligan) .
    
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
}

UNION

# Part 2: Find Paulus Powell's birth region and the governor of that region
SELECT DISTINCT ?governorBirthPlace WHERE {
    ?powell dbo:birthPlace ?birthRegion .
    FILTER(?powell = dbpedia:Paulus_Powell) .

    ?birthRegion a dbo:AdministrativeRegion ;
                dbo:governor ?governor .
    
    ?governor dbo:birthPlace ?governorBirthPlace .
    FILTER(STRSTARTS(STR(?governor), ""dbpedia:"") && (dbo:occupation/foaf:topic dbpedia:Politician)) .
}

UNION

# Part 3: Find Cece Bell's birthplace
SELECT DISTINCT ?bellBirthPlace WHERE {
    ?bell dbo:birthPlace ?bellBirthPlace .
    FILTER(?bell = dbpedia:Cecilie_Bell) .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for Roy Leonardo Barreras Montealegre
SELECT ?birthPlaceInColombia ?politicalParty WHERE {
  ?person rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Colombia .
  BIND(?birthPlace AS ?birthPlaceInColombia)
  OPTIONAL { ?person dbo:politicalParty ?politicalParty }
}

UNION

# Query for Sofía Petro's father
SELECT ?fatherPoliticalParty WHERE {
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia foaf:parent ?father .
  ?father dbo:politicalParty ?fatherPoliticalParty .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?bayneForce ?regimentConflict ?commander ?kcbMilitaryForce
WHERE {
  # William Bayne's military force
  wd:Q123456 dbo:militaryForce ?bayneForce .  # Replace Q123456 with the actual Wikidata ID for William Bayne

  # 30th (Cambridgeshire) Regiment of Foot's conflict and commander
  wd:Q789012 dbo:militaryConflict ?regimentConflict .  # Replace Q789012 with the actual Wikidata ID for the regiment
  ?regimentConflict dbo:commander ?commander .

  # Awardee of Knight Commander of the Order of the Bath's military force
  wd:Q345678 dbo:militaryForce ?kcbMilitaryForce .  # Replace Q345678 with the actual Wikidata ID for the awardee

  FILTER(?bayneForce = ?regimentConflict)  # Ensure the forces are connected through a common conflict
  FILTER(?commander = ?kcbMilitaryForce)   # Ensure the commander is linked to the military force of the Knight Commander
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Iliza Shlesinger's movies
  VALUES ?ilizaShlesingerMovie { 
    dbr:Iliza_Shlesinger#filmography
  }
  
  # Actor from Always (1989 film)
  ?alwaysFilm dbo:starring ?alwaysActor .
  FILTER(STRSTARTS(STR(?alwaysFilm), ""http://dbpedia.org/resource/Always_(1989_film)""))
  
  # Janusz Kamiński's spouse
  ?januszKaminski dbo:spouse ?spouse .
  FILTER(STRSTARTS(STR(?januszKaminski), ""http://dbpedia.org/resource/Janusz_Kamiński""))

  # Find a common movie
  ?movie dbo:starring ?ilizaShlesinger ;
         dbo:starring ?alwaysActor ;
         dbo:starring ?spouse .
  
  # Get the actor of the common movie
  ?movie dbo:starring ?actor .
}
```",5,7,6,2,3,2,3,28,1,246,0,0.004048582995951417,1.0,0.00806451612903226
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata a dbo:Person ;
                 foaf:surname ""Austria"" ;
                 dbo:father ?father1 .

  # Ferdinand III, Holy Roman Emperor's child and their father
  ?ferdinandIII a dbo:Person ;
                foaf:name ""Ferdinand III, Holy Roman Emperor"" ;
                dbo:child ?child .
  ?child dbo:father ?father2 .

  # Check if the fathers are the same person
  FILTER (?father1 = ?father2)

  # Find an entity that is a societal event, television show, and related to Algerian War
  ?entity a dbo:SocietalEvent ;
          dbo:isPartOf dbr:Algerian_War ;
          dbo:genre dbr:Television_Show .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?shobhnaNativeLanguage ?jamsetjiWorkNativeLanguage
WHERE {
  # Shobhna Samarth's birthplace and its native language
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  ?birthPlace dbp:officialLanguages ?language .
  BIND(COALESCE(?language, ""Unknown"") AS ?shobhnaNativeLanguage)

  # Jamsetji Tata's Indian work and its native language
  dbr:Jamsetji_Tata dbo:work ?work .
  ?work dbo:country dbr:India .
  OPTIONAL { ?work dbp:language ?jamsetjiWorkLanguage }
  BIND(COALESCE(?jamsetjiWorkLanguage, ""Unknown"") AS ?jamsetjiWorkNativeLanguage)
}
```",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamName WHERE {
  # Find the soccer player and manager born on 1979-11-03
  ?person1 a dbo:SoccerPlayer ;
           dbo:soccerManager true ;
           dbo:birthDate ""1979-11-03""^^xsd:date .
  
  # Find an athlete born on 1955-02-22 who is in the same team as the person above
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date .
  ?team1 dbo:player ?person1 ;
         dbo:player ?athlete .

  # Find an actor who is both a soccer player and athlete, and acted in a film by Manuel Huerga
  ?actor a dbo:Actor ;
         dbo:soccerPlayer true ;
         dbo:athlete true .
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

  # Get the team of the person born on 1979-11-03
  ?team1 rdfs:label ?teamName .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query 1: Vince Gilligan's award and awardee's birthplace
SELECT ?award ?awardeeBirthPlace WHERE {
  ?gilligan dbo:awardReceived ?award .
  FILTER (str(?gilligan) = ""Vince_Gilligan"")
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}

# Query 2: Governor of the awardee's birthplace
SELECT ?governor WHERE {
  ?awardeeBirthPlace dbo:governor ?governor .
  FILTER (isBlank(?governor) = false && rdf:type(?governor, dbo:Politician))
}

# Query 3: Paulus Powell's birthplace and governor
SELECT ?powellBirthPlace ?powellGovernor WHERE {
  wd:Q123456 dbo:birthPlace ?powellBirthPlace .
  FILTER (rdf:type(?powellBirthPlace, dbo:Region) && rdf:type(?powellBirthPlace, dbo:AdministrativeRegion))
  ?powellBirthPlace dbo:governor ?powellGovernor .
  FILTER (isBlank(?powellGovernor) = false && rdf:type(?powellGovernor, dbo:Politician))
}

# Query 4: Author of El Deafo and their birthplace
SELECT ?author ?authorBirthPlace WHERE {
  wd:Q789012 dbo:author ?author .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Paulus Powell, and `wd:Q789012` with the identifier for ""El Deafo.""",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hashibaWar ?yamazaBirthPlace ?yamazaWar ?koichirōRealName ?koichirōBirthPlace ?koichirōWar WHERE {
  # Hashiba Hidekatsu and associated wars
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?hashibaWar .
  }

  # Yamaza Enjirō's birthplace and related wars
  OPTIONAL {
    dbr:Yamaza_Enjirō dbo:birthPlace ?yamazaBirthPlace ;
                     dbo:birthPlace ?person .
    ?yamazaBirthPlace dbo:participatedIn ?yamazaWar .
  }

  # Koichirō's real name, birthplace, and related wars
  OPTIONAL {
    dbr:Koichirō dbo:birthName ?koichirōRealName ;
                 dbo:birthPlace ?koichirōBirthPlace .
    ?koichirōBirthPlace dbo:participatedIn ?koichirōWar .
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?person dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .

  ?event dbo:leader ?person ;
         dbo:country dbr:Spain ;
         rdf:type dbo:AdministrativeRegion .

  ?event dbo:office ?office .
  ?office rdfs:label ?officeName .
  
  FILTER(LANG(?officeName) = ""en"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    # Ann Sothern's birth name
    dbr:Ann_Sothern dbo:birthName ?birthName .

    # Actor of ""1,000 Dollars a Minute""
    ?actor dbo:title ?title .
    FILTER(CONTAINS(LCASE(str(?title)), ""1000 dollars a minute""))
    
    # Landmark with specific elevation and its ruling party
    ?landmark dbo:elevationAboveSeaLevel ?elevation ;
              dbo:country ?country .
    ?party dbo:country ?country ;
           rdfs:label ?rulingPartyLabel .
    FILTER(?elevation = 20.116800000000001347)

    # Spouse connection
    ?actor dbo:spouse ?spouse .
    ?spouse foaf:name ?personName .
    FILTER(?personName = ?birthName)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the producer of ""Lotus"" by R.E.M.
SELECT ?producer WHERE {
    dbr:Lotus_(R.E.M._song) dbo:recordProducer ?producer .
}

# Step 2: Check if the producer is an organisation and a band/group
SELECT DISTINCT ?producer WHERE {
    ?producer rdf:type dbo:MusicalArtist ;
              rdf:type dbo:Organization ;
              rdf:type dbo:Band .
}

# Step 3: Find associated musical artist of the producer
SELECT DISTINCT ?associatedArtist WHERE {
    ?producer dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 4: Identify the writer of ""No Alternative""
SELECT ?writer WHERE {
    dbr:No_Alternative dbo:composer ?writer .
}

# Step 5: Determine band member of the writer
SELECT DISTINCT ?bandMember WHERE {
    ?writer dbo:member ?band .
    ?band dbo:bandMember ?bandMember .
}

# Step 6: Find associated musical artist of this band member
SELECT DISTINCT ?finalArtist WHERE {
    ?bandMember dbo:associatedMusicalArtist ?finalArtist .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Author of ""El Deafo""
  dbr:Cece_Wilson dbo:bookWrittenBy dbr:El_Deafo .
  dbr:Cece_Wilson dbo:birthPlace ?authorBirthPlace .

  # Governor of Virginia
  OPTIONAL { 
    SELECT ?governor WHERE {
      ?governor a dbo:Governor ;
               dbo:stateOrTerritory dbr:Virginia .
      FILTER (YEAR(NOW()) - YEAR(?governor dbo:beganOffice)) < 5) # Assuming current or recent governor
    }
    ?governor dbo:birthPlace ?governorBirthPlace .
  }

  # Awardee associated with Vince Gilligan
  OPTIONAL {
    SELECT ?awardee WHERE {
      dbr:Vince_Gilligan dbo:awardReceived ?award .
      ?award dbo:recipient ?awardee .
    }
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor ?alterEgo WHERE {
  # Na'od's father
  ?naod a dbr:Na'od ;
        dbo:father ?naodsFather .

  # Na'od's grandfather (father of Na'od's father)
  ?naodsFather dbo:father ?grandfather .
  
  # Ensure the grandfather is both royalty and office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Yeshaq I's parent
  ?yeshaqI a dbr:Yeshaq_I ;
           dbo:parent ?yeshaqsParent .
  
  # Ensure the parent is royalty
  ?yeshaqsParent a dbo:Monarch .

  # Find common ancestor
  FILTER (?grandfather = ?yeshaqsParent)
  BIND(?grandfather AS ?commonAncestor)

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  BIND(dbr:The_Shadow AS ?alterEgo)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesIFather ?spouseOfPhilipIFathersFather WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father ?charlesIFather .
  
  # Parent of Charles I's father (grandfather) who is royalty
  ?charlesIFather dbo:parent ?parentOfCharlesIFather .
  ?parentOfCharlesIFather a dbo:Monarch .

  # Philip I, Prince of Taranto and his father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipIFather .

  # Spouse of Philip I's father
  ?philipIFather dbo:spouse ?spouseOfPhilipIFathersFather .
  
  # Child of the spouse who is royalty
  ?spouseOfPhilipIFathersFather dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Predecessor of Stephen V of Hungary and his child who is royalty
  dbr:Stephen_V_of_Hungary dbo:predecessor ?stephenVPredecessor .
  ?stephenVPredecessor dbo:child ?predecessorsRoyalChild .
  ?predecessorsRoyalChild a dbo:Monarch .

  # Ensure the royal child from Philip I's father's spouse is the same as Stephen V's predecessor's child
  FILTER (?royalChild = ?predecessorsRoyalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?residenceAlberto ?officeCommander
WHERE {
  # Leader of the Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:partyMember dbr:Conservative_Party_(Spain) .
  
  # Office held by the leader
  ?leader dbo:office ?officeLeader .

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residenceAlberto .

  # Commander in a military conflict involving Manuel Pinto da Costa
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:office ?officeCommander .
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant dbr:Manuel_Pinto_da_Costa ;
            dbo:commander ?commander .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?decedent WHERE {
  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Alexander II, Grand Duke of Finland's native place
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativePlace dbr:Russian_Empire .

  # Find a person who died in the same country as Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify French Montana and his association with GS9
  dbr:French_Montana dbo:memberOfGroup dbr:GS9 .
  
  # Step 2: Find other members of GS9 who are musical artists
  ?gs9Member dbo:memberOfGroup dbr:GS9 ;
             a dbo:MusicalArtist .

  # Step 3: Identify awards related to New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Step 4: Find bands that have won these awards
  ?band dbo:recipientOfAward ?award ;
        a dbo:Band .

  # Step 5: Determine the region/state/settlement associated with the awardee band
  ?region rdf:type dbo:Region , dbo:AmericanState , dbo:Settlement ;
          dbo:location dbr:New_York_(state) .
  
  # Step 6: Link back to GS9 members who are musical artists from this region/state
  ?gs9Member dbo:nativePlace ?region .

  # Final step: Return the band member of GS9 who is a musical artist and connected through these relationships
  ?bandMember dbo:memberOfGroup dbr:GS9 ;
              a dbo:MusicalArtist .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfElenaBirthplaceEntity ?davydovWar
WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Get an entity related to her birthplace (e.g., city or country)
  ?birthPlace dbo:wikiPageRedirects ?warOfElenaBirthplaceEntity .
  
  OPTIONAL {
    ?warOfElenaBirthplaceEntity rdf:type dbo:War .
  }

  # Find the war associated with Alexander Lvovich Davydov
  dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?davydovWar .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountryLabel
WHERE {
  # Step 1: Identify the Chancellor of West Germany around the relevant period
  ?chancellor a dbo:Chancellor ;
              dbo:country dbr:West_Germany ;
              rdfs:label ?chancellorLabel .

  # Step 2: Find the manager of SBV Vitesse for the 2020–21 season
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam dbr:SBV_Vitesse ;
           dbo:managementPeriod ?period .
  
  FILTER(CONTAINS(?period, ""2020-21""))

  # Step 3: Find the manager of a player from a soccer club (e.g., VfL Bochum)
  ?player a dbo:SoccerPlayer ;
          dbo:playsFor dbr:VfL_Bochum ;
          dbo:managedBy ?manager .

  # Step 4: Identify the successor season of 2006–07 VfL Bochum
  ?season1 a dbo:SportsSeason ;
           dbo:sport dbr:Soccer ;
           dbo:team dbr:VfL_Bochum ;
           dbo:year ""2006-07""^^xsd:string .

  ?season2 a dbo:SportsSeason ;
           dbo:sport dbr:Soccer ;
           dbo:team dbr:VfL_Bochum ;
           dbo:year ""2007-08""^^xsd:string .
  
  # Step 5: Get the native country of the Chancellor
  ?chancellor dbo:nativeCountry ?nativeCountry .

  BIND(STR(?chancellorLabel) AS ?chancellorLabel)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residentBirthPlace ?alumnusBirthPlace WHERE {
  # Find a resident of Sofia
  ?resident dbo:residence dbp:Sofia .
  
  # Get the birthplace of the resident
  ?resident dbo:birthPlace ?residentBirthPlace .

  # Find an alumnus of Пловдивски университет „Паисий Хилендарски“
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/University_of_Plovdiv_Paisii_Hilendarski> .
  
  # Get the birthplace of the alumnus
  ?alumnus dbo:birthPlace ?alumnusBirthPlace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?warMilitaryForce WHERE {
  # Battle of Fort Royal military forces
  dbr:Battle_of_Fort_Royal dbo:militaryForce ?battleMilitaryForce .

  # Find awardees of Knight Commander of the Order of the Bath who were commanders in a war
  ?person dbo:awardeeOf dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:commanderInWar ?war .
  
  # The Triple X's involvement in a military conflict
  dbr:The_Triple_Xs dbo:commanderInWar ?war .

  # Get the military force of the war where The Triple X's were involved
  ?war dbo:militaryForce ?warMilitaryForce .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Ciara's DBpedia resource
  dbr:Ciara a dbo:MusicalArtist ;
             foaf:name ""Ciara"" .

  # Ice Cube's DBpedia resource and his involvement in the movie ""Friday""
  dbr:Ice_Cube a dbo:Actor ;
               dbo:birthName ""O'Shea Jackson Jr."" ;
               dbo:spouse ?spouse .
  
  ?movie dbo:title ""Friday"" ;
         dbo:starring dbr:Ice_Cube .

  # Linking Ciara to Ice Cube through the movie/show
  ?show dbo:basedOn ?movie ;
        dbo:starring ?spouse .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the actor of the alter ego in ""The Golden Master"" series
  ?series dbr:The_Golden_Master_Series ;
          dbo:starring ?alterEgo .
  ?alterEgo dbo:portrayedBy ?actor .

  # Find the author of ""Smartbomb""
  ?book dbr:Smartbomb_(book) ;
        dbo:author ?author .
  
  # Find an actor from the film ""ATL""
  ?film dbr:ATL_(film) ;
        dbo:starring ?atlActor .

  # Check if the same person is involved in all three
  FILTER (?actor = ?author || ?actor = ?atlActor)
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find movies Herschel Bernardi acted in
  ?movie dbo:starring <http://dbpedia.org/resource/Herschel_Bernardi> .
  
  # Check if the movie has an actor whose parent is a Photographer
  ?movie dbo:starring ?actor .
  ?actor foaf:parent ?parent .
  ?parent dbo:occupation ""Photographer""@en .

  # Find connection to Mariclare Costello through her spouse's child
  OPTIONAL {
    ?spouse foaf:mbox <http://dbpedia.org/resource/Mariclare_Costello> .
    ?child foaf:parent ?spouse .
    ?actor foaf:parent ?child .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:rank ""Commander"" .
  ?commander dbo:participatedInMilitaryConflict dbr:Algerian_War .

  # Societal event
  ?event dbo:subject ?commander ;
         a dbo:SocietalEvent .

  # Television show
  ?tvshow dbo:starring ?commander ;
          a dbo:TelevisionShow .

  # Family relations
  ?commander dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?parent dbo:child ?commander .
  ?parent dbo:parent dbr:Archduke_Charles_Joseph_of_Austria .
  
  FILTER(?commander = dbr:Francis_Ferdinand)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?curranArtist ?claptonBandMember ?bandOfClaptonBandMember ?kimWilsonRealName ?kimWilsonBand
WHERE {
  # Find Nicholas Michael Curran's alias if he is a musical artist
  OPTIONAL {
    ?curran dbr:Nicholas_Michael_Curran ;
            dbo:birthName ?curranArtist .
  }

  # Eric Clapton's bands and their members
  ?claptonBandMember dbo:memberOf ?bandOfClaptonBandMember ;
                     dbo:memberOf ?claptonBand .
  FILTER(?claptonBand IN (dbr:Cream, dbr:Derek_and_the_Dominos))

  # Kim Wilson's real name and band association
  ?kimWilson dbr:Kim_Wilson ;
             dbo:birthName ?kimWilsonRealName ;
             dbo:memberOf ?kimWilsonBand .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find associated musical artists of James Plotkin
  ?artist1 dbo:associatedMusicalArtist dbr:James_Plotkin .
  
  # Step 2: Find associated musical artists of those artists
  ?artist2 dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Check if these second-level artists have a reference to ""Burnt by the Sun""
  ?reference dbo:wikiPageRedirects dbr:Burnt_by_the_Sun .
  ?artist2 dbp:reference ?reference .

  # Step 4 & 5: Ensure the artist is a band and an organization
  ?artist2 rdf:type dbo:Band ;
           rdf:type dbo:Organization .

  # Step 6: Find band members of these groups
  ?bandMember dbo:memberOf ?artist2 .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?marianoRajoyOffice ?partyLeaderOffice ?madridElectionOfficeHolder
WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Miguel Maura's party and its leader's office
  dbr:Miguel_Maura_Maura dbo:memberOfParliament ?miguelMauraParty .
  ?miguelMauraParty dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?partyLeaderOffice .

  # Office holder of the 2003 Madrid City Council election
  {
    SELECT DISTINCT ?madridElectionOfficeHolder WHERE {
      ?election dbr:Madrid_City_Council_Election_2003 dbo:electedOfficial ?madridElectionOfficeHolder .
    }
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent ?birthRegionCountry
WHERE {
  # Claude Bowes-Lyon's child
  ?child dbo:parent dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # Parent of this child (also parent of Mary Elphinstone)
  ?commonParent dbo:child ?child ;
                dbo:child dbr:Mary_Elphinstone_Lady_Elphinstone .

  # Birthplace of William Gayner
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  
  # Ensure birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Common parent must be native to this birthplace
  ?commonParent dbo:nativePlace ?birthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father1 .
  
  # Child of Cecilia Renata's father (Cecilia Renata herself or another child)
  ?child1 dbo:parent ?father1 .

  # Archduke Charles Joseph of Austria's parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent2 .
  
  # Child of this parent (could be Archduke Charles Joseph himself or another child)
  ?child2 dbo:parent ?parent2 .

  # Commander in the war (historical figure)
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ?rank ;
             dbo:memberOf ?regiment .
  
  FILTER(?rank = ""Commander"" && ?regiment = dbr:2nd_Dragoon_Regiment_(France)) .

  # Societal event, general event, and television show
  ?person a dbo:SocietalEvent ;
          a dbo:Event ;
          a dbo:TelevisionShow .
  
  # Connect the person to the identified individuals
  OPTIONAL { ?person dbo:relatedTo ?child1 . }
  OPTIONAL { ?person dbo:relatedTo ?child2 . }
  OPTIONAL { ?person dbo:relatedTo ?commander . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  ?antoine a dbo:Duke ;
           foaf:name ""Antoine, Duke of Lorraine""@en .

  # Child of Antoine who is royalty
  ?child dbo:parent ?antoine ;
         dbo:royalty true .

  # Parent of the child (who must be royalty and noble)
  ?parent dbo:child ?child ;
          dbo:royalty true ;
          dbo:noble true .

  # Spouse of this parent
  ?parent dbo:spouse ?spouse .

  # Ensure one of these descendants leads to Dorothea of Lorraine's father
  ?descendant dbo:father ?dorotheasFather .
  ?dorotheasFather foaf:name ""Dorothea of Lorraine""@en ;
                   dbo:child ?descendant .

  FILTER(?parent = ?descendant)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?work WHERE {
  # Find Janet Gaynor's movies
  ?film a dbo:Film ;
        dbo:starring dbr:Janet_Gaynor .
  
  OPTIONAL {
    # Check if the movie is based on any work
    ?film dbo:basedOn ?work .
  }
  
  BIND(?film AS ?movie)
}
```",1,3,2,1,1,3,3,71,2,28,1,0.06666666666666667,0.6666666666666666,0.1212121212121212
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party ?entityInColombia WHERE {
  # Find Gustavo Petro's political party affiliation
  OPTIONAL { 
    dbr:Gustavo_Petro dbo:politicalParty ?party .
  }
  
  # Retrieve an entity in Colombia (e.g., a city)
  OPTIONAL {
    ?entityInColombia dbo:country dbr:Colombia .
    FILTER NOT EXISTS { ?entityInColombia rdf:type dbr:Gustavo_Petro } # Ensure it's not Gustavo Petro
  }
}
```",3,3,4,2,2,2,3,28,2,2139,0,0.0009341429238673517,1.0,0.0018665422305179653
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify Nick Curran as a musical artist
  dbr:Nick_Curran dbo:occupation dbr:Musical_artist .

  # Find associations with other artists, particularly those related to The Fabulous Thunderbirds and Kim Wilson
  OPTIONAL { 
    ?association dbo:artist dbr:Nick_Curran .
    ?association dbo:associatedBand dbr:The_Fabulous_Thunderbirds ;
                 dbo:member dbr:Kim_Wilson .
    ?association dbo:associatedArtist ?associatedArtist .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName ?profession 
WHERE {
  VALUES ?movie { dbr:Rustlers'_Rhapsody }
  
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  OPTIONAL { ?actor dbo:occupation ?profession . FILTER(lang(?actorName) = 'en') }

  # Filter to ensure we get actors with a professional role
  FILTER EXISTS { ?actor dbo:occupation ?profession }
}
ORDER BY ?actorName
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Joey B"" .
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:starring dbr:Iliza_Shlesinger .
}
```",1,3,2,1,1,2,3,28,1,6,0,0.14285714285714285,1.0,0.25
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember
WHERE {
  # GS9 entity
  VALUES (?gs9) { <http://dbpedia.org/resource/GS9> }

  # Find members of GS9 who are both artists and musical artists
  ?member dbo:memberOf ?gs9 .
  ?member rdf:type ?type1 .
  FILTER (
    ?type1 = dbo:MusicalArtist || 
    ?type1 = dbo:Artist
  ) .

  # For each member, find associated musical artists
  ?member dbo:associatedBand ?associatedArtist .
  
  # Ensure the associated artist is a musical group
  ?associatedArtist rdf:type dbo:MusicalGroup .

  # Find band members of these associated musical artists
  ?bandMember dbo:memberOf ?associatedArtist .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickArtist ?kimBand WHERE {
  # Find the musical artist associated with Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:musicalArtist ?nickArtist .
  }
  
  # Find the band associated with Kim Wilson
  dbr:Kim_Wilson dbo:bandMember dbr:The_Fabulous_Thunderbirds ;
                 dbo:associatedBand ?kimBand .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
  # Spanish Socialist Workers' Party (PSOE)
  dbr:Spanish_Socialist_Workers'_Party dbo:member ?person .
  
  # Leader during the 2009 Galician regional election
  ?election dbo:winner ?party .
  ?party rdfs:label ""Partido dos Socialistas de Galicia""@es .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))

  # Find the leader of PSOE in Galicia during this election
  ?person dbo:office ?office .
  ?person rdfs:label ?leaderLabel .
  
  # Ensure the person is associated with the 2009 Galician regional election leadership
  OPTIONAL { ?person dbo:spouse ?relatedPerson . }
  FILTER (CONTAINS(LCASE(?leaderLabel), ""galicia"") && CONTAINS(LCASE(?office), ""president""))
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  # Step 1: Find the album of ""What You Know"" by T.I.
  ?song dbo:title ""What You Know""@en .
  ?song dbo:artist dbr:T.I. ;
        dbo:album ?album .

  # Step 2: Find actors associated with that album
  OPTIONAL { ?album dbo:contributor ?actor . }

  # Step 3: Identify the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Step 4: Find a movie featuring both the actor and the author
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?myatHponePyo dbo:predecessor ?person .
  ?sawMinHla dbo:child ?person .
  ?father dbo:spouse ?mother .
  ?myatHponePyo dbo:parent ?father .
  ?person a dbo:Monarch ; # Assuming royalty is represented by Monarch
          dbo:spouse ?mother .
}
```",4,5,5,2,3,3,3,71,0,6,1,0.0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the professional singer
SELECT ?singer WHERE {
  ?singer a dbo:Singer .
  FILTER EXISTS { ?singer dbo:profession ""Singer"" . }
}

UNION

# Query for the alter ego of The Shadow (Lamont Cranston)
SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston ;
                  dbo:profession ?profession .
  FILTER EXISTS { ?profession rdfs:label ""Actor""@en }
}

UNION

# Query for the band of Robert Lamar Thompson (Bobby Thompson)
SELECT ?band WHERE {
  dbr:Bobby_Thompson dbo:memberOfBand ?band .
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?fullName .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:surname ?surname . }
  ?person dbo:birthPlace ?place .
  FILTER (regex(str(?place), ""Florida"", ""i"") || regex(str(?person dbo:nationality), ""United States; Florida"", ""i""))
  
  BIND(CONCAT(
    IF(BOUND(?givenName), ?givenName, """"), 
    "" "", 
    IF(BOUND(?surname), ?surname, """")
  ) AS ?birthName)
}
LIMIT 1
```",2,3,3,2,1,3,3,71,0,0,59,0,0.0,0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team 
WHERE {
  # Get Marcelo Sarmiento's birth date
  dbr:Marcelo_Sarmiento dbo:birthDate ?marceloSarmientoBirthDate .

  # Get Juan Carlos Molina's team at the time of his birth
  dbr:Juan_Carlos_Molina dbo:team ?team ;
                        dbo:birthDate ?molinaBirthDate .
  
  # Ensure both are soccer players and managers
  dbr:Marcelo_Sarmiento a dbo:SoccerPlayer, dbo:SoccerManager .
  dbr:Juan_Carlos_Molina a dbo:SoccerPlayer, dbo:SoccerManager .

  # Filter to ensure the team is relevant around his birth year
  FILTER(YEAR(?molinaBirthDate) = YEAR(?marceloSarmientoBirthDate))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse WHERE {
  # Step 1: Find the landmark by elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation = ""20.116800000000001347""^^xsd:float)

  # Step 2: Determine the location and ruling party of this landmark
  ?landmark dbo:location dbr:Location ; # Replace with actual location resource if known
            dbo:governingBody ?party .
  
  ?partyMember a dbo:PartyMember ;
               dbp:memberOf ?party .

  # Step 3: Find the actor of ""1,000 Dollars a Minute""
  ?film dbo:title ""1,000 Dollars a Minute"" ;
        dbo:actor ?actor .

  # Step 4: Identify the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Step 5: Identify Harriette Arlene Lake
  ?person dbp:birthday ?birthDate ;
          rdfs:label ""Harriette Arlene Lake""@en .
  
  FILTER(?spouse = ?person)

  # Ensure the party member and spouse are the same individual
  FILTER(?partyMember = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  ?award dbo:country dbr:United_States_of_America .
  ?award dbo:name ?name .
  FILTER regex(?name, ""town|city|village"", ""i"") .
  
  ?recipient dbo:location dbr:New_York_(state) .
  ?recipient dbo:awardsReceived ?award .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Doon Arbus' parents
SELECT ?parent WHERE {
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  ?doonArbus dbo:parent ?parent .
}

UNION

# Query for the parent of a professional in Eugène Cattin's profession
SELECT DISTINCT ?parent WHERE {
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  ?eugeneCattin dbo:occupation ?profession .

  ?otherProfessional a dbo:Person ;
                     dbo:occupation ?profession ;
                     dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bobProfession ?bandName ?producerName ?producerProfession 
WHERE {
  # Part 1: Bob Thompson (musician) and his band
  ?bob a dbo:MusicArtist ;
       foaf:name ""Bob Thompson"" .
  
  OPTIONAL { ?bob dbo:profession ?bobProfession . }
  OPTIONAL { ?band a dbo:Band ; dbo:bandMember ?bob . 
             ?band rdfs:label ?bandName . FILTER (lang(?bandName) = 'en') }

  # Part 2: Producer of Coke Studio Philippines
  ?producer a dbo:Producer ;
            foaf:name ?producerName .
  
  OPTIONAL { ?producer dbo:profession ?producerProfession . }
  OPTIONAL { ?show dbo:producer ?producer ;
             rdfs:label ""Coke Studio Philippines""@en }
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?shelbyActor ?goldenMasterAlterEgo WHERE {
  # Find the actor for Shelby Oaks
  ?character a dbo:Character ;
             rdfs:label ""Shelby Oaks""@en .
  ?character dbo:actor ?shelbyActor .

  # Find the alter ego in The Golden Master series
  ?series a dbo:TelevisionSeries ;
          rdfs:label ""The Golden Master""@en .
  ?characterInGoldenMaster a dbo:Character ;
                           dbo:inSeries ?series ;
                           foaf:name ?goldenMasterAlterEgo .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName
WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:givenName ?givenName .
  ?person foaf:familyName ?familyName .
  ?person dbo:birthName ""Nicholas Michael Curran"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mariclare Costello""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?duke rdf:type dbo:Duke ;
        foaf:name ""Anthony Ulrich of Brunswick""@en .
  
  ?duke dbo:child ?child .

  FILTER EXISTS { 
    ?child rdf:type ?royaltyType .
    VALUES ?royaltyType { 
      dbo:Monarch 
      dbo:RoyalFamilyMember
    }
  }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?philippAlbrecht a dbo:Duke ;
                   foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?child dbo:childOf ?philippAlbrecht .

  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild ?royalTitle
WHERE {
  # Find Archduke Charles Louis of Austria
  ?archduke rdf:type dbo:Archduke ;
            rdfs:label ""Charles Louis, Archduke of Austria""@en .
  
  # Find his children
  ?archduke dbo:child ?child .

  # For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .

  # Check if the grandchild is royalty
  OPTIONAL { ?grandchild dbo:royalTitle ?royalTitle . }
  
  FILTER EXISTS {
    ?grandchild rdf:type/rdfs:subClassOf* dbo:Royal .
  }

  FILTER (LANG(?archdukeLabel) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars involving the 2nd Dragoon Regiment (France)
  ?regiment dbo:participatedIn ?war .
  FILTER(CONTAINS(LCASE(STR(?regiment)), ""2nd dragoon regiment france"")) .

  # Ensure the war is a societal event and an event
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event .

  # Check if there's a television show based on this war
  OPTIONAL {
    ?tvShow dbo:basedOn ?war .
    FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionSeries }
  }

  # Ensure the result is not empty (i.e., there is a TV show)
  FILTER(EXISTS { ?tvShow dbo:basedOn ?war })
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Joe_Biden .
  OPTIONAL { ?work dbo:country dbr:United_States . }
}
```",3,7,4,2,2,3,2,20,0,2,1,0.0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?nativeCountry WHERE {
  VALUES ?person { 
    dbr:Theodor_Heuss 
    dbr:John_Stegeman 
    dbr:Thomas_Reis 
  }
  
  OPTIONAL { ?person dbo:nationality ?nationality . FILTER(?nationality != """") }
  BIND(CASE WHEN ?nationality = dbr:Germany THEN ""Germany""
            WHEN ?nationality = dbr:Netherlands THEN ""Netherlands""
            WHEN ?nationality = dbr:Brazil THEN ""Brazil""
            ELSE """" END AS ?nativeCountry)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Gene Kelly""@en .
  OPTIONAL { ?actor dbo:film dbr:Aladdin_(1958_film) . }
  ?actor dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find Janet Gaynor's notable movies
  VALUES (?movie) { 
    dbr:7th_Heaven_(1927_film)
    dbr:Street_Angel_(film)
    dbr:Sunrise:_A_Story_of_One_Night
  }
  
  ?movie dbo:starring dbr:Janet_Gaynor .
  
  # Find the producers of these movies
  ?movie dbo:producer ?producer .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tupacArtist ?joeyArtist WHERE {
  # Tupac Shakur ($pacely)
  ?tupac dbo:birthName ""Tupac Amaru Shakur""@en .
  ?tupac dbo:profession dbr:Musical_artist .

  OPTIONAL { 
    ?tupacArtist dbo:associatedBandOrMusicalArtist ?tupac .
    ?tupacArtist foaf:name ?artistName .
    FILTER (lang(?artistName) = ""en"")
  }

  # Joey Bada$$
  ?joey dbo:birthName ""Joseph Anthony Cartagena""@en .
  ?joey dbo:profession dbr:Musical_artist .

  OPTIONAL { 
    ?joeyArtist dbo:associatedBandOrMusicalArtist ?joey .
    ?joeyArtist foaf:name ?artistNameJoey .
    FILTER (lang(?artistNameJoey) = ""en"")
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
# Query for actor of ""The Campus Queen""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""The Campus Queen""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Query for associated musical artist of Cynthia Morgan
SELECT ?associatedArtist WHERE {
  ?cynthia rdfs:label ""Cynthia Morgan""@en ;
           dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationChristianIX ?administrationSchleswig
WHERE {
  # For Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:positionTitle ?administrationChristianIX .
  
  # Attempt to find information related to the administration of Schleswig
  OPTIONAL {
    ?schleswigEntity a dbo:AdministrativeRegion ;
                     rdfs:label ""Duchy of Schleswig""@en .
    ?schleswigEntity dbo:mayor ?mayorOfSchleswig .
    ?mayorOfSchleswig dbo:positionTitle ?administrationSchleswig .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?caesar a dbo:Person ;
          foaf:name ""Julius Caesar""@en .
  
  ?caesar dbo:militaryConflict ?war .

  FILTER (strstarts(str(?war), str(dbr:Gaul_Wars)))
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfCarrieJohnson (SAMPLE(?birthNameOfJohnBoxer) AS ?birthName)
WHERE {
  # Find the spouse of Carrie Johnson
  ?carrieJohnson dbo:spouse ?spouseOfCarrieJohnson .
  FILTER(STRSTARTS(LCASE(STR(?carrieJohnson)), ""http://dbpedia.org/resource/carrie_johnson""))

  # Find the birth name of John Boxer
  ?johnBoxer foaf:name ?birthNameOfJohnBoxer .
  FILTER(STRSTARTS(LCASE(STR(?johnBoxer)), ""http://dbpedia.org/resource/john_boxer""))
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  {
    # Assuming ""Awardee of 25"" is a specific award in DBpedia
    ?award1 rdf:type dbo:Award .
    ?award1 rdfs:label ""Awardee of 25""@en .
    ?award1 dbo:awardedFor ?war .
  }
  UNION
  {
    # Assuming ""Golden Sword for Bravery"" is a specific award in DBpedia
    ?award2 rdf:type dbo:Award .
    ?award2 rdfs:label ""Golden Sword for Bravery""@en .
    ?award2 dbo:awardedFor ?war .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Query to find the producer of ""The Adventures of Tom Sawyer"" (1938 film)
SELECT ?producer WHERE {
  ?film dcterms:title ""The Adventures of Tom Sawyer""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1938) .
  ?film dbo:productionCompany ?company .
  ?company dbo:president ?producer .
}

UNION

# Query to find the producer of Janet Gaynor's notable work ""7th Heaven"" (1927)
SELECT ?producer WHERE {
  ?film dcterms:title ""7th Heaven""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1927) .
  ?film dbo:starring <http://dbpedia.org/resource/Janet_Gaynor> .
  ?film dbo:productionCompany ?company .
  ?company dbo:president ?producer .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Russian_Empire .
  
  OPTIONAL { 
    ?person dbo:awardsReceived ?award .
    FILTER regex(str(?award), ""25"", ""i"") .
  }
}
```",3,3,4,2,2,2,3,28,0,181,2,0.0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?baedaMaryamI dbo:parent ?parent .
  ?parent rdf:type dbo:Man .
  FILTER NOT EXISTS { ?parent dbo:motherOf ?child . }
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  OPTIONAL { ?person dbo:name ?name . FILTER(lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

} ORDER BY ?person
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?film dbo:title ""High Society Blues""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?childOfFerdinandIII WHERE {
  # Find Ferdinand II's children and identify the commander in the Thirty Years' War
  ?ferdinandII dbo:child ?child .
  VALUES ?ferdinandII {<http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor>} .

  # Check if this child was a commander during the Thirty Years' War
  OPTIONAL {
    ?child dbp:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""military""))
  }

  # Find Ferdinand III's children
  ?ferdinandIII dbo:child ?childOfFerdinandIII .
  VALUES ?ferdinandIII {<http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor>} .

  # Determine if the commander is also a parent of any child of Ferdinand III
  ?commander dbo:spouse ?parentSpouse .
  FILTER(?child = ?commander || ?parentSpouse = ?commander)
}
```",4,4,5,2,3,3,3,71,1,13,0,0.07142857142857142,1.0,0.13333333333333333
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war ?birthplaceEntity WHERE {
  # Find the awardee of the Gillmore Medal and their force
  ?awardee dbo:award dbr:Gillmore_Medal .
  ?awardee dbo:militaryForce ?force .

  # Find Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:participatedInWar ?war .

  # Find the person who died on 1850-08-05 and their birthplace details
  ?person dbp:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthplace .
  
  # Ensure the birthplace is a settlement and American
  ?birthplace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Get the entity related to the birthplace
  ?birthplaceEntity rdfs:label ?birthplaceLabel .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?war WHERE {
  ?awardee dbo:recipientOf dbr:Congressional_Gold_Medal .
  ?awardee dbo:relatedToWar ?war .
  ?awardee dbo:location dbr:Charleston,_South_Carolina .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?algerianWarInvolvement ?societalEvent ?tvShow WHERE {
  ?commander a dbo:Monarch ;
             dbo:spouse ?spouse ;
             dbo:child ?child .

  ?commander dbo:father dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Empire .

  OPTIONAL { ?commander dbo:militaryConflict ?algerianWarInvolvement . FILTER(CONTAINS(LCASE(STR(?algerianWarInvolvement)), ""algerian war"")) }
  
  OPTIONAL { ?commander dbo:relatedEvent ?societalEvent . FILTER(CONTAINS(LCASE(STR(?societalEvent)), ""revolution"") || CONTAINS(LCASE(STR(?societalEvent)), ""event"")) }
  
  OPTIONAL { ?commander dbo:tvShow ?tvShow . FILTER(CONTAINS(LCASE(STR(?tvShow)), ""television show"")) }

  FILTER (CONTAINS(LCASE(STR(?commander)), ""leopold i""))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?successor ?writer ?greatTurkishWarCommander WHERE {
  # Find the commander in the Russo-Polish War (1654–1667)
  ?commander dbo:officeHolder ?office .
  ?commander dbo:politicalParty ?party .
  ?commander dbo:birthPlace dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Find the successor of this commander
  ?successor dbo:successor ?commander .

  # Reference to the writer of George Ducas' work
  ?writer dbo:wikiPageWikiLink dbr:George_Ducas .
  
  # Commander in the Great Turkish War
  ?greatTurkishWarCommander dbo:officeHolder ?office2 .
  ?greatTurkishWarCommander dbo:birthPlace dbr:Great_Turkish_War .

  FILTER EXISTS { ?commander rdfs:label ?label1 . FILTER (lang(?label1) = ""en"") }
  FILTER EXISTS { ?successor rdfs:label ?label2 . FILTER (lang(?label2) = ""en"") }
  FILTER EXISTS { ?writer rdfs:label ?label3 . FILTER (lang(?label3) = ""en"") }
  FILTER EXISTS { ?greatTurkishWarCommander rdfs:label ?label4 . FILTER (lang(?label4) = ""en"") }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?force WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:honoursReceived dbr:Commander_of_the_Order_of_the_British_Empire .
  
  OPTIONAL { 
    ?commander dbo:militaryServiceIn dbr:Sinking_of_Prince_of_Wales_and_Repulse .
  }
  
  OPTIONAL {
    ?commander dbo:memberOf ?force .
  }

  FILTER EXISTS {
    ?commander dbo:militaryServiceIn dbr:Sinking_of_Prince_of_Wales_and_Repulse
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?alterEgo
WHERE {
  # Find actors in Dispatches from Elsewhere
  ?show dbr:Dispatches_from_Elsewhere .
  ?show dbo:starring ?actor .

  OPTIONAL {
    # Check if the actor has an alter ego related to The Shadow (comic character)
    ?actor dbo:alterEgo ?alterEgo .
    ?alterEgo rdfs:label ""The Shadow""@en .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel WHERE {
  ?maria a dbo:Person ;
         rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(LANG(?spouseLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Neil Young is both a musician and writer of ""The Live Anthology""
  dbr:The_Live_Anthology dbo:author dbr:N._Young ;
                          dbo:genre dbr:Musical_work .

  # Tupac Shakur's birth name
  dbr:Tupac_Shakur dbo:birthName ?birthName .
  
  FILTER(?birthName = ""Tupac Amaru Shakur"")

  # Find associated musical artists of Neil Young
  dbr:N._Young dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:birthPlace ?birthPlace .
  
  FILTER (
    EXISTS { 
      ?birthPlace dbo:country dbr:West_Germany .
    }
  )
}
```",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration WHERE {
  # Query for Olaf I of Denmark
  VALUES (?person) { dbr:Olaf_I_of_Denmark }
  OPTIONAL {
    ?person dbo:reign ?administration .
  }

  UNION

  # Query for Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  VALUES (?person) { dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck }
  OPTIONAL {
    ?person dbo:positionHeld ?administration .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  ?person dbo:occupation ?occupation .
  
  FILTER (str(?date) = ""1955-02-22""^^xsd:date)
  FILTER CONTAINS(LCASE(str(?occupation)), ""athlete"")
}
```",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childOfCommander WHERE {
  # Step 1: Identify the commander in Siege of Mukha who is royalty
  ?commander dbo:event dbpedia:Siege_of_Mukha ;
             a dbo:Monarch ; # Assuming Monarch as a class for royalty

  # Step 2: Find the child of this royal commander
  ?childOfCommander foaf:parent ?commander .

  # Step 3: Identify the father of the parent (grandfather) who is royalty and an office holder
  ?grandfather foaf:parent ?parent ;
               a dbo:Monarch ; # Assuming Monarch as a class for royalty
               dbo:officeHolder ?office . # Assuming officeHolder property for office holding

  # Step 4: Ensure the parent of the child is this grandfather
  ?parent foaf:parent ?childOfCommander .

  # Step 5: Identify the child of Baeda Maryam I
  ?baedaChild foaf:parent dbpedia:Baeda_Maryam_I .

  # Step 6: Ensure the parent of the baedaChild is the same as the parent found in step 3
  FILTER(?parent = ?grandfather)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Ackquille Jean Pollard is French Montana
  dbr:French_Montana a dbo:MusicalArtist ;
                     foaf:name ""Ackquille Jean Pollard"" ;
                     dbo:memberOfBandOrchestra dbr:GS9 .

  # Find other members of GS9 who are also musical artists
  ?artist a dbo:MusicalArtist ;
          dbo:memberOfBandOrchestra dbr:GS9 .
  
  FILTER(?artist != dbr:French_Montana)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kiyosuEntity WHERE {
  ?kiyosuEntity a dbo:PopulatedPlace ;
                rdfs:label ""Kiyosu""@en .
  OPTIONAL { ?kiyosuEntity dbo:locatedIn dbr:Aichi_Prefecture . }
  OPTIONAL { ?kiyosuEntity dbo:country dbr:Japan . }
}
```",3,3,4,3,1,3,2,20,0,1,8916,0.0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?person dbo:deathPlace ?place .
  FILTER (str(?place) = ""Los Angeles"")
  
  ?parent foaf:child ?person ;
          foaf:name ""Amy Arbus""^^xsd:string .

  ?person dbo:film ?movie .
  ?movie a dbo:Film .
  
  ?movie dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?successorName WHERE {
  # Identify the Great Turkish War event
  dbr:Great_Turkish_War a dbo:MilitaryConflict .

  # Find Michał Kazimierz Pac's involvement in the war
  ?pacRole dbo:agent dbr:Michał_Kazimierz_Pac ;
          dbo:participatedIn dbr:Great_Turkish_War ;
          dbo:roleType dbo:Commander .

  # Identify the successor who is also a politician or office holder
  ?successorRole dbo:agent ?successor ;
                 dbo:participatedIn dbr:Great_Turkish_War ;
                 dbo:roleType dbo:Commander .
  
  ?successor dbo:occupation ?officeHolder .

  FILTER(?officeHolder IN (dbo:Politician, dbo:OfficeHolder)) .

  # Ensure the successor comes after Michał Kazimierz Pac
  ?successorRole dbo:after ?pacRole .

  BIND(STRAFTER(STR(?successor), ""http://dbpedia.org/resource/"") AS ?successorName)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
# Query for Sal Mineo's death place
SELECT ?deathPlace WHERE {
  dbpedia:Sal_Mineo dbo:placeOfBirth ?birthPlace .
  dbpedia:Sal_Mineo dbo:deathPlace ?deathPlace .
}

UNION

# Query to find the main actor(s) of ""The Sky Ranger"" (1928 film)
SELECT DISTINCT ?actor ?actorDeathPlace WHERE {
  # Find the film
  ?film rdf:type dbo:Film ;
        rdfs:label ""The Sky Ranger""@en ;
        dbp:releaseDate ?releaseDate .
  
  FILTER(YEAR(?releaseDate) = 1928)

  # Find actors in this film
  ?film dbo:starring ?actor .

  # Get the death place of each actor
  OPTIONAL { 
    ?actor dbo:deathPlace ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?mitaka { dbr:Mitaka }
  ?mitaka dbo:officialWebsite ?reference .
  UNION
  ?mitaka dbo:wikiPageWikiLink ?relatedResource .
  FILTER EXISTS { ?relatedResource a dbo:Place . } # Ensuring related resources are places or relevant entities.
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
# Query for the actor of Color Me Dead and their death place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace
WHERE {
  ?movie dbo:title ""Color Me Dead""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}

UNION

# Query for the actor of Aladdin (1958 film) and their death place
SELECT ?actor ?deathPlace
WHERE {
  ?movie dbo:title ""Aladdin (1958 film)""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouse WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  ?person dbo:party dbr/Democratic_Party_(United_States) .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:profession dbr/Actor .
  ?spouse dbo:film dbr/1,000_Dollars_a_Minute .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ebrahim Alkazi""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work dbo:creator dbr:Cora_Sue_Collins .
  ?work rdfs:label ""The Claim""@en .
  FILTER (lang(?workLabel) = 'en') # Ensure the label is in English
  ?work dbo:producer ?producer .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlaceEntity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  
  # Assuming there is a property linking to Gillmore Medal awardees
  OPTIONAL { ?person dbo:award dbr:Gillmore_Medal . }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_States ;
              dbo:type ?type .
  FILTER (?type = ""Settlement"" || ?type = ""City"" || ?type = ""Town"") .

  # Get the entity associated with the birthplace
  ?birthPlaceEntity rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en') .
  
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(REPLACE(STR(?birthPlace), "" "", ""_"")), ""/"", """"))) AS ?birthPlaceEntity)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Maximilian I, Holy Roman Emperor""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:commonName ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person foaf:name ""Shirley Stoler""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,2,20,0,1,19241,0.0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?king ?reignStart ?reignEnd ?territory WHERE {
  VALUES ?king { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark
  }
  
  ?king dbo:reign ?reign .
  ?reign dbo:startYear ?reignStart ;
         dbo:endYear ?reignEnd .

  OPTIONAL {
    ?territory dbo:administrativeCapital dbr:Copenhagen .
    ?king dbo:country ?territory .
  }

  FILTER(?reignStart != """" && ?reignEnd != """")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?child WHERE {
  # Find the spouse of Charles II of Naples
  ?charles2 dbo:spouse ?spouse .
  ?charles2 rdfs:label ""Charles II of Naples""@en .

  # Find children of that spouse
  ?spouse dbo:child ?child .

  # Ensure the child is royalty
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Ensure the child is related to Béla IV of Hungary
  ?belav dbp:child ?child .
  ?belav rdfs:label ""Béla IV of Hungary""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?bookTitle ?spouse WHERE {
  VALUES ?person { dbr:Bill_Clinton }
  
  # Check if the person is a commander in the United States Navy
  OPTIONAL { ?person dbo:militaryCommanderOf ?commandRole . FILTER(CONTAINS(LCASE(STR(?commandRole)), ""united states navy"")) }

  # Check if the person authored ""Back to Work""
  OPTIONAL {
    ?book dbr:Back_to_Work_(book) .
    ?book dbo:author ?person .
  }
  
  # Check if the spouse is Hillary Clinton
  OPTIONAL { 
    ?person dbo:spouse dbr:Hillary_Clinton .
  }

  BIND(?person AS ?role)
  OPTIONAL { ?book dbo:title ?bookTitle . FILTER(LCASE(STR(?bookTitle)) = ""back to work"") }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?showTitle WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Richard E. Grant""@en .
  
  ?show dbo:starring ?actor ;
        dbo:title ?showTitle ;
        dbo:genre ?genre .

  FILTER EXISTS { 
    ?genre rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""television show"") || CONTAINS(LCASE(?label), ""tv series""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?work ?title WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Bill Clinton""@en .
  
  ?work dbo:author ?author ;
        a dbo:Book ;
        dct:title ?title .

  OPTIONAL { 
    ?work dbo:subject dbr:HIV/AIDS .
  }
  
  OPTIONAL {
    ?event dbo:agent ?author ;
           dbo:location dbr:United_States_Navy .
  }

  FILTER (CONTAINS(LCASE(?title), ""my life""))
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalty WHERE {
  # Step 1: Alexander of Württemberg's great-grandchild
  ?alexander dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear ;
             dbp:name ""Alexander of Württemberg""@en .
  
  ?child1 dbo:parent ?alexander ;
          rdf:type dbo:Person .

  ?grandchild dbo:parent ?child1 ;
              rdf:type dbo:Person .

  ?greatGrandchild dbo:parent ?grandchild ;
                   rdf:type dbo:Person .

  # Step 2: Archduchess Helena's spouse
  ?helena dbp:name ""Helena of Austria""@en ;
          dbo:spouse ?spouse .
  
  # Step 3: Child of the spouse
  ?spouseChild dbo:parent ?spouse ;
               rdf:type dbo:Person .

  # Step 4: Predecessor (likely sibling) of the child
  ?predecessor dbo:parent ?spouse ;
               rdf:type dbo:Person .
  
  FILTER(?predecessor != ?spouseChild)

  # Step 5: Check if the predecessor is royalty
  ?predecessor rdf:type ?royaltyType .
  FILTER(STRSTARTS(STR(?royaltyType), ""http://dbpedia.org/ontology/RoyalFamilyMember"") || 
         STRSTARTS(STR(?royaltyType), ""http://dbpedia.org/ontology/Monarch""))

  # Step 6: Match the great-grandchild with the predecessor
  ?greatGrandchild = ?predecessor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 2: Find his child, Victor Stanley (Royal Navy officer)
  ?victor dbo:childOf ?edward ;
          dbp:occupation ""Royal Navy officer""@en .

  # Step 3: Determine Victor's other parent
  ?otherParent dbo:spouse ?edward ;
               dbo:child ?victor .

  # Step 4: Ensure the other parent is a politician and office holder
  FILTER EXISTS { ?otherParent dbo:occupation ""Politician""@en }
  FILTER EXISTS { ?otherParent dbo:officeHolder true }

  # Step 5: Find the child of this parent (Victor Stanley)
  ?victorsChild dbo:childOf ?otherParent .

  # Step 6: Determine the parent of this child
  ?parentOfChild dbo:parentOf ?victorsChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  ?charlesII dbo:spouse ?individual .
  FILTER (str(?charlesII) = ""Charles II of Naples"") .

  ?stephenV dbo:child ?individual .
  FILTER (str(?stephenV) = ""Stephen V of Hungary"") .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?laureateName WHERE {
  ?prize a dbo:NobelPrize ;
         dbo:awardCategory dbr:Nobel_Prize_in_Physics .
  ?prize dbo:laureate ?laureate .
  ?laureate rdfs:label ?laureateName .
  FILTER (LANG(?laureateName) = 'en')
}
ORDER BY ?laureateName
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardLabel WHERE {
  dbr:Max_Born dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  # Subquery to get Frédéric Bouraly's profession
  SELECT ?occupation WHERE {
    VALUES ?frédéricBouraly {<http://dbpedia.org/resource/Frédéric_Bouraly>}
    ?frédéricBouraly dbo:occupation ?occupation .
  }
  
  # Main query to find other professionals in the same occupation
  ?person a dbo:Person ;
          dbo:occupation ?occupation ;
          rdfs:label ?name .
  FILTER(?person != <http://dbpedia.org/resource/Frédéric_Bouraly>)
  FILTER(lang(?name) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
    # Step 1: Identify Saw Shwe Khet's child who is a royalty.
    ?child dbo:parent dbr:Saw_Shwe_Khet ;
           a dbo:RoyalPerson .

    # Step 2: Determine the predecessor of Myat Hpone Pyo.
    ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .

    # Ensure that the child is related to the predecessor found in step 2.
    ?child dbo:parent ?predecessor .

    # Step 3: Find out who the father of this child is and ensure he is a royalty.
    ?father dbo:spouse ?mother ;
            dbo:child ?child ;
            a dbo:RoyalPerson .

    # Step 4: Identify the spouse of this royal father.
    ?father dbp:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Cora Sue Collins' claim to fame
SELECT ?work WHERE {
  dbr:Cora_Sue_Collins dbo:notableWork ?work .
}

# Query to find the producer of A Star Is Born (1937)
SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?petroPartyLabel ?barrerasPartyLabel WHERE {
  # Gustavo Petro's party
  OPTIONAL { 
    dbr:Gustavo_Petro dbo:party ?petroParty .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Roy Barreras' party
  OPTIONAL { 
    dbr:Roy_Barreras dbo:party ?barrerasParty .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND (IF(BOUND(?petroParty), ?petroPartyLabel, ""Unknown"") AS ?petroPartyLabel)
  BIND (IF(BOUND(?barrerasParty), ?barrerasPartyLabel, ""Unknown"") AS ?barrerasPartyLabel)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  {
    ?person dbo:birthPlace dbr:India .
    OPTIONAL { ?person foaf:name ?name . }
  } UNION {
    ?person dbo:nationality dbr:India .
    OPTIONAL { ?person foaf:name ?name . }
  }
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,8977,15635,0,0.3647407768568178,1.0,0.5345202298371491
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .
  
  ?elvira dbo:spouse ?husband .
  OPTIONAL { ?elvira dbo:hasChild ?child . }
  
  ?child foaf:name ?childName .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies Herschel Bernardi starred in
  dbr:Herschel_Bernardi dbo:starring ?movie .
  
  # For each movie, find other actors
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Herschel_Bernardi) # Exclude Herschel Bernardi himself from the results
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonPredecessor WHERE {
  # Step 1: Find child of Archduchess Margarete Sophie of Austria
  ?child a dbo:Person ;
         dbo:parent dbr:Margarete_Sophie_of_Austria .

  # Step 2: Predecessor (parent) of that child is likely Margarete herself
  ?commonPredecessor dbr:Margarete_Sophie_of_Austria .

  # Step 3: Find Philipp Albrecht's child
  ?philippChild a dbo:Person ;
               dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Step 4: Trace back three generations from Alexander of Württemberg to find his great-great-grandchild
  ?greatGrandChild a dbo:Person ;
                  dbo:parent ?grandParent .
  ?grandParent a dbo:Person ;
               dbo:parent ?parent .
  ?parent a dbo:Person ;
          dbo:parent dbr:Aleksander_W%C3%BCrttemberg .

  # Step 5: Find the common predecessor
  ?philippChild ?relation ?greatGrandChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residenceCountry
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Alberto Núñez Feijóo""@en ;
          dbo:nationality dbr:Spain .
  
  ?person dbo:office ?office .

  ?person dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country (SAMPLE(?birthPlace) AS ?winstonBirthPlace)
WHERE {
  # Finding the country related to Lao She's work ""Rickshaw Boy""
  OPTIONAL { 
    dbr:Camel_Xiangzi dbo:setInLocation ?location .
    ?location rdfs:label ?country .
    FILTER(langMatches(lang(?country), ""EN""))
  }
  
  # Finding Winston Chang's birthplace
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?date ?location ?relatedEvent
WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:name ""Sinking of Prince of Wales and Repulse"" ;
         dbo:date ?date ;
         dbo:location ?location .

  OPTIONAL { 
    ?event dbo:partOf ?relatedEvent .
    FILTER (str(?relatedEvent) = str(dbr:World_War_II))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnusBirthplace ?renetaBirthplace WHERE {
  # Find the birthplace of Boyko Borisov, an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?boyko dbo:almaMater dbp:Plovdiv_University_Paisii_Hilendarski .
  ?boyko dbo:birthPlace ?alumnusBirthplace .

  # Find the birthplace of Reneta Kamberova
  dbpedia:Reneta_Kamberova dbo:birthPlace ?renetaBirthplace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?siege dbo:eventLocation dbr:Padua .
  ?siege dbo:date ?date .
  FILTER (CONTAINS(LCASE(STR(?siege)), ""siege of padua"") && YEAR(?date) = 1509)
  
  ?siege dbo:agent ?commander .
  ?commander rdf:type dbo:Monarch .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
  }
  
  OPTIONAL {
    ?residence dbp:nativePlace ?nativeOfResidence .
  }
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the father of Cecilia Renata of Austria and Eleonore of Austria, Queen of Poland
  ?father a dbo:Person ;
          dbo:child dbr:Cecilia_Renata_of_Austria ;
          dbo:child dbr:Eleonore_of_Austria,_Queen_of_Poland .

  # Find the commander who is also a child of this father
  ?commander a dbo:Person ;
             dbo:father ?father ;
             dbo:positionHeld ?dragoonPosition .

  # Ensure the position held is related to the 2nd Dragoon Regiment (France)
  ?dragoonPosition dbo:member dbr:2nd_Dragoon_Regiment_(France) .

  # Check for links to a societal event, an event, and a television show
  ?commander dbo:societalEvent ?societalEvent ;
             dbo:event ?event ;
             dbo:televisionShow ?tvShow .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify ""The Shadow"" as a video game
  dbr:The_Shadow_(video_game) dbo:genre dbr:Action_video_game .

  # Step 2: Find the alter ego of The Shadow in comics
  dbr:The_Shadow (dbo:alterEgo|dbo:characterName) ?alterEgo .
  
  # Step 3: Locate a TV show/movie featuring Richard E. Grant and this alter ego
  ?tvShow dbo:starring dbr:Richard_E._Grant ;
          dbo:genre dbr:Television_show ;
          dbo:character ?character .
  FILTER(?character = ?alterEgo)

  # Step 4: Determine the actor playing the role of the alter ego in that show/movie
  ?tvShow dbo:starring ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?actorName WHERE {
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor foaf:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""actor"")) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?type WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:partOf dbr:World_War_II .
  OPTIONAL { ?event a dbo:SocietalEvent . }
  FILTER EXISTS { ?event dbo:wikiPageRedirects dbr:Sinking_of_Prince_of_Wales_and_Repulse }
  BIND(""Military Conflict"" AS ?type)
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?singer ?occupation
WHERE {
  ?singer a dbo:Person .
  ?singer rdfs:label ""Singer""@en .
  OPTIONAL { ?singer dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  # Find Min Hla Htut's parent
  ?minHlaHtut dbo:childOf ?parent .
  
  # Min Hla Htut is the child of his own parent
  ?parent dbo:child ?minHlaHtut .

  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?spouse .

  # The person we are looking for is both Min Hla Htut and Saw Shwe Khet's spouse
  FILTER (?minHlaHtut = ?spouse)

  # Find the child of Saw Shwe Khet
  ?sawShweKhet dbo:child ?child .

  # Find the predecessor of Saw Shwe Khet's child
  ?predecessor dbo:successor ?child .
  
  # The person we are looking for is also the predecessor of Saw Shwe Khet's child
  FILTER (?minHlaHtut = ?predecessor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Shatta Wale's DBpedia resource
  VALUES (?shattaWale) { dbr:Shatta_Wale }
  
  # Fuse ODG's DBpedia resource
  VALUES (?fuseODG) { dbr:Fuse_ODG }
  
  # Find collaborations or associated artists
  ?collaboration dbo:artist ?artist .
  {
    ?collaboration dbo:performer ?shattaWale .
  } UNION {
    ?collaboration dbo:performer ?fuseODG .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""office holder""))
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?royaltyParent WHERE {
  # Find Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Identify Yeshaq I's parent who is a royalty
  dbr:Yeshaq_I dbo:parent dbr:?parent ;
               ?parent dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Check for any reference or connection between The Shadow and the royalty parent
  OPTIONAL { 
    dbr:The_Shadow dbo:reference dbr:?royaltyParent .
    BIND(dbr:?parent AS ?royaltyParent)
  }
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award Sangeet_Natak_Akademi_Fellowship .
  ?awardee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Nicholas Michael Curran's associated musical artist
SELECT ?artist WHERE {
  dbr:Nicholas_Michael_Curran dbo:musicalArtist ?artist .
}

UNION

# Query for The Fabulous Thunderbirds' real name
SELECT ?realName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:birthName ?realName .
}

UNION

# Query for a band member of Eric Clapton and their associated band
SELECT ?bandMember ?band WHERE {
  ?bandMember dbo:bandMemberOf dbr:Eric_Clapton ;
              dbo:musicalArtist ?band .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
# Query for Quincy Adams Gillmore
SELECT ?force ?war WHERE {
  ?gillmore dbo:award ?award .
  ?gillmore foaf:name ""Quincy Adams Gillmore"" .
  OPTIONAL { ?gillmore dbo:militaryUnit ?force . }
  OPTIONAL { ?gillmore dbo:participatedInWar ?war . }
}

# Query for a show awarded by the United States Congress
SELECT ?show ?war WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?award dbo:recipient ?show .
  OPTIONAL { ?show dbo:relatedToWar ?war . }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?office ?residenceCountry WHERE {
  ?person foaf:name ""Álvaro Quirós""@en .
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?person dbo:residence ?residence . }
  OPTIONAL { ?residence dbp:countryName ?residenceCountry . }
  
  FILTER EXISTS {
    ?election dbo:date ?date .
    ?election dbo:electedOffice ?office .
    ?person dbo:electedAs ?office .
    FILTER (YEAR(?date) = 2009)
  }

  FILTER EXISTS {
    ?santiago dbp:city ""Santiago de Compostela""@en .
    ?person dbo:birthPlace ?santiago .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?militaryForce WHERE {
  # Find the person who was awarded Knight Commander of the Order of the Bath
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .

  # Identify the war they commanded in
  ?war dbo:type dbr:Military_conflict ;
       dbo:commander ?awardee .
  
  # Check their association with the 30th (Cambridgeshire) Regiment of Foot during that war
  ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
           dbo:partOfWar ?war .

  # Find the military force involved in both the specified war and the Battle of Fort Royal
  ?militaryForce dbo:participatedIn ?war .
  ?battle dbr:Battle_of_Fort_Royal ;
          dbo:participatingMilitaryUnit ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorName (GROUP_CONCAT(?workLabel; separator="", "") AS ?works)
WHERE {
  # Query for the author of ""Promises to Keep""
  OPTIONAL {
    VALUES ?bookTitle { ""Promises to Keep"" }
    ?book dbo:title ?bookTitle ;
          dbo:author ?bidenAuthor .
    ?bidenAuthor rdfs:label ?authorName .
    FILTER (lang(?authorName) = 'en')
  }

  # Query for a written work by Douglas MacArthur during the Korean conflict
  OPTIONAL {
    VALUES ?commander { ""Douglas MacArthur"" }
    ?macarthur dbo:officeHolderOf ?office ;
               rdfs:label ?commander .
    FILTER (lang(?commander) = 'en')
    
    # Assuming a work related to his role in the Korean War
    ?work dbo:author ?macarthurAuthor ;
          dbo:title ?workTitle .
    ?workTitle rdfs:label ?workLabel .
    ?macarthurAuthor rdfs:label ?authorName2 .
    FILTER (lang(?workLabel) = 'en' && lang(?authorName2) = 'en')
  }
}
GROUP BY ?authorName
```",4,7,5,3,2,3,2,20,0,1,1,0.0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Edmund Hakewill-Smith Award""@en .
  
  ?recipient dbo:recipientOf ?award ;
             foaf:name ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?event WHERE {
  ?awardee dbo:title ""Knight Commander of the Order of the Bath""@en .
  ?awardee dbo:event ?event .
  ?event rdfs:label ""The Force""@en .
  ?event a dbo:SocietalEvent .
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?khlystMember WHERE {
  # Step 1: Find a member of Human Remains
  ?humanRemainsMember dbo:bandMember dbp:Human_Remains .
  
  # Step 2: Find an associated musical artist for the Human Remains member
  ?associatedArtist dbo:associatedMusicalArtist ?humanRemainsMember .
  
  # Step 3: Ensure the associated artist is a recognized musical artist
  ?associatedArtist rdf:type dbo:MusicalArtist .
  
  # Step 4: Check if this associated artist is also a band member of Khlyst
  ?khlystBandMember dbo:bandMember dbp:Khlyst ;
                   dbo:associatedMusicalArtist ?associatedArtist .
  
  # Step 5: Return the Khlyst band member
  BIND(?khlystBandMember AS ?khlystMember)
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?foundingDate WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Federal University of Paraíba""@en .
  OPTIONAL { ?university dbo:foundingDate ?foundingDate . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the figure known as The Triple X's
  ?tripleX a dbo:MilitaryPerson ;
           rdfs:label ""The Triple X's""@en .
  
  # Find the military conflict or event associated with The Triple X's
  ?conflict dbo:participatedIn ?tripleX .

  # Identify William Bayne and his role in that conflict
  ?bayne a dbo:MilitaryPerson ;
         rdfs:label ""William Bayne""@en .
  
  ?commanderRole dbo:roleName dbr:Commander ;
                 dbo:agent ?bayne ;
                 dbo:participatedIn ?conflict .

  # Retrieve the military force involved in this conflict
  ?militaryForce dbo:participatedIn ?conflict .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInBirthPlace
WHERE {
  # Find the war associated with Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggehufwudt dbo:participatedIn ?war .
  
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find an entity related to her birthplace
  ?birthPlace dbo:wikiPageRedirects ?entityInBirthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER EXISTS { 
    ?occupation rdfs:subClassOf* dbo:MusicalArtist .
  }
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbo:Agent .
  ?actor dbo:occupation dbc:Actors .
}
```",1,1,2,1,1,3,3,71,0,0,21580,0,0.0,0
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?parentLabel WHERE {
  # Find the resource for Commander of the Royal Victorian Order
  VALUES ?award { dbr:Commander_of_the_Royal_Victorian_Order }
  
  # Get individuals who have received this award
  ?awardee dbo:recipientOf ?award .
  
  # Retrieve parents of these awardees
  ?awardee dbo:parent ?parent .

  # Ensure the parent is a person and get its label for readability
  ?parent rdf:type dbo:Person .
  SERVICE <http://dbpedia.org/sparql> {
    ?parent rdfs:label ?parentLabel .
  }
  
  FILTER (lang(?parentLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbo:child dbp:Prince_Omar_bin_Faisal .
  ?child dbp:fatherOrMother ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?martin rdfs:label ""Martin of Aragon""@en .
  OPTIONAL { ?martin dbo:father ?parent . }
  OPTIONAL { ?martin dbo:mother ?parent . }
  ?parent rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferdinand III details
  dbr:Ferdinand_III,_Holy_Roman_Emperor a dbo:Monarch ;
    dbo:spouse dbr:Maria_Anna_of_Bavaria_(1574-1616) .

  # Maria Anna of Bavaria and her child
  dbr:Maria_Anna_of_Bavaria_(1574-1616) dbo:child ?child1 .
  
  # Ferdinand III's child who was a commander in the Thirty Years' War
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child2 .

  FILTER EXISTS { ?child2 dbo:occupation dbr:Thirty_Years_War }

  # Check if Ferdinand III is the father of both children
  FILTER (?person = dbr:Ferdinand_III,_Holy_Roman_Emperor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Bristol .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,971,1233,0,0.44056261343012704,1.0,0.6116535433070867
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantName ?officeEvent 
WHERE {
  # Find Anxo Quintana's association with PSOE and his role in a Spanish administration
  dbr:Anxo_Quintana dbo:memberOf dbr:Spanish_Socialist_Workers'_Party .
  
  # Identify the government or administration he was part of
  ?administration dbo:country dbr:Spain ;
                  dbo:minister ?ministerRole .

  # Ensure Anxo Quintana held a ministerial role in this administration
  ?ministerRole dbo:officeHolder dbr:Anxo_Quintana .
  
  # Retrieve the name of the tenant (person holding office)
  ?administration dbo:head ?tenant ;
                  rdfs:label ?tenantName .

  # Find events related to his leadership or role in this administration
  ?event dbo:agent dbr:Anxo_Quintana ;
         dbo:subject ?administration ;
         rdfs:label ?officeEvent .
  
  FILTER (lang(?tenantName) = 'en' && lang(?officeEvent) = 'en')
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?administration a dbo:Government ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party .
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentAward
WHERE {
  ?award dbo:recipient dbr:Rodney_Lees .
  ?award rdfs:subClassOf ?parentAward .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_Württemberg .
  ?title dbp:titleHolder ?child .
  ?title dbp:titleHolder ?predecessor .
  FILTER(?child != ?predecessor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  FILTER NOT EXISTS { ?person dbo:abstract ?a } # Ensure it's a person entity
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?book dbo:title ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce WHERE {
  # Step 1: Identify ""The Triple X's"" and their military conflict
  ?tripleXs a dbo:MilitaryUnit ;
            rdfs:label ""The Triple X's""@en .
  
  ?conflict dbo:participatedInMilitaryConflict ?tripleXs ;
            a dbo:MilitaryConflict, dbo:Event .

  # Step 2: Find the commander of that conflict
  ?commander dbo:commanded ?conflict .

  # Step 3: Identify the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:award ""Knight Commander of the Order of the Bath""@en ;
          a dbo:Person .

  # Step 4: Find their military force and societal event
  ?militaryForce dbo:commandedBy ?awardee ;
                 a dbo:MilitaryUnit, dbo:SocietalEvent .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?fellowship a dbo:Award .
  ?fellowship dbo:name ""Sangeet Natak Akademi Fellowship""@en .
  ?fellowship dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?producer
WHERE {
  ?film a dbo:Film ;
        rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
  
  OPTIONAL { ?film dbo:director ?director . }
  OPTIONAL { ?film dbo:producer ?producer . }

  FILTER(LANG(?film) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naodFather ?grandfather ?positionHeldNaodFather ?positionHeldGrandfather WHERE {
  # Find Na'od's father
  VALUES ?naod { dbr:Na'ad_I }
  ?naod dbo:parent ?naodFather .
  
  # Ensure the father is a royalty or office holder
  OPTIONAL { ?naodFather dbo:positionHeld ?positionHeldNaodFather . }

  # Find Na'od's grandfather (father of his father)
  ?naodFather dbo:parent ?grandfather .

  # Ensure the grandfather is a royalty or office holder
  OPTIONAL { ?grandfather dbo:positionHeld ?positionHeldGrandfather . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlaceLabel WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Alexander II, Grand Duke of Finland""@en .
  OPTIONAL { ?person dbo:birthPlace ?nativePlace . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album dbo:musicalWork ?musicalWork .
  ?musicalWork rdfs:label ""Sappy""@en .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?phantomsmasher { dbr:Phantomsmasher }
  
  # Check for direct association with musical artists
  ?phantomsmasher dbo:associatedMusicalArtist ?artist .
  
  UNION
  
  # Check if Phantomsmasher is part of a collaboration project
  ?project dbo:collaborationProject ?phantomsmasher ;
           dbo:associatedMusicalArtist ?artist .
  
  UNION
  
  # Check for influences or those influenced by Phantomsmasher
  ?phantomsmasher dbo:influencedBy ?artist .
  ?phantomsmasher dbo:influences ?artist .
  
  UNION
  
  # Check if Phantomsmasher is a band member
  ?band dbo:bandMember ?phantomsmasher ;
        dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent
WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?duke rdf:type dbo:Duke ;
        foaf:name ""Philipp of Württemberg""@en .
  
  ?duke dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Victor Saville""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?personBornAsAnnSothern WHERE {
  # Find Roger Pryor's spouse
  ?actor a dbo:Actor ;
         foaf:name ""Roger Pryor""@en .
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }

  # Find person born as Ann Sothern
  ?person foaf:name ""Ann Sothern""@en .
  
  BIND(?person AS ?personBornAsAnnSothern)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university WHERE {
  ?person foaf:name ""Eleonora Menicucci""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?award 
WHERE {
  ?prize a dbo:NobelPrizeInPhysics ;
         dbo:recipient ?recipient ;
         dbo:award ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerBand ?birthName WHERE {
  # Find Bob Thompson's birth name
  VALUES (?bobThompson) { dbr:Bob_Thompson_(musician) }
  ?bobThompson dbo:birthName ?birthName .

  # Find the producer of Coke Studio Philippines
  ?cokeStudio dbp:producer ?producer .
  FILTER (str(?cokeStudio) = ""Coke_Studio_Philippines"")

  # Find the band associated with the producer
  OPTIONAL { ?producer dbo:band ?producerBand . }

  # Ensure the birth name is linked to a musical artist profession
  ?birthName dbo:occupation dbr:Musical_artist .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Glenn Youngkin""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?filmTitle ?actorName WHERE {
  {
    ?film rdfs:label ""Paradise""@en .
    FILTER(YEAR(?film) = 2013)
    ?film dbo:starring ?actor .
    ?actor rdfs:label ?actorName .
  }
  UNION
  {
    ?film rdfs:label ""Always""@en .
    FILTER(YEAR(?film) = 1989)
    ?film dbo:starring ?actor .
    ?actor rdfs:label ?actorName .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?father ?son WHERE {
  ?person a dbo:Monarch ;
          dbo:spouse ?spouse .
  OPTIONAL { ?person dbo:child ?son . }
  OPTIONAL { ?person dbo:parent ?father . }

  FILTER (?person = dbr:Zara_Yaqob)
  FILTER (?father = dbr:Yeshaq_I)
  FILTER (?son = dbr:Dawit_II)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAmy ?childOfAllan ?actorInWorkWithHerschel
WHERE {
  # Find the parent of Amy Arbus
  OPTIONAL {
    ?amyArbus a dbo:Person ;
              foaf:name ""Amy Arbus""@en .
    ?amyArbus dbo:parent ?parentOfAmy .
  }

  # Find the child of Allan Arbus
  OPTIONAL {
    ?allanArbus a dbo:Person ;
                foaf:name ""Allan Arbus""@en .
    ?childOfAllan dbo:parent ?allanArbus .
  }

  # Find actors in works with Herschel Bernardi
  OPTIONAL {
    ?work a dbo:Film ;
          dbo:actor dbr:Herschel_Bernardi .
    ?otherActor dbo:actor ?work .
    ?otherActor foaf:name ?actorInWorkWithHerschel .
  }

  # Combine the results to find any common entities
  FILTER(?parentOfAmy = ?childOfAllan || ?parentOfAmy = ?actorInWorkWithHerschel || ?childOfAllan = ?actorInWorkWithHerschel)
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Edward Stanley, 17th Earl of Derby's children
  ?child1 dbo:spouse ?edwardStanley .
  ?edwardStanley rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .

  # Child of Edward Stanley who is a politician
  ?child1 dbo:occupation ?occupation1 .
  FILTER(CONTAINS(LCASE(?occupation1), ""politician"")).

  # Parent of this child (who is also a politician and an office holder)
  ?parent dbo:spouse ?child1 .
  ?parent dbo:occupation ?occupation2 .
  FILTER(CONTAINS(LCASE(?occupation2), ""politician"") && CONTAINS(LCASE(?occupation2), ""office holder"")).

  # Frederick Stanley, 16th Earl of Derby's children
  ?child2 dbo:spouse ?frederickStanley .
  ?frederickStanley rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .

  # Child of Frederick Stanley who is a politician
  ?child2 dbo:occupation ?occupation3 .
  FILTER(CONTAINS(LCASE(?occupation3), ""politician"")).

  # Ensure the parent matches both criteria
  ?parent rdfs:label ?label .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:office ?office .
  FILTER (CONTAINS(LCASE(?office), ""president"") || CONTAINS(LCASE(?office), ""minister""))
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Maria Anna of Bavaria (born 1574)
  dbr:Maria_Anna_of_Bavaria_(1574) dbo:parent ?father .
  
  # Find Eleonore of Austria, Queen of Poland
  ?eleonore a dbo:Queen ;
            dbo:spouse ?polishKing ;
            rdfs:label ""Eleonore of Austria""@en .

  # Eleonore is a child of Maria Anna's father
  ?father dbo:child ?eleonore .
  
  # Find the commander in the Thirty Years' War who is Eleonore's father
  ?commander dbo:spouse ?mother ;
             dbo:child ?eleonore ;
             dbo:militaryCommanderOf dbr:Thirty_Years'_War .

  FILTER(LANG(?eleonore) = ""en"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?birthName WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  OPTIONAL { ?tisha dbo:mother ?parent . }
  OPTIONAL { ?tisha dbo:father ?parent . }

  ?parent foaf:name ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officePosition ?residence WHERE {
  VALUES ?miguelMaura { dbr:Miguel_Maura }
  
  # Find office positions held by Miguel Maura
  ?miguelMaura dbo:positionHeld ?officePosition .
  
  # Check if he resided in Madrid
  OPTIONAL {
    ?miguelMaura dbo:residence ?residence .
    FILTER(CONTAINS(LCASE(STR(?residence)), ""madrid""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  ?kate a dbo:Person ;
        rdfs:label ""Kate Dimbleby""@en .
  
  ?parent dbo:child ?kate ;
          rdfs:label ?parentName .
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentLabel WHERE {
  VALUES ?person { dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne }
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
  ?parent rdfs:label ?parentLabel .
  FILTER (lang(?parentLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentBirthName ?spouseName WHERE {
  # Find Tisha Sterling's parent
  ?tisha dbo:childOf ?parent .
  FILTER(STR(?tisha) = ""Tisha_Sterling"") .

  # Get the birth name of the parent
  ?parent foaf:name ?parentBirthName .

  # Find the actor from ""1,000 Dollars a Minute""
  ?actor dbo:title ""1,000_Dollars_a_Minute""@en .
  
  # Get the spouse of this actor
  ?actor dbp:spouse ?spouse .
  ?spouse foaf:name ?spouseName .

  # Check if the birth name matches the spouse's name
  FILTER(STR(?parentBirthName) = STR(?spouseName))
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  # Baeda Maryam I's child
  ?child1 dbo:parent dbr:Baeda_Maryam_I .
  
  # Yeshaq I's grandchild (Yeshaq I's parent is royalty)
  ?royalParent rdf:type dbo:Monarch ;
               dbo:child dbr:Yeshaq_I .
  ?grandChild dbo:parent ?royalParent .

  # Common child
  FILTER (?child1 = ?grandChild)

  # Father of the common child who is both royalty and an office holder
  ?father rdf:type dbo:Monarch ;
          dbo:officeHolder ?office ;
          dbo:child ?commonChild .
  
  BIND(?child1 AS ?commonChild)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?result WHERE {
  # Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf ?minyeKyawswa .
  
  # Parent of Minye Kyawswa's child
  ?parentMinyeKyawswaChild dbo:parentOf ?minyeKyawswaChild .

  # Child of the parent of Minye Kyawswa's child (predecessor)
  ?childParentMinyeKyawswaChild dbo:childOf ?parentMinyeKyawswaChild .
  
  # Saw Shwe Khet's child
  ?sawShweKhetChild dbo:childOf ?sawShweKhet .

  # Predecessor of Saw Shwe Khet's child
  ?predecessorSawShweKhetChild dbo:predecessor ?sawShweKhetChild .
  
  # Spouse of Saw Shwe Khet
  ?spouseSawShweKhet dbo:spouse ?sawShweKhet .

  # The child we are looking for is the child of:
  # - The parent of Minye Kyawswa's child (predecessor)
  # - The predecessor of Saw Shwe Khet's child
  # - The spouse of Saw Shwe Khet
  ?result dbo:childOf ?childParentMinyeKyawswaChild .
  ?result dbo:childOf ?predecessorSawShweKhetChild .
  ?result dbo:spouse ?spouseSawShweKhet .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName WHERE {
  ?band a dbo:Band ;
        foaf:name ""Stone Sour""@en .
  
  ?bandMember dbo:bandMember ?band ;
              foaf:name ?memberName .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucas ?successor ?commanderInWar ?tvShow ?societalEvent WHERE {
  # George Ducas and his successor
  dbr:George_Ducas a dbo:Person ;
                   dbo:officeHolderOf ?office .
  
  OPTIONAL { 
    ?successor dbo:succeededBy ?georgeDucas ;
               a dbo:Politician ;
               dbo:officeHolderOf ?office .
  }
  
  # Commander in the war linked to TV show and societal event
  ?commanderInWar a dbo:MilitaryPerson ;
                  dbo:participatedInBattle dbr:Battle_of_Vienna ;
                  dbo:participatedInEvent dbr:Russo-Polish_War_1654–1667 .
  
  OPTIONAL {
    ?tvShow dbo:genre dbr:Societal_event ;
           dbo:relatedTo ?commanderInWar .
  }
  
  OPTIONAL {
    ?societalEvent a dbo:SocietalEvent ;
                   dbo:relatedTo ?commanderInWar .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Saw Shwe Khet's child
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  
  # Spouse of Saw Shwe Khet (father of the child)
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .

  # Ensure spouse is royalty and has a royal child
  ?royalChild dbo:child ?spouse ;
              rdfs:label ?label .
  FILTER CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen"")

  # Predecessor of the royal child
  ?predecessor dbo:successor ?royalChild .

  # Ensure predecessor is also a child of Saw Min Hla
  ?predecessor dbo:parent dbr:Saw_Min_Hla .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbp:birthName ""Harriette Arlene Lake"" .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
  FILTER EXISTS { 
    ?party rdfs:label ?partyLabel .
    FILTER (CONTAINS(LCASE(?partyLabel), ""republican party""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfAnxoQuintana ?countryOfAlvaroQuiros
WHERE {
  # Anxo Quintana's office in an administration event
  ?person1 a dbo:Person ;
           foaf:name ""Anxo Quintana""@en .
  OPTIONAL { 
    ?event dbo:agent ?person1 ;
           dbo:positionHeld ?officeOfAnxoQuintana .
  }

  # Álvaro Quirós' residence country
  ?person2 a dbo:Person ;
           foaf:name ""Álvaro Quirós""@en .
  OPTIONAL {
    ?person2 dbo:nationality ?countryOfAlvaroQuiros .
  }
}
```",5,7,6,3,2,3,3,71,0,1,2,0.0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?partyName
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Bruno Retailleau""@en .
  ?person dbp:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?title WHERE {
  ?princess rdf:type dbo:Person ;
            rdfs:label ""Princess Aisha bint Faisal""@en .
  
  ?princess dbo:parent ?parent .

  OPTIONAL { ?parent dbo:title ?title . }
  
  FILTER EXISTS { 
    ?parent (dbo:royalTitle|dbo:title) ?title .
  }

  FILTER(LANG(?title) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producerLabel WHERE {
  ?film rdfs:label ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .
  ?producer rdfs:label ?producerLabel .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?successor ?force ?pacCommander WHERE {
  # Find wars involving Jean Baptist, Comte d'Arco
  dbr:Jean_Baptist,_Comte_d%27Arco dbo:participatedIn ?war .
  
  # Ensure the war is a television show or societal event
  ?war rdf:type ?type1 .
  FILTER (?type1 IN (dbr:Television_Show, dbr:Societal_Event)) .

  # Find the commander of the war and their successor
  ?war dbo:commander ?commander .
  ?commander dbo:successor ?successor .

  # Find forces involving Michał Kazimierz Pac
  dbr:Micha%C5%82_Kazimierz_Pac dbo:participatedIn ?force .

  # Ensure the force is an event or military conflict
  ?force rdf:type ?type2 .
  FILTER (?type2 IN (dbr:Event, dbr:Military_Conflict)) .

  # Find the commander of the force
  ?force dbo:commander ?pacCommander .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?movie WHERE {
  # Identify the series ""The Golden Master""
  ?series rdfs:label ""The Golden Master""@en .
  
  # Find a character with an alter ego in this series
  ?character dbo:partOfSeries ?series ;
             foaf:name ?alterEgoName .

  # Get the actor associated with this character/alter ego
  ?actor foaf:name ?actorName ;
         dbo:portrayal ?character .
  
  # Find movies where this actor has acted
  ?movie dbo:starring ?actor .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager ?player ?club WHERE {
  # Manager of SBV Vitesse for the 2020-21 season
  ?vitesseSeason dbo:team dbr:SBV_Vitesse ;
                dbo:season ""2020–21""^^xsd:string .
  
  ?vitesseSeason dbo:coach ?manager .

  # Check if manager is native to West Germany
  ?manager dbo:nationality dbr:Germany_West .

  # Player managed by this person
  ?player dbo:currentManager ?manager ;
          dbo:playsFor ?club .

  # Club and organization associated with the player
  ?club a dbo:SoccerClub ;
        dbo:sportTeamIn dbr:Eredivisie ; # Assuming Eredivisie as SBV Vitesse's league

  # Successor of the 2006–07 VfL Bochum season
  OPTIONAL {
    ?bochumSeason dbo:team dbr:VfL_Bochum ;
                  dbo:season ""2006–07""^^xsd:string .
    
    ?nextSeason dbo:succeeds ?bochumSeason ;
                dbo:team ?club .
  }
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?child WHERE {
  ?yeshaqI a dbo:Person ;
           dbp:name ""Yeshaq I""@en .
  
  ?yeshaqI dbo:child ?child .
  ?parent dbo:child ?yeshaqI .

  FILTER EXISTS { 
    ?parent dbo:royalTitle ?title .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?joeyBRealName ?joeyBArtist ?elormKabuAmenyahArtist WHERE {
  # Find Joey B's real name and associated artist
  ?person dbo:birthName ""Joey B""@en .
  ?person foaf:name ?joeyBRealName .
  OPTIONAL { ?person dbo:associatedMusicalArtist ?joeyBArtist . }

  # Find Elorm Kabu Amenyah's associated artist
  ?elormKabuAmenyah foaf:name ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?elormKabuAmenyah dbo:associatedMusicalArtist ?elormKabuAmenyahArtist . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:occupation ?occupation .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the actor in ""Dispatches from Elsewhere""
SELECT ?actor WHERE {
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .
}

UNION

# Query for The Shadow's alter ego profession
SELECT ?profession WHERE {
  dbr:The_Shadow dbo:alterEgo ?character .
  ?character dbo:occupation ?profession .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mitakaLabel WHERE {
  ?mitaka a dbo:City ;
          rdfs:label ?mitakaLabel .
  FILTER(CONTAINS(LCASE(?mitakaLabel), ""mitaka""))
  OPTIONAL { ?mitaka dbo:partOf ?tokyo . }
  FILTER(EXISTS { ?tokyo rdfs:label ?tokyoLabel . 
                 FILTER(CONTAINS(LCASE(?tokyoLabel), ""tokyo"")) })
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Step 1 & 2: Find the producer of ""Storm in a Teacup""
  ?film dbo:title ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .

  # Step 3: Get the birthplace of the producer
  ?producer dbo:birthPlace ?birthPlace .

  # Step 4: Find natives of that birthplace
  ?native dbo:nationality ?birthPlace ;
          a dbo:Person .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club ?nickname WHERE {
  # Find Denis Kolodin as a footballer
  dbr:Denis_Kolodin dbo:occupation dbr:Football_player .
  
  # Look for clubs with names similar to ""Denis Kolodin""
  ?club a dbo:Soccer_Club ;
        rdfs:label ?label ;
        dbo:nickname ?nickname .

  FILTER(CONTAINS(LCASE(?label), LCASE(""denis kolodin"")) || CONTAINS(LCASE(?nickname), LCASE(""denis kolodin"")))
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?childPredecessor
WHERE {
  # Step 1: Find Saw Shwe Khet's spouse
  ?sawShweKhet a dbr:Saw_Shwe_Khet ;
               dbo:spouse ?spouse .

  # Step 2: Identify Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbr:Min_Hla_Htut_of_Pyakaung ;
              dbo:parent ?parent .

  # Step 3: Find Saw Min Phyu's spouse and their child
  ?sawMinPhyu a dbr:Saw_Min_Phyu ;
              dbo:spouse ?spouseOfSawMinPhyu .
  
  ?spouseOfSawMinPhyu dbo:child ?child .

  # Step 4: Find the predecessor of this child who is royalty
  ?predecessor dbo:succession ?child ;
               a dbo:RoyalPerson .

  # Connect these relationships
  FILTER (?spouse = ?parent) .
  FILTER (?predecessor = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager (SAMPLE(?birthPlace) AS ?nativePlace)
WHERE {
  ?manager a dbo:FootballManager ;
           dbo:managedTeam dbr:VfL_Bochum .
  
  ?manager dbo:birthPlace ?birthPlace .

  FILTER (
    ?birthPlace IN { 
      dbr:Bavaria ; 
      dbr:Hesse ; 
      dbr:Lower_Saxony ; 
      dbr:North_Rhine-Westphalia ;
      dbr:Rhineland-Palatinate ;
      dbr:Saxony ;
      dbr:Saxony-Anhalt ;
      dbr:Schleswig-Holstein ;
      dbr:Baden-Württemberg
    }
  )
}
GROUP BY ?manager
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Nat Levine's resource
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .

  # Step 2: Find films associated with Nat Levine (assuming he was a producer)
  ?film dbo:producer ?natLevine .

  # Step 3: Identify actors in those films
  ?film dbo:actor ?actor .

  # Step 4: Find spouses of the actors
  ?actor foaf:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,62,0,0.0,0
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is a royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet ;
         rdf:type dbo:Monarch .

  # Step 2: Find the predecessor (parent) of that child
  ?predecessor dbo:child ?child .

  # Step 3: Determine the spouse of this predecessor who is a royalty
  ?predecessor dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peltierPartyLabel ?retailleauPartyLabel
WHERE {
  # Find the party of Guillaume Peltier
  dbr:Guillaume_Peltier dbo:party ?peltierParty .
  ?peltierParty rdfs:label ?peltierPartyLabel .

  # Find the party of Bruno Retailleau
  dbr:Bruno_Retailleau dbo:party ?retailleauParty .
  ?retailleauParty rdfs:label ?retailleauPartyLabel .

  FILTER (lang(?peltierPartyLabel) = 'en')
  FILTER (lang(?retailleauPartyLabel) = 'en')
}
```",2,2,3,1,2,2,2,9,0,6,1,0.0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder query as the question lacks specificity.
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?professional WHERE {
  # Placeholder for specific domain or entity
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?scientist ?almaMater WHERE {
  ?scientist a dbo:Scientist ;
             dbo:nationality dbr:Australia ;
             dbo:awardReceived dbr:Australian_Laureate_Fellowship .
  
  OPTIONAL { ?scientist dbo:almaMater ?almaMater . }
  
  ?scientist dbp:associatedWith ?entityInAndhraPradesh .
  ?entityInAndhraPradesh dbo:location dbr:Andhra_Pradesh .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneConflict ?tripleXConflict ?bayneForce ?tripleXForce WHERE {
  # Find the military conflict associated with William Bayne
  ?bayne dbr:William_Bayne_(Royal_Navy_officer) .
  ?bayne dbo:militaryConflicts ?bayneConflict .
  
  # Find the military force involved in William Bayne's conflict
  ?bayneConflict dbo:participatingMilitaryForce ?bayneForce .

  # Identify ""The Triple X's"" and their associated conflict
  ?tripleX dbr:The_Triple_Xs .
  ?tripleX dbo:militaryConflicts ?tripleXConflict .

  # Find the military force involved in The Triple X's conflict
  ?tripleXConflict dbo:participatingMilitaryForce ?tripleXForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality ?nativeCountry .
  FILTER (isLiteral(?nativeCountry) && regex(str(?nativeCountry), ""country"", ""i""))
  ?person dbo:child dbr:Nicholas_II_of_Russia .
  ?person rdfs:label ?name .
  FILTER (langMatches(lang(?name), ""en""))
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?yeshaq a dbo:Monarch ;
          foaf:name ""Yeshaq I""@en .
  
  ?yeshaq dbo:child ?child .
  
  ?child a dbo:Monarch ; # Ensures the child is royalty
         dbp:fatherOf ?baedaMaryam .

  ?baedaMaryam a dbo:Monarch ;
               foaf:name ""Baeda Maryam I""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Dawit I's child
  ?dawitI a dbr:Dawit_I ;
          dbo:child ?child .

  # Na'od's father and grandfather
  ?na'od a dbr:Na'od_of_Shenkala ;
         dbo:father ?father .
  ?father dbo:father ?grandfather .

  # Check if the person is both royalty and an office holder
  FILTER (?child = ?grandfather)
  ?person a dbo:Monarch ; # Royalty
          dbo:officeHolder ?office . # Office holder

  # Ensure the person matches Dawit I's child and Na'od's grandfather
  FILTER (?person = ?child && ?person = ?grandfather)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander ?tvShow ?event
WHERE {
  # Successor of Yurii Khmelnytsky
  OPTIONAL { 
    dbr:Yuri_Khmelnytsky dbo:succeededBy ?successor .
  }

  # Commander in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?commander .

  # Check if the commander is John III Sobieski
  FILTER(?commander = dbr:John_III_Sobieski)

  # Find any television shows related to John III Sobieski or his military force
  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?tvShow .
    ?tvShow rdf:type dbo:TelevisionSeries .
  }

  # Check for societal events related to the Battle of Vienna or John III Sobieski
  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?event .
    ?event rdf:type dbo:SocietalEvent .
  }
}
```",4,6,5,3,2,3,3,71,0,1,1,0.0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelPartyLeaderOffice ?marianoRajoyOffice ?madridTenant
WHERE {
  # Find Miguel Maura's political party and its leader's office
  ?miguelParty dbo:member dbr:Miguel_Maura .
  ?miguelParty dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?miguelPartyLeaderOffice .

  # Find Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Find the tenant of Madrid
  dbr:Madrid dbo:mayor ?madridMayor .
  ?madridMayor dbo:office ?madridTenant .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?war 
WHERE {
  # Find Dawid Olejniczak's residence and its country
  ?olejniczak dbo:residence ?residence .
  ?residence dbo:country ?country .

  FILTER(?olejniczak = dbpedia:Dawid_Olejniczak)

  # Find wars in the French Revolutionary Wars period with commanders
  ?war dbo:partOf ?conflict ;
       dbp:commander ?commander .
  
  FILTER(CONTAINS(LCASE(str(?conflict)), ""french revolutionary wars""))
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?sawShweKhet dbo:spouse ?spouse .
  FILTER(?sawShweKhet = dbpedia:Saw_Shwe_Khet) .

  ?myatHponePyo dbo:predecessor ?spouse .
  FILTER(?myatHponePyo = dbpedia:Myat_Hpone_Pyo)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?parentLabel WHERE {
  # Find children of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  # Filter for the child who is native to Middlesex
  ?child dbo:birthPlace dbr:Middlesex .

  # Find out who this child's parent is (excluding Claude Bowes-Lyon)
  ?child dbo:parent ?parent .
  
  # Ensure we get a meaningful label for the parent
  ?parent rdfs:label ?parentLabel .
  
  FILTER(LANG(?parentLabel) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  ?yeshaqI dbo:parent ?parent .
  ?parent rdf:type dbo:Monarch .
  ?parent rdfs:label ?parentName .
  
  FILTER (LANG(?parentName) = 'en')
  
  VALUES ?yeshaqI { <http://dbpedia.org/resource/Yeshaq_I> }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouse ?film ?party WHERE {
  # Find Harriette Arlene Lake and her birth name
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  
  # Identify the spouse who is an actor in a film produced by Nat Levine
  ?person dbo:spouse ?spouse .
  ?spouse rdf:type dbr:Actor .
  ?film dbo:producer dbr:Nat_Levine ;
        dbo:actor ?spouse .

  # Check political affiliation of Harriette Arlene Lake
  OPTIONAL {
    ?person dbp:politicalAffiliation ?party .
    FILTER(CONTAINS(LCASE(?party), ""central louisiana""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query for Japan Standard Time region
SELECT ?region WHERE {
  ?japan a dbo:Country ;
         dbp:name ""Japan"" .
  ?japan dbp:timeZone ?timezone .
  FILTER(CONTAINS(LCASE(str(?timezone)), ""jst""))
  ?timezone dbo:country ?region .
}

# Query for Mitaka, Tokyo
SELECT ?description WHERE {
  ?mitaka a dbo:PopulatedPlace ;
          dbp:name ""Mitaka"" ;
          dbo:partOf ?tokyo .
  ?tokyo a dbo:Municipality ;
         dbp:name ""Tokyo"" .
  ?mitaka rdfs:comment ?description .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Max_Born dbo:nobelPrizeAwardedFor ?award .
}

UNION

SELECT ?institution WHERE {
  ?weissNobel dbp:laureate [dbo:affiliation ?institution] ;
              a dbo:NobelPrizeInPhysics .
  FILTER (CONTAINS(LCASE(?weissNobel), ""rainer weiss""))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?letschClubManager ?bochumManager ?heussCountry WHERE {
  # Thomas Letsch's managerial role
  OPTIONAL {
    ?letsch dbr:Thomas_Letsch .
    ?letsch dbo:managerOf ?club .
    ?club dbo:season ?season .
    ?club dbo:manager ?letschClubManager .
  }

  # VfL Bochum's manager
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?bochumManager .
  }
  
  # Theodor Heuss's native country
  OPTIONAL {
    dbr:Theodor_Heuss dbo:nationality ?heussCountry .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?film WHERE {
  ?album rdf:type dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  OPTIONAL { 
    ?film rdf:type dbo:Film ;
          dbo:basedOn ?album .
  }
  
  FILTER EXISTS { ?album rdf:type rdfs:Resource } # Ensuring it's a recognized work
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace ?gillmoreWarForce ?medalOfHonorWarForce
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  FILTER (dbo:Civilization(?birthplace) = dbp:United_States)

  # Gillmore Medal awardee and associated war force
  ?gillmoreAwardee dbo:awardReceived dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryService ?gillmoreWarForce .
  FILTER EXISTS { ?gillmoreWarForce dbo:participatedIn dbr:American_Civil_War }

  # Medal of Honor awardee and associated war force
  ?medalOfHonorAwardee dbo:awardReceived dbr:Medal_of_Honor .
  ?medalOfHonorAwardee dbo:militaryService ?medalOfHonorWarForce .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Tupac Shakur by his birth name
  dbr:Tupac_Shakur dbo:birthName ""Lesane Parish Crooks"" .
  
  # Find associated musical artists or bands
  OPTIONAL { dbr:Tupac_Shakur dbo:associatedBand ?artist . }
  OPTIONAL { dbr:Tupac_Shakur dbo:memberOf ?group . ?group dbo:bandMember ?artist . }
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry WHERE {
  ?person dbo:nationality dbr:Spanish .
  ?person dbo:country dbr:Spain .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .
  FILTER(?residenceCountry != dbr:Spain)
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Spouse of Janusz Kamiński
  VALUES ?janusz { dbr:Janusz_Kamiński }
  ?janusz dbo:spouse ?spouse .
  
  # Actor in ""Always"" (1989 film)
  ?always dbo:starring ?actor .
  FILTER(?always = dbr:Always_(film))

  # Actor who worked with Iliza Shlesinger
  ?ilizaFilm dbo:starring ?iliza .
  ?ilizaFilm dbo:starring ?actor2 .
  FILTER(?iliza = dbr:Iliza_Shlesinger)
  
  # Find the common actor
  VALUES ?actor { ?spouse ?actor ?actor2 }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?album ?actor WHERE {
  # Find a song by T.I.
  ?song dbo:artist dbr:T.I. ;
        rdf:type dbo:Songs .

  # Get the album of the song
  ?song dbo:album ?album .

  # Check for any featured artists or actors associated with the album
  OPTIONAL { 
    ?album dbo:featuredArtist ?actor .
  }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war WHERE {
  VALUES ?hashiba { dbr:Hashiba_Hidekatsu }
  VALUES ?toyotomi { dbr:Toyotomi_Hidenaga }

  OPTIONAL {
    ?person dbo:spouse|dbo:child ?hashiba .
    ?person dbo:occupation dbo:MilitaryPerson .
    ?person dbo:participatedIn ?war .
  }
  
  OPTIONAL {
    ?person dbo:spouse|dbo:child ?toyotomi .
    ?person dbo:occupation dbo:MilitaryPerson .
    ?person dbo:participatedIn ?war .
  }

  FILTER(?war != dbr:Unspecified)
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?awardRegion ?band 
WHERE {
  # Ackquille Jean Pollard (2 Chainz) and the Grammy Award for Best Rap Album
  dbr:2_Chainz dbo:birthName ""Ackquille Jean Pollard"" .
  dbr:Grammy_Award_for_Best_Rap_Album dbo:location dbr:Los_Angeles .

  # Los Angeles as a region, state, and settlement
  dbr:Los_Angeles a dbo:City ;
                 dbo:country dbr:United_States_of_America ;
                 dbo:stateOrProvince dbr:California .

  # Twenty One Pilots and the Grammy Award for Best Pop Duo/Group Performance
  dbr:Twenty_One_Pilots dbo:award dbr:Grammy_Award_for_Best_Pop_Duo_or_Group_Performance .
  dbr:Grammy_Award_for_Best_Pop_Duo_or_Group_Performance dbo:location dbr:Los_Angeles .

  # Ensure the band is from New York
  dbr:Twenty_One_Pilots dbo:hometown dbr:Columbus,_Ohio ;
                        dbo:associatedBand dbr:New_York_City .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?birthName WHERE {
  # Find musical artists born in Florida
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida ;
          dbp:birthday ?birthday .
  
  # Get their birth name
  ?person foaf:name ?birthName .

  # Identify awards associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL {
    ?award dbo:location dbr:Puerto_Rico ;
           dbo:recipient ?recipient .
    
    FILTER (?recipient = ?person)
  }
  
  # Ensure the award is linked to a region that is an American state or settlement
  OPTIONAL {
    ?region rdf:type dbo:StateOrTerritory, dbo:Settlement ;
            rdfs:label ?awardLabel .
    
    ?award dbo:location ?region .
  }

  FILTER EXISTS { ?person dbo:birthPlace dbr:Florida }
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify the song ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Filter producers that are organizations and bands/groups
  ?producer rdf:type dbo:Organization .
  ?producer rdf:type (dbo:Band | dbo:MusicalGroup) .

  # Find associated musical artists with these producers
  ?producer dbo:associatedBand ?artist .
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton's books
  ?book dbo:author dbr:Hillary_Clinton ;
        a dbo:Book, dbo:WrittenWork .

  # Find authors who are politicians and office holders
  ?author dbo:author ?book ;
          a dbo:Politician, dbo:OfficeHolder .

  # Get the spouse of this author
  ?author dbo:spouse ?spouse .
}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?greatGrandparent WHERE {
  # Baeda Maryam I's child
  ?child1 dbo:father dbr:Baeda_Maryam_I .
  
  # Parent of Yeshaq I who is royalty
  ?royalParent dbo:child dbr:Yeshaq_I ;
               a dbo:Monarch .

  # Father of the royal parent (Yeshaq I's grandparent)
  ?grandparent dbo:father ?royalParent .

  # Great-grandparent, ensuring they are royalty and office holders
  ?greatGrandparent dbo:father ?grandparent .
  
  FILTER EXISTS { ?greatGrandparent a dbo:Monarch }
  FILTER EXISTS { ?greatGrandparent dbp:officeHolder ""true""^^xsd:boolean }

  # Ensure the great-grandparent is connected to Baeda Maryam I's lineage
  ?child1 dbo:mother ?intermediateMother .
  ?intermediateMother dbo:father ?grandparent .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:David_Paton dbo:associatedBand ?band .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find movies/shows featuring Afeez Oyetoro
  ?movie dbo:starring dbr:Afeez_Oyetoro .
  
  # Check if Cynthia Morgan has a musical association with the movie/show
  OPTIONAL { 
    ?musicWork dbo:artist dbr:Cynthia_Morgan ;
               dbo:workFeaturedIn ?movie .
  }
  
  # Retrieve actors of the identified movie/show
  ?movie dbo:actor ?actor .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?mary a dbo:Person ;
        dbo:nativePlace dbr:Middlesex ;
        dbo:child dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne .
  
  ?mary dbo:parent ?parent .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Get Ann Sothern's birth name
SELECT ?birthName WHERE {
    dbr:Ann_Sothern dbo:birthName ?birthName .
}

# Step 2: Find the landmark with elevation and its ruling party
SELECT ?landmark ?rulingParty WHERE {
    ?landmark a dbo:Lighthouse ;
              dbo:elevationAboveSeaLevel ?elevation .
    FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
    
    # Assuming we have a way to determine the ruling party at this landmark
    ?landmark dbo:locatedInCountry ?country .
    ?party dbo:isRulingPartyOf ?country ;
           rdfs:label ?rulingParty .
}

# Step 3: Find Roger Pryor's spouse
SELECT ?spouse WHERE {
    dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
}

# Combine the results to find a person matching all criteria
SELECT DISTINCT ?person WHERE {
    # Ann Sothern's birth name
    VALUES (?birthName) { (""Ann Sothern""^^xsd:string) }  # Replace with actual birth name from Step 1

    # Ruling party at the landmark
    ?landmark a dbo:Lighthouse ;
              dbo:elevationAboveSeaLevel ?elevation .
    FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
    
    ?landmark dbo:locatedInCountry ?country .
    ?party dbo:isRulingPartyOf ?country ;
           rdfs:label ?rulingParty .

    # Roger Pryor's spouse
    dbr:Roger_Pryor_(actor) dbo:spouse ?person .

    # Person born as Ann Sothern's birth name and member of the ruling party
    ?person dbo:birthName ?birthName ;
            dbo:memberOfPoliticalParty ?party .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ?death .
  FILTER (YEAR(?death) = 1850 && MONTH(?death) = 8 && DAY(?death) = 5)
  
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  OPTIONAL { ?birthPlace rdf:type ?type . }
  FILTER (
    EXISTS { ?birthPlace rdf:type dbr:Settlement } ||
    (EXISTS { ?birthPlace rdf:type ?type } && 
     (STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/City"") || 
      STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/Town"")))
  )

  # Ensure the birthplace is in America
  OPTIONAL { ?birthPlace dbo:country dbr:United_States . }
}
```",3,5,4,3,1,3,3,71,0,1,12,0.0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  ?person a dbo:Politician ;
          dbo:birthPlace dbr:Melbourne ;
          rdfs:label ""Ada Jane Low""@en .
  
  OPTIONAL { 
    ?person dbo:predecessor ?predecessor .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?descendant WHERE {
  # Find the grandchildren of Archduke Charles Louis of Austria
  ?grandchildArchduke dbo:parent dbr:Charles_Louis,_Archduke_of_Austria ;
                      dbo:parent ?childArchduke .
  
  # Find the grandchildren of Duke Philipp of Württemberg
  ?grandchildPhilipp dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg ;
                    dbo:parent ?childPhilipp .

  # Ensure the person is a descendant of both Archduke Charles Louis and Duke Philipp
  FILTER (?grandchildArchduke = ?grandchildPhilipp)

  # Check if this person is a predecessor in royalty to Carl, Duke of Württemberg
  ?descendant dbo:royaltyTitle ?title .
  dbr:Claude_Frederick,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?descendant ;
                                                dbo:succeededBy dbr:Claude_Frederick,_Duke_of_W%C3%BCrttemberg .

  # Ensure the person is a descendant of both lines
  FILTER (?grandchildArchduke = ?descendant && ?grandchildPhilipp = ?descendant)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?commander ?book WHERE {
  # Spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Commander in Third Taiwan Strait Crisis (Bill Clinton)
  FILTER(?commander = dbr:Bill_Clinton) .
  
  # Bill Clinton's book
  ?book dbo:author dbr:Bill_Clinton ;
        a dbo:Book .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?alterEgo ?producedWork WHERE {
  # Find the actor of ""High Society Blues""
  dbr:High_Society_Blues dbo:starring ?actor .
  
  # Chris Isaak is the actor
  ?actor rdfs:label ""Chris Isaak""@en .

  # Kent Allard is a pseudonym for Chris Isaak
  ?alterEgo rdfs:label ""Kent Allard""@en ;
            dbo:alias ?isaakAlias .
  ?isaakAlias rdfs:label ""Chris Isaak""@en .

  # Find works produced by Chris Isaak
  ?producedWork dbo:producer ?actor .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  # Find Philip, Despot of Romania
  ?philip dbo:name ""Philip, Despot of Romania""@en .
  
  # Identify his parent
  ?parent dbo:child ?philip ;
          rdf:type dbo:Monarch . # Assuming the parent is a monarch
  
  # Find the father of this royal parent
  ?father dbo:child ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fabulousThunderbirdsName ?nickCurranArtist ?kimWilsonBand
WHERE {
  # Get the real name of The Fabulous Thunderbirds
  ?band a dbo:MusicalBand ;
        rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band rdfs:label ?fabulousThunderbirdsName .

  # Find Nick Curran's associated musical artist
  ?nickCurran a dbo:Person ;
              rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:musicalArtist ?artist .
  ?artist rdfs:label ?nickCurranArtist .

  # Identify the band Kim Wilson is part of
  ?kimWilson a dbo:Person ;
             rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:bandMember ?band2 .
  ?band2 rdfs:label ?kimWilsonBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual ?name WHERE {
  # Victor Stanley's parent
  OPTIONAL { 
    ?victorVictorStanley dbo:parent ?parentVictorStanley .
    ?parentVictorStanley rdfs:label ?nameVictorStanley .
    FILTER CONTAINS(LCASE(?nameVictorStanley), ""victor stanley (royal navy officer)"") .
  }

  # Alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    ?etoniaAlumnus dbo:almaMater dbr:Eton_College ;
                  dbo:child ?edwardStanley ;
                  dbo:parent ?politicianChild .
    ?edwardStanley rdfs:label ""Edward Stanley, 17th Earl of Derby"" .
    ?politicianChild dbo:occupation dbr:Politician .

    # Get the name of this alumnus
    ?etoniaAlumnus rdfs:label ?nameEtoniaAlumnus .
  }

  # Check if they are the same individual
  FILTER (?parentVictorStanley = ?politicianChild)
  
  # Assign common individual and its label
  BIND(?parentVictorStanley AS ?commonIndividual)
  BIND(CONCAT(LCASE(?nameVictorStanley), "" ("", LCASE(?nameEtoniaAlumnus), "")"") AS ?name)
}
ORDER BY ?name
```",5,6,6,3,3,3,3,71,0,1,1,0.0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?parent WHERE {
  # Find the event of Siege of Mukha
  ?event dbo:name ""Siege of Mukha""@en .
  
  # Identify commanders involved in this event
  ?commander dbo:role ""Commander""@en ;
             dbo:event ?event .

  # Check if the commander is royalty
  ?commander dbo:royalty true .

  # Find the parent of the commander
  ?parent dbo:child ?commander .
  
  # Ensure the parent is also royalty
  ?parent dbo:royalty true .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
# Part 1: Retrieve the birthplace of Yandamuri Veerendranath
SELECT ?birthPlace WHERE {
    ?person dbo:birthName ""Yandamuri Veerendranath""@en .
    ?person dbo:birthPlace ?birthPlace .
}

# Part 2: Use the retrieved birthplace to get more information about it as a DBpedia entity
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entityLabel WHERE {
    VALUES (?birthPlace) { 
        # Replace with actual URI obtained from Part 1 result
        # Example: <http://dbpedia.org/resource/Rajahmundry>
    }
    ?place a dbo:PopulatedPlace ;
           rdfs:label ?entityLabel .
    FILTER (lang(?entityLabel) = 'en')
}
```

Note: The actual URI for the birthplace should replace the placeholder in the `VALUES` clause after executing Part 1 of the query.",2,2,3,2,1,2,2,9,0,0,166,0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  # Step 1: Identify the person known as Richard Grant Esterhuysen
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en .
  
  # Step 2: Find television shows that were adapted into movies where this person acted
  ?tvShow dbo:genre dbr:Sitcom ;
          dbo:adaptationOf ?movie .
  
  ?actor foaf:name ?actorName ;
         dbo:birthName ?person .

  # Ensure the actor is part of both the TV show and its movie adaptation
  ?tvShow dbo:starring ?actor .
  ?movie dbo:starring ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?actor ?movie WHERE {
  # Find Doon Arbus's parent
  dbr:Doon_Arbus dbo:parent ?parent .

  # Find movies with Herschel Bernardi as an actor
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Check if any of these actors are also parents to a professional photographer
  ?actor dbo:starring ?movie ;
         dbo:parent ?photographerParent .

  ?photographerParent dbo:child ?photographer .
  ?photographer dbo:profession dbr:Photography .

  FILTER(?parent = ?photographerParent)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName
WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Republican Party (United States)""@en .
  
  ?member dbo:memberOf ?party ;
          foaf:name ?memberName .

  FILTER(LANG(?memberName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?medalRecipient ?war ?gillmoreForce WHERE {
  # Find Medal of Honor recipients and the wars they were involved in
  ?recipient a dbo:MedalOfHonorRecipient ;
             dbo:award ?medal .
  ?recipient dbo:participatedIn ?event .
  ?event dbo:wikiPageRedirects ?war .

  # Identify Quincy Adams Gillmore's military force
  dbr:Quincy_Adam_Gillmore dbo:militaryUnit ?gillmoreForce .
  
  # Link the war of the Medal of Honor recipient to the same war as Gillmore's force
  ?gillmoreForce dbo:participatedIn ?event2 .
  ?event2 dbo:wikiPageRedirects ?war .

  FILTER(?war != dbr:None)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person foaf:name ""Shirley Stoler""@en .
  ?person dbo:profession ?profession .
  OPTIONAL { ?person dbp:children ?child . }
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Roger III, Duke of Apulia's parent
  ?rogerIII a dbo:Duke ;
            dbo:parent ?parent .

  # Find Elvira of Castile's parent (should be the same as Roger III's parent)
  dbr:Elvira_of_Castile_queen_of_Sicily dbo:parent ?parent .

  # Find children of this common parent
  ?child dbo:parent ?parent ;
         a dbo:Monarch ;  # Ensure they are royalty

  # Check if the child is an office holder and related to William I
  OPTIONAL { ?child dbo:officeHolderOf dbr:William_I_of_Sicily . }
  
  FILTER EXISTS { ?child dbo:officeHolderOf ?office }  # Must be an office holder
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceSettlement ?administeredTerritory
WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen and ensure it's a settlement
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:type ?placeType .
  FILTER(?placeType = dbo:Settlement)

  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck and his administered territory
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:administers ?administeredTerritory .
  
  # Ensure Prince Christian was born into royalty
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:royaltyStatus ?royaltyStatus .
  FILTER(?royaltyStatus = ""Royalty"")
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel
WHERE {
  # Get the birth date of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:birthDate ?birthDate .

  # Find other royalty with the same birth date
  ?person rdf:type dbo:RoyalPerson .
  ?person dbo:birthDate ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?birthDate)
  
  # Get labels for these persons
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?residenceCountry ?citizenship
WHERE {
  # Find the current leader of the PSOE
  dbr:Spanish_Socialist_Workers'_Party dbo:head ?leader .
  
  # Ensure the leader resides in Spain
  ?leader dbo:nationality dbr:Spain .
  ?leader dbo:residenceCountry dbr:Spain .

  # Confirm the citizenship is Spanish
  ?leader dbo:citizenship dbr:Spain .
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?duchess a dbo:DukeOrDuchess ;
           foaf:name ""Luise of Brunswick-Wolfenbüttel""@en .
  ?duchess dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceCarolynJones (GROUP_CONCAT(?actorName; separator="", "") AS ?actors) 
       (GROUP_CONCAT(?deathPlaceActor; separator="", "") AS ?deathPlaces)
WHERE {
  # Carolyn Jones death place
  OPTIONAL { 
    dbr:Carolyn_Jones dbo:placeOfBirth ?deathPlaceCarolynJones .
  }

  # Actor who played Aladdin in the 1958 film and their death places
  {
    SELECT DISTINCT ?actorName ?deathPlaceActor WHERE {
      dbr:The_Story_of_Robin_Hood_and_His_Merrie_Men dbo:starring ?actor .
      ?actor rdfs:label ?actorName .
      FILTER(CONTAINS(LCASE(?actorName), ""aladdin"") && CONTAINS(LCASE(dbr:The_Story_of_Robin_Hood_and_His_Merrie_Men), ""1958""))
      OPTIONAL { 
        ?actor dbo:deathPlace ?deathPlaceActor .
      }
    } GROUP BY ?actorName ?deathPlaceActor
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution ?usEntity
WHERE {
  # Find the institution related to Brian Kemp's administration
  dbr:Brian_Kemp dbo:office dbr:Governor_of_Georgia .
  
  # Get a well-known entity related to the United States
  dbr:United_States rdf:type ?usEntity .
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthdate .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""sports manager""))
  FILTER (?birthdate = ""1968-08-26""^^xsd:date)
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Saw_Min_Hla .
  dbr:Myat_Hpone_Pyo dbo:predecessor ?person .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?workLabel WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Lao She""@en .
  ?author dbo:work ?work .
  ?work rdfs:label ?workLabel .
  FILTER(LANG(?workLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?conflict ?residence
WHERE {
  # Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Commander who is an office holder and politician
  ?commander a dbo:Politician ;
            dbo:office ?commanderOffice .
  
  # Military conflict involving Manuel Pinto da Costa, also a societal event
  ?conflict a dbo:MilitaryConflict , dbo:SocietalEvent ;
           dbo:participant dbr:Manuel_Pinto_da_Costa .

  # Link commander to the military conflict
  ?commander dbo:commanded ?conflict .

  # Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoDescription WHERE {
  ?lamontCranston a dbo:FictionalCharacter ;
                  rdfs:label ""Lamont Cranston""@en .
  ?lamontCranston dbo:alias ?shadowEntity .
  ?shadowEntity rdfs:label ?alterEgoLabel .
  FILTER (langMatches(lang(?alterEgoLabel), ""EN""))
  OPTIONAL { ?shadowEntity dbo:description ?alterEgoDescription }
}
```",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbpedia:Reed_Howes 
    dbpedia:Sal_Mineo 
  }
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  # Tenant of Spain in 2009 (Prime Minister)
  VALUES (?primeMinister) { dbr:Mariano_Rajoy }
  ?primeMinister dbo:positionHeld dbr:List_of_Prime_Ministers_of_Spain .
  
  # Office of the Leader of the 2009 Galician Regional Election
  VALUES (?galiciaLeader) { dbr:Alberto_Núñez_Feijóo }
  ?galiciaLeader dbo:office dbr:President_of_the_Xunta_of_Galicia .

  # Tenant of the administration, Spanish, of PSOE (Leader)
  VALUES (?psoeLeader) { dbr:José_Luis_Rodríguez_Zapatero }
  ?psoeLeader dbo:positionHeld dbr:List_of_leaders_of_the_Spanish_Socialist_Workers'_Party .

  # Bind the person and office
  OPTIONAL {
    ?primeMinister rdfs:label ?person .
    BIND(""Prime Minister of Spain"" AS ?office)
  }
  
  OPTIONAL {
    ?galiciaLeader rdfs:label ?person .
    BIND(""President of the Xunta de Galicia"" AS ?office)
  }

  OPTIONAL {
    ?psoeLeader rdfs:label ?person .
    BIND(""Leader of PSOE"" AS ?office)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorName WHERE {
  ?book dbo:title ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (LANG(?authorName) = 'en') .
  OPTIONAL { 
    ?author dbp:nationality dbr:United_States .
  }
  FILTER EXISTS {
    ?author dbp:nationality dbr:United_States
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?mariaAnna a dbo:Person ;
             dbp:birthYear ""1574""^^xsd:gYear ;
             rdfs:label ""Maria Anna of Bavaria""@en .
  
  ?child dbo:parent ?mariaAnna ;
         a dbo:Monarch ; # Assuming royalty is represented by Monarch class
         dbo:father ?father .

}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?actress a dbo:Person ;
           dbo:occupation ?occupation ;
           dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdfs:label ""New York""@en .

  FILTER(CONTAINS(LCASE(STR(?occupation)), ""actress""))

  ?actress dbo:child ?child .
  ?child foaf:name ?childName .
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Royal_Swedish_Academy_of_Sciences dbo:associatedEvent ?event .
  ?event rdfs:label ?show .
  FILTER (lang(?show) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  ?author foaf:name ""Aleksandr Filimonov""@ru .
  ?work dbo:author ?author .
  ?nashiParni foaf:name ""Наши парни""@ru ;
             dbo:work ?work .
  ?nashiParni dbo:actor ?player .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?samProfession (SAMPLE(?otherPerson) AS ?anotherProfessional)
WHERE {
  # Find Sam Concepcion's profession
  dbp:SAM_CONCEPCION dbo:occupation ?samProfession .

  # Find another professional in the same field
  ?otherPerson a dbo:Person .
  FILTER (?otherPerson != dbp:SAM_CONCEPCION) .
  ?otherPerson dbo:occupation ?samProfession .
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent rdf:type dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?parent dbo:spouse ?mother .
  ?parent dbo:child ?child .

  OPTIONAL { ?child dbo:occupation dbr:Military_commander . }
  
  FILTER NOT EXISTS { 
    ?event dbo:subject ?child .
    MINUS { ?event rdf:type dbr:Societal_event } .
    MINUS { ?event rdf:type dbr:Event } .
    MINUS { ?tvShow dbo:title ?child . }
  }

  OPTIONAL {
    ?regiment dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .
    ?commander dbo:commanded ?regiment .
    FILTER (?commander = ?child)
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalBandMember WHERE {
  # Step 1: Identify GS9 members who are artists and musicians
  ?gs9Member dbo:type dbr:GS9 ;
             dbo:memberOf dbr:GS9 ;
             dbo:occupation dbr:Musical_artist .

  # Step 2: Find associated musical artists of these members
  ?gs9Member dbo:associatedMusicalArtist ?associatedArtist .
  
  # Step 3: Determine which associated artist is also a band member
  ?associatedArtist dbo:type dbr:Band ;
                   dbo:bandMember ?bandMember .

  # Step 4: Identify New York State award that is region, American, state, and settlement
  ?award dbo:type dbr:Region ;
         dbo:type dbr:American ;
         dbo:type dbr:State ;
         dbo:type dbr:Settlement ;
         dbo:location dbr:New_York_(state) .

  # Step 5: Find the awardee of this award who is a band
  ?award dbo:awardee ?bandAwardee .
  FILTER (?bandAwardee dbo:type dbr:Band)

  # Step 6: Determine native region of the awardee
  ?bandAwardee dbo:nativeRegion ?nativeRegion .

  # Step 7: Find band member of associated musical artist that matches native region
  ?associatedArtist dbo:nativeRegion ?nativeRegion .
  
  BIND(?bandMember AS ?finalBandMember)
}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Johnny Doughboy""@en .
  
  ?film dbo:starring ?actor ;
        dbp:director ?director . # Assuming director is linked to the film

  OPTIONAL { ?film dbo:producer ?producer } .

  FILTER (LANG(?actorLabel) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie ?award WHERE {
  ?person foaf:name ""Ian Gregson""@en .
  ?person rdf:type dbo:Poet .
  
  OPTIONAL { 
    ?film dbo:writer ?person ;
          dbo:award ?award .
  }
  
  FILTER EXISTS { ?film dbo:award ?award }
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  
  OPTIONAL { ?person dbo:residence ?residence . }
  OPTIONAL { ?residence dbo:nativeCountry ?native . }

  ?managerPosition dbo:agent ?person ;
                   dbo:position ""Manager""@en ;
                   dbo:team dbr:Hartlepool_United_F.C. .

}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Promise Me, Dad""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?person { 
    dbr:Aleksandr_Lvovich_Davydov 
    dbr:Karl_Gustav_von_Baggovut
  }
  
  ?war dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:country ?country .
  FILTER(?country = dbr:Russian_Empire)
  
  OPTIONAL { ?war dbo:description ?description . }
  
  ?person dbo:participatedInMilitaryConflict ?conflict .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?workLabel WHERE {
  VALUES ?filimonov { dbr:Aleksandr_Filimonov }
  ?work dbo:creator ?filimonov .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?entityInCharleston ?description
WHERE {
  # Find individuals who have received the Gillmore Medal
  ?awardee dbo:award dbr:Gillmore_Medal .
  
  # Find entities in Charleston, South Carolina associated with these awardees
  ?entityInCharleston dbo:location dbr:Charleston,_South_Carolina ;
                     dbo:associatedWith ?awardee .

  # Get a description of the entity to understand its significance or ""force""
  OPTIONAL { ?entityInCharleston rdfs:comment ?description }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeName WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Pakistan ;
        rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""heart of pakistan"") ||
         CONTAINS(LCASE(?label), ""paris of the east"") ||
         CONTAINS(LCASE(?label), ""city of gardens"") ||
         CONTAINS(LCASE(?label), ""city of literature""))
  
  OPTIONAL { ?city rdfs:label ?nativeName FILTER (lang(?nativeName) = 'ur') }
}
```",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?minyeKyawswa a dbo:Person ;
                 rdfs:label ""Minye Kyawswa""@en .
  
  ?minyeKyawswa dbo:child ?child .

  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,3,71,0,3,3,0.0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Find the father of Arthur Stanley (politician)
SELECT ?father WHERE {
    dbr:Arthur_Stanley_(politician) dbo:father ?father .
}

UNION

# Part 2: Find a parent of an awardee of Commander of the Royal Victorian Order
SELECT DISTINCT ?parent WHERE {
    ?person dbo:award dbr:Commander_of_the_Royal_Victorian_Order ;
            dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner or associated person with USS Arcadia (ID-1605)
  ?arcadia dbo:owner ?owner .
  FILTER(STRSTARTS(STR(?arcadia), ""http://dbpedia.org/resource/USS_Arcadia_(ID-1605)"")) .

  # Identify Andrew Yang as the author of ""Back to Work""
  ?yang dbo:authorOf dbr:Back_to_Work_ (Andrew_Yang)_book .
  FILTER(STRSTARTS(STR(?yang), ""http://dbpedia.org/resource/Andrew_Yang"")) .

  # Find a commander associated with World War I
  ?commander dbo:commanded ?wwi .
  ?wwi rdfs:label ?eventLabel .
  FILTER(CONTAINS(LCASE(?eventLabel), ""world war i"") || CONTAINS(LCASE(?eventLabel), ""great war"")) .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?toyotomiHideyoshi a dbo:Person ;
                     foaf:name ""Toyotomi Hideyoshi""@en .
  
  ?child dbo:parent ?toyotomiHideyoshi ;
         foaf:name ""Toyotomi Hideyori""@en .

  ?child dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }
  
  ?gillmore dbo:receivedAwards ?award .
  OPTIONAL { ?award dbo:recipient ?awardee . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the musical work ""True Self""
  dbr:True_Self dbo:composer ?artist .
  
  # Ensure the artist is associated with Steven Kapur
  ?work dbo:performer dbr:Steven_Kapur .

  # Filter artists who are native to Birmingham
  ?artist dbo:nativePlace dbr:Birmingham .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professionLabel WHERE {
  ?person rdfs:label ""Jamie T""@en .
  ?person dbo:occupation ?profession .
  ?profession rdfs:label ?professionLabel .
}
```",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band 
WHERE {
  ?person dbo:birthday ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .
  
  OPTIONAL { ?person dbo:associatedBand dbr:The_Fabulous_Thunderbirds . }
  
  ?memberOf dbo:member ?person .
  ?memberOf rdfs:label ?band .
  
  FILTER (LANG(?band) = ""en"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?dorothea { dbr:Dorothea_of_Denmark_(1574-1639) }
  ?dorothea dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?residence WHERE {
  ?office dbo:position ""Mayor of Madrid""@en .
  ?office dbo:officeHolder ?mayor .
  FILTER(YEAR(?mayordbo:electionDate) = 2003)
  OPTIONAL { ?mayor dbp:residence ?residence }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfChild ?fatherOfReferenceChild
WHERE {
  # Step 1: Identify Roger II of Sicily
  ?rogerII dbo:type/rdfs:subClassOf* dbo:Monarch ;
          foaf:name ""Roger II of Sicily""@en .

  # Step 2: Find the child of Roger II who is royalty
  ?child dbo:parent ?rogerII ;
         dbo:type/rdfs:subClassOf* dbo:RoyalFamilyMember .

  # Step 3: Determine the parent of this child
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify William I
  ?williamI dbo:type/rdfs:subClassOf* dbo:Monarch ;
           foaf:name ""William I""@en .

  # Step 5: Find references to William I that are royalty and office holders
  ?reference dbo:type/rdfs:subClassOf* dbo:RoyalFamilyMember, dbo:OfficeHolder ;
             dbo:wikiPageRedirects ?williamI .

  # Step 6: Determine the child of this reference who is royalty
  ?referenceChild dbo:parent ?reference ;
                  dbo:type/rdfs:subClassOf* dbo:RoyalFamilyMember .

  # Step 7: Identify the father of this child
  ?fatherOfReferenceChild dbo:child ?referenceChild .
  
  # Step 8: Match the parent from step 3 with the father from step 7
  FILTER (?parentOfChild = ?fatherOfReferenceChild)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?region WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  ?bobby dbo:musicalArtist dbr:Bobby_Shmurda .
  ?bobby dbo:associatedBand ?artist .

  # Step 2: Find a band member of that artist who is also a musical artist
  ?member dbo:bandMemberOf ?artist ;
          dbo:musicalArtist ?individualArtist .

  # Step 3: Identify an award related to New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Step 4: Determine the native region of the awardee
  ?awardee dbo:recipientOf ?award ;
          a dbo:Band ;
          dbo:nativeRegion ?region .

  # Ensure the band member is from the same region as the awardee
  FILTER(?member = ?awardee)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?war WHERE {
  # Find Jean Baptist, Comte d'Arco's involvement in wars
  ?dArco dbo:commander ?war .
  FILTER(STRSTARTS(STR(?dArco), ""http://dbpedia.org/resource/Jean_Baptiste,_Comte_d%27Arco""))

  # Find Yurii Khmelnytsky and his successor
  ?khmelnytsky dbo:successor ?successor .
  FILTER(STRSTARTS(STR(?khmelnytsky), ""http://dbpedia.org/resource/Yuriy_Khmelnytsky""))

  # Ensure the successor is also a commander in a war context involving Jean Baptist, Comte d'Arco
  ?successor dbo:commander ?war .

  # Reference to George Ducas
  OPTIONAL {
    ?dArco dbo:relatedTo dbr:George_Ducas .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         rdfs:label ""No Alternative""@en .
  OPTIONAL { ?album dbo:producer ?writer . }
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution (SAMPLE(?usEntity) AS ?entityInUS)
WHERE {
  # Find an institution in Georgia
  ?institution a dbo:College ;
               dbo:location dbr:Georgia_(U.S._state) .
  
  OPTIONAL { 
    ?institution a dbo:University .
  }
  
  # Find any entity from the United States
  ?usEntity dbo:country dbr:United_States .
}
LIMIT 1
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }",# No SPARQL query can be constructed due to lack of specific information about the movie.,2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:officeHolder ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?authorOfPromisesToKeep ?otherWorkAuthor WHERE {
  # Find the author of ""Promises to Keep""
  dbr:Promises_to_Keep_(Biden_book) dbo:author ?authorOfPromisesToKeep .
  
  # Find other works authored by Joe Biden that are written works
  ?work dbo:author ?otherWorkAuthor ;
        a dbo:WrittenWork ;
        foaf:name ?workName .
  
  FILTER(?otherWorkAuthor = dbr:Joe_Biden)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?combatant WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbp:combatant ?combatant .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in movies with ""and"" in the title
  ?movie dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""and"")) .
  
  ?movie dbo:starring ?actor .

  # Check if the actor is also in the movie ""ATL""
  ?atlMovie dbo:title ""ATL""@en .
  ?atlMovie dbo:starring ?actor .

  # Optional: Check for a professional field (this might need refinement based on available data)
  OPTIONAL { ?actor foaf:profession ?profession . FILTER(?profession != """") }
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Medal_of_Honor .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,2162,3752,28,0.365573216097396,0.9872146118721461,0.5335636722606121
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Find a common royalty who is both a child of Saw Shwe Khet and a grandchild of Minye Kyawswa
  ?commonRoyalty dbo:royalty true .
  
  # Child of Saw Shwe Khet
  ?sawShweKhet dbo:child ?commonRoyalty ;
              rdfs:label ""Saw Shwe Khet""@en .

  # Grandchild of Minye Kyawswa (child of one of his children)
  ?minyeKyawswaChild dbo:child ?parentOfCommonRoyalty .
  ?minyeKyawswaChild dbo:child ?commonRoyalty .
  ?minyeKyawswa dbo:child ?minyeKyawswaChild ;
                rdfs:label ""Minye Kyawswa""@en .

  # Father of the common royalty
  ?parentOfCommonRoyalty dbo:child ?commonRoyalty .

  # Spouse of the father
  ?parentOfCommonRoyalty dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName ?parentName WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:birthPlace dbr:London .
  
  ?person rdfs:label ?artistName .
  FILTER (lang(?artistName) = 'en')

  OPTIONAL { 
    ?person dbo:parent ?parent .
    ?parent rdfs:label ?parentName .
    FILTER (lang(?parentName) = 'en')
  }
}
ORDER BY ?artistName
LIMIT 10
```",2,4,3,2,1,3,2,20,0,10,21,0.0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherLabel WHERE {
  ?eleonore dbo:birthName ""Eleonore of Austria"" .
  ?eleonore dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
  FILTER(LANG(?fatherLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace1 ?birthPlace2 WHERE {
  ?person dbo:nationality dbr:Russian_Empire .
  ?person dbo:birthPlace ?birthPlace1 .
  FILTER (?birthPlace1 IN (dbr:Grand_Duchy_of_Finland, dbr:Russian_Empire))
  
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace2 .
    FILTER (?birthPlace2 != ?birthPlace1)
    FILTER (?birthPlace2 IN (dbr:Grand_Duchy_of_Finland, dbr:Russian_Empire))
  }
}
```",2,2,3,1,2,2,3,28,0,103,126,0.0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember ?warCommander
WHERE {
  # Part 1: Identify ruling party member in Westport, Connecticut
  ?partyMember a dbo:PoliticalParty ;
              dbo:location dbr:Westport,_Connecticut .

  # Part 2: Identify George Pickett's role as commander in the American Civil War
  dbr:George_Pickett dbo:commanderOf dbr:American_Civil_War .
  ?warCommander rdfs:label ""American Civil War""@en ;
               dbo:commander dbr:George_Pickett .

}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?rodArgentProfession ?akalaName WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:MusicalArtist ;
             foaf:name ""Rod Argent"" .
  ?rodArgent dbo:profession ?rodArgentProfession .

  # Find Akala by his birth name and get his professional identity
  ?akala a dbo:Musician ;
         foaf:name ?akalaName .
  FILTER(CONTAINS(LCASE(?akalaName), ""darryl paa kwesi bannerman-martin""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:profession dbr:Television_show_director ; # or other relevant profession
           dbp:occupation ""television show""^^xsd:string .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOfRegiment ?commanderOfBattle
WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot during a military conflict
  ?regiment dbo:name ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:commander ?commanderOfRegiment .

  # Find the military force involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:participatedInMilitaryForce ?battleForce .
  ?battleForce dbo:commander ?commanderOfBattle .

  # Filter to find a common commander
  FILTER (?commanderOfRegiment = ?commanderOfBattle)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?parent 
WHERE {
  # Find actors in the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  # Find Allan Arbus's children
  ?allan dbp:child ?child .
  FILTER (str(?allan) = ""Allan Arbus"")

  # Find the parent of Allan Arbus's child
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfMargareteSophie ?grandChildOfPhilipp WHERE {
  # Find child of Archduchess Margarete Sophie of Austria
  ?person dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?person rdfs:label ?childOfMargareteSophie .

  # Find grandchild of Duke Philipp of Württemberg
  ?grandParent dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?parent dbo:parent ?grandParent .
  ?parent rdfs:label ?grandChildOfPhilipp .
  
  FILTER regex(?childOfMargareteSophie, ""^[^\\[]+"", ""i"") # Filter out DBpedia resource labels
  FILTER regex(?grandChildOfPhilipp, ""^[^\\[]+"", ""i"")
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the entity known as ""The Triple X's""
  ?tripleXs a dbo:MilitaryUnit ;
            rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the triple x's""))

  # Find the commander of The Triple X's
  ?tripleXs dbo:commander ?commander .

  # Find the military force and commander for Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:militaryForce ?force1 ;
                                      dbo:commander ?cmd1 .
  
  # Find the military force and commander for Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:militaryForce ?force2 ;
                           dbo:commander ?cmd2 .

  # Check if the same person commanded both battles or The Triple X's
  FILTER(?commander = ?cmd1 || ?commander = ?cmd2)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Step 1: Identify the leader of West Germany (Chancellor)
  ?chancellor a dbo:HeadOfGovernment ;
              dbo:country dbr:West_Germany .

  # Step 2: Find the manager of VfL Bochum in 2007–08
  ?manager dbo:managedTeam dbr:VfL_Bochum ;
           dbo:managementPeriod ?period .
  
  FILTER (CONTAINS(LCASE(?period), ""2007-08""))

  # Step 3: Check if the manager is connected to the Chancellor
  OPTIONAL { ?chancellor dbo:manager ?manager . }

  # Step 4: Retrieve the native country of the manager
  ?manager dbo:nationality ?nativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor (SAMPLE(?name) AS ?actorName)
WHERE {
  # Find actors in ""Ab Kya Hoga""
  ?abKyaHogaActor dbo:starring dbr:Ab_Kya_Hoga .
  
  # Find actors in ""Dispatches from Elsewhere""
  ?dispatchesActor dbo:starring dbr:Dispatches_from_Elsewhere .

  # Ensure the actor is the same for both works
  FILTER (?abKyaHogaActor = ?dispatchesActor)

  # Bind the common actor to a variable
  BIND(?abKyaHogaActor AS ?actor)
  
  # Get the name of the actor
  ?actor dbo:name ?name .

  # Check if this actor is also a politician
  OPTIONAL { ?actor dbo:occupation dbr:Politician . }
}
GROUP BY ?actor
HAVING (COUNT(DISTINCT ?dispatchesActor) > 0)
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel
WHERE {
  ?entity dbo:state dbr:Andhra_Pradesh .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Russian_Empire .
  ?person dbo:deathPlace dbr:Switzerland .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,1,2,2,3,28,36,33,0,0.5217391304347826,1.0,0.6857142857142856
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Assuming Koichirō refers to a historical context or figure related to war
  OPTIONAL {
    ?person rdfs:label ""Koichirō""@en .
    ?person dbo:participatedIn ?war .
    ?war dbo:description ?description .
  }
  
  # Wars involving Toyotomi Hideyoshi's children
  {
    dbr:Battle_of_Sekigahara dbo:description ?sekigaharaDescription .
    BIND(""Battle of Sekigahara"" AS ?war)
    BIND(?sekigaharaDescription AS ?description)
  } UNION {
    dbr:Siege_of_Osaka dbo:description ?osakaDescription .
    BIND(""Siege of Osaka"" AS ?war)
    BIND(?osakaDescription AS ?description)
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Step 1: Identify French Montana's associated musical artist
  ?artist a dbo:MusicalArtist ;
          dbo:member ?bandMember .
  
  FILTER(?artist = dbr:French_Montana) .

  # Step 2: Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
         dbo:location ?region .
  
  # Step 3: Ensure the region is a state and settlement in America
  ?region a dbo:StateOrTerritory, dbo:Settlement ;
          dbo:country dbr:United_States .

  # Step 4: Find band members associated with the musical artist
  ?bandMember dbo:associatedBand ?artist .
  
  # Step 5: Identify natives of the region/state/settlement
  ?native dbo:nativePlace ?region ;
          dbo:member ?bandMember .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?event ?tvShow WHERE {
  # Ferdinand II, Holy Roman Emperor's children
  VALUES ?ferdinand { dbr:Ferdinand_II,_Holy_Roman_Emperor }
  
  ?child dbo:parent ?ferdinand .
  
  # Child who was a commander in war
  ?commanderInWar dbo:commanderInWar ?child .

  # Societal event related to the Algerian War
  ?event dbo:societalEvent ?algerianWar ;
         rdf:type dbo:Event ;
         dbo:televisionShow ?tvShow .
  
  # Linking the societal event to the military force of the Algerian War
  ?algerianWar dbo:militaryForce dbr:Military_force_of_the_Algerian_War .

  # Ensuring the child is linked to this event and TV show
  ?child dbo:associatedWith ?event .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of GS9
  ?gs9Member dbo:memberOf dbr:GS9 .
  
  # Filter for those who are both an artist and a musical artist
  ?gs9Member dbo:occupation dbp:musician ;
             dbo:occupation dbp:artist .

  # Find associated musical artists
  ?gs9Member dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName ?actorAsActor ?actorAsPolitician
WHERE {
  # Identify the movie ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  
  # Get actor's name
  ?actor rdfs:label ?actorName .

  # Filter actors who are also politicians
  ?actor dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ""Actor""@en }
    && EXISTS { ?actorAsPolitician dbo:occupation ?politicianOccupation . 
                ?politicianOccupation rdfs:label ""Politician""@en }
  )

  # Get professions
  ?actorAsActor dbo:occupation ?actorOccupation .
  FILTER (?actorOccupation rdfs:label = ""Actor""@en)
  
  ?actorAsPolitician dbo:occupation ?politicianOccupation .
  FILTER (?politicianOccupation rdfs:label = ""Politician""@en)

}
```",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Find a child of Baeda Maryam I
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Find the father of that child (Baeda Maryam I)
  ?child dbo:father ?baeda_maryam_i .

  # Find the father of Baeda Maryam I (the grandfather)
  ?baeda_maryam_i dbo:father ?grandfather .

  # Check if the grandfather is royalty or an office holder
  OPTIONAL { ?grandfather dbp:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""emperor"") || CONTAINS(LCASE(?title), ""ruler"")) }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  ?petro a dbo:Person ;
         foaf:name ""Gustavo Petro"" ;
         dbo:nationality dbr:Colombia .
  ?petro dbo:politicalParty ?party .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Roger II's child who is also William II's father
  ?henry a dbo:Monarch ;
         dbo:spouse ?constanceHauteville ;
         dbo:child ?williamII .
  
  # Constance of Hauteville (daughter of Roger II, mother to William II)
  ?constanceHauteville a dbo:Person ;
                      rdfs:label ""Constance of Hauteville""@en ;
                      dbo:spouse ?henry ;
                      dbo:child ?williamII .
  
  # Constance of Burgundy's spouse
  ?humbertIII a dbo:Monarch ;
              dbo:spouse ?constanceBurgundy .

  # Child of Humbert III (Constance of Burgundy's spouse)
  ?peterII a dbo:Person ;
           dbo:childOf ?humbertIII .
  
  # Check if Constance of Hauteville is the child of Humbert III's spouse
  ?constanceHauteville dbo:childOf ?peterII .

  FILTER (lang(?label) = ""en"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show (GROUP_CONCAT(?awardLabel; separator="", "") AS ?awards)
WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:awardedBy ?congress .
  ?show dbo:award ?award .
  ?award a dbo:Award .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?congress), ""united states congress""))
}
GROUP BY ?show
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the producer of ""Nothing to Gein""
  dbr:Nothing_to_Gein dbo:producer ?producer .
  
  # Ensure the producer is an organisation or a group
  ?producer rdf:type ?type .
  FILTER (?type IN (dbr:MusicalGroup, dbr:Organization)) .

  # Find band members of Slipknot associated with this producer
  ?slipknotBandMember dbo:memberOf dbr:Slipknot ;
                     dbo:memberOf ?producer .

  # Check if the same person is a member of Stone Sour
  ?stoneSourBandMember dbo:memberOf dbr:Stone_Sour .
  
  # Ensure it's the same band member
  FILTER (?slipknotBandMember = ?stoneSourBandMember)
  
  # Return the band member
  BIND(?slipknotBandMember AS ?bandMember)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantName WHERE {
    # Find the leader of Madrid City Council in 2003
    ?leader a dbo:Mayor ;
            dbo:electedDuring ?election .
    
    FILTER(CONTAINS(LCASE(STR(?election)), ""madrid city council election 2003"")).

    # Get residences associated with Miguel Maura and Mariano Rajoy during their office terms
    OPTIONAL {
        ?miguelMaura a dbo:Person ;
                     foaf:name ""Miguel Maura"" ;
                     dbo:residence ?residence1 .
    }
    
    OPTIONAL {
        ?marianoRajoy a dbo:Person ;
                      foaf:name ""Mariano Rajoy"" ;
                      dbo:residence ?residence2 .
    }

    # Find the tenant of the leader's residence
    ?leader dbo:residence ?residenceLeader .

    ?tenant a dbo:Person ;
            dbo:residence ?residenceLeader ;
            foaf:name ?tenantName .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residenceCountry ?administration 
WHERE {
  # Álvaro Quirós' office in the 2009 Galician regional election
  ?person rdfs:label ""Álvaro Quirós""@en .
  ?person dbo:electedAs ?office .

  # Residence country of Álvaro Quirós
  ?person dbp:residenceCountry ?residenceCountry .

  # Administration associated with the Spanish Socialist Workers' Party (PSOE)
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:member ?administration .
  FILTER EXISTS { ?administration dbo:country <http://dbpedia.org/resource/Spain> }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war1 ?war2 ?entityInBirthPlace WHERE {
  # Wars involving Karl Gustav von Baggovut
  { 
    ?person1 rdfs:label ""Karl Gustav von Baggovut""@en .
    ?person1 dbo:participatedIn ?war1 .
  }
  
  UNION
  
  # Wars involving Alexander Lvovich Davydov
  {
    ?person2 rdfs:label ""Alexander Lvovich Davydov""@en .
    ?person2 dbo:participatedIn ?war2 .
  }

  # Entity in the birthplace of Elena Žalinkevičaitė-Petrauskienė
  {
    ?e person rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
    ?e dbp:birthPlace ?birthPlace .
    ?entityInBirthPlace dbo:location ?birthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Query for Cat Country novel's country
  OPTIONAL { 
    ?novel rdfs:label ""Cat Country""@en .
    ?novel dbo:country ?country .
  }
  
  UNION
  
  # Query for Winston Chang's birthplace
  OPTIONAL {
    ?person dbr:Winston_Chang .
    ?person dbo:birthPlace ?birthPlace .
    BIND(?birthPlace AS ?country)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maximilian I's child who is Ferdinand I
  ?maximilianI dbo:child ?child .
  
  FILTER(?maximilianI = dbr:Maximilian_I,_Holy_Roman_Emperor)
  
  # Ferdinand I as the father of Charles V and Isabella of Austria
  ?child dbo:spouse ?parentOfDorothea .
  ?child dbo:spouse ?parentOfCatherine .

  FILTER(?parentOfDorothea = dbr:Ferdinand_I,_Holy_Roman_Emperor)
  FILTER(?parentOfCatherine = dbr:Ferdinand_I,_Holy_Roman_Emperor)

  # Charles V is the father of Dorothea's husband
  ?charlesV dbo:spouse ?dorotheasHusband .
  ?dorotheasHusband dbo:child dbr:Dorothea_of_Denmark .

  FILTER(?charlesV = dbr:Charles_V,_Holy_Roman_Emperor)

  # Isabella of Austria is the mother of Catherine
  ?isabellaAustria dbo:spouse ?catherinesFather .
  ?catherinesFather dbo:child dbr:Catherine_of_Austria .

  FILTER(?isabellaAustria = dbr:Isabella_of_Portugal,_Holy_Roman_Emperor)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personName ?force ?birthPlace ?settlementType WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Quincy Adams Gillmore""@en ;
          dbo:dateOfDeath ?deathDate ;
          dbo:militaryUnit ?force ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace dbo:type ?settlementType .
  
  FILTER (?deathDate = ""1850-08-05""^^xsd:date)
  FILTER (CONTAINS(LCASE(?settlementType), ""settlement""))
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""america"") || CONTAINS(LCASE(STR(?birthPlace)), ""united states""))
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          dbp:name ""Alfonso IV of Aragon""@en .
  
  ?child dbo:childOf ?parent ;
         dbp:name ""Peter IV of Aragon""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Bob Thompson"" .
  ?person a dbo:MusicalArtist .
  ?person dbo:band ?band .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for bands Eric Clapton is a member of
SELECT ?band WHERE {
  dbr:Eric_Clapton dbo:memberOf ?band .
}

# Query for real names associated with The Fabulous Thunderbirds
SELECT ?person ?realName WHERE {
  ?person dbo:associatedBand dbr:The_Fabulous_Thunderbirds ;
          foaf:name ?stageName .
  OPTIONAL { ?person foaf:name ?realName . }
  FILTER(?stageName != ?realName)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Na'od II's father
  ?naod2 dbo:parent ?father .
  
  # Father of Na'od II's father (Na'od II's grandfather)
  ?father dbo:parent ?grandfather .

  # Ensure the grandfather is a royalty or office holder
  OPTIONAL { ?grandfather dbo:occupation dbr:Monarch . }
  OPTIONAL { ?grandfather dbo:officeHolderOf dbr:Ethiopia . }

  FILTER EXISTS {
    ?grandfather dbo:occupation dbr:Monarch .
  } 
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find Mary Elphinstone and her parent who is a native of Middlesex
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?maryParent .
  ?maryParent dbo:nativePlace dbr:Middlesex .

  # Find Claude Bowes-Lyon's child
  dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?claudesChild .

  # Match the parent of Mary Elphinstone with the parent of Claude Bowes-Lyon's child
  ?claudesChild dbo:parent ?parent .
  
  FILTER (?maryParent = ?parent)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?tenant 
WHERE {
  # Find Alberto Núñez Feijóo's position
  dbr:Alberto_Núñez_Feijóo dbo:position ?position .
  
  # Find the tenant of Santiago de Compostela
  ?office dbo:location dbr:Santiago_de_Compostela ;
          dbo:officeHolder ?tenant .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX db: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?leader WHERE {
  ?miguelMaura rdf:type dbo:Politician ;
               foaf:name ""Miguel Maura"" .
  
  ?miguelMaura db:politicalParty ?party .

  ?party db:leader ?leader .
  
  ?leader rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?partyMember ?deathPlace WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace . }

  # Identify Pickett's Charge commander and party member
  dbr:George_Pickett dbo:commanderOf ?charge .
  FILTER(CONTAINS(LCASE(STR(?charge)), ""picketts charge""))
  
  dbr:Confederate_States_of_America a dbo:PoliticalParty ;
                                  dbo:member ?partyMember .

  # Check if the death place is related to either Pickett or CSA
  OPTIONAL { ?commander rdfs:label ""George Pickett""@en . }
  OPTIONAL { ?partyMember rdfs:label ?partyLabel .
             FILTER(CONTAINS(LCASE(?partyLabel), ""confederate states of america"")) }

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Linking conditions
  OPTIONAL { ?commander dbo:placeOfBirth ?deathPlace . }
  OPTIONAL { ?partyMember dbo:placeOfBirth ?deathPlace . }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .

  # Step 2: Find the predecessor of Carl, Duke of Württemberg
  ?predecessor dbp:successor <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .

  # Step 3: Find the child of the parent from step 1
  ?parentChild dbo:child ?royaltyCandidate .

  # Step 4: Ensure the candidate is royalty (e.g., has a title)
  ?royaltyCandidate dbp:title ?title .
  FILTER EXISTS { ?royaltyCandidate dbo:predecessor ?predecessor }

  # Step 5: Find the child of this royal individual
  ?royaltyChild dbo:child ?childOfChild .

  # Ensure the child is royalty (optional, depending on interpretation)
  OPTIONAL { ?childOfChild dbp:title ?childTitle }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?elvira dbo:spouse dbr:Roger_II_of_Sicily .
  ?elvira rdfs:label ""Elvira of Castile""@en .

  ?roger dbo:spouse ?elvira .
  ?roger rdfs:label ""Roger II of Sicily""@en .

  ?child dbo:parent ?elvira ;
         dbo:parent dbr:Roger_II_of_Sicily ;
         dbo:child dbr:William_II_of_Sicily ;
         a dbo:RoyalPerson .

  FILTER(CONTAINS(LCASE(?child), ""alfonso""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father dbr:Roger_II_of_Sicily .

  # Roger III, Duke of Apulia's parent (father)
  dbr:Roger_III,_Duke_of_Apulia dbo:father dbr:Roger_II_of_Sicily .

  # Elvira of Castile and her child
  dbr:Elvira_of_Castile dbo:child dbr:Roger_III,_Duke_of_Apulia .
  
  # The person who is both a child of Roger III and Elvira of Castile
  ?person dbo:father dbr:Roger_II_of_Sicily .
  ?person dbo:mother dbr:Elvira_of_Castile .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?album rdfs:label ""Lasso the Moon""@en .
  ?album a dbo:Album ;
         dbo:film true ;
         dbo:work true .
  
  ?album dbo:actor ?actor .

  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actor""))
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Saw Shwe Khet""@en .
  FILTER NOT EXISTS { ?person a dbo:Place } # Ensure it's not a place
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?person rdfs:label ""Stephen V of Hungary""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
  FILTER(LANG(?childLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,6,5,0.0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  ?person rdfs:label ""Eleonora Menicucci de Oliveira""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician""))
  OPTIONAL { ?person dbo:birthPlace ?birthPlace }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?birthName WHERE {
  # Find artists from the Central Region of Ghana
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace ?place .
  
  FILTER(CONTAINS(LCASE(str(?place)), ""central region, ghana""))
  
  ?person dbp:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""musician"") || CONTAINS(LCASE(str(?occupation)), ""singer""))

  # Get their birth name
  ?person foaf:name ?birthName .

  # Find musicians with the same birth name
  ?artist dbo:profession dbr:Musician ;
          foaf:name ?birthName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character ?work WHERE {
  ?character a dbo:Character ;
             rdfs:label ""Kent Allard""@en .
  OPTIONAL { ?character dbo:book ?work . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?collinsWork ?gaynorMovie
WHERE {
  # Find Cora Sue Collins' claim to fame (professional work)
  OPTIONAL { 
    dbr:Cora_Sue_Collins dbo:claimToFame ?collinsWork .
  }
  
  # Find Janet Gaynor's claim to fame (movie)
  OPTIONAL { 
    dbr:Janet_Gaynor dbo:film ?gaynorMovie ;
                     dbo:claimToFame ?gaynorMovie .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT ?label ?altLabel WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ?label ;
         skos:altLabel ?altLabel .
  
  FILTER (lang(?label) = 'en' || lang(?altLabel) = 'en')
  
  VALUES ?party { <http://dbpedia.org/resource/Partido_Socialista_Obrero_Español> }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthPlace WHERE {
  # Identify Quincy Adams Gillmore
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Quincy Adams Gillmore"" ;
          dbo:dateOfDeath ""1850-08-05""^^xsd:date .

  # Find an award associated with him
  ?award dbo:recipient ?person ;
         dbo:field dbr:Military_Awards_and_Decorations .

  # Determine the force related to the award
  ?force dbo:awardee ?award .

  # Identify his birthplace, ensuring it is a settlement in America
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerClub ?season ?leaderName ?nativeCountry
WHERE {
  # Find Thomas Letsch's management role in a soccer club
  ?letsch dbo:occupation dbr:Soccer_manager .
  ?letsch foaf:name ""Thomas Letsch"" .

  ?letsch dbo:managedTeam ?managerClub ;
          dbo:managementPeriod ?season .

  # Identify the leader of West Germany during the relevant period
  ?leader dbo:country dbr:West_Germany ;
          dbo:officeHolderOf dbr:Chancellor_of_West_Germany .
  
  ?leader foaf:name ?leaderName .

  # Find the native country of this leader
  ?leader dbo:nationality ?nativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?startDate ?endDate
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Anxo Quintana""@en .
  
  ?person dbo:positionHeld ?office ;
          dbo:startDate ?startDate ;
          dbo:endDate ?endDate .

  FILTER (lang(?office) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationEvent WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:event ?administrationEvent .
  FILTER(CONTAINS(LCASE(?position), ""minister"") || CONTAINS(LCASE(?position), ""president""))
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Find Stephen V of Hungary and his children
  dbr:Stephen_V_of_Hungary a dbo:Monarch ;
                          dbo:child ?stephenChild .

  # Find Philip, Despot of Romania, his parent (father), and grandparent
  dbr:Philip_Despot_of_Romania a dbo:Person ;
                               dbo:father ?philipFather .
  ?philipFather a dbo:Person ;
                dbo:father ?philipGrandfather .

  # Match the spouse of Stephen V's child with Philip's grandfather's spouse
  ?stephenChild dbo:spouse ?spouse .
  ?philipGrandfather dbo:spouse ?spouse .

  FILTER (?spouse != dbr:Stephen_V_of_Hungary) # Ensure it's not Stephen V himself
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  VALUES ?university { 
    dbr:Plovdiv_University_Paisii_Hilendarski 
  }
  ?university dbo:alumni ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Caroline Louise Bevan Symonds""@en .
  ?person rdfs:label ""Carrie Johnson""@en .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Saw Min Phyu's spouse and their royal child
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  ?child dbo:parent ?spouse ;
         a dbo:Royal .

  # Predecessor of the royal child
  ?predecessor dbo:successor ?child .

  # Father of Myat Hpone Pyo and his royal spouse
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  ?royalSpouse dbo:spouse ?father ;
               a dbo:Royal .

  # Child of Saw Min Hla
  ?sawMinHlaChild dbo:parent dbr:Saw_Min_Hla .

  # Intersection or relationship condition (if any)
  FILTER(?predecessor = ?royalSpouse || ?predecessor = ?sawMinHlaChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force 
WHERE {
  # Find the award named after Edmund Hakewill-Smith
  ?award dbo:name ""Edmund Hakewill-Smith Award""@en .
  
  # Identify awardees of this award
  ?recipient dbo:recipientOfAward ?award .

  # Attempt to find a property related to 'force' for each awardee
  OPTIONAL {
    ?awardee rdfs:label ?awardeeLabel .
    FILTER (lang(?awardeeLabel) = ""en"")
    
    # Assuming force is a measurable property, we look for it in the ontology
    ?awardee dbo:force ?force .
  }
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessorLabel WHERE {
  ?myatHponePyo dbo:predecessor ?predecessor .
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  OPTIONAL { ?predecessor rdfs:label ?predecessorLabel . }
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?collinsProducer ?gaynorProducer WHERE {
  # Find Cora Sue Collins' notable work and its producer
  ?collinsWork dbo:author dbr:Cora_Sue_Collins .
  OPTIONAL { ?collinsWork dbo:producer ?collinsProducer . }

  # Find Janet Gaynor's notable movie and its producer
  ?gaynorMovie dbo:starring dbr:Janet_Gaynor ;
               a dbo:Film .
  OPTIONAL { ?gaynorMovie dbo:producer ?gaynorProducer . }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentName WHERE {
  VALUES ?maryElphinstone { dbr:Mary_Elphinstone,_Lady_Elphinstone }
  ?maryElphinstone dbo:parent ?parent .
  OPTIONAL { ?parent rdfs:label ?parentName FILTER (lang(?parentName) = 'en') . }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the book ""Smartbomb"" and its author
  dbr:Smartbomb dbo:author ?author .

  # Find movies associated with this author
  ?movie dbo:writer ?author .
  
  # Retrieve actors from these movies
  ?movie dbo:starring ?actor .
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tvShow ?movie WHERE {
  # Find the DBpedia resource for Richard Grant Esterhuysen
  ?person a dbo:Actor ;
          foaf:name ""Richard Grant Esterhuysen"" ;
          dbo:birthName ?birthName .
  
  FILTER(?birthName = ""Richard Grant Esterhuysen"")

  # Find television shows he is associated with
  ?tvShow dbo:actor ?person .

  # Check if the TV show has a movie adaptation or is considered both
  OPTIONAL {
    ?movie dbo:adaptationOf ?tvShow .
  }

  FILTER EXISTS { ?movie . } # Ensure there's a related movie

}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?character ?profession WHERE {
  # Find the band associated with Bob Thompson (musician)
  ?person a dbo:MusicArtist ;
          foaf:name ""Bob Thompson"" .
  ?person dbo:memberOfBand ?band .

  # Identify the fictional character created by Walter B. Gibson
  ?creator a dbo:Writer ;
           foaf:name ""Walter B. Gibson"" .
  ?character dbo:createdBy ?creator ;
             dbo:fictionalWork dbr:The_Shadow_(radio_series) .
  
  # Find the profession of The Shadow's alter ego
  ?character dbo:profession ?profession .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person foaf:name ""George H. Cameron""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?song { dbr:Always_the_Love_Songs }
  ?song dbo:composer ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbpedia:Reed_Howes 
    dbpedia:Carolyn_Jones_(actress)
  }
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fatherName WHERE {
  ?peterIV rdf:type dbo:Monarch ;
           foaf:name ""Peter IV of Aragon""@en .
  ?peterIV dbo:father ?father .
  ?father rdf:type dbo:Monarch ;
          foaf:name ?fatherName .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?stuartArtist ?wizardsWriterArtist WHERE {
  # Find the associated musical artist of Stuart Tosh
  OPTIONAL {
    dbr:Stuart_Tosh dbo:musicalArtist ?stuartArtist .
  }

  # Find the writer who is also a musician and an artist for Wizards of Waverly Place soundtrack
  OPTIONAL {
    ?wizardsWriterArtist dbo:composer dbr:Wizards_of_Waverly_Place_(soundtrack) ;
                        rdf:type dbo:Musician ;
                        dbo:artist dbr:Wizards_of_Waverly_Place .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:wikiPageWikiLink ?war .
  ?war rdfs:label ""Central African Republic Civil War""@en .

  ?person dbo:office ?office .
  
  OPTIONAL { 
    ?person a dbo:Politician .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?writer .

  # Identify commanders in the Russo-Polish War
  ?commander dbo:wikiPageWikiLink dbr:Russo%E2%80%93Polish_War_(1654%E2%80%931667) .
  
  # Find successors who are politicians or office holders
  ?successor dbo:succeededBy ?commander ;
             a dbo:Politician ;
             (dbo:officeHolder|dbo:politicalPartyMember) ?office .

  # Ensure the writer is also the successor
  FILTER (?writer = ?successor)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2
WHERE {
  # Find the office held by Mariano Rajoy in the 2003 Madrid City Council election
  ?person a dbo:Politician ;
          foaf:name ""Mariano Rajoy""@en .
  
  OPTIONAL {
    ?election dbr:Madrid_City_Council_election,_2003 ;
              dbo:electedAs ?office1 .
    ?office1 dbo:officeHolder ?person .
  }
  
  # Find the office as leader of the Conservative Republican Party (Spain)
  ?party a dbo:PoliticalParty ;
         foaf:name ""Conservative Republican Party (Spain)""@en .
  
  OPTIONAL {
    ?party dbo:leader ?person .
    ?office2 dbo:positionHeldBy ?person ;
             rdfs:label ?roleLabel .
    FILTER(CONTAINS(LCASE(?roleLabel), ""leader""))
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?band 
WHERE {
  VALUES ?album { dbr:No_Alternative }
  
  ?album dbo:contributor ?artist .
  
  OPTIONAL {
    ?artist dbo:bandMember ?band .
  }
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse WHERE {
  # Step 1: Identify Princess Antoinette and her children
  ?antoinette a dbo:Person ;
              foaf:name ""Antoinette of Brunswick-Wolfenbüttel""@en ;
              dbo:child ?child .

  # Step 2: Filter for the child that is royalty
  ?child a dbo:Monarch ;
         dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel .

  # Step 3: Find the spouse of this royal child
  ?child dbo:spouse ?firstSpouse .

  # Step 4: Identify the spouse's spouse
  ?firstSpouse dbo:spouse ?finalSpouse .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  VALUES (?paulusPowell) { dbr:Paulus_Powell }
  
  ?paulusPowell dbo:birthPlace ?region .
  
  # Step 2: Find the governor of that region
  ?governor a dbo:Politician ;
           dbo:governmentRole ?role ;
           dbo:officeHolderOf ?region .
  
  FILTER EXISTS { ?role dbo:position ""Governor"" }
  
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Step 3: Find Vince Gilligan's award and the awardee's birth place
  VALUES (?vinceGilligan) { dbr:Vince_Gilligan }
  
  ?award dbo:recipient ?vinceGilligan ;
         dbo:awardee ?awardee .
  
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouseName WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  ?person dbo:spouse dbr:Roger_Pryor_(actor) ;
           dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  OPTIONAL { ?person foaf:name ?spouseName . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee ?almaMater WHERE {
  ?awardee a dbo:Person ;
           dbo:nationality dbr:Australia ;
           dbo:occupation ?occupation ;
           dbo:award dbr:Australian_Laureate_Fellowship .
  
  FILTER(CONTAINS(LCASE(?occupation), ""scientist"") || CONTAINS(LCASE(?occupation), ""researcher""))

  OPTIONAL { ?awardee foaf:almaMater ?almaMater . }
}
```",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ventiris ?athensConnection ?warConnection
WHERE {
  ?ventiris rdf:type dbo:Person .
  ?ventiris rdfs:label ""Konstantinos Ventiris""@en .

  OPTIONAL { ?ventiris dbo:birthPlace dbr:Athens . }
  OPTIONAL { ?ventiris dbo:deathPlace dbr:Athens . }
  OPTIONAL { ?ventiris dbo:residence dbr:Athens . }

  OPTIONAL {
    ?ventiris dbo:militaryService ?warConnection .
    FILTER (CONTAINS(LCASE(?warConnection), ""war""))
  }

  OPTIONAL {
    ?ventiris dbo:occupation ?occupation .
    FILTER (CONTAINS(LCASE(?occupation), ""military"") || CONTAINS(LCASE(?occupation), ""soldier""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthplace WHERE {
  ?award dbo:winner ?awardee .
  ?award dbo:name ""Anita Borg Institute Women of Vision Awards""@en .
  ?awardee foaf:nationality ?nationality .
  FILTER(CONTAINS(LCASE(STR(?nationality)), ""japan"") || CONTAINS(LCASE(STR(?nationality)), ""japanese"")) .
  ?awardee dbp:birthPlace ?birthplace .
  OPTIONAL { 
    ?birthplace dbo:country ?country .
    FILTER(CONTAINS(LCASE(STR(?country)), ""japan""))
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Bob_Crewe dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer ?alterEgo
WHERE {
  # Find the producer of Coke Studio Philippines
  ?show dbp:name ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .

  # Find the alter ego of The Shadow
  ?character rdfs:label ""The Shadow""@en ;
             dbo:alterEgo ?alterEgo .
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?film dbo:title ""Nothing to Gein""@en .
  ?film dbo:producer ?producer .
  ?producer a ?type .
  FILTER (
    ?type = dbo:Organization || 
    ?type = dbo:MusicalGroup ||
    ?type = dbo:Band
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify the 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006-07 dbo:sportsTeam dbr:VfL_Bochum .
  
  # Find the successor season
  ?successorSeason dbo:predecessor dbr:VfL_Bochum_season_2006-07 ;
                   a dbo:SoccerClubSeason .

  # Determine the manager of the team in this successor season
  ?successorSeason dbo:manager ?manager .
  
  # Ensure the manager is a sports manager born on 1968-08-26
  ?manager dbo:birthDate ""1968-08-26""^^xsd:date ;
           a dbo:SportsManager .
}
```",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?olafReign ?olafTitle ?olafTerritory ?christianRole WHERE {
  # Olaf I of Denmark
  VALUES ?olaf (dbr:Olaf_I_of_Denmark) .
  
  OPTIONAL { 
    ?olaf dbo:reign ?olafReign .
  }
  
  OPTIONAL {
    ?olaf dbo:ruledAs ?olafTitle .
  }
  
  OPTIONAL {
    ?olaf dbo:countryAdministered ?olafTerritory .
    FILTER (CONTAINS(LCASE(STR(?olafTerritory)), ""copenhagen""))
  }

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  VALUES ?christian (dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck) .
  
  OPTIONAL {
    ?christian dbo:birthPlace ?birthPlace .
    FILTER EXISTS { 
      ?birthPlace rdf:type dbo:City .
    }
  }

  OPTIONAL {
    ?christian dbo:ruledAs ?christianRole .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Janet Gaynor's claim to fame movie
  dbr:Janet_Gaynor dbo:film dbr:7th_Heaven_(1927_film) .
  
  # The Shadow and its professional alter ego
  OPTIONAL { 
    dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
    ?professional rdfs:label ""Lamont Cranston""@en .
    ?professional dbo:profession dbr:Actor ; dbo:profession dbr:Director .
    
    # Check if this professional produced any films
    OPTIONAL { 
      ?film dbo:producer ?professional .
      ?film rdfs:label ?filmLabel .
      
      FILTER CONTAINS(LCASE(?filmLabel), ""the adventures of tom sawyer"")
    }
  }

  # Producer of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?primeMinister ?partyName WHERE {
  ?primeMinister a dbo:PrimeMinister ;
                dbo:country dbr:Spain ;
                dbo:politicalParty ?party .
  ?party rdfs:label ?partyName .
  FILTER(CONTAINS(LCASE(?partyName), ""spanish socialist workers' party""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?birthDate ?nationality WHERE {
  # VfL Bochum 2007-08 season manager
  dbr:VfL_Bochum_season_2007–08 dbo:manager ?manager .
  
  # Manager's birthdate and nationality
  ?manager dbo:birthDate ?birthDate ;
           dbo:nationality ?nationality .

  # Filter for the specific birth date and check if native of West Germany
  FILTER (?birthDate = ""1968-08-26""^^xsd:date)
  FILTER CONTAINS(str(?nationality), ""West Germany"")
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?kiyosu a dbo:Place ;
          rdfs:label ""Kiyosu""@en .
  OPTIONAL { ?kiyosu dbo:timeZone ?timezone . }
  OPTIONAL { ?timezone dbp:region ?region . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:nationality dbr:Poland ;
             dbo:occupation dbr:Military_commander .
  
  ?commander dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:name ?conflictName .

  FILTER (CONTAINS(LCASE(?conflictName), ""french revolutionary wars"") || CONTAINS(LCASE(?conflictName), ""napoleonic wars""))
  
  OPTIONAL { ?commander rdfs:label ?name . }
}
ORDER BY ?name
LIMIT 10
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?warLabel WHERE {
  # Tom Phillips' military service
  ?tomPhillips a dbo:MilitaryPerson ;
              foaf:name ""Tom Phillips"" ;
              dbo:servedInMilitaryBranch ?branch1 .
  
  # William Tennant's military service
  ?williamTennant a dbo:MilitaryPerson ;
                  foaf:name ""William Tennant"" ;
                  dbo:servedInMilitaryBranch ?branch2 .

  # Wars they were involved in
  ?tomPhillips dbo:militaryConflict ?war .
  ?williamTennant dbo:militaryConflict ?war .

  # Ensure the same war is returned for both individuals
  FILTER(?branch1 = ?branch2)

  # Get the label of the war
  SERVICE <http://dbpedia.org/sparql> {
    ?war rdfs:label ?warLabel .
    FILTER(LANG(?warLabel) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle WHERE {
  ?work dbo:author dbr:Hillary_Clinton .
  ?work rdf:type dbo:Book .
  FILTER EXISTS { 
    ?person dbo:wikiPageWikiLink dbr:Category:American_politicians ;
            dbo:wikiPageID ?id .
    BIND(dbr:Hillary_Clinton AS ?person)
  }
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Find the producer of ""Storm in a Teacup"" (film)
  ?producer dbo:productionCompany ?film .
  ?film rdfs:label ""Storm in a Teacup""@en .

  # Find the writer of ""Boom Shack-A-Lak""
  ?writer dbo:lyrics ?song .
  ?song rdfs:label ""Boom Shack-A-Lak""@en .

  # Check if they are the same person
  FILTER (?producer = ?writer)

  # Get their birthplace
  ?writer dbp:birthPlace ?birthPlace .

  # Find a notable native of that birthplace
  ?native dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerTeam ;
        dbo:country dbr:Hong_Kong ;
        dbo:manager ?manager .
  
  ?manager a dbo:SportsManager ;
          dbo:sport dbr:Soccer .

  FILTER (str(?team) = ""Hong Kong C Team"")
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?alumnusLabel WHERE {
  ?college dbp:name ""Eton College""@en .
  ?college dbo:alumni ?alumnus .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No query can be constructed due to lack of details.
```",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Bobby"" .
  ?person foaf:surname ""Shmurda"" .
  ?person dbo:nativePlace dbpedia:Florida .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalty WHERE {
  # Step 1: Identify Charles II of Naples' spouse
  ?charlesII a dbr:Charles_II_of_Naples ;
             dbo:spouse ?spouseOfCharlesII .

  # Step 2: Find the parent of the father of that spouse
  ?fatherOfSpouse dbo:child ?spouseOfCharlesII .
  ?grandparentOfSpouse dbo:child ?fatherOfSpouse .

  # Step 3: Identify Maria of Bytom's spouse
  ?mariaOfBytom a dbr:Maria_of_Bytom ;
                dbo:spouse ?spouseOfMariaOfBytom .

  # Step 4: Find the royalty among the parents of that spouse
  ?parentOfSpouseOfMariaOfBytom dbo:child ?spouseOfMariaOfBytom .
  FILTER EXISTS { ?parentOfSpouseOfMariaOfBytom a dbo:Monarch } 

  # Step 5: Ensure the parent is also a child of Stephen V of Hungary
  ?stephenV dbr:Stephen_V_of_Hungary ;
            dbo:child ?royalty .

  # Combine conditions to find the common royalty
  FILTER (?grandparentOfSpouse = ?parentOfSpouseOfMariaOfBytom && ?parentOfSpouseOfMariaOfBytom = ?royalty)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild ?commanderRole ?event ?tvShow
WHERE {
  # Step 1: Identify Maria Anna of Bavaria's child
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbo:spouse ?husband .

  ?child dbo:parent ?mariaAnna ;
         dbo:parent ?husband .

  # Step 2: Determine the father (husband)
  ?husband a dbo:Person ;
           foaf:name ?husbandName .

  # Step 3: Find another child of this husband
  ?royalChild dbo:parent ?husband ;
              a dbo:Monarch ;
              dbo:role ?commanderRole .

  # Step 4: Check if the royal child was a commander in any war
  OPTIONAL { ?commanderRole dbo:war ?war . }

  # Step 5: Link to societal event, event, and television show
  ?event dbo:relatedWork ?tvShow ;
         dbo:subject dbr:2nd_Dragoon_Regiment_(France) .

  FILTER EXISTS {
    ?event a dbo:SocietalEvent .
    ?event a dbo:Event .
    ?tvShow a dbo:TelevisionShow .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Singer""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  FILTER EXISTS { 
    ?occupation rdfs:subClassOf* dbo:Singer .
  }
}
```",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find awards received by Janusz Kamiński
  ?award dbo:recipient dbr:Janusz_Kamiński .
  
  # Step 2: Identify his spouse from the context of these awards
  OPTIONAL { 
    ?award dbo:awardee dbr:Spouse_of_Janusz_Kamiński .
    ?spouse dbo:spouse dbr:Janusz_Kamiński .
  }
  
  # Step 3: Find movies featuring Audrey Hepburn
  ?movie dbo:starring dbr:Audrey_Hepburn ;
         a dbo:Film .

  # Step 4: Identify the movie that includes both Audrey Hepburn and Janusz Kamiński's spouse
  ?movie dbo:starring ?spouse .
  
  # Step 5: Retrieve other actors in this movie
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Audrey_Hepburn && ?actor != ?spouse)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?title WHERE {
  ?work dbo:author dbr:Bill_Clinton .
  ?work rdf:type dbo:Book .
  OPTIONAL { ?work rdfs:label ?title . FILTER (lang(?title) = 'en') }
}
```",2,5,3,2,1,3,3,71,0,14,2,0.0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?child dbo:parent dbpedia:Albrecht_Duke_of_W%C3%BCrttemberg .
  ?child dbo:parent dbpedia:Margarete_Sophie_Archduchess_of_Austria .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthplaceLabel WHERE {
  ?person a dbo:Person ;
          dbo:deathDate ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05T00:00:00Z""^^xsd:dateTime)
  
  ?person dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residence WHERE {
  ?person rdfs:label ""Álvaro Quirós""@en .
  ?person dbo:birthPlace ?birthPlace .
  
  # Find the office held during the 2009 Galician regional election
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
    ?office dbp:electionDate ?electionDate .
    FILTER (CONTAINS(LCASE(STR(?electionDate)), ""2009"") && CONTAINS(LCASE(STR(?office)), ""galicia""))
  }
  
  # Find the residence and ensure it is a country
  OPTIONAL {
    ?person dbo:residence ?residence .
    ?residence rdf:type dbr:Country .
  }

  FILTER (LANG(?person) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find albums by T.I.
  ?album dbo:artist dbr:T.I. ;
         a dbo:Album .

  # Find actors associated with the album
  ?album dbo:performer ?actor .
  
  # Find cast of Shelby Oaks
  ?shelbyOaksCast dbo:castMember ?actor ;
                  rdfs:label ""Shelby Oaks""@en .

  FILTER (lang(?shelbyOaksCast) = 'en')
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the birth name of Joey B
  ?joeyB dbo:birthName ?birthName .
  FILTER (str(?birthName) = ""Joey Badass""^^xsd:string)

  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?profession .

  # Find $pacely's associated musical artist, which is Post Malone
  dbr:Post_Malone dbo:associatedBandMember ?band .
  
  # Match the person with all conditions
  ?person dbo:birthName ?birthName ;
          dbo:profession ?profession ;
          dbo:associatedBandMember ?band .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         rdfs:label ""Sappy""@en .
  ?album dbo:composer ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Rodney Lees' award and its awardee
SELECT ?award ?awardee WHERE {
  dbr:Rodney_Lees dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
}

# Step 2: Find the parent of the awardee
SELECT ?parent WHERE {
  ?person dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:child ?person .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}

# Step 3: Identify Frederick Stanley's child who is a politician
SELECT ?politician WHERE {
  dbr:Fredrick_Stanley_16th_Earl_of_Derby dbo:child ?politician .
  ?politician rdf:type dbo:Politician .
}

# Step 4: Find the father of this politician
SELECT ?father WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:child ?politician .
  FILTER(?politician IN (SELECT ?politician WHERE {
    dbr:Fredrick_Stanley_16th_Earl_of_Derby dbo:child ?politician .
    ?politician rdf:type dbo:Politician .
  }))
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Vera_Lynn ;
         dbo:creator ?author .
  
  ?movie dbo:genre dbr:Television_show ;
         dbo:work ?work .

  ?person dbp:parent dbr:Richard_Dimbleby ;
          dbp:child dbr:Kate_Dimbleby .

  FILTER EXISTS { ?movie dbo:starring ?person }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession 
WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Linda Sue Cobb""@en .
  ?person dbo:birthName ""Linda Sue Cobb"" .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Guillaume_Peltier dbo:party ?party .
}
```",1,1,2,1,1,2,2,9,6,0,0,1.0,1.0,1.0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthPlace WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?person dbo:nationality dbr:China ; # Assuming nationality is linked to China due to ""Cat Country""
         dbo:child ?child .
  ?child dbo:occupation dbr:Politician . # Checking if the child is a politician
  ?child dbo:birthPlace ?childBirthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?associatedArtistLabel
WHERE {
  VALUES ?stuartTosh { dbr:Stuart_Mcbeath_Tosh }
  
  ?stuartTosh a dbo:MusicalArtist .
  
  # Check for band membership or collaboration
  OPTIONAL { 
    ?stuartTosh dbo:bandMember ?associatedBand .
    ?associatedBand dbo:member ?associatedArtist .
  }
  
  OPTIONAL {
    ?collaboration dbo:artist ?stuartTosh ;
                  dbo:artist ?associatedArtist .
  }

  # Ensure the associated entity is a musical artist
  ?associatedArtist a dbo:MusicalArtist .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerName WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  ?producer foaf:name ?producerName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team (SAMPLE(?letschManager) AS ?letschTeam) 
       (SAMPLE(?bochumManager) AS ?bochumManager)
WHERE {
  # Find the team managed by Thomas Letsch
  ?letschManager dbo:managerOf ?team .
  ?letsch dbr:Thomas_Letsch .
  ?letsch foaf:name ""Thomas Letsch"" .
  ?letsch dbo:managerOf ?team .

  # Find the manager of VfL Bochum
  ?bochumManager dbo:managerOf dbr:VfL_Bochum .
  
  # Determine that West Germany is now known as Germany
  OPTIONAL { 
    ?germany dbo:formerName ""West Germany"" .
    FILTER EXISTS { ?germany rdfs:label ""Germany""@en }
  }
}
GROUP BY ?team
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Identify Archduchess Helena of Austria
  ?helena a dbo:Archduchess ;
          foaf:name ""Helena, Duchess of Aosta""@en .
  
  # Find her spouse(s)
  ?helena dbo:spouse ?spouse .

  # Find the children of these spouses
  ?spouse dbo:child ?child .

  # Filter for royalty among these children
  ?child a ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:RoyalPerson, dbo:Monarch) ||
    EXISTS { ?child dbp:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  )
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Query to get the birth place of the Governor of Virginia
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorName ?birthPlaceGovernor WHERE {
  ?governor a dbo:Politician ;
           dbo:stateOrProvince dbr:Virginia ;
           dbo:officeHolderOf dbr:Office_of_the_Governor_of_Virginia ;
           dbp:name ?governorName .
  OPTIONAL { ?governor dbp:birthPlace ?birthPlaceGovernor }
}

# Query to get the birth place of Cece Bell, author of ""El Deafo""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?authorName ?birthPlaceAuthor WHERE {
  ?author a dbo:Writer ;
          dbp:name ""Cece Bell""@en ;
          dbo:nationality dbr:United_States .
  OPTIONAL { ?author dbp:birthPlace ?birthPlaceAuthor }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and his child
  ?baeda_maryam1 a dbo:Monarch ;
                 dbo:child ?common_child .

  # Dawit I and his child
  ?dawit1 a dbo:Monarch ;
          dbo:child ?common_child .

  # The common child's father (Baeda Maryam II)
  ?common_child dbo:father ?baeda_maryam2 .

  # Baeda Maryam II's father (the grandfather we are looking for)
  ?baeda_maryam2 dbo:father ?grandfather .

  # Ensure the grandfather was royalty or an office holder
  ?grandfather a dbo:Monarch ;
              (dbo:officeHolder|dbo:royalty) ?position .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession (SAMPLE(?otherProfessional) AS ?anotherProfessional)
WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?profession .

  # Find another professional in the same field
  ?otherProfessional a dbo:Person ;
                    dbo:occupation ?profession .
  
  FILTER(?otherProfessional != dbr:Shatrughan_Sinha)
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchildName WHERE {
  # Step 1: Identify Constance of Burgundy
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .

  # Step 2: Find her spouse(s)
  ?constance dbo:spouse ?spouse .

  # Step 3: Find children of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Find grandchildren (children of the child)
  ?child dbo:child ?grandchild .

  # Step 5: Filter for royalty among these grandchildren
  ?grandchild a dbo:Monarch ;
              foaf:name ?grandchildName .
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?name WHERE {
  ?state dcterms:isPartOf dbr:United_States .
  FILTER (str(?state) = str(dbr:Virginia)) .
  
  ?governor dbo:stateGovernor ?state ;
           rdf:type dbo:Politician ;
           foaf:name ?name .

  OPTIONAL { 
    ?term dbo:startDate ?startYear .
    FILTER (?startYear >= ""2023-01-01""^^xsd:date) .
  }
}
ORDER BY DESC(?startYear)
LIMIT 1
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?person ?partyMember
WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.116800000000001347""^^xsd:float .

  # Find the person born as Harriette Arlene Lake
  ?person dbo:birthName ""Harriette Arlene Lake""@en .

  # Check if there is any ruling party member connected to both
  OPTIONAL {
    ?partyMember dbo:memberOf ?rulingParty .
    ?rulingParty dbo:headquarter ?landmark .
    ?partyMember dbo:wikiPageDisambiguates ?person .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  ?stonebwoy dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?shattawale dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .

  OPTIONAL { ?stonebwoy dbp:musicalArtist ?artist1 . }
  OPTIONAL { ?shattawale dbp:musicalArtist ?artist2 . }

  FILTER(?artist1 != UNDEF)
  FILTER(?artist2 != UNDEF)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Find children of Stephen V of Hungary
  ?stephenV dbo:spouse ?spouse .
  FILTER (str(?stephenV) = ""Stephen_V_of_Hungary"") .

  ?stephenV dbo:child ?child .
  
  # Find spouse of Maria of Bytom
  ?maria dbp:spouse ?spouseOfMaria .
  FILTER (str(?maria) = ""Maria_of_Bytom"") .

  # Identify father of the spouse of Maria of Bytom
  ?spouseOfMaria dbo:father ?fatherOfSpouse .

  # Find parent of this father who is also a child of Stephen V
  ?child dbo:parent ?fatherOfSpouse .
  
  # Ensure the person is royalty
  ?child rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildFather WHERE {
  # Step 1: Find Alfonso VI's child
  ?alfonsoVIChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  
  # Step 2: Find the grandchild of Alfonso VI
  ?alfonsoVII dbo:parent ?alfonsoVIChild .

  # Step 3: Identify the father who is royalty and an office holder
  ?grandchildFather dbo:parent ?alfonsoVII ;
                   a dbo:Monarch ;
                   dbo:officeHolder ?office .
  
  # Step 4: Ensure this person is related to William I
  ?williamI dbo:relatedTo ?grandchildFather ;
           a dbo:Monarch ;
           dbo:officeHolder ?office2 .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentPhotographer ?parentDoonArbus ?actor ?movie WHERE {
  # Parent of a Photographer
  {
    SELECT ?photographer ?parentPhotographer WHERE {
      ?photographer dbo:profession dbr:Photography.
      ?photographer dbo:parent ?parentPhotographer.
    }
  }

  # Parent of Doon Arbus
  {
    SELECT ?parentDoonArbus WHERE {
      dbr:Doon_Arbus dbo:parent ?parentDoonArbus.
    }
  }

  # Actor of a Movie that is a Work
  {
    SELECT ?actor ?movie WHERE {
      ?actor dbo:profession dbr:Actor.
      ?actor dbo:film ?movie.
    }
  }

  # Person Decedent at Los Angeles
  OPTIONAL {
    ?person dbo:deathPlace dbr:Los_Angeles.
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # T.I.'s album and song
  dbr:Paper_Trail_(T.I._album) dbo:track dbr:Paper_Trail_(song) .
  
  # Actor associated with the song or album
  ?actor dbo:actedIn dbr:Paper_Trail_(song) .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Burhan Belge""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
  FILTER (lang(?movie) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?territory dbo:administrativeCapital dbr:Copenhagen .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader ?monarch
WHERE {
    # Find the President of the Xunta de Galicia in 2009
    ?president a dbo:Office ;
               dbo:incumbent ?leader ;
               rdfs:label ""President of the Xunta de Galicia""@en .
    FILTER(YEAR(?startDate) <= 2009 && (YEAR(?endDate) >= 2009 || !bound(?endDate)))
    
    # Find the King of Spain in 2009
    ?monarch a dbo:Monarchy ;
             dbo:monarch ?king ;
             rdfs:label ""King of Spain""@en .
    FILTER(YEAR(?startDate) <= 2009 && (YEAR(?endDate) >= 2009 || !bound(?endDate)))
    
    BIND(""President of the Xunta de Galicia"" AS ?office)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Mark Eitzel's band
  dbr:Mark_Eitzel dbo:memberOf dbr:American_Music_Club .

  # Musicians associated with American Music Club
  ?americanMusicClubArtist dbo:associatedBandMember dbr:American_Music_Club .
  
  # Musicians associated with R.E.M.
  ?remAssociatedArtist dbo:associatedBandMember dbr:R.E.M. .

  # Find overlap between the two sets of associated artists
  FILTER (?americanMusicClubArtist = ?remAssociatedArtist) .

  # Ensure the artist is recognized as an individual artist
  ?artist dbo:associatedBandMember ?remAssociatedArtist .
  ?artist a dbo:MusicalArtist .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Scott_LaFaro dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?film a dbo:Film ;
        dbo:title ""Burnt by the Sun""@en .
  
  ?soundtrack dbo:performer ?band ;
              dbo:workPerformedIn ?film .

  ?band a dbo:Band ;
        dbo:genre dbr:Rock_music ;
        dbo:country dbr:Russia .
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Ferdinand III and his child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child dbr:?Child .
  
  # Cecilia Renata of Austria and her father
  dbr:Cecilia_Renata_of_Austria dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # Ferdinand III is the child of Ferdinand II, making him a child of Cecilia Renata's father
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  # The father of Ferdinand III's child is Ferdinand III himself
  ?father = dbr:Ferdinand_III,_Holy_Roman_Emperor .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?territory
WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  ?hansen dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type ?settlementType .
  FILTER (?settlementType = dbo:Settlement)

  # Find territories administered by Olaf I of Denmark
  ?olaf dbo:administeredTerritory ?territory .

  # Link the death place to the territory (assuming some logical connection or direct link)
  ?deathPlace dbo:locatedIn ?territory .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  OPTIONAL { ?team foaf:nick ?nickname . }
  FILTER (lang(?nickname) = 'en')
}
```",2,2,3,2,1,3,2,20,0,2,1,0.0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
# Query to find a notable member of the Republican Party (United States)
SELECT ?person WHERE {
  ?party dcterms:isPartOf dbc:Republican_Party_(United_States) .
  ?party dbo:member ?person .
  FILTER EXISTS { ?person dbo:occupation dbp:Politician . }
}
LIMIT 1

# Query to find the spouse of Roger Pryor (actor)
SELECT ?spouse WHERE {
  ?roger foaf:name ""Roger Pryor""@en ;
         dbo:spouse ?spouse .
  FILTER EXISTS { ?roger dbo:profession dbp:Actor . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workLabel ?countryLabel
WHERE {
  ?work dbo:author dbr:Lao_She .
  ?work rdfs:label ?workLabel .
  OPTIONAL { ?work dbo:country ?country . }
  OPTIONAL { ?country rdfs:label ?countryLabel . FILTER (lang(?countryLabel) = 'en') }
}
LIMIT 1
```",2,2,3,2,1,3,2,20,0,2,2,0.0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeName ?event
WHERE {
  # Anxo Quintana's resource
  VALUES ?quintana { dbr:Anxo_Quintana }

  # Offices held by Anxo Quintana
  ?quintana dbo:positionHeld ?position .
  
  # Filter for specific offices
  FILTER (
    ?position rdfs:label IN (""President of the Xunta de Galicia"", ""Minister of Economy and Employment (Spain)"") ||
    ?position rdfs:comment ENDSWITH ""tenant of Spain"" ||
    ?position rdfs:comment ENDSWITH ""tenant of Santiago de Compostela""
  )

  # Get office names
  ?position rdfs:label ?officeName .

  OPTIONAL {
    # Find events related to the leader of the administration role
    ?position dbo:officeHolder ?event .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residence WHERE {
    # Find Miguel Maura's office in 2003
    ?miguelMaura a dbo:Politician ;
                 foaf:name ""Miguel Maura"" ;
                 dbo:office ?office .
    
    FILTER(YEAR(?officeStartDate) <= 2003 && (YEAR(?officeEndDate) >= 2003 || !bound(?officeEndDate)))

    # Find the mayor of Madrid in 2003
    ?mayor a dbo:Mayor ;
           dbo:city dbr:Madrid ;
           dbo:termStart ?termStart .
    
    FILTER(YEAR(?termStart) <= 2003 && (YEAR(?termEnd) >= 2003 || !bound(?termEnd)))

    # Find the residence of the mayor
    ?mayor dbo:residence ?residence .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find Shatta Wale by birth name
  ?person1 dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?person1 dbo:alias dbr:Shatta_Wale .
  ?person1 dbo:musicArtist ?artist1 .

  # Find a musician from the Central Region of Ghana
  ?person2 dbo:nationality dbr:Ghana .
  ?person2 dbo:birthPlace ?place .
  ?place dbo:wikiPageRedirects ?centralRegion .
  ?centralRegion rdfs:label ""Central Region, Ghana""@en .
  ?person2 dbo:musicArtist ?artist2 .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?person rdfs:label ""Allan Arbus""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Ulster Unionist Party""@en .
  OPTIONAL { 
    ?party dbp:leader ?leader .
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandFather WHERE {
  # Identify William I of Sicily
  ?williamI a dbo:Person ;
            dbo:father dbr:Roger_II_of_Sicily ;
            dbo:mother dbr:Elvira_of_Castile .

  # Identify Roger II as the father and office holder (King)
  ?rogerII a dbo:Person ;
           rdfs:label ""Roger II of Sicily""@en ;
           dbo:father ?grandFather ;
           dbo:officeHolder ?office .
  
  FILTER EXISTS { ?office rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""king"")) }

  # Ensure the reference is Roger II
  FILTER (?rogerII = dbr:Roger_II_of_Sicily)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find producers of ""Nothing to Gein""
  ?album dbo:title ""Nothing to Gein"" ;
         dbo:producer ?producer .
  
  # Ensure the producer is an organization or group
  ?producer a dbo:Band .

  # Find band members of Stone Sour
  ?bandMember dbo:memberOf dbr:Stone_Sour ;
              foaf:name ?personName .

  # Match the person with the producer's member
  ?producer dbo:member ?producerMember .
  
  FILTER (?producerMember = ?bandMember)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?claimToFameWork ?producer WHERE {
  # Find the alter ego of Kent Allard
  VALUES (?fictionalCharacter) { dbr:Kent_Allard_(character) }
  ?fictionalCharacter dbo:alterEgo ?alterEgo .

  # Identify Johnny Doughboy and his claim to fame
  VALUES (?actor) { dbr:Johnny_Doughboy }
  ?actor dbo:actorIn ?claimToFameWork .

  # Find the producer of the work
  ?claimToFameWork dbo:producer ?producer .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorName WHERE {
  # Step 1 & 2: Find T.I.'s song and its album
  ?song dbo:artist dbr:T.I. ;
        a dbo:Songs .
  
  ?album dbo:song ?song ;
         dbo:performer ?albumArtist .

  # Step 3: Identify any actor associated with the album
  OPTIONAL { 
    ?actor foaf:name ?actorName ;
           dbo:associatedBandOrMusicalGroup ?albumArtist .
  }

  # Step 4: Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Step 5: Check for a movie featuring both the actor and the author
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .

}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor (SAMPLE(?name) AS ?name)
WHERE {
  # Identify Patrice Martin-Lalande
  dbr:Patrice_Martin-Lalande dbo:office ?office .
  
  # Find his successor
  ?office dbo:successor ?successor .

  # Ensure the successor is a politician and French
  ?successor rdf:type dbo:Politician ;
             dbo:nationality dbr:France .
  
  # Get the name of the successor
  ?successor rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?startYear ?endYear ?mayor ?territory 
WHERE {
  # Christian IX's reign as King of Denmark
  VALUES (?king) { dbr:Christian_IX_of_Denmark }
  ?king dbo:reign ?administration .
  ?administration dbo:begin ?startYear ;
                  dbo:end ?endYear .

  OPTIONAL {
    # Mayor or administration of the Duchy of Schleswig during Christian IX's reign
    ?schleswig dbr:Duchy_of_Schleswig .
    ?schleswig dbo:mayor ?mayor .
    FILTER (?startYear <= ?mayorStartYear && ?endYear >= ?mayorEndYear)
  }

  OPTIONAL {
    # Territories administered from Copenhagen during Christian IX's reign
    ?territory dbo:administrativeCenter dbr:Copenhagen ;
              dbo:begin ?adminStartYear ;
              dbo:end ?adminEndYear .
    FILTER (?startYear <= ?adminStartYear && ?endYear >= ?adminEndYear)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?birthName
WHERE {
  # Find a party member of the Republican Party (United States)
  ?partyMember dbo:memberOf dbr:Republican_Party_(United_States) .
  
  # Find Tisha Sterling's parents
  ?tishaSterling dbp:parent ?parent .

  # Get the birth name of the parent
  ?parent dbo:birthName ?birthName .

  # Ensure the party member is the same person as the one with the birth name
  FILTER (?partyMember = ?parent)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?bookTitle WHERE {
  # Find the commander involved in the Third Taiwan Strait Crisis
  ?event dbo:wikiPageRedirects dbr:Third_Taiwan_Strait_Crisis .
  ?event dbo:agent ?person .
  ?person dbo:occupation dbr:Military_person .

  OPTIONAL { 
    ?person rdfs:label ?commanderLabel FILTER (lang(?commanderLabel) = ""en"") .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?commanderLabel), "" "", ""_""))) AS ?commander)
  }

  # Find a book authored by Bill Clinton
  ?book dbo:author dbr:Bill_Clinton ;
        rdf:type dbo:Book .

  OPTIONAL { 
    ?book rdfs:label ?bookTitle FILTER (lang(?bookTitle) = ""en"") .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?maximilian1 dbo:child ?child .
  FILTER (str(?maximilian1) = ""Maximilian I, Holy Roman Emperor"") .

  ?catherine dbo:parent ?child .
  FILTER (str(?catherine) = ""Catherine of Austria, Queen of Portugal"") .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?producerProfession ?otherProfessional WHERE {
  # Step 1: Identify the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Step 2: Get the profession of this producer
  ?producer dbo:occupation ?producerProfession .

  # Step 3: Find another professional with the same occupation
  ?otherProfessional a dbo:Person ;
                   dbo:occupation ?producerProfession .
  
  FILTER(?producer != ?otherProfessional) # Ensure it's not the same person
}
```",4,4,5,3,2,3,3,71,32,59,39608,0.3516483516483517,0.0008072653884964682,0.0016108328509224536
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName ?foundingDate WHERE {
  # Find Luiza Erundina's alma mater
  dbr:Luiza_Erundina dbo:almaMater ?university .
  
  # Get the name of the university
  ?university rdfs:label ?universityName ;
             a dbo:EducationalOrganization .

  # Get the founding date of the university
  OPTIONAL { ?university dbo:foundingDate ?foundingDate . }

  FILTER (lang(?universityName) = 'en')
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?parentProfession WHERE {
  # Step 1: Identify Eugène Cattin's profession and movies
  dbr:Eugène_Cattin dbo:profession ?cattinProfession .
  
  # Find movies he acted in
  ?movie dbo:starring dbr:Eugène_Cattin .

  # Step 2: Find other actors in those movies
  ?movie dbo:starring ?actor .

  # Step 3: Identify a person who died in Los Angeles
  ?decedent dbp:deathPlace dbr:Los_Angeles .
  
  # Check if any actor is linked to the decedent
  ?actor dbo:spouse ?decedent .

  # Step 4: Determine the parent profession of these actors
  ?actor dbo:profession ?actorProfession .
  ?actorProfession dbo:parentClassOf ?parentProfession .
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Frederick Stanley, 16th Earl of Derby's child
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  
  # Parent of the awardee of Rodney Lees' award
  ?awardee dbo:awardReceived dbr:Award_by_Rodney_Lees ;
          dbo:parent ?parent .

  # Father of Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?parent .
  
  # Ensure the parent is Frederick Stanley
  FILTER(?parent = dbr:Frederick_Stanley,_16th_Earl_of_Derby)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName ?foundingDate WHERE {
  # Find Luiza Erundina's alma mater
  dbr:Luiza_Erundina dbo:almaMater ?university .
  
  # Ensure the entity is a university, organization, and educational institution
  ?university rdf:type dbo:University ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:EducationalInstitution .

  # Get the name of the university
  ?university rdfs:label ?universityName .
  
  # Get the founding date of the university
  OPTIONAL { ?university dbo:foundingDate ?foundingDate . }
  
  FILTER (lang(?universityName) = 'en')
}
```",2,5,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the actor of The Sky Ranger (1928 film)
SELECT ?actorName ?deathPlace WHERE {
  VALUES ?film { dbr:The_Sky_Ranger_(1928_film) }
  ?film dbo:starring ?actor .
  ?actor a dbo:Actor ;
         rdfs:label ?actorName ;
         dbo:deathPlace ?deathPlace .
  FILTER(LANG(?actorName) = 'en')
}

UNION

# Query for Sal Mineo
SELECT ?actorName ?deathPlace WHERE {
  ?salMineo a dbo:Actor ;
            rdfs:label ""Sal Mineo""@en ;
            dbo:deathPlace ?deathPlace .
  BIND(""Sal Mineo"" AS ?actorName)
}

UNION

# Query for Carolyn Jones
SELECT ?actorName ?deathPlace WHERE {
  ?carolynJones a dbo:Actor ;
                rdfs:label ""Carolyn Jones""@en ;
                dbo:deathPlace ?deathPlace .
  BIND(""Carolyn Jones"" AS ?actorName)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT ?grandchild ?predecessor WHERE {
  # Duke Philipp of Württemberg's child
  ?dukeChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg ;
             dbo:child ?dukeGrandchild .
  
  # Archduchess Helena of Austria's spouse and their child
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria ;
          dbo:child ?spouseChild .

  # Predecessor of the spouse's child
  ?predecessor dbo:successor ?spouseChild .
  
  # Ensure the predecessor is royalty
  ?predecessor rdf:type schema:Person ;
               dbo:royalty ""true""^^xsd:boolean .

  # Match the grandchild with the predecessor
  FILTER (?dukeGrandchild = ?predecessor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?child dbo:childOf ?parent .
  ?parent rdfs:label ""Roger II of Sicily""@en .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Charles Martel of Anjou's parent
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .
  
  # Charles II of Naples' spouse
  ?spouse dbo:spouse dbr:Charles_II_of_Naples .
  
  # Stephen V of Hungary's child
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # The person who satisfies all three conditions
  FILTER (?parent = ?spouse && ?spouse = ?child)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find decedents who died in that country
  ?decedent dbo:deathPlace ?birthPlace .

  # Ensure the decedent was native to the Grand Duchy of Finland
  ?decedent dbo:nationality dbr:Grand_Duchy_of_Finland .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institutionName WHERE {
  ?institution a dbo:University .
  ?institution dbp:name ?institutionName .
  ?institution dbp:location ""Georgia (U.S. state)""@en .
}
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Find the ruling party in Central, Louisiana
SELECT ?party WHERE {
    ?location a dbo:PopulatedPlace ;
              dbo:country dbr:United_States ;
              rdfs:label ""Central, Louisiana""@en .
    OPTIONAL { ?location dbo:government ?government . }
    OPTIONAL { ?government dbo:member ?partyMember . }
    OPTIONAL { ?partyMember dbo:affiliation ?party . }
    FILTER (CONTAINS(LCASE(?party), ""democratic"") || CONTAINS(LCASE(?party), ""republican""))
}

# Part 2: Find Tisha Sterling's parent and their birth name
SELECT DISTINCT ?parent ?birthName WHERE {
    dbr:Tisha_Sterling dbo:parent ?parent .
    ?parent dbp:birthday ?birthday ;
            rdfs:label ?name .
    OPTIONAL { ?parent foaf:name ?birthName . }
}

# Part 3: Find a person with the same birth name as Tisha Sterling's parent
SELECT DISTINCT ?person WHERE {
    ?person foaf:name ?birthName .
    FILTER EXISTS {
        dbr:Tisha_Sterling dbo:parent ?parent .
        ?parent foaf:name ?birthName .
    }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?miguelMaura rdf:type dbo:Politician ;
               rdfs:label ""Miguel Maura""@en .
  
  ?miguelMaura dbp:party ?politicalParty .

  ?politicalParty dbo:leader ?leader .

  ?leader dbo:office ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  # Find native place of New York (state)
  ?newYorkState dbo:nativePlace ?nativePlace .
  
  FILTER(?nativePlace = dbpedia:New_York_City) # Assuming the native place is New York City

  # Find Linda Miller and her children
  ?lindaMiller a dbo:Person ;
              foaf:name ""Linda Miller""@en ;
              dbo:child ?child .

  # Ensure the child is also a native of New York (state)
  ?child dbo:nativePlace ?nativePlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?roger2 dbo:child ?child .
  FILTER(STRSTARTS(STR(?roger2), ""http://dbpedia.org/resource/Roger_II_of_Sicily""))
  
  OPTIONAL { ?child dbo:royalTitle ?title . }
  FILTER EXISTS { ?child dbo:royalTitle ?title . }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?author ?parent WHERE {
  # Find the author of ""A Picture of Britain""
  ?book dbo:title ""A Picture of Britain""@en .
  ?book dbo:author ?author .

  # Find people who are both artists and musical artists
  ?person dbo:occupation dbr:Artist ;
          dbo:occupation dbr:Musical_artist .

  # Filter those whose native places are English settlements
  ?person dbp:nativePlace ?location .
  ?location dbo:country dbr:England ;
            a dbo:Settlement .

  # Find the parent of these individuals
  ?person dbo:parent ?parent .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?profession ?band 
WHERE {
  # Find Robert Lamar Thompson as a musical artist
  ?robert a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson"" .

  # Identify the band associated with him at birth (if available)
  OPTIONAL { ?robert dbo:memberOf ?band . }

  # Find the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Get the profession of the producer
  ?producer a ?profession .

  # Find other professionals in the same field as the producer
  OPTIONAL { 
    ?otherProducer a ?profession ;
                   foaf:name ?name .
  }

  # Link to the band Robert Lamar Thompson was associated with (if available)
  OPTIONAL {
    ?otherProducer dbo:memberOf ?band .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?person dbo:child ?child .

  FILTER EXISTS { 
    ?child dbo:occupation dbp:Politician .
  }

  OPTIONAL { 
    ?child dbo:honorReceived <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  }
  
  OPTIONAL {
    ?child dbo:spouse|dbo:partner ?parentOfEdward ;
           dbo:child ?edward .
    FILTER (?edward = <http://dbpedia.org/resource/E._Stanley,_17th_Earl_of_Derby>)
  }

  BIND(?person AS ?father)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER(CONTAINS(LCASE(STR(?person)), ""prince faisal bin hussein"")) .
  
  OPTIONAL { ?child rdf:type dbo:RoyalFamilyMember . }
  FILTER EXISTS { ?child rdf:type dbo:RoyalFamilyMember . }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Step 2: Find children (siblings) of this parent
  ?sibling dbo:parent ?parent .
  
  # Step 3: Filter for royalty among these siblings
  ?sibling a dbo:Monarch .

  # Step 4: Identify predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:C._Duke_of_W%C3%BCrttemberg .
  
  # Ensure the sibling is also this predecessor
  FILTER (?sibling = ?predecessor)

  # Step 5: Find parent of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:parent ?philippParent .

  # Step 6: Find child (child) of this parent, i.e., grandchild of Duke Philipp
  ?grandchild dbo:parent ?philippParent .
  
  # Ensure the sibling is also this grandchild's ancestor
  FILTER (?sibling = ?grandchild)

  # Final result: The person who fits all criteria
  BIND(?sibling AS ?childOfChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?officeInMadrid ?militaryCommanderRole ?conflict ?partyLeaderRole
WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:officeTitle ?officeInMadrid ;
          dbo:militaryCommanderOf ?conflict .
  
  ?conflict dbo:participantManuelPintoDaCosta dbr:Manuel_Pinto_da_Costa .

  OPTIONAL { 
    ?person dbo:leaderOfPoliticalParty ?partyLeaderRole .
    ?partyLeaderRole dbo:name ""Conservative Republican Party (Spain)""@en .
  }

  FILTER EXISTS {
    ?officeInMadrid dbo:location dbr:Madrid
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?chancellor WHERE {
  ?country rdfs:label ""Federal Republic of Germany""@en.
  ?country dbo:headOfState ?chancellor.
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?eleonore a dbo:Person ;
            dbo:spouse ?queenOfPolandRole ;
            dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  ?queenOfPolandRole dbo:country dbr:Poland .

  ?eleonore dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?establishmentName ?almaMaterName
WHERE {
  # Find the establishment on December 2, 1955
  ?establishment a dbo:Organisation ;
                 dbo:foundingDate ""1955-12-02""^^xsd:date .
  ?establishment rdfs:label ?establishmentName .

  # Find Eleonora Menicucci's alma mater
  ?person foaf:name ""Eleonora Menicucci""@en ;
          foaf:almaMater ?university .
  ?university rdfs:label ?almaMaterName .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfCommander WHERE {
  ?siege dbo:eventType dbr:Siege_of_Mukha .
  ?siege dbo:commander ?commander .
  
  FILTER EXISTS { ?commander dbo:royalty true } .

  ?commander dbo:child ?childOfCommander .
  FILTER EXISTS { ?childOfCommander dbo:royalty true } .

  ?childOfCommander dbo:father ?grandFather .
  FILTER EXISTS { 
    ?grandFather dbo:royalty true ;
                 dbo:officeHolder ?office
  } .

  ?grandFather dbo:father ?greatGrandFather .
  
  ?na'od dbo:father ?grandFather .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeHolder WHERE {
  ?war rdfs:label ""Korean War""@en .
  ?war dbo:participatingMilitaryPersonal ?person .
  ?person dbo:occupation ?role .
  FILTER(CONTAINS(LCASE(?role), ""commander"") || CONTAINS(LCASE(?role), ""general""))
  
  OPTIONAL {
    ?person dbo:officeHolderOf ?office .
    BIND(""Yes"" AS ?officeHolder)
  }
  
  OPTIONAL {
    FILTER(!BOUND(?office))
    BIND(""No"" AS ?officeHolder)
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?war rdfs:label ""Korean War""@en .
  }
}
ORDER BY ?commander
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?castMember dbo:character dbr:Dispatches_from_Elsewhere .
  ?castMember dbo:actor ?actor .

  # Find the actor who played Lamont Cranston, The Shadow's alter ego
  OPTIONAL { 
    ?shadowCharacter dbo:alterEgo dbr:Lamont_Cranston .
    ?shadowCharacter dbo:portrayedBy ?actor .
  }

  FILTER EXISTS {
    ?shadowCharacter dbo:alterEgo dbr:Lamont_Cranston .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singer ?name WHERE {
  ?singer a dbo:Singer .
  ?singer foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?baggovutWar WHERE {
  # Find wars associated with awardees of the Golden Sword for Bravery in the Russian Empire
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  ?person dbo:nationality dbr:Russian_Empire .
  ?person dbo:militaryConflict ?warOfAwardee .

  # Find wars associated with Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:militaryConflict ?baggovutWar .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the cast of ""Rustlers' Rhapsody""
SELECT ?actor WHERE {
  ?movie dbo:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Query for the professional alter ego of ""The Shadow""
SELECT ?professional WHERE {
  dbr:The_Shadow dbo:profession ?professional .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  # Find the TV series ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  # Assuming we are interested in Jason Segel, find his profession
  FILTER(?actor = dbr:Jason_Segel)
  
  # Retrieve the actor's professional roles or occupations
  OPTIONAL { ?actor dbo:occupation ?profession }
}
```",2,2,3,1,2,3,3,71,1,1,1,0.5,0.5,0.5
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?victorBirthPlaceNative ?shaggyBirthPlaceNative
WHERE {
  # Victor Saville's birthplace and its native language/nationality
  dbr:Victor_Saville dbo:birthPlace ?victorBirthPlace .
  OPTIONAL { ?victorBirthPlace dbo:nativeName ?victorBirthPlaceNative . }
  
  # Shaggy's birthplace and its native language/nationality
  dbr:Shaggy (dbo:birthPlace|dbr:writer) ?shaggyBirthPlace .
  OPTIONAL { ?shaggyBirthPlace dbo:nativeName ?shaggyBirthPlaceNative . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  # William II of Sicily's father
  ?william2 dbo:father ?father .
  
  FILTER(STR(?william2) = ""William_II_of_Sicily"")

  # The father is also a child of Roger II of Sicily
  ?roger2 dbo:child ?father .

  FILTER(STR(?roger2) = ""Roger_II_of_Sicily"")
  
  # Check if the father or his descendants are related to Alfonso VI
  {
    ?alfonso6 dbo:parent ?father .
    FILTER(STR(?alfonso6) = ""Alfonso_VI_of_León_and_Castile"")
  } UNION {
    ?child dbo:parent ?father ;
           dbo:parent ?intermediate .
    ?intermediate dbo:parent ?alfonso6 .
    FILTER(STR(?alfonso6) = ""Alfonso_VI_of_León_and_Castile"")
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder query as the question lacks specificity.
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # The actual class or property would depend on the specific type of professional being queried for.
  # For example, if querying for doctors:
  # ?professional a dbo:Doctor .
  
  # Or if querying for individuals with a certain occupation:
  # ?professional dbp:occupation ?occupation .
  # FILTER(CONTAINS(LCASE(?occupation), ""doctor""))
}
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find members of GS9 who are both artists and musical artists.
  ?gs9Member dbo:member dbr:GS9 ;
             a dbo:MusicalArtist, dbo:Artist .

  # Step 2: Filter these members to find those native of Florida.
  ?gs9Member dbo:nativePlace dbr:Florida .

  # Step 3: Find the associated musical artist for this member.
  ?gs9Member dbo:associatedBandOrMusicalArtist ?associatedArtist .
  
  # Step 4: Identify a band member of this associated musical artist who is also a musical artist.
  ?bandMember dbo:member ?associatedArtist ;
              a dbo:MusicalArtist .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:participatingMilitaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  FILTER(?war = dbr:Algerian_War)

  ?commander dbo:occupation ?occupation .
  ?occupation rdfs:label ?labelOccupation .
  
  OPTIONAL {
    ?event dbo:relatedEvent ?societalEvent .
    ?societalEvent rdfs:label ?labelSocietalEvent .
    FILTER(CONTAINS(LCASE(?labelSocietalEvent), ""societal event""))
  }

  OPTIONAL {
    ?tvShow dbo:genre ?genre .
    ?genre rdfs:label ?labelGenre .
    FILTER(CONTAINS(LCASE(?labelGenre), ""television show""))
  }

  ?commander dbo:child ?eleonoreFather .
  ?eleonoreFather foaf:name ""Leopold V, Duke of Austria""@en .

  ?commander dbo:parent ?ceciliaRenataGrandfather .
  ?ceciliaRenataGrandfather foaf:name ""Ferdinand II, Holy Roman Emperor""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?movie WHERE {
  ?person foaf:name ?name .
  ?person dbo:birthName ""Richard Grant Esterhuysen"" .
  
  ?person dbo:profession dbr:Actor .

  ?film dbo:starring ?person ;
        a ?type .
        
  FILTER(?type IN (dbo:Film, dbo:TelevisionShow)) .

  OPTIONAL { 
    ?film dbo:basedOn ?tvSeries .
    FILTER(BOUND(?tvSeries))
  }
  
  BIND(?person AS ?actor)
  BIND(?film AS ?movie)
}
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native
WHERE {
  # Step 1: Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthPlace .

  # Extract region and country from the birthplace
  ?birthPlace dbo:country ?country .
  ?birthPlace dbo:region ?region .

  # Step 2: Find a child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .

  # Step 3: Identify someone native to the region and country of William Gayner's birthplace
  ?native dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?birthCountry .
  ?nativePlace dbo:region ?birthRegion .
  
  FILTER (?birthCountry = ?country && ?birthRegion = ?region)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?samProfession ?bobBand
WHERE {
  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?sam dbo:occupation ?samProfession . }

  # Find Bob Thompson's band
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson (musician)""@en .
  OPTIONAL { ?bob dbp:band ?bobBand . }
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?city a dbo:City ;
        rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""mitaka"") && CONTAINS(LCASE(STR(?city)), ""tokyo""))
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:Manager ;
          dbo:birthDate ?birthDate .
  
  FILTER (STR(?birthDate) = ""1979-11-03T00:00:00Z""^^xsd:dateTime)
  
  ?playerTeam dbo:member ?person .
  ?agüeroTeam dbo:member dbr:Sergio_Agüero .

  # Ensure the person and Agüero played for the same team
  FILTER (?playerTeam = ?agüeroTeam)

  # Return the team name
  ?team rdfs:label ?teamLabel .
  FILTER (lang(?teamLabel) = ""en"")
  
  BIND(?team AS ?team)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfSpouse ?royaltyChild
WHERE {
  # Step 1: Find Duchess Luise's spouse
  ?duchessLuise a dbo:Duchess ;
                foaf:name ""Luise of Brunswick-Wolfenbüttel"" ;
                dbo:spouse ?luisesSpouse .

  # Step 2: Find the spouse of Luise's spouse (which is Luise herself)
  ?luisesSpouse dbo:spouse ?spouseOfSpouse .
  
  FILTER(?spouseOfSpouse != ?duchessLuise) # Ensure it's not Luise

  # Step 3: Identify Duke Anthony Ulrich's parent
  ?dukeAnthonyUlrich a dbo:Duke ;
                     foaf:name ""Anthony Ulrich of Brunswick"" ;
                     dbo:parent ?parent .

  # Step 4: Find the child of that parent who is royalty
  ?parent dbo:child ?royaltyChild .
  
  FILTER(?royaltyChild != ?dukeAnthonyUlrich) # Ensure it's not Anthony Ulrich

  # Optional: Filter for royalty if needed (assuming a property or class indicates royalty)
  # This step assumes there's a way to filter for royalty, which might be implicit in the data model
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName ?recipientName WHERE {
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  
  ?award dbo:recipient ?vinceGilligan .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = 'en')
  
  OPTIONAL {
    ?award dbo:nominee ?recipient .
    ?recipient rdfs:label ?recipientName .
    FILTER (lang(?recipientName) = 'en')
  }
}
ORDER BY ?awardName
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?claimToFame ?producer WHERE {
  # Step 1: Find the actor associated with ""High Society Blues""
  ?movie dbo:title ""High Society Blues""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Determine the claim to fame of this actor
  ?actor dbo:mostFamousWork ?claimToFame .

  # Step 3: Find the producer of the claim to fame
  ?claimToFame dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?deathPlace WHERE {
  # Find the film ""The Sky Ranger"" from 1928
  ?film a dbo:Film ;
        rdfs:label ""The Sky Ranger""@en ;
        dbo:releaseDate ?date .
  
  FILTER(YEAR(?date) = 1928)

  # Get actors associated with this film
  ?film dbo:starring ?actor .

  # Retrieve actor's name and death place
  ?actor rdfs:label ?actorName ;
         dbp:deathPlace ?deathPlace .
  
  FILTER(LANG(?actorName) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?band ?commonProfessional
WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Find the band associated with Bob Thompson (musician)
  ?bobThompson dbr:Bob_Thompson_(musician) dbo:musicalBand ?band .

  # Check if there is a common professional link
  OPTIONAL {
    ?commonProfessional dbo:profession ?producer .
    ?commonProfessional dbo:memberOf ?band .
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipient ?war 
WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Golden Sword for Bravery""@en .
  
  ?award dbo:recipient ?recipient .

  OPTIONAL { 
    ?recipient dbo:participatedInWar ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Elorm Kabu Amenyah"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?russianEmpire { dbr:Russian_Empire }
  
  ?entity dbo:country ?russianEmpire .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }

  UNION

  ?relatedEntity dbo:partOf ?russianEmpire .
  OPTIONAL { ?relatedEntity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
```",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find Allan Arbus's children
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Find movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi ;
         dbo:film dbp:starring ?actor .

  # Check if the movie also features a child of Allan Arbus as an actor
  ?childMovie dbo:starring ?child .
  
  FILTER (?movie = ?childMovie)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Query for the actor of ""Always"" (1989 film)
  {
    dbr:Always_(film) dbo:starring ?actor .
    FILTER EXISTS { ?actor a dbo:Actor . }
  }

  UNION

  # Query for the spouse of Janusz Kamiński
  {
    dbr:Janusz_Kamiński dbo:spouse ?spouse .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  # Office related to Mariano Rajoy's leadership in the party
  ?office dbo:positionTitle ?title1 .
  ?office dbo:agent dbr:Mariano_Rajoy .
  
  OPTIONAL { 
    ?party dbo:leader dbr:Mariano_Rajoy .
    FILTER(CONTAINS(LCASE(?title1), ""leader"") || CONTAINS(LCASE(?title1), ""head""))
  }
  
  # Office related to Mariano Rajoy's role in Madrid
  ?office2 dbo:agent dbr:Mariano_Rajoy .
  ?office2 dbo:location dbr:Madrid .

  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor"") || CONTAINS(LCASE(STR(?office)), ""tenant""))
  
  # Ensure the same office is related to both conditions
  FILTER(?office = ?office2)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find T.I.'s albums
  ?album dbo:artist dbr:T.I. ;
         dbo:genre ?genre .
  
  # Find songs from the album that are musical works
  ?song dbo:album ?album ;
        a dbo:Songs .

  # Identify actors involved in the song (could be featured artists)
  ?song dbo:performer ?actor .

  # Find actor of Shelby Oaks
  ?shelbyOaks dbr:Shelby_Oaks ;
              dbo:starring ?shelbyActor .
  
  # Check if there's a common actor
  FILTER (?actor = ?shelbyActor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceGlennYoungkin ?birthPlaceAwardee ?birthPlaceCeceBell
WHERE {
  # Birth place of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?birthPlaceGlennYoungkin .

  # A specific award or nomination for Vince Gilligan and the awardee's birthplace
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlaceAwardee .
  }

  # Birth place of Cece Bell, author of ""El Deafo""
  FILTER (regex(str(?author), ""Cece Bell"", ""i""))
  ?author dbo:nationality dbr:United_States ;
          dbo:birthPlace ?birthPlaceCeceBell .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:United_States ;
         rdfs:label ?awardLabel .
  
  FILTER(CONTAINS(LCASE(?awardLabel), ""congressional gold medal""))
  
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace ?nationality WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality ?nat1 .
  ?nat1 rdfs:label ""Russian Empire""@en .
  
  OPTIONAL { 
    ?person dbo:nationality ?nat2 .
    ?nat2 rdfs:subClassOf* dbr:Alexander_II,_Grand_Duke_of_Finland .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?catherine ?father WHERE {
  ?catherine a dbo:Queen ;
             foaf:name ""Catherine of Austria"" ;
             dbo:spouse dbr:John_III_of_Portugal .
  
  ?isabella dbo:mother ?catherine ;
            foaf:name ""Isabella of Austria"" .

  ?catherine dbo:father ?father .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force WHERE {
  ?award dbo:awardedBy dbr:Quincy_Adam_Gillmore .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbp:militaryUnit ?force . }
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?successor WHERE {
  # Jodi Picoult as the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author ?writer .
  
  # John II Casimir Vasa as a successor in the Russo-Polish War
  dbr:John_II_Casimir_Vasa dbo:successorOf ?successor ;
                           dbo:officeHolder ?office .
  FILTER EXISTS { ?office dbo:relatedEvent dbr:Russo-Polish_War_(1654–1667) }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Chiang Hsiao-wen""@zh .
  ?person dbo:childOf dbr:Chiang_Ching-kuo .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent WHERE {
  # Arthur Stanley's father
  ?arthur a dbo:Person ;
          dbp:father ?commonParent .

  FILTER(STRSTARTS(STR(?arthur), ""Arthur_Stanley_(politician)""))

  # Victor Stanley's parent (either father or mother)
  ?victor a dbo:Person ;
          [dbo:parent|dbp:mother] ?commonParent .
  
  FILTER(STRSTARTS(STR(?victor), ""Victor_Stanley_(Royal_Navy_officer)""))

  # Child of Frederick Stanley, 16th Earl of Derby
  ?frederickChild a dbo:Person ;
                  dbp:parent ?commonParent .

  ?frederick a dbo:Person ;
             dbp:child ?frederickChild .
  
  FILTER(STRSTARTS(STR(?frederick), ""Frederick_Stanley,_16th_Earl_of_Derby""))

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryForce WHERE {
  ?bayne dbo:wikiPageRedirects dbr:William_Bayne .
  ?bayne dbo:associatedWith ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
  
  OPTIONAL { 
    ?event dbo:militaryForce ?militaryEntity .
    ?militaryEntity rdfs:label ?militaryForce .
  }
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse ?partyMember WHERE {
  # Films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Actors in those films
  ?film dbo:starring ?actor .

  # Ann Sothern's birth name
  ?person foaf:name ""Anne Sothern""@en ;
          dbo:birthName ?birthName .

  FILTER(?birthName = ""Anne Sothern"")

  # Find a person born with that name
  ?individual dbo:birthName ?birthName .
  
  # Check if the actor is married to someone who is a Republican Party member
  ?actor dbo:spouse ?spouse .
  ?spouse dbo:partyMember dbr:Republican_Party_(United_States) .

  # Return the actor, spouse, and party member
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nativePlace dbr:Finland .
  ?person dbo:administrator dbr:Aleksandr_II_of_Russia .
  ?person dbo:deathPlace dbr:Switzerland .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leader WHERE {
  ?politician a dbo:Politician ;
              foaf:name ""George Savage""@en .
  
  ?membership dbo:member ?politician ;
              dbo:organization ?party .
  
  OPTIONAL { 
    ?party dbp:leader ?leader .
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?givenName ?familyName WHERE {
  ?person a dbo:MusicalArtist ;
          rdfs:label ""Joey B""@en .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-geo: <http://dbpedia.org/property/geographicalLocation>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?birthName WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
  OPTIONAL { ?artist foaf:name ?fullName . }
  BIND(SUBSTR(?fullName, 0, STRSTARTS(STR(?fullName), "" "") - 1) AS ?birthName)
}
LIMIT 10
```",2,3,3,2,1,3,3,71,0,2,1,0.0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?yuriikhmelnytsky dbo:title ""Hetman of Ukraine""@en .
  ?yuriikhmelnytsky dbo:successor ?successor .
  FILTER (str(?yuriikhmelnytsky) = str(dbr:Yurii_Khmelnitsky))
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  # Identify Na'od's father (Susenyos I)
  VALUES (?naodFather) { dbr:Susenyos_I_of_Ethiopia }
  
  # Find Susenyos I's father (Dawit II)
  ?susenyos dbo:father ?dawitII .
  FILTER(?susenyos = ?naodFather)

  # Ensure Dawit II is a royalty and office holder
  ?dawitII a dbo:Monarch ;
           dbo:title ?title .

  # Check if Dawit II is the child of Dawit I
  ?dawitI dbo:child ?dawitII .
  FILTER(?dawitI = dbr:Dawit_I_of_Ethiopia)

  # Bind the person to return
  BIND(?dawitII AS ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank ?roleInEvent WHERE {
  # Find William Tennant's rank in the Royal Navy
  OPTIONAL { 
    dbr:William_Tennant_(Royal_Navy_officer) dbo:rank ?rank .
  }
  
  # Find his role or involvement in the sinking of HMS Prince of Wales and HMS Repulse
  OPTIONAL {
    ?event dbo:commanderOf dbr:HMS_Prince_of_Wales_(53)_and_HMS_Repulse_sinking .
    ?event dbo:participant dbr:William_Tennant_(Royal_Navy_officer) .
    ?event dbo:name ?roleInEvent .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?regimentCommander ?battleForce ?battleCommander WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot during a conflict
  OPTIONAL {
    ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
    ?regiment dbo:commander ?regimentCommander .
    ?conflict dbo:participatedIn ?regiment .
  }

  # Find the military force and commander involved in the Battle of Fort Royal
  OPTIONAL {
    ?battle dbr:Battle_of_Fort_Royal .
    ?force dbo:hasPart ?battle .
    ?force dbo:commander ?battleCommander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:memberOf dbr:GS9 .
  ?person dbo:artist true .
  ?person dbo:musicalArtist true .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  ?season dbo:sportTeamSeason dbr:VfL_Bochum.
  ?season dbo:startDate ?startYear .
  FILTER (YEAR(?startYear) = 2007 && MONTH(?startYear) >= 8)
  
  ?season dbo:endDate ?endYear .
  FILTER (YEAR(?endYear) = 2008 && MONTH(?endYear) < 8)

  ?season dbo:manager ?manager .

  ?manager foaf:nationality dbr:Germany .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  ?sam dbo:profession ?concepcionProfession .

  # Find Bob Thompson's band
  ?bob a dbo:Person ;
       foaf:name ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?thompsonBand .

  # Find other professionals with the same profession and in the same band
  ?professional a dbo:Person ;
                foaf:name ?name ;
                dbo:profession ?concepcionProfession ;
                dbo:band ?thompsonBand .
  
  FILTER(?professional != ?sam && ?professional != ?bob)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
    # Bobby Shmurda's associated band
    ?bobbyShmurda dbo:associatedBand ?gs9 .
    
    # GS9 entity
    ?gs9 a dbo:MusicalGroup ;
         foaf:name ""GS9""@en .

    # Band members of GS9 who are musical artists
    ?bandMember dbo:member ?gs9 ;
                a dbo:MusicalArtist .

    # Ackquille Jean Pollard (21 Savage)
    ?ackquilleJeanPollard foaf:name ""Ackquille Jean Pollard""^^xsd:string .
    
    # Connection between band member and 21 Savage
    OPTIONAL { 
        ?bandMember dbo:associatedBand ?commonBand ;
                    dbo:collaboratedWith ?ackquilleJeanPollard .
    }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war ?tvShow ?writer ?commanderRole
WHERE {
  # Find Jean Baptist, Comte d'Arco
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Identify wars he was involved in
  OPTIONAL { ?person dbo:participatedInWar ?war . }
  
  # Find television shows related to the war
  OPTIONAL {
    ?tvShow dbo:subject ?war ;
            rdfs:label ?showLabel .
  }
  
  # Identify societal event (assuming it's the same as the war)
  BIND(?war AS ?societalEvent)
  
  # Find writer of ""Always the Love Songs""
  ?writer rdfs:label ?writerLabel .
  FILTER(CONTAINS(LCASE(?writerLabel), ""always the love songs""))
  
  # Check if Jean Baptist, Comte d'Arco had a commander role
  OPTIONAL {
    ?person dbo:role ?commanderRole ;
            dbo:roleType dbr:Commander .
  }
}
```",4,6,5,2,2,3,3,71,0,2,1,0.0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherParty WHERE {
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  OPTIONAL { ?sofia foaf:parent ?father . }
  
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?spouse WHERE {
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbp:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent1 ?child ?parent2 WHERE {
  # Query for the parent of Mary Elphinstone, Lady Elphinstone
  { 
    ?person dbp:name ""Mary Elphinstone, Lady Elphinstone""@en .
    ?person dbo:parent ?parent1 .
  }
  
  UNION
  
  # Query for the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  { 
    ?person dbp:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
    ?person dbo:child ?child .
    ?child dbo:parent ?parent2 .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?sportsManager ?teamManaged
WHERE {
  # Find sports managers born on August 26, 1968, native to Germany
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:Germany ;
          rdf:type dbo:SportsManager .
  
  # Get the current manager of VfL Bochum
  OPTIONAL {
    ?bochumManager dbo:managerOf dbr:VfL_Bochum .
    FILTER(?sportsManager != ?bochumManager)
  }
  
  # Find which team the sports manager is managing in the current season
  ?person dbo:currentTeam ?teamManaged .

}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?successor dbo:successor dbr:Yurii_Khmelnytsky .
  ?work dbo:author ?writer .
  ?work dbo:subject dbr:George_Ducas .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName ?singerRole ?band 
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?person schema:birthName ?birthName . }
  OPTIONAL { ?person dbo:occupation ?singerRole .
             FILTER(CONTAINS(LCASE(STR(?singerRole)), ""singer"")) }
  OPTIONAL { ?person dbo:band ?band . }

}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?grandchild WHERE {
  # Find Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parent .

  # Find Béla IV of Hungary's child and then that child's child (grandchild)
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Find if the parent of Charles Martel of Anjou matches this grandchild
  FILTER (?parent = ?grandchild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person foaf:name ""Dawid Olejniczak""@en .
  ?person dbo:residence ?residence .
  FILTER EXISTS { ?residence rdf:type dbo:Country }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse ?politician WHERE {
  # World War II as a societal event and disease metaphorically
  VALUES (?war) { dbr:World_War_II }

  # Chester W. Nimitz as commander in the U.S. Navy during WWII
  ?commander dbo:nationality dbr:United_States ;
            dbo:occupation dbr:Navy_officer ;
            dbo:serviceInWar ?war .

  # Robert B. Reich, author of ""Back to Work""
  ?author foaf:name ""Robert B. Reich""@en ;
          dbo:work dbr:Back_to_Work_(book) .

  # Ana Marie Cox as spouse of Robert B. Reich
  ?spouse foaf:name ""Ana Marie Cox""@en ;
          dbo:spouse ?author .

  # Hillary Clinton as a politician and office holder related to the work of Robert B. Reich
  ?politician foaf:name ""Hillary Clinton""@en ;
              dbo:officeHolder dbr:United_States_Secretary_of_State ;
              dbo:spouse ?spouse .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?birthPlaceLabel WHERE {
  # Identify Hon. Mary Frances Bowes-Lyon
  ?mary a dbo:Person ;
        rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  
  # Identify Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  ?patrick a dbo:Person ;
           rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .

  # Find their common parent
  ?mary dbo:parent ?parent .
  ?patrick dbo:parent ?parent .

  # Ensure the parent is native to Middlesex
  ?parent dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Middlesex""@en .

  # Get labels for readability
  OPTIONAL { ?parent rdfs:label ?parentLabel . }
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . }

  FILTER(LANG(?parentLabel) = 'en')
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardNativePlace WHERE {
  ?band dbo:member dbr:Uncle_Murda ;
        dbo:birthPlace dbr:New_York_(state) .
  
  ?band dbo:award ?award .

  ?award dbo:nativePlace ?awardNativePlace .

  ?awardNativePlace a dbo:State ;
                   a dbo:Settlement .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?conflict WHERE {
  # Find Maria I of Portugal's commander
  ?maria dbo:spouse ?husband .
  ?husband dbo:monarchForCountry dbr:Kingdom_of_Portugal .
  ?husband dbo:hasTitle ""Prince Regent""@en .
  ?commander dbo:commandedBy ?husband .

  # Find a military conflict involving the commander
  ?conflict dbo:commander ?commander .

  # Find a television show with the same name as the commander or related to him
  OPTIONAL {
    ?tvShow dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), LCASE(str(?commander))))
  }

  # Filter for known connections (e.g., Duke of Wellington)
  FILTER(STRSTARTS(STR(?commander), ""Arthur Wellesley, 1st Duke of Wellington""))
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace and ensure it is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find individuals who died in the same country
  ?decedent dbo:deathPlace ?birthPlace .

  # Ensure the decedent was native of Russian Empire
  ?decedent dbo:nationality dbr:Russian_Empire .
}
```",3,4,4,2,2,2,3,28,0,1,36,0.0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?primeMinister WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:headOfGovernment ?primeMinister ;
                  dbo:politicalParty ?party .

  ?primeMinister dbo:nationality dbr:Spain .
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence WHERE {
  # Doug Beattie's residence
  OPTIONAL { 
    dbr:Doug_Beattie dbo:residence ?residence .
  }
  
  # George Hamilton Cameron's awards and related entities
  OPTIONAL {
    dbr:George_Hamilton_Cameron dbo:award ?award .
    ?award dbo:recipient ?entity .
  }
}
```",4,4,5,3,2,3,2,20,2,0,0,1.0,1.0,1.0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person foaf:name ""Bob Thompson""@en .
  ?person rdf:type dbo:Musician .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Salvatore_Philip_""Sal""_Mineo_Jr. 
    dbr:Robert_Wagner 
    dbr:Reed_Howes
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorPromiseMeDad ?authorPromisesToKeep
WHERE {
  VALUES ?bookTitle { ""Promise Me, Dad"" ""Promises to Keep (Biden book)"" }
  
  ?book dbo:title ?bookTitle .
  OPTIONAL { ?book dbo:author ?author . }

  FILTER(?bookTitle = ""Promise Me, Dad"")
  BIND(?author AS ?authorPromiseMeDad)

  FILTER(?bookTitle = ""Promises to Keep (Biden book)"")
  BIND(?author AS ?authorPromisesToKeep)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle WHERE {
  ?work dbo:author dbr:Joe_Biden .
  ?work a ?type .
  FILTER (
    ?type = dbo:Book ||
    ?type = dbo:WrittenWork
  ) .
  ?work rdfs:label ?workTitle .
  FILTER (lang(?workTitle) = 'en')
}
```",1,3,2,1,1,3,2,20,0,2,2,0.0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?person ?spouse WHERE {
  # Find the ruling party member in Central, Louisiana
  ?official dbo:officeHolderOf dbr:Council_of_Central,_Louisiana ;
            dbo:politicalParty ?party .
  
  # Find Harriette Arlene Lake and her spouse Roger Pryor (actor)
  ?person a dbo:Person ;
          dbp:birthday ""Harriette Arlene Lake""^^xsd:string ;
          dbo:spouse ?spouse .
  ?spouse rdfs:label ""Roger Pryor (actor)""@en .

  # Check if there is any overlap between the ruling party member and Harriette's spouse
  OPTIONAL { ?official dbp:name ?personName . FILTER(?personName = ?person) }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Part 1: Find a band member of The Alan Parsons Project
  {
    ?person dbo:memberOf dbr:The_Alan_Parsons_Project .
    ?person rdfs:label ?bandMember .
    FILTER (LANG(?bandMember) = 'en')
  }
  
  UNION
  
  # Part 2: Find an associated musical artist of Billy Lyall
  {
    ?lyall dbo:associatedBand ?artist .
    ?lyall rdfs:label ""Billy Lyall"" .
    ?artist rdfs:label ?associatedArtist .
    FILTER (LANG(?associatedArtist) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?juanCarlosMolina ?actor
WHERE {
  # Find Juan Carlos Molina as a footballer
  ?juanCarlosMolina dbo:birthName ""Juan Carlos Molina""@en .
  
  # Find actors in All or Nothing: Manchester City who are also soccer players and athletes
  ?actor dbo:actorIn dbr:All_or_Nothing:_Manchester_City ;
         (dbo:sport|dbo:athlete) ?sport .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query to find the office of a commander involved in the Central African Republic Civil War who is also a politician
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?office ?person WHERE {
  ?war rdfs:label ""Central African Republic Civil War""@en .
  ?person dbo:occupation ?office ;
          dbo:memberOf ?group .
  ?group rdf:type dbo:MilitaryConflict ;
         dbo:participatesIn ?war .
  ?person dbo:politicalParty ?party .
  FILTER (CONTAINS(LCASE(?office), ""commander"") && CONTAINS(LCASE(?party), ""politician""))
}

# Query to find the leader of the Conservative Republican Party in Spain who is a politician
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?leader dbo:positionHeld ?office ;
          dbo:memberOfParty ?party .
  FILTER CONTAINS(LCASE(?office), ""leader"") && CONTAINS(LCASE(?leader), ""politician"")
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Maximilian I, Holy Roman Emperor""@en .
  
  ?parent dbo:child ?child .
  ?child a dbo:Monarch ;
         foaf:name ?name .

  OPTIONAL { ?child dbo:spouse ?spouse . }
  
  ?child dbo:fatherOf dbr:Philip_I_of_Castile .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find teams of Pablo Aimar
  VALUES ?team { 
    ?pabloTeam .
  }
  
  dbr:Pablo_Aimar dbo:team ?pabloTeam .

  # Find players born on February 22, 1955, who are athletes and played for the same team as Pablo Aimar
  ?player a dbo:Athlete ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:team ?team .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person rdfs:label ""Konstantinos Ventiris""@en .
  ?person dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:description ?description . }
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?profession1 ?profession2 WHERE {
  # Find television shows featuring Richard E. Grant
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  
  # Identify actors from these TV shows who are also politicians and have acted in ""Ab Kya Hoga""
  ?tvShow dbo:starring ?actor .
  ?actor dbo:profession dbr:Politician .
  ?abKyaHogaFilm dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?abKyaHogaFilm), LCASE(""Ab_Kya_Hoga""))) .

  # Get professions of the actor
  OPTIONAL { ?actor dbo:profession ?profession1 . }
  OPTIONAL { ?actor dbo:occupation ?profession2 . }

  # Ensure we get distinct actors and their professions
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity (rdfs:label|dbo:title) ?title .
  FILTER(CONTAINS(LCASE(?title), ""nothing to gein""))
}
```",1,1,2,1,1,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:characterName ""The Shadow""@en .
  dbr:The_Shadow dbo:alias ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify the member of GS9 who is an artist and a musical artist
  ?gs9Member dbo:member dbr:GS9 ;
             rdf:type dbo:Artist, dbo:MusicalArtist .

  # Step 2: Find the associated musical artist
  ?gs9Member dbo:associatedBandMember ?associatedArtist .

  # Step 3: Determine band members who are themselves musical artists
  ?associatedArtist dbo:bandMember ?bandMember ;
                   rdf:type dbo:MusicalArtist .

  # Step 4: Identify the award's native region (American, state, settlement)
  ?award dbo:nativePlace ?region .
  FILTER (?region = dbr:Puerto_Rico) .
  FILTER EXISTS { ?region rdf:type dbo:Region . }
  FILTER EXISTS { ?region rdf:type dbo:State . }
  FILTER EXISTS { ?region rdf:type dbo:Settlement . }

  # Step 5: Find the band member from this region
  ?bandMember dbo:nativePlace ?region .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Chiang Ching-kuo"") .

  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER CONTAINS(LCASE(str(?occupation)), ""politician"")
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find Cora Sue Collins' notable work (claim to fame)
  ?collinsWork dbo:director dbr:Cora_Sue_Collins .
  
  # Find the producer of that work
  ?collinsWork dbo:producer ?producer .

  UNION

  # Find the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  UNION

  # Find the professional alter ego of The Shadow
  ?shadowPerson rdfs:label ""The Shadow""@en .
  ?shadowPerson dbo:profession ?profession .
  
  FILTER(?producer = ?shadowPerson)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?georgeDucas ?commanderRole ?battleOfViennaForce ?tvShow ?societalEvent ?successor
WHERE {
  # George Ducas and his role as a commander
  dbr:George_Ducas dbo:role ?commanderRole .
  
  # Military force in the Battle of Vienna
  ?battleOfViennaForce dbo:participatedInBattle dbr:Battle_of_Vienna .
  ?georgeDucas dbo:militaryUnit ?battleOfViennaForce .

  # Television show or societal event related to this context
  OPTIONAL {
    ?tvShow rdfs:label ?showLabel .
    FILTER(CONTAINS(LCASE(?showLabel), ""battle of vienna"") || CONTAINS(LCASE(?showLabel), ""george ducas""))
  }
  
  OPTIONAL {
    ?societalEvent rdfs:label ?eventLabel .
    FILTER(CONTAINS(LCASE(?eventLabel), ""battle of vienna"") || CONTAINS(LCASE(?eventLabel), ""george ducas""))
  }

  # Successor of Yurii Khmelnytsky
  dbr:Yuri_Khmelnytsky dbo:succeededBy ?successor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find USS Arcadia (ID-1605) and its owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Identify the war associated with this owner that is both a disease and societal event
  ?war dbo:relatedTo ?owner ;
       rdf:type dbo:Disease, dbo:SocietalEvent .
  
  # Find the commander of this war
  ?war dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandGrandChildLabel WHERE {
  # First generation child of Alexander of Württemberg
  ?child dbo:parent dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) .
  
  # Second generation child (child's child)
  ?secondChild dbo:parent ?child .

  # Third generation child (grandchild's child)
  ?grandGrandChild dbo:parent ?secondChild .

  # Get the label of the third-generation descendant
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?administeredFrom ?mayor
WHERE {
  # Denmark administered from Copenhagen
  dbr:Copenhagen dbo:administrativeCapitalOf dbr:Denmark .
  
  # Historical context for Duchy of Schleswig
  OPTIONAL {
    dbr:Duchy_of_Schleswig dbo:capital dbr:Copenhagen .
    ?mayor dbo:position ""Mayor"" ;
           dbo:administers dbr:Duchy_of_Schleswig .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?person rdfs:label ""Peter IV of Aragon""@en .
  ?person rdfs:label ?realName .
  FILTER(LANG(?realName) = 'en') .

  OPTIONAL { 
    ?person dbo:childOf ?parent .
    ?parent rdfs:label ""Alfonso IV of Aragon""@en .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonRealName ?nickCurranRealName ?associatedArtist
WHERE {
  # Kim Wilson and The Fabulous Thunderbirds
  dbr:Kim_Wilson dbo:leadSinger dbr:The_Fabulous_Thunderbirds .
  dbr:Kim_Wilson dbo:birthName ?kimWilsonRealName .

  # Nick Curran's real name and associations
  OPTIONAL {
    ?nickCurran dbo:birthName ?nickCurranRealName .
    ?nickCurran dbo:associatedBandMember ?associatedArtist .
  }

  FILTER(?nickCurranRealName = ""Nick Curran""^^xsd:string)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandChildOfMinyeKyawswa
WHERE {
  # Step 1: Identify Minye Kyawswa's child
  ?child dbr:Minye_Kyawswa dbo:child .

  # Step 2: Find the parent of this child (i.e., grandchild of Minye Kyawswa)
  ?grandChildOfMinyeKyawswa ?parentProperty ?child .

  # Step 3: Ensure that the grandchild has a parent
  ?grandChildOfMinyeKyawswa dbo:child ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentLabel WHERE {
  # Find Maria of Bytom's spouse
  ?maria a dbo:Person ;
         rdfs:label ""Maria of Bytom""@en .
  
  ?spouse dbo:spouse ?maria ;
          rdfs:label ?spouseLabel .

  # Determine the father of that spouse
  ?father dbo:child ?spouse ;
          rdfs:label ?fatherLabel .

  # Find out who is the parent (mother or father) of that individual
  OPTIONAL { ?parent dbo:child ?father . }
  
  OPTIONAL { ?parent dbo:father ?father . }
  OPTIONAL { ?parent dbo:mother ?father . }

  # Ensure this parent holds a royalty title
  ?parent rdfs:label ?parentLabel .
  FILTER(CONTAINS(LCASE(?parentLabel), ""king"") || CONTAINS(LCASE(?parentLabel), ""queen"") ||
         CONTAINS(LCASE(?parentLabel), ""prince"") || CONTAINS(LCASE(?parentLabel), ""princess""))
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?author dbo:parent dbr:Kate_Dimbleby .
  ?author dbo:deathDate ?deathDate .
  FILTER (YEAR(?deathDate) <= 2020 && MONTH(?deathDate) <= 6 && DAY(?deathDate) <= 18)
  
  ?author dbo:artist true .
  ?author dbo:musicalArtist true .

  ?movie dbo:workType dbr:Film ;
         dbo:author ?author .
  ?tvShow dbo:workType dbr:TelevisionSeries ;
          dbo:author ?author .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find movies Herschel Bernardi acted in
  ?movie dbo:actor dbr:Herschel_Bernardi .
  
  # Ensure the movie is a work (using subject property as an example)
  ?movie dbo:subject ?work .

  # Find other actors in these movies
  ?movie dbo:actor ?actor .

  # Check if any of these actors have a parent who is a photographer
  ?actor foaf:parent ?parent .
  ?parent dbo:profession dbr:Photographer .
  
  FILTER(?actor != dbr:Herschel_Bernardi) # Exclude Herschel Bernardi himself
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?alfonso rdf:type dbo:Monarch ;
           foaf:name ""Alfonso IV of Aragon""@en .
  
  ?alfonso dbo:child ?child .

  FILTER EXISTS { 
    ?child rdf:type dbo:Monarch .
  }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel
WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singer ?band 
WHERE {
  ?person dbo:birthName ""Emilia Yancheva Valeva""@en .
  ?person dbo:profession ?singer .
  FILTER(CONTAINS(LCASE(STR(?singer)), ""singer""))
  
  OPTIONAL {
    ?person dbo:memberOfBand ?band .
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Sal Mineo""@en .
  ?person dbo:deathPlace ?deathPlace .
  FILTER(LANG(?person) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Henry Clay Lewis""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Akaler Shandhaney""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,4,0,5,1.0,0.4444444444444444,0.6153846153846153
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query to find the spouse of Hillary Clinton
SELECT ?spouse WHERE {
  wd:Q42 dbo:spouse ?spouse .
}

UNION

# Query to find the commander during the Third Taiwan Strait Crisis
SELECT DISTINCT ?commander WHERE {
  ?event dbo:wikiPageRedirects ?redirect .
  FILTER(CONTAINS(LCASE(str(?redirect)), ""third taiwan strait crisis""))
  ?event dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work dbo:title ""True Self""@en .
  ?work dbo:creator dbr:Steven_Kapur .
  ?work dbo:composer ?writer .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Spouse's child (Constance's step-child)
  ?spouse dbo:child ?stepChild .

  # Step-child's child (Spouse's grandchild, Constance's step-grandchild)
  ?stepChild dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Grandchild is father of William II of Sicily
  ?grandchild dbo:child dbr:William_II_of_Sicily .

  # Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
  
  # Ensure grandchild is child of Roger III's parent
  ?grandchild dbo:childOf ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  OPTIONAL {
    # Find photographers
    ?photographer a dbo:Photographer ;
                 foaf:parent ?parent .
    
    # Check if the actor is a parent of a photographer
    FILTER(?actor = ?parent)
  }

  OPTIONAL {
    # Find children of Allan Arbus
    dbr:Allan_Arbus foaf:child ?child .

    # Check if the actor is a child of Allan Arbus
    FILTER(?actor = ?child)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?workTitle
WHERE {
  ?work dbo:author dbr:Joe_Biden ;
        rdf:type dbo:CreativeWork, dbo:Book .
  OPTIONAL { 
    ?work dbo:nationality dbr:United_States . 
  }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?recipient WHERE {
  ?award a dbo:Award ;
         dbo:name ""Commander of the Order of the British Empire"" .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,853,0,0.0,0
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tvShow ?event WHERE {
  ?entity rdfs:label ""The War of Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { 
    ?entity dbo:wikiPageRedirects ?redirect .
    ?redirect dbo:abstract ?abstract .
    FILTER CONTAINS(LCASE(?abstract), ""tv series"")
    BIND(?redirect AS ?tvShow)
  }
  
  OPTIONAL {
    ?entity dbo:wikiPageRedirects ?redirect .
    ?redirect dbo:abstract ?abstract .
    FILTER CONTAINS(LCASE(?abstract), ""event"")
    BIND(?redirect AS ?event)
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person rdfs:label ""Álvaro Quirós""@en .
  FILTER NOT EXISTS { ?person owl:sameAs ?disambiguation } # Avoid disambiguations
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find members of Filthy Friends
  ?filthyFriendsMember dbo:memberOf dbr:Filthy_Friends .
  
  # Find collaborators or band members associated with Mark Eitzel
  ?eitzelCollaborator dbo:bandMember dbr:Mark_Eitzel .

  # Identify the common member between Filthy Friends and Mark Eitzel's collaborations
  FILTER (?filthyFriendsMember = ?eitzelCollaborator)

  # Get the name of this artist
  ?artist rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""corin tucker""))
  
  # Ensure we are getting a person entity
  ?artist rdf:type dbo:Person .

  # Bind the label to avoid unnecessary results
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?authorBirthPlace ?youngkinBirthPlace WHERE {
  # Query to get the birth place of Cece Bell, author of El Deafo
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .
  BIND(""Cece Bell"" AS ?authorName)

  # Query to get the birth place of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
}
```",4,5,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  # Find children of Prince Faisal bin Hussein
  ?person dbo:child ?child .
  FILTER(?person = dbpedia:Prince_Faisal_bin_Hussein)

  # Check if the child is a member of royalty
  OPTIONAL { ?child rdf:type dbo:RoyalFamilyMember . }

  # Get the parent of this royal child
  ?child dbo:parent ?parent .

  # Ensure that we only consider children who are royals
  FILTER EXISTS { ?child rdf:type dbo:RoyalFamilyMember }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?samProfession ?anotherProfessionalInSamProfession ?robertBand
WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:occupation ?samProfession .

  # Find another professional in the same field as Sam Concepcion
  ?anotherProfessional dbo:occupation ?samProfession .
  
  FILTER(?anotherProfessional != dbr:Sam_Concepcion)

  # Find Robert Lamar Thompson's band
  OPTIONAL {
    dbr:Robert_Lamar_Thompson dbo:band ?robertBand .
  }
}
```",5,6,6,2,3,3,3,71,0,1,4,0.0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName ?birthPlace WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
  OPTIONAL { ?child dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
  ?child dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Eleonora Menicucci""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  ?club rdf:type dbo:FootballClub .
  ?club rdfs:label ""Hartlepool United F.C.""@en .
  OPTIONAL { ?club dbo:manager ?manager . }
  OPTIONAL { ?manager foaf:name ?managerName . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warHidenaga ?warHideyoshiChild WHERE {
  # Wars involving Toyotomi Hidenaga
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?warHidenaga .

  # Wars involving children of Toyotomi Hideyoshi (including Hidenaga)
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  ?child dbo:participatedIn ?warHideyoshiChild .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse in the 2020–21 season
  ?team dbo:manager ?manager .
  ?team rdfs:label ""SBV Vitesse""@en .

  # Native of West Germany
  ?manager dbo:nationality dbr:Germany_West .

  # Managed VfL Bochum
  ?bochumTeam dbo:manager ?manager .
  ?bochumTeam rdfs:label ""VfL Bochum""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?role ?officeHolder WHERE {
  # Find Jean Baptiste Comte d'Arco's role as a commander
  ?dArco dbo:occupation ""Commander""@en .
  
  # Identify his successor in the command role
  ?dArco dbo:successor ?successor .

  # Ensure the successor is also a politician and office holder
  ?successor dbo:occupation ""Politician""@en ;
            dbp:officeHolder ?officeHolder .

  # Reference Michał Kazimierz Pac's involvement in a military conflict
  ?pac dbo:occupation ""Military Leader""@en .
  ?conflict dbo:participant ?pac ;
            rdf:type dbo:MilitaryConflict .

  # Reference George Ducas
  ?ducas dbo:occupation ""Commander""@en .

  # Link the successor to Michał Kazimierz Pac's conflict if applicable
  OPTIONAL { ?successor dbo:participatedIn ?conflict }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?name WHERE {
  ?awardee dbo:award dbr:Australian_Laureate_Fellowship .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
  OPTIONAL { ?awardee foaf:name ?name }
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Janet Gaynor's movies and producers
SELECT DISTINCT ?movie ?producer WHERE {
  VALUES ?janetGaynor { dbr:Janet_Gaynor }
  
  # Find movies Janet Gaynor acted in
  ?movie dbo:starring ?janetGaynor .
  
  # Get the producer(s) of these movies
  ?movie dbo:productionCompany ?company ;
         dbo:producer ?producer .
}

UNION

# Query for James Dunn's movie ""A Tree Grows in Brooklyn"" and its producers
SELECT DISTINCT ?work ?producer WHERE {
  VALUES ?jamesDunn { dbr:James_Dunn_(actor) }
  
  # Find the work where James Dunn played Johnny Doughboy
  ?work dbo:starring ?jamesDunn ;
        rdfs:label ""A Tree Grows in Brooklyn""@en .
  
  # Get the producer(s) of this movie
  ?work dbo:productionCompany ?company ;
         dbo:producer ?producer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""William II of Sicily""@en .
  ?person dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Janusz Kamiński""@en .
  FILTER NOT EXISTS { ?person owl:sameAs ?disambiguation }.
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager ?club WHERE {
  # Find Thomas Letsch's managerial role
  ?letsch a dbo:SoccerManager ;
          foaf:name ""Thomas Letsch"" ;
          dbo:managedTeam ?team .

  # Identify the club managed by Thomas Letsch
  ?team dbo:league ?league .
  
  # Determine the successor of the 2006-07 VfL Bochum season
  dbr:VfL_Bochum_season_2006–07 dbo:succeededBy ?successorLeague .

  # Ensure the league is a football league and sports team season
  ?successorLeague rdf:type dbo:SoccerLeague ;
                   dbo:participatingTeam ?team .

  # Find managers of the club in the successor league
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam ?team ;
           foaf:nationality dbr:West_Germany .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?profession WHERE {
  # Find the author of ""Smartbomb""
  ?author rdfs:label ""Smartbomb""@en .
  
  # Find movies where the author acted
  ?movie dbo:starring ?author .

  # For each movie, find actors and their professions
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:occupation ?profession . }
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Carl, Duke of Württemberg's predecessor
  ?carl a dbo:Duke ;
        foaf:name ""Carl, Duke of Württemberg"" .
  
  ?predecessor dbo:successor ?carl .

  # Find Albrecht, Duke of Württemberg and his children
  ?albrecht a dbo:Duke ;
           foaf:name ""Albrecht, Duke of Württemberg"" .
  
  ?child dbo:childOf ?albrecht ;
         rdf:type dbo:Person .

  # Find the grandchild who is also royalty
  ?grandchild dbo:childOf ?child ;
              rdf:type dbo:Royalty .

  # Ensure this grandchild is connected to the parent of Archduchess Margarete Sophie of Austria
  ?parent a dbo:Parent ;
          dbo:child dbp:MargareteSophieArchduchessAustria .
  
  ?grandchild dbo:childOf ?parent .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Catherine of Austria, Queen of Portugal's father
  ?catherine dbo:parent ?father .
  FILTER (str(?catherine) = ""Catherine_of_Austria,_Queen_of_Portugal"")

  # Isabella of Austria's father
  ?isabella dbo:parent ?father .
  FILTER (str(?isabella) = ""Isabella_of_Austria_(1501-1526)"")

  # The father is a child of Maximilian I, Holy Roman Emperor
  ?maximilian dbo:child ?father .
  FILTER (str(?maximilian) = ""Maximilian_I,_Holy_Roman_Emperor"")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel
WHERE {
  VALUES ?parent { dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel }
  ?parent dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?descendant
WHERE {
  # Identify Carl, Duke of Württemberg
  VALUES ?carl { dbr:Carl,_Duke_of_W%C3%BCrttemberg }

  # Find his predecessor
  ?carl dbo:predecessor ?predecessor .

  # Trace back four generations from Carl to find a descendant
  ?descendant dbo:child ?parent1 .
  ?parent1 dbo:child ?parent2 .
  ?parent2 dbo:child ?parent3 .
  ?parent3 dbo:child ?carl .

  # Ensure the great-great-grandchild is also a child of Alexander of Württemberg
  ?alexander dbr:Alexander_of_W%C3%BCrttemberg (1804-1881) .
  ?descendant dbo:childOf ?alexander .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfRoyalParent WHERE {
  # Step 1: Identify Child A (child of Ferdinand Albert II)
  ?childA dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Find spouse of Child A, who is Prince Augustus William of Prussia
  ?childA dbo:spouse dbr:Prince_Augustus_William_of_Prussia .

  # Step 3: Identify Child B (child of Child A and Prince Augustus William)
  ?childB dbo:parent ?childA .
  ?childB dbo:parent dbr:Prince_Augustus_William_of_Prussia .

  # Step 4: Determine the parent who is royalty
  OPTIONAL { ?childA dbp:royalTitle ?title . }
  OPTIONAL { dbr:Prince_Augustus_William_of_Prussia dbp:royalTitle ?title . }

  # Step 5: Find children of this royal parent
  ?childOfRoyalParent dbo:parent ?childA .
  UNION
  ?childOfRoyalParent dbo:parent dbr:Prince_Augustus_William_of_Prussia .

  FILTER EXISTS { ?title != """" } # Ensure the parent is royalty
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:child ?child .
  
  # The child who became Duke of Württemberg before Carl, Duke of Württemberg
  ?child dbo:title ""Duke of Württemberg""@en ;
         dbo:predecessor dbr:C__of_W%C3%BCrttemberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?associatedMusicalArtist WHERE {
  # Identify Tupac Shakur by his birth name or nickname
  { 
    ?tupac dbo:birthName ""Tupac Amaru Shakur""@en .
    OPTIONAL { ?tupac dbp:nickname ""$pacely"" . }
    ?tupac dbo:musicalArtist ?associatedMusicalArtist .
  } UNION {
    # Identify D'Angelo by his birth name
    ?dangelo dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
    ?dangelo dbo:musicalArtist ?associatedMusicalArtist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country
WHERE {
  ?person rdfs:label ""Konrad Adenauer""@en .
  ?person dbo:office ?administration .
  ?administration dbo:country ?country .
  
  FILTER (lang(?person) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team WHERE {
  ?player foaf:name ""Juan Carlos Molina""@en .
  ?player dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies Herschel Bernardi acted in
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Identify Mariclare Costello's spouse and their child
  ?spouse dbo:spouse dbr:Mariclare_Costello ;
          dbo:child ?child .

  # Find the parent of both Amy Arbus and the identified child
  ?parent dbo:child dbr:Amy_Arbus, ?child .
  
  # Ensure this movie involves all these individuals
  ?movie dbo:starring ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ferdinand Albert II
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel dbo:spouse ?spouse .
  
  # Find his children
  ?spouse dbo:child ?child .

  # Identify Prince Augustus William's spouse
  dbr:Prince_Augustus_William_of_Prussia dbo:spouse ?augustusSpouse .

  # Match the child with the spouse of Prince Augustus William
  FILTER (?child = ?augustusSpouse)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Karl Gustav von Baggovut""@en .
  ?person dbo:nationality dbr:Russian_Empire ;
          dbo:participatedIn ?war .
  FILTER(CONTAINS(LCASE(STR(?war)), ""napoleonic wars""))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:commander ?commander .
  ?campaign rdfs:label ?campaignLabel .
  
  FILTER(CONTAINS(LCASE(?campaignLabel), ""egypt and syria""))
  FILTER(CONTAINS(LCASE(STR(?commander)), ""napoleon bonaparte""))
}
```",1,1,2,1,1,3,3,71,0,0,48,0,0.0,0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The alter ego of The Shadow is Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
  
  # Clifford Joseph Harris Jr. (T.I.) acted in ATL
  dbr:T._I. dbo:actedIn dbr:ATL_(film) .

  # Hypothetical connection for the question's context
  ?actor rdfs:label ""Clifford Joseph Harris Jr.""@en .
  
  FILTER(?actor = dbr:T._I.)
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceVinceGilliganRecipient ?birthPlaceCeceBell WHERE {
  # Query for Bryan Cranston's birthplace (assuming he is the notable awardee)
  dbr:Bryan_Cranston dbo:birthPlace ?birthPlaceVinceGilliganRecipient .
  
  # Query for Cece Bell's birthplace
  dbr:Cece_Bell dbo:birthPlace ?birthPlaceCeceBell .
}
```",5,5,6,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?kiyosu a dbo:PopulatedPlace ;
          rdfs:label ""Kiyosu""@en .
  OPTIONAL { ?kiyosu dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?album ?actor ?movie ?professional 
WHERE {
  # Step 1: Identify T.I.'s songs and musical works
  ?song dbo:artist dbr:T.I. ;
        a dbo:Songs .

  # Step 2: Find the album associated with these songs
  ?album dbo:song ?song .
  
  # Step 3: Hypothetical step to find actors linked to albums (e.g., music videos)
  OPTIONAL {
    ?musicVideo dbo:starring ?actor ;
                dbo:work ?album .
  }
  
  # Step 4: Find movies featuring the identified actor
  ?movie dbo:starring ?actor .

  # Step 5: Identify a professional in the same field as the actor (e.g., acting)
  ?professional dbo:occupation dbr:Actor ;
                rdfs:label ?professionalLabel .
  
  FILTER(lang(?professionalLabel) = 'en')
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?producer WHERE {
  ?film a dbo:Film ;
        rdfs:label ""A Star Is Born (1937 film)""@en .
  
  OPTIONAL { ?film dbo:director ?director . }
  OPTIONAL { ?film dbo:producer ?producer . }

  FILTER(LANG(?film) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find William Gayner's place of birth that is both a region and a country
  ?gayner dbo:birthPlace ?place .
  FILTER (CONTAINS(STR(?place), ""William Gayner"")) .

  # Ensure the place is both a region and a country
  ?place rdf:type dbo:Region ;
         rdf:type dbo:Country .

  # Find Hon. Mary Frances Bowes-Lyon's parents
  dbr:Mary_Frances_Bowes-Lyon dbo:parent ?parent .
  
  # Check if this parent is native to the place of William Gayner's birth
  ?parent dbo:nativePlace ?place .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award [ a dbo:Award ; dbo:recipient dbr:Napoleon_Bonaparte . ] .
  ?person dbo:militaryCommanderOf dbr:Egyptian_Campaign_(1798–1801) .
  ?person dbo:nationality dbr:France .
  ?person dbo:militaryService ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the actor associated with ""Johnny Doughboy""
  ?actor dbo:film dbr:Johnny_Doughboy .
  
  # Identify their claim to fame (most notable work)
  ?actor dbo:notableWork ?claimToFame .

  # Get the producer of that claim to fame
  ?claimToFame dbo:producer ?producer .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER(CONTAINS(LCASE(STR(?person)), ""prince faisal bin hussein"")) .
  
  OPTIONAL { ?child rdf:type dbo:RoyalPerson . }
  FILTER EXISTS { ?child rdf:type dbo:RoyalPerson . }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the commander who was also a politician and office holder during the Russo-Polish War (1654–1667)
  ?commander dbo:nationality dbr:Poland ;
             dbo:officeHolderOf dbr:Russo_Polish_War_(1654%E2%80%931667) ;
             dbo:occupation dbr:Politician .

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName ?otherProfession WHERE {
  # Find the TV series ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  # Get actor's name
  ?actor rdfs:label ?actorName .

  # Check if the actor has another profession listed
  OPTIONAL { 
    ?actor dbo:occupation ?otherProfession .
  }
  
  FILTER (lang(?actorName) = 'en')
}
ORDER BY ?actorName
```",3,3,4,1,3,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?warName WHERE {
  ?person dbo:birthName ""Koichirō""@en .
  ?person dbo:participatedIn ?event .
  ?event a dbo:Event ;
         rdfs:label ?warName .
  FILTER (CONTAINS(LCASE(?warName), ""war""))
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?birthDate WHERE {
  dbr:Nick_Curran rdf:type dbo:MusicArtist .
  OPTIONAL { dbr:Nick_Curran dbo:birthPlace ?birthPlace . }
  OPTIONAL { dbr:Nick_Curran dbo:birthDate ?birthDate . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bryanCranstonBirthPlace ?ceceBellBirthPlace WHERE {
  # Bryan Cranston's birthplace
  dbr:Bryan_Cranston dbo:birthPlace ?bryanCranstonBirthPlace .
  
  # Cece Bell's birthplace
  dbr:C._E._Bell dbo:birthPlace ?ceceBellBirthPlace .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?party WHERE {
  # Query for spouse of Roger Pryor (actor)
  OPTIONAL { 
    dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
  }
  
  # Assuming we have a way to identify the ruling party in Central, Louisiana
  # This part is hypothetical as DBpedia might not contain this specific data
  OPTIONAL {
    ?party dbo:country dbr:Louisiana ;
           dbo:locality dbr:Central,_Louisiana ;
           dbo:isRulingParty true .
    
    dbr:Roger_Pryor_(actor) dbo:memberOfPoliticalParty ?party .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bobby Shmurda""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bookTitle WHERE {
  ?commander a dbo:Politician ;
             dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard .
  
  ?work dbo:type dbr:Book ;
        rdfs:label ?bookTitle ;
        dbo:author ?commander .

  FILTER (LANG(?bookTitle) = ""en"")
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theodorHeussNativeCountry ?managerName WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?theodorHeussNationality .
  ?theodorHeussNationality rdfs:label ?theodorHeussNativeCountry .

  # Managers of VfL Bochum
  ?manager dbo:position ""Manager"" ;
           dbo:team dbr:VfL_Bochum ;
           dbo:nationality ?nationality .
  ?nationality rdfs:label ?nativeCountryLabel .

  FILTER(?theodorHeussNativeCountry = ?nativeCountryLabel)

  # Return manager's name
  ?manager foaf:name ?managerName .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 2: Determine the ruling party in that settlement
  ?deathPlace dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  
  # Ensure the ruling party is both a political party and an organization
  ?rulingParty rdf:type dbo:PoliticalParty ;
               rdf:type dbo:Organization .

  # Step 3: Find a member of this ruling party
  ?partyMember dbo:memberOf ?rulingParty .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child is Zara Yaqob
  dbr:Baeda_Maryam_I dbo:child dbr:Zara_Yaqob .
  
  # Dawit I's child is Baeda Maryam I
  dbr:Dawit_I dbo:child dbr:Baeda_Maryam_I .

  # Dawit I's father (Na'od) is the grandfather of Zara Yaqob through Baeda Maryam I
  dbr:Dawit_I dbo:father ?grandfather .
  
  # Na'od was a royalty and an office holder
  ?grandfather rdf:type dbo:Monarch ;
               dbo:officeHolder true .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player (GROUP_CONCAT(?teamLabel; separator="", "") AS ?teams)
WHERE {
  VALUES (?player ?playerLabel) { 
    (dbr:Juan_Carlos_Molina_(footballer) ""Juan Carlos Molina"") 
    (dbr:Pablo_Aimar ""Pablo Aimar"")
  }
  
  ?player dbo:nationality dbr:Argentina .
  OPTIONAL {
    ?player dbo:team ?team .
    ?team rdfs:label ?teamLabel .
    FILTER(LANG(?teamLabel) = 'en')
  }
}
GROUP BY ?player
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather ?grandchild 
WHERE {
  # Step 1 & 2: Charles I of Hungary's father who is royalty
  ?charlesI dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
  FILTER CONTAINS(LCASE(?fatherLabel), ""king"") .

  # Step 3: Parent (likely mother) of this royal father
  ?parentOfFather dbo:child ?father .
  ?parentOfFather rdfs:label ?parentOfFatherLabel .
  FILTER CONTAINS(LCASE(?parentOfFatherLabel), ""queen"") .

  # Step 4 & 5: Predecessor of Stephen V who is royalty
  ?stephenV dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .
  FILTER CONTAINS(LCASE(?predecessorLabel), ""king"") .

  # Step 6: Child of this royal predecessor
  ?childOfPredecessor dbo:child ?predecessor .
  ?childOfPredecessor rdfs:label ?childOfPredecessorLabel .
  FILTER CONTAINS(LCASE(?childOfPredecessorLabel), ""king"" || ""queen"") .

  # Step 7: Grandchild of this royal predecessor
  ?grandchild dbo:child ?childOfPredecessor .
  ?grandchild rdfs:label ?grandchildLabel .
  FILTER CONTAINS(LCASE(?grandchildLabel), ""king"" || ""queen"") .

  # Find the commonality between parentOfFather and grandchild
  FILTER (?parentOfFather = ?grandchild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?position
WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""Brian Kemp"" .
  ?person dbo:positionHeld ?position .
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maximilian I, Holy Roman Emperor
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:spouse ?spouse .
  
  # His child who is royalty and father of Isabella and Philip
  ?child dbo:parent dbr:Maximilian_I,_Holy_Roman_Emperor ;
         dbo:royalty ""true""^^xsd:boolean ;
         dbo:child ?isabella ;
         dbo:child ?philip .

  # Isabella of Austria
  ?isabella rdfs:label ""Isabella_of_Austria""@en .
  
  # Philip I of Castile
  ?philip rdfs:label ""Philip_I_of_Castile""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?band WHERE {
  ?person foaf:name ""Robert Lamar Thompson""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:profession ?profession .
  
  FILTER (
    (CONTAINS(LCASE(STR(?profession)), ""singer"") || 
     EXISTS { ?person dbo:member ?band . ?band a dbo:Band } )
  )
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?battleCombatant1 ?battleCombatant2 ?calderEvent ?calderMilitaryForce
WHERE {
  # Battle of Fort Royal combatants
  dbr:Battle_of_Fort_Royal dbo:combatant1 ?battleCombatant1 .
  dbr:Battle_of_Fort_Royal dbo:combatant2 ?battleCombatant2 .

  OPTIONAL {
    # Events related to Robert Calder that are societal and involve military forces
    dbr:Robert_Calder dbo:event ?calderEvent .
    ?calderEvent rdf:type dbo:SocietalEvent .
    ?calderEvent dbo:militaryForce ?calderMilitaryForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Carl, Duke of Württemberg
  ?carl a dbo:Duke ;
        foaf:name ""Carl, Duke of Württemberg"" .
  
  # Identify his predecessor
  ?carl dbo:predecessor ?predecessor .

  # Ensure the predecessor is a great-grandchild of Duke Philipp of Württemberg
  ?philipp a dbo:Duke ;
           foaf:name ""Duke Philipp of Württemberg"" .
  
  ?predecessor dbo:parent ?parent1 .
  ?parent1 dbo:parent ?parent2 .
  ?parent2 dbo:parent ?philipp .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName ?otherProfession
WHERE {
  # Find the film ""ATL""
  dbr:ATL a dbo:Film .
  
  # Get actors of the film
  dbr:ATL dbo:starring ?actor .

  # Get actor's name
  ?actor rdfs:label ?actorName .
  
  # Check for other professions
  OPTIONAL {
    ?actor dbo:occupation ?otherProfession .
  }
  
  FILTER (lang(?actorName) = 'en')
}
ORDER BY ?actorName
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query to find the author of ""Back to Work""
SELECT ?author WHERE {
  ?book dcterms:title ""Back to Work""@en .
  ?book dbo:author ?author .
}

# Query to find a commander in the American Civil War involving the U.S. Navy
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?war dbo:name ""American Civil War""@en ;
       dbo:participatingOrganisation [
         a dbo:Navy ;
         dbo:country dbr:United_States_of_America
       ] .
  ?commander dbp:rank ""Commander""@en ;
             dbo:occupation ""Military personnel""@en ;
             dbo:associatedWith ?war .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:profession dbr:Singer .
  OPTIONAL { ?character dbo:alias ?alterEgo . }
  FILTER (CONTAINS(LCASE(?character), ""the shadow""))
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.ontology.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the album ""Lasso the Moon""
  ?album a dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  # Check if this album is associated with any films
  ?film dbo:basedOn ?album .

  # Get actors from these films
  ?film dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Archduke Charles Joseph of Austria
  dbr:Charles_Joseph,_Archduke_of_Austria dbo:parent dbr:Maria_Theresa.

  # Parent of Archduke Charles Joseph is Maria Theresa
  ?child dbo:parent dbr:Maria_Theresa.
  
  # Father of the child (Maria Theresa's husband)
  ?father dbo:spouse dbr:Maria_Theresa .
  ?father dbo:child ?child .

  # Commander in Thirty Years' War
  ?commander dbo:occupation dbr:Commander_in_the_Thirty_Years'_War.
  
  # Charles VI is the father of Maria Theresa's children and a commander during that period
  FILTER(?father = dbr:Charles_VI)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person foaf:name ""Hillary Clinton""@en .
  ?book dbo:author ?person ;
        a dbo:Book ;
        dbo:wikiPageWikiLink dbr:Written_work .
}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Actor of Shelby Oaks
SELECT ?actor WHERE {
  ?series rdfs:label ""Shelby Oaks""@en .
  ?series dbo:starring ?actor .
}

UNION

# Album of What You Know (T.I. song) and any actor involved
SELECT ?album ?artist WHERE {
  ?song dcterms:title ""What You Know""@en ;
        dbo:lyricsBy ?artist .
  ?song dbo:fromAlbum ?album .
  OPTIONAL { ?album dbo:starring ?actor . FILTER(?actor != """") }
}

UNION

# Professional in the alter ego of The Golden Master
SELECT ?character ?professional WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:hasPart ?episode .
  ?episode dbo:character ?character .
  OPTIONAL { ?character dbo:profession ?professional . FILTER(?professional != """") }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?event a dbo:Event .
  ?event dbp:name ""Sinking of Prince of Wales and Repulse""@en .
  ?event dbo:participatedIn ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:partOf ?war .
  ?war rdfs:label ""World War II""@en .

  OPTIONAL { ?event dbp:commandedBy ?commander . }
  FILTER(?commander != null)
}
```",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show ?host ?institution WHERE {
  # Find Rainer Weiss and his awards
  dbr:Rainer_Weiss dbo:award ?award .
  
  # Find shows or events related to the award
  ?award dbo:relatedEvent ?event .
  ?event dbo:hostedBy ?host .

  # Check if the host is affiliated with an educational institution
  OPTIONAL { ?host dbo:almaMater ?institution . FILTER (isLiteral(?institution) && contains(str(?institution), ""University"")) }
  
  # Ensure we only get results where the host is linked to an educational institution
  FILTER (!isBlank(?institution))
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?child
WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?myathponepyo dbo:successorOf ?predecessor .
  FILTER(STR(?myathponepyo) = ""Myat_Hpone_Pyo"") .

  # Find Minye Kyawswa's child
  ?minyekyawswa dbo:child ?child .
  FILTER(STR(?minyekyawswa) = ""Minye_Kyawswa"") .

  # Ensure the predecessor is also a child of Minye Kyawswa
  FILTER(STR(?predecessor) = STR(?child))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""1,000 Dollars a Minute""@en .
  
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?person a dbo:Person ;
          foaf:name ""Afeez Oyetoro""@en .
  
  OPTIONAL { ?person dbo:starring ?film . }
  OPTIONAL { ?person dbo:director ?film . }

  FILTER EXISTS { ?film a dbo:Film }
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?rodArgentProfession (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?stonebwoyAssociatedArtists)
WHERE {
  # Find Rod Argent's profession
  ?rodArgent dbo:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?rodArgentProfession .

  # Find Stonebwoy (Elorm Kabu Amenyah) and his associated artists
  ?stonebwoy foaf:name ""Stonebwoy""@en ;
             foaf:givenName ""Elorm"" ;
             foaf:familyName ""Kabu Amenyah"" .
  
  # Assuming there is a property that links Stonebwoy to other artists he works with
  OPTIONAL { ?stonebwoy dbo:worksFor ?associatedArtist . }
}
GROUP BY ?rodArgentProfession
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Dorothea_of_Lorraine dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?bandLabel WHERE {
  ?clapton a dbo:Musician ;
           foaf:name ""Eric Clapton""@en .
  
  ?clapton dbo:bandMember ?band .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?birthName WHERE {
  # Find the artist associated with $pacely
  OPTIONAL {
    ?entity dbo:alias ""$pacely"" .
    ?entity dbo:associatedMusicalArtist ?artist .
  }
  
  # Find a person from Central Region, Ghana who is an artist and get their birth name
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          foaf:name ?name ;
          foaf:mbox ?email .
  OPTIONAL { ?person foaf:birthday ?birthday . }
  
  # Assuming the person is an artist
  ?person dbo:occupation dbr:Musician .

  # Get their birth name if available
  OPTIONAL {
    ?person foaf:name ?birthName .
  }

  FILTER(?artist != """" && ?birthName != """")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorName ?spouseName WHERE {
  # Part 1: Find the actor of ""Always"" (1989)
  dbr:Always_(film) dbo:starring ?actor .
  ?actor rdfs:label ?actorName .

  # Part 2: Find awards and nominations received by Janusz Kamiński
  dbr:Janusz_Kamiński dbo:awardReceived ?award .
  
  # Find the spouse of any awardee from the list
  ?award dbo:recipient ?awardee .
  ?awardee dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .

  FILTER (lang(?actorName) = 'en')
  FILTER (lang(?spouseName) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Eva Mendes as an actor in Paradise (2013 film)
  ?film dbo:starring dbr:Eva_Mendes .
  ?film rdfs:label ""Paradise (2013 film)""@en .

  # Check if Eva Mendes is linked to Janusz Kamiński through awards
  OPTIONAL { 
    ?award dbo:recipient dbr:Eva_Mendes ;
           dbo:awardedBy dbr:Janusz_Kamiński .
  }

  # Get the spouse of Eva Mendes
  ?person dbo:spouse ?spouse .
  FILTER (?person = dbr:Eva_Mendes)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?force WHERE {
  ?person dbo:birthPlace dbr:Charleston,_South_Carolina ;
          dbo:militaryBranch ?force .
  
  ?medalOfHonor dbo:recipient ?person .
  FILTER EXISTS { ?medalOfHonor rdf:type dbr:Medal_of_Honor } .

  ?gillmoreMedal dbo:recipient ?person .
  FILTER EXISTS { ?gillmoreMedal rdf:type dbr:Gillmore_Medal } .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?force WHERE {
  # Find the award associated with Edmund Hakewill-Smith
  ?award dbo:recipient ?person .
  ?person rdfs:label ""Edmund Hakewill-Smith""@en .

  # Find the awardees of this award
  ?award dbo:recipient ?awardee .

  # Ensure the context involves Tom Phillips (Royal Navy officer)
  OPTIONAL {
    ?event dbo:agent ?awardee .
    ?event dbo:agent dbr:Tom_Phillips_(Royal_Navy_officer) .
  }

  # Find the military force of the awardee
  ?awardee dbo:militaryUnit ?force .

  FILTER(LANG(?awardee) = 'en')
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chennupati Jagadish""@en .
  
  OPTIONAL { ?person dbo:almaMater ?university . }
  OPTIONAL { ?person foaf:alumniOf ?university . }

  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1955 && MONTH(?birthDate) = 2 && DAY(?birthDate) = 22)
  
  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?personLabel .
    FILTER(LANG(?personLabel) = 'en')
  }
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
# This SPARQL query cannot be completed as it requires the name or identifier of a specific movie.
SELECT ?movie ?producer WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdfs:label ""Movie Name""@en . # Replace ""Movie Name"" with the actual movie title
  ?movie dbo:producer ?producer .
}
```",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?reference WHERE {
  ?dawitI a dbo:Monarch ;
          foaf:name ""Dawit I""@en .
  
  OPTIONAL { ?dawitI dbo:father ?father . }
  OPTIONAL { ?dawitI dbp:reference ?reference . }

  FILTER (lang(?reference) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?playerInManager
WHERE {
  ?team rdf:type dbo:SoccerClub ;
        dbo:sportsTeamName ""Hong Kong C"" .
  
  ?manager rdf:type dbo:Person ;
           dbo:sportsManager true ;
           dbo:soccerManager true ;
           dbo:playerInManager ?playerInManager .

  ?team dbo:manager ?manager .
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?book a dbo:Book ;
        rdfs:label ""Smartbomb""@en .
  
  ?book dbo:author ?author .

  ?author dbo:writer ?movie .
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Peter IV of Aragon""@en .
  ?person foaf:name ?realName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?author 
WHERE {
  # Find movies starring Vera Lynn
  ?movie dbo:starring dbr:Vera_Lynn .
  
  # Ensure the movie is also a work and a television show
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionShow .

  # Get the author or creator of the movie/work/television show
  ?movie dbo:creator ?author .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse
  ?spouse dbo:spouse ?helena .
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .

  # Step 2: Identify their child that is a royalty
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent ;
         dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty"")) .

  # Step 3: Find the child of this royal child
  ?grandChild dbo:parent ?child .

  # Step 4: Determine the predecessor of this grandchild
  ?predecessor dbo:successor ?grandChild .
  
  # Additional context to ensure correct identification
  ?margareteSophie dbo:parent ?dukePhilipp ;
                   rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?dukePhilipp rdfs:label ""Duke Philipp of Württemberg""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Associated musical artist of Stuart Tosh
SELECT ?artist WHERE {
  ?person foaf:name ""Stuart Tosh""@en .
  ?person dbo:bandMember ?membership .
  ?membership dbo:associatedBand ?artist .
}

UNION

# Query 2: Associated musical artist of Billy Lyall
SELECT ?artist WHERE {
  ?person foaf:name ""Billy Lyall""@en .
  ?person dbo:bandMember ?membership .
  ?membership dbo:associatedBand ?artist .
}

UNION

# Query 3: Band member of the associated musical artist of David Paton
SELECT ?bandMember WHERE {
  ?person foaf:name ""David Paton""@en .
  ?person dbo:bandMember ?membership .
  ?membership dbo:associatedBand ?artist .
  
  ?artist dbo:bandMember ?bandMembership .
  ?bandMembership dbo:agent ?bandMember .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ship ?force WHERE {
  ?person a dbo:NavyOfficer ;
          foaf:name ""Tom Phillips"" ;
          dbo:award dbr:Commander_of_the_Order_of_the_British_Empire .

  OPTIONAL { 
    ?person dbo:commander ?ship .
    ?ship dbp:navyForce ?force .
  }

  FILTER (lang(?personLabel) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:Pakistan .
  FILTER (
    (CONTAINS(LCASE(?cityLabel), ""heart of pakistan"") ||
     CONTAINS(LCASE(?cityLabel), ""paris of the east"") ||
     CONTAINS(LCASE(?cityLabel), ""city of gardens"") ||
     CONTAINS(LCASE(?cityLabel), ""city of literature""))
  )
  ?city rdfs:label ?cityLabel .
  FILTER (LANG(?cityLabel) = 'en')
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Lemmy Kilmister by his birth name
  VALUES ?lemmy { dbr:Lemmy_Kilmister }
  
  # Identify Shaggy by his birth name
  VALUES ?shaggy { dbr:Shaggy_(musician) }

  # Find the musical artist associated with both Lemmy and Shaggy
  ?artist dbo:associatedBand ?band .
  FILTER EXISTS {
    ?band dbo:member ?lemmy .
  }
  FILTER EXISTS {
    ?album dbo:performer ?shaggy ;
           dbo:performer ?artist .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?royalChild ?peterIV
WHERE {
  # Find Martin of Aragon's parent
  ?martin dbo:childOf ?parent .
  
  FILTER (str(?martin) = ""Martin_of_Aragon"")

  # Find the children of that parent who are royalty
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Identify Peter IV and his relationship with this royal child
  ?peterIV rdfs:label ""Peter_IV"" .
  ?peterIV dbo:spouseOrCivilPartner ?royalChild ;
           dbo:childOf ?parent .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbp:Eton_College .
  ?child dbo:parent ?alumnus ;
         rdf:type dbo:Politician .
  OPTIONAL { ?child dbo:father ?father . }
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Identify Philip I of Castile and his royal children
  VALUES (?philip) { <http://dbpedia.org/resource/Philip_I_of_Castile> }
  
  ?child dbo:parent ?philip .
  ?child dbo:royalty ?true .

  # Identify the commander in Siege of Padua who is royalty
  ?commander dbp:commanderInBattle ""Siege of Padua"" ;
             dbo:royalty ?true2 .

  # Find a common child between Philip I and the commander
  ?commonChild dbo:parent ?philip .
  ?commonChild dbo:parent ?commander .

  # Determine the father (either Philip or the commander)
  BIND(IF(BOUND(?philip), ?philip, ?commander) AS ?father)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leaderLabel WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  OPTIONAL { 
    ?party dbo:leader ?leader .
    ?leader rdfs:label ?leaderLabel .
    FILTER(LANG(?leaderLabel) = 'es') # Ensures the label is in Spanish
  }
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Archduke Charles Joseph of Austria's parent
  ?charlesParent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  
  # Cecilia Renata of Austria's father
  ?ceciliaFather dbp:father dbr:Cecilia_Renata_of_Austria .

  # Their common child
  ?commonChild dbo:parent ?charlesParent ;
               dbo:parent ?ceciliaFather .

  # The father of the common child
  ?commonChild dbo:father ?father .
  
  # Ensure this person was a commander in the Thirty Years' War
  ?warCommander dbp:commanderIn dbr:Thirty_Years_War .
  FILTER (?father = ?warCommander)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?characterName WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Walter B. Gibson""@en .
  
  ?creation dbo:creator ?author ;
            a dbo:FictionalCharacter .

  ?creation rdfs:label ?characterName ;
            dbo:wikiPageRedirects ?comicsLink .

  FILTER(CONTAINS(LCASE(STR(?comicsLink)), ""comics""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Lauryn_Hill dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,1,2,0.0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:Person .
  ?player dbo:sportTeam dbr:VfL_Bochum .
  ?team dbo:season ""2007–08"" .
  FILTER EXISTS { ?team dbo:member ?player . }
  FILTER EXISTS { ?player a dbo:SportsClub . }
  FILTER EXISTS { ?player a dbo:SoccerClub . }
  FILTER EXISTS { ?player a dbo:Organization . }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for David Paton's associated musical artists and their members
SELECT DISTINCT ?artist ?member WHERE {
  VALUES (?person) { dbr:David_Paton }
  
  # Find the bands David Paton is a member of or associated with
  ?band dbo:bandMember ?person .
  ?band dbo:name ?artist .

  # Find band members for each artist
  ?band dbo:bandMember ?member .
}

UNION

# Query for Billy Lyall's associated musical artists and their members
SELECT DISTINCT ?artist ?member WHERE {
  VALUES (?person) { dbr:Billy_Lyall }
  
  # Find the bands Billy Lyall is a member of or associated with
  ?band dbo:bandMember ?person .
  ?band dbo:name ?artist .

  # Find band members for each artist
  ?band dbo:bandMember ?member .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:castMember ?actor .
  
  ?actor dbo:sport dbr:Soccer ;
         a dbo:Athlete .

  ?actor dbp:birthday ""1955-02-22""^^xsd:date .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Reneta Kamberova""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?role ?bandLabel WHERE {
  ?person rdfs:label ""Bob Thompson (musician)""@en .
  OPTIONAL { ?person dbo:occupation ?role . }
  OPTIONAL { ?person dbo:instrument ?role . }
  OPTIONAL { ?person dbo:bandMember ?band . }
  ?band rdfs:label ?bandLabel .
  
  FILTER(LANG(?person) = 'en')
  FILTER(LANG(?bandLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Successor of Yurii Khmelnytsky
SELECT ?successor WHERE {
    ?yuriikhmelnytsky dbo:successor ?successor .
    ?yuriikhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
}

UNION

# Part 2: Commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco
SELECT DISTINCT ?commander WHERE {
    ?jeanbaptist dbo:role ?war .
    ?war dbo:depicts ?tvshow .
    ?tvshow rdf:type dbo:TelevisionShow .
    ?war dbo:societalEvent true .
    
    ?jeanbaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
    ?commander dbo:commanded ?war .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?event WHERE {
  # Maria Anna of Bavaria's children
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  ?mariaAnna dbo:child ?child .
  
  # Check if the child is royalty and a commander in war
  ?child rdf:type dbo:Monarch ;
         dbo:militaryCommanderOf ?command .

  # Link to an event related to the Algerian War
  ?event dbo:relatedEvent ?algerianWar ;
         rdf:type dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .
  
  ?algerianWar dbr:Algerian_War .
  
  # Ensure the commander is linked to this event
  ?command dbo:event ?event .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary's predecessor
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Find Charles II of Naples' spouse
  ?spouse dbp:spouse dbr:Charles_II_of_Naples .

  # Ensure the predecessor and spouse are the same person
  FILTER (?predecessor = ?spouse)

  # Find their child (first generation)
  ?child dbo:parent ?predecessor .
  
  # Find the grandchild (second generation) of the predecessor/spouse
  ?grandchild dbo:parent ?child .

  # Ensure the grandchild is a royalty
  ?grandchild dbo:royalty true .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
# Step 1: Find the producer of ""Storm in a Teacup""
SELECT ?producer WHERE {
    ?film rdf:type dbo:Film .
    ?film rdfs:label ""Storm in a Teacup""@en .
    ?film dbo:producer ?producer .
}

# Assuming the result from step 1 gives us the URI for the producer, we use it in step 2

# Step 2: Find the birthplace of the identified producer
SELECT ?birthPlace WHERE {
    BIND(<URI_of_the_producer> AS ?person) . # Replace <URI_of_the_producer> with actual URI from step 1 result
    ?person rdf:type dbo:Person .
    ?person dbo:birthPlace ?birthPlace .
}
```

Note: The above SPARQL queries are structured in two parts. In practice, you would execute the first query to get the producer's URI and then use that URI in the second query to find their birthplace.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?rogerIII dbo:spouse ?elvira .
  ?rogerIII a dbo:Duke .
  ?rogerIII foaf:name ""Roger III""@en .

  ?parent dbo:child ?rogerIII .
  
  ?parentChild dbo:child ?parent .
  ?elviraChild dbo:child ?elvira .
  
  FILTER (?parentChild = ?elviraChild)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName
WHERE {
  ?person dbo:positionTitle ?title .
  ?person dbo:memberOf dbr:North_Carolina_Air_National_Guard .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:politicalAffiliation ?politics .
  
  FILTER CONTAINS(LCASE(?title), ""commander"") .
  FILTER EXISTS { ?office dbo:isPoliticalOffice true . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:sport dbr:Soccer .
  ?team rdfs:label ""Hong Kong C Team""@en .
  ?team dbo:coach ?manager .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant
WHERE {
  # Residence of Alberto Ruiz-Gallardón
  OPTIONAL { 
    dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizResidence.
    ?ruizResidence dbo:tenant ?tenant .
  }

  # Office related to Manuel Pinto da Costa's role in a military conflict and societal event
  OPTIONAL {
    dbr:Manuel_Pinto_da_Costa dbo:officeHolder ?officeHolderRole;
                               dbo:militaryConflict ?militaryConflict;
                               dbo:societalEvent ?societalEvent.
    ?officeHolderRole dbo:location ?pintoOffice.
    ?pintoOffice dbo:tenant ?tenant .
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?militaryForce WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?regiment dbp:name ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:participatedIn ?war .

  # Get military forces involved in those wars
  ?war dbo:militaryForce ?militaryForce .

  OPTIONAL {
    # Check for William Bayne as a commander in these wars
    ?commander dbp:name ""William Bayne""@en .
    ?commander dbo:commanded ?war .
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office WHERE {
    ?person dbo:nationality dbr:Spain .
    ?person dbo:residence dbr:Santiago_de_Compostela .
    ?person dbo:positionHeld ?office .
    FILTER(CONTAINS(LCASE(STR(?office)), ""president of the xunta de galicia 2009""))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child ?royalTitle WHERE {
  ?person dbo:spouse ?husband .
  ?husband foaf:name ""Hussein of Jordan"" .
  ?person foaf:name ""Muna al-Hussein"" .
  
  ?person dbo:child ?child .

  OPTIONAL { 
    ?child dbo:royalTitle ?royalTitle .
  }

  FILTER EXISTS {
    ?child rdf:type ?type .
    VALUES ?type { <http://dbpedia.org/ontology/Royal> }
  }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?successorName WHERE {
  # Find Yurii Khmelnytsky and his successor as Hetman of the Zaporozhian Cossacks
  dbr:Yuri_Khmelnitsky dbo:succeededBy ?successor .
  
  # Get the name of the successor
  ?successor rdfs:label ?successorName .

  # Ensure the successor was involved in the Great Turkish War
  OPTIONAL {
    ?successor dbo:participatedIn dbr:Great_Turkish_War .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Miguel_Maura dbo:party ?party .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:Poland .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,108,0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .

  FILTER (
    (?birthPlace = dbr:Grand_Duchy_of_Finland || ?birthPlace = dbr:Russian_Empire) &&
    ?deathPlace = dbr:Switzerland
  )
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Elena Žalinkevičaitė-Petrauskienė""@en ;
          dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,3,87,0.0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor ?association
WHERE {
  # Find movies/shows featuring Afeez Oyetoro
  ?movie dbo:starring dbr:Afeez_Oyetoro .
  
  # Get actors from these movies/shows
  ?movie dbo:starring ?actor .

  # Check for association with Tiwa Savage (Cynthia Ikponmwenosa Morgan)
  OPTIONAL {
    ?association dbo:associatedWith ?actor ;
                 dbo:associatedWith dbr:Tiwa_Savage .
  }
}
```",4,5,5,2,2,3,2,20,1,29,0,0.03333333333333333,1.0,0.06451612903225806
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?group rdfs:label ""Der Blau""@en .
  ?group a dbo:Group .
  ?group dbo:member ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?eleonoreFather ?royalChild ?fatherOfRoyalChild WHERE {
  # Step 1: Find Eleonore of Austria's father
  dbr:Eleonora_of_Austria dbo:parent ?eleonoreFather .

  # Step 2: Find Maria Anna of Bavaria (born 1574) and her royal child
  dbr:Maria_Anna_of_Bavaria_(1574-1616) dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch . }

  # Step 3: Identify the father of this royal child
  ?royalChild dbo:parent ?fatherOfRoyalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Promises to Keep""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playboyProfession ?abKyaHogaActor ?dispatchesFromElsewhereActor WHERE {
  # The Shadow's alter ego and profession
  dbr:Lamont_Cranston dbo:profession ?playboyProfession .

  # Actor in ""Ab Kya Hoga"" who is also a politician
  ?actor dbo:occupation dbr:Politician ;
         dbo:film dbr:Ab_Kya_Hoga .
  
  # Actor in ""Dispatches from Elsewhere""
  ?dispatchesActor dbo:film dbr:Dispatches_from_Elsewhere .

  # Ensure the actor is the same person
  FILTER(?actor = ?dispatchesActor)

  BIND(?actor AS ?abKyaHogaActor)
  BIND(?dispatchesActor AS ?dispatchesFromElsewhereActor)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountryLabel WHERE {
  # Find Thomas Letsch and his managerial role at VfL Bochum
  dbr:Thomas_Letsch dbo:managerOf dbr:VfL_Bochum .

  # Identify the leader of West Germany during the relevant period (Chancellor)
  ?leader dbo:country dbr:West_Germany ;
          dbo:positionTitle ""Chancellor""@en .
  
  # Determine the native country of the leader
  ?leader dbo:nationality ?nativeCountry .

  # Get the label for the native country
  ?nativeCountry rdfs:label ?nativeCountryLabel .
  FILTER(LANG(?nativeCountryLabel) = 'en')
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?profession 
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,721,4189,20859,0.14684317718940937,0.03341056533827618,0.05443563608909022
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find David Paton's associated musical artist
  dbr:David_Paton dbo:associatedBand ?artist1 .

  # Step 2: Find a band member of that artist
  ?member1 dbo:bandMember ?artist1 .
  
  # Step 3: Identify the writer of Wizards of Waverly Place soundtrack
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writer .

  # Step 4: Find the associated musical artist of that writer
  ?writer dbo:associatedBand ?artist2 .
  
  # Step 5: Find a band member who is both an artist and a musical artist
  ?member2 dbo:bandMember ?artist2 ;
           rdf:type dbo:Artist, dbo:MusicalArtist .

  FILTER(?member1 = ?member2)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnusBirthPlace ?residentBirthPlace WHERE {
  # Find the birthplace of an alumnus from Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  ?alumnus dbo:birthPlace ?alumnusBirthPlace .

  # Find the birthplace of a resident of Sofia
  ?resident dbp:residence dbr:Sofia .
  ?resident dbo:birthPlace ?residentBirthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Steven Kapur"" .
  
  OPTIONAL { 
    ?person dbo:alias ?alias .
    FILTER regex(?alias, ""Artist"", ""i"")
    BIND(?alias AS ?artistName)
  }
  
  OPTIONAL {
    ?person foaf:name ?artistName .
    FILTER regex(?artistName, ""Artist"", ""i"")
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bayneMilitaryForce ?capeFinisterreForces ?cambridgeshireCommander WHERE {
  # Military force of William Bayne (Royal Navy officer)
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?bayneWar .
  ?bayneWar dbo:participatingUnit ?bayneMilitaryForce .

  # Military force involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatingUnit ?capeFinisterreForces .

  # Commander of the 30th (Cambridgeshire) Regiment of Foot
  dbr:30th_Regiment_of_Foot dbp:militaryConflict ?cambridgeshireWar .
  ?cambridgeshireWar dbo:commander ?cambridgeshireCommander .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?title WHERE {
  ?person rdfs:label ""Saw Min Phyu""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royal"")) }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbp:title ""Earl of Derby""@en .
  
  # Identify his parent who is both a politician and an office holder
  ?parent dbo:child ?edward ;
          dbo:officeHolder ?office ;
          dbo:politician ?politics .

  # Find the child of this parent
  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Theodor_Heuss a dbo:Person .
  dbr:Theodor_Heuss dbo:presidentOf dbr:Germany .
  dbr:Theodor_Heuss dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?thunderbirds ?curran ?association
WHERE {
  ?thunderbirds rdf:type dbo:Band ;
                rdfs:label ""The Fabulous Thunderbirds""@en .
  
  ?curran rdf:type dbo:MusicalArtist ;
          rdfs:label ""Nick Curran""@en .

  OPTIONAL { 
    ?association dbo:associatedBand ?thunderbirds .
    ?association dbo:associatedMusicalArtist ?curran .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workCountry WHERE {
  # Find Hu Jieqing's spouse
  dbr:Hu_Jieqing dbo:spouse ?spouse .

  # Check if the spouse is a writer
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))

  # Identify any notable work by this writer
  ?spouse dbo:notableWork ?work .

  # Find the country associated with this work
  ?work dbo:country ?workCountry .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musician WHERE {
  # Rod Argent's profession
  dbr:Rod_Argent dbo:profession dbr:Singer-songwriter .
  
  # Find musicians with the same profession as Rod Argent
  ?musician dbo:profession dbr:Singer-songwriter .

  # Association with The Beatles
  OPTIONAL { 
    ?beatlesArtist dbo:associatedBand dbr:The_Beatles .
    FILTER(?beatlesArtist = ?musician)
  }
  
  FILTER(?musician != dbr:Rod_Argent) # Exclude Rod Argent himself
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
  ?person (dbo:birthPlace|dbo:nationality) dbr:Grand_Duchy_of_Finland .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",2,2,3,1,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerOfTeam ?team .
  
  ?player1 dbo:playerForTeam ?team ;
           rdfs:label ""Juan Carlos Molina""@en .

  ?player2 dbo:playerForTeam ?team ;
           rdfs:label ""Sergio Agüero""@en .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?princessSaraParent ?princeOmarParent WHERE {
  ?sara a dbo:Person ;
        foaf:name ""Princess Sara bint Faisal""@en .
  ?sara dbo:parent ?princessSaraParent .

  ?omar a dbo:Person ;
        foaf:name ""Prince Omar bin Faisal""@en .
  ?omar dbo:parent ?princeOmarParent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?spouse
WHERE {
  # Charles I of Hungary and his father
  ?charlesI dbo:father ?father .
  FILTER (str(?charlesI) = ""Charles_I_of_Hungary"")

  # Father's parent (Grandfather)
  ?father dbo:parent ?grandfather .

  # Check if grandfather is royalty
  ?grandfather rdf:type dbo:Monarch .

  # Charles II of Naples and his spouse
  ?charlesII dbp:spouse ?spouse .
  FILTER (str(?charlesII) = ""Charles_II_of_Naples"")

  # Match the same person for both roles
  FILTER (?grandfather = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  OPTIONAL { ?party dbo:leader ?leader . }
  OPTIONAL { ?party dbp:leader ?leader . }

  FILTER EXISTS { ?leader rdf:type dbo:Politician . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Republican Party""@en .
  
  ?person dbo:member ?party .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find Philip I, Prince of Taranto's father
  ?philip dbo:father ?father .
  
  FILTER(STRSTARTS(STR(?philip), ""http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto""))

  # Get the spouse of Philip I's father
  ?father dbo:spouse ?spouse .

  # Find a child of Béla IV of Hungary who is royalty
  ?belavChild dbo:childOf ?belasChild .
  ?belasChild dbp:parent ?belaIV .
  
  FILTER(STRSTARTS(STR(?belaIV), ""http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary""))

  # Ensure the spouse is royalty
  ?spouse rdfs:subClassOf* dbo:RoyalFamily .

  # Linking the child of Béla IV's child to Philip I's father's spouse
  ?belavChild dbp:parent ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?spouse WHERE {
  ?philip1 rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip1 dbo:child ?person1 .
  ?person1 rdfs:label ""Charles Martel of Anjou""@en .

  ?person1 dbo:parent ?father .
  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?realName WHERE {
  # Find the band associated with Kim Wilson
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:band ?band .

  # Find the real name of The Fabulous Thunderbirds
  ?group rdfs:label ""The Fabulous Thunderbirds""@en .
  OPTIONAL { ?group rdfs:label ?realName . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
# Query to find the parent of Amy Arbus
SELECT ?parent WHERE {
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  ?amyArbus dbo:parent ?parent .
}

UNION

# Query to find actors in ""Judgment: The Trial of Julius and Ethel Rosenberg""
SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?athlete WHERE {
  # Get Marty Pollio's birthdate
  ?martyPollio dbo:birthDate ?birthdate .
  
  FILTER (str(?martyPollio) = ""Marty_Polloi"") .

  # Find athletes with the same birthdate as Marty Pollio
  ?athlete rdf:type dbo:Athlete ;
           dbo:birthDate ?birthdate .
}
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?individual WHERE {
  # Alexander of Württemberg's lineage
  ?alexander dbo:child ?child1 .
  FILTER(STR(?alexander) = ""Alexander_of_W%C3%BCrttemberg_(1804-1881)"")
  
  ?child1 dbo:child ?grandchild1 .
  
  ?grandchild1 dbo:child ?greatGrandchild .

  # Archduke Charles Louis of Austria's lineage
  ?charlesL dbo:child ?child2 .
  FILTER(STR(?charlesL) = ""Archduke_Charles_Louis_of_Austria"")
  
  ?child2 dbo:child ?grandchild2 .

  # Common individual in both lineages
  ?greatGrandchild rdfs:label ?individualLabel .
  ?grandchild2 rdfs:label ?individualLabel .

  # Predecessor of Carl, Duke of Württemberg
  ?individual dbo:predecessor ?carlDuke .
  FILTER(STR(?carlDuke) = ""Carl,_Duke_of_W%C3%BCrttemberg"")

  # Must be royalty
  ?individual rdf:type ?royaltyType .
  VALUES ?royaltyType { dbo:Monarch dbo:RoyalFamilyMember }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .
  
  ?child dbo:childOf ?minyeKyawswa .

  OPTIONAL { 
    ?child dbo:parent ?parent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneForce ?regimentWar ?calderForce WHERE {
  # William Bayne's military force during a war
  OPTIONAL {
    ?bayneEvent dbo:militaryConflict ?bayneWar .
    ?bayneWar dbo:commander dbr:William_Bayne_(Royal_Navy_officer) .
    ?bayneEvent dbo:member ?bayneForce .
  }

  # 30th (Cambridgeshire) Regiment of Foot's war and commander
  OPTIONAL {
    ?regimentEvent dbo:militaryConflict ?regimentWar .
    ?regimentEvent dbo:commander ?regimentCommander .
    ?regimentEvent dbo:member dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  }

  # Robert Calder's military force
  OPTIONAL {
    ?calderEvent dbo:militaryConflict ?calderWar .
    ?calderEvent dbo:member ?calderForce .
    ?calderWar dbo:commander dbr:Robert_Calder .
  }
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity ?label WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:timeZone ?tz . }
  FILTER(CONTAINS(LCASE(STR(?tz)), ""japan standard time"") || CONTAINS(LCASE(STR(?tz)), ""jst""))
  ?entity rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
ORDER BY ?label
```",2,2,3,2,1,3,2,20,0,0,8916,0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""John McDermott (American artist)""@en .
  ?person dbo:birthPlace ?birthPlace . # To ensure we have the correct John McDermott
  ?person dbo:deathPlace ?deathPlace .
  FILTER NOT EXISTS { ?deathPlace rdf:type dbp:PopulatedPlace } .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Find children of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel
  ?person dbo:spouse dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttle .
  ?person dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttle .

  # Step 2: Find spouse of Duchess Luise of Brunswick-Wolfenbüttel
  ?luisespouse dbo:spouse dbr:Duchess_Luise_of_Brunswick-Wolfenbüttle .
  
  # Step 3: Find the spouse of that person (the spouse of the spouse)
  ?secondSpouse dbo:spouse ?luisespouse .

  # Step 4: Check if there is a common child between Ferdinand Albert II's children and the second spouse
  ?child dbo:parent ?person .
  ?child dbo:parent ?secondSpouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity ?label ?typeLabel
WHERE {
  ?entity dbo:country dbpedia:Colombia .
  ?entity rdfs:label ?label .
  OPTIONAL { ?entity a ?type . ?type rdfs:label ?typeLabel }
  FILTER (lang(?label) = 'en')
}
ORDER BY ?label
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,2141,0,0.0,0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war ?entityInBirthPlace WHERE {
  # Find the awardee of a notable award in 2025
  ?awardee dbo:dateReceived ""2025""^^xsd:gYear ;
          dbo:award dbr:Notable_Award .

  OPTIONAL { 
    ?awardee dbo:wikiPageWikiLink ?war .
  }

  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find entities in the birthplace
  ?entityInBirthPlace dbo:location ?birthPlace .
}
```

Note: Replace `dbr:Notable_Award` with the specific award if known. The query assumes a notable award is linked to an awardee in 2025 and that DBpedia contains relevant data.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?francis rdf:type dbo:Duke ;
           rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  ?parent dbo:child ?francis .
  
  ?parent dbo:spouse ?spouse .

  FILTER EXISTS { ?spouse rdf:type dbo:Royalty . }
  FILTER EXISTS { ?spouse rdf:type dbo:Noble . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring ?hepburn .
  ?hepburn foaf:name ""Audrey Hepburn""@en .
  
  ?movie dbo:director ?kaminski .
  ?kaminski foaf:name ""Janusz Kamiński""@en .

  ?movie dbo:starring ?actor .
  FILTER(?actor != ?hepburn)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?s dbp:name ""Sofía Petro""@en .
  ?s dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # Find all children of the identified father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # George Ducas as a commander
  dbr:George_Ducas dbo:positionHeld ?commanderPosition .
  
  # Michał Kazimierz Pac involved in a military conflict
  dbr:Mikołaj_Kazimierz_Pac dbo:participatedIn ?militaryConflict .

  # The force involved in the military conflict
  ?force dbo:partOf ?militaryConflict .
  
  # Successor of George Ducas within this force
  ?successor dbo:succeededBy dbr:George_Ducas ;
             dbo:positionHeld ?commanderPosition ;
             a dbo:Politician ;
             dbo:officeHolder true .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?spouse WHERE {
  ?carrie a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  
  OPTIONAL { ?carrie dbo:occupation ?profession . }
  OPTIONAL { ?carrie dbo:spouse ?spouse . }

  FILTER (lang(?carrieLabel) = 'en')
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?event
WHERE {
  # Step 1: Identify Maria Anna of Bavaria's child who is royalty and father of Eleonore of Austria
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en .
  
  ?mariaAnna dbo:child ?child .
  ?child a dbo:Royalty ;
         dbo:spouse ?eleonoreMother .

  ?eleonoreMother dbo:child dbr:Eleonore_of_Austria_(1587–1655) .

  # Step 2: Determine the father of this child
  ?child dbo:father ?father .
  
  # Step 3: Find an entity that is a societal event, event, and television show related to the 2nd Dragoon Regiment (France)
  ?event a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow .

  ?event dbo:relatedTo dbr:2nd_Dragoon_Regiment_(France) .
  
  # Linking the father to the event
  ?father dbo:associatedWith ?event .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shirley Stoler""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?dawitI { dbr:Dawit_I }
  ?dawitI dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?location WHERE {
  # Identify Jamsetji Tata's notable work related to India
  dbr:Jamsetji_Tata dbo:founded ?company .
  
  # Ensure the company is associated with a location in India
  ?company dbo:location ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""india"") || CONTAINS(LCASE(STR(?location)), ""jamshedpur""))

  # Return the work and its location
  BIND(?company AS ?work)
}
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Cecily_Ann_Bell 
    dbr:Glenn_Youngkin 
    dbr:Vince_Gilligan
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:musicalArtistIn ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .
  
  ?martin dbo:parent ?father .

  ?father dbo:child ?child .
  
  ?child dbo:royalty ?true .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessorLabel ?grandchildLabel 
WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse
  ?helena dbo:spouse ?spouse .
  VALUES ?helena { <http://dbpedia.org/resource/Helena_of_Austria> } .

  # Step 2: Find the child of the spouse who is royalty
  ?spouseChild dbo:child ?royalChild ;
               rdfs:label ?spouseChildLabel .
  FILTER CONTAINS(LCASE(?spouseChildLabel), ""archduke"") || 
        CONTAINS(LCASE(?spouseChildLabel), ""archduchess"")

  # Step 3: Find the predecessor of this royal child
  ?royalChild dbo:parent ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .

  # Step 4: Identify Archduke Charles Louis of Austria's child who is royalty
  ?charlesLouis dbo:child ?charlesRoyaltyChild ;
                rdfs:label ?charlesLouisLabel .
  VALUES ?charlesLouis { <http://dbpedia.org/resource/Charles_Louis_of_Austria> } .
  FILTER CONTAINS(LCASE(?charlesRoyaltyChild), ""archduke"") || 
        CONTAINS(LCASE(?charlesRoyaltyChild), ""archduchess"")

  # Step 5: Find the grandchild of this royal child
  ?charlesRoyaltyChild dbo:child ?grandchild .
  ?grandchild rdfs:label ?grandchildLabel .

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?associatedArtist WHERE {
  VALUES ?tupac { dbr:Tupac_Shakur }
  
  ?tupac dbo:profession ?profession .
  FILTER (str(?profession) = ""musician"")

  OPTIONAL {
    ?tupac dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerAStarIsBorn ?producerTomSawyer ?fictionalCharacter ?professionalAlterEgo
WHERE {
  # Producer of ""A Star Is Born"" (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Producer of ""The Adventures of Tom Sawyer"" (1938)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Fictional character associated with Kent Allard
  ?fictionalCharacter foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""kent allard"") || CONTAINS(LCASE(?name), ""alter ego"")).

  # Professional alter ego of the fictional character
  OPTIONAL { ?fictionalCharacter dbo:alterEgo ?professionalAlterEgo }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?album ?actor WHERE {
  # Find songs by T.I.
  ?song dbo:artist dbr:T.I. ;
        a dbo:Song .
  
  # Get the album of each song
  ?song dbo:album ?album .

  # Retrieve actors associated with these albums
  OPTIONAL { 
    ?album dbo:contributor ?actor .
    FILTER (isLiteral(?actor) && regex(str(?actor), ""Actor"", ""i""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?name WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:birthPlace dbr:Central_Region_(Ghana) .
  OPTIONAL { ?artist foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Ustad Bismillah Khan's birthplace
SELECT ?birthPlace WHERE {
  dbr:Ustad_Bismillah_Khan dbo:birthPlace ?birthPlace .
}

UNION

# Query for Smita Patil's birthplace
SELECT ?birthPlace WHERE {
  dbr:Smita_Patil dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  VALUES ?band { dbr:Cavalera_Conspiracy }
  
  ?band dbo:member ?person .
  ?person dbo:associatedBand ?artist .

  FILTER EXISTS { ?artist a dbo:MusicalArtist . }
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?club a dbo:SoccerClub ;
        rdfs:label ""VfL Bochum""@en .
  OPTIONAL { 
    ?club dbp:manager ?manager .
  }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type rdfs:Class .
  FILTER EXISTS { ?birthPlace rdfs:subClassOf* dbo:Settlement }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesMartel ?grandchildOfPredecessor ?spouseOfCharlesII
WHERE {
  # Step 1: Find the parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Step 2: Identify the predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessorOfStephenV .

  # Step 3: Find the grandchild (royalty) of this predecessor
  ?childOfPredecessor dbo:parent ?predecessorOfStephenV .
  ?grandchildOfPredecessor dbo:parent ?childOfPredecessor .
  FILTER EXISTS { ?grandchildOfPredecessor a dbo:Monarch } # Ensure the grandchild is royalty

  # Step 4: Identify the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Step 5: Find intersection
  FILTER (?parentOfCharlesMartel = ?grandchildOfPredecessor && ?parentOfCharlesMartel = ?spouseOfCharlesII)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?alterEgoReference WHERE {
  # Step 1: Identify Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Step 2: Determine the father of Baeda Maryam I's child
  ?father dbo:child ?child .
  
  # Step 3: Identify the grandfather (father of the father)
  ?grandfather dbo:child ?father .
  
  # Step 4: Ensure the grandfather is a royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder dbr:Office_Holder .

  # Step 5: Reference to The Shadow (alter ego of Lamont Cranston)
  OPTIONAL {
    ?shadowResource rdfs:label ""The Shadow""@en .
    ?grandfather dbo:reference ?shadowResource .
  }
  
  # Return the grandfather and any reference to The Shadow
  FILTER EXISTS { ?shadowResource rdfs:label ""The Shadow""@en }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hashibaWar ?koichiroWar WHERE {
  # Find Hashiba Hidekatsu and associated wars
  OPTIONAL {
    ?hashiba dbr:Hashiba_Hidekatsu .
    ?hashiba dbo:participatedIn ?hashibaWar .
  }

  # Find Koichirō Matsuura and check for any associated wars
  OPTIONAL {
    ?koichiro dbr:Koichirō_Matsuura .
    ?koichiro dbo:birthName ""Koichirō""^^xsd:string .
    ?koichiro dbo:participatedIn ?koichiroWar .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:birthName ""Roy Leonardo Barreras Montealegre""@en .
  ?person a dbo:Politician .
  ?person dbo:partyAffiliation ?party .
}
```",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Antonios Varthalitis""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
}
```",2,3,3,2,1,2,3,28,0,0,12,0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName ?spouseUri WHERE {
  ?person a dbo:Person ;
          foaf:name ""Prince Augustus William of Prussia""@en .
  
  ?person dbo:spouse ?spouse .

  ?spouse foaf:name ?spouseName ;
          dbp:wikiPageRedirects ?redirect .
  
  OPTIONAL { 
    FILTER NOT EXISTS { ?redirect ?p ?o }
  }

  BIND(STR(?spouse) AS ?spouseUri)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Tupac Shakur's associated musical artist
  ?tupac a dbo:MusicalArtist ;
         foaf:name ""Tupac Amaru Shakur""@en .
  ?tupac dbo:associatedMusicalArtist ?artist1 .

  # Rocky Dawuni's associated musical artist
  ?rocky a dbo:MusicalArtist ;
         foaf:name ""Rocky Dawuni""@en .
  ?rocky dbo:associatedMusicalArtist ?artist2 .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolder ?office .
  
  ?person dbo:commanderInThirdTaiwanStraitCrisis true .

  ?work dbo:author ?person ;
        a dbo:Book .

  FILTER EXISTS { ?person rdfs:label ""Hillary Clinton""@en }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the manager of VfL Bochum
  ?team dbo:manager ?manager .
  
  # Ensure the team is VfL Bochum
  FILTER(STR(?team) = ""http://dbpedia.org/resource/VfL_Bochum"")

  # Filter by birthdate and place of birth
  ?manager dbp:birthday ?birthday ;
           dbo:birthPlace ?birthplace .

  FILTER (YEAR(xsd:date(?birthday)) = 1968 && MONTH(xsd:date(?birthday)) = 8 && DAY(xsd:date(?birthday)) = 26)
  FILTER(STR(?birthplace) = ""http://dbpedia.org/resource/West_Germany"")

  # Ensure the person is a sports manager
  ?manager dbo:occupation dbr:Soccer_manager .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Find the native region of the award ""Coro de la Pontificia Universidad Católica de Puerto Rico""
  OPTIONAL { 
    ?award dbo:nativeRegion ?region .
    FILTER(CONTAINS(LCASE(STR(?award)), ""coro de la pontificia universidad católica de puerto rico""))
  }

  # Find the birthplace of Ackquille Jean Pollard (Bobby Shmurda)
  ?person dbp:birthPlace ?region .
  FILTER(CONTAINS(LCASE(STR(?person)), ""ackquille jean pollard""))

  # Ensure the region is an American state and a settlement
  ?region dbo:country dbr:United_States_of_America ;
          rdf:type/dbo:stateOrProvince|dbo:PopulatedPlace .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference ?member
WHERE {
  ?group rdfs:label ""Der Blau""@en .
  
  # Get references to the group
  OPTIONAL { 
    ?group dbp:wikiPageWikiLink ?reference .
  }
  
  # Get members of the group, if applicable
  OPTIONAL {
    ?group dbo:member ?member .
  }
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist(s)
  ?bobbyShmurda dbo:associatedBandMember ?band .
  
  # Step 2: Find a native of Florida who is also a musical artist and a member of the band
  ?person dbo:birthPlace ?florida ;
          dbo:associatedBandMember ?band ;
          foaf:name ?name .

  FILTER EXISTS { 
    ?florida rdfs:label ""Florida""@en .
  }

  # Step 3: Retrieve the birth name of this person
  OPTIONAL {
    ?person foaf:nick ?birthName .
  }
  
  # Filter to ensure we are looking at Bobby Shmurda's specific resource
  VALUES ?bobbyShmurda { <http://dbpedia.org/resource/Bobby_Shmurda> }

}
ORDER BY ?name
LIMIT 1
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?tvShow WHERE {
  ?work dbo:actor dbr:Richard_E._Grant .
  ?work rdf:type dbo:TelevisionSeries .
  BIND(?work AS ?tvShow)
}
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?grandfather WHERE {
  # Dawit I's child
  dbr:Dawit_I dbo:child ?child .
  
  # Child of Dawit I who is the father of Na'od
  ?child dbo:spouse ?naodMother .
  ?naodMother dbo:child dbr:Na'ad_I .

  # Grandfather (Father of the Father)
  ?child dbo:parent ?grandfather .

  # Ensure grandfather was royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional (GROUP_CONCAT(?movie ; separator="", "") AS ?movies)
WHERE {
  # Find the author of ""Smartbomb""
  ?author dbo:book dbr:Smartbomb .
  
  # Find the actor from the film ""ATL""
  ?atlActor dbo:film dbr:ATL .

  # Find a person who is both an actor in movies with the above individuals
  ?person dbo:profession ?professional .
  ?movie dbo:starring ?person ;
         (dbo:starring|dbo:actor) ?author ;
         (dbo:starring|dbo:actor) ?atlActor .

}
GROUP BY ?professional
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify the commander in Siege of Mukha
  ?siege dbo:eventParticipant ?commander .
  FILTER(CONTAINS(LCASE(STR(?siege)), ""siege of mukha"")) .

  # Step 2: Ensure the commander is royalty
  ?commander a dbo:Monarch .

  # Step 3: Find the parent and child, both royals
  ?parent dbo:child ?commander .
  ?commander dbo:child ?child .
  
  FILTER EXISTS { ?parent a dbo:Monarch } .
  FILTER EXISTS { ?child a dbo:Monarch } .

  # Step 4: Connect to Lamont Cranston's alter ego, ""The Shadow""
  ?shadow dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  
  # Ensure the child is referenced in relation to The Shadow
  ?child dbo:reference dbr:The_Shadow .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person WHERE {
  # Alfonso VI's grandchild
  ?alfonsoVI dbo:spouse ?spouse .
  ?alfonsoVI dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # William I's royal child
  ?williamI dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Roger III's sibling
  ?rogerIII dbo:parent ?parentRoger .
  ?sibling dbo:parent ?parentRoger .
  
  # Intersection of the above conditions
  FILTER (?grandchild = ?person)
  FILTER (?person = ?sibling)
  FILTER (?person = ?royalChildParent)

  # Person is parent to William I's royal child
  ?person dbo:child ?royalChild .

}
```",6,7,7,2,3,3,3,71,0,5,1,0.0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of The Alan Parsons Project
  ?project dbo:bandName ""The Alan Parsons Project""@en .
  
  OPTIONAL {
    ?project dbo:bandMember ?member .
    ?member rdfs:label ?bandMember .
    FILTER(LANG(?bandMember) = 'en')
  }
  
  # Find associated musical artist of Stuart McBeath Tosh
  ?person rdfs:label ""Stuart McBeath Tosh""@en .
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?artist .
    ?artist rdfs:label ?associatedArtist .
    FILTER(LANG(?associatedArtist) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace ?referenceToOrder
WHERE {
  # Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?birthplace .

  OPTIONAL {
    # Check for any reference to the Order of the Medjidie related to the birthplace
    ?birthplace dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ""Order_of_the_Medjidie""@en .
    BIND(""Reference found"" AS ?referenceToOrder)
  }

  OPTIONAL {
    # Check for any notable people from the birthplace associated with the Order of the Medjidie
    ?person dbo:birthPlace ?birthplace ;
            dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ""Order_of_the_Medjidie""@en .
    BIND(""Notable person associated"" AS ?referenceToOrder)
  }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Find the father of William II of Sicily
  ?william2 dbo:father ?fatherOfWilliam2 .
  
  # Find children of Alfonso VI
  ?alfonso6 dbo:child ?childOfAlfonso6 .

  # Find parent of Roger III, Duke of Apulia
  ?roger3 rdfs:subClassOf* ?parentOfRoger3 .

  # Ensure the father of William II is a child of one of Alfonso VI's children and also a parent of Roger III
  ?fatherOfWilliam2 = ?childOfAlfonso6 .
  ?fatherOfWilliam2 = ?parentOfRoger3 .

  # Bind the common entity to the result
  BIND(?fatherOfWilliam2 AS ?commonEntity)

  # Filter for specific individuals
  VALUES ?william2 { <http://dbpedia.org/resource/William_II_of_Sicily> }
  VALUES ?alfonso6 { <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the birth place of a notable awardee related to Vince Gilligan (Emmy Award)
SELECT ?person ?birthPlace WHERE {
  ?award dbr:Emmy_Award .
  ?award dbo:recipient ?person .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for the birth place of Cece Bell, author of El Deafo
SELECT ?author ?birthPlace WHERE {
  dbr:Cecily_Bell dbo:birthPlace ?birthPlace .
  BIND(dbr:Cecily_Bell AS ?author)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
           foaf:name ""Dorothea of Denmark"" ;
           dbp:title ""Electress Palatine""@en .

  # Parent of Dorothea
  ?parent dbo:child ?dorothea .
  
  # Father of that parent (assuming male gender)
  ?parent dbo:father ?father .
  FILTER EXISTS { ?father a dbo:Person . }
  
  # Commander in Siege of Padua
  ?commander a dbo:Person ;
             dbp:occupation ""Commander""@en ;
             dbo:participatedIn <http://dbpedia.org/resource/Siege_of_Padua> .

  # Child of the commander is Dorothea's parent
  ?parent dbo:child ?commander .
  
  # Ensure the father is royalty
  ?father dbo:title ?title .
  FILTER regex(?title, ""King|Queen|Prince|Princess|Duke|Duchess"", ""i"")
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  { 
    ?nickCurran a dbo:MusicalArtist ;
                foaf:name ""Nick Curran""@en .
    ?nickCurran dbo:associatedMusicalArtist ?artist .
  }
  
  UNION
  
  { 
    ?kimWilson a dbo:MusicalArtist ;
               foaf:name ""Kim Wilson""@en .
    ?band dbo:bandMember ?kimWilson .
    ?band foaf:name ?artist .
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  # Max Born's information
  dbr:Max_Born a dbo:Person ;
               dbo:almaMater ?institution .

  # Nobel Prize in Physics related to Max Born
  OPTIONAL { 
    ?nobelPrize dbo:laureate [dbo:almaMater ?institution] .
    FILTER EXISTS {
      ?nobelPrize dbo:year ""1954""^^xsd:gYear ;
                  a dbo:NobelPrizeInPhysics .
    }
  }

  # Ensure the institution is an educational entity
  ?institution a dbo:EducationalOrganization .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?fullName WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Princess Margaret, Countess of Snowdon""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER(CONTAINS(LCASE(?birthName), ""hon. mary frances bowes-lyon""))
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?person dbo:almaMater dbr:Eton_College .
  ?person dbp:child ?politician .
  ?politician dbo:spouse ?victorStanley .
  ?victorStanley foaf:name ""Victor Stanley"" .
  FILTER (CONTAINS(LCASE(?victorStanley), LCASE(""Royal Navy officer"")))
  ?politician rdf:type dbo:Politician .
  ?politician dbp:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person a foaf:Person ;
          foaf:name ""Nicholas Michael Curran""@en .
  
  FILTER EXISTS { ?person dbo:musicalArtist ?artist }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
# Query 1: Get the nickname of the Russia national football team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
    dbr:Russia_national_football_team dbo:nickname ?nickname .
}

# Query 2: Find a player from the Russia national football team who wrote ""The First Glove""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
    ?player dbo:team dbr:Russia_national_football_team .
    ?player dbo:autobiography dbr:The_First_Glove ;
            a dbo:Person .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?event dbo:militaryConflictParticipant ?regiment ;
         a dbo:MilitaryEvent .

  ?regiment dbp:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?profession WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:givenName ""John"" . }
  OPTIONAL { ?person foaf:surname ""Boxer"" . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,2,9,20,258186,39620,7.745753390703547e-05,0.0005045408678102926,0.00013429759002974692
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .

  FILTER (?date = ""1981-12-01""^^xsd:date)
  
  OPTIONAL { ?person dbo:sportTeam ?team . }
  OPTIONAL { ?person dbo:managerOf ?managedTeam . }

  # Ensure the person is also a soccer manager
  OPTIONAL {
    ?person dbo:SoccerManager .
  }
}
ORDER BY ?name
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandLabel ?nickCurranRealName ?nickCurranStageName WHERE {
  # Find Kim Wilson's band
  ?kimWilson a dbo:Musician ;
             foaf:familyName ""Wilson"" ;
             foaf:givenName ""Kim"" .
  
  ?kimWilson dbo:band ?band .
  ?band rdfs:label ?bandLabel .

  FILTER(CONTAINS(LCASE(?bandLabel), ""fabulous thunderbirds""))

  # Find Nicholas Michael Curran's real and stage names
  ?nickCurran a dbo:Musician ;
              foaf:givenName ""Nicholas"" ;
              foaf:familyName ""Curran"" .
  
  OPTIONAL {
    ?nickCurran rdfs:label ?nickCurranStageName .
  }
  
  BIND(CONCAT(STR(?nickCurran), STR(?nickCurran)) AS ?nickCurranRealName)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?settlement WHERE {
  # Identify Linda Miller as an actress
  ?linda a dbo:Actor ;
         foaf:name ""Linda Miller"" ;
         dbo:birthPlace ?place .

  # Find her child
  ?linda dbo:spouse ?partner .
  ?partner dbo:child ?child .

  # Ensure the child is American and connected to a settlement
  ?child dbp:nationality dbr:United_States ;
         dbo:residence ?settlement .

  # Connect to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?settlement rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""coro de la pontificia universidad católica de puerto rico""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?archbishop ?archbishopName WHERE {
  dbr:Santiago_de_Compostela dbo:archbishop ?archbishop .
  ?archbishop rdfs:label ?archbishopName .
  FILTER (lang(?archbishopName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  FILTER (CONTAINS(LCASE(str(?movie)), 'rustlers' rhapsody'))
  
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Fabulous Thunderbirds""@en .
  
  OPTIONAL { 
    ?band foaf:name ?realName .
  }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producerName ?profession 
WHERE {
  ?show dbp:name ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .
  ?producer foaf:name ?producerName .
  OPTIONAL { ?producer dbo:occupation ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderParty
WHERE {
  # Find Manuel Pinto da Costa's office as a commander in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:office ?commanderOffice .
  ?commanderOffice rdf:type dbo:MilitaryCommand .
  ?militaryConflict dbo:commander dbr:Manuel_Pinto_da_Costa ;
                   rdf:type dbo:MilitaryConflict .

  # Find Miguel Maura's leadership role in a political party
  dbr:Miguel_Maura dbo:leaderParty ?leaderParty .
  ?leaderParty rdf:type dbo:PoliticalParty .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
    # Step 1: Find Mariclare Costello's spouse
    dbr:Mariclare_Costello dbo:spouse ?spouse .

    # Step 2: Identify children of the spouse
    ?child dbo:parent ?spouse .
    
    # Step 3: Determine parents of these children (including non-spouse parent)
    ?child dbo:parent ?otherParent .

    # Step 4: Find works featuring Herschel Bernardi
    dbr:Herschel_Bernardi dbo:starring ?work .

    # Step 5: Identify actors in the same work as Herschel Bernardi who are also parents of Mariclare Costello's spouse's child
    ?work dbo:actor ?actor .
    
    FILTER(?otherParent != ?spouse) # Ensure we're considering the non-spouse parent

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativeCountry WHERE {
  # Identify VfL Bochum as a soccer club and find its manager in the 2007-08 season
  dbr:VfL_Bochum dbo:sportTeamSeason dbr:2007%E2%80%9308_VfL_Bochum_season .
  dbr:2007–08_VfL_Bochum_season dbo:manager ?manager .

  # Ensure the manager is a person
  ?manager rdf:type dbo:Person .

  # Find out if the manager's native country is West Germany
  ?manager dbp:nationality dbr:West_Germany .
  
  # Ensure VfL Bochum is categorized as a soccer club and sports organization
  dbr:VfL_Bochum rdf:type dbo:SoccerClub ;
                 rdf:type dbo:SportsOrganization .

  # Get the native country of the manager
  ?manager dbp:nationality ?nativeCountry .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?child dbo:parentArchdukeOfAustria <http://dbpedia.org/resource/Charles_Louis,_Archduke_of_Austria> .
  ?child rdf:type ?type .
  FILTER (strstarts(str(?type), ""http://dbpedia.org/ontology/Monarch"") || 
          strstarts(str(?type), ""http://dbpedia.org/ontology/RoyalFamilyMember""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessorLabel WHERE {
  # Philipp Albrecht, Duke of Württemberg's child
  ?philippAlbrechtChild dbo:childOf ?philippAlbrecht .
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .

  # Child of Philipp Albrecht's child (grandchild)
  ?grandchild1 dbo:childOf ?philippAlbrechtChild .

  # Duke Philipp of Württemberg's child
  ?dukePhilippChild dbo:childOf ?dukePhilipp .
  ?dukePhilipp rdfs:label ""Duke Philipp of Württemberg""@en .

  # Child of Duke Philipp's child (grandchild)
  ?grandchild2 dbo:childOf ?dukePhilippChild .

  # Archduke Charles Louis of Austria's great-grandchild
  ?archdukeChild dbo:childOf ?charlesLouis .
  ?charlesLouis rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?greatGrandchild dbo:childOf ?archdukeChild .

  # Ensure the individual is royalty
  ?individual dbo:royalty true ;
              dbo:childOf ?grandchild1, ?grandchild2, ?greatGrandchild .

  # Find the predecessor (parent) of this individual
  ?predecessor dbo:childOf ?individual .
  
  # Get labels for output
  ?predecessor rdfs:label ?predecessorLabel .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?film a dbo:Film ;
        rdfs:label ""The Sky Ranger""@en .
  FILTER(CONTAINS(LANG(?film), ""1928"")) .
  
  ?film dbo:starring ?person .
  ?person foaf:name ?actorName .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?profession
WHERE {
  # Find actor in ""Rustlers' Rhapsody""
  ?film dbo:title ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .

  # Get Frédéric Bouraly's profession
  ?person foaf:name ""Frédéric Bouraly""@en .
  ?person foaf:jobTitle ?profession .
  
  FILTER(?actor != ?person) # Ensure we are not comparing the same person

}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parentLabel WHERE {
  ?photographerClass rdfs:subClassOf+ ?parentClass .
  ?photographerClass rdfs:label ""Photographer""@en .
  FILTER (lang(?photographerClass) = 'en')
  ?parentClass rdfs:label ?parentLabel .
  FILTER (lang(?parentLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist (STR(?name) AS ?name)
WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:name ?name .
  ?artist dbo:birthPlace dbr:Florida .
}
ORDER BY ?name
```",1,2,2,1,1,3,3,71,0,0,97,0,0.0,0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
# Query for the writer of ""Always the Love Songs""
SELECT ?writer WHERE {
  ?tvshow dcterms:title ""Always the Love Songs""@en .
  ?tvshow dbo:creator ?writer .
}

UNION

# Query for the commander in the Battle of Vienna
SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Vienna (1683)""@en ;
          dbo:commander ?commander .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leaderName ?residence WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Ulster Unionist Party""@en .
  
  ?party dbo:leader ?leader .

  ?leader foaf:name ?leaderName ;
          foaf:based_near ?residence .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?archdukeParent ?child ?father
WHERE {
  # Commander of the Algerian War (France)
  ?commander dbo:position ""Commander"" .
  ?commander dbo:country dbr:France .
  ?commander dbo:relatedWork dbr:Algerian_War .

  # Archduke Charles Joseph of Austria's parent
  ?archdukeParent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  
  # Child of the parent of Archduke Charles Joseph
  ?child dbo:parent ?archdukeParent .

  # Father of that child
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          foaf:givenName ?birthName .
  
  FILTER EXISTS { 
    ?person dbo:occupation dbr:Singer .
  }
  
  OPTIONAL {
    ?person dbo:bandMember ?band .
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?grandfatherLabel WHERE {
  # Step 1: Identify Na'od
  VALUES ?naod { dbr:Na'od_of_Ethiopia }
  
  # Step 2: Determine Na'od's Father
  ?naod dbo:father ?father .
  
  # Step 3: Find the Grandfather (Father of Na'od's Father)
  ?father dbo:father ?grandfather .
  
  # Step 4: Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolderOf ?office .

  # Optional: Label for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description ?occupation WHERE {
  VALUES ?bayne { 
    dbr:William_Bayne_(disambiguation) 
    dbr:William_Bayne_(politician)
    dbr:William_Bayne_(footballer)
    dbr:William_Bayne_(cricketer)
  }
  
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""william bayne""))
  OPTIONAL { ?person dbo:abstract ?description . }
  OPTIONAL { ?person dbo:occupation ?occupation . }

  # Filter to ensure we are getting relevant disambiguation pages
  ?bayne dbo:wikiPageDisambiguates ?person .
  
  FILTER(LANG(?label) = 'en')
}
ORDER BY ?person
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?profession .
  
  # Ensure the profession is 'Actor'
  FILTER(?profession = dbr:Actor)

  # Identify ""Lasso the Moon"" as a film and work
  dbr:Lasso_the_Moon dbo:typeOfCreativeWork ?workType .

  # Ensure it's both a Film and a Work
  FILTER(?workType IN (dbr:Film, dbr:MusicalAlbum))

  # Find actors involved with ""Lasso the Moon""
  ?actor dbo:occupation dbr:Actor .
  ?actor dbo:album ?album .
  
  # Ensure the album is ""Lasso the Moon""
  FILTER(?album = dbr:Lasso_the_Moon)
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:profession dbr:Poet.
  ?person foaf:name ""Ian Gregson""@en.
  ?person dbo:award ?award.
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?workTitle
WHERE {
  ?person dbo:name ""Apache Indian""@en .
  ?person dbo:birthPlace dbpedia:Birmingham .
  ?person dbo:work ?work .
  ?work rdf:type dbo:MusicalWork .
  ?work rdfs:label ?workTitle .
  FILTER (LANG(?workTitle) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?character ?realName ?creator WHERE {
  VALUES ?redirect { <http://dbpedia.org/resource/Green_Arrow> }
  
  ?character dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?character foaf:name ?realName . FILTER(CONTAINS(LCASE(?realName), ""kent allard"")) }
  OPTIONAL { ?character dbo:creator ?creator . }
}
```",3,4,4,3,1,3,3,71,0,11,39640,0.0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?comicSeries WHERE {
  ?game a dbo:VideoGame ;
        dbo:wikiPageRedirects dbr:The_Shadow_(video_game) .
  
  ?character dbo:wikiPageRedirects dbr:The_Shadow ;
             dbo:portrayedIn ?comicSeries .

  FILTER (?comicSeries a dbo:ComicBookSeries)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName WHERE {
  ?alfonsoIV a dbo:Monarch ;
             rdfs:label ""Alfonso IV of Aragon""@en .
  
  ?alfonsoIV dbo:spouse ?spouse .

  ?alfonsoIV dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember ;
         rdfs:label ?childName .
  
  FILTER(LANG(?childName) = ""en"")
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Actor of the album ""What You Know"" by T.I.
SELECT DISTINCT ?actor WHERE {
    ?song dbo:title ""What You Know""@en .
    ?song dbo:artist dbr:T.I. .
    ?album dbo:song ?song .
    ?album dbo:actor ?actor .
}

UNION

# Part 2: Actor of a movie with the author of ""Smartbomb""
SELECT DISTINCT ?actor WHERE {
    ?book dbo:title ""Smartbomb""@en .
    ?book dbo:author ?author .
    ?movie dbo:writer ?author ;
           dbo:actor ?actor .
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Identify William I of Sicily
  ?williamI a dbo:Monarch ;
            foaf:name ""William I of Sicily""@en .

  # Find his child who is royalty
  ?child dbo:parent ?williamI ;
         dbo:royalty ?royalTitle .

  # Determine the parent of Roger III, Duke of Apulia
  ?rogerIII a dbo:Duke ;
            foaf:name ""Roger III, Duke of Apulia""@en .
  ?parentOfRogerIII dbo:child ?rogerIII .

  # Identify the common child
  ?commonChild dbo:parent ?williamI ;
               dbo:parent ?parentOfRogerIII .

  # Find the father of this common child
  ?father dbo:child ?commonChild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandSpouse WHERE {
  ?duchess a dbo:Duchess ;
           foaf:name ""Luise of Brunswick-Wolfenbüttel""@en .
  
  ?duchess dbo:spouse ?firstSpouse .
  
  ?firstSpouse dbo:spouse ?grandSpouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rikMayall ?youngOnes ?shatrughanSinhaConnection
WHERE {
  # Identify Rik Mayall and his profession
  dbr:Rik_Mayall a dbo:Actor ;
                 foaf:name ""Richard Grant Esterhuysen""@en .

  # Find the television show ""The Young Ones"" associated with Rik Mayall
  ?youngOnes dbo:starring dbr:Rik_Mayall ;
             rdfs:label ""The Young Ones""@en .

  # Identify Shatrughan Sinha and his profession
  dbr:Shatrughan_Sinha a dbo:Actor ;
                      foaf:name ""Shatrughan Sinha""@en .

  # Check for any professional connection between Shatrughan Sinha and ""The Young Ones""
  OPTIONAL {
    ?shatrughanSinhaConnection dbo:starring dbr:Shatrughan_Sinha .
    FILTER(?youngOnes = ?shatrughanSinhaConnection)
  }
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName ?occupation WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson"" .
  OPTIONAL { ?person foaf:name ?fullName . }
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""music"")) }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?campaignCommander WHERE {
  # Retrieve the military force involved in the Battle of Fort Royal
  ?battle dbr:Battle_of_Fort_Royal .
  ?battle dbo:militaryUnit ?battleForce .

  # Retrieve the commander during the French campaign in Egypt and Syria
  ?campaign dbr:French_campaign_in_Egypt_and_Syria .
  ?campaign dbo:commander ?campaignCommander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor (GROUP_CONCAT(?parent; separator="", "") AS ?parents)
WHERE {
  # Get actors of the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  # Get parents of Eugène Cattin
  OPTIONAL { 
    dbr:Eugène_Cattin dbo:parent ?eugeneParent .
    BIND(?eugeneParent AS ?parent)
  }

  # Get parents of Doon Arbus
  OPTIONAL {
    dbr:Doon_Arbus dbo:parent ?doonParent .
    BIND(?doonParent AS ?parent)
  }
  
  FILTER (?parent = ?eugeneParent || ?parent = ?doonParent)
}
GROUP BY ?actor
HAVING (COUNT(DISTINCT ?parent) >= 2)
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Michał Kazimierz Pac is the commander in a military conflict/event
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commander ?person .
  
  # The event must be both an Event and a MilitaryConflict
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .

  # Ensure the commander is also an office holder and politician
  ?person dbo:officeHolder true ;
          dbo:politician true .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Béla IV is the predecessor of Stephen V
  dbr:Béla_IV_of_Hungary dbo:predecessor dbr:Stephen_V_of_Hungary .
  
  # Charles II of Anjou is the father of Philip I, Prince of Taranto
  dbr:Charles_II_of_Anjou dbo:child dbr:Philip_I,_Prince_of_Taranto ;
                          dbo:spouse dbr:Maria_of_Hungary .

  # Find a common descendant who is royalty
  ?descendant dbo:parent dbr:Béla_IV_of_Hungary .
  ?descendant2 dbo:parent dbr:Maria_of_Hungary .
  
  FILTER(?descendant = ?descendant2)
  
  # Ensure the descendant is royalty
  ?childOfChild dbo:parent ?descendant ;
                a dbo:Monarch .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?adminCenter dbo:administrativeRegion ?territory .
  FILTER (str(?adminCenter) = ""Copenhagen"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch ?patronSaint WHERE {
  # Query for the current monarch of Spain
  dbr:Spain dbo:monarch ?monarch .
  
  # Query for the patron saint of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:saint ?patronSaint .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?awardYear ?war 
WHERE {
  ?awardee a dbo:NobelPrizeLiteratureAwardee ;
           dbp:year ?awardYear .
  
  FILTER(?awardYear = ""1982"") .

  OPTIONAL { 
    ?event dbo:dateStart ?dateStart ;
           dbo:dateEnd ?dateEnd ;
           dbo:location ?location ;
           rdfs:label ?war .
    
    FILTER((?dateStart <= ""1982-12-31""^^xsd:date) && (?dateEnd >= ""1982-01-01""^^xsd:date))
  }
  
  VALUES ?awardee { dbr:Gabriel_Garc%C3%ADa_M%C3%A1rquez }
}
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessorSpouse WHERE {
  # Step 1: Identify Saw Min Phyu's spouse
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouse dbo:spouse ?sawMinPhyu .

  # Step 2: Find the child of Saw Min Phyu's spouse
  ?child dbo:parent ?spouse .

  # Step 3: Check if the child is royalty and find their predecessor
  OPTIONAL { ?child dbo:royalty true . }
  
  ?predecessor dbo:successor ?child .
  
  # Step 4: Identify Myat Hpone Pyo's father's spouse
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .

  ?father dbo:parent ?myatHponePyo .
  
  ?fatherSpouse dbo:spouse ?father .

  # Step 5: Find the spouse of the predecessor
  ?predecessorSpouse dbo:spouse ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,1,1,0.0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?eleonore dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?father dbo:parent ?eleonore .
  ?father rdfs:label ?fatherName .
  FILTER(CONTAINS(LCASE(?fatherName), ""ferdinand ii""))
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?profession1 ?profession2 ?associatedArtist WHERE {
  VALUES (?person) { dbr:Questlove }
  
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Darryl Paa Kwesi Bannerman-Martin"")
  
  ?person dbo:occupation ?profession1 .
  ?person dbo:occupation ?profession2 .
  FILTER((?profession1 = dbr:Writer) && (?profession2 = dbr:MusicalArtist))
  
  OPTIONAL {
    ?associatedAlbum dbo:artist ?associatedArtist .
    ?associatedAlbum dbo:title ""The Roots Come Alive: The Best of The Roots 1994-2004"" .
    ?person dbo:memberOfBand ?band .
    ?band dbo:performer ?album .
    FILTER(?album = ?associatedAlbum)
  }
  
  OPTIONAL {
    ?collaboration dbo:artist1 ?questlove .
    ?collaboration dbo:artist2 dbr:$pacely .
    FILTER(?questlove = ?person)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's royal child
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child a dbo:Monarch .

  # Step 2: Ensure this child is the predecessor of Myat Hpone Pyo
  ?predecessor dbo:succeededBy dbr:Myat_Hpone_Pyo .
  FILTER (?child = ?predecessor)

  # Step 3: Link to Min Hla Htut's parent from Pyakaung
  ?parent dbo:child dbr:Min_Hla_Htut .
  ?parent dbo:placeOfBirth dbr:Pyakaung .

  # Ensure the child is linked through this parent
  FILTER (?child = ?parent)

  # Step 4: Find the spouse of the father (who is royalty) of this child
  ?father dbo:child ?child .
  ?father a dbo:Monarch .
  ?spouse dbo:spouse ?father .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:birthPlace dbr:New_York_(state) .
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?alterEgoOfTheShadow ?childOfDawitI WHERE {
  # Baeda Maryam I's father
  dbr:Baeda_Maryam_I dbo:father dbr:Amda_Seyon_I .
  
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Dawit I's child
  dbr:Dawit_I dbo:child dbr:Zara_Yaqob .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria's parent
  ?charles_joseph dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  
  # Parent of Archduke Charles Joseph (Leopold V)
  ?parent dbo:child ?charles_joseph ;
          dbo:spouse ?mother .

  # Leopold V is a child of Ferdinand II
  ?parent dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  # Leopold V was a commander in the Thirty Years' War
  ?parent dbo:occupation dbr:Thirty_Years'_War .

  # Father of Leopold V (Charles II)
  ?father dbo:spouse ?mother ;
          dbo:child ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitaka ?timeZone WHERE {
  ?mitaka a dbo:PopulatedPlace ;
          rdfs:label ""Mitaka""@en .
  OPTIONAL { ?mitaka dbo:timeZone ?timeZone . }
  FILTER(CONTAINS(LCASE(STR(?timeZone)), ""japan standard time""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institutionInGeorgia ?birthPlaceCountry WHERE {
  # Identify Little Hat Jones entity
  ?person rdfs:label ""Little Hat Jones""@en .
  
  # Find institution in Georgia associated with him
  OPTIONAL { 
    ?person dbo:almaMater ?institution .
    ?institution dbo:location dbr:Georgia_(U.S._state) .
    BIND(?institution AS ?institutionInGeorgia)
  }
  
  # Find his birthplace which is a country
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    BIND(str(?birthPlace) AS ?birthPlaceCountry)
  }

  FILTER(langMatches(lang(?person), ""en""))
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?child1 dbp:name ""Arthur Stanley (politician)"" .
  ?child2 dbp:name ""Edward Stanley, 17th Earl of Derby"" .
  ?child3 dbp:name ""Victor Stanley (Royal Navy officer)"" .

  ?parent dbo:child ?child1 ;
          dbo:child ?child2 ;
          dbo:child ?child3 .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?playerName ?position
WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Sergio Agüero""@en .
  OPTIONAL { ?player dbp:position ?position . }
  BIND(STR(?player) AS ?playerName)
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:country dbr:Japan .
  ?timeZone dbo:name ""Japan Standard Time"" .
  ?timeZone dbo:country ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the Battle of Cape Finisterre (1805)
SELECT ?battle ?participant1Label ?participant2Label WHERE {
  VALUES ?battle { dbr:Battle_of_Cape_Finisterre_(1805) }
  ?battle dbo:participatedIn ?event .
  ?event dbo:agent ?participant1 ;
         dbo:opponent ?participant2 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query for the Battle of Fort Royal
SELECT ?battle ?participant1Label ?participant2Label WHERE {
  VALUES ?battle { dbr:Battle_of_Fort_Royal }
  ?battle dbo:participatedIn ?event .
  ?event dbo:agent ?participant1 ;
         dbo:opponent ?participant2 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Find the actor from the film ""Paradise"" (2013)
  OPTIONAL {
    ?film dbo:title ""Paradise""@en .
    ?film dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 2013) .
    ?film dbo:starring ?actor .
  }

  # Find the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work (SAMPLE(?birthPlace) AS ?artistBirthplace) ?workLocation WHERE {
  VALUES ?person { dbr:Ethan_Iverson }
  
  ?person a dbo:Musician ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?work dbo:composer ?person ;
          dbo:workLocation ?workLocation .
  }
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity
WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlaceEntity .
}
```",2,2,3,2,1,2,3,28,0,2,104,0.0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfParent
WHERE {
  # Step 1: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:birthPlace dbr:Pyakaung .

  # Step 2: Find the parent of Min Hla Htut
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Identify the child of this parent
  ?parent dbo:child ?childOfParent .

  # Step 4: Identify Myat Hpone Pyo and his predecessor
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?predecessor dbo:succeededBy ?myatHponePyo .

  # Step 5: Match the child with the predecessor
  FILTER (?childOfParent = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:headOfGovernment ?party ;
                  dbo:country dbr:Spain .

  FILTER(LANG(?administration) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather WHERE {
  # Identify Francis I, Duke of Lorraine
  ?francis a dbo:Duke ;
           rdfs:label ""Francis I, Duke of Lorraine""@en .

  # Find his child who is royalty
  ?child dbo:childOf ?francis ;
         dbo:royaltyTitle ?title .
  
  # Identify the father of this child (could be Francis I himself)
  OPTIONAL { ?father dbo:parentOf ?child . }

  # Determine the parent of this father
  ?parentOfFather dbo:parentOf ?father .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderNativeCountry ?managerNativeCountry WHERE {
  # Frank-Walter Steinmeier as a leader of Germany
  dbr:Frank_Walter_Steinmeier dbo:nationality dbr:Germany .
  OPTIONAL { dbr:Frank_Walter_Steinmeier dbo:birthPlace ?leaderBirthPlace . }
  BIND (dbr:Germany AS ?leaderNativeCountry)

  # Manager of SBV Vitesse for the 2020–21 season
  # Assuming we have identified that Thomas Letsch was the manager during this period
  dbr:Thomas_Letsch dbo:nationality ?managerNationality .
  OPTIONAL { dbr:Thomas_Letsch dbo:birthPlace ?managerBirthPlace . }
  BIND (?managerNationality AS ?managerNativeCountry)

  # Filter to ensure both are from the same country
  FILTER(?leaderNativeCountry = ?managerNativeCountry)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?bookTitle WHERE {
  ?person a dbo:Politician ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?work dbo:author ?person ;
        a dbo:Book .

  BIND(?person AS ?author)
  BIND(STR(?work) AS ?bookTitle)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardNativeRegion WHERE {
  # Step 1: Identify Bobby Shmurda's birth name
  VALUES (?bobbyShmurda) { dbr:Bobby_Shmurda }
  
  # Step 2: Find a band from New York with an awardee born as Bobby Shmurda
  ?band dbo:member ?member .
  ?member foaf:name ""Ackquille Jean Pollard""@en ;
          dbo:birthPlace dbr:New_York_City .
  ?band dbo:location dbr:New_York_(state) .

  # Step 3: Determine the award received by this band
  ?award dbo:recipient ?band .
  
  # Step 4: Identify the native region of the award
  ?award dbo:country ?nativeRegion .
  ?nativeRegion a dbo:State ;
                a dbo:Settlement .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessorLabel WHERE {
  # Philipp Albrecht, Duke of Württemberg and his child
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .
  
  # Archduke Charles Louis of Austria and his royal descendant
  dbr:Charles_Louis_Archduke_of_Austria dbo:child ?archdukeChild .
  ?archdukeChild a dbo:Royal .

  # Common descendant who is royalty
  ?commonDescendant dbo:parent ?philippChild ;
                   dbo:parent ?archdukeChild .
  
  # Predecessor of the common descendant
  ?commonDescendant dbo:parent ?predecessor .
  
  # Get label for predecessor
  ?predecessor rdfs:label ?predecessorLabel .
  
  FILTER(LANG(?predecessorLabel) = ""en"")
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Identify Richard Grant Esterhuysen by his alter ego and profession
  ?person dbo:birthName ""Richard Grant Esterhuysen"" .
  ?person foaf:name ""The Shadow""@en .
  ?person dbo:profession dbr:Actor .

  # Find movies or TV shows associated with him that are adaptations of other TV shows
  ?production dbo:starring ?person ;
              a ?type ;
              dbo:basedOn dbr:Television_show .

  # Ensure the production is a movie or television show
  VALUES ?type { dbr:Film dbr:TV_series }

  # Retrieve actors from these productions
  ?production dbo:starring ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?award WHERE {
  # Find wars involving Alexander Lvovich Davydov
  ?davydov dbo:birthPlace dbr:Russian_Empire ;
          dbo:occupation dbr:Military_person .
  
  OPTIONAL { 
    ?davydov dbo:participatedInWar ?war .
  }
  
  # Find awards related to military service in the Russian Empire
  ?award dbo:awardedBy dbr:Russian_Empire ;
         dbo:recipient ?recipient .
  
  FILTER (regex(str(?award), ""25"", ""i"")) # Assuming '25' refers to a specific award number or name
  
  OPTIONAL {
    ?war dbp:country dbr:Russian_Empire .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?spouseName WHERE {
  ?person dbo:birthName ""Linda Bruckheimer""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse rdfs:label ?spouseName FILTER (lang(?spouseName) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en ;
          dbo:birthDate ?birthDate ;
          foaf:almaMater ?almaMater .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?force 
WHERE {
  # Identify Manuel Pinto da Costa as an office holder and politician
  dbr:Manuel_Pinto_da_Costa a dbo:OfficeHolder ;
                            dbo:politicalPartyMember ?party .
  
  # Find the office of commander he held
  ?office dbo:holder dbr:Manuel_Pinto_da_Costa ;
          rdfs:label ?officeLabel .

  FILTER(CONTAINS(LCASE(?officeLabel), ""commander""))

  # Identify military conflicts or societal events (forces) related to him
  ?force a dbo:MilitaryConflict ;
         dbo:commander dbr:Manuel_Pinto_da_Costa .
  
  OPTIONAL { 
    ?force rdfs:label ?forceLabel .
  }
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?archduke { dbr:Charles_Joseph_of_Austria }
  ?archduke dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birthplace of Cece Bell, author of El Deafo
  dbr:Cecily_Ann_Bell dbo:birthPlace ?authorBirthPlace .
  
  # Birthplace of Glenn Youngkin, governor of Virginia
  dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .
  
  # Birthplace of Vince Gilligan
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?artist rdfs:label ""T.I.""@en .
  ?artist a dbo:MusicalArtist .
  ?album dbo:artist ?artist ;
         a dbo:Album .
  FILTER(LANG(?album) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the award associated with Ian Gregson
  ?award dbo:wikiPageWikiLink dbr:Ian_Gregson .
  
  # Find movies that have won this award
  ?movie dbo:award ?award .

  # Get the producer of these movies
  ?movie dbo:producer ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?band 
WHERE {
  VALUES (?person ?name) { (dbr:Nick_Curran ""Nicholas Michael Curran"") (dbr:Kim_Wilson ""Kim Wilson"") }
  
  ?person dbo:birthName ?name .
  OPTIONAL { ?person dbo:musicalArtist ?artist . }
  OPTIONAL { ?person dbo:band ?band . }

  FILTER(?artist != dbr:Unknown || ?band != dbr:Unknown)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Musician .
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  OPTIONAL { ?person dbo:occupation dbr:Artist . }
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1981 && MONTH(?date) = 12 && DAY(?date) = 1)
}
```",3,7,4,2,2,3,2,20,0,1,2,0.0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRogerII ?fatherOfChild ?williamI ?childOfAlfonsoVI
WHERE {
  # Step 1: Find a child of Roger II who is royalty
  ?childOfRogerII dbo:parent dbr:Roger_II_of_Sicily .
  ?childOfRogerII dbo:royaltyTitle ?title .

  # Step 2: Find the father of that child
  ?fatherOfChild dbo:child ?childOfRogerII .

  # Step 3: Identify William I and his connection to Alfonso VI
  dbr:William_I_of_Sicily dbo:parent ?parentOfWilliamI .
  ?parentOfWilliamI dbo:child ?childOfAlfonsoVI .
  
  # Step 4: Find a child of Alfonso VI who is royalty and an office holder
  ?childOfAlfonsoVI dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  ?childOfAlfonsoVI dbo:royaltyTitle ?title2 .
  ?childOfAlfonsoVI dbo:officeHolder ?office .

  # Step 5: Connect these entities
  FILTER(?fatherOfChild = dbr:William_I_of_Sicily)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?father WHERE {
  ?person rdfs:label ""William I of Sicily""@en .
  ?person dbo:spouse ?spouse .
  ?person dbo:child ?child .
  
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
  
  ?child dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
  
  FILTER(LANG(?fatherLabel) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdf:type dbo:Artist .
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (STR(?deathDate) = ""2020-06-18"")
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?film a dbo:Film ;
        rdfs:label ""The Campus Queen""@en .
  
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,3,2,20,0,6,7,0.0,0.0,0
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Dawit_I dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```

For the alter ego of The Shadow, we refer to known literary sources which state that Lamont Cranston is his alter ego.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeGroup WHERE {
  # Find the resource for Jamshedpur
  dbr:Jamshedpur dbo:populationType ?nativeGroup .
  
  # Optionally, filter to include known tribes in Jharkhand if needed
  FILTER(?nativeGroup IN (dbr:Santhal, dbr:Munda))
}
```",1,1,2,1,1,2,2,9,0,0,68,0,0.0,0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  OPTIONAL { ?ship dbo:owner ?owner . }
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel WHERE {
  ?eleonore a dbo:Person ;
            rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commander ?commanderLabel WHERE {
  # Commander of the Battle of Fort Royal
  ?battle1 rdfs:label ""Battle of Fort Royal""@en .
  ?battle1 dbp:commander ?commander .

  # Commander of the Battle of Cape Finisterre (1805)
  ?battle2 rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle2 dbp:commander ?commander .

  # Ensure the commander is associated with the 30th Regiment
  OPTIONAL {
    ?conflict dbo:participatedIn ?regiment .
    ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
    ?conflict dbp:commander ?commander .
  }

  # Get the label for the commander
  ?commander rdfs:label ?commanderLabel .
  
  FILTER(LANG(?commanderLabel) = 'en')
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?figureDescription WHERE {
  # Find the author of ""The First Glove""
  OPTIONAL { 
    dbr:The_First_Glove dbo:author ?author .
  }
  
  # Find information about ""Наши парни / Nashi parni""
  OPTIONAL {
    dbr:Наши_парни ?p ?figureDescription .
    FILTER (lang(?figureDescription) = 'en')
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childSpouse
WHERE {
  ?childSpouse dbo:parent dbr:Saw_Min_Hla .
  ?childSpouse dbo:spouse dbr:Saw_Shwe_Khet .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild ?royalChildFather WHERE {
  # Find Alfonso VI's child
  ?alfonsoVI dbo:name ""Alfonso VI of León and Castile""@en .
  
  # Find one of Alfonso VI's children
  ?alfonsoVIChild dbo:parent ?alfonsoVI ;
                  a dbo:Person .

  # Find the grandchild (child of Alfonso VI's child)
  ?grandchild dbo:parent ?alfonsoVIChild ;
              a dbo:Person .
  
  # Find William I of Sicily
  ?williamI dbo:name ""William I of Sicily""@en ;
            a dbo:Person .

  # Find the child of William I of Sicily who is royalty
  ?royalChild dbo:parent ?williamI ;
              a dbo:Monarch .
  
  # Identify the father of this royal child
  ?royalChildFather dbo:child ?royalChild ;
                    a dbo:Person .

  # Ensure that the grandchild and the royal child's father are the same person
  FILTER (?grandchild = ?royalChildFather)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .

  # Step 2: Find the governor of that region
  ?region dbo:administrativeRegion ?paulusBirthPlace .
  ?region dbo:governor ?governor .
  ?governor rdf:type dbo:Politician .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Step 3: Find Vince Gilligan's award
  dbr:Vince_Gilligan dbo:awardReceived ?vinceAward .

  # Step 4: Find the birth place of other awardees of the same award
  ?awardee dbo:awardReceived ?vinceAward .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  ?person dbo:nationality dbr:Germany .
  ?person dbo:spouse dbr:Nicholas_II_of_Russia .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the associated band of David Paton
  dbr:David_Paton dbo:associatedBand ?band .
  
  # Retrieve all members of that band
  ?band dbo:member ?bandMember .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify ""Nothing to Gein""
  VALUES (?nothingToGein) { dbr:Nothing_to_Gein }

  # Step 2: Find the producer(s)
  ?nothingToGein dbo:producer ?producer .

  # Step 3: Filter producers that are both organizations and groups
  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .

  # Step 4: Retrieve band members of the producer
  ?producer dbo:bandMember ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?occupation
WHERE {
  <http://dbpedia.org/resource/Shatrughan_Sinha> dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party dbo:location dbr:Westport,_Connecticut .
  ?party dbo:memberOf ?rulingParty .
}
```",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party ?spouse WHERE {
  # Find Harriette Arlene Lake by birth name
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  
  # Identify the ruling party in a landmark at the specified elevation
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)
  ?party dbp:country ?landmark .

  # Ensure the person is a member of this party
  ?person dbp:memberOfParty ?party .

  # Find Roger Pryor as an actor and his spouse
  ?actor dbo:name ""Roger Pryor""@en .
  ?actor rdf:type dbo:Actor .
  ?actor dbo:spouse ?spouse .
  
  # Link the person to being the spouse of Roger Pryor
  ?person owl:sameAs ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?calderRole ?event ?conflict ?regiment 
WHERE {
  # Find Robert Calder as a commander in a military conflict
  ?calderRole dbo:commander dbr:Robert_Calder .
  ?calderRole dbo:militaryConflict ?conflict .

  # Identify events associated with Robert Calder that are societal events
  ?event dbo:participatedIn ?calderRole ;
         rdf:type dbo:SocietalEvent .

  # Find the involvement of the 30th (Cambridgeshire) Regiment of Foot in a military conflict
  ?regiment rdf:type dbo:MilitaryUnit ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:militaryConflict ?conflict .

  # Ensure the conflict is a military conflict and an event
  ?conflict rdf:type dbo:MilitaryConflict, dbo:Event .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character ?alterEgoProfession WHERE {
  ?creator rdfs:label ""Walter B. Gibson""@en .
  ?creator dbo:worksFor ?work .
  ?work dbo:author ?creator .
  ?work dbo:subject ?character .
  ?character dbo:alternateName ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoProfession .
  FILTER(CONTAINS(LCASE(?alterEgoProfession), ""singer""))
  OPTIONAL { 
    ?character dbo:wikiPageWikiLink dbr:Category:Comics_characters .
  }
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tom Phillips"" ;
          dbp:title ""First Sea Lord""@en .
  
  ?person dbp:participatedIn ?event .
  ?event dbo:wikiPageRedirects ?war .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Find the commander during the Third Taiwan Strait Crisis
  ?event dbo:agent ?person .
  ?event rdfs:label ""Third Taiwan Strait Crisis""@en .
  ?person dbo:officeHolderOf dbr:President_of_the_United_States .
  ?person rdfs:label ?commander .

  # Find the author who resides in Chappaqua, New York
  ?author dbo:residence dbr:Chappaqua,_New_York ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:writtenWork ?work .
  ?work rdf:type dbo:Book .

  # Find the spouse of this author who wrote ""An Invitation to the White House""
  ?spouse dbo:spouse ?author ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office2 ;
          dbo:writtenWork ?invitation .
  ?invitation rdfs:label ""An Invitation to the White House""@en .

  FILTER(?commander = ""Bill Clinton"" && ?author = ""Hillary Clinton"" && ?spouse = ""Bill Clinton"")
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?name WHERE {
  ?war dbo:wikiPageRedirects dbr:French_Revolutionary_Wars .
  ?war dbo:commander ?commander .
  OPTIONAL { ?commander rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the war involving a figure associated with an award around 25 AD
SELECT ?war WHERE {
    ?person dbo:award ?award .
    ?award dbo:date ""0000-01-25""^^xsd:date .
    ?person dbo:participatedIn ?war .
}

UNION

# Query for the Napoleonic Wars involving Alexander Lvovich Davydov
SELECT ?war WHERE {
    dbr:Alexander_Lvovich_Davydov dbo:participatedIn ?war .
    ?war rdf:type dbo:MilitaryConflict .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ebrahim_Alkazi 
    dbr:Smita_Patil 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?santiagoMayor ?spainPresident ?galiciaLeaderOffice WHERE {
  # Santiago de Compostela Mayor in 2009
  ?santiagoMayor a dbo:Mayor ;
                dbo:officeLocation dbr:Santiago_de_Compostela ;
                dbo:termStart ?startSantiago .
  FILTER (?startSantiago <= ""2009-12-31""^^xsd:date && 
          (OPTIONAL {?santiagoMayor dbo:termEnd ?endSantiago} || ""3000-01-01""^^xsd:date) > ""2009-01-01""^^xsd:date)

  # Spain President in 2009
  ?spainPresident a dbo:Head_of_State ;
                  dbo:country dbr:Spain ;
                  dbo:termStart ?startSpain .
  FILTER (?startSpain <= ""2009-12-31""^^xsd:date && 
          (OPTIONAL {?spainPresident dbo:termEnd ?endSpain} || ""3000-01-01""^^xsd:date) > ""2009-01-01""^^xsd:date)

  # Galicia Leader Office in 2009
  ?galiciaLeader a dbo:Head_of_Government ;
                 dbo:officeLocation dbr:Galicia ;
                 dbo:termStart ?startGalicia .
  FILTER (?startGalicia <= ""2009-12-31""^^xsd:date && 
          (OPTIONAL {?galiciaLeader dbo:termEnd ?endGalicia} || ""3000-01-01""^^xsd:date) > ""2009-01-01""^^xsd:date)
  
  # Get the office name for Galician leader
  ?office a dbo:Office ;
          rdfs:label ?officeLabel .
  FILTER (?office = ?galiciaLeader dbo:positionHeld)

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?commander WHERE {
  # Identify the battle
  dbr:Battle_of_Cape_Finisterre_(1805) a dbo:MilitaryConflict ;
    dbo:participatingMilitaryUnit ?force ;
    dbo:commander ?commander .

  # Filter to include only forces from the Triple Alliance (Britain, Portugal, Spain)
  OPTIONAL { ?force dbo:country dbr:United_Kingdom . }
  OPTIONAL { ?force dbo:country dbr:Portugal . }
  OPTIONAL { ?force dbo:country dbr:Spain . }

  FILTER EXISTS {
    ?force dbo:country dbr:United_Kingdom .
  } 
  FILTER EXISTS {
    ?force dbo:country dbr:Portugal .
  } 
  FILTER EXISTS {
    ?force dbo:country dbr:Spain .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team
WHERE {
  # Find the person born on November 3, 1979, who is both a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          (dbo:playerFor|dbo:managerOf) ?team .

  # Find Marty Pollio's birthdate to identify the athlete born on that date
  ?martyPollio dbo:birthDate ?pollioBirthDate .
  FILTER(?martyPollio = dbr:Marty_Pollio)

  # Identify an athlete who shares Marty Pollio's birthday
  ?athlete dbo:birthDate ?pollioBirthDate ;
           dbo:sport ?sport .

  # Ensure the person played in the same team as this athlete
  ?athlete (dbo:playerFor|dbo:member) ?team .

  # Confirm that the person also played with Sergio Agüero
  dbr:Sergio_Agüero (dbo:playerFor|dbo:member) ?agüeroTeam .
  FILTER(?team = ?agüeroTeam)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query for Battle of Fort Royal military force and commander
SELECT ?militaryForce ?commander WHERE {
  ?battle dbo:militaryForce ?militaryForce .
  ?battle dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?battle)), ""battle of fort royal""))
}

UNION

# Query for societal event related to Knight Commander of the Order of the Bath
SELECT ?event ?recipient WHERE {
  ?award dbo:recipient ?recipient ;
         rdf:type dbo:Award .
  ?recipient dbo:honor ""Knight Commander of the Order of the Bath""^^xsd:string .
  ?event dbo:societalEvent true .
  ?event dbo:relatedTo ?recipient .
}

UNION

# Query for military force involved in the societal event
SELECT ?militaryForce WHERE {
  ?event dbo:militaryForce ?militaryForce .
  ?award dbo:recipient ?recipient ;
         rdf:type dbo:Award .
  ?recipient dbo:honor ""Knight Commander of the Order of the Bath""^^xsd:string .
  ?event dbo:societalEvent true .
  ?event dbo:relatedTo ?recipient .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?partyName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roy Barreras""@en .
  OPTIONAL { 
    ?person dbo:partyAffiliation ?party .
    ?party rdfs:label ?partyName .
    FILTER (lang(?partyName) = 'en')
  }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?award dbo:awardedBy dbr:Order_of_the_British_Empire.
  ?award dbo:recipient ?person.
  FILTER EXISTS { ?person a dbo:Person. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player
WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?movie dbo:actor ?player .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""all or nothing: manchester city"")))

  # Ensure the player is a soccer player and an athlete
  ?player dbo:sport dbr:Soccer ;
          dbo:athleteType dbr:Athlete .

  # Filter by birth date
  ?player dbo:birthDate ?date .
  FILTER(STRSTARTS(LCASE(?date), LCASE(""1979-11-03"")))

  # Ensure the player is also a soccer manager
  OPTIONAL { ?player dbo:manager ?team . }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?group WHERE {
  ?song dbo:title ""Burnt by the Sun"" ;
        dbo:artist ?group .
  FILTER(CONTAINS(LCASE(str(?group)), ""oasis""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:sport dbr:Association_football .
  OPTIONAL { 
    ?person dbo:manager ?team .
    FILTER EXISTS { ?team a dbo:SoccerTeam }
  }
  ?person dbo:birthDate ?birthDate .
  ?person rdfs:label ?name .
  FILTER (YEAR(?birthDate) = 1979 && MONTH(?birthDate) = 11 && DAY(?birthDate) = 3)
  FILTER (LANG(?name) = ""en"")
}
ORDER BY ?name
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  VALUES ?bobThompson { dbr:Bob_Thompson_(musician) }
  ?bobThompson dbo:profession ?profession .
  FILTER (
    CONTAINS(LCASE(STR(?profession)), ""singer"") ||
    EXISTS {
      ?profession dbo:memberOfBand ?band .
    }
  )
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Find the associated musical artist of Bobby Shmurda
  ?bobbyShmurda dbo:associatedMusicalArtist ?artist .
  
  FILTER(STR(?bobbyShmurda) = ""Bobby_Shmurda"")

  # Find band members of that artist who are also individual artists
  ?artist dbo:bandMember ?bandMember .

  # Ensure the band member is a musical artist and has the same birth name as Bobby Shmurda
  ?bandMember rdf:type dbo:MusicalArtist .
  ?bandMember dbp:birthName ""Ackquille Jean Pollard""^^xsd:string .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author dbr:Bill_Clinton .
  ?author dbo:book ?work .
  ?work a dbo:Book .
  ?work dbo:subject ?subject .
  FILTER EXISTS { 
    ?subject rdfs:label ""AIDS""@en .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:place dbr:Athens .
  ?entity dbo:agent dbr:Napoleon_Zervas .
  FILTER (CONTAINS(LCASE(STR(?entity)), ""resistance"") || CONTAINS(LCASE(STR(?entity)), ""war""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narrative WHERE {
  ?event dbo:agent dbr:Napoleon_Bonaparte .
  ?event dbo:agent ?zervas .
  FILTER regex(?zervas, ""Zervas"", ""i"") .
  OPTIONAL { ?event rdfs:label ?narrative . }
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?person dbo:parent ?parent .

  ?parent dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  OPTIONAL { 
    ?parent dbo:officeHolder ?office .
    FILTER EXISTS { ?office a dbo:Office }
  }

  FILTER(EXISTS { ?parent dbo:officeHolder ?office })
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Query to find a band member of Uncle Murda
SELECT ?bandMember WHERE {
  ?uncleMurda dbo:memberOf ?group .
  ?group dbo:member ?bandMember .
  FILTER(?uncleMurda = dbpedia:Uncle_Murda) .
}

# Query to find the birth name of Bobby Shmurda
SELECT ?birthName WHERE {
  dbpedia:Bobby_Shmurda foaf:name ?birthName .
  OPTIONAL { ?birthName dbo:birthName ?actualBirthName . }
  FILTER(?actualBirthName != """")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the producer of The Adventures of Tom Sawyer (1938 film)
SELECT ?producer WHERE {
    dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:producer ?producer .
}

# Step 2: Identify the actor known for High Society Blues
SELECT ?actor WHERE {
    dbr:High_Society_Blues dbo:performer ?actor .
}

# Step 3: Determine the claim to fame of that actor (most famous work)
SELECT DISTINCT ?claimToFame WHERE {
    ?actor dbo:film ?claimToFame .
    FILTER NOT EXISTS { 
        ?otherFilm dbo:starring ?actor .
        ?claimToFame != ?otherFilm
    }
}

# Step 4: Find the producer(s) of this claim-to-fame movie or work
SELECT DISTINCT ?producer WHERE {
    ?claimToFame dbo:producer ?producer .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hostInstitution ?hostInstitutionLabel ?awardee ?awardeeLabel ?otherAward ?otherAwardLabel
WHERE {
  # Find the Nobel Prize in Physics and its host institution
  dbr:Nobel_Prize_in_Physics dbo:award dbr:Nobel_Prize_in_Physics .
  dbr:Nobel_Prize_in_Physics dbo:organization ?hostInstitution .

  # Ensure the host institution is an educational entity
  ?hostInstitution a dbo:EducationalOrganization .

  # Get labels for readability
  ?hostInstitution rdfs:label ?hostInstitutionLabel .
  FILTER (lang(?hostInstitutionLabel) = 'en')

  # Find awardees of the Nobel Prize in Physics
  dbr:Nobel_Prize_in_Physics dbo:recipient ?awardee .

  # Get labels for readability
  ?awardee rdfs:label ?awardeeLabel .
  FILTER (lang(?awardeeLabel) = 'en')

  # Find other awards received by the awardees
  OPTIONAL {
    ?awardee dbo:award ?otherAward .
    ?otherAward rdfs:label ?otherAwardLabel .
    FILTER (lang(?otherAwardLabel) = 'en')
  }
}
ORDER BY ?hostInstitutionLabel ?awardeeLabel
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?entityInCharleston WHERE {
  # Find the award related to Quincy Adams Gillmore
  ?award dbo:recipient dbr:Quincy_A._Gillmore .
  
  # Get the awardee of that award
  ?award dbo:recipient ?awardee .

  # Find entities in Charleston, South Carolina
  ?entityInCharleston a dbo:Place ;
                     dbo:location dbr:Charleston,_South_Carolina .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent ?writer
WHERE {
  # Find the commander in the Battle of Vienna
  ?battle dbo:participatedInMilitaryForce ?militaryForce .
  ?militaryForce dbo:commandedBy ?commander .
  
  FILTER(?battle = dbr:Battle_of_Vienna)

  # Ensure the commander is a successor to Yurii Khmelnytsky
  ?yurii dbo:succeededBy ?successor .
  FILTER(?yurii = dbr:Yurii_Khmelnytsky)
  FILTER(?commander = ?successor)

  # Find connections to a television show and societal event
  ?commander dbo:appearanceIn ?tvShow .
  ?commander dbo:participatedIn ?societalEvent .

  # Identify the writer of ""Always the Love Songs""
  ?writer dbo:work dbr:Always_the_Love_Songs .
  
  # Check if there's any connection between the commander and the writer
  OPTIONAL { ?commander dbo:relatedTo ?writer }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?spouse WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .
  
  # Actor of ""1,000 Dollars a Minute""
  OPTIONAL { 
    dbr:""1,000_Dollars_a_Minute"" dbo:starring ?actor .
    
    # Spouse of the actor
    ?actor dbo:spouse ?spouse .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentLabel WHERE {
  VALUES ?roger { dbr:Roger_III,_Duke_of_Sicily }
  ?roger dbo:parent ?parent .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query to find associated musical artists of Nick Curran
SELECT ?artist WHERE {
  ?nickCurran a dbo:MusicArtist ;
              foaf:name ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?artist .
}

UNION

# Query to find the real name of The Fabulous Thunderbirds
SELECT ?realName WHERE {
  ?band a dbo:MusicalGroup ;
        dbp:name ""The Fabulous Thunderbirds""@en .
  ?band rdfs:label ?realName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthName WHERE {
  # Step 1: Identify GS9 members who are both artists and musical artists
  ?member dbo:associatedBand dbr:GS9 ;
          a dbo:MusicalArtist ;
          dbo:occupation dbr:Artist .

  # Step 2: Find bands associated with these members that are also musical artists
  ?band dbo:associatedBandMember ?member ;
        a dbo:MusicalArtist .

  # Step 3: Identify band members who are natives of Florida
  ?floridaNative dbo:nationality dbr:United_States ;
                dbo:birthPlace ?place ;
                dbo:associatedBand ?band .
  
  FILTER (STRSTARTS(STR(?place), ""http://dbpedia.org/resource/Florida""))

  # Step 4: Retrieve the birth name of this person
  ?floridaNative dbp:birthday ?birthday ;
                 rdfs:label ?birthName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?band
WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          rdf:type dbo:musicalArtist .
  FILTER (STR(?birthDate) = ""1945-03-30T00:00:00Z""^^xsd:dateTime)
  ?person dbo:bandMember ?band .
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player ?team ?nickname 
WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Aleksandr Filimonov""@en .
  
  OPTIONAL { ?player dbp:team ?team . }
  
  ?nationalTeam a dbo:NationalSoccerTeam ;
                dbp:country ""Russia"" ;
                rdfs:label ?nickname .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?givenName ?familyName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?profession WHERE {
  # Query to find the professional alter ego of The Shadow
  { 
    ?character rdfs:label ""The Shadow""@en .
    ?character dbo:occupation ?profession .
    FILTER (lang(?profession) = 'en')
  }
  
  UNION
  
  # Query to find the profession of Frédéric Bouraly
  {
    ?person rdfs:label ""Frédéric Bouraly""@en .
    ?person dbo:occupation ?profession .
    FILTER (lang(?profession) = 'en')
  }
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:member ?band .
  ?band rdfs:label ?bandLabel .
  FILTER(LANG(?bandLabel) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:NobelPrizeInLiterature .
  ?award dbo:number ""25""^^xsd:int .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:spouse ?spouse .
  
  # Find his children
  ?spouse dbo:child ?child .

  # Check if the child has a royal title or position
  OPTIONAL { ?child dbo:royalTitle ?title . }
  OPTIONAL { ?child dbo:positionHeld ?position . }

  # Filter to ensure the child is royalty
  FILTER EXISTS {
    ?child dbo:royalTitle ?title .
  } || EXISTS {
    ?child dbo:positionHeld ?position .
  }

  # Return the name of the child
  ?child rdfs:label ?childName .
  
  # Ensure we are getting English labels
  FILTER (lang(?childName) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo WHERE {
  # Query for the producer of The Adventures of Tom Sawyer (1938 film)
  OPTIONAL { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
  }
  
  # Query for Kent Allard's alter ego in Dick Tracy
  OPTIONAL {
    dbr:Kent_Allard dbo:alterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  ?person a dbo:Person ;
          dbp:deathPlace ?place .
  FILTER (str(?place) = ""Los Angeles"")
  
  ?movie dbo:actor ?person .
  
  ?actor dbo:name ?actorName .
  FILTER (?actor != ?person)
}
```",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?event ?author
WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commanderOf ?event .
  
  # Successor who is also a politician and office holder
  ?successor dbo:succeededBy dbr:Micha%C5%82_Kazimierz_Pac ;
            rdf:type dbo:Politician ;
            dbo:officeHolder true .

  # Event as both an event and military conflict
  ?event rdf:type dbo:Event, dbo:MilitaryConflict .
  
  # Author of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author ?author .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Dawid Olejniczak's residence
  OPTIONAL { 
    dbr:Dawid_Olejniczak dbo:residence ?residence .
    ?residence dbo:country ?country .
  }

  # Alexander Suvorov's wars
  OPTIONAL {
    dbr:Aleksandr_Suvorov dbo:participatedInWar ?war .
    ?war dbo:location ?location .
    ?location dbo:country ?country .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?manager dbo:position ""Manager""@en .
  ?manager dbo:team <http://dbpedia.org/resource/Hartlepool_United_F.C.> .
  ?manager dbo:birthPlace <http://dbpedia.org/resource/Bristol> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?artist rdfs:label ""Pacely""@en .
  ?artist dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""musician""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesMartel ?spouseOfPhilipIFather ?royaltyChild
WHERE {
  # Step 1: Identify Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:father ?parentOfCharlesMartel .

  # Step 2: Find Philip I, Prince of Taranto's father and his spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?fatherOfPhilipI .
  ?spouseOfPhilipIFather dbo:spouse ?fatherOfPhilipI .

  # Ensure the parent of Charles Martel is also the spouse of Philip I's father
  FILTER (?parentOfCharlesMartel = ?spouseOfPhilipIFather)

  # Step 3: Identify Stephen V of Hungary's predecessor (likely his father)
  dbr:Stephen_V_of_Hungary dbo:father ?predecessorOfStephenV .

  # Step 4: Find the child of the child of the predecessor that is royalty
  ?child1 dbo:child ?predecessorOfStephenV .
  ?royaltyChild dbo:child ?child1 .
  
  # Ensure the royalty child is a royal figure
  ?royaltyChild rdf:type dbo:Monarch .

  # Step 5: Combine all these relationships
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force 
WHERE {
  # Find the war associated with the Congressional Gold Medal
  ?goldMedal a dbo:Award ;
             rdfs:label ""Congressional Gold Medal""@en .
  
  OPTIONAL { ?goldMedal dbo:awardedFor ?event . }
  OPTIONAL { ?event dbo:subject ?war . }

  # Find the force associated with the Gillmore Medal
  ?gillmoreMedal a dbo:Award ;
                 rdfs:label ""Gillmore Medal""@en .
  
  OPTIONAL { ?gillmoreMedal dbo:awardedTo ?recipient . }
  OPTIONAL { ?recipient dbo:militaryService ?force . }

  FILTER (lang(?goldMedalLabel) = 'en' && lang(?gillmoreMedalLabel) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?prize a dbo:Award .
  ?prize rdfs:label ""Nobel Prize in Physics""@en .
  ?prize dbo:awardingBody dbr:Royal_Swedish_Academy_of_Sciences .
  ?institution dbo:award ?prize .
  ?institution rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""stockholm university""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalChild
WHERE {
  # Step 1: Find a child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .

  # Step 2: From that child, find their own child
  ?grandChild dbo:parent ?child .

  # Step 3: Determine the parent of this grandchild and check if they are royalty
  ?royalParent dbo:parent ?grandChild .
  ?royalParent dbp:title ?title .
  
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") ||
         CONTAINS(LCASE(?title), ""princess""))

  # Step 4: Identify the child of that royal parent
  ?finalChild dbo:parent ?royalParent .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  # Find The Fabulous Thunderbirds band resource
  VALUES ?band { dbr:The_Fabulous_Thunderbirds }
  
  # Get members of the band
  ?member dbo:bandMember ?band .
  
  # Filter by birth date and check if they are a musical artist
  ?member dbo:birthday ?birthDate ;
          dbo:musicalArtist ?artistResource .
  
  FILTER (YEAR(?birthDate) = 1945 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 30)
  
  # Get the real name of the person
  OPTIONAL { ?member foaf:name ?realName }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:James_Plotkin dbo:associatedBand ?band .
  ?band dbo:member ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlaceEntity
WHERE {
  # Find Antonios Varthalitis and his death place
  dbr:Antonios_Varthalitis dbo:placeOfDeath ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find an individual associated with a war award linked to ""30""
  ?warAwardee dbp:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""30""))

  # Link the entities in the death place related to this war awardee
  ?deathPlaceEntity rdf:type dbo:Settlement ;
                    dbo:location ?deathPlace .

}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?birthNamePerson WHERE {
  # Find spouse of Roger Pryor (actor)
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .

  # Find person born as Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .

  # Check if the spouse is also a member of the Republican Party
  OPTIONAL { ?spouse dbo:partyMemberOf dbr:Republican_Party_(United_States) . }

  # Ensure the person associated with Ann Sothern's birth name is the same as the spouse
  FILTER (?spouse = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?region .

  # Ensure the region is both a region and an administrative region
  ?region rdf:type dbo:Region .
  ?region rdf:type dbo:AdministrativeRegion .

  # Step 2: Identify the governor of that region
  ?governor dbo:governs ?region ;
           rdf:type dbo:Person ;
           dbo:politicalRole ?role .
  
  FILTER EXISTS { ?role rdfs:subClassOf* dbo:Politician } 

  # Step 3: Get the birthplace of this governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rodProfession ?suggsBirthName ?suggsBand ?pacelyBirthName ?pacelyArtist
WHERE {
  # Rod Argent's profession
  ?rod a dbo:Musician ;
      foaf:name ""Rod Argent"" .
  ?rod dbo:profession ?rodProfession .

  # Suggs' birth name and associated band
  ?suggs a dbo:MusicalArtist ;
         dbp:birthName ?suggsBirthName ;
         foaf:name ""Suggs"" .
  OPTIONAL { ?suggs dbo:associatedBand ?band . }
  FILTER(?band = <http://dbpedia.org/resource/Madness>)

  # $pacely's birth name and associated artist
  ?pacely a dbo:MusicalArtist ;
          foaf:name ""$pacely"" .
  ?pacely dbp:birthName ?pacelyBirthName .
  OPTIONAL { ?pacely dbo:associatedBand ?artist }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?movie dbo:starring dbr:Dipankar_De .
  ?movie dbo:country dbr:India .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,13,13,0,0.5,1.0,0.6666666666666666
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Albrecht, Duke of Württemberg""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university ?establishmentDate WHERE {
  ?university a dbo:EducationalInstitution ;
              dbp:name ""Federal University of Paraíba""@en .
  OPTIONAL { ?university dbo:established ?establishmentDate }
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?person WHERE {
  ?person a dbo:Artist .
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  ?person dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow WHERE {
  # Find the commander of the Battle of Vienna
  ?battle dbo:commander ?commander .
  
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Vienna""))

  OPTIONAL {
    # Check if there is a television show with a similar name to any societal event related to the battle
    ?tvShow dbo:name ?name .
    ?societalEvent dbo:name ?name .
    
    # Link societal event to the military force involved in the Battle of Vienna
    ?societalEvent dbo:relatedTo ?battle .
  }
  
  OPTIONAL {
    # Reference George Ducas in relation to the military force
    ?commander dbo:birthName ""George Ducas""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Stephen V of Hungary
  ?stephenV dbr:Stephen_V_of_Hungary .
  
  # Identify his predecessor
  ?predecessor dbo:successor ?stephenV .

  # Get the children of the predecessor
  ?predecessor dbo:child ?child .

  # Filter to find a child who is royalty (e.g., has a title or role related to monarchy)
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInKyoto WHERE {
  # Toyotomi Hideyoshi's child and the war involving him
  dbr:Toyotomi_Hideyori dbo:spouse ?parent .
  ?parent dbo:child dbr:Toyotomi_Hideyori .
  
  # Siege of Osaka as the war involving Toyotomi Hideyori
  dbr:Siege_of_Osaka dbo:participant dbr:Toyotomi_Hideyori ;
                     rdfs:label ?war .

  # Yamazaki Enjirō's birthplace
  dbr:Yamazaki_Enjirō dbo:birthPlace dbr:Kyoto .
  
  # Entity in Kyoto related to the context
  OPTIONAL {
    dbr:Kyoto dbo:notablePersonOrBuilding ?entityInKyoto .
  }
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find The Shadow's alter ego in comics
SELECT ?alterEgo WHERE {
    dbr:The_Shadow (dbo:character) ?alterEgo .
    FILTER EXISTS { ?alterEgo dbo:genre dbr:Comics }
}

# Step 2: Determine the profession of this character
SELECT ?profession WHERE {
    ?alterEgo dbo:occupation ?profession .
}

# Step 3: Find actors in ""Ab Kya Hoga""
SELECT DISTINCT ?actor WHERE {
    dbr:Ab_Kya_Hoga dbo:starring ?actor .
}

# Step 4: Determine the profession of these actors, specifically looking for politicians
SELECT DISTINCT ?actor ?politicianProfession WHERE {
    ?actor dbo:occupation ?profession .
    FILTER EXISTS { ?actor dbo:birthPlace ?place . ?place rdfs:label ""India""@en }
    OPTIONAL { ?actor dbo:politicalParty ?party . }
    FILTER (?party != UNDEF)
}

# Step 5: Match the professions
SELECT DISTINCT ?alterEgo ?profession WHERE {
    # Assuming we have found alterEgo and politicianProfession from previous queries
    VALUES ?politicianProfession { ""Politician"" } # Placeholder for actual profession found in step 4

    ?alterEgo dbo:occupation ?profession .
    FILTER (?profession = ?politicianProfession)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?roleInRussoPolishWar ?roleInGreatTurkishWar WHERE {
  ?successor a dbo:Person ;
             foaf:name ""John III Sobieski""@en .
  
  OPTIONAL { 
    ?successor dbo:occupation dbr:Commander_in_the_Russo-Polish_War_(1654–1667) .
    BIND(""Commander in the Russo-Polish War"" AS ?roleInRussoPolishWar)
  }
  
  OPTIONAL {
    ?successor dbo:occupation dbr:Commander_in_the_Great_Turkish_War .
    BIND(""Commander in the Great Turkish War"" AS ?roleInGreatTurkishWar)
  }

  FILTER EXISTS { 
    ?successor dbo:officeHolder dbr:King_of_Poland .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName
WHERE {
  VALUES ?miguelMaura { dbr:Miguel_Maura }
  ?miguelMaura dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:George_Pickett dbo:associatedWith ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
  FILTER (lang(?war) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  ?individual dbo:parent <http://dbpedia.org/resource/Roger_II_of_Sicily> .
  ?individual dbo:child <http://dbpedia.org/resource/William_II_of_Sicily> .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father ?fatherLink WHERE {
  ?person dbo:givenName ""Baeda"" .
  ?person dbo:familyName ""Maryam I"" .
  ?person dbo:father ?father .
  OPTIONAL { ?father rdfs:label ?fatherLabel FILTER (lang(?fatherLabel) = 'en') }
  BIND(<http://dbpedia.org/resource/Category:People_by_birth> AS ?category)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
  BIND(STR(?person) AS ?personLink)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?baedaMaryamI ?father WHERE {
  ?baedaMaryamI a dbo:Person ;
                rdfs:label ""Baeda Maryam I""@en .
  ?baedaMaryamI dbo:father ?father .
  
  OPTIONAL { 
    ?dawitI a dbo:Person ;
            rdfs:label ""Dawit I""@en .
    FILTER (?father = ?dawitI)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  # Identify Saw Min Phyu and their spouse
  ?sawMinPhyu dbo:name ""Saw Min Phyu""@en .
  ?spouse dbo:spouse ?sawMinPhyu .

  # Find child of the spouse who is royalty
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Monarch .

  # Identify Saw Min Hla and their child
  ?sawMinHla dbo:name ""Saw Min Hla""@en .
  ?hlaChild dbo:parent ?sawMinHla .

  # Find predecessor of the royalty child
  ?child dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?item ?description WHERE {
  VALUES ?xChromosome { dbr:X_chromosome }
  
  # Find items related to the X chromosome and Triple X syndrome
  ?item dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?item dbo:wikiPageWikiLink ?xChromosome . }
  OPTIONAL { ?item dbo:wikiPageDisambiguates ?disambiguation . FILTER(CONTAINS(LCASE(?disambiguation), ""triple x syndrome"")) }

  # Get a description of the item
  ?item dbo:abstract ?description .
  
  FILTER (LANG(?description) = 'en')
}
ORDER BY ?item
```",1,1,2,1,1,3,3,71,0,32,1,0.0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?childOfSawMinHla WHERE {
  # Step 1: Find Saw Shwe Khet's child who is royalty
  ?royalChild dbo:parent dbr:Saw_Shwe_Khet .
  ?royalChild rdf:type dbo:Monarch .

  # Step 2: Determine the father of that royal child
  ?father dbo:child ?royalChild .
  
  # Step 3: Find the spouse of that father
  ?spouse dbo:spouse ?father .

  # Step 4: Identify the child of Saw Min Hla and the spouse found in step 3
  ?childOfSawMinHla dbo:parent dbr:Saw_Min_Hla .
  ?childOfSawMinHla dbo:parent ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  
  # Assuming there is a property for predecessor, which might be specific to certain roles or titles
  ?child dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?parent WHERE {
  ?movie dbo:genre ?workType .
  FILTER (?workType IN (dbo:Film, dbo:TelevisionShow))
  ?movie dbo:starringVeraLynn true .
  
  ?artist dbo:birthPlace dbr:London ;
          dbo:author ?movie ;
          a dbo:MusicalArtist .

  OPTIONAL { ?artist foaf:parent ?parent }
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?residence ?tenant
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Madrid ;
         dbo:termStart ?start .
  
  FILTER (YEAR(?start) = 2003)

  ?mayor dbp:officialResidence ?residence .

  OPTIONAL { 
    ?residence dbo:tenant ?tenant .
  }

  BIND(?mayor AS ?leader)
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerVfLBochum ?teamManagedByThomasLetsch
WHERE {
  # Find the manager of VfL Bochum during the 2007-08 season
  ?season a dbo:SoccerClubSeason ;
          dbo:sportsTeam dbr:VfL_Bochum ;
          dbo:season ""2007–08""^^xsd:string .
  
  ?season dbo:manager ?managerVfLBochum .

  # Find the team managed by Thomas Letsch
  ?letsch a dbo:SoccerManager ;
          foaf:name ""Thomas Letsch""@en .
  
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:sportsTeam ?teamManagedByThomasLetsch ;
              dbo:manager ?letsch .
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?officeTitle WHERE {
  ?person dbo:wikiPageWikiLink dbr:Central_African_Republic_Civil_War .
  ?person a dbo:Politician .
  OPTIONAL { ?person dbo:positionHeld ?office . }
  OPTIONAL { ?office dbp:title ?officeTitle . }
  
  FILTER (CONTAINS(LCASE(?officeTitle), ""commander"") || CONTAINS(LCASE(?officeTitle), ""president"") || CONTAINS(LCASE(?officeTitle), ""prime minister""))
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?occupation 
WHERE {
  ?person rdfs:label ""Bob Thompson (musician)""@en .
  OPTIONAL { ?person dbo:musicalArtist ?band . }
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""singer"")) }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?leaderName ?mayorName WHERE {
  # Find the leader elected in the 2009 Galician regional election
  ?person dbo:election dbr:Galician_regional_election,_2009 .
  ?person dbo:office ?officeLeader .
  ?officeLeader rdfs:label ?officeLabel .
  FILTER(CONTAINS(LCASE(?officeLabel), ""president of xunta de galicia""))
  ?person foaf:name ?leaderName .

  # Find the current tenant (mayor) of Santiago de Compostela
  ?santiagoOffice dbo:currentIncumbent ?mayorPerson .
  ?santiagoOffice dbo:officeLocation dbr:Santiago_de_Compostela .
  ?santiagoOffice rdfs:label ?officeLabel2 .
  FILTER(CONTAINS(LCASE(?officeLabel2), ""mayor""))
  ?mayorPerson foaf:name ?mayorName .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?predecessor WHERE {
  # Duke Philipp of Württemberg's child
  ?philippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Grandchild of Duke Philipp (child of his child)
  ?grandchild dbo:parent ?philippChild .

  # Child of Philipp Albrecht, Duke of Württemberg
  ?albrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Predecessor of the child of Philipp Albrecht
  ?predecessor dbo:successor ?albrechtChild .

  # Ensure we are looking at the same title or position for predecessor-successor relationship
  ?predecessor dbp:title ?title .
  ?albrechtChild dbp:title ?title .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person { 
    dbr:Gustavo_Petro 
    dbr:Roy_Barreras 
  }
  
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  
  FILTER (lang(?partyName) = 'en')
}
```",3,3,4,1,3,2,3,28,0,12,1,0.0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlaceLabel ?workplaceHomepageLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chieko Asakawa""@en ;
          dbo:birthPlace ?birthPlace ;
          OPTIONAL { ?person foaf:workplaceHomepage ?workplaceHomepage . FILTER (lang(?workplaceHomepage) = 'ja') }
  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    OPTIONAL { ?workplaceHomepage rdfs:label ?workplaceHomepageLabel . FILTER(lang(?workplaceHomepageLabel) = 'en') }
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChildFather WHERE {
  # Identify Philip I of Castile
  dbr:Philip_I_of_Castile a dbo:Monarch ;
                          dbo:spouseOrPartner dbr:Joanna_of_Castile .

  # Find children of Philip I and Joanna of Castile
  ?child dbo:parent dbr:Philip_I_of_Castile .
  ?child dbo:parent dbr:Joanna_of_Castile .

  # Identify Isabella of Austria as one of the children
  OPTIONAL { ?child rdfs:label ""Isabella of Austria""@en . }

  # Check if there is another royal child and find their father
  FILTER(?child != dbr:Isabella_of_Austria)
  ?royalChild dbo:parent ?royalChildFather .
  
  # Ensure the other child is royalty
  ?royalChild a dbo:Monarch .

}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Winston Churchill""@en .
  ?award dbo:recipient ?person ;
         dbo:year ""1953""^^xsd:gYear ;
         rdf:type dbo:NobelPrizeInLiteratureAward .
  ?person dbo:spouseOrPartner ?partner .
  OPTIONAL { ?partner dbo:occupation dbr:Prime_Minister_of_the_United_Kingdom . }
  ?war dbo:participatedIn ?person .
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?martin dbo:childOf ?parent .
  FILTER (str(?martin) = ""Martin of Aragon"") .

  ?parent dbo:father ?father .
  
  OPTIONAL { ?father dbp:title ?title . }
  FILTER EXISTS { 
    ?father dbp:title ?title .
    FILTER (
      CONTAINS(LCASE(str(?title)), ""king"") ||
      CONTAINS(LCASE(str(?title)), ""queen"") ||
      CONTAINS(LCASE(str(?title)), ""prince"") ||
      CONTAINS(LCASE(str(?title)), ""duke"") ||
      CONTAINS(LCASE(str(?title)), ""emperor"")
    )
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""ATL""@en .
  
  ?film dbo:starring ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfParent ?predecessor
WHERE {
  # Step 1: Find Min Hla Htut's parent
  ?minHlaHtut dbo:name ""Min Hla Htut""@en .
  ?minHlaHtut dbo:parent ?parent .

  # Step 2: Find the child of that parent (could be another sibling or Min Hla Htut)
  ?childOfParent dbo:parent ?parent .

  # Step 3: Find Saw Shwe Khet's child
  ?sawShweKhet dbo:name ""Saw Shwe Khet""@en .
  ?sawShweKhetChild dbo:child ?sawShweKhet .

  # Step 4: Determine the predecessor of this child
  OPTIONAL {
    ?predecessor dbo:succeededBy ?sawShweKhetChild .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName
WHERE {
  # Identify the VfL Bochum 2006-07 season
  dbr:VfL_Bochum_season_2006–07 dbo:sportsTeamSeasonInLeague dbr:2._Bundesliga.

  # Find successor football league season
  ?successorSeason a dbo:SportsTeamSeason ;
                  dbo:predecessor dbr:VfL_Bochum_season_2006–07 ;
                  dbo:sport dbr:Soccer .

  # Identify the manager of this successor season
  ?manager dbp:managedTeam ?successorSeason ;
           dbp:name ?managerName .

  # Ensure the manager is also linked to SBV Vitesse 2020-21 season
  dbr:SBV_Vitesse_season_2020–21 dbo:sportsTeamSeasonInLeague dbr:Eredivisie.
  ?manager dbp:managedTeam dbr:SBV_Vitesse_season_2020–21 .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Actor in ATL
  { 
    ?film dbo:title ""ATL""@en .
    ?film dbo:starring ?actor .
  }
  
  UNION
  
  # Professional associated with The Shadow
  { 
    ?person foaf:name ""The Shadow""@en ;
            a dbo:Agent .
    ?person foaf:name ?actorName .
    FILTER(?actorName = ?actor)
  }

  UNION

  # Actor in Shelby Oaks
  {
    ?film2 dbo:title ""Shelby Oaks""@en .
    ?film2 dbo:starring ?actor .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  ?award a dbo:Award ;
         dbo:name ?awardName .
  
  FILTER regex(?awardName, ""Pulitzer"", ""i"") .

  ?award dbo:settlement dbr:Plattsburgh ; # Pulitzer Prize is associated with Plattsburgh
         dbo:recipient ?recipient .

  ?recipient dbo:nativePlace ?nativePlace ;
             dbp:birthPlace ?birthPlace .
  
  FILTER regex(?birthPlace, ""New York"", ""i"") . # Awardee's birthplace in New York (state)
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  ?person dbo:birthPlace dbr:Middlesex .
  ?person dbo:child dbr:Mary_Elphinstone,_Lady_Elphinstone .
  ?person rdfs:label ?parentName .
  FILTER (LANG(?parentName) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Step 2: Find band members of the associated artist who are also musical artists
  ?artist dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Step 3: Identify Bobby Shmurda's birth name and native state
  dbr:Bobby_Shmurda dbo:birthName ""Shmurda Shegawd""@en ;
                     dbo:nativePlace dbr:Florida .

  # Step 4: Filter band members by birth name and native state
  ?bandMember dbo:birthName ""Shmurda Shegawd""@en .
  ?bandMember dbo:nativePlace dbr:Florida .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:University_of_São_Paulo dbo:foundingDate ?foundingDate .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  ?settlement rdf:type dbo:Settlement .
  ?settlement dbp:country dbc:England . # Assuming 'dbc:England' is the DBpedia concept for England

  ?artist dbo:nationality dbc:English ; # Assuming 'dbc:English' is the DBpedia concept for English nationality
          dbo:birthPlace ?settlement ;
          rdf:type dbo:Artist, dbo:MusicalArtist .

  ?artist dbo:parent ?parent .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?position WHERE {
    ?council a dbo:Council ;
             dbo:city dbr:Madrid ;
             dbo:electionYear ""2003""^^xsd:gYear .
    
    ?person dbo:officeHolderOf ?council ;
            dbo:positionHeld ?position .

    FILTER regex(?position, ""Mayor|Leader"", ""i"")
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personLabel ?birthPlaceLabel WHERE {
  # Governor of Virginia
  OPTIONAL {
    VALUES ?governor { dbr:Glenn_Youngkin }
    ?governor dbo:birthPlace ?birthPlace .
    BIND(?governor AS ?person)
    SERVICE <http://dbpedia.org/sparql> {
      ?person rdfs:label ?personLabel .
    }
  }

  # Vince Gilligan
  OPTIONAL {
    VALUES ?vince { dbr:Vince_Gilligan }
    ?vince dbo:birthPlace ?birthPlace .
    BIND(?vince AS ?person)
    SERVICE <http://dbpedia.org/sparql> {
      ?person rdfs:label ?personLabel .
    }
  }

  # Cece Bell
  OPTIONAL {
    VALUES ?cece { dbr:Cecilie_Caroline_Bell }
    ?cece dbo:birthPlace ?birthPlace .
    BIND(?cece AS ?person)
    SERVICE <http://dbpedia.org/sparql> {
      ?person rdfs:label ?personLabel .
    }
  }

  # Filter to ensure we get labels for each person
  FILTER(?personLabel != """")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:burialPlace dbr:Melbourne_Cemetery .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,809,0,0.0,0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader a dbo:HeadOfState ;
          dbo:nationality dbr:Germany .

  # Step 2: Determine the country associated with this leader
  ?country dbo:name ""West Germany""@en .
  
  # Step 3: Find a sports manager born on 1968-08-26 in that country
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality ?country ;
          a dbo:SportsManager .

  # Step 4: Identify the soccer club season associated with this sports manager
  ?teamSeason dbo:manager ?person ;
              a dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason .
  
  # Step 5: Retrieve the manager of that team for the specified seasons
  ?teamSeason dbo:manager ?manager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?fictionalCharacter WHERE {
  # Get the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Get Kent Allard's profession
  dbr:Kent_Allard dbo:profession ?allardProfession .

  # Find a fictional character with the same profession as Kent Allard
  ?fictionalCharacter a dbo:FictionalCharacter ;
                     dbo:profession ?allardProfession .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  { 
    ?person rdfs:label ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
    FILTER(LANG(?birthPlace) = 'en')
  }
  UNION
  { 
    ?person rdfs:label ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
    FILTER(LANG(?birthPlace) = 'en')
  }
  UNION
  { 
    ?person rdfs:label ""Glenn Youngkin""@en .
    ?person dbo:birthPlace ?birthPlace .
    FILTER(LANG(?birthPlace) = 'en')
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?psoeLeader ?galicianOffice ?primeMinister ?adminPosition
WHERE {
  # Identify PSOE leader in 2009
  ?psoeLeader dbo:leaderOf dbr:Spanish_Socialist_Workers'_Party ;
              dbo:officeHolder ?office .

  # Determine their role during the Galician regional election of 2009
  ?galElection dbo:electedOffice ?galicianOffice .
  FILTER (?galElection = dbr:Galician_regional_election,_2009)

  # Find out who was the Prime Minister (tenant) of Spain in 2009
  ?primeMinister dbo:officeHolder dbr:Prime_Minister_of_Spain ;
                dbo:termStart ?start .
  FILTER (?start <= ""2009-12-31""^^xsd:date && ?start >= ""2009-01-01""^^xsd:date)

  # Identify any other relevant administrative position held by a Spanish official from PSOE
  OPTIONAL {
    ?adminPosition dbo:officeHolder ?psoeLeader ;
                   dbo:positionTitle ?title .
    FILTER CONTAINS(LCASE(?title), ""administration"")
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?charles rdf:type dbo:Monarch ;
           foaf:name ""Charles I of Hungary""@en .
  ?charles dbo:father ?father .
  ?father rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for the writer of ""Always the Love Songs""
SELECT ?writer WHERE {
  ?book dcterms:title ""Always the Love Songs""@en .
  ?book dbo:author ?writer .
}

UNION

# Query for a commander in the Great Turkish War
SELECT ?commander WHERE {
  ?person dbo:nationality ?nationality ;
          dbo:occupation dbp:Military_person ;
          dbo:dateOfBirth ?dob ;
          dbo:dateOfDeath ?dod .
  FILTER (?dob < ""1699-01-01""^^xsd:date && (?dod > ""1683-01-01""^^xsd:date || ?dod = ""9999-12-31""^^xsd:date))
  ?person dbo:wikiPageWikiLink ?war .
  ?war rdfs:label ""Great Turkish War""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberDavidPaton ?bandMemberStuartMcBeathTosh
WHERE {
  # Find the musical artist associated with David Paton
  ?artist dbo:bandMember ?davidPaton .
  ?davidPaton foaf:name ""David Paton""@en .

  # Get band members of that artist
  ?artist dbo:bandMember ?bandMemberDavidPaton .

  # Find the musical artist associated with Stuart McBeath Tosh
  ?artist2 dbo:bandMember ?stuartMcbeathTosh .
  ?stuartMcbeathTosh foaf:name ""Stuart McBeath Tosh""@en .

  # Get band members of that artist
  ?artist2 dbo:bandMember ?bandMemberStuartMcBeathTosh .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the main actor in ""The Sky Ranger"" and their death place
SELECT ?actorName (SAMPLE(?deathPlace) AS ?actorDeathPlace)
WHERE {
  ?film dbo:title ""The Sky Ranger""@en .
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName FILTER(LANG(?actorName) = 'en') .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
GROUP BY ?actorName

UNION

# Query for Carolyn Jones's death place
SELECT ""Carolyn Jones"" AS ?name (SAMPLE(?deathPlace) AS ?deathPlace)
WHERE {
  dbr:Carolyn_Jones dbo:deathPlace ?deathPlace .
}

```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?alfonso a dbo:Monarch ;
           foaf:name ""Alfonso IV of Aragon""@en .
  
  ?alfonso dbo:child ?child .
  ?child foaf:name ?childName .

  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(STR(?title)), ""king"") || CONTAINS(LCASE(STR(?title)), ""queen""))
  }
}
```",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:year ""1930"" ;
         a dbo:NobelPrize .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Myat Hpone Pyo's father who is a royalty
  ?myatHponePyo dbo:father ?royalFather .
  FILTER EXISTS { ?royalFather dbo:occupation dbr:Monarch . }

  # Step 2: Find the spouse of that royal father
  ?royalFather dbo:spouse ?spouse .

  # Step 3: Identify Min Hla Htut's parent
  ?minHlaHtut dbo:parent ?parentOfMinHlaHtut .
  
  # Step 4: Find Saw Shwe Khet's child and predecessor
  ?sawShweKhet dbo:child ?childOfSawShweKhet .
  ?predecessor dbo:succeededBy ?childOfSawShweKhet .

  # Ensure the spouse is related to the parent of Min Hla Htut and predecessor of Saw Shwe Khet's child
  FILTER (?spouse = ?parentOfMinHlaHtut && ?spouse = ?predecessor)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant ?office WHERE {
  # Find the leader of an administration related to PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?administration dbo:leader ?tenant .

  OPTIONAL {
    # Check for any connection to Alberto Núñez Feijóo's office
    ?feijoosOffice dbo:officeHolder dbr:Alberto_Núñez_Feijóo ;
                  dbo:partOf ?administration .
  }

  FILTER EXISTS { ?administration dbo:country dbr:Spain }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitaka ?timeZone WHERE {
  ?mitaka a dbo:Municipality ;
          rdfs:label ""Mitaka""@en .
  
  OPTIONAL { 
    ?mitaka dbo:timeZone ?timeZone .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?clubName ?playerTeam WHERE {
  # Find Denis Kolodin's nicknames
  VALUES ?denisKolodin { dbr:Denis_Kolodin }
  
  ?denisKolodin dbo:nickname ?nickname .
  
  # Check if the nickname is a soccer club
  OPTIONAL {
    ?club dbr:officialName ?nickname ;
          a dbo:SoccerClub .
    BIND(?nickname AS ?clubName)
  }

  # Find Aleksandr Filimonov's team or club
  VALUES ?aleksandrFilimonov { dbr:Aleksandr_Filimonov }
  
  ?aleksandrFilimonov dbo:team ?playerTeam .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childLabel
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?person dbo:child ?child .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantOfMadrid ?miguelMauraOffice
WHERE {
  # Find the tenant of Madrid who is a politician involved in the Central African Republic Civil War
  ?person dbo:officeHolder ?office .
  ?person dbo:politicalPartyMember ?party .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:wikiPageWikiLink dbr:Central_African_Republic_Civil_War .

  # Find the office of Miguel Maura
  dbr:Miguel_Maura dbo:officeHolder ?miguelMauraOffice .

  # Bind the person to tenantOfMadrid variable
  BIND(?person AS ?tenantOfMadrid)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  ?club rdf:type dbo:SoccerClub ;
        dbo:sportTeam dbr:Hong_Kong_C .
  
  ?club dbo:manager ?manager .
  ?manager rdf:type dbo:SportsManager, dbo:SoccerManager .
  
  BIND (STR(?manager) AS ?managerName)
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
    ?person1 dbo:spouse ?spouse .
    ?spouse dbo:child ?child .

    FILTER(?person1 = db:Frederick_Stanley_16th_Earl_of_Derby) .

    ?child rdf:type dbo:Politician ;
           rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .

    ?father dbo:spouse ?mother .
    ?mother dbo:child ?child .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?antoine a dbo:Duke ;
          rdfs:label ""Antoine, Duke of Lorraine""@en .
  
  ?francis1 a dbo:Duke ;
            rdfs:label ""Francis I, Duke of Lorraine""@en ;
            dbo:parent ?antoine .

  ?antoine dbo:spouse ?spouse .

  FILTER EXISTS { ?spouse a dbo:Noble . }
  FILTER EXISTS { ?spouse a dbo:RoyalFamilyMember . }

}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?child dbo:parent dbr:Chiang_Ching-kuo ;
         dbo:occupation dbr:Politician .
  ?child dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Bill Clinton through his associations
  ?billClinton dbo:spouse dbr:Hillary_Clinton .
  ?billClinton dbo:author dbr:Back_to_Work_(book) .
  ?arcadia dbo:owner ?billClinton ;
           rdfs:label ""USS Arcadia (ID-1605)""@en .

  # Identify the war as a societal event and disease
  ?worldWar1 dbo:hasPart ?event ;
            dbo:wikiPageRedirects dbr:World_War_I .
  ?event rdf:type dbo:Disease ;
         dbo:societalEvent true .

  # Find the commander during World War I
  ?commander dbo:officeHolder ?position .
  ?position dbo:office dbr:President_of_the_United_States ;
            dbo:termStart ?start ;
            dbo:termEnd ?end .
  
  FILTER (?start <= ""1918-11-11""^^xsd:date && ?end >= ""1914-07-28""^^xsd:date)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person a dbo:Politician ;
          dbo:officeHolder dbr:President_of_the_United_States .
  ?work dbo:author ?person ;
        a dbo:Book .
  FILTER EXISTS { ?person dbo:commanderInWar dbr:COVID-19_pandemic_in_the_United_States . }
  
  BIND(?person AS ?author)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Tupac Shakur (associated with ""Pacely"")
  dbr:Tupac_Shamakur a dbo:MusicalArtist ;
                     foaf:name ?tupacName .

  # Joseph Aning (Joey B)
  dbr:Joseph_Aning a dbo:MusicalArtist ;
                   foaf:name ?joeyBName .

  # Check for any common collaborations or influences
  OPTIONAL {
    ?collaboration dbo:artist ?artist1 .
    ?collaboration dbo:artist ?artist2 .
    FILTER (?artist1 = dbr:Tupac_Shamakur || ?artist2 = dbr:Tupac_Shamakur)
    FILTER (?artist1 = dbr:Joseph_Aning || ?artist2 = dbr:Joseph_Aning)
  }

  # Check for shared categories or influences
  OPTIONAL {
    ?influence dbo:source dbr:Tupac_Shamakur ;
               dbo:target ?artist2 .
    FILTER(?artist2 = dbr:Joseph_Aning)

    ?influence dbo:source dbr:Joseph_Aning ;
               dbo:target ?artist1 .
    FILTER(?artist1 = dbr:Tupac_Shamakur)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?person .
  
  # Author of ""Back to Work""
  ?book dbo:title ""Back to Work""@en ;
        dbo:author ?person .
  
  # Commander during the Third Taiwan Strait Crisis
  ?crisis dbo:commander ?person ;
          dbo:name ""Third Taiwan Strait Crisis""@en .

  FILTER(?person = dbr:Bill_Clinton)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?residence WHERE {
  ?party dbo:leader ?leader .
  ?leader foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""ulster unionist party"")).
  
  OPTIONAL { ?leader dbo:residence ?residence . }
  
  VALUES ?party { dbr:Ulster_Unionist_Party }
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather WHERE {
  # Step 1: Identify Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father ?father.

  # Step 2: Determine the parent of that father (grandfather) and check if he is royalty
  ?father dbo:father ?parentOfFather.
  
  # Ensure the grandfather is a royalty
  ?parentOfFather rdf:type dbo:Monarch .

  # Step 3: Identify Stephen V of Hungary's child who matches the above criteria
  dbr:Stephen_V_of_Hungary dbo:child ?parentOfFather.

  # Step 4: Find Philip I, Prince of Taranto's father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?fatherOfPhilipI.

  # Step 5: Determine the spouse of that father
  ?spouse dbo:spouse ?fatherOfPhilipI.
  
  FILTER(?parentOfFather = ?spouse)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?thunderbirds ?kimWilson ?nickCurranRealName ?associatedArtist
WHERE {
  # Identify The Fabulous Thunderbirds and Kim Wilson
  dbr:The_Fabulous_Thunderbirds dbo:leader dbr:Kim_Wilson .
  
  # Find associated artists with Kim Wilson
  OPTIONAL { 
    dbr:Kim_Wilson dbo:associatedBand ?associatedArtist .
  }
  
  # Identify Nick Curran's real name or persona details
  dbr:Nick_Curran dbo:birthName ?nickCurranRealName .
  
  # Ensure Nick Curran is associated with Kim Wilson in some capacity
  OPTIONAL {
    ?artist dbo:associatedBand dbr:The_Fabulous_Thunderbirds ;
            dbo:associatedBand dbr:Nick_Curran .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:Athlete .
  ?player dbo:birthDate ?date .
  FILTER (STR(?date) = ""1955-02-22"") .

  ?sergio dbr:Sergio_Agüero ;
          dbo:playsFor ?team .

  ?player dbo:playsFor ?team .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving ""The Triple X's""
  ?tripleXs a dbo:MilitaryConflict ;
            dbo:commander ?commander .

  # Find the military force involved in the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:militaryForce ?battleForce .
  
  # Link the commander to the Battle of Fort Royal's military force
  ?commander dbo:militaryForce ?battleForce .

  # Identify Robert Calder's involvement in a military and societal event
  dbr:Robert_Calder dbo:event ?event ;
                    dbo:societalEvent ?societalEvent .
  
  # Ensure the commander is linked to these events
  ?commander dbo:event ?event ;
             dbo:societalEvent ?societalEvent .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find Nate Newton's associated band
  dbr:Nate_Newton dbo:musicalArtist dbr:Minutemen .
  
  # Step 2: Find the associated musical artists of Minutemen
  dbr:Minutemen dbo:musicalArtist ?associatedBand .

  # Step 3: Filter to find bands that are also organizations
  ?associatedBand a dbo:MusicalArtist ;
                 a dbo:Organization .
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthPlaceLabel WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  
  ?university dbo:alumni ?alumnus .
  
  OPTIONAL { ?alumnus dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . FILTER (lang(?birthPlaceLabel) = 'en') }

  # Limit to one result for simplicity
  LIMIT 1
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  # Find a child of Prince Faisal bin Hussein who is royalty
  ?child dbo:spouse* ?faisal .
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  
  # Ensure the child is also royalty (e.g., has a title)
  ?child dbo:title ?title .

  # Find Prince Omar bin Faisal's parent
  ?omar foaf:parent ?parent .
  ?omar rdfs:label ""Prince Omar bin Faisal""@en .

  # Match the common parent
  FILTER(?child = ?omar)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the birth name of Bob Thompson (musician)
SELECT ?birthName WHERE {
    dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .
}

# Step 2: Identify a fictional character and comics character created by Walter B. Gibson
SELECT DISTINCT ?fictionalCharacter WHERE {
    dbr:Walter_B._Gibson dbo:created ?fictionalCharacter .
    ?fictionalCharacter rdf:type dbo:FictionalCharacter ;
                       dbo:wikiPageWikiLink dbr:Comics .
}

# Step 3: Determine the professional alter ego related to that creation
SELECT DISTINCT ?alterEgo WHERE {
    ?fictionalCharacter dbo:alias ?alterEgo .
}

# Step 4: Find the band associated with Bob Thompson's birth name when performing under this alter ego
SELECT DISTINCT ?band WHERE {
    ?birthName dbo:memberOfBand ?band .
    FILTER(?birthName IN (?birthNameFromStep1))
    FILTER(?alterEgo IN (?alterEgoFromStep3))
}
```

Note: The above SPARQL query is structured to be executed in parts, where each step's result feeds into the next. In practice, you would need to execute these queries sequentially and use the results from one step as input for the subsequent steps.",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?ducasInfo ?successor 
WHERE {
  # Commander in the Great Turkish War
  dbr:Prince_Eugene_of_Savoy dbo:occupation dbr:Military_person ;
                               dbo:wikiPageDisambiguates ?disambiguation .
  
  OPTIONAL { 
    ?disambiguation rdfs:label ""George Ducas""@en . # Link to George Ducas if available
    BIND(""Information about George Ducas related to the Great Turkish War"" AS ?ducasInfo)
  }
  
  # Successor of Yurii Khmelnytsky
  dbr:Ivan_Mazepa dbo:successorOf dbr:Yuri_Khmelnytsky ;
                  rdfs:label ?successorLabel .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?birthEntity WHERE {
  # Part 1: Find the war associated with the awardee of the Golden Sword for Bravery
  ?person dbo:award ""Golden Sword for Bravery""@en .
  ?person dbo:occupation ?occupation .
  FILTER(?occupation IN (dbr:Military_person, dbr:Soldier)) .
  
  # Assuming the person participated in a war
  ?person dbo:participatedIn ?war .

  # Part 2: Find entity in the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Find notable entities associated with her birthplace
  ?birthEntity dbo:location ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?ship a dbo:Ship ;
        dbp:name ""USS Arcadia (ID-1605)"" .
  
  ?ship dbp:owner ?owner .

  ?owner dbo:participatedInWar ?war .

  FILTER (
    EXISTS { 
      ?war dbo:description ?description .
      FILTER(CONTAINS(LCASE(?description), ""disease"") && CONTAINS(LCASE(?description), ""societal event""))
    }
  )
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Find a child of Frederick Stanley, 16th Earl of Derby
  ?child dbo:spouse* <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  # Ensure this child is also a parent of Victor Stanley (Royal Navy officer)
  ?parent dbp:child <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> .

  # Link the two relationships
  FILTER(?child = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person foaf:name ""David Luckman""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceCountry WHERE {
  ?person dbo:officeTitle dbr:President_of_the_Xunta_de_Galicia ;
          dbo:termStart ?start ;
          dbo:country dbr:Spain .
  
  FILTER(YEAR(?start) = 2009)
  
  ?person dbp:nationality dbr:Spanish .

  OPTIONAL { 
    ?person dbo:residence ?residence .
    ?residence a dbo:Country .
    BIND(str(?residence) AS ?residenceCountry)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?retailleauPartyLabel ?successorPartyLabel WHERE {
  # Find Bruno Retailleau's political party
  dbr:Bruno_Retailleau dbo:party ?retailleauParty .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find Patrice Martin-Lalande's successor and their political party
  {
    SELECT DISTINCT ?successor WHERE {
      dbr:Patrice_Martin-Lalande dbo:succeededBy ?successor .
      FILTER EXISTS { ?successor dbo:nationality dbr:France . } # Ensure the successor is French
    }
  }

  OPTIONAL {
    ?successor dbo:party ?successorParty .
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  # Step 1: Find Saw Shwe Khet's child
  ?sawChild dbo:parent dbr:Saw_Shwe_Khet .
  
  # Step 2: Find Minye Kyawswa's grandchild
  ?minyeParent dbo:child ?minyeChild .
  ?minyeGrandchild dbo:parent ?minyeParent .

  # Step 3: Find the predecessor of Saw Shwe Khet's child
  ?sawChild dbo:predecessor ?predecessor .
}
```",5,5,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?office ?countryResidence
WHERE {
  # Find the office held by Alberto Núñez Feijóo
  dbp:Alberto_Núñez_Feijóo dbo:office ?office .

  # Find Álvaro Quirós's residence and check if it is a country
  dbp:Álvaro_Quirós dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?countryResidence)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person rdf:type dbo:Politician ;
          foaf:name ""Arthur Stanley""@en .
  ?person dbo:parent ?parent .
  ?parent dbp:gender ""male""^^xsd:string .
  BIND(?parent AS ?father)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?soccerClub ?season
WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
  ?person rdfs:label ?managerName .
  
  ?person dbo:manager ?soccerClub .
  ?soccerClub rdf:type dbo:SoccerClub .
  
  OPTIONAL {
    ?season dbo:sportTeam ?soccerClub ;
            rdf:type/(dbo:SportsSeason|dbo:SportsTeamSeason) .
  }
}
ORDER BY ?managerName
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?administrationRole
WHERE {
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?person a dbo:Person ;
          rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  # Identify his title or role
  OPTIONAL { ?person dbo:title ?administrationRole . }
  
  # Find territories associated with him that were administered from Copenhagen
  OPTIONAL {
    ?territory dbo:countryAdministered dbr:Copenhagen ;
               dbo:administrativeCapital dbr:Copenhagen .
    
    ?person dbo:associatedWith ?territory .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?band 
WHERE {
  VALUES ?emilia { dbr:Emilia_(Bulgarian_singer) }
  
  ?emilia dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""singer""))

  OPTIONAL {
    ?emilia dbo:memberOfBand ?band .
  }
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person rdfs:label ""Saw Min Hla""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?settlementName WHERE {
  # Identify Linda Miller as an actress
  ?linda a dbo:Actor ;
         foaf:name ""Linda Miller"" ;
         dbo:birthPlace ?birthPlace .

  # Find her child
  ?linda dbo:spouse ?partner .
  ?partner dbo:child ?child .

  # Check if the child is American and has a settlement name
  ?child dbo:nationality dbr:United_States ;
         foaf:name ?name .
  
  FILTER regex(?name, ""^(?i)([A-Z][a-z]+(?: [A-Z][a-z]+)*)$"", ""i"") # Regex to match typical settlement names

  # Check if the child has won an award in New York State
  OPTIONAL {
    ?child dbo:award dbr:New_York_State .
  }

  BIND(?name AS ?settlementName)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional (GROUP_CONCAT(?role; separator="", "") AS ?roles) WHERE {
  # Find the album ""Lasso the Moon""
  dbr:Lasso_the_Moon dbo:albumArtist ?artist .
  
  # Check if the artist is also an actor
  OPTIONAL { ?artist dbo:actorInFilm ?film . }
  
  # Get roles of the professional (either as musician or actor)
  {
    ?artist rdf:type dbo:MusicalArtist .
    BIND(""Musician"" AS ?role)
  } UNION {
    ?artist rdf:type dbo:Actor .
    BIND(""Actor"" AS ?role)
  }

  # Ensure we have at least one role
  FILTER(?role != """")
}
GROUP BY ?professional
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer
WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         rdf:type dbo:Monarch .

  # Step 3: Identify the father of this royal child
  ?royalChild dbo:parent ?father .
  
  FILTER(?royalChild = ?child)

  # Step 4: Ensure the father is royalty
  ?father rdf:type dbo:Monarch .

  # Step 5: Find the spouse of this royal father
  ?father dbo:spouse ?spouse .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickCurranArtist ?fabulousThunderbirdRealName ?bandMemberArtist WHERE {
  # Find associated musical artist of Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  }

  # Get real names of The Fabulous Thunderbirds members
  ?member dbo:memberOfBand dbr:The_Fabulous_Thunderbirds ;
          dbo:birthDate ?birthDate ;
          foaf:name ?fabulousThunderbirdRealName .

  FILTER (?birthDate = ""1945-03-30""^^xsd:date)

  # Find the associated musical artist of this band member
  OPTIONAL {
    ?member dbo:associatedMusicalArtist ?bandMemberArtist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
# Query to find Paulus Powell's birthplace and check if it's a region or administrative region
SELECT ?birthPlace WHERE {
  dbpedia:Paulus_Powell dbo:birthPlace ?birthPlace .
}

# Assuming the result is a region, query for its governor
SELECT ?governorBirthPlace WHERE {
  ?region rdfs:label ?birthPlaceLabel . # Replace with actual birth place label from previous query
  FILTER (lang(?birthPlaceLabel) = 'en')
  ?region dbo:governmentOfficial ?governor .
  ?governor rdf:type dbo:Politician .
  ?governor dbo:birthPlace ?governorBirthPlace .
}

# Query to find Cece Bell's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Cecily_Ann_Bell dbo:birthPlace ?birthPlace .
}

# Assuming the result is a region, query for its governor
SELECT ?governorBirthPlace WHERE {
  ?region rdfs:label ?birthPlaceLabel . # Replace with actual birth place label from previous query
  FILTER (lang(?birthPlaceLabel) = 'en')
  ?region dbo:governmentOfficial ?governor .
  ?governor rdf:type dbo:Politician .
  ?governor dbo:birthPlace ?governorBirthPlace .
}

# Query to find Vince Gilligan's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Vince_Gilligan dbo:birthPlace ?birthPlace .
}

# Assuming the result is a region, query for its governor
SELECT ?governorBirthPlace WHERE {
  ?region rdfs:label ?birthPlaceLabel . # Replace with actual birth place label from previous query
  FILTER (lang(?birthPlaceLabel) = 'en')
  ?region dbo:governmentOfficial ?governor .
  ?governor rdf:type dbo:Politician .
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerOfClaimToFame WHERE {
  # Step 1: Identify the actor associated with ""Johnny Doughboy""
  ?actor dbo:title ""Johnny Doughboy""@en .
  
  # Step 2: Find the producer of A Star Is Born (1937 film)
  ?aStarIsBorn dbr:A_Star_Is_Born_(1937_film) ;
               dbo:producer ?producerOfAStarIsBorn .

  # Step 3: Determine what is considered the actor's claim to fame
  ?actor dbo:claimToFame ?claimToFameWork .
  
  # Step 4: Retrieve the producer of that particular work
  ?claimToFameWork dbo:producer ?producerOfClaimToFame .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  VALUES ?dikhawa { 
    dbr:Dikhawa (replace with the correct DBpedia resource if known)
  }
  
  OPTIONAL {
    ?dikhawa dbo:abstract ?abstract .
    FILTER(CONTAINS(LCASE(?abstract), ""theme""))
    BIND(SUBSTR(?abstract, STRSTARTS(UCASE(?abstract), ""THEME: ""), 1000) AS ?theme)
  }

  OPTIONAL {
    ?dikhawa dbo:genre ?genre .
    ?genre rdfs:label ?genreLabel .
    FILTER(LANG(?genreLabel) = 'en')
    BIND(CONCAT(""Genre: "", ?genreLabel) AS ?theme)
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
# Part 1: Find the birthplace of Cece Bell, author of ""El Deafo""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
    ?author foaf:name ""Cece Bell""@en .
    ?author dbo:work dbr:El_Deafo .
    ?author dbo:birthPlace ?birthPlace .
}

UNION

# Part 2: Find the birth region of Paulus Powell and its current governor
PREFIX dbp-geo: <http://dbpedia.org/ontology/geographicalArea/>

SELECT ?region ?governor WHERE {
    ?person foaf:name ""Paulus Powell""@en .
    ?person dbo:birthPlace ?region .
    ?region a dbp-geo:AdministrativeRegion .
    
    # Assuming we need the current governor, which might be stored in DBpedia
    OPTIONAL { 
        ?region dbo:governor ?governor .
    }
}

UNION

# Part 3: Find the birthplace of the identified governor
SELECT ?governorBirthPlace WHERE {
    ?governor foaf:name ?governorName .
    ?governor dbo:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfatherLabel WHERE {
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .
  ?dorothea dbo:father ?father .
  ?father dbo:father ?grandfather .
  ?grandfather rdfs:label ?grandfatherLabel .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Find the party of Roy Barreras
  dbr:Roy_Barreras dbo:partyAffiliation ?party .

  # Find the country associated with Daniel Elahi Galán
  dbr:Daniel_Elái_Galán dbo:nationality ?nationality .
  OPTIONAL { dbr:Daniel_Elái_Galán dbo:country ?country . }
  
  FILTER(?country != """" || ?nationality != """")
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?rank WHERE {
  ?person a dbo:NavyOfficer ;
          foaf:name ""William Tennant"" ;
          dbp:occupation ""Royal Navy officer""@en .
  
  OPTIONAL { 
    ?person dbo:rank ?rank .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton""@en .
  
  ?nateNewton dbo:member ?band .

  ?band rdf:type dbo:Band, dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,355,323,0,0.523598820058997,1.0,0.6873184898354309
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Saw Min Phyu's spouse
  ?spouse dbo:spouse ?sawMinPhyu .
  FILTER(STR(?sawMinPhyu) = ""Saw_Min_Phuu"")

  # Step 2: Find the child of that spouse who is royalty
  ?child dbo:parent ?spouse ;
         a dbo:Royal .

  # Step 3: Identify the predecessor of this royal child
  ?predecessor dbo:parent ?child .

  # Step 4: Find Saw Min Hla's child
  ?sawMinHlaChild dbo:parent ?sawMinHla .
  FILTER(STR(?sawMinHla) = ""Saw_Min_Hla"")

  # Step 5: Determine the spouse of Saw Shwe Khet
  ?spouseOfShweKhet dbo:spouse ?sawShweKhet .
  FILTER(STR(?sawShweKhet) = ""Saw_Shwe_Khet"")
  
  # Ensure the predecessor is also a child of Saw Min Hla and spouse of Saw Shwe Khet
  VALUES (?child) { ?sawMinHlaChild }
  VALUES (?spouseOfShweKhet) { ?predecessor }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?alfonsoIV a dbo:Monarch ;
             foaf:name ""Alfonso IV of Aragon""@en .
  ?alfonsoIV dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  ?person rdfs:label ""George Pickett""@en .
  ?person dbo:commander ?commander .
  ?commander dbo:participatedIn ?event .
  ?event rdf:type dbo:War .
  ?event rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""american civil war""))
  BIND(dbr:The_American_Civil_War AS ?war)
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Nate Newton's association with a band that is both an organization and a musical artist
  dbr:Nate_Newton dbo:musicalArtist dbr:Minor_Threat .
  dbr:Minor_Threat rdf:type dbo:Band ;
                   dbo:member ?bandMember .

  FILTER EXISTS { 
    # Ensure the band is also classified as an organization
    dbr:Minor_Threat dbo:organizationType ?orgType .
  }
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?footballPlayer ?actorSoccerAthlete ?film ?team
WHERE {
  # Juan Carlos Molina as a football player
  dbr:Juan_Carlos_Molina_(footballer) dbo:player dbr:Football .

  # Actor who is also a soccer player and athlete
  ?actorSoccerAthlete a dbo:Actor ;
                     dbo:occupation dbr:Soccer_player ;
                     dbo:occupation dbr:Athlete .

  # Film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actor in the film
  ?film dbo:starring ?actorSoccerAthlete .

  # Team of Pablo Aimar
  dbr:Pablo_Aimar dbo:team ?team .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Frederick Stanley, 16th Earl of Derby
    dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
    
    # The child is a politician
    ?child dbo:occupation dbr:Politician .

    # The child is the parent of the Rodney Lees award awardee
    ?child dbo:parent ?rodneyLeesAwardeeParent .
    ?rodneyLeesAwardeeParent dbo:awardReceived dbr:Rodney_Lees_Award .

    # The child is Edward Stanley, 17th Earl of Derby
    OPTIONAL { ?child rdfs:label ""Edward Stanley, 17th Earl of Derby""@en . }

    # Return Frederick Stanley as the father
    BIND(dbr:Frederick_Stanley,_16th_Earl_of_Derby AS ?father)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?tenant ?residenceCountry
WHERE {
  # Find the current administration led by PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  # Find the tenant of this administration
  ?administration dbo:headOfState ?tenant .

  # Find Álvaro Quirós and his country of residence
  ?alvaroQuirós a dbo:Person ;
               foaf:name ""Álvaro Quirós"" ;
               dbo:country dbr:Spain .
  
  # Ensure the tenant is Álvaro Quirós
  FILTER (?tenant = ?alvaroQuirós)
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  {
    SELECT DISTINCT ?castMember WHERE {
      ?show dcterms:title ""Dispatches from Elsewhere""@en .
      ?show dbo:starring ?castMember .
    }
  }

  UNION

  # Find the actor who portrayed The Shadow's alter ego
  {
    SELECT DISTINCT ?actor WHERE {
      ?media dbo:characterName ""The Shadow""@en ;
             dbo:portrayedBy ?actor .
    }
  }

  FILTER(?actor IN (?castMember))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountryLabel WHERE {
  ?person dbo:positionHeld dbr:Chancellor_of_West_Germany .
  ?person dbo:country dbr:Germany .
  ?person dbo:managerOfTeam dbr:VfL_Bochum .
  ?person foaf:nativePlace ?nativeCountry .
  ?nativeCountry rdfs:label ?nativeCountryLabel .
  FILTER(LANG(?nativeCountryLabel) = ""en"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?person a dbo:Person ;
          dbo:occupation ""Commander"" ;
          dbo:politicalParty ?party ;
          dbo:officeHolder ?office .
  
  ?person dbo:commandedDuring [
    a dbo:MilitaryConflict ;
    dbo:name ?conflictName
  ] .

  FILTER (
    EXISTS { ?person dbo:commandedDuring [dbo:name ""Russo-Polish War (1654–1667)""] } &&
    EXISTS { ?person dbo:commandedDuring [dbo:name ""Great Turkish War""] }
  ) .
  
  OPTIONAL {
    ?successor dbo:succeededBy ?person ;
               rdfs:label ?successorLabel .
  }

  FILTER (?conflictName IN (""Russo-Polish War (1654–1667)"", ""Great Turkish War""))
  
  # Reference to George Ducas for context
  OPTIONAL { 
    ?relatedPerson rdfs:label ""George Ducas"" ;
                   dbo:succeededBy ?person .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the actor of ""High Society Blues""
SELECT ?actor WHERE {
    dbr:High_Society_Blues dbo:starring ?actor .
}

# Step 2: Find the producer of ""The Adventures of Tom Sawyer (1938 film)""
SELECT ?producer WHERE {
    dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:director ?producer .
}

# Step 3: Identify common individual
SELECT DISTINCT ?commonIndividual WHERE {
    { 
        dbr:High_Society_Blues dbo:starring ?commonIndividual .
    }
    UNION
    {
        dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:director ?commonIndividual .
    }
}

# Step 4: Determine the claim to fame of this individual (assuming it's a movie)
SELECT DISTINCT ?claimToFame WHERE {
    ?commonIndividual dbo:starringOrDirected ?claimToFame .
    FILTER NOT EXISTS { 
        ?claimToFame rdf:type dbr:Film .
    }
}

# Step 5: Find the producer of the claim to fame
SELECT ?producerOfClaimToFame WHERE {
    ?claimToFame dbo:director ?producerOfClaimToFame .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find the musical artist associated with Shatta Wale (Elorm Kabu Amenyah)
  OPTIONAL { 
    dbr:Shatta_Wale dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Check if Neil Gaiman is a musical artist
  OPTIONAL {
    dbr:Niels_Gaiman dbo:musicalArtist ?neilGaimanMusic .
  }

  FILTER EXISTS { ?associatedArtist != dbr:Niels_Gaiman } 
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?theoNationality .
  ?theoNationality rdfs:label ?nativeCountry .

  # VfL Bochum manager in the 2007-08 season
  OPTIONAL { 
    dbr:VfL_Bochum_2007%E2%80%9308_season dbo:manager ?bochumManager .
    ?bochumManager dbo:nationality ?bochumNationality .
    ?bochumNationality rdfs:label ?bochumCountry .
  }

  # SBV Vitesse manager in the 2020-21 season
  OPTIONAL { 
    dbr:SBV_Vitesse_2020%E2%80%9321_season dbo:manager ?vitesseManager .
    ?vitesseManager dbo:nationality ?vitesseNationality .
    ?vitesseNationality rdfs:label ?vitesseCountry .
  }

  # Filter to find a common native country
  FILTER (?nativeCountry = ?bochumCountry)
  FILTER (?nativeCountry = ?vitesseCountry)

  # Ensure labels are in English
  FILTER (lang(?nativeCountry) = 'en')
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?general ?role ?operation WHERE {
  VALUES (?name) { 
    (dbr:Amasa_Tracy) 
    (dbr:Quincy_Adams_Gillmore)
  }
  
  ?general dbo:name ?name .
  OPTIONAL { ?general dbo:occupation dbr:Military_officer . }
  OPTIONAL { ?operation dbo:location dbr:Charleston,_South_Carolina . }
  OPTIONAL { ?operation dbo:participatedIn ?battle . }
  OPTIONAL { ?general dbo:role ?role . }

  FILTER EXISTS {
    ?operation dbo:timeStart ?start .
    ?operation dbo:endTime ?end .
    FILTER (?start >= ""1861-01-01""^^xsd:date && ?end <= ""1865-12-31""^^xsd:date)
  }
  
  OPTIONAL { 
    ?battle rdfs:label ?battleLabel .
    FILTER (lang(?battleLabel) = 'en' && regex(?battleLabel, ""Siege of Charleston"", ""i""))
  }

} ORDER BY ?name
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?book WHERE {
  ?author a dbo:Politician ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?author dbo:work ?book .
  ?book a dbo:Book .

  FILTER EXISTS { ?book dbo:author ?author }
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the birthplace of Ekaterina Zaharieva
SELECT ?birthPlaceEkaterina WHERE {
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlaceEkaterina .
}

UNION

# Query for the birthplace of a resident of Sofia
SELECT ?birthPlaceResident WHERE {
  ?resident dbo:residence dbr:Sofia .
  ?resident dbo:birthPlace ?birthPlaceResident .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work ?spouse WHERE {
  # Identify Hillary Clinton as the author residing in Chappaqua, New York
  ?author a dbo:Politician ;
          dbo:residence dbr:Chappaqua,_New_York ;
          foaf:name ""Hillary Rodham Clinton""@en .
  
  # Identify the work authored by her
  ?work dbo:author ?author ;
        dbo:title ""An Invitation to the White House""@en .

  # Find her spouse, who is also a politician and an office holder
  ?spouse dbo:spouse ?author ;
          a dbo:Politician .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeAdministration WHERE {
  # Identify Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:nationality ?nationality .
  
  # Find his birthplace or native administration
  OPTIONAL { dbr:Nicholas_II_of_Russia dbo:birthPlace ?nativeAdministration . }
  
  # Check if the place is a country (or an empire in this context)
  OPTIONAL { ?nativeAdministration rdf:type dbo:Country . }
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personLabel ?bandLabel ?kimBandRealName
WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Get the label for this person
  ?person rdfs:label ?personLabel .

  # Find bands associated with this person
  ?bandMember dbo:bandMember ?person .
  ?bandMember rdfs:label ?bandLabel .

  # Find Kim Wilson's band and its real name
  ?kimPerson rdfs:label ""Kim Wilson""@en ;
             dbo:birthDate ?kimBirthDate .
  
  ?kimBand dbo:bandMember ?kimPerson ;
           dbp:name ?kimBandName ;
           rdfs:label ?kimBandRealName .

}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandParent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 2: Find his parent (father)
  ?parent dbo:child ?edward .
  
  # Step 3: Identify a child of this parent who is both a politician and an office holder
  ?politicianChild dbo:parent ?parent ;
                   dbo:officeHolder ?office ;
                   dbo:politician ?polPosition .

  # Step 4: Find the parent of this identified child
  ?grandParent dbo:child ?politicianChild .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?work rdfs:label ""The First Glove""@en .
  ?work dbo:creator ?player .
}
```",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of Cavalera Conspiracy
  ?cavaleraConspiracy a dbo:Band ;
                      dbo:bandMember ?member .
  
  FILTER (str(?cavaleraConspiracy) = ""Cavalera_Conspiracy"")

  # Find members of Mudvayne
  ?mudvayne a dbo:Band ;
            dbo:bandMember ?member .

  FILTER (str(?mudvayne) = ""Mudvayne"")
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?realName ?associatedArtist ?band ?bandMember WHERE {
  # Kim Wilson's real name
  ?kimWilson a dbo:MusicalArtist ;
             foaf:name ""Kim Wilson"" .
  OPTIONAL { ?kimWilson foaf:name ?realName . }

  # Nick Curran's associated musical artists
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  OPTIONAL {
    ?association dbo:associatedBandMember ?nickCurran ;
                 dbo:bandMember ?associatedArtist .
    ?associatedArtist foaf:name ?artistName .
  }

  # Eric Clapton's bands and their members
  ?ericClapton a dbo:MusicalArtist ;
               foaf:name ""Eric Clapton"" .
  OPTIONAL {
    ?claptonBand dbo:member ?ericClapton ;
                 dbo:name ?band .
    ?claptonBandMember dbo:member ?bandMember .
    ?bandMember foaf:name ?memberName .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Alfonso VI's grandchild
  ?alfonsoVIChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
  ?alfonsoVIIGrandchild dbo:parent ?alfonsoVIChild .

  # Roger II's child who is royalty
  ?rogerIIChild dbo:parent dbr:Roger_II_of_Sicily .
  FILTER EXISTS { ?rogerIIChild rdf:type dbo:Monarch } 

  # Find common individual
  VALUES ?commonIndividual {
    ?alfonsoVIIGrandchild
    ?rogerIIChild
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?battle WHERE {
  VALUES ?person { 
    dbr:Amasa_Tracy 
    dbr:Quincy_Adams_Gillmore 
  }
  
  ?person dbo:militaryService ?service .
  OPTIONAL { ?service dbo:participatedIn ?event . }

  FILTER EXISTS { ?event a dbo:MilitaryConflict } .

  BIND(IF(BOUND(?event), ?event, ""No specific event found"") AS ?war)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && datatype(?birthPlace) = xsd:string)
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch WHERE {
  ?monarch a dbo:Monarch .
  ?monarch dbo:country dbr:Spain .
}
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor ?spouse ?child 
WHERE {
  # Step 1: Find Myat Hpone Pyo's predecessor
  ?myathponepyo dbo:predecessor ?predecessor .
  
  # Step 2: Check if the predecessor is also the father of Myat Hpone Pyo and find his spouse
  OPTIONAL { 
    ?father rdfs:label ""Myat Hpone Pyo""@en .
    ?father dbo:child ?myathponepyo .
    ?predecessor = ?father .
    ?spouse dbo:spouse ?father ;
            a dbo:Monarch ; # Assuming spouse is royalty
            rdfs:label ?spouseLabel .
  }
  
  # Step 3: Identify Min Hla Htut's parent
  ?minhlahtut rdfs:label ""Min Hla Htut""@en .
  ?parent dbo:child ?minhlahtut ;
          dbo:residence dbr:Pyakaung .

  # Step 4: Find the child of this parent
  OPTIONAL {
    ?parent dbo:child ?child .
  }
  
  FILTER(?spouse != UNDEF) # Ensure spouse is defined
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dispatchesActor ?abKyaHogaActor ?profession WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  ?dispatchesFilm dbo:title ""Dispatches from Elsewhere""@en .
  ?dispatchesFilm dbo:starring ?dispatchesActor .

  # Find the actor from ""Ab Kya Hoga"" who is also a politician
  ?abKyaHogaFilm dbo:title ""Ab Kya Hoga""@en .
  ?abKyaHogaFilm dbo:starring ?abKyaHogaActor .
  ?abKyaHogaActor dbo:occupation dbr/Politician .

  # Get the profession of the actor from ""Dispatches from Elsewhere""
  ?dispatchesActor dbo:profession ?profession .

  # Check if this actor has any professional involvement in that same field as the politician
  OPTIONAL { 
    ?dispatchesActor dbo:professionalIn ?profession .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?producer WHERE {
  ?song dbo:title ""Lotus"" ;
        dbo:artist dbr:R.E.M. .

  ?song dbo:producer ?producer .
  
  ?producer rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Band, dbo:MusicalGroup)) .

  OPTIONAL { 
    ?producer rdf:type ?type2 .
    FILTER (?type2 = dbo:Organization) .
  }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?realName WHERE {
  ?alfonsoIV a dbo:Monarch ;
             rdfs:label ""Alfonso IV of Aragon""@en .
  
  ?alfonsoIV dbo:child ?child .

  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }

  ?child rdfs:label ?realName .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Wars involving Napoleon Zervas
  OPTIONAL { 
    dbr:Napoleon_Zervas dbo:participatedInWar ?war1 .
  }

  # Wars involving Konstantinos Ventiris
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedInWar ?war2 .
  }
  
  # Check if the settlement is related to these wars
  FILTER EXISTS { 
    ?war1 dbo:location ?settlement .
    ?war2 dbo:location ?settlement .
  }

  BIND(?deathPlace AS ?settlement)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  ?entity dbo:location dbpedia:Charleston,_South_Carolina .
  OPTIONAL { ?entity rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify William I (William the Conqueror)
  dbr:William_I_of_England a dbo:Monarch ;
                           dbo:officeHolder [a dbo:Office] .

  # Find his children who are royalty
  dbr:William_I_of_England dbo:child ?child .
  ?child a dbo:Royalty .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?frédéricProfession (GROUP_CONCAT(?rustlersActor; separator="", "") AS ?rustlersActors)
WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?frédéricProfession .

  # Find the actor of ""Rustlers' Rhapsody""
  OPTIONAL { 
    dbr:Rustlers'_Rhapsody dbo:actor ?rustlersActor .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?alias WHERE {
  ?person foaf:givenName ""Ackquille"" .
  ?person foaf:familyName ""Jean Pollard"" .
  OPTIONAL { ?person foaf:name ?alias . }
  ?person dbo:musicalArtist dbr:Uncle_Murda .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?carl a dbo:Duke ;
        foaf:name ""Carl, Duke of Württemberg""@en .
  
  OPTIONAL { 
    ?carl dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Nick Curran's associated artists
  ?association dbo:associatedMusicalArtist dbr:Nick_Curran .
  
  # The artist must be a musical artist by birth
  ?association dbo:birthPlace ?place .
  ?association rdf:type dbo:Musician .

  # Reference to The Fabulous Thunderbirds in their biography or associations
  OPTIONAL {
    ?association dbo:biography ?bio .
    FILTER(CONTAINS(LCASE(?bio), ""fabulous thunderbirds""))
  }

  BIND(?association AS ?artist)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?title WHERE {
  VALUES ?naod { dbr:Na'od }
  
  ?naod dbo:father ?father .
  
  OPTIONAL { 
    ?father dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
  
  OPTIONAL {
    ?officeHolder dbo:officeHolder ?father .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession
WHERE {
  ?person rdfs:label ""Jamie T""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?person dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?event dbo:office ?office .
  ?event dbo:country dbr:Spain .
  ?person dbo:heldPosition ?event .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbpedia:Eton_College .
  ?child dbo:parent ?alumnus ;
         dbo:occupation dbpedia:Politician .
  ?recipient dbp:awardedBy dbpedia:Commander_of_the_Royal_Victorian_Order ;
             dbo:parent ?child .
  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Glenn Youngkin's birthplace
SELECT ?birthPlace WHERE {
  wd:Q1116800 dbo:birthPlace ?birthPlace .
}

UNION

# Query for an awardee of Vince Gilligan (assuming Emmy Award as a common award)
SELECT ?awardeeBirthPlace WHERE {
  # Find an award Vince Gilligan received
  wd:Q1757632 dbo:awardReceived ?award .
  
  # Find the awardees of that award
  ?award dbo:recipient ?awardee .
  
  # Get the birthplace of one of those awardees
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}

UNION

# Query for Cece Bell's birthplace
SELECT ?birthPlace WHERE {
  wd:Q5703699 dbo:birthPlace ?birthPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?conflictEvent
WHERE {
  # Find the office held by Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelOffice .
  
  # Find an office holder who is also a politician and their office
  ?commander a dbo:Politician ;
            dbo:office ?commanderOffice .

  # Link the offices to a military conflict or societal event involving Manuel Pinto da Costa
  ?conflictEvent a (dbo:MilitaryConflict | dbo:SocietalEvent) ;
                 dbo:participant dbr:Manuel_Pinto_da_Costa .
  
  # Ensure the commander is involved in the same conflict/event
  ?commander dbo:participatedIn ?conflictEvent .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonParent WHERE {
  ?arthur dbo:father ?commonParent .
  ?victor dbo:parent ?commonParent .

  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild ?father WHERE {
  # Identify Philip I of Castile
  ?philip a dbo:Monarch ;
          foaf:name ""Philip I of Castile""@en .
  
  # Find his children
  ?philip dbo:child ?child .

  # Filter for royal status among the children
  ?child dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Retrieve the father of this royal child (should be Philip I)
  ?child dbo:parent ?father .

  # Ensure that the father is indeed Philip I
  FILTER(?father = ?philip)
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?sawShweKhet dbo:child ?child .
  FILTER EXISTS { ?child dbo:royaltyStatus ?status . }
  VALUES ?sawShweKhet { <http://dbpedia.org/resource/Saw_Shwe_Khet> }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?description WHERE {
  VALUES ?order { dbr:Order_of_the_Medjidie }
  
  ?order dbo:recipient ?entity .
  OPTIONAL { ?entity rdfs:label ?description FILTER (lang(?description) = 'en') . }

  # Filter to ensure the entity is related to the Ottoman Empire
  ?entity dbo:country dbr:Ottoman_Empire .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalAssociatedArtist WHERE {
  # Step 1: Find members of Khlyst (band)
  ?member dbo:memberOf dbp:Khlyst_(band) .
  
  # Step 2: Filter for those who are also musical artists
  ?member dbo:musicalArtist ?artist .

  # Step 3: Find associated musical artist of the member
  ?artist dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Find the associated musical artist of the associated musical artist
  ?associatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander ?spouse WHERE {
  # Find the author of ""Back to Work""
  ?book dbo:title ""Back to Work""@en .
  ?book dbo:author ?author .

  # Identify the commander in the Spanish Flu and World War I context
  ?war dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""world war i"") || CONTAINS(LCASE(?name), ""spanish flu""))
  ?commander dbo:rank ?rank .
  ?commander dbo:organization dbr:United_States_Navy .

  # Find the spouse of the author who is a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder""))
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?notableWork WHERE {
  ?character dbo:portrayedBy ?actor .
  ?character rdfs:label ""Johnny Doughboy""@en .
  
  OPTIONAL { 
    ?actor dbo:film ?notableWork .
    FILTER (LANG(?notableWork->rdfs:label) = 'en')
  }
}
LIMIT 1
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify USS Arcadia's owner
  ?arcadia a dbo:Ship ;
           rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  OPTIONAL { 
    ?arcadia dbo:owner ?owner .
  }
  
  # Step 2: Find wars related to the owner that are also diseases and societal events
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryPersonal ?owner ;
      rdfs:label ?warLabel .

  FILTER regex(?warLabel, ""Spanish Flu"", ""i"") || 
         regex(?warLabel, ""World War I"", ""i"")

  # Step 3: Identify Bill Clinton's work
  ?work a dbo:Book ;
        dbo:author dbr:Bill_Clinton ;
        rdfs:label ?workLabel .

  FILTER regex(?workLabel, ""My Life"", ""i"") 

  # Step 4: Determine the commander of the identified war
  ?war dbo:commander ?commander .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  # Find the book ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .

  # Get the author's name
  ?author foaf:name ?authorName .

  # Check if the author is a politician and an office holder
  OPTIONAL { ?author dbo:occupation dbr:Politician . }
  OPTIONAL { ?author dbo:officeHolderOf ?office . }

  FILTER EXISTS { ?author dbo:occupation dbr:Politician } .
  FILTER EXISTS { ?author dbo:officeHolderOf ?office . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?musicalArtist WHERE {
  # Find the actor(s) of ""The Campus Queen""
  ?film a dbo:Film ;
        dbo:title ""The Campus Queen""@en .
  
  ?film dbo:starring ?actor .

  # Find the associated musical artist of Tiwa Savage
  OPTIONAL {
    dbr:Tiwa_Savage dbo:birthName ""Cynthia Ikponmwenosa Morgan"" ;
                    dbo:associatedMusicalArtist ?musicalArtist .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?siege dbp:eventName ""Siege of Mukha""@en .
  ?siege dbo:commander ?commander .
  ?commander dbo:royalty true .
  ?commander foaf:parent ?parent .
  ?parent dbo:royalty true .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?seriesLabel
WHERE {
  ?book rdfs:label ""The Golden Master""@en .
  ?book dbo:partOfSeries ?series .
  ?series rdfs:label ?seriesLabel .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Lamont Cranston's father
  ?father a dbo:Person ;
          dbo:spouse ?mother ;
          dbo:child dbr:Lamont_Cranston .

  # Father of the father (Lamont Cranston's grandfather)
  ?grandfather a dbo:Person ;
              dbo:spouse ?greatGrandmother ;
              dbo:child ?father .

  # Baeda Maryam I and his child
  dbr:Baeda_Maryam_I a dbo:Person ;
                    dbo:child ?childOfBaedaMaryamI .

  # The grandfather must be royalty and an office holder
  ?grandfather dbo:royalty true ;
              dbo:officeHolder true .

  # Linking the grandfather to Baeda Maryam I's child
  ?grandfather dbo:spouse ?childOfBaedaMaryamI .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  OPTIONAL { 
    ?person dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER(LANG(?officeName) = 'en')
  }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?hidenaga a dbo:Person ;
            foaf:name ""Toyotomi Hidenaga""@en .
  
  OPTIONAL { 
    ?hidenaga dbo:associatedWith ?event .
    ?event rdf:type dbo:Event ;
           rdfs:label ?eventLabel .
    FILTER(CONTAINS(LCASE(?eventLabel), ""battle"") || CONTAINS(LCASE(?eventLabel), ""war""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?producer WHERE {
  # Find the DBpedia resource for Cora Sue Collins
  ?collins a dbo:Writer ;
           foaf:name ""Cora Sue Collins""@en .
  
  # Identify works associated with her
  ?collins dbo:creator ?work .

  # Assuming we have identified a notable work, find its producer
  OPTIONAL { ?work dbo:producer ?producer . }

  # Filter to ensure the work is relevant (e.g., by checking if it has a known producer)
  FILTER(?producer != dbr:Unknown)

  # Limit results for clarity; adjust as needed based on context
  LIMIT 1
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci""@en .
  
  OPTIONAL { ?person foaf:surname ?surname . }
  OPTIONAL { ?person foaf:givenName ?givenName . }

  ?education dbo:student ?person ;
             dbo:almaMater ?almaMater .

}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Koichirō""@ja .
  OPTIONAL { ?person rdfs:label ?currentName FILTER (lang(?currentName) = 'en') }
  OPTIONAL { ?person foaf:name ?currentName }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthday WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marty Pollio""@en .
  OPTIONAL { ?person dbo:birthDate ?birthday . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?sawShweKhet dbo:child ?child .

  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse ?childOfSawMinHla ?predecessor
WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:name ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .

  # Find the child of Saw Min Hla
  ?sawMinHla dbo:name ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?childOfSawMinHla .

  # Find the child of Saw Shwe Khet
  ?spouse dbo:child ?childOfSawShweKhet .

  # Find the predecessor of the child of Saw Shwe Khet
  ?predecessor dbo:successor ?childOfSawShweKhet .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?settlement WHERE {
  # Find Henry Clay Lewis and his birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbp:country ""United States""^^xsd:string .

  # Get Gillmore Medal awardees
  ?awardee dbo:award ?gillmoreMedal .
  FILTER(STRSTARTS(STR(?gillmoreMedal), STR(dbr:Gillmore_Medal)))

  # Find the force associated with the awardee (assuming a property exists)
  OPTIONAL { ?awardee dbo:force ?force }

  # Return the settlement and any associated force
  BIND(?birthPlace AS ?settlement)
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
    # Find works by Cora Sue Collins featuring Kent Allard
    ?work dbo:author dbr:Cora_Sue_Collins .
    ?work dbo:character dbr:Kent_Allard .

    # Get the producer of this work
    ?work dbo:producer ?producer .

    # Check if this producer also produced A Star Is Born (1937 film)
    OPTIONAL {
        dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
    }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
}
```",1,1,2,1,1,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  ?awardee dbo:award dbr:Nobel_Prize_in_Physics .
}
```",1,1,2,1,1,3,2,20,31,132,0,0.1901840490797546,1.0,0.3195876288659794
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:politicalAffiliation dbr:Republican_Party_(United_States) .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel WHERE {
  VALUES ?alexander { dbr:Alexander_of_Württemberg_(1804-1881) }
  ?alexander dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeName WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbo:Country .
  ?place rdfs:label ?englishLabel .
  FILTER(CONTAINS(LCASE(?englishLabel), ""shobhna samarth"")) .
  OPTIONAL { ?place foaf:name ?nativeName . }
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?team 
WHERE {
  # Find the actor from ""All or Nothing: Manchester City"" who is a soccer player and an athlete
  ?movie dbr:All_or_Nothing:_Manchester_City .
  ?movie dbo:castMember ?actor .
  ?actor dbo:sport ?sport1 .
  FILTER (?sport1 IN (dbr:Soccer, dbr:Athletics)) .

  # Find Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthDate ?birthdate .

  # Find a person born on the same date who is both a soccer player and manager
  ?person dbo:birthDate ?birthdate .
  ?person dbo:sport ?sport2 .
  FILTER (?sport2 = dbr:Soccer) .
  ?person dbo:managerOf ?team .
  
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sinhaProfession ?shadowAlterEgo
WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .
  
  # The Shadow video game character alter ego from the comics
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:Lamont_Cranston .
  dbr:Lamont_Cranston rdfs:label ?shadowAlterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?personWithBirthName WHERE {
  # Part 1: Find the ruling party in Central, Louisiana and a member
  {
    SELECT ?rulingParty WHERE {
      dbr:Central,_Louisiana dbo:government dbr:Rural_County_of_Louisiana .
      ?governor dbo:office dbp:governor ;
               dbo:party ?rulingParty .
    }
    LIMIT 1
  }

  # Find a notable member of the ruling party
  {
    SELECT ?partyMember WHERE {
      ?person dbo:politicalAffiliation ?rulingParty ;
              dbo:notableFor ?notableRole .
      FILTER EXISTS { ?notableRole dbp:location dbr:Central,_Louisiana }
    }
    LIMIT 1
  }

  # Part 2: Find Ann Sothern's birth name and a person with that name
  {
    SELECT ?birthName WHERE {
      dbr:Ann_Sothern dbo:birthName ?birthName .
    }
    LIMIT 1
  }

  # Find any person with the same birth name as Ann Sothern
  {
    SELECT ?personWithBirthName WHERE {
      ?person dbo:birthName ?birthName .
      FILTER(?person != dbr:Ann_Sothern)
    }
    LIMIT 1
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award ?residence WHERE {
  # Query for George H. Cameron's award
  { 
    ?person rdfs:label ""George H. Cameron""@en .
    ?person dbo:award ?award .
    FILTER(LANG(?award) = 'en')
  }
  
  UNION
  
  # Query for Doug Beattie's residence
  {
    ?person rdfs:label ""Doug Beattie""@en .
    ?person foaf:based_near ?residence .
    FILTER(LANG(?residence) = 'en')
  }
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInUK ?residence WHERE {
  ?person rdfs:label ""Doug Beattie""@en .
  OPTIONAL { ?person dbo:positionHeld ?entityInUK . }
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",2,2,3,1,2,3,2,20,2,0,0,1.0,1.0,1.0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  ?character a dbo:Agent ;
             rdfs:label ""Lamont Cranston""@en .
  OPTIONAL { ?character dbp:alterEgo ?alterEgo . }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfFinland ?countryUnderNicholasII
WHERE {
  # Find a notable person native to the Grand Duchy of Finland
  ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland .
  FILTER(CONTAINS(LCASE(STR(?person)), ""jean sibelius"")) .
  
  # Find a country under Nicholas II's administration
  ?country dbo:country dbr:Nicholas_II_of_Russia .
  FILTER(CONTAINS(LCASE(STR(?country)), ""finland"")) .
  
  BIND(?person AS ?nativeOfFinland)
  BIND(?country AS ?countryUnderNicholasII)
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?person dbo:nationality dbr:Russian_Empire .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?intermediary WHERE {
  ?dawitI dbo:child ?intermediary .
  FILTER(?dawitI = dbr:Dawit_I_of_Ethiopia)
  
  ?intermediary dbo:parent ?baedaMaryamI .
  FILTER(?baedaMaryamI = dbr:Baeda_Maryam_I_of_Ethiopia)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?bandMember WHERE {
  # Find the album ""Sappy"" and its writer(s)
  dbr:Sappy a dbo:Album ;
            dbo:composer ?writer .

  # Check if the writer is a member of any band
  OPTIONAL { 
    ?writer dbo:memberOfBand ?band .
    ?bandMember dbo:member ?writer .
  }

  # Find associated artists of ""Filthy Friends""
  dbr:Filthy_Friends a dbo:MusicalArtist ;
                     dbo:associatedMusicalArtist ?artist .

  # Filter to find common entity
  FILTER (?writer = ?artist)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?writer ?artistRole
WHERE {
  # Find band members of The Alan Parsons Project
  ?member dbo:musicalArtist dbr:The_Alan_Parsons_Project .
  
  # Check if the member is associated with Stuart Tosh as a musical artist
  OPTIONAL { 
    ?association dbo:associatedMusicalArtist dbr:Stuart_Tosh ;
                 dbo:artist ?bandMember .
  }
  
  # Find writers of Wizards of Waverly Place soundtrack who are also artists and musical artists
  ?writer dbo:musicalArtist ?soundtrack ;
          dbo:workFeaturedIn dbr:Wizards_of_Waverly_Place_(soundtrack) ;
          a dbo:Artist .

  # Ensure the writer is both an artist and a musical artist
  ?artistRole dbo:artist ?writer .
  
  # Link the band member to the writer through their roles
  FILTER(?bandMember = ?writer)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear WHERE {
  dbr:Alexander_II_of_Russia dbo:positionHeld dbr:Grand_Duke_of_Finland .
  OPTIONAL { dbr:Grand_Duke_of_Finland dbo:beginDate ?startYear . }
  OPTIONAL { dbr:Grand_Duke_of_Finland dbo:endDate ?endYear . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Walter B. Gibson"" .
  
  ?character dbo:creator ?author ;
             rdfs:label ?characterLabel .

  FILTER(CONTAINS(LCASE(?characterLabel), ""the shadow""))

  OPTIONAL { 
    ?character dbo:alternateName ?alterEgo .
    FILTER(CONTAINS(LCASE(?alterEgo), ""lamont cranston""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Florida .
}
```",1,1,2,1,1,3,3,71,971,0,0,1.0,1.0,1.0
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Find VfL Bochum and its players in the 2007-08 season
  dbr:VfL_Bochum a dbo:SoccerClub ;
                dbo:sportingSeason [
                  dbo:season ""2007–08"" ;
                  dbo:player ?player .
                ] .

  # Find Theodor Heuss's native country (Germany)
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .

  # Find the manager of the player who is associated with VfL Bochum
  ?player dbo:manager ?manager .

  # Ensure the manager is linked to a sports club and organization that is also a soccer club
  ?manager dbo:worksFor ?organization .
  ?organization a dbo:SoccerClub, dbo:Organization, dbo:SportsTeam .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity ?label ?description
WHERE {
  VALUES ?athens { dbr:Athens }
  
  # Find entities with a location in Athens
  ?entity dbo:location ?athens .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?entity dbo:description ?description . FILTER (lang(?description) = 'en') }

  UNION

  # Find people born or died in Athens
  ?person dbo:birthPlace ?athens .
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?person dbo:description ?description . FILTER (lang(?description) = 'en') }

  UNION

  ?person dbo:deathPlace ?athens .
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?person dbo:description ?description . FILTER (lang(?description) = 'en') }

  UNION

  # Find organizations headquartered in Athens
  ?organization dbo:headquarterLocation ?athens .
  OPTIONAL { ?organization rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?organization dbo:description ?description . FILTER (lang(?description) = 'en') }
}
ORDER BY ?entity
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band (SAMPLE(?award) AS ?award)
WHERE {
  ?band a dbo:Band .
  ?band dbo:award ?award .
  OPTIONAL { ?award dbo:location dbr:New_York_(state) . }
}
GROUP BY ?band
HAVING (COUNT(DISTINCT ?award) > 0)
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring dbr:Iliza_Shlesinger ;
        dbo:director dbr:Janusz_Kamiński .
  
  ?film dbo:starring ?actor .
  FILTER(?actor != dbr:Iliza_Shlesinger)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?force ?war ?award WHERE {
  # Identify Quincy Adams Gillmore
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }

  # Find the military force associated with him in Charleston, South Carolina
  ?gillmore dbo:militaryService ?service .
  ?service dbo:location ?charleston .
  FILTER(CONTAINS(LCASE(?charleston), ""charleston, south carolina""))
  
  # Determine the war related to his service
  ?service dbo:relatedEvent ?war .

  # Find the award given by the United States Congress
  ?gillmore dbo:award ?award .
  ?award dbo:awardingBody dbr:United_States_Congress .

  # Get details about the award and associated war
  OPTIONAL { ?award rdfs:label ?awardLabel . FILTER(LANG(?awardLabel) = ""en"") }
  OPTIONAL { ?war rdfs:label ?warLabel . FILTER(LANG(?warLabel) = ""en"") }

  BIND(STR(?gillmore) AS ?entity)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX schema: <http://schema.org/>

SELECT ?individual WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:child dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # This child is also a grandchild of Archduke Charles Louis
  ?archdukeGrandchild dbo:child ?intermediateParent .
  ?intermediateParent dbo:child dbr:Archduke_Charles_Louis_of_Austria .
  FILTER (?albrechtChild = ?archdukeGrandchild)
  
  # The individual is a predecessor of Carl, Duke of Württemberg
  ?carlBirthDate schema:birthDate ?carlBirth .
  ?individualBirthDate schema:birthDate ?individualBirth .
  FILTER (?individualBirth < ?carlBirth)

  # Ensure the individual has a royal title or role
  ?individual dbo:title ?title .
  FILTER CONTAINS(LCASE(?title), ""duke"" || ""prince"" || ""archduke"")
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?work a dbo:Song ;
        dbo:artist dbr:T.I. .
  OPTIONAL { 
    ?work a dbo:MusicalWork .
  }
}
```",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?writer 
WHERE {
  # Michał Kazimierz Pac's involvement in a military conflict
  dbr:Mikołaj_Kazimierz_Pac a dbo:Commander ;
                            dbo:militaryConflict ?conflict .

  # Successor who is both a politician and an office holder
  ?successor a dbo:Politician, dbo:OfficeHolder ;
             dbo:succeededBy dbr:Mikołaj_Kazimierz_Pac ;
             dbo:militaryConflict ?conflict .

  # Work of George Ducas and its writer
  dbr:George_Ducas dbo:work ?work .
  ?work dbo:author ?writer .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderResidence WHERE {
  # Step 1: Identify George Savage as a politician
  ?georgeSavage a dbo:Politician ;
                foaf:name ""George Savage""@en .
  
  # Step 2: Find the political party associated with George Savage
  ?party dbo:member ?georgeSavage ;
         a dbo:PoliticalParty .

  # Step 3: Identify the leader of this political party
  ?leaderPosition dbo:positionTitle ""Leader""@en ;
                  dbo:positionHeldBy ?leader ;
                  dbo:positionInOrganization ?party .
  
  # Step 4: Retrieve the residence of the identified leader
  ?leader dbo:residence ?leaderResidence .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?manager WHERE {
  # Find VfL Bochum's players in the 2006-07 season who are from West Germany
  ?player dbo:nationality dbr:West_Germany ;
          dbo:team dbr:VfL_Bochum_season_2006%E2%80%9307 .

  # Find the manager of VfL Bochum during that season
  ?manager dbo:managedTeam dbr:VfL_Bochum_season_2006%E2%80%9307 ;
           a dbo:SoccerManager .

  # Ensure VfL Bochum is categorized as a sports club, an organisation, and specifically a soccer club
  dbr:VfL_Bochum a dbo:SportsClub ;
                 a dbo:Organisation ;
                 a dbo:SoccerClub .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?territoryAdministered ?mayor 
WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:placeOfBirth ?birthPlace .
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find territory administered from the death place
  ?territoryAdministered dbo:administrativeCenter ?deathPlace .
  
  # Find mayor of Duchy of Schleswig who administered this territory
  ?mayor dbo:officeHolderOf dbr:Duchy_of_Schleswig ;
         dbo:administers ?territoryAdministered .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for parent of Amy Arbus
SELECT ?parentAmy WHERE {
  dbr:Amy_Arbus dbo:parent ?parentAmy .
}

UNION

# Query for child of Allan Arbus and then find the actor in Judgment: The Trial of Julius and Ethel Rosenberg
SELECT ?actorJudgment WHERE {
  ?childAllan dbo:parent dbr:Allan_Arbus .
  ?judgment dbo:actor ?actorJudgment .
  FILTER(STRSTARTS(STR(?judgment), ""http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the resource for ""The Live Anthology""
  ?anthology a dbo:Album ;
            rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""the live anthology""))

  # Identify individuals associated with this album
  ?anthology dbo:artist ?person .

  # Check if the person has professions related to writing and music
  ?person dbo:profession ?prof1 .
  ?person dbo:profession ?prof2 .

  FILTER(CONTAINS(LCASE(?prof1), ""writer"") || CONTAINS(LCASE(?prof1), ""author""))
  FILTER(CONTAINS(LCASE(?prof2), ""musician"") || CONTAINS(LCASE(?prof2), ""singer""))

}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity ?abstract ?redirect ?disambiguation
WHERE {
  ?entity a foaf:Person ;
          foaf:name ""Afeez Oyetoro""@en .
  
  OPTIONAL { ?entity dbo:abstract ?abstract . }
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  OPTIONAL { ?entity dbo:wikiPageDisambiguates ?disambiguation . }
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?societalEvent ?event ?tvShow WHERE {
  # Step 1: Identify Cecilia Renata of Austria's father
  VALUES ?ceciliaRenata { dbr:Cecilia_Renata_of_Austria }
  
  ?ceciliaRenata dbo:father ?father .
  
  # Step 2: Find the child of that person
  ?father dbo:child ?child .

  # Step 3: Identify a commander in war
  ?child dbo:militaryCommanderOf ?war .

  # Step 4: Link to societal event, event, and television show
  OPTIONAL { ?child dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?child dbo:event ?event . }
  OPTIONAL { ?child dbo:televisionShow ?tvShow . }

  # Step 5: Connection to 2nd Dragoon Regiment (France)
  ?child dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .

  FILTER EXISTS { ?societalEvent } .
  FILTER EXISTS { ?event } .
  FILTER EXISTS { ?tvShow } .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Kim Wilson""@en .
  ?person dbo:bandMember ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mediaType ?title WHERE {
  # Find the DBpedia resource for Lamont Cranston
  VALUES ?lamontCranston { dbr:Lamont_Cranston }

  # Find resources related to radio, film, and television adaptations of ""The Shadow""
  ?adaptation dbo:wikiPageRedirects ?lamontCranston .
  
  # Filter by media types
  ?adaptation a ?mediaType .

  # Ensure the adaptation is related to radio, film, or television
  FILTER (?mediaType IN (dbr:Radio_show, dbr:Film, dbr:Television_series))

  # Get the title of the adaptation
  ?adaptation rdfs:label ?title .
  
  # Filter out non-English titles
  FILTER(LANG(?title) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:partOf dbr:French_Revolutionary_Wars ;
      dbo:commander dbr:Napoleon_Bonaparte .
  
  OPTIONAL { ?war dbo:description ?description }
}
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement ?war 
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and in America
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  BIND(?birthPlace AS ?settlement)

  # Amasa Tracy's associated war
  OPTIONAL {
    dbr:Amasa_Tracy dbo:associatedWithWar ?war .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?childOfSpouse WHERE {
  # Step 1: Identify William II of Sicily and his father
  ?william2 dbr:William_II_of_Sicily .
  ?william2 dbo:father ?father .

  # Step 2: Identify Constance of Burgundy and her spouse
  ?constance dbr:Constance_of_Burgundy .
  ?constance dbo:spouse ?spouse .

  # Step 3: Find the child of Constance's spouse
  ?spouse dbo:child ?childOfSpouse .

  # Step 4: Ensure the child is royalty
  ?childOfSpouse dbo:royalTitle ?title .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  # Step 1: Identify Elorm Kabu Amenyah
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah""@en .

  # Step 2: Determine the associated musical artist of Elorm Kabu Amenyah
  ?elorm dbo:associatedMusicalArtist ?artist .

  # Step 3: Identify an artist from Central Region, Ghana
  ?artist a dbo:Person ;
          foaf:name ?name ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace ?place .
  
  ?place rdfs:label ""Central Region, Ghana""@en .

  # Step 4: Find the birth name of this artist
  OPTIONAL { ?artist foaf:name ?birthName }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Georgi_Markov dbo:almaMater dbr:Plovdiv_University_Paisius_of_Hilendar .
  dbr:Georgi_Markov dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artistName ?artistURL
WHERE {
  ?band rdfs:label ""Burnt by the Sun (band)""@en .
  ?band dbo:associatedBandOrMusicalGroup ?artist .
  ?artist rdfs:label ?artistName ;
          a ?type .
  FILTER (
    ?type = dbo:Band ||
    ?type = dbo:MusicalGroup ||
    ?type = dbo:Organization
  )
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Step 1: Identify the player from the 2007–08 VfL Bochum season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:season ""2007–08"" .

  # Step 2: Determine the manager of that player
  ?manager dbo:managedTeam dbr:VfL_Bochum ;
           dbo:manages ?player .

  # Step 3: Ensure the manager is associated with a sports club and an organization and a soccer club
  ?manager a dbo:SoccerClub, dbo:SportsOrganization, dbo:Organisation .

  # Step 4: Find the native of the administration country of the leader of West Germany
  ?leader dbp:country dbr:Germany ;
          dbo:position ""Chancellor"" .
  ?leader dbo:nationality ?nationality .
  ?nationality dbo:administrativeRegion ?adminRegion .
  ?adminRegion dbo:country dbr:Germany .

  # Step 5: Ensure the manager is also the manager for the 2020–21 SBV Vitesse season
  ?manager dbo:managedTeam dbr:SBV_Vitesse ;
           dbo:season ""2020–21"" .

  # Filter to ensure the manager's nationality matches the leader's birthplace
  ?leader dbp:birthPlace ?birthPlace .
  ?nationality dbo:administrativeRegion ?adminRegion .
  ?manager dbo:nationality ?nationality .
  FILTER (?birthPlace = ?adminRegion)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild
WHERE {
  # Step 1: Identify the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child ?margareteSophie .
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .

  # Step 2: Find a child of this parent who is royalty
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 3: Identify the spouse of Archduchess Helena of Austria
  ?spouse dbo:spouse ?helena .
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .

  # Step 4: Determine a child of this spouse who is royalty
  ?spouse dbo:child ?royalSpouseChild .
  ?royalSpouseChild rdf:type dbo:Monarch .

  # Step 5: Find the predecessor of this royal child
  ?predecessor dbo:successor ?royalSpouseChild .

  # Step 6: Identify the child of the parent's child (from step 2) who is royalty
  ?royalChild dbo:child ?childOfChild .
  ?childOfChild rdf:type dbo:Monarch .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war ?charlestonEntity
WHERE {
  ?awardee dbo:award dbr:Medal_of_Honor .
  ?awardee dbo:serviceInMilitaryConflicts ?conflict .
  ?conflict rdfs:label ?war .
  
  ?entity dbo:location dbr:Charleston,_South_Carolina ;
          rdf:type ?type .
  BIND(CONCAT(STR(?type), "" in Charleston, South Carolina"") AS ?charlestonEntity)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:eventType dbr:Siege_of_Mukha .
  ?event dbo:commander ?commander .
  ?commander rdf:type dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fatherName WHERE {
  ?myatHponePyo dbo:name ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:father ?father .

  OPTIONAL { 
    ?father rdf:type ?type .
    FILTER (
      ?type = dbpedia-owl:Monarch ||
      ?type = dbpedia-owl:RoyalFamilyMember
    )
  }

  ?father dbo:name ?fatherName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album rdf:type dbo:Album .
  ?album rdfs:label ""The Miseducation of Lauryn Hill""@en .
  FILTER (lang(?album) = 'en') .

  ?album dbo:artist ?writer .
  
  OPTIONAL { 
    ?writer dbo:occupation dbr:Singer . 
  }
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Clubs played by Sergio Agüero
  VALUES (?agüeroClub) { 
    dbr:Manchester_City_F.C. 
    dbr:Atlético_Madrid 
    dbr:Boca_Juniors 
    dbr:Independiente 
    dbr:Atlético_San_Lorenzo 
  }
  
  # Clubs played by Pablo Aimar
  VALUES (?aimarClub) { 
    dbr:Racing_Club_de_Avellaneda 
    dbr:River_Plate 
    dbr:Valencia_CF 
    dbr:Benfica 
  }

  ?agüeroClub dbo:player ?player .
  ?aimarClub dbo:player ?player .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:childOf dbp:Saw_Min_Hla .
  ?person dbo:spouseOf dbp:Saw_Shwe_Khet .
  ?person dbo:predecessorOf dbp:Myat_Hpone_Pyo .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmTitle ?producerName
WHERE {
  VALUES ?film (dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbr:A_Star_Is_Born_(1937_film))
  
  ?film dbo:title ?filmTitle ;
        dbo:releaseDate ?releaseDate .
  
  FILTER (
    (?film = dbr:The_Adventures_of_Tom_Sawyer_(1938_film) && regex(str(?releaseDate), ""1938""))
    ||
    (?film = dbr:A_Star_Is_Born_(1937_film) && regex(str(?releaseDate), ""1937""))
  )
  
  ?film dbo:producer ?producer .
  ?producer foaf:name ?producerName .
}
ORDER BY ?filmTitle
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?person { 
    dbr:Toyotomi_Hidenaga 
    dbr:Hashiba_Hidekatsu 
  }
  
  ?person dbo:participatedIn ?war .
  ?war rdfs:label ?label ;
       dbo:description ?description .

  FILTER (lang(?label) = 'en' && lang(?description) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName
WHERE {
  ?duke a dbo:Duke ;
        foaf:name ""Anthony Ulrich of Brunswick"" ;
        dbo:parent ?parent .
  
  ?parent foaf:name ?parentName ;
          dbo:title ?title .

  FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
          CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince"") ||
          CONTAINS(LCASE(?title), ""princess""))
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the DBpedia resource for Filthy Friends
  dbr:Filthy_Friends a dbo:Band .
  
  # Look for members or associated artists of Filthy Friends
  OPTIONAL { 
    ?bandMember dbo:memberOf dbr:Filthy_Friends .
    ?bandMember foaf:name ?artistName .
    FILTER regex(?artistName, ""Peter Buck"", ""i"") # Focus on Peter Buck as a notable member
  }
  
  # Retrieve other associated artists or bands of the identified members
  OPTIONAL {
    ?memberBand dbo:leadArtist ?artist .
    ?artist foaf:name ?artistName .
    FILTER NOT EXISTS { ?artist foaf:name ?artistName . FILTER regex(?artistName, ""Peter Buck"", ""i"") }
  }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?primeMinister ?partyName WHERE {
  ?primeMinister dbo:headOfGovernment dbr:Spain .
  ?primeMinister dbo:memberOfParty dbr:Spanish_Socialist_Workers'_Party .
  OPTIONAL { ?primeMinister rdfs:label ?name . FILTER (lang(?name) = 'en') }
  BIND(dbr:Spanish_Socialist_Workers'_Party AS ?partyName)
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Arthur Stanley's father
    dbr:Arthur_Stanley_(politician) dbo:father dbr:Edward_Smith-Stanley,_14th_Earl_of_Derby .

    # Edward Stanley, 17th Earl of Derby's parent who is a politician and office holder
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?politicianParent .
    FILTER EXISTS { ?politicianParent dbo:occupation dbr:Politician . }
    
    # Child of the identified parent (from step 2)
    ?politicianParent dbo:child dbr:Edward_Henry_Stanley .

    # Parent of this child
    dbr:Edward_Henry_Stanley dbo:parent ?finalParent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Stephen V of Hungary's child
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Philip I, Prince of Taranto's father and his spouse
  ?father dbo:child dbr:Philip_I,_Prince_of_Taranto ;
          dbo:spouse ?spouse .

  # Charles Martel of Anjou's parent
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .
  
  # The person must satisfy all conditions
  FILTER (?child = ?spouse && ?spouse = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?eleonoreFather ?ceciliaRenataFather WHERE {
  # Eleonore of Austria's father
  dbp:Eleanor_of_Austria_(1574-1625) dbo:father ?eleonoreFather .
  
  # Cecilia Renata of Austria's father
  dbp:Cecilia_Renata_of_Austria dbo:father ?ceciliaRenataFather .

  # Ensure the fathers are related as parent and child
  ?eleonoreFather dbo:child ?ceciliaRenataFather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet's child
  ?sawChild dbo:parent dbr:Saw_Shwe_Khet .
  
  # Find Myat Hpone Pyo's father and his spouse
  ?myatFather dbo:child dbr:Myat_Hpone_Pyo ;
              dbo:spouse ?fatherSpouse .

  # Ensure the spouse is royalty
  ?fatherSpouse a dbo:Monarch .

  # Find the predecessor of this spouse in royalty
  ?predecessor dbo:successor ?fatherSpouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for member of 1. FC Magdeburg
SELECT ?member WHERE {
    ?club rdf:type dbo:FootballClub .
    ?club rdfs:label ""1. FC Magdeburg""@en .
    ?club dbo:member ?member .
}

UNION

# Query for designer of Aston Martin AMR1
SELECT ?designer WHERE {
    ?car rdf:type dbo:Car .
    ?car rdfs:label ""Aston Martin AMR1""@en .
    ?car dbo:designer ?designer .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?politicianProfession WHERE {
  # Find the movie ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  
  # Check if this actor has a politician profession
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""politico""))
  
  # Return the actor and their politician profession
  BIND(?occupation AS ?politicianProfession)
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayorName WHERE {
  ?sofia a dbo:City ;
         rdfs:label ""Sofia""@en .
  ?sofia dbo:mayor ?mayor .
  ?mayor foaf:name ?mayorName .
}
```",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda""@en .
  
  ?bobby dbo:associatedMusicalArtist ?artist .
  
  FILTER EXISTS { ?artist a dbo:MusicalArtist }
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?shadowAlterEgo ?shatrughanProfession
WHERE {
  # Actor in ""Dispatches from Elsewhere""
  ?show dbr:Dispatches_from_Elsewhere .
  ?show dbo:starring ?actor .

  # Alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  
  # Profession of Shatrughan Sinha
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanProfession .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          dbp:name ""Philip, Despot of Romania""@en .

  # Step 2: Determine his parent (father) who is royalty
  ?philip dbo:father ?royalFather .
  
  # Ensure the father is royalty
  ?royalFather rdf:type dbo:Monarch .

  # Step 3: Find the spouse of that royal father
  ?royalFather dbo:spouse ?spouse .

  # Step 4: Identify Charles I of Hungary and determine his parent (father) who is royalty
  ?charlesI a dbo:Person ;
            dbp:name ""Charles I of Hungary""@en .
  
  ?charlesI dbo:father ?royalFatherOfCharlesI .
  
  # Ensure the father is royalty
  ?royalFatherOfCharlesI rdf:type dbo:Monarch .

  # Step 5: Match the spouse found in step 3 with Charles I's royal lineage
  FILTER (?spouse = ?royalFather)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Anxo Quintana""@en ;
          dbo:nationality dbr:Spain ;
          dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .

  ?event dbo:agent ?person ;
         a dbo:GovernmentFunction ;
         dbo:office ?office .

  ?office rdfs:label ?officeName .
  
  FILTER(LANG(?officeName) = ""en"")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician""))
  OPTIONAL { ?person dbo:almaMater ?almaMater }
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherLabel ?alterEgoLabel WHERE {
  # Find the father of Baeda Maryam I
  ?baedaMaryamI dbo:father ?father .
  ?father rdfs:label ?fatherLabel .

  FILTER(CONTAINS(LCASE(?fatherLabel), ""baeda maryam i""))

  # Find the alter ego of Lamont Cranston
  OPTIONAL {
    ?lamontCranston foaf:name ""Lamont Cranston"" .
    ?lamontCranston dbo:alias ?alterEgo .
    ?alterEgo rdfs:label ?alterEgoLabel .

    FILTER(CONTAINS(LCASE(?alterEgoLabel), ""the shadow""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentPolitician WHERE {
  # Step 1: Identify a child of Frederick Stanley, 16th Earl of Derby
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  
  # Step 2: Find the parent of that child who is a politician
  ?politicianParent dbo:child ?child ;
                   rdf:type dbo:Politician .

  # Step 3: Determine if this politician is an alumnus of Eton College
  ?politicianAlumnus dbp:almaMater dbr:Eton_College ;
                     dbo:parent ?politicianParent .
  
  # Step 4: Find the parent of this alumnus who is also a politician
  ?parentPolitician dbo:child ?politicianAlumnus ;
                    rdf:type dbo:Politician .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artistLabel WHERE {
  <http://dbpedia.org/resource/R.E.M.> dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:Artist .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find films produced by Nat Levine
SELECT ?film WHERE {
    ?film dbo:producer dbr:Nat_Levine .
}

# Step 2: Identify actors in those films
SELECT DISTINCT ?actor WHERE {
    ?film dbo:starring ?actor .
    ?film dbo:producer dbr:Nat_Levine .
}

# Step 3: Determine the spouse of one of these actors
SELECT DISTINCT ?spouse WHERE {
    ?actor dbo:spouse ?spouse .
    ?film dbo:starring ?actor .
    ?film dbo:producer dbr:Nat_Levine .
}

# Step 4: Find a landmark at elevation 20.1168 meters
SELECT ?landmark WHERE {
    ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
}

# Step 5: Identify a ruling party member associated with this landmark
SELECT DISTINCT ?partyMember WHERE {
    ?landmark dbo:location ?location .
    ?location dbo:country ?country .
    ?partyMember dbo:memberOf ?rulingParty .
    ?rulingParty dbo:country ?country .
}
```

Note: This set of queries is a conceptual breakdown. In practice, you would need to execute these queries sequentially and combine the results programmatically to answer the question fully.",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Paradise""@en .
  FILTER (YEAR(?film) = 2013)
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?dorothea dbo:father ?father .
  FILTER(STR(?dorothea) = ""Dorothea_of_Lorraine"") .

  ?father dbo:father ?grandfather .

  ?grandfather dbo:spouse ?spouse .

  ?spouse a ?royaltyClass ;
         a ?nobleClass .

  FILTER((?royaltyClass = dbp:RoyalHouse || ?royaltyClass = dbo:Royalty) &&
         (?nobleClass = dbo:Noble || ?nobleClass = dbp:Noble)) .

  OPTIONAL { ?spouse dbo:child ?francisI .
             FILTER(STR(?francisI) = ""Francis_I,_Duke_of_Lorraine"") }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChildRoyalty WHERE {
  # Step 1: Find the predecessor of Stephen V of Hungary
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Identify Philip, Despot of Romania and his royal grandparent
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania"" .
  
  ?philipParent dbo:child ?philip .
  ?philipGrandparent dbo:child ?philipParent .
  FILTER EXISTS { ?philipGrandparent dbo:royalTitle ?title } .

  # Step 3: Find the spouse of this royal grandparent
  ?spouse dbo:spouse ?philipGrandparent ;
          a dbo:Person .

  # Step 4: Identify the child of this spouse
  ?child dbo:child ?spouse .
  
  # Step 5: Identify the child of that child who is royalty
  ?childOfChild dbo:child ?child ;
                dbo:royalTitle ?title .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movieActor ?albumArtist WHERE {
  # Find the movie that features ""What You Know"" by T.I.
  ?song dbo:title ""What You Know""@en .
  ?song dbo:artist dbr:T.I. .
  ?song dbo:feature ?movie .

  # Get an actor from this movie
  ?movie dbo:actor ?movieActor .

  # Find the album that features ""What You Know"" by T.I.
  ?song dbo:album ?album .

  # Get the main artist of this album
  ?album dbo:artist ?albumArtist .
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName WHERE {
  ?bandMember dbo:band dbr:The_Alan_Parsons_Project .
  ?bandMember foaf:name ?memberName .
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto's father
  ?philipI a dbo:Person ;
           rdfs:label ""Philip I, Prince of Taranto""@en .
  
  ?father dbo:child ?philipI ;
          dbo:spouse ?grandparentSpouse .

  # Step 2: Find the spouse of Philip I's father who is royalty
  ?grandparentSpouse a dbo:Person ;
                    rdfs:label ?labelGrandparentSpouse ;
                    dbo:royalty ""true""^^xsd:boolean .
  
  # Step 3: Identify Maria of Bytom's spouse
  ?mariaOfBytom a dbo:Person ;
                rdfs:label ""Maria of Bytom""@en .

  ?spouseOfMaria dbo:spouse ?mariaOfBytom .

  # Step 4: Ensure the spouse is also a child of Stephen V of Hungary
  ?stephenV a dbo:Person ;
            rdfs:label ""Stephen V of Hungary""@en .
  
  ?spouseOfMaria dbo:child ?stephenV .

  # Final condition: The spouse from step 2 and step 3 must be the same person
  FILTER (?grandparentSpouse = ?spouseOfMaria)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Identify Princess Antoinette of Brunswick-Wolfenbüttel
  ?princess a dbo:Person ;
            foaf:name ""Antoinette, Princess of Brunswick-Wolfenbüttel""@en .

  # Step 2: Find her child who is royalty
  ?child dbo:parent ?princess ;
         a dbo:RoyalFamilyMember ;  # Assuming there's a class for royal family members

  # Step 3: Identify the spouse of that child
  ?spouseOfChild dbo:spouse ?child .

  # Step 4: Find the spouse of that spouse
  ?spouseOfSpouse dbo:spouse ?spouseOfChild .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?host ?institution WHERE {
  ?prize a dbo:NobelPrizeInPhysics .
  ?prize dbo:hostedBy ?host .
  OPTIONAL { ?host foaf:worksFor ?institution . FILTER (isLiteral(?institution) && contains(str(?institution), ""University"")) }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?alterEgoRole ?album WHERE {
  # Find the series ""The Golden Master""
  ?series dbo:title ""The Golden Master""@en .
  
  # Identify actors in this series
  ?series dbo:castMember ?actor .

  # Get alter ego roles played by these actors
  ?role dbo:characterName ?alterEgoRole ;
        dbo:actor ?actor .

  # Find albums by T.I.
  ?album dbo:artist dbr:T.I. ;

         # Look for songs that might be linked to the actor's role or album
         dbo:song ?song .
  
  # Link the song to a professional work of the actor, if possible
  OPTIONAL { 
    ?actor foaf:name ?name .
    FILTER regex(?name, ""The Golden Master"", ""i"")
  }
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?professionLabel WHERE {
  # Identify Rod Argent's professions
  VALUES (?argent) { <http://dbpedia.org/resource/Rod_Argent> }
  
  ?argent dbo:occupation ?profession .
  
  # Find other individuals with the same profession
  ?person dbo:occupation ?sameProfession .
  
  FILTER(?person != ?argent)
  
  # Ensure professions match
  FILTER(?sameProfession = ?profession)
  
  # Get human-readable labels for professions and persons
  SERVICE <http://dbpedia.org/sparql> {
    ?profession rdfs:label ?professionLabel .
    ?person rdfs:label ?personLabel .
  }
}
ORDER BY ?personLabel
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
  # Identify the 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006-07 dbo:participatedInSportTeam dbr:VfL_Bochum .
  
  # Find the next football league season for VfL Bochum
  ?successorSeason a dbo:FootballLeagueSeason ;
                  dbo:participatedInSportTeam dbr:VfL_Bochum ;
                  dbo:seasonStartYear ?year .

  FILTER (?year > 2006 || (?year = 2006 && ?successorSeason != dbr:VfL_Bochum_season_2006-07))
  
  # Ensure the successor season is after the 2006–07 season
  MINUS { 
    ?intermediateSeason a dbo:FootballLeagueSeason ;
                        dbo:participatedInSportTeam dbr:VfL_Bochum ;
                        dbo:seasonStartYear ?intermediateYear .
    FILTER (?intermediateYear > 2006 || (?intermediateYear = 2006 && ?intermediateSeason != dbr:VfL_Bochum_season_2006-07))
    FILTER (?year > ?intermediateYear || (?year = ?intermediateYear && ?successorSeason != ?intermediateSeason))
  }
}
ORDER BY ?year
LIMIT 1
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
  }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Scott_LaFaro 
    dbr:Bob_Crewe 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRole ?televisionShow WHERE {
  ?work dbo:starring dbr:Richard_E._Grant .
  ?work a dbo:TelevisionShow .
  ?work rdfs:label ?televisionShowLabel .
  FILTER (lang(?televisionShowLabel) = 'en') 
  OPTIONAL { ?actorRole dbo:actor dbr:Richard_E._Grant . }
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Find Tony Hollings' birthdate
  ?tonyHollings a dbo:Person ;
                foaf:name ""Tony Hollings"" ;
                dbo:birthDate ?hollingsBirthDate .

  # Find person who is an athlete, soccer player, sports manager, and soccer manager
  ?person a dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          dbo:birthDate ?personBirthDate .

  # Match the birthdate of Tony Hollings with the found person's birthdate
  FILTER (?hollingsBirthDate = ?personBirthDate)
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Placeholder SPARQL query due to lack of specific subject information.
SELECT ?entity ?reference WHERE {
  # Example structure assuming 'subject' is the entity of interest:
  # ?entity a <http://dbpedia.org/ontology/SubjectType> .
  # ?entity dbo:wikiPageWikiLink ?reference .
  
  # Without knowing the specific subject, this query cannot be completed.
}
```",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentPhotographer ?parentDoonArbus
WHERE {
  # Find the parent class of Photographer
  ?photographerClass rdfs:subClassOf* ?parentPhotographer .
  FILTER EXISTS { ?photographerClass rdfs:label ""Photographer""@en }
  
  # Find Doon Arbus and her parent category/class
  ?doonArbus dbo:birthName ""Doon Arbus"" .
  ?doonCategory rdfs:subClassOf* ?parentDoonArbus .
  FILTER EXISTS { ?doonCategory dbo:wikiPageRedirects ?doonArbus }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ann Sothern""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Find the awardee of Commander of the Royal Victorian Order
    ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
    
    # Arthur Stanley (politician) and his father
    dbr:Arthur_Stanley_(politician) dbo:father ?parent .
    
    # Frederick Stanley, 16th Earl of Derby's child and their parent
    ?child dbo:parent dbr:Fredrick_Stanley,_16th_Earl_of_Derby ;
           dbo:parent ?parent .

    # Ensure the awardee is also the father of Arthur Stanley
    FILTER (?awardee = ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?settlement WHERE {
  # Amasa Tracy's war involvement
  ?tracy dbo:nationality dbr:United_States ;
         dbp:war ?war .

  # Person deceased on 1850-08-05 and their birthplace
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .
  
  # Ensure the settlement is an American city or town
  ?settlement a dbo:Settlement ;
              dbp:country dbr:United_States .

  # Quincy Adams Gillmore's military force
  ?gillmore dbo:nationality dbr:United_States ;
            dbo:militaryService ?force .
  
  # Link the settlement to Quincy Adams Gillmore's military service
  ?force dbo:location ?settlement .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band 
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  OPTIONAL { ?person dbo:musicGroup ?band . }
}
```",2,3,3,2,1,3,3,71,0,2,61,0.0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalChild
WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1574)

  # Step 2: Find one of her children
  ?child dbo:parent ?mariaAnna .

  # Step 3: Determine the father of this child (assuming traditional family structure)
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?child .

  # Step 4: Find a child of this father
  ?royalChild dbo:parent ?father .

  # Step 5: Check for royalty status
  ?royalChild dbo:royalty ?isRoyal .
  
  FILTER(?isRoyal = true)
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?parentOfPoliticianHolder WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Find another awardee of the same award and their parent
  ?otherRecipient dbo:award ?award .
  ?otherRecipient dbo:parent ?parentOfAwardee .

  # Step 3: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .
  
  # Step 4: Find the parent of that child (which is Edward Stanley himself)
  ?child dbo:parent ?parentOfChild .
  FILTER(?parentOfChild = dbr:Edward_Stanley,_17th_Earl_of_Derby)

  # Check if this person is a politician and an office holder
  ?parentOfChild dbo:politician true .
  ?parentOfChild dbo:officeHolder true .

  # Step 5: Find the parent of both individuals identified
  BIND(?parentOfAwardee AS ?parentOfPoliticianHolder)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?ancestor ?ancestorLabel WHERE {
  ?baedaMaryamI rdf:type dbo:Monarch ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?child dbo:parent ?baedaMaryamI ;
         foaf:name ?childName .

  ?ancestor dbo:parent ?baedaMaryamI ;
            rdf:type dbo:Monarch, dbo:OfficeHolder ;
            rdfs:label ?ancestorLabel .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandGrandChild WHERE {
  ?parent dbr:Alexander_of_Württemberg_(1804-1881) dbo:child ?child .
  ?child dbo:child ?grandChild .
  ?grandChild dbo:child ?greatGrandChild .
  ?greatGrandChild dbo:child ?grandGrandChild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow ?eventDescription WHERE {
  # Identify World War II as an event
  dbr:World_War_II a dbo:Event .
  
  # Find TV shows related to World War II
  ?tvShow dbo:subject dbr:World_War_II .

  # Get description of the event
  dbr:World_War_II dbo:description ?eventDescription .

  BIND(dbr:World_War_II AS ?war)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?argentProfession .
  
  # Find Joey B's birth name
  dbr:Joey_B dbo:birthName ""Joseph Agyepong""@en .

  # Find a person with the same profession as Rod Argent and the same birth name as Joey B
  ?person dbo:profession ?argentProfession ;
          dbo:birthName ""Joseph Agyepong""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Rod Argent's professional association
  dbr:Rod_Argent dbo:associatedBand dbr:The_Zombies .
  
  # Osibisa and its members
  OPTIONAL { 
    dbr:Osibisa dbo:member ?osibisaMember .
    ?osibisaMember dbo:nationality dbr:Ghana ;
                  dbo:birthPlace ?centralRegionBirthPlace .
    
    FILTER(CONTAINS(LCASE(STR(?centralRegionBirthPlace)), ""central region""))
  }
  
  # Find associated artists
  OPTIONAL {
    ?artist dbo:associatedBand dbr:The_Zombies ;
            dbo:associatedBand ?osibisaMember .
  }
}
```",6,7,7,3,3,3,3,71,0,9,1,0.0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?designer
WHERE {
  ?car dbo:model ""AMR1"" .
  ?car dbo:manufacturer dbr:Aston_Martin .
  ?car dbo:designer ?designer .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?event rdfs:label ""Pickett's Charge""@en .
  ?event dbo:commander ?commander .
}
```",3,4,4,3,1,3,2,20,9,0,33,1.0,0.21428571428571427,0.35294117647058826
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor WHERE {
  ?person foaf:name ""Ada Jane Low""@en .
  ?person dbo:occupation dbc:Politicians .
  ?office dbo:holder ?person .
  ?office dbo:predecessor ?predecessor .
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Herschel Bernardi""@en .
  
  ?work dbo:starring ?actor ;
        rdf:type dbo:Film .

  BIND(str(?work) AS ?movie)
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthPlace WHERE {
  # Step 1: Find Quincy Adams Gillmore's award
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .

  # Step 2: Find another awardee of the same award and their force
  ?person dbo:awardReceived ?award .
  FILTER(?person != dbr:Quincy_Adams_Gillmore)
  OPTIONAL { ?person dbo:militaryRank ?force . }

  # Step 3: Identify Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .

  # Step 4: Ensure the birthplace is an American settlement
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:United_States .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Cece Bell""@en .
  OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the Siege of Mukha event
  ?siege a dbo:MilitaryConflict ;
         rdfs:label ""Siege of Mukha""@en .
  
  # Identify the commander of the siege who is royalty
  ?siege dbo:commander ?commander .
  ?commander rdf:type dbo:Monarch .

  # Find the parent of the commander who is also royalty
  ?parent dbo:child ?commander ;
          rdf:type dbo:Monarch .

  # Identify any child of this royal parent
  ?parent dbo:child ?child .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity (IF(?type = ""birthPlace"", ""Yamaza Enjirō's Birthplace"", ""Hashiba Hidekatsu's War"") AS ?description)
WHERE {
  VALUES (?person ?property) { 
    (dbr:Yamaza_Enjirō dbo:birthPlace ?entity)
    (dbr:Hidekatsu dbo:associatedWithWar ?entity)
  }
  
  BIND(IF(?property = dbo:birthPlace, ""birthPlace"", ""associatedWithWar"") AS ?type)
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?spouse WHERE {
  # Step 1: Find children of Béla IV of Hungary
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Step 2: From those children, find their children (Béla IV's grandchildren)
  ?grandchild dbo:parent ?belavChild .

  # Step 3: Filter for royalty among Béla IV's grandchildren
  ?grandchild a dbo:Monarch .

  # Step 4: Identify Philip I's father and his spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?spouse .

  # Step 5: Check if any royal grandchild is a parent of Charles Martel of Anjou
  ?grandchild dbo:child dbr:Charles_Martel_of_Anjou .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfParentAndPredecessor
WHERE {
  # Step 1: Find Minye Kyawswa's child
  ?minyeKyawswaChild dbo:parent dbr:Minye_Kyawswa .
  
  # Step 2: Find the parent of that child (grandchild of Minye Kyawswa)
  ?parentOfChild dbo:child ?minyeKyawswaChild .

  # Step 3: Identify predecessor of Myat Hpone Pyo
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .
  
  # Step 4: Find the spouse of the father of Myat Hpone Pyo
  ?fatherOfMyatHponePyo dbo:child dbr:Myat_Hpone_Pyo .
  ?spouseOfFather dbo:spouse ?fatherOfMyatHponePyo .

  # Step 5: Find the child of both the parent from step 2 and predecessor from step 3, who is royalty
  ?childOfParentAndPredecessor dbo:parent ?parentOfChild .
  ?childOfParentAndPredecessor dbo:parent ?predecessor .
  ?childOfParentAndPredecessor rdf:type dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?juanCarlosMolina ?actor ?person
WHERE {
  # Juan Carlos Molina as a footballer
  ?juanCarlosMolina foaf:name ""Juan Carlos Molina""@en .
  ?juanCarlosMolina dbo:occupation dbo:SoccerPlayer .

  # Actor from ""All or Nothing: Manchester City"" who is also an athlete (soccer player)
  ?actor rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""all or nothing: manchester city"")).
  ?actor dbo:occupation dbo:Actor .
  ?athlete foaf:name ?actorLabel .
  ?athlete dbo:occupation dbo:SoccerPlayer .

  # Person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:occupation [a dbo:SoccerPlayer ; dbo:SoccerManager] .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseName WHERE {
  # Antoine, Duke of Lorraine
  ?antoine dbo:type/rdfs:subClassOf* dbo:Royalty ;
           foaf:name ""Antoine, Duke of Lorraine"" .

  # Child of Antoine who is a royalty
  ?child dbo:parent ?antoine ;
         dbo:type/rdfs:subClassOf* dbo:Royalty .

  # Parent of that child (should be Antoine)
  ?parent dbo:child ?child .
  
  # Spouse of the parent, ensuring they are royalty and noble
  ?spouse dbo:spouse ?parent ;
          dbo:type/rdfs:subClassOf* dbo:Royalty ;
          dbo:type/rdfs:subClassOf* dbo:Noble .

  # Get the name of the spouse
  ?spouse foaf:name ?spouseName .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer ?profession 
WHERE {
  ?show a dbo:TelevisionShow ;
        rdfs:label ""Coke Studio Philippines""@en .
  
  ?show dbo:producer ?producer .

  OPTIONAL { ?producer foaf:profession ?profession . }
}
```",3,3,4,3,1,3,3,71,3,1,46014,0.75,6.519329812895235e-05,0.00013037526346667825
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Identify Charles I of Hungary's father
  ?charlesI dbo:father ?charlesIFather .
  
  # Step 2: Find the parent (grandfather) and check if he is royalty
  ?charlesIFather dbo:fatherOrMother ?commonEntity ;
                  rdf:type ?royaltyType1 .

  FILTER (?royaltyType1 IN (dbo:Monarch, dbo:King, dbo:Queen)) # Assuming these are types of royalty

  # Step 3: Identify Philip I, Prince of Taranto's father
  ?philipI dbo:fatherOrMother ?philipIFather .
  
  # Step 4: Find the spouse of that father
  ?philipIFather dbo:spouse ?commonEntity .

  # Step 5: Identify Béla IV of Hungary's child and check if they are royalty
  ?belaIV dbo:child ?belasChild .
  ?belasChild rdf:type ?royaltyType2 .

  FILTER (?royaltyType2 IN (dbo:Monarch, dbo:King, dbo:Queen)) # Assuming these are types of royalty

  # Step 6: Find the child of that child (grandchild) and ensure they are royalty
  ?belasChild dbo:child ?commonEntity .
  ?commonEntity rdf:type ?royaltyType3 .

  FILTER (?royaltyType3 IN (dbo:Monarch, dbo:King, dbo:Queen)) # Assuming these are types of royalty

  # Step 7: Bind Charles I and Philip I to their respective DBpedia resources
  VALUES ?charlesI { <http://dbpedia.org/resource/Charles_I_of_Hungary> }
  VALUES ?philipI { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> }
  VALUES ?belaIV { <http://dbpedia.org/resource/Béla_IV_of_Hungary> }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  # Find the DBpedia resource for $pacely (assuming Pacely is a known artist)
  VALUES (?pacely) { 
    dbr:Pacely
  }
  
  # Find Joey B's birth name
  ?joeyB dbo:birthName ?birthName .
  FILTER(?joeyB = dbr:Joey_B)

  # Check for association between $pacely and Joey B
  ?association dbo:artist ?associatedArtist .
  VALUES (?entity) { ?pacely ?joeyB }
  
  # Ensure the associated artist is a musician and person
  ?associatedArtist rdf:type dbo:MusicalArtist ;
                   rdf:type dbo:Person .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  # Cece Bell's birthplace
  { 
    dbr:Cecil_Cece_Bell dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION

  # Awardee related to Vince Gilligan (assuming Emmy Awards context)
  {
    ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Directing_for_a_Single_Camera_Half-Hour_Comedy .
    ?awardee dbo:birthPlace ?birthPlace .
    FILTER(CONTAINS(LCASE(?awardee), ""breaking bad"") || CONTAINS(LCASE(?awardee), ""vince gilligan""))
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION

  # Glenn Youngkin's birthplace
  {
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND(COALESCE(dbr:Cecil_Cece_Bell, ?awardee, dbr:Glenn_Youngkin) AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?itemLabel WHERE {
  # Query for the author of ""Back to Work""
  { 
    ?book a dbo:Book ;
          rdfs:label ""Back to Work""@en .
    ?book dbo:author ?author .
    ?author rdfs:label ?itemLabel .
    FILTER(LANG(?itemLabel) = 'en')
  }
  
  UNION
  
  # Query for the commander during the Third Taiwan Strait Crisis
  { 
    ?event a dbo:MilitaryConflict ;
           dbp:name ""Third Taiwan Strait Crisis""@en .
    ?event dbp:commander ?commander .
    ?commander rdfs:label ?itemLabel .
    FILTER(LANG(?itemLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Kent Allard"" .
  OPTIONAL { 
    ?author dbo:penName ?alterEgo .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vinceGilliganBirthPlace ?governorBirthPlace WHERE {
  # Query for Vince Gilligan's birthplace
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en .
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .

  # Query for the current Governor of Virginia's birthplace
  ?governor a dbo:Politician ;
            dbp:office ""Governor of Virginia"" ;
            foaf:name ?name .
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Alexander of Württemberg's lineage
  ?alexander dbo:birthYear ""1804""^^xsd:gYear .
  ?alexander dbo:deathYear ""1881""^^xsd:gYear .
  ?alexander dbp:name ""Alexander of Württemberg""@en .

  ?child1 dbo:parent ?alexander .
  ?grandchild1 dbo:parent ?child1 .
  ?greatGrandchild1 dbo:parent ?grandchild1 .

  # Archduchess Margarete Sophie's parent
  ?margareteSophie dbp:name ""Archduchess Margarete Sophie of Austria""@en .
  ?parentMargareteSophie dbo:child ?margareteSophie .

  # Parent's lineage
  ?child2 dbo:parent ?parentMargareteSophie .
  ?grandchild2 dbo:parent ?child2 .

  # Check for common ancestor and royalty status
  FILTER (?greatGrandchild1 = ?commonAncestor || ?grandchild2 = ?commonAncestor)
  OPTIONAL { ?commonAncestor dbp:title ?title . }
  FILTER (EXISTS { ?commonAncestor dbp:title ?title } && 
          regex(?title, ""King|Queen|Prince|Princess|Duke|Duchess|Archduke|Archduchess"", ""i""))
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence ?officeLocation WHERE {
  # Find the residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:homeTown ?residence .

  # Find a commander involved in the Central African Republic Civil War who is an office holder and politician
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?office ;
             dbo:memberOf ?organization .
  
  FILTER EXISTS { ?organization dbo:wikiPageRedirects dbr:Central_African_Republic_Civil_War }
  
  # Get the location of the office
  ?office dbo:location ?officeLocation .

}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parent .

  # Béla IV of Hungary's grandchild that is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch } 

  # Spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Combine conditions to find the individual who satisfies all three roles
  VALUES ?individual { ?parent ?grandchild ?spouse }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ekaterina Zaharieva""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?author
WHERE {
  ?movie a dbo:Film ;
         dbo:workType dbr:Television_Show .
  
  ?author a dbo:Person, dbo:MusicalArtist ;
          dbo:deathDate ""2020-06-18""^^xsd:date ;
          dbo:creator ?movie .

}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  
  ?minHlaHtut dbo:parent ?parent .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,2,5,0.0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commander30th ?militaryConflict30th ?commanderCapeFinisterre ?militaryForceCapeFinisterre
WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot and its military conflict/event
  ?regiment dbp:name ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbp:commandedBy ?commander30th .
  ?conflict dbo:militaryConflict ?regiment ;
            a dbo:MilitaryEngagement .

  # Find the military force involved in the Battle of Cape Finisterre (1805)
  ?battle dbp:name ""Battle of Cape Finisterre (1805)""@en ;
          dbo:participatedIn ?militaryForceCapeFinisterre .
  
  # Find the commander associated with William Bayne and the Battle of Cape Finisterre
  ?bayne dbp:name ""William Bayne""@en ;
         dbp:commandedBy ?commanderCapeFinisterre .

  FILTER(?conflict != ?battle) # Ensure we are not conflating different events

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Cynthia Morgan"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?aguerosTeam ?aimarsTeam ?athleteName WHERE {
  # Sergio Agüero's team
  dbr:Sergio_Ag%C3%BCero dbo:team ?aguerosTeam .

  # Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?aimarsTeam .

  # Athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date ;
           rdfs:label ?athleteName .
  
  FILTER (lang(?athleteName) = 'en')
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfBaedaMaryamI ?childOfParent
WHERE {
  # Step 1: Identify Baeda Maryam I and his father
  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryamI .

  # Step 2: Identify a commander in the Siege of Mukha and their parent
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander dbo:parent ?parentOfCommander .

  # Step 3: Ensure both Baeda Maryam I's father and the commander's parent are royalty
  ?fatherOfBaedaMaryamI a dbo:Monarch ;
                       rdfs:label ?labelFather .
  FILTER(CONTAINS(LCASE(?labelFather), ""king"") || CONTAINS(LCASE(?labelFather), ""queen""))

  ?parentOfCommander a dbo:Monarch ;
                    rdfs:label ?labelParent .
  FILTER(CONTAINS(LCASE(?labelParent), ""king"") || CONTAINS(LCASE(?labelParent), ""queen""))

  # Step 4: Find the child of the commander's parent
  ?parentOfCommander dbo:child ?childOfParent .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?writer WHERE {
  # Find the DBpedia resource for Aleksandr Filimonov
  VALUES ?filimonov { dbr:Aleksandr_Filimonov }

  # Identify works associated with Aleksandr Filimonov
  ?work dbo:author ?filimonov .

  OPTIONAL {
    # Check if there are other authors (writers) linked to the work
    ?work dbo:author ?writer .
    FILTER(?writer != ?filimonov)
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  ?event a dbpedia-owl:Sinking ;
         dbpprop:sunkBy ?sinker .
  
  OPTIONAL { ?event dbpprop:ship ?ship . }
  
  FILTER (
    (?ship = dbpedia:HMS_Prince_of_Wales_(53) || 
     ?ship = dbpedia:HMS_Repulse_(1916))
  )
  
  ?sinker dbpedia-owl:country ?country .
  ?war dbpedia-owl:participatingCountries ?countries ;
       dbpprop:name ?nameWar .

  FILTER (?nameWar IN (""World War II"", ""Second World War""))
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor (SAMPLE(?role) AS ?role)
WHERE {
  # Find Jean Baptist, Comte d'Arco and his role in the Russo-Polish War
  dbr:Jean_Baptist,_Comte_d%27Arco dbo:commanderOf dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Identify the Russo-Polish War as a television show and societal event
  ?war dbo:wikiPageWikiLink ?tvShow .
  ?war dbo:wikiPageWikiLink ?societalEvent .
  
  FILTER(?tvShow = dbr:Russo-Polish_War_(TV_series) && ?societalEvent = dbr:Society)

  # Find the successor commander who is a politician and office holder
  ?successor dbo:succeededBy dbr:Jean_Baptist,_Comte_d%27Arco .
  ?successor dbo:commanderOf ?war .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder ?office .

}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?birthPlaceRegionCountry
WHERE {
  # Find Mary Elphinstone, Lady Elphinstone and her parent
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent .

  # Identify William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Match the parent's native place with William Gayner's birthplace
  ?parent dbo:nativePlace ?birthPlaceRegionCountry .
  FILTER (?birthPlaceRegionCountry = ?birthPlace)
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?candidate ?office
WHERE {
  ?election a dbo:Election .
  ?election dbo:date ""2009-01-01""^^xsd:date ; # Assuming the election date is in 2009
            dbo:electedOffice ?office ;
            dbo:winner ?candidate .

  FILTER regex(str(?election), ""Galician regional election"", ""i"")
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Nicholas_II_of_Russia dbo:ruledCountry ?country .
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?tenant 
WHERE {
  VALUES ?person { dbr:Alberto_Ruiz-Gallardón }
  
  ?person dbo:residence ?residence .
  
  OPTIONAL {
    ?residence dbo:currentTenant ?tenant .
  }
}
```",2,2,3,2,1,3,3,71,0,2,375,0.0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Carl McIntosh"" ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?song dbo:lyricsBy ?person ;
          rdfs:label ""Boom Shack-A-Lak""@en .
  }
  
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""birmingham""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person dbp:name ""Rod Argent""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Find a band member of Uncle Murda's group
SELECT DISTINCT ?bandMember WHERE {
    ?uncleMurda dbo:memberOf ?group .
    ?group dbo:member ?bandMember .
    FILTER(CONTAINS(LCASE(STR(?uncleMurda)), ""unclemurda""))
}

UNION

# Part 2: Find a musical artist with the same birth name as a notable person from Florida
SELECT DISTINCT ?musicalArtist WHERE {
    ?floridaPerson dbo:nativePlace dbr:Florida .
    ?floridaPerson dbp:birthName ?birthName .
    
    ?musicalArtist dbp:birthName ?birthName .
    FILTER(STRLEN(?birthName) > 0)
    FILTER(CONTAINS(LCASE(STR(?musicalArtist)), ""music""))
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?force ?war WHERE {
  # Identify Quincy Adams Gillmore and his awards
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }
  
  ?award dbo:recipient ?person .
  ?award dbo:givenTo ?gillmore .

  # Check if the awardee received a Medal of Honor
  OPTIONAL {
    ?medalOfHonor dbo:recipient ?awardee ;
                  rdf:type dbr:Medal_of_Honor .
    
    # Retrieve force and war details for the Medal of Honor recipient
    ?awardee dbo:militaryService ?force .
    ?awardee dbo:participatedInWar ?war .
  }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?show ?actor WHERE {
  # Identify the person born as Richard Grant Esterhuysen who is an actor
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en ;
          a dbo:Actor ;
          foaf:name ?name .
  
  # Find television shows this person has acted in
  ?show dbo:starring ?person ;
        a dbo:TelevisionShow .

  # Get the actor's name (Stephen Fry)
  FILTER(?name = ""Stephen Fry""@en)

  # Retrieve the actor associated with the show
  ?actor dbo:starring ?show .
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:birthPlace dbr:Lahore .
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,0,0,881,0,0.0,0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?conflict WHERE {
  # Find the entity known as ""The Triple X's""
  ?person rdfs:label ""The Triple X""@en .
  
  # Ensure this person is a military commander
  ?person dbo:militaryCommanderOf ?conflict .

  # Filter to ensure the conflict is both an event and a military conflict
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdf:type dbo:Event .

  # Bind the commander's name for clarity in results
  ?commander rdfs:label ?name .
  FILTER(LANG(?name) = ""en"")
  
  BIND(?person AS ?commander)
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find professionals in A Star Is Born (1937)
  ?starIsBorn dbr:A_Star_Is_Born_(1937_film) dbo:starring ?person .
  
  # Find producers of The Adventures of Tom Sawyer (1938)
  ?tomSawyer dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Paulus Powell's Birth Place
SELECT ?paulusBirthPlace WHERE {
    dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
}

# Step 2: Find the Governor of that Region (assuming we have identified the region as a DBpedia resource)
# Note: This step assumes there is a direct way to query for governors, which might require additional assumptions or manual lookup.
SELECT DISTINCT ?governor WHERE {
    ?region dbo:governmentLeader ?governor .
    FILTER(?paulusBirthPlace = ?region) .
    ?governor rdf:type dbo:Politician .
}

# Step 3: Find Vince Gilligan's Birth Place
SELECT ?vinceGilliganBirthPlace WHERE {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?work rdf:type dbo:Book .
  ?work dbo:author dbr:Joe_Biden .
  ?work dbo:country dbr:United_States .
}
```",1,5,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player (SAMPLE(?film) AS ?film)
WHERE {
  # Find Marty Pollio's birthdate
  VALUES (?martyPollio) { dbr:Marty_Pollio }
  
  ?martyPollio dbo:birthDate ?birthdate .
  
  # Find a soccer player and actor with the same birthday as Marty Pollio
  ?player dbo:birthDate ?birthdate ;
          rdf:type dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          rdf:type dbo:Actor .

  # Find films directed by Manuel Huerga featuring this person
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?player .
}
GROUP BY ?player
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?curranRole ?kimWilsonBand ?kimWilsonOtherBands WHERE {
  # The Fabulous Thunderbirds band
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalBand .

  # Nicholas Michael Curran's association with the band
  OPTIONAL {
    ?curran dbo:musicalArtist true .
    ?curran rdfs:label ""Nicholas Michael Curran""@en .
    ?bandMember dbo:member ?curran ;
                dbo:band dbr:The_Fabulous_Thunderbirds .
    BIND(""Nicholas Michael Curran"" AS ?curranRole)
  }

  # Kim Wilson's association with the band
  OPTIONAL {
    ?kimWilson dbo:musicalArtist true .
    ?kimWilson rdfs:label ""Kim Wilson""@en .
    ?bandMember2 dbo:member ?kimWilson ;
                 dbo:band dbr:The_Fabulous_Thunderbirds .
    BIND(""Kim Wilson"" AS ?kimWilsonBand)
  }

  # Other bands Kim Wilson is associated with
  OPTIONAL {
    ?otherBandMember dbo:member ?kimWilson ;
                    dbo:band ?otherBand .
    FILTER(?otherBand != dbr:The_Fabulous_Thunderbirds)
    BIND(STR(?otherBand) AS ?kimWilsonOtherBands)
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movieProducer ?spouseName WHERE {
  # Find Linda Sue Cobb by birth name
  ?person a foaf:Person ;
          dbo:birthName ""Linda Sue Cobb"" .
  
  # Find movies associated with her
  ?filmRole dbo:actor ?person .

  # Get the producer of that movie
  ?film dbo:producer ?movieProducer .

  # Ensure we are talking about the same film
  FILTER(?film = ?filmRole)

  # Find Linda Sue Cobb's spouse
  OPTIONAL {
    ?spouse foaf:mbox ?email .
    ?person foaf:knows ?spouse ;
            foaf:name ?spouseName .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbp:city ""Madrid""@en .
    BIND(?mayor AS ?tenant)
  }
  
  FILTER (?person = dbr:Mariano_Rajoy || ?person = dbr:Miguel_Maura)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?producerProfession
WHERE {
  # Finding Bobby Caldwell's band association
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Caldwell"" ;
         dbo:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { 
    ?bobby dbo:memberOfBand ?band .
  }
  
  # Finding the producer of Coke Studio Philippines and their profession
  ?cokeStudio dbr:Coke_Studio_Philippines ;
              dbo:producer ?producer .

  ?producer a dbo:Person ;
            dbo:profession ?producerProfession .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?sara a dbo:Person ;
        foaf:name ""Sara bint Faisal""@en .
  ?sara dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musician ?name WHERE {
  ?musician a dbo:MusicalArtist .
  OPTIONAL { ?musician foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,7072,191217,491,0.03566511505933259,0.9350786724844639,0.0687095583234557
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?commander ?childOfParent
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Ensure the alter ego is royalty
  ?alterEgo dbo:royaltyStatus ?royaltyStatusAlterEgo .
  FILTER(?royaltyStatusAlterEgo = ""Royal"")

  # The commander in Siege of Mukha who is royalty
  dbr:Siege_of_Mukha dbo:commander ?commander .
  ?commander dbo:royaltyStatus ?royaltyStatusCommander .
  FILTER(?royaltyStatusCommander = ""Royal"")
  
  # Find the parent of the alter ego
  ?alterEgo dbo:parent ?parentAlterEgo .

  # Find the child of that parent
  ?parentAlterEgo dbo:child ?childOfParent .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Dawit I's child
  ?dawitIChild dbo:parent dbr:Dawit_I ;
               a dbo:Person .

  # Baeda Maryam I's child
  ?baedaMaryamChild dbo:parent dbr:Baeda_Maryam_I ;
                    a dbo:Person .

  # Dawit I's father (Zara Yaqob)
  dbr:Dawit_I dbo:parent ?father .
  
  # Zara Yaqob is royalty and an office holder
  ?father dbo:royalty true ;
          dbo:officeHolder true .

  # Ensure the father of Dawit I matches criteria related to Baeda Maryam I's child
  FILTER EXISTS { ?baedaMaryamChild dbo:parent ?father }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?catherine dbo:mother dbr:Catherine_of_Habsburg ;
             dbo:father ?father .
  ?father rdfs:label ?fatherName ;
          a dbo:Monarch ;
          dbo:spouse|dbo:child dbr:Ferdinand_I,_Holy_Roman_Emperor .
  FILTER (CONTAINS(LCASE(?fatherName), ""ferdinand i""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete WHERE {
  # Get Marty Pollio's birth date
  dbr:Marty_Pollio dbo:birthday ?birthDate .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthday ?athleteBirthDate .
  
  FILTER (?athleteBirthDate = ?birthDate)

  # Check if this athlete is also a player in Sergio Agüero
  ?agüeroTeam dbo:player ?athlete .
  dbr:Sergio_Agüero dbo:playsFor ?agüeroTeam .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouse dbo:spouse ?sawMinPhyu .

  ?child dbo:child ?spouse ;
         dbo:royalTitle ?title .

  ?predecessor dbo:predecessor ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native ?bandMember WHERE {
  # Step 1: Identify the award as a region/state/settlement in America
  ?award dbo:type/dbo:subClassOf* dbr:State_of_the_United_States ;
         dbo:country dbr:United_States .

  # Step 2: Find association between Coro de la Pontificia Universidad Católica de Puerto Rico and a musical artist
  ?choir dbp:name ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
  ?choir dbo:associatedBand ?artist .

  # Step 3: Link this artist to Bobby Shmurda
  ?bobby dbr:Bobby_Shmurda ;
         dbo:associatedBand ?artist .

  # Step 4: Determine a band member of this artist who is native to the identified geographical entity
  ?bandMember dbo:nationality ?award ;
              dbo:memberOfBand ?artist .
  
  # Ensure the band member's birthplace matches the award
  ?native dbo:birthPlace ?award .

  FILTER(?choir != ?bobby)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No query can be constructed due to lack of details.
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?artist rdfs:label ""Steven Kapur""@en .
  FILTER NOT EXISTS { ?artist dbo:deathDate ?date } # Ensure the artist is alive or relevant
  ?artist dbo:work ?work .
  ?work a dbo:MusicalWork . # Filter for musical works specifically
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager ?player WHERE {
  # Thomas Letsch's managerial role in the 2007–08 VfL Bochum season
  ?team a dbo:SoccerClub ;
        dbo:season ?season .
  
  FILTER (STRSTARTS(STR(?season), ""2007–08"") && STRCONTAINS(STR(?team), ""VfL Bochum""))
  
  ?manager foaf:name ""Thomas Letsch"" ;
           dbo:managerOf ?team .

  # Players managed by Thomas Letsch
  ?player a dbo:SoccerPlayer ;
          dbo:playsFor ?team .
  
  # Theodor Heuss's native country (Germany)
  dbr:Theodor_Heuss dbo:nativePlace ?place .
  ?place dbo:country dbr:Germany .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Ekaterina_Zaharieva 
    dbr:Reneta_Kamberova 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Antonios Varthalitis's death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Leader of National Party of Greece
  OPTIONAL { 
    dbr:National_Party_of_Greece dbo:leader ?partyLeader .
  }

  # Wars involving both entities
  ?war dbo:participatedIn ?participant1 ;
       dbo:participatedIn ?participant2 .

  FILTER (?deathPlace = ?participant1 || ?deathPlace = ?participant2)
  FILTER (?partyLeader = ?participant1 || ?partyLeader = ?participant2)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?host WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rainer Weiss""@en .
  
  ?person dbo:award ?award .

  ?award dbo:category dbr:Nobel_Prize_in_Physics ;
         dbo:host ?host .

  FILTER EXISTS { ?host dbo:type dbr:Educational_institution }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Query to get the parent of Francis I, Duke of Lorraine
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?francis1 a dbo:Duke ;
            rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis1 dbo:parent ?parent .
}
```

```sparql
# Query to get the spouse of Renée of Bourbon
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?renee a dbo:Person ;
         rdfs:label ""Renée of Bourbon""@en .
  ?renee dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Yeshaq I's resource
  dbr:Yeshaq_I dbo:child ?child .
  
  # The child must have a royalty title
  ?child dbo:royaltyTitle ?title .

  # The same child is the parent of Baeda Maryam I
  ?child dbo:parent dbr:Baeda_Maryam_I .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commander
WHERE {
  # William Bayne's military involvement
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?war .
  
  # Knight Commander of the Order of the Bath related to William Bayne
  ?awardee dbo:recipientOfAward dbr:Knight_Commander_of_the_Order_of_the_Bath ;
           dbo:militaryForce ?militaryForce1 .

  # Connection between William Bayne and the awardee
  ?war dbo:commander ?bayneCommander .
  FILTER(?bayneCommander = dbr:William_Bayne_(Royal_Navy_officer) || ?awardee = ?bayneCommander)

  # French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:militaryConflict ?campaign ;
                                          dbo:commander ?commander .
  
  # Military force involved in the campaign
  ?campaign dbo:militaryForce ?militaryForce2 .

  # Ensure connections between entities
  OPTIONAL { ?awardee dbo:militaryConflict ?campaign }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Movie Title""@en . # Replace ""Movie Title"" with the actual movie title.
  ?movie dbo:starring ?actor .
  ?actor dbo:profession dbr:Actor . # Ensures the profession is specifically an actor
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Marty Pollio's birthday athlete and their team
SELECT ?athlete ?team WHERE {
  VALUES (?martyBirthDate) { (dbr:Marty_Pollio dbo:birthDate ?date) }
  
  # Find an athlete born on the same day as Marty Pollio
  ?person dbo:sport ?sport .
  ?person dbo:birthDate ?birthDate .
  FILTER(?birthDate = ?martyBirthDate && ?sport != """")
  BIND(?person AS ?athlete)
  
  OPTIONAL {
    ?athlete dbo:team ?team .
  }
}

UNION

# Query for Marcelo Sarmiento's birthday soccer player and manager, and their team
SELECT ?soccerPerson ?team WHERE {
  VALUES (?marceloBirthDate) { (dbr:Marcelo_Sarmiento dbo:birthDate ?date) }
  
  # Find a person who is both a soccer player and a soccer manager born on the same day as Marcelo Sarmiento
  ?person dbo:sport ?sport .
  ?person dbo:managerOf ?team .
  ?person dbo:birthDate ?birthDate .
  FILTER(?birthDate = ?marceloBirthDate && ?sport = dbr:Soccer)
  
  BIND(?person AS ?soccerPerson)
  
  OPTIONAL {
    ?soccerPerson dbo:team ?team .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSantiago (SAMPLE(?country) AS ?residenceCountry)
WHERE {
  # Find the tenant of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:archbishop ?tenantOfSantiago .
  
  # Find Álvaro Quirós and his country of residence
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residenceLocation ?residence .
    ?residence dbo:country ?country .
  }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?militaryForce WHERE {
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  ?commandPosition dbo:positionTitle ""Commander""@en ;
                   dbo:agent ?awardee ;
                   dbo:relatedEvent ?war .

  ?war dbo:participatingOrganisation dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
       a dbo:MilitaryConflict .
  
  ?militaryForce dbo:commandedBy ?awardee ;
                 a dbo:MilitaryUnit .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?danielCountry ?gustavoParty
WHERE {
  # Roy Barreras' political party
  OPTIONAL { 
    dbr:Roy_Barreras dbo:party ?royParty .
  }
  
  # Daniel Elahi Galán's country (using nationality as a proxy)
  OPTIONAL { 
    dbr:Daniel_Elái_Galán dbo:nationality ?danielCountry .
  }

  # Gustavo Petro's political party
  OPTIONAL {
    dbr:Gustavo_Petro dbo:party ?gustavoParty .
  }
}
```",4,4,5,2,3,2,3,28,1,9,0,0.1,1.0,0.18181818181818182
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBirthplace
WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Medal_of_Honor .
  ?person dbo:forceMember dbr:Quincy_Adams_Gillmore .

  ?person dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?birthplace dbo:wikiPageRedirects ?entityInBirthplace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Aladdin_(1958_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee WHERE {
  ?prize a dbo:NobelPrizeInPhysics ;
         dbo:awarder dbr:Royal_Swedish_Academy_of_Sciences .
  OPTIONAL { ?prize dbo:citation ?citation . FILTER regex(?citation, ""ceremony"", ""i"") }
  ?prize dbo:recipient ?awardee .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person foaf:name ""Doug Beattie""@en .
  ?person dbo:residence ?residence .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?actorRole ?associatedArtist WHERE {
  # Retrieve Cynthia Morgan's birth name
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
  
  # Confirm her role in ""The Campus Queen""
  OPTIONAL { 
    ?film dbo:starring dbr:Cynthia_Morgan ;
          rdfs:label ?actorRole FILTER(CONTAINS(LCASE(?actorRole), ""the campus queen"")) .
  }
  
  # Find associated musical artist
  OPTIONAL {
    ?artist dbo:associatedMusicalArtist dbr:Cynthia_Morgan .
    ?artist rdfs:label ?associatedArtist .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?entity rdfs:label ""The Shadow""@en.
  ?entity dbo:alterEgo ?character .
  ?character dbo:realName ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorShelbyOaks ?actorATL 
WHERE {
  # Find the actor of Shelby Oaks
  ?shelbyOaksFilm dbo:starring ?actorShelbyOaks .
  FILTER (str(?shelbyOaksFilm) = ""Shelby_Oaks_(film)"")

  # Find the actor of ATL (film)
  ?atlFilm dbo:starring ?actorATL .
  FILTER (str(?atlFilm) = ""ATL_(film)"")

  # Ensure both actors are the same person
  FILTER (?actorShelbyOaks = ?actorATL)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?child dbo:childOf ?spouse .
  
  ?parent dbo:child ?child .
  
  FILTER NOT EXISTS { ?parent dbo:spouse ?spouse } # Ensure the parent is not Mariclare's spouse

  ?parent dbo:occupation dbp:Photographer .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfCommander WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Step 2: Determine his parent
  ?parent a dbo:Person .

  # Step 3: Find the child of this parent (another individual)
  ?child dbo:parent ?parent .
  
  # Step 4: Identify the commander in the war associated with the 2nd Dragoon Regiment (France)
  ?commander dbo:rank ?rank ;
             dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .

  # Additional filters for societal event and television show
  ?event a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .
  ?commander dbo:participatedIn ?event .

  # Step 5: Determine the father of this commander
  ?commander dbo:parent ?fatherOfCommander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?primeMinister WHERE {
  ?party dbo:officialName ""Spanish Socialist Workers' Party""@en .
  ?administration dbo:headOfGovernment ?primeMinister ;
                  dbo:politicalParty ?party .
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?realName WHERE {
  ?person a dbo:Monarch ;
          rdfs:label ""Peter IV of Aragon""@en .
  ?person foaf:name ?realName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?order ?description ?foundingDate ?country 
WHERE {
  VALUES ?label { ""Order of the Medjidie"" }
  
  ?order rdfs:label ?label ;
         dbo:description ?description ;
         dbo:foundingDate ?foundingDate ;
         dbo:country dbr:Ottoman_Empire .
  
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?event dbo:ship dbr:HMS_Prince_of_Wales_(53).
  ?event dbo:ship dbr:HMS_Repulse_(1916).
  ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en.
  ?event dbo:commander ?commander.
  OPTIONAL { ?commander foaf:name ?name. }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:birthName ""Quincy Adams Gillmore""@en .
  ?person dbo:militaryService ?force .
  ?force dbo:partOfWar ?war .
  FILTER(?war = dbr:American_Civil_War)
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?societalEvent ?event ?televisionShow
WHERE {
  # Find Cecilia Renata of Austria's father
  ?ceciliaRenata dbo:parent ?father .
  FILTER(STR(?ceciliaRenata) = ""Cecilia_Renata_of_Austria"") .

  # Identify the child who was a commander in the war
  ?father foaf:child ?child .
  ?child dbo:commander ?militaryRole .

  # Link to societal events, events, and television shows
  ?child dbo:societalEvent ?societalEvent .
  ?child dbo:event ?event .
  ?child dbo:televisionShow ?televisionShow .

  # Ensure connection to the Algerian War's military force
  ?militaryRole dbo:militaryForce ?algerianWarMilitary .
  FILTER(STR(?algerianWarMilitary) = ""Algerian_War_military_force"") .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandName ?nickCurranRealName ?associatedArtist WHERE {
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:name ?bandName .

  # Identify Nick Curran's birth details and confirm he is a musical artist
  dbr:Nick_Curran foaf:givenName ""Nick"" ;
                  foaf:familyName ""Curran"" ;
                  dbo:birthDate ?nickCurranBirthDate ;
                  rdf:type dbo:MusicalArtist .

  # Find associated musical artists related to Nick Curran
  OPTIONAL {
    ?associatedArtist dbo:associatedBand dbr:Nick_Curran .
    ?associatedArtist foaf:name ?artistName .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person (SAMPLE(?name) AS ?name)
WHERE {
  ?person dbo:childOfElviraOfCastile dbp:Elvira_of_Castile .
  ?person dbo:childOfRogerIIOfSicily dbp:Roger_II_of_Sicily .
  ?person dbo:parentOfWilliamIISicily dbp:William_II_of_Sicily .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?royalChild ?alterEgo
WHERE {
  # Baeda Maryam I's father
  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryamI .
  
  # Yeshaq I's parent and their royal child
  dbr:Yeshaq_I dbo:father ?parentOfYeshaqI .
  ?parentOfYeshaqI dbo:child ?royalChild .
  FILTER (dbo:RoyalPerson ?royalChild) .

  # The Shadow's alter ego
  BIND(""Lamont Cranston"" AS ?alterEgo)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?award ?war 
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Award given by the United States Congress and its associated war
  ?award a dbo:Award ;
         dbp:awardingBody dbr:United_States_Congress .
  ?war dbo:associatedAward ?award .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Bob Thompson""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?person rdfs:label ""Nat Levine""@en .
  ?person a dbo:FilmProducer .
  ?person dbo:filmProduction ?film .
}
```",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruno Daniel Marie Paul Retailleau"" ;
          dbo:birthDate ?birthDate ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { ?person dbo:occupation dbr:Politician . }
  OPTIONAL { ?person dbo:officeHolder ?office . }

  FILTER EXISTS {
    ?person dbo:occupation dbr:Politician .
  }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorSpouse WHERE {
  # Nat Levine's films
  ?natFilm dbo:filmProducer dbr:Nat_Levine .
  
  # Harriette Arlene Lake (Harriet Hilliard) as an actor
  ?harriette foaf:name ""Harriette Arlene Lake""@en ;
             dbo:birthName ""Harriette Arlene Lake""^^xsd:string ;
             dbo:actor ?film .

  # Common film between Nat Levine and Harriette Arlene Lake
  FILTER(?natFilm = ?film) .
  
  # Other actors in the common film
  ?film dbo:actor ?otherActor .
  
  # Ensure it's not Harriette herself
  FILTER(?otherActor != ?harriette) .

  # Find spouse of the other actor
  ?otherActor dbo:spouse ?actorSpouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
# Step 1: Find George Hamilton's spouse
SELECT ?spouse WHERE {
  ?actor foaf:name ""George Hamilton""@en .
  ?actor dbo:starringIn dbr:_1000_Dollars_a_Minute .
  ?actor dbo:spouse ?spouse .
}

# Step 2: Check if the spouse is a member of the Republican Party
SELECT DISTINCT ?spouse WHERE {
  ?spouse foaf:name ?name .
  ?spouse dbo:party dbr_Republican_Party_(United_States) .
  ?actor foaf:name ""George Hamilton""@en .
  ?actor dbo:starringIn dbr:_1000_Dollars_a_Minute .
  ?actor dbo:spouse ?spouse .
}

# Step 3: Find Tisha Sterling's parent and their birth name
SELECT DISTINCT ?parentBirthName WHERE {
  ?tisha foaf:name ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
  ?parent foaf:name ?birthName .
}

# Step 4: Find the person with that birth name
SELECT DISTINCT ?person WHERE {
  ?person foaf:name ?birthName .
  ?tisha foaf:name ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
  ?parent foaf:name ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:United_States_of_America .
  ?person dbo:birthPlace dbr:New_York_City .
  ?person foaf:name ""Ackquille Jean Pollard""@en .
  
  OPTIONAL { 
    ?bandMember dbo:member ?person .
    ?bandMember foaf:name ""Uncle Murda""@en .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles Martel of Anjou""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find the father of Cecilia Renata of Austria
  ?ceciliaRenata dbo:childOf ?fatherCeciliaRenata .
  
  # Step 2: Get the child of that person (the father)
  ?fatherCeciliaRenata dbo:child ?childFatherCeciliaRenata .

  # Step 3: Find the parent of Archduke Charles Joseph of Austria
  ?charlesJoseph dbo:parent ?parentCharlesJoseph .
  
  # Step 4: Get the child of that parent (the father)
  ?parentCharlesJoseph dbo:child ?fatherParentCharlesJoseph .

  # Step 5: Match the person who is both the child from step 2 and the father from step 4
  FILTER (?childFatherCeciliaRenata = ?fatherParentCharlesJoseph)

  BIND(?childFatherCeciliaRenata AS ?person)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Find the predecessor of Stephen V of Hungary (likely his father)
  ?stephenV a dbo:Person ;
            rdfs:label ""Stephen V of Hungary""@en .
  
  ?predecessor dbo:child ?stephenV .

  # Find Charles Martel of Anjou's parent
  ?charlesMartel a dbo:Person ;
                 rdfs:label ""Charles Martel of Anjou""@en .
  
  ?parent dbo:child ?charlesMartel .

  # Ensure the predecessor and parent are connected through their children
  ?intermediateChild dbo:child ?predecessor ;
                     dbo:child ?parent .

  # Find a royal child of this intermediate child
  ?childOfChild dbo:child ?intermediateChild ;
                a dbo:Person ;
                ?royaltyProperty ?royaltyValue .
  
  FILTER(?royaltyValue != """")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the band associated with Lil Wayne (Robert Lamar Thompson)
  dbr:Lil_Wayne dbo:memberOf ?band .
  
  # Ensure the band is a musical artist
  ?band a dbo:MusicalArtist .

  # Confirm Sam Concepcion's profession as a musician
  dbr:Sam_Concepcion dbo:profession dbr:Musical_artist .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?musicArtist WHERE {
  # Find the writer of ""The Live Anthology""
  dbr:The_Live_Anthology dbo:author ?writer .
  
  # Check if this writer is also a musical artist
  OPTIONAL { ?writer dbo:musicalArtist ?musicArtist . }
  
  FILTER EXISTS { ?writer dbo:musicalArtist ?musicArtist . }
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?childLabel WHERE {
  # Find commanders involved in the Siege of Padua
  ?commander dbo:event dbr:Siege_of_Padua_1509 .
  
  # Ensure they have a role as commander
  ?commander dbp:role ""Commander""@en .

  # Find children of these commanders
  ?child dbo:parent ?commander .

  # Check if the child is royalty
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Get the label for the child
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName
WHERE {
  dbr:Catherine_of_Austria_Queen_of_Portugal dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?war 
WHERE {
  # Yamaza Enjirō's birthplace
  OPTIONAL { 
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  }
  
  # Toyotomi Hidenaga's associated war
  OPTIONAL { 
    dbr:Toyotomi_Hidenaga dbo:associatedWith ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,2,3,0.0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Victor Saville""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace dbo:country ?country .
    ?country dbr:languageSpoken ?nativeLanguage .
  }
}
```",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Hon. Mary Frances Bowes-Lyon's parent
  OPTIONAL { 
    dbr:Mary_Frances_Bowes-Lyon dbo:child dbr:Claude_Bowes-Lyon_13th_Earl_of_Strathmore_and_Kinghorne .
    BIND(dbr:Claude_Bowes-Lyon_13th_Earl_of_Strathmore_and_Kinghorne AS ?parent1)
  }
  
  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's parent
  OPTIONAL { 
    dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child dbr:Claude_Bowes-Lyon_13th_Earl_of_Strathmore_and_Kinghorne .
    BIND(dbr:Claude_Bowes-Lyon_13th_Earl_of_Strathmore_and_Kinghorne AS ?parent2)
  }
  
  # Find the common parent
  FILTER(?parent1 = ?parent2)
  BIND(?parent1 AS ?parent)
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name is Ackquille Jean Pollard
  VALUES ?bobbyShmurdaBirthName { ""Ackquille Jean Pollard"" }
  
  # Find the person with this birth name
  ?person dbo:birthName ?bobbyShmurdaBirthName .
  
  # Check if this person is a member of Uncle Murda
  ?uncleMurdaMember dbo:member ?person ;
                   rdfs:label ""Uncle Murda""@en .
  
  # Ensure the person is native to Florida
  ?person dbo:nativePlace dbr:Florida .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Identify the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:successor ?season .

  # Ensure the successor is a football league season, sports team season, and sports season
  ?season rdf:type dbo:SoccerLeagueSeason ;
          rdf:type dbo:SportsTeamSeason ;
          rdf:type dbo:SportsSeason .

  # Find clubs associated with this season that are sports clubs, organizations, and soccer clubs
  ?club dbo:team ?season ;
        rdf:type dbo:SportsClub ;
        rdf:type dbo:Organization ;
        rdf:type dbo:SoccerClub .

  # Identify players of the club
  ?player dbo:playsFor ?club .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Carolyn_Jones 
    dbr:Sal_Mineo
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Find the manager for SBV Vitesse in the 2020-21 season
  ?team dbo:seasonManager [
    dbo:managedTeam dbr:SBV_Vitesse;
    dbo:managementSeason ""2020–21""^^xsd:string .
  ].
  
  # Get the name of the manager
  ?manager foaf:name ?managerName.
  
  # Ensure the manager is linked to the team's management role
  ?team dbo:seasonManager ?manager.

  # Filter for managers who are natives of West Germany
  OPTIONAL {
    ?manager dbo:nationality dbr:West_Germany .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify the band ""Nothing to Gein""
  dbr:Nothing_to_Gein a dbo:Band .

  # Find the producer of the band
  dbr:Nothing_to_Gein dbo:producer ?producer .

  # Check if the producer is also a member of another band or group
  ?producer dbo:member ?bandMember .
  
  FILTER(?bandMember != dbr:Nothing_to_Gein) # Ensure it's not the same band
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person foaf:givenName ""Joseph"" .
  ?person foaf:familyName ""Aning"" .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:alumnusOf dbr:Eton_College .
  
  ?child1 dbo:parent ?alumnus ;
          dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  
  ?child2 dbo:parent ?alumnus ;
          rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .

  FILTER(?child1 != ?child2)

  ?politicianChild dbo:parent ?alumnus ;
                   a dbo:Politician .

  ?father dbo:child ?politicianChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle
WHERE {
  ?work dbo:author dbr:Bill_Clinton .
  ?work rdf:type dbo:Book .
  ?work rdfs:label ?workTitle .
  FILTER (lang(?workTitle) = 'en')
}
```",1,4,2,1,1,3,3,71,0,7,6,0.0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Chappaqua,_New_York ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:First_Lady_of_the_United_States .
  
  OPTIONAL { ?person dbo:commanderInWar dbr:World_War_II . }
  
  ?work dbo:author ?person ;
        a dbo:Book .

  FILTER EXISTS {
    ?person dbo:birthPlace dbr:Chappaqua,_New_York .
  }

  FILTER EXISTS {
    ?person dbo:occupation dbr:Politician .
  }

  FILTER EXISTS {
    ?work a dbo:Book .
  }
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?entityInJapan ?birthPlace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:occupation dbr:Television_show_director ; # or other relevant occupation
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { ?awardee dbo:location ?entityInJapan . FILTER (regex(str(?entityInJapan), ""Japan"")) }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  dbr:Soumitra_Chatterjee dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Todor Zhivkov""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,1,1,13,0.5,0.07142857142857142,0.125
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Cecilie_Bell 
    dbr:Glenn_Youngkin 
    dbr:Vince_Gilligan
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  FILTER(?person IN (dbr:Cecilie_Bell, dbr:Glenn_Youngkin, dbr:Vince_Gilligan))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonRoyalty WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .

  # Step 2: Find the parent (father) of Philip
  ?philip dbo:parent ?father .

  # Step 3: Determine the spouse of Philip's father
  ?father dbo:spouse ?spouseOfFather .

  # Step 4: Identify Charles Martel of Anjou and his parent
  ?charlesMartel a dbo:Person ;
                 foaf:name ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?parentOfCharlesMartel .

  # Step 5: Find the common royalty between the spouse of Philip's father and the parent of Charles Martel
  FILTER (?spouseOfFather = ?commonRoyalty && ?parentOfCharlesMartel = ?commonRoyalty)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Find the awardees of the Gillmore Medal
  ?awardee dbo:award dbr:Gillmore_Medal .
  
  OPTIONAL {
    # Find the military force associated with the awardee
    ?awardee dbo:militaryUnit ?force .
  }
  
  FILTER EXISTS {
    # Confirm Amasa Tracy's association with the American Civil War
    dbr:Amasa_Tracy dbo:participatedInMilitaryConflict dbr:American_Civil_War .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?team WHERE {
  ?person rdfs:label ""Thomas Letsch""@en .
  ?person dbo:manager ?team .
  FILTER NOT EXISTS { ?team a dbo:Person } # Exclude if the team is mistakenly identified as a person
  OPTIONAL { ?team rdf:type ?type }
  FILTER (
    ?type = dbo:SoccerClub ||
    ?type = dbo:SportsTeam ||
    ?type = dbo:AssociationFootballSeason ||
    ?type = dbo:SportsSeason
  )
}
```",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfEugeneProfession ?allanArbus
WHERE {
  # Find Eugène Cattin's profession and its parent class
  ?eugeneCattin dbo:profession ?profession .
  FILTER (str(?eugeneCattin) = ""Eugène_Cattin"") .

  OPTIONAL { 
    ?profession rdfs:subClassOf+ ?parentOfEugeneProfession .
  }

  # Find Allan Arbus's child and its parent
  ?allanArbus foaf:child ?child .
  FILTER (str(?allanArbus) = ""Allan_Arbus"") .

  OPTIONAL {
    ?child rdfs:subClassOf+ ?parentOfChild .
    FILTER (?parentOfChild != ?child)
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Roger II of Sicily's child
  ?childRoger2 dbp:father dbr:Roger_II_of_Sicily .
  
  # Alfonso VI's grandchild (child of one of his children)
  ?grandChildAlfonso6 dbo:parent ?childAlfonso6 ;
                      dbo:parent dbr:Alfonso_VI_of_Léon_and_Castile .

  # Common individual who is both a child of Roger II and parent to William I's child
  ?commonIndividual dbp:father ?childRoger2 .
  ?commonIndividual dbp:child ?william1Child .
  
  # Ensure the common individual is royalty
  ?william1Child dbo:parent dbr:William_I_of_Sicily ;
                 a dbo:Monarch .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceReedHowes ?actorName ?deathPlaceActor
WHERE {
  # Find the death place of Reed Howes
  OPTIONAL {
    dbr:Reed_Howes dbo:deathPlace ?deathPlaceReedHowes .
  }

  # Find the actor for ""Color Me Dead""
  OPTIONAL {
    dbr:Color_Me_Dead dbo:actor ?actorResource .
    ?actorResource rdfs:label ?actorName .
    FILTER (LANG(?actorName) = 'en')
    
    # Get the death place of this actor
    OPTIONAL {
      ?actorResource dbo:deathPlace ?deathPlaceActor .
    }
  }
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university
WHERE {
  ?person dbp:name ""Luiza Erundina""@en .
  ?person dbo:almaMater ?university .

  FILTER EXISTS { ?university a dbo:University . }
  FILTER EXISTS { ?university a dbo:Organization . }
  FILTER EXISTS { ?university a dbo:EducationalInstitution . }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the resource for Wizards of Waverly Place
  dbr:Wizards_of_Waverly_Place dbo:musicalArtist ?artist .
  
  # Ensure the artist is a musical artist and possibly other types of artists
  ?artist rdf:type dbo:MusicalArtist .

  OPTIONAL { 
    ?artist rdf:type ?otherType .
    FILTER(?otherType != dbo:MusicalArtist) 
  }
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war ?event ?tvShow WHERE {
  ?commander dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?commander dbo:parent dbr:Eleonore_of_Austria,_Queen_of_Poland .
  
  # Assuming there is a war involving the 2nd Dragoon Regiment of France
  ?war dbo:hasParticipant ?commander .
  ?war dbo:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""france"") && CONTAINS(LCASE(?location), ""dragoon regiment""))

  OPTIONAL {
    # Check if there is a societal event or TV show related to the commander
    ?event dbo:relatedTo ?commander .
    FILTER(STRSTARTS(LCASE(?event), ""societal event"") || STRSTARTS(LCASE(?event), ""television show""))
  }
  
  OPTIONAL {
    # Check if there is a television show related to the commander
    ?tvShow dbo:relatedTo ?commander .
    FILTER(STRSTARTS(LCASE(?tvShow), ""television show""))
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?admiral ?role ?connection
WHERE {
  # Admiral William S. Benson's role during the Spanish Flu pandemic
  dbr:William_S._Benson dbo:positionHeld ?navalRole .
  ?navalRole dbo:startDate ?startDate ;
             dbo:endDate ?endDate .

  FILTER (?startDate <= ""1918-11-01""^^xsd:date && ?endDate >= ""1919-12-31""^^xsd:date)

  # Bill Clinton's information
  dbr:Bill_Clinton dbo:spouse ?spouse .
  ?spouse rdfs:label ""Hillary Rodham Clinton""@en .

  # Check for any connection between Benson and Clinton
  OPTIONAL {
    ?admiral dbo:relatedTo ?connection .
    ?connection rdfs:label ""Bill Clinton""@en .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryOfResidence ?officeHeldByFeijóo ?tenantOfAdministration
WHERE {
  # Álvaro Quirós's country of residence
  dbr:Álvaro_Quirós dbo:residence ?residence .
  ?residence dbo:country ?countryOfResidence .

  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:office ?officeHeldByFeijóo .

  # Tenant of the administration related to PSOE
  ?person dbo:party dbr:Spanish_Socialist_Workers'_Party ;
          dbo:position ?position .
  FILTER (CONTAINS(LCASE(?position), ""administration""))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?personLabel WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""knight commander of the order of the bath""))
  SERVICE <http://dbpedia.org/sparql> { 
    ?person rdfs:label ?personLabel .
    FILTER (LANG(?personLabel) = 'en')
  }
}
ORDER BY ?personLabel
```",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:father dbr:William_II_of_Sicily .
  ?elvira dbo:child ?person .
  FILTER (str(?elvira) = ""Elvira_of_Castile,_Queen_of_Sicily"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenantOfMadrid ?leaderOffice
WHERE {
  # Find the tenant (headquarters) of Madrid
  ?entity dbo:location dbpedia:Madrid .
  ?entity dbo:headquarters ?tenantOfMadrid .

  # Find the leader of the Conservative Republican Party in Spain and their office
  ?party dbo:leader ?leader .
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  OPTIONAL {
    ?leader foaf:holdsAccount ?office .
    ?office rdfs:label ?leaderOffice .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?birthPlace WHERE {
  # Ackquille Jean Pollard is known as 2 Chainz
  dbr:2_Chainz dbo:nativeName ""Ackquille Jean Pollard""@en .
  
  # GS9 association
  dbr:GS9 dbo:bandMember ?member .

  # Member must be an artist and a musical artist
  ?member dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .

  # Filter for native of Florida
  ?member dbo:nativePlace dbr:Florida .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Nat Levine's entity in DBpedia
  dbr:Nat_Levine dbo:filmProduction ?film .
  
  # Find actors who starred in those films
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,257,0,0.0,0
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?songwriter WHERE {
  ?song a dbo:Song ;
        rdfs:label ""Boom Shack-A-Lak""@en .
  ?song dbo:lyricist ?songwriter .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentName WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }

  FILTER EXISTS {
    ?parent dbo:nativePlace dbr:Middlesex .
  }

  ?parent rdfs:label ?parentName .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfCharlesJoseph ?fatherOfMariaAnna
WHERE {
  # Archduke Charles Joseph of Austria and his parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharlesJoseph .
  
  # Father of Archduke Charles Joseph (child of his parent)
  ?parentOfCharlesJoseph dbo:child ?fatherOfCharlesJoseph .
  
  # Maria Anna of Bavaria and her parent
  dbr:Maria_Anna_of_Bavaria_(1574) dbo:parent ?parentOfMariaAnna .
  
  # Father of Maria Anna (child of her parent)
  ?parentOfMariaAnna dbo:child ?fatherOfMariaAnna .
  
  # Ensure both fathers are royalty
  ?fatherOfCharlesJoseph a dbo:Monarch .
  ?fatherOfMariaAnna a dbo:Monarch .
  
  # Check if they are the same person
  FILTER (?fatherOfCharlesJoseph = ?fatherOfMariaAnna)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedBand dbr:GS9 ;
                     dbo:member dbr:Shmurda_Squad .

  # Step 2: Find band members of the identified artist (GS9)
  ?bandMember dbo:member dbr:GS9 .

  # Step 3: Ensure the band member is also a musical artist
  ?bandMember a dbo:MusicalArtist .

  # Step 4: Filter those native to Florida
  ?bandMember dbo:nativePlace dbr:Florida .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?entity rdfs:label ""The Shadow""@en.
  OPTIONAL { ?entity dbo:alterEgo ?realEntity. }
  OPTIONAL { ?realEntity rdfs:label ?realName. FILTER (lang(?realName) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,1048576,3,0.0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?squadName WHERE {
  # Find the soccer player and manager born on 1979-11-03
  ?person1 a dbo:SoccerPlayer ;
           dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sportTeam ?team .

  # Ensure this person is also a manager
  ?person1 dbo:managerOf ?team .

  # Find the athlete born on 1955-02-22 who played in the same team as the above individual
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sportTeam ?team .

  # Ensure Sergio Agüero played in the same team
  dbr:Sergio_Agüero dbo:sportTeam ?squadName .
  
  # Check if Sergio Agüero played with both individuals
  ?squadName dbo:member ?player1 ;
            dbo:member ?player2 .

  FILTER (?player1 = ?person1 && ?player2 = ?athlete)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?tvShow WHERE {
  # Find military conflicts associated with Maria I of Portugal
  ?conflict dbo:place dbr:Maria_I_of_Portugal .
  
  # Check if there is a television show with a similar name to the conflict
  OPTIONAL { 
    ?tvShow dbo:name ?name .
    FILTER regex(?name, ""War of the Oranges"", ""i"")
  }
  
  # Return conflicts and any matching TV shows
  VALUES ?conflict {
    dbr:War_of_the_Oranges_(1801%E2%80%9302)
  }
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hideki Tojo""@en ;
          dbo:birthName ""Koichirō Tōjō""@ja .
  
  ?event dbo:participatedIn ?person ;
         rdfs:label ?warLabel .

  FILTER(CONTAINS(LCASE(?warLabel), ""world war ii""))
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName WHERE {
  # Find the person born as Linda Sue Cobb
  ?person dbo:birthName ""Linda Sue Cobb""@en .
  
  # Identify her spouse
  ?person dbo:spouse ?spouse .

  # Check if this spouse is a producer of ""12 Strong""
  OPTIONAL { 
    ?spouse dbo:filmProduction ?production .
    ?production rdfs:label ""12 Strong""@en .
  }

  # Return the name of the spouse
  ?spouse rdfs:label ?spouseName .
  
  FILTER(LANG(?spouseName) = 'en')
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Khlyst""@en .
  
  ?band dbo:bandMember ?member .
  
  OPTIONAL { 
    ?member dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""music"") || CONTAINS(LCASE(?occupation), ""artist""))
  }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?myatHponePyo dbo:name ""Myat Hpone Pyo""@en .
  
  ?father dbo:child ?myatHponePyo .
  ?father dbo:royalTitle ?title .

  OPTIONAL { ?father dbp:spouse ?spouse . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?party 
WHERE {
  # Find Daniel Elahi Galán's country
  OPTIONAL { 
    ?galan a dbo:Politician ;
           foaf:name ""Daniel Elahi Galán""@en .
    ?galan dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER (lang(?country) = 'en')
  }
  
  # Find Roy Leonardo Barreras Montealegre's party
  OPTIONAL {
    ?barreras a dbo:Politician ;
              foaf:name ""Roy Leonardo Barreras Montealegre""@en .
    ?barreras dbo:partyAffiliation ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officeLabel
WHERE {
  dbpedia:Mariano_Rajoy dbo:office ?office .
  ?office rdfs:label ?officeLabel .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?profession ?fictionalCharacter
WHERE {
  # Find the band associated with Bob Thompson (musician)
  ?bob a dbr:Bob_Thompson_(musician) .
  ?bob dbo:memberOf ?band .

  # Find Sam Concepcion's profession
  ?sam a dbr:Sam_Concepcion .
  ?sam dbo:profession ?profession .

  # Find Walter B. Gibson's fictional character creation
  ?walter a dbr:Walter_B._Gibson .
  ?walter dbo:fictionalCreation ?fictionalCharacter .
  
  FILTER (?fictionalCharacter IN (dbr:The_Shadow, dbr:Captain_Scarlet_and_the_Magic_Pen)) # Known fictional creations by Gibson

  # Find a common entity linking all three
  OPTIONAL { ?band rdfs:label ?bandLabel . }
  OPTIONAL { ?profession rdfs:label ?professionLabel . }
  OPTIONAL { ?fictionalCharacter rdfs:label ?fictionalCharacterLabel . }

}
ORDER BY ?band ?profession ?fictionalCharacter
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorATL ?actorShelbyOaks WHERE {
  # Find actors for ATL
  OPTIONAL { 
    dbr:ATL (dbo:starring) ?actorATL .
    ?actorATL a dbo:Actor .
  }
  
  # Find actors for Shelby Oaks
  OPTIONAL { 
    dbr:Shelby_Oaks (dbo:starring) ?actorShelbyOaks .
    ?actorShelbyOaks a dbo:Actor .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # Find children of Ferdinand II (Cecilia Renata's father)
  ?father a dbo:Person ;
          dbo:child ?child .

  # Filter for a child who was a commander in the Thirty Years' War
  ?child dbo:occupation dbr:Military_commander ;
         dbo:wikiPageDisambiguates ?disambiguation .
  
  FILTER EXISTS {
    ?disambiguation rdfs:label ""Thirty Years' War""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",4,5,5,3,2,3,3,71,59,131,0,0.3105263157894737,1.0,0.4738955823293173
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Actor in ""All or Nothing: Manchester City""
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
  
  # Soccer player and athlete
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Person born on 1955-02-22 who is an athlete
  OPTIONAL { 
    ?athlete dbp:birthday ""1955-02-22""^^xsd:date .
  }

  # Team of the person born on 1979-11-03 who is a soccer player and manager
  OPTIONAL {
    ?soccerManager dbp:birthday ""1979-11-03""^^xsd:date ;
                   a dbo:SoccerPlayer, dbo:SportsManager .
    ?team dbo:member ?soccerManager .
    ?actor dbo:playsFor ?team .
  }

  # Ensure the actor matches all criteria
  FILTER (?actor = ?athlete && ?actor = ?soccerManager)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?stonebwoyName ?associatedArtistName
WHERE {
  ?stonebwoy a dbo:Musician ;
             rdfs:label ""Stonebwoy""@en .
  OPTIONAL { ?stonebwoy dbo:associatedMusicalArtist ?artist . }
  ?artist rdfs:label ?associatedArtistName .
  
  FILTER(LANG(?stonebwoyName) = 'en')
  FILTER(LANG(?associatedArtistName) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query 1: Producer of A Star Is Born (1937)
SELECT ?producer WHERE {
    ?film dbpedia-owl:title ""A Star Is Born""@en .
    ?film dbp:released ""1937""^^xsd:gYear .
    ?film dbo:director ?director .
    ?director foaf:name ?producer .
}

# Query 2: Professional associated with The Shadow
SELECT DISTINCT ?person WHERE {
    ?shadowCharacter rdfs:label ""The Shadow""@en .
    ?media dbpedia-owl:character ?shadowCharacter .
    ?media dbo:actor ?person .
}

# Query 3: Producer of The Adventures of Tom Sawyer (1938)
SELECT ?producer WHERE {
    ?film dbpedia-owl:title ""The Adventures of Tom Sawyer""@en .
    ?film dbp:released ""1938""^^xsd:gYear .
    ?film dbo:director ?director .
    ?director foaf:name ?producer .
}

# Final Query to find common individual
SELECT DISTINCT ?commonIndividual WHERE {
    VALUES (?producer1) { 
        (SELECT ?producer WHERE {
            ?film dbpedia-owl:title ""A Star Is Born""@en .
            ?film dbp:released ""1937""^^xsd:gYear .
            ?film dbo:director ?director .
            ?director foaf:name ?producer .
        })
    }
    VALUES (?producer2) { 
        (SELECT ?producer WHERE {
            ?film dbpedia-owl:title ""The Adventures of Tom Sawyer""@en .
            ?film dbp:released ""1938""^^xsd:gYear .
            ?film dbo:director ?director .
            ?director foaf:name ?producer .
        })
    }
    VALUES (?person) { 
        (SELECT DISTINCT ?person WHERE {
            ?shadowCharacter rdfs:label ""The Shadow""@en .
            ?media dbpedia-owl:character ?shadowCharacter .
            ?media dbo:actor ?person .
        })
    }
    FILTER(?producer1 = ?commonIndividual && ?producer2 = ?commonIndividual)
    FILTER(?person = ?commonIndividual)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team ?actor ?film 
WHERE {
  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:playsFor ?team .

  # Find an actor who is also a soccer player and athlete
  ?actor a dbo:SoccerPlayer ;
         dbo:profession dbp:Actor ;
         dbo:athleteOfSport dbp:Soccer .
  
  # Find films directed by Manuel Huerga featuring this actor
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo WHERE {
  # Assuming ""The Golden Master"" refers to a specific work, we need the main character of that work.
  # Replace 'MainCharacterOfTheGoldenMaster' with the actual DBpedia resource for the main character.
  dbr:MainCharacterOfTheGoldenMaster dbo:wikiPageRedirects ?character .
  
  OPTIONAL {
    ?character dbo:alterEgo ?alterEgo .
  }
}
```

Note: The query assumes that there is a direct property `dbo:alterEgo` which might not exist. In practice, you may need to look for properties like `dbo:alias`, `dbo:alternateName`, or narrative descriptions in the data.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?psoeLeader ?feijooOffice ?primeMinister
WHERE {
  # Leader of the Spanish Socialist Workers' Party (PSOE)
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?psoeLeader .

  # Office held by Alberto Núñez Feijóo
  dbr:Alberto_Núñez_Feijóo dbo:officeHolder ?feijooOffice .
  
  # Current Prime Minister of Spain
  dbr:Spain dbo:headOfGovernment ?primeMinister .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?leaderName WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:politicalParty ?party .
  
  # Determine the leader of this party during the 2003 Madrid City Council election
  ?party dbo:leader ?leader .
  ?leader dbo:birthYear ?birthYear .
  FILTER (?birthYear <= 2003 && ?birthYear >= 1900) # Assuming leaders are adults
  
  # Find out what office this leader held in 2003
  ?officeHolder dbo:positionHeld ?office ;
                dbo:memberOf ?party ;
                dbo:termStart ?start .
  FILTER (?start <= ""2003-12-31""^^xsd:date && ?start >= ""2003-01-01""^^xsd:date)
  
  # Ensure the office holder is the same as the party leader
  ?officeHolder dbr:Miguel_Maura dbo:leader ?leader .
  
  # Get the name of the leader
  ?leader rdfs:label ?leaderName .
  
  FILTER (LANG(?leaderName) = ""en"")
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to lack of specific information in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?mayorName WHERE {
  dbr:Madrid dbo:mayor ?mayor .
  OPTIONAL { ?mayor foaf:name ?mayorName . }
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  ?owner dbo:owns ?ship .

  # Step 2: Find the spouse of an author who is a politician and office holder
  ?author dbo:spouse ?spouse ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true ;
          dbo:writtenWork ?work .
  
  ?work dbo:author ?author ;
        rdfs:label ""Book by Hillary Clinton""@en .

  # Step 3: Determine the war characterized by disease and societal event
  ?war a dbo:MilitaryConflict ;
       dbo:hasParticipant ?commander ;
       dbo:relatedEvent dbr:Spanish_Flu_Pandemic ;
       rdfs:label ?warLabel .
  
  FILTER regex(?warLabel, ""World War I"", ""i"")
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person rdfs:label ""Ethan Iverson""@en .
  FILTER (CONTAINS(LCASE(str(?person)), ""ethan iverson""))
  
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ?occupationLabel .

  OPTIONAL { 
    ?person dbo:musicalArtist ?musicalArtist .
    ?musicalArtist rdfs:label ?musicalArtistLabel .
  }

  FILTER (CONTAINS(LCASE(?occupationLabel), ""musician"") || CONTAINS(LCASE(?musicalArtistLabel), ""musician""))

  ?person dbo:work ?work .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?reference WHERE {
  # Find bands associated with Eric Clapton
  ?clapton dbo:memberOf ?band .
  FILTER (str(?clapton) = ""Eric_Clapperton"")

  OPTIONAL {
    # Look for references or collaborations involving The Fabulous Thunderbirds and Eric Clapton
    ?album dbo:artist dbr:The_Fabulous_Thunderbirds ;
           dbo:guestArtist dbr:Eric_Clapperton .
    BIND(""Tightrope"" AS ?reference)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName ?birthName WHERE {
  # Step 1: Identify the musical artist associated with ""The Live Anthology""
  ?album dcterms:title ""The Live Anthology""@en .
  ?album dbo:performer ?musicalArtist .
  
  # Step 2: Determine if this musical artist has a profession related to writing
  ?musicalArtist dbo:profession ?writerProfession .
  FILTER(CONTAINS(LCASE(?writerProfession), ""writer"") || CONTAINS(LCASE(?writerProfession), ""author""))

  # Get the birth name of this writer/musical artist
  ?musicalArtist foaf:name ?artistName .
  ?musicalArtist dbo:birthName ?birthName .

  # Step 3: Find an artist from Central Region, Ghana
  ?ghanaianArtist a dbo:Artist ;
                  dbo:nationality dbr:Ghana ;
                  dbo:region dbr:Central_Region_(Ghana) .
  
  # Get the birth name of this artist
  ?ghanaianArtist foaf:name ?artistName2 .
  ?ghanaianArtist dbo:birthName ?birthName2 .

  # Step 4: Match the birth names
  FILTER(?birthName = ?birthName2)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          dbo:nationality dbr:United_States ;
          dbo:author dbr:Promise_Me,_Dad .

  ?work dbo:author ?person ;
        a dbo:Book, dbo:WrittenWork .

}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party ?member WHERE {
  # Identify George Pickett as the commander of Pickett's Charge
  dbr:Picketts_Charge dbo:commander ?commander .
  FILTER (str(?commander) = ""George_Pickett"")

  # Find political parties that are organizations and have relevance to Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .

  # Check if the party is also an organization
  ?party dbo:type dbr:Organization .

  # Identify members or connections of this party in Westport
  OPTIONAL {
    ?member dbo:memberOf ?party .
    ?member dbo:residence dbr:Westport,_Connecticut .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?calder a dbo:NavyOfficer ;
          foaf:name ""Robert Calder""@en .
  
  ?calder dbo:participatedIn ?event .

  ?event a dbo:MilitaryEngagement ;
         dbo:date ?date ;
         rdfs:label ?eventName .

  FILTER (CONTAINS(LCASE(?eventName), ""battle"") || CONTAINS(LCASE(?eventName), ""finisterre""))
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?residence WHERE {
  ?person dbo:nationality dbr:Poland .
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:occupation dbr:Athlete .
  ?person dbo:residence ?residence .
  FILTER EXISTS { ?residence rdf:type dbo:Country }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?group1 ?artist2 ?group2 WHERE {
  # Tupac Shakur (Pacely)
  VALUES (?tupac) { dbr:Tupac_Shakur }
  
  OPTIONAL {
    ?tupac dbo:associatedBandOrMusicalArtist ?group1 .
  }
  OPTIONAL {
    ?tupac dbo:alias ?artist1 .
  }

  # Joe Budden (Joey B.)
  VALUES (?joe) { dbr:Joe_Budden }
  
  OPTIONAL {
    ?joe dbo:associatedBandOrMusicalArtist ?group2 .
  }
  OPTIONAL {
    ?joe dbo:alias ?artist2 .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?profession WHERE {
  # Find Shirley Stoler's profession
  dbr:Shirley_Stoler dbo:occupation ?profession .

  # Find her children
  OPTIONAL { 
    ?parent dbp:children ?child .
    FILTER(?parent = dbr:Shirley_Stoler)
  }

  # Filter for the child who shares the same profession and is from New York
  ?child dbo:birthPlace dbr:New_York_(state) .
  ?child dbo:occupation ?sameProfession .

  # Ensure the professions match
  FILTER(?profession = ?sameProfession)
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Antoinette of Brunswick-Wolfenbüttel""@en .
  
  ?princess dbo:child ?child .

  OPTIONAL { 
    ?child dbo:royaltyStatus ?status .
    FILTER (CONTAINS(LCASE(?status), ""royal"") || CONTAINS(LCASE(?status), ""prince"") || CONTAINS(LCASE(?status), ""princess""))
  }
}
```",1,2,2,1,1,3,2,20,6,4,0,0.6,1.0,0.7499999999999999
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?movie WHERE {
  # Step 1: Identify Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Step 2: Find the parent of that child
  ?child dbo:parent ?parentOfChild .

  # Step 3: Identify a movie with Herschel Bernardi as an actor
  ?movie dbo:actor dbr:Herschel_Bernardi ;
         rdf:type dbo:Film .
  
  # Ensure the parent from step 2 is also an actor in this movie
  ?parentOfChild dbo:actor ?movie .

  # Step 4: Identify a professional photographer and their parent
  ?photographer dbo:profession dbr:Photography ;
               dbo:parent ?parentOfChild .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?description WHERE {
  ?war dbo:wikiPageRedirects dbr:Great_Turkish_War .
  ?war dbo:commander ?commander .
  OPTIONAL { ?commander dbo:description ?description . }
  
  FILTER(CONTAINS(LCASE(?description), ""george duca"") || CONTAINS(LCASE(?description), ""prince eugene of savoy""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor (GROUP_CONCAT(?film; separator="", "") AS ?filmsWithRichardEGrant)
WHERE {
  # Find actors
  ?actor a dbo:Actor ;
         foaf:name ?name .

  # Find the actor who played Lamont Cranston, The Shadow's alter ego
  OPTIONAL { 
    ?character dbr:Lamont_Cranston ;
               dbo:portrayedBy ?shadowActor .
    FILTER(?shadowActor = ?actor)
  }

  # Find films or TV shows featuring Richard E. Grant and the actor
  ?film dbo:starring ?castMember .
  {
    VALUES ?castMember { dbr:Richard_E._Grant }
  } UNION {
    ?film dbo:starring ?castMember ;
          dbo:starring ?actor .
  }

  # Ensure the film is a movie or TV show
  FILTER EXISTS { ?film a dbo:Film || ?film a dbo:TelevisionSeries }
}
GROUP BY ?actor
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?stuartTosh { dbr:Stuart_Tosh }
  ?stuartTosh dbo:associatedBand ?band .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Winston Chang's birthplace
SELECT ?birthPlace WHERE {
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}

UNION

# Query for the country of work of Hu Jieqing's spouse who is a writer
SELECT ?countryOfWork WHERE {
  # Find Hu Jieqing and her spouse
  dbr:Hu_Jieqing dbo:spouse ?spouse .

  # Check if the spouse is a writer
  ?spouse rdf:type dbo:Writer .
  
  # Get the country associated with the spouse's work
  ?spouse dbo:countryOfWork ?countryOfWork .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?workTitle ?authorName WHERE {
  # Find the resource for George Ducas
  ?georgeDucas a dbo:Writer ;
               foaf:name ""George Ducas""@en .
  
  # Find works associated with George Ducas
  ?georgeDucas dbo:work ?work .

  # Get the title of each work
  ?work rdfs:label ?workTitle ;
        rdf:type dbo:CreativeWork .

  # Find authors of these works
  ?work dbo:author ?author .
  
  # Get the name of each author
  ?author foaf:name ?authorName .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardeeParent WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient ?rodneyLees .
  ?rodneyLees foaf:name ""Rodney Lees"" .

  # Step 2: Find other recipients of that award
  ?award dbo:recipient ?otherAwardee .

  # Step 3: Identify Arthur Stanley and his father
  ?arthurStanley foaf:name ""Arthur Stanley (politician)"" .
  ?arthurStanley foaf:parent ?fatherOfArthurStanley .

  # Step 4: Check if the other awardee is the father of Arthur Stanley
  FILTER (?otherAwardee = ?fatherOfArthurStanley)

  # Find the parent of the other awardee
  ?otherAwardee foaf:parent ?awardeeParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor1 ?deathPlace1 ?actor2 ?deathPlace2 WHERE {
  # Query for ""The Sky Ranger"" (1928)
  ?film1 dbo:starring ?actor1 .
  ?film1 dbr:The_Sky_Ranger_(1928_film) .
  
  OPTIONAL { ?actor1 dbp:deathPlace ?deathPlace1 . }
  
  # Query for ""Aladdin"" (1958)
  ?film2 dbo:starring ?actor2 .
  ?film2 dbr:Aladdin_(1958_film) .

  OPTIONAL { ?actor2 dbp:deathPlace ?deathPlace2 . }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyName WHERE {
  ?s dbp:name ""George Savage""@en .
  ?s dbo:member ?party .
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession 
WHERE {
  dbr:Eugène_Cattin dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,2,940,0.0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # The Fabulous Thunderbirds band members
  VALUES (?fabulousThunderbirds) { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> }
  
  ?member dbo:bandMember ?fabulousThunderbirds .
  
  # Eric Clapton's associated bands and their members
  ?claptonBand dbo:associatedBand <http://dbpedia.org/resource/Eric_Clapton> .
  ?member dbo:bandMember ?claptonBand .

  # Nick Curran's birth name and associated artists
  ?nickCurran foaf:name ""Nick Curran"" .
  ?nickCurran dbp:birthName ?birthName .
  
  ?artist dbo:associatedMusicalArtist ?nickCurran .
  ?artist foaf:name ?associatedArtist .

  # Ensure the band member is also an associated artist
  FILTER (?member = ?artist)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName WHERE {
  VALUES ?personNames { 
    ""Bruno Daniel Marie Paul Retailleau"" 
    ""Guillaume Peltier""
  }
  
  ?person dbo:birthName ?personNames .
  OPTIONAL { ?person dbp:party ?party . }
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorName
WHERE {
  # Find Paulus Powell's birth place
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .
  
  # Ensure the birth place is a region and an administrative region
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Find the governor of this birth place who is a politician
  ?birthPlace dbp:governor ?governor .
  ?governor rdf:type dbo:Politician .
  
  # Get the name of the governor
  ?governor rdfs:label ?governorName .
  
  FILTER (lang(?governorName) = 'en')
}
```",2,5,3,2,1,3,3,71,0,1,1,0.0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              rdfs:label ""Min Hla Htut""@en .

  # Step 2: Determine the parent of Min Hla Htut
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Find the child of that parent (which should be Min Hla Htut)
  ?parentChild dbo:child ?minHlaHtut .
  
  # Step 4: Identify Saw Shwe Khet and find their spouse
  ?sawShweKhet a dbo:Person ;
               rdfs:label ""Saw Shwe Khet""@en .

  ?sawShweKhet dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ericBand ?kimBand WHERE {
  ?clapton a dbo:MusicArtist ;
           foaf:name ""Eric Clapton""@en .
  ?clapton dbo:bandMemberOf ?ericBand .

  ?wilson a dbo:MusicArtist ;
          foaf:name ""Kim Wilson""@en .
  ?wilson dbo:bandMemberOf ?kimBand .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?childOfAlbrecht ?predecessor ?royaltyChild
WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrecht dbo:child ?childOfAlbrecht .
  VALUES ?albrecht { <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> } .

  # Predecessor of Albrecht's child
  ?predecessor dbo:predecessor ?childOfAlbrecht .

  # Archduchess Helena of Austria and her spouse's child
  ?helena dbo:spouse ?spouse .
  VALUES ?helena { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> } .
  ?spouse dbo:child ?childOfSpouse .

  # Archduchess Margarete Sophie of Austria's child
  ?margarete dbo:child ?royaltyChild .
  VALUES ?margarete { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> } .

  # Ensure the person is royalty
  FILTER (?predecessor = ?royaltyChild)
  FILTER (rdf:type(?royaltyChild, dbo:Royal))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  VALUES (?person ?personLabel) {
    (dbo:Vince_Gilligan ""Vince Gilligan"")
    (dbo:Cecily_Bell ""Cece Bell"")
    (dbo:Glenn_Youngkin ""Glenn Youngkin"")
  }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war ?event ?tvShow WHERE {
  ?commander dbo:rank ""Commander""@en .
  ?commander dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .
  ?commander dbo:spouse dbr:Eleonore_of_Austria .
  
  ?commander dbo:participatedIn ?war .
  FILTER (strstarts(str(?war), ""Napoleonic_War"") || strstarts(str(?war), ""World_War_I"")) .

  ?commander dbo:wikiPageDisambiguates ?event .
  ?commander dbo:wikiPageRedirects ?tvShow .
  
  ?commander rdfs:label ?name .
  FILTER (langMatches(lang(?name), ""en""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carolyn Jones""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?regimentEvent ?tvShow
WHERE {
    # Find children of Ferdinand III, Holy Roman Emperor
    ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
    
    # Determine the father (should be Ferdinand III)
    ?child dbo:father ?father .
    
    # Look for any societal events or television shows related to the 2nd Dragoon Regiment (France)
    OPTIONAL {
        ?regimentEvent dbo:related dbr:2nd_Dragoon_Regiment_(France) .
        ?tvShow dbo:genre dbr:Television_show .
        
        # Attempt to find a connection between the child and these events/shows
        ?child dbo:associatedWith ?regimentEvent .
        ?child dbo:associatedWith ?tvShow .
    }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfEugeneProfession ?parentOfMariclareChild
WHERE {
  # Part 1: Eugène Cattin's Profession and its Parent
  ?eugene dbo:profession ?profession .
  FILTER(STR(?eugene) = ""Eugène_Cattin"")
  
  ?profession rdfs:subClassOf+ ?parentOfEugeneProfession .

  # Part 2: Mariclare Costello's Spouse, their Child, and the Parent of that Child
  ?mariclare foaf:spouse ?spouse .
  FILTER(STR(?mariclare) = ""Mariclare_Costello"")
  
  ?spouse dbp:child ?child .

  ?child dbo:parent ?parentOfMariclareChild .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:placeOfBurial ?burialPlace .
  ?burialPlace rdfs:label ""Taipei""@en .
  ?person rdfs:label ?name .
}
```",1,1,2,1,1,3,2,20,0,0,220,0,0.0,0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?smartbombAuthor dbo:author dbr:Smartbomb .
  
  # Find the professional associated with The Shadow
  ?shadowProfessional dbo:alterEgo dbr:The_Shadow .

  # Find the actor from the film ""ATL""
  ?atlActor dbo:actor dbr:ATL_(film) .

  # Find a movie that features all three individuals and extract actors involved in those films
  ?movie dbo:starring ?smartbombAuthor .
  ?movie dbo:starring ?shadowProfessional .
  ?movie dbo:starring ?atlActor .
  
  ?movie dbo:starring ?actor .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Identify Clint Eastwood
  dbr:Clint_Eastwood dbo:spouse ?spouse .
  
  # Ensure the spouse is Maggie Johnson, born as Harriette Arlene Lake
  ?spouse rdfs:label ""Maggie Johnson""@en ;
          dbp:birthday ""1922-10-17""^^xsd:date ;
          foaf:name ?spouseName .

  OPTIONAL {
    ?spouse dbo:party dbr:Republican_Party_(United_States) .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medal rdf:type dbo:Award .
  ?medal rdfs:label ""Gillmore Medal""@en .
  ?medal dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Lamont Cranston as The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Find any film or work related to the album ""Lasso the Moon"" and its actor
  OPTIONAL {
    ?album a dbo:Album ;
          rdfs:label ""Lasso the Moon""@en .
    ?filmOrWork dbo:workRecordedIn ?album ;
                dbo:actor ?actor .
  }
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalty WHERE {
  # Step 1: Find Charles II of Naples' spouse
  ?charlesII a dbo:Monarch ;
             rdfs:label ""Charles II of Naples""@en .
  ?spouse dbo:spouseOf ?charlesII .

  # Step 2: Find the father and then the paternal grandfather of Charles II's spouse
  ?father dbo:child ?spouse .
  ?grandfather dbo:child ?father .

  # Step 3: Find Maria of Bytom's spouse
  ?maria a dbo:Person ;
         rdfs:label ""Maria of Bytom""@en .
  ?mariaSpouse dbo:spouseOf ?maria .

  # Step 4: Find the father and then the paternal grandfather of Maria of Bytom's spouse
  ?mariaFather dbo:child ?mariaSpouse .
  ?mariaGrandfather dbo:child ?mariaFather .

  # Step 5: Check if either grandparent is royalty
  {
    VALUES ?grandparent { ?grandfather }
    ?grandparent a dbo:Monarch .
  } UNION {
    VALUES ?grandparent { ?mariaGrandfather }
    ?grandparent a dbo:Monarch .
  }

  BIND(?grandparent AS ?royalty)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?party
WHERE {
  ?location rdfs:label ""Westport, Connecticut""@en .
  OPTIONAL { 
    ?location dbo:mayor ?mayor .
    ?mayor dbo:politicalParty ?party .
  }
  OPTIONAL {
    ?location dbo:councilMember ?councilMember .
    ?councilMember dbo:politicalParty ?party .
  }
  FILTER (?party != rdf:nil)
  FILTER (isLiteral(?party) && lang(?party) = ""en"")
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kimBand ?nickBand WHERE {
  ?kimWilson a dbo:Musician ;
             foaf:name ""Kim Wilson"" .
  ?kimWilson dbo:band ?kimBand .

  ?nickCurran a dbo:Musician ;
              foaf:name ""Nick Curran"" .
  ?nickCurran dbo:associatedBand ?nickBand .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?playerName ?teamName
WHERE {
  VALUES (?player ?playerLabel) { 
    (<http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> ""Juan Carlos Molina"") 
    (<http://dbpedia.org/resource/Sergio_Agüero> ""Sergio Agüero"")
  }
  
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = 'en')
  
  ?player dbo:team ?team .
  ?team rdfs:label ?teamName .
  FILTER (lang(?teamName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession ?artist 
WHERE {
  # Identify Dave Gahan by his birth name
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Confirm Rod Argent's profession as a musician
  dbr:Rod_Argent dbo:occupation dbr:Musician .

  # Associate Paco de Lucía with the alias $pacely
  ?artist rdfs:label ""$pacely""@en ;
          dbo:birthName ""Paco de Lucía""@en .
  
  FILTER(?person = dbr:Dave_Gahan)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace ?politicalParty WHERE {
  ?person rdf:type dbo:Politician ;
          foaf:name ""Roy Leonardo Barreras Montealegre"" .
  
  ?person dbo:birthPlace ?birthPlace ;
          dbo:politicalParty ?politicalParty .

  ?birthPlace dbo:country <http://dbpedia.org/resource/Colombia> .
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Charles Louis of Austria
  dbr:Charles_Louis,_Archduke_of_Austria dbo:spouse ?parent1 .
  
  # His child
  ?parent1 dbo:child ?child .

  # The child's child (grandchild)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch ;
              dbo:predecessor dbr:C._of_Württemberg .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war ?force WHERE {
  # Charleston, South Carolina entity
  VALUES ?charleston { dbr:Charleston,_South_Carolina }

  # Amasa Tracy and his involvement in a war
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:participatedIn ?war .

  # Quincy Adams Gillmore, his award, and associated force
  ?gillmore rdfs:label ""Quincy_Adam_Gillmore""@en .
  ?award dbo:recipient ?gillmore ;
         dbo:awardedBy dbr:United_States_Military .
  ?force dbo:commandedBy ?gillmore .

  # Filter to ensure the war is related to Charleston
  ?war dbo:location ?charleston .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Allan Arbus's children
  dbr:Allan_Arbus dbo:child ?child .

  # Identify a person who died in Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles_County,_California ;
            dbo:parent ?child .

  # Find movies involving both the actor and the decedent
  ?movie dbo:actor ?actor .
  ?movie dbo:work ?decedent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Always""@en .
  ?movie dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show ?theme WHERE {
  ?actor rdfs:label ""Anumta Qureshi""@en .
  ?actor dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""lahore"")) .

  ?actor dbo:actor ?show .
  
  OPTIONAL { 
    ?show rdfs:comment ?theme .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?event ?description WHERE {
  ?event a dbo:Event .
  OPTIONAL { ?event dbo:dateStart ?date . }
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 12 && DAY(?date) = 02)
  OPTIONAL { ?event dbo:abstract ?description . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?war WHERE {
  VALUES ?person { 
    dbr:Karl_Gustav_von_Baggovut 
    dbr:Aleksandr_Lvovich_Davydov 
  }
  
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # The Shadow's alter ego and related movie
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Movie ""The Shadow"" produced by Joel Silver
  dbr:The_Shadow_1994_Film dbo:producer dbr:Joel_Silver .

  # James Caan's film ""High Society Blues""
  dbr:High_Society_Blues dbo:actor dbr:James_Caan .
  
  # Joel Silver as a producer
  ?producer rdfs:label ""Joel Silver""@en .
  FILTER EXISTS { ?producer dbo:profession dbr:Film_producer . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the resource for Mark Eitzel
  dbr:Mark_Eitzel dbo:member ?band .
  
  # Retrieve members of that band
  ?bandMember dbo:member ?band .
  
  FILTER(?bandMember != dbr:Mark_Eitzel) # Exclude Mark Eitzel himself from results
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find children of William I who are royalty
  ?child1 dbo:parent dbr:William_I_of_Sicily ;
          a dbo:RoyalFamilyMember .

  # Find children of Roger II of Sicily who are royalty
  ?child2 dbo:parent dbr:Roger_II_of_Sicily ;
          a dbo:RoyalFamilyMember .

  # Identify the reference person who is both royalty and an office holder
  ?reference dbo:royalty true ;
             dbo:officeHolder true ;
             dbo:child ?child1, ?child2 .

  # Find the father of this child
  ?reference dbo:parent ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?profession WHERE {
  # Find the album ""Lasso the Moon""
  ?album rdfs:label ""Lasso the Moon""@en .
  
  # Check if this album is linked to a film
  ?film dbo:soundtrack ?album .

  # Get actors associated with the film
  ?film dbo:starring ?actor .

  # Retrieve the professional field of the actor
  ?actor dbo:occupation ?profession .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist
WHERE {
  ?location rdf:type dbo:Settlement ;
            dbo:country dbr:England .
  
  ?artist rdf:type dbo:Artist ;
          dbo:occupation dbr:MusicalArtist ;
          dbo:nativePlace ?location .
}
```",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Bill Clinton is a politician and office holder (President)
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolderOf dbr:United_States_Presidency .

  # Bill Clinton authored ""Back to Work""
  ?spouse dbo:author dbr:Back_to_Work_(book) .
  
  # Contextual check for Third Taiwan Strait Crisis during his presidency
  ?presidency dbo:startDate ?start ;
              dbo:endDate ?end .
  FILTER (?start <= ""2000-03-23""^^xsd:date && ?end >= ""1996-07-21""^^xsd:date)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?profession WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:partOfSeries ?series .
  ?character dbo:alias ?alterEgo .
  ?alterEgo dbo:occupation ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley"" .

  # Children of Frederick Stanley who are politicians
  ?child dbo:parent ?frederick ;
         dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(?occupation), 'politician'))

  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" .

  # Parent of Victor Stanley
  ?parent dbo:child ?victor .

  # The child who is both a politician and parent of Victor Stanley
  FILTER(?child = ?parent)

  # Father of the identified child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:successor dbr:Yurii_Khmelnytsky .
  ?person dbo:commanderOf dbr:Great_Turkish_War .
  ?work dbo:author ?person ;
        dbo:wikiPageRedirects dbr:George_Ducas .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMargareteSophie ?predecessorChildOfPhilippAlbrecht WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  ?person dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find children of Philipp Albrecht, Duke of Württemberg and their predecessor
  ?childOfPhilippAlbrecht dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  OPTIONAL {
    ?predecessorChildOfPhilippAlbrecht dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
    FILTER(?childOfPhilippAlbrecht != ?predecessorChildOfPhilippAlbrecht)
    # Assuming predecessor means earlier in birth order or some form of succession
  }
  
  # Find the common individual who is both a child of Margarete Sophie and a predecessor to one of Philipp Albrecht's children
  FILTER(?person = ?childOfMargareteSophie && ?predecessorChildOfPhilippAlbrecht = ?childOfMargareteSophie)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderResidence ?commanderResidence WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2003)
  ?election dbo:officeHolder dbr:José_María_Alvarez_Caldentey .
  
  # Get the residence of this leader
  OPTIONAL {
    ?leaderResidence dbp:residence dbr:José_María_Alvarez_Caldentey .
  }
  
  # Find a military conflict involving Manuel Pinto da Costa
  ?conflict dbo:participant dbr:Manuel_Pinto_da_Costa .
  
  # Get the commander of this force
  OPTIONAL {
    ?commander dbp:commanderOf ?conflict .
    ?commanderResidence dbp:residence ?commander .
  }
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyLabel ?leaderName ?officeLabel WHERE {
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura"" ;
               dbo:member ?politicalParty .
  
  ?politicalParty rdfs:label ?partyLabel ;
                  dbp:leader ?leader .

  ?leader foaf:name ?leaderName ;
          dbp:office ?office .

  ?office rdfs:label ?officeLabel .

  FILTER (lang(?partyLabel) = 'en' && lang(?leaderName) = 'en' && lang(?officeLabel) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify the father of Philip I, Prince of Taranto
  ?philip1 dbo:father ?father .
  FILTER(STRSTARTS(STR(?philip1), ""http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto""))

  # Find the spouse (mother) of this father
  ?father dbo:spouse ?spouse .

  # Identify Charles I of Hungary and his parent
  ?charlesI dbo:parent ?parent .
  FILTER(STRSTARTS(STR(?charlesI), ""http://dbpedia.org/resource/Charles_I_of_Hungary""))

  # Check if the spouse is also a parent of Charles I of Hungary
  ?spouse dbo:child ?charlesI .

  # Ensure the spouse is royalty
  ?spouse rdf:type dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edward_stanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Find his parent
  ?edward_stanley dbo:parent ?parent .
  
  # Verify he is the father of Arthur Stanley (politician)
  ?edward_stanley dbo:child dbr:Arthur_St._Leveson_Gower .

  # Check if any of his children received an award named Rodney Lees
  OPTIONAL {
    ?child dbo:awardReceived ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""rodney lees""))
    ?edward_stanley dbo:child ?child .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?parentLabel WHERE {
  ?person rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?person dbo:parent ?parent .
  OPTIONAL { ?parent rdfs:label ?parentLabel . FILTER (lang(?parentLabel) = 'en') }
}
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Béla IV of Hungary's children
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Step 2: Find the grandchildren (children of Béla IV's children) who are royalty
  ?grandchild dbo:parent ?belavChild .
  FILTER EXISTS { ?grandchild rdfs:label ?label . FILTER regex(?label, ""King|Queen"", ""i"") }

  # Step 3: Identify Charles I of Hungary and his father
  ?charlesFather dbo:parent dbr:Charles_I_of_Hungary .

  # Step 4: Find the parent (grandparent) of Charles I's father who is royalty
  ?belavGrandchildParent dbo:parent ?charlesFather .
  FILTER EXISTS { ?belavGrandchildParent rdfs:label ?label . FILTER regex(?label, ""King|Queen"", ""i"") }

  # Step 5: Match the grandchild from step 2 with the grandparent from step 4
  VALUES ?grandchild { ?grandchild }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?actor ?spouse WHERE {
  # Part 1: Find the ruling party member in Central, Louisiana
  OPTIONAL {
    ?location a dbo:Place ;
              rdfs:label ""Central, Louisiana""@en .
    ?partyMember dbo:memberOf ?party ;
                 dbp:residence ?location .
    ?party rdf:type dbo:PoliticalParty .
  }

  # Part 2: Find the actor of ""1,000 Dollars a Minute"" and their spouse
  ?film dbo:title ""1,000 Dollars a Minute""@en ;
        dbo:starring ?actor .
  OPTIONAL {
    ?actor dbp:spouse ?spouse .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find bands associated with Eric Clapton
  VALUES (?clapton) { dbr:Eric_Clapperton }
  
  ?clapton dbo:bandMember ?band .
  
  # Find the musical artist associated with Nicholas Michael Curran (Nicky James)
  VALUES (?curran) { dbr:Nicky_James_(musician) }
  
  ?curran dbo:associatedMusicalArtist ?artist .
  
  # Check if there is any common band or association
  OPTIONAL {
    ?band dbo:associatedMusicalArtist ?artist .
  }

  FILTER(?artist != dbr:Unknown)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor ?writer 
WHERE {
  # Part 1: Successor of the commander in Russo-Polish War
  ?commander dbo:occupation dbr:Military_commander ;
             dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  ?successor dbo:succeededBy ?commander ;
             dbo:occupation dbr:Politician ;
             dbo:officeHolder true .

  # Part 2: Reference to the writer of the work of George Ducas
  dbr:George_Ducas dbo:authorOf ?work .
  ?reference dbo:mentions ?work ;
             dbo:writer ?writer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?album ?professional ?movie WHERE {
  # Find the album ""Urban Legend"" by T.I.
  dbr:T.I._discography dbo:album dbr:Urban_Legend_(T.I.album) .
  
  # Find professionals associated with this album
  dbr:Urban_Legend_(T.I.album) dbo:producer ?professional .

  # Check if these professionals have acted in any movies
  OPTIONAL {
    ?professional dbo:film ?movie .
  }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  ?spouse a dbo:Person ;
          foaf:name ?spouseName ;
          dbo:occupation ?occupation .

  FILTER(CONTAINS(LCASE(?occupation), ""writer""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the movie resource for ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  
  # Check if the actor is also a politician
  OPTIONAL { ?actor dbo:occupation dbr:Politician . }
  
  FILTER EXISTS { ?actor dbo:occupation dbr:Politician . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # For Tupac Shakur (Pac)
  OPTIONAL { 
    dbr:Tupac_Shakur dbo:musicalArtist ?artist .
  }
  
  # For Stormzy
  OPTIONAL { 
    dbr:Stormzy dbo:musicalArtist ?artist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Duke Philipp of Württemberg's child
  ?philippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg ;
               a dbo:Person .

  # The grandchild (child of the above child)
  ?grandchild dbo:parent ?philippChild ;
              a dbo:Person .

  # Ensure this grandchild is also a predecessor to Carl, Duke of Württemberg
  ?grandchild dbo:predecessor dbr:C._Duke_of_W%C3%BCrttemberg .

  # The grandchild must be the child of Archduchess Margarete Sophie of Austria
  ?grandchild dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person rdfs:label ""Thomas Letsch""@en .
  ?person dbo:managerOf ?team .
  ?team a dbo:SoccerClub .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Ice Cube's associated artists
  OPTIONAL {
    VALUES ?iceCube { dbr:Ice_Cube }
    ?iceCube dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Rocky Dawuni's associated artists
  OPTIONAL {
    VALUES ?rockyDawuni { dbr:Rocky_Dawuni }
    ?rockyDawuni dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Toyotomi Hideyoshi""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist WHERE {
  ?person foaf:name ""Elorm Kabu Amenyah"" .
  ?person dbo:musicalArtist ?musicalArtist .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Step 1: Find a child of Archduke Charles Louis of Austria
  ?child dbo:parent dbr:Archduke_Charles_Louis_of_Austria .

  # Step 2: From this child, find their royal grandchild
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:royaltyTitle ?title .

  # Step 3: Find a child of Philipp Albrecht, Duke of Württemberg
  ?philippChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Step 4: Find the predecessor of this child (older sibling)
  ?predecessor dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  FILTER(?predecessor != ?philippChild) .
  OPTIONAL { 
    ?predecessor dbp:birthday ?predBirthday .
    ?philippChild dbp:birthday ?childBirthday .
    FILTER(?predBirthday < ?childBirthday)
  }

  # Step 5: Match the grandchild with the predecessor
  FILTER(?grandchild = ?predecessor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify the stage name of Robert Lamar Thompson
  VALUES (?person) { 
    dbr:Robert_Lamar_Thompson 
  }
  
  # Find the stage name (alias)
  ?person dbo:alsoKnownAs ?stageName .
  
  # Check if this person is a member of any band
  ?band dbo:member ?stageName .

  OPTIONAL {
    # Confirm ""The Shadow"" as a fictional character created by Walter B. Gibson
    dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
    
    # Check if the band has any connection to ""The Shadow""
    ?band dbo:relatedBand dbr:The_Shadow .
  }
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?greatGrandchild
WHERE {
  # Roger II of Sicily and his children
  dbr:Roger_II_of_Sicily dbo:spouse ?constance.
  
  ?rogerChild dbo:parent dbr:Roger_II_of_Sicily .
  ?rogerChild dbo:royalty ""true""^^xsd:boolean .

  # Grandchildren of Roger II (child of his child)
  ?grandchild dbo:parent ?rogerChild .
  ?grandchild dbo:royalty ""true""^^xsd:boolean .

  # Constance of Burgundy and her spouse's children
  ?constanceSpouse dbo:spouse dbr:Constance_of_Burgundy .
  
  ?constanceSpouseChild dbo:parent ?constanceSpouse .
  ?constanceSpouseChild dbo:royalty ""true""^^xsd:boolean .

  # Great-grandchildren of Constance's spouse (child of his child)
  ?greatGrandchild dbo:parent ?constanceSpouseChild .
  ?greatGrandchild dbo:royalty ""true""^^xsd:boolean .

  # Match the grandchildren and great-grandchildren
  FILTER(?grandchild = ?greatGrandchild)
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Bill Clinton as commander during the Third Taiwan Strait Crisis
  dbr:Bill_Clinton dbo:positionHeld dbr:President_of_the_United_States ;
                   dbo:officeHolderOf dbr:Third_Taiwan_Strait_Crisis .

  # Hillary Rodham Clinton as author of ""An Invitation to the White House""
  dbr:Hillary_Rodham_Clinton dbo:author dbr:An_Invitation_to_the_White_House:_At_Home_with_History ;
                             dbo:spouse dbr:Bill_Clinton .

  # Hillary Rodham Clinton as a politician and office holder
  ?officeHolder dbo:spouse dbr:Hillary_Rodham_Clinton .
  FILTER EXISTS { ?officeHolder a dbo:OfficeHolder . }
  
  BIND(dbr:Bill_Clinton AS ?commander)
  BIND(dbr:Hillary_Rodham_Clinton AS ?author)
  BIND(?officeHolder AS ?spouse)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?royaltyChild
WHERE {
  # Step 1: Identify William II of Sicily's father
  ?williamII dbo:father ?father .
  FILTER(STR(?williamII) = ""William_II_of_Sicily"")

  # Step 2: Find the child (grandchild of William II) who is royalty
  ?father dbo:child ?royaltyChild .
  ?royaltyChild rdf:type ?type .
  FILTER(CONTAINS(LCASE(str(?type)), ""king"") || CONTAINS(LCASE(str(?type)), ""queen""))

  # Step 3: Identify Roger II of Sicily's child who matches the royalty condition
  ?rogerII dbo:child ?potentialMatch .
  FILTER(STR(?rogerII) = ""Roger_II_of_Sicily"")

  # Step 4: Find Alfonso VI's grandchildren
  ?alfonsoVI dbo:child ?alfonsoChild .
  FILTER(STR(?alfonsoVI) = ""Alfonso_VI_of_León_and_Castile"")
  ?alfonsoChild dbo:child ?alfonsoGrandchild .

  # Step 5: Combine relationships to find the matching individual
  OPTIONAL { ?potentialMatch rdf:type/rdfs:subClassOf* ?type . }
  FILTER(?royaltyChild = ?potentialMatch && EXISTS {
    ?alfonsoGrandchild rdfs:label ?label .
    FILTER(CONTAINS(LCASE(str(?label)), ""king"") || CONTAINS(LCASE(str(?label)), ""queen""))
  })
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?movie dbo:title ""High Society Blues""@en .
  ?movie dbo:starring dbr:Chris_Isaak .
  
  OPTIONAL { 
    ?musicWork dbo:artist dbr:Chris_Isaak ;
               a dbo:Album .
    BIND(?musicWork AS ?work)
  }
  
  OPTIONAL {
    ?filmWork dbo:starring dbr:Chris_Isaak ;
              a dbo:Film .
    FILTER NOT EXISTS { ?filmWork dbo:title ""High Society Blues""@en . }
    BIND(?filmWork AS ?work)
  }

  VALUES ?work { ?musicWork ?filmWork }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatingOrganisation dbr:United_States_Navy .
  
  OPTIONAL { 
    ?event dbo:description ?description .
  }
  
  FILTER(CONTAINS(LCASE(?description), ""disease"") || CONTAINS(LCASE(?description), ""societal event""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouseOfFather
WHERE {
  # Step 1: Find Saw Shwe Khet's child who is royalty
  ?sawShweKhet dbo:child ?royalChild .
  FILTER(CONTAINS(LCASE(STR(?royalChild)), ""royalty"")) .

  # Step 2: Determine the predecessor of that royal child
  ?predecessor rdfs:subClassOf* dbo:Predecessor ;
               dbo:successor ?royalChild .

  # Step 3: Find the father (who is royalty) of this predecessor and his spouse
  ?father dbo:child ?predecessor .
  FILTER(CONTAINS(LCASE(STR(?father)), ""royalty"")) .
  ?father dbo:spouse ?spouseOfFather .

  # Step 4: Identify Saw Min Phyu's spouse who is royalty and their child
  ?sawMinPhyu dbo:spouse ?royalSpouse .
  FILTER(CONTAINS(LCASE(STR(?royalSpouse)), ""royalty"")) .
  ?royalSpouse dbo:child ?childOfRoyalSpouse .

  # Ensure the predecessor is before the child of Saw Min Phyu's spouse
  FILTER(?predecessor != ?childOfRoyalSpouse)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify ""Back to Work"" as a book authored by Hillary Clinton
  dbr:Back_to_Work_(book) dbo:author dbr:Hillary_Clinton .
  
  # Find Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Ensure the spouse is both a politician and an office holder
  ?spouse a dbo:Politician ;
         dbo:officeHolder ?office .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerName WHERE {
  # Find the team managed by Thomas Letsch in a specific season
  ?team dbo:manager dbr:Thomas_Letsch ;
        dbo:season ?letschSeason .

  # Identify the successor of the 2006–07 VfL Bochum football league season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:sportsTeamSeason ?successorSeason .
  
  # Ensure the team is a sports club and an organization
  ?playerTeam dbo:sportsTeam ?team ;
              rdf:type [ 
                rdf:type dbo:SportsClub ;
                owl:intersectionOf (dbo:SportsClub dbo:Organization) ] .

  # Find the manager of the player's team in the successor season
  ?playerTeam dbo:season ?successorSeason .
  ?playerTeam dbo:manager ?manager .
  
  # Get the name of the manager
  ?manager foaf:name ?managerName .
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity ?label ?description WHERE {
  VALUES ?label { ""Nashi"" ""Наши парни"" }
  
  ?entity rdfs:label ?label .
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . FILTER(?redirect != """") }
  OPTIONAL { ?entity rdfs:comment ?description . FILTER(langMatches(lang(?description), ""en"")) }

  FILTER NOT EXISTS {
    ?entity rdfs:label ?otherLabel .
    FILTER(?otherLabel = ""Nashi"" || ?otherLabel = ""Наши парни"")
    MINUS { ?entity dbo:wikiPageRedirects ?redirect }
  }
}
ORDER BY ?label
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  {
    ?person rdfs:label ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION {
    ?person rdfs:label ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurran ?birthName ?associatedArtist WHERE {
  ?nickCurran a dbo:MusicalArtist ;
              rdfs:label ""Nick Curran""@en .
  
  OPTIONAL { 
    ?nickCurran dbo:birthName ?birthName .
  }
  
  OPTIONAL {
    ?birthEntity dbo:birthName ?birthName .
    ?birthEntity dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,4,4,3,1,3,3,71,0,1,3,0.0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Béla IV's children
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Step 2: Find a child of Béla IV whose own child is royalty
  ?royalGrandchild dbo:parent ?belavChild .
  ?royalGrandchild dbo:occupation dbp:Monarch .

  # Step 3: Identify Maria of Bytom's spouse
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .

  # Step 4: Determine the father of Maria of Bytom's spouse and ensure he is royalty
  ?fatherOfSpouse dbo:child ?mariaSpouse .
  ?fatherOfSpouse dbo:occupation dbp:Monarch .

  # Step 5: Connect these relationships
  ?belavChild dbo:parent ?fatherOfSpouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  ?child a dbo:Politician ;
         dbo:occupation ""politician"" .
  
  OPTIONAL { 
    ?child dbo:parent ?parent .
  }
  
  OPTIONAL {
    ?parent dbo:deathPlace dbr:Taipei .
  }

  FILTER EXISTS { ?parent dbo:deathPlace dbr:Taipei }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?ceceBirthPlaceLabel 
               ?paulusRegionLabel 
               ?governorName 
               ?awardeeBirthPlaceLabel
WHERE {
  # Cece Bell's birth place
  dbr:Cecil_Alice_Bell dbo:birthPlace ?ceceBirthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
  
  # Paulus Powell's birth place region and governor
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
  ?paulusBirthPlace wdt:P31/wdt:P279* wd:Q2220681 . # Instance of a populated place
  ?paulusRegion wdt:P131 ?paulusBirthPlace . # Administrative region
  ?governor wdt:P6 ?paulusRegion . # Governor of the region
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
  
  # Vince Gilligan's awardee birth place
  {
    SELECT DISTINCT ?awardee WHERE {
      dbr:Vince_Gilligan dbo:nominatedFor ?award .
      ?award dbo:recipient ?awardee .
    }
  } LIMIT 1
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
  
  # Labels for output
  ?ceceBirthPlace rdfs:label ?ceceBirthPlaceLabel .
  ?paulusRegion rdfs:label ?paulusRegionLabel .
  ?governor rdfs:label ?governorName .
  ?awardeeBirthPlace rdfs:label ?awardeeBirthPlaceLabel .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work WHERE {
  ?work dbo:starring <http://dbpedia.org/resource/Vera_Lynn> .
  ?work rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Film, dbo:TelevisionSeries)) .
  
  # Ensure the work is both a movie and a TV show
  ?work rdf:type ?type2 .
  FILTER (?type2 IN (dbo:Film, dbo:TelevisionSeries))
  FILTER(?type1 != ?type2)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?war WHERE {
  VALUES ?bayne { dbr:William_Bayne }
  
  ?bayne dbo:wikiPageRedirects* ?redirect .
  OPTIONAL { ?redirect dbo:participatedIn ?war . }
  OPTIONAL { ?redirect dbo:associatedWith ?war . }

  FILTER EXISTS { ?war rdf:type dbo:MilitaryConflict . }
  FILTER EXISTS { ?war rdf:type dbo:Event . }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edward_stanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Find his parent
  ?edward_stanley dbo:parent ?parent .
  
  # Verify he is the father of Arthur Stanley (politician)
  ?edward_stanley dbo:child dbr:Arthur_St_Leger_Stanley .

  # Verify he received the Commander of the Royal Victorian Order
  ?edward_stanley dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?work WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?person dbo:wikiPageWikiLink ?work .
  
  ?work a dbo:Book ;
        a dbo:WrittenWork .

  ?work dbo:author ?author .
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Charles Parsons"" ;
          dbo:description ?description .
  
  FILTER(CONTAINS(LCASE(?description), ""british army officer"") && 
         !CONTAINS(LCASE(?description), ""steam turbine"")).

  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?child dbo:father dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  ?child dbo:mother ?mother .
  
  OPTIONAL { ?child dbo:father ?otherFather . }
  
  FILTER EXISTS { 
    ?parent (dbo:child|dbo:spouse) ?child .
    ?parent dbp:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Identify GS9 members who are both artists and musical artists
  ?gs9Member a dbo:MusicalArtist ;
             dbo:memberOfBandOrchestra dbr:GS9 ;
             dbo:birthName ?name .
  
  FILTER (?name = ?birthName)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  ?person a dbo:Chancellor ;
          foaf:name ""Konrad Adenauer""@en .
  ?person dbo:country dbr:West_Germany .
  ?person dbo:nationality ?nativeCountry .
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Actor of ""High Society Blues""
  ?actor dbo:starringIn dbr:High_Society_Blues .
  
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?producer dbo:produced dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .

  # Professional alter ego of The Shadow
  OPTIONAL { 
    ?alterEgo rdfs:label ""Walter B. Gibson""@en .
    FILTER(CONTAINS(LCASE(?alterEgo), ""shadow""))
    ?producer dbo:profession dbr:Writer ; dbo:profession dbr:Film_director .
  }

  # Check if the producer is also associated with a claim-to-fame work
  OPTIONAL {
    ?producer dbo:produced ?work .
    FILTER EXISTS { ?work rdf:type dbo:Film }
  }

  # Ensure the same person satisfies all conditions
  FILTER (?actor = ?producer)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person ?parentName WHERE {
  VALUES ?person { 
    dbr:Doon_Arbus 
    dbr:Amy_Arbus 
  }
  
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,4,2,0.0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?greatGrandChild ?grandChildArchduke WHERE {
  # Find great-grandchildren of Alexander of Württemberg
  ?child1 dbo:spouse dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) .
  ?child2 dbo:parent ?child1 .
  
  ?grandChild dbo:parent ?child2 .
  ?greatGrandChild dbo:parent ?grandChild .

  # Find grandchildren of Archduke Charles Louis
  ?archdukeChild dbo:spouse dbr:Archduke_Charles_Louis_of_Austria .
  ?archdukeGrandChild dbo:parent ?archdukeChild .

  FILTER EXISTS { ?greatGrandChild dbo:royalty true . }
  
  # Find common descendants who are royalty
  VALUES ?grandChildArchduke { ?archdukeGrandChild }
  FILTER (?greatGrandChild = ?grandChildArchduke)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vflManager ?teamManagedByPerson
WHERE {
  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?vflManager .

  # Find a sports manager born on 1968-08-26
  ?person a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date .
  
  # Find the team managed by this person
  ?person dbo:manager ?teamManagedByPerson .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBirthplace ?forceOfAwardee ?warOfAmasaTracy
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Quincy Adams Gillmore's award and the awardee of that award
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  ?awardee dbo:award ?award .
  ?awardee dbo:militaryService ?forceOfAwardee .

  # Amasa Tracy's war service
  dbr:Amasa_Tracy dbo:servedInWar ?warOfAmasaTracy .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?alias { 
    dbr:Eminem 
    dbr:Slim_Shady 
    dbr:Marshall_Bruce_Mathers_III 
  }
  
  ?alias a dbo:MusicalArtist .
  OPTIONAL { ?alias dbo:stageName ?stageName . FILTER (CONTAINS(LCASE(?stageName), ""slim shady"")) }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfParent ?spouseOfFather ?royaltyChild ?relatedRoyaltySpouse
WHERE {
  # Step 1: Identify Min Hla Htut of Pyakaung's parent
  dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?parent .

  # Step 2: Find the child of that parent (could be another sibling or Min Hla Htut himself)
  ?childOfParent dbo:parent ?parent .
  
  # Step 3: Determine the spouse of the father of this child
  ?father dbr:Saw_Shwe_Khet dbo:spouse ?spouseOfFather .

  # Step 4: Identify the child of Saw Shwe Khet who is royalty
  ?royaltyChild dbo:parent dbr:Saw_Shwe_Khet .
  ?royaltyChild a dbo:Monarch .

  # Step 5: Find the spouse of the father from step 3 who is also a royalty and related to the child identified in step 4
  ?relatedRoyaltySpouse dbo:spouse ?father .
  ?relatedRoyaltySpouse a dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?sobieski WHERE {
  # Find the author of ""Always the Love Songs""
  ?book dbo:title ""Always the Love Songs"" .
  ?book dbo:author ?author .

  # Find John III Sobieski
  ?sobieski a dbo:Person ;
            rdfs:label ""John III Sobieski""@en ;
            dbo:officeHolderOf dbr:Kingdom_of_Poland ;
            dbo:commanderInWar dbr:Great_Turkish_War .

  # Ensure the person is also involved in the Russo-Polish War
  ?sobieski dbo:involvedInWar dbr:Russo-Polish_War_(1654–1667) .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?royaltyTitle WHERE {
  VALUES ?francisI { dbr:François_Ier,_Duke_of_Lorraine }
  
  ?francisI dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royaltyTitle ?royaltyTitle . FILTER(?royaltyTitle != """") }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:bandMember ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild
WHERE {
  # Step 1: Identify Archduchess Margarete Sophie of Austria
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Margarete Sophie, Archduchess of Austria""@en .

  # Step 2: Find her parent
  ?parent dbo:child ?margareteSophie .

  # Step 3: Identify the children of that parent
  ?parent dbo:child ?child .

  # Step 4: Filter for royalty among those children
  OPTIONAL { ?child dbp:title ?title . }
  FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
          CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  
  # Return the child who is royalty
  BIND(?child AS ?royalChild)
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow
WHERE {
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Algerian War""@en .
  
  # Check if it is classified as a societal event and an event
  ?war dbo:wikiPageWikiLink+ dbr:Societal_event ;
       dbo:wikiPageWikiLink+ dbr:Event .

  OPTIONAL {
    ?tvShow dbo:subject ?war ;
            a dbo:TelevisionSeries .
  }
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?award dbo:country dbr:Puerto_Rico .
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  ?award dbo:location ?region .
  ?region a dbo:State ;
          a dbo:Settlement ;
          dbo:country dbr:United_States_of_America .

  FILTER(LANG(?award) = ""en"")
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?albrecht dbo:spouse ?spouse .
  ?albrecht dbp:name ""Albrecht, Duke of Württemberg""@en .
  
  ?child dbo:parent ?albrecht ;
         dbo:predecessor ?carl .

  ?carl dbp:name ""Carl, Duke of Württemberg""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerAlterEgo WHERE {
  # Step 1: Identify The Shadow's producer
  ?shadowWork dbo:creator ?producer .
  
  # Step 2: Find the alter ego of The Shadow's producer
  ?producer foaf:name ?producerName .
  ?producer foaf:alias ?producerAlterEgo .

  # Step 3: Identify Johnny Doughboy and his actor
  dbr:Johnny_Doughboy dbo:actor ?actor .
  
  # Step 4: Determine the claim to fame of the actor
  ?actor dbo:notableWork ?claimToFame .

  # Linking The Shadow's producer with the actor through a notable work
  FILTER(?producerAlterEgo = ?claimToFame)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?landmark ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Find Ann Sothern by her birth name
  ?person foaf:name ""Ann Sothern""@en .

  # Check if there is any party member associated with the landmark and person
  ?partyMember dbp:partyMember ?landmark ;
               dbp:partyMember ?person .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Doon Arbus's parent
SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?person dbo:childOf ?parent . }
}

UNION

# Query to find actors in movies with Herschel Bernardi
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi ;
         dbo:starring ?actor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor ?spouse 
WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo a dbo:Monarch ;
                dbo:predecessor ?predecessor .
  
  # Ensure the predecessor is royalty
  ?predecessor rdfs:label ?predecessorLabel .
  FILTER CONTAINS(LCASE(?predecessorLabel), ""royalty"") .

  # Find the child of Saw Shwe Khet and Saw Min Hla
  ?sawShweKhet a dbo:Monarch ;
               dbo:child ?child .
  ?sawMinHla a dbo:Monarch ;
             dbo:child ?child .

  # Ensure the child is royalty
  ?child rdfs:label ?childLabel .
  FILTER CONTAINS(LCASE(?childLabel), ""royalty"") .

  # Find the father of this child
  ?father dbo:child ?child .

  # Ensure the father is royalty
  ?father rdfs:label ?fatherLabel .
  FILTER CONTAINS(LCASE(?fatherLabel), ""royalty"") .

  # Find the spouse of this father
  ?father dbo:spouse ?spouse .

  # Ensure the spouse is royalty
  ?spouse rdfs:label ?spouseLabel .
  FILTER CONTAINS(LCASE(?spouseLabel), ""royalty"") .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?title WHERE {
  ?person dbo:spouse|dbo:child* dbr:William_I_of_England .
  OPTIONAL { ?person dbo:royalTitle ?title . }
  FILTER EXISTS { ?person dbo:officeHolder ?_. } # Ensures they held an office
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?birthPlaceLabel WHERE {
  ?belge a dbo:Writer ;
         foaf:name ""Burhan Belge""@en .
  ?belge dbo:birthPlace ?birthPlace .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,2,9,0,0,249,0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeWar ?baggovutWar WHERE {
  # Find the war associated with the recipient of the Golden Sword for Bravery
  ?person dbo:award ""Golden Sword for Bravery""@en .
  ?person dbo:militaryConflict ?awardeeWar .

  # Find the war in which Karl Gustav von Baggovut participated
  dbr:Karl_Gustav_von_Baggovut dbo:militaryConflict ?baggovutWar .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Middlesex .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,2,3,28,916,916,19,0.5,0.9796791443850268,0.6620889049512108
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?partyMember ?spouse WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Place ;
            dbp:elevation ""20.116800000000001347""^^xsd:float .

  # Find the ruling party of the country where the landmark is located
  ?country dbo:location ?landmark .
  ?party dbo:country ?country ;
         dbo:isRulingParty true .
  
  # Find a member of the ruling party
  ?member dbo:memberOf ?party ;
          dbp:name ?partyMember .

  # Find Roger Pryor (actor) and his spouse
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" .
  ?roger dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfStephenV
WHERE {
  # Identify Stephen V and his children
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?stephenV dbo:child ?childOfStephenV .

  # Identify Charles I and his father
  ?charlesI a dbo:Monarch ;
            foaf:name ""Charles I of Hungary""@en .
  
  ?charlesI dbp:father ?fatherOfCharlesI .

  # Match the child of Stephen V with the parent of Charles I's father
  ?childOfStephenV dbo:parent ?fatherOfCharlesI .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Identify the 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006-07 dbo:sportsTeam dbr:VfL_Bochum .
  
  # Find its successor season (assuming it's the next year)
  ?successorSeason dbo:precededBy dbr:VfL_Bochum_season_2006-07 ;
                   dbo:sportsTeam dbr:VfL_Bochum .

  # Identify the manager of VfL Bochum in that successor season
  ?successorSeason dbo:manager ?manager .
  
  # Determine the native country of the manager
  ?manager foaf:nationality ?country .

  # Find the leader of West Germany and their administration (country)
  dbr:Konrad_Adenauer dbo:birthPlace ?leaderCountry .
  
  # Filter managers whose nationality matches the leader's country
  FILTER (?country = ?leaderCountry)
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show ?theme WHERE {
  VALUES ?person { dbr:Anumta_Qureshi }
  
  ?person dbo:performer ?show .
  OPTIONAL { ?show dbo:theme ?theme . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?claimToFame WHERE {
  # Producer of ""A Star Is Born"" (1937 film)
  OPTIONAL {
    dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  }
  
  # Claim to fame of Cora Sue Collins
  OPTIONAL {
    dbr:Cora_Sue_Collins dbo:knownFor ?claimToFame .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party ?leaderResidence WHERE {
  # Find George Savage's political party
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbo:memberOfParty ?party .
  
  # Ensure the party is an organization and located in the UK
  ?party a dbo:Organization ;
         dbo:country dbr:United_Kingdom .

  # Find the leader of this political party
  ?leader a dbo:Politician ;
          dbo:memberOfParty ?party ;
          dbo:position ""Leader""^^xsd:string .
  
  # Get the residence of the leader and ensure it's in the UK
  ?leader dbp:residence ?leaderResidence .
  ?leaderResidence dbo:country dbr:United_Kingdom .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,1,0,6,1.0,0.14285714285714285,0.25
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actressName ?childName WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbo:Actress .
  ?person foaf:name ?actressName .
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
}
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to lack of specific information in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Stephen V of Hungary's child who is also the parent of Charles Martel of Anjou
  ?stephenV a dbo:Monarch ;
            foaf:surname ""House of Árpád"" ;
            dbo:child ?child .
  
  ?child dbo:parent dbr:Charles_Martel_of_Anjou .

  # Spouse of the father (grandparent) of this child
  ?father dbo:spouse ?spouse .

  # Ensure that the spouse is a royalty and has some connection with Philip, Despot of Romania
  ?spouse a dbo:Monarch ;
          dbo:child ?philip .
  
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorName ?actorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Actor of ""Color Me Dead""
  OPTIONAL {
    dbr:Color_Me_Dead dbo:starring ?actor .
    ?actor rdfs:label ?actorName .
    FILTER (lang(?actorName) = 'en')
    
    # Actor's death place
    ?actor dbo:deathPlace ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Saw Min Phyu's spouse
  ?spouse dbo:spouse ?sawMinPhyu .
  
  FILTER(?sawMinPhyu = dbc:Saw_Min_Phyu) .

  # Step 2: Find the child of that spouse who is royalty
  ?child dbo:parent ?spouse ;
         dbp:royaltyStatus ?royaltyStatus .
  
  FILTER(?royaltyStatus != ""non-royal"") .

  # Step 3: Identify Min Hla Htut's parent
  ?minHlaHtutParent dbo:child dbc:Min_Hla_Htut ;
                    dbo:location dbc:Pyakaung .

  # Step 4: Determine the child of that parent
  ?parentChild dbo:parent ?minHlaHtutParent .

  # Step 5: Find the predecessor of this child
  ?predecessor dbo:successor ?parentChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Find the spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               rdfs:label ""Saw Shwe Khet""@en .
  
  ?sawShweKhet dbo:spouse ?spouse .

  # Step 2: Identify Minye Kyawswa's child
  ?minyeKyawswa a dbo:Person ;
                rdfs:label ""Minye Kyawswa""@en .
  
  ?minyeKyawswa dbo:child ?child1 .

  # Step 3: Find the parent of that child (which is Minye Kyawswa)
  ?parentOfChild1 dbo:child ?child1 .

  # Step 4: Identify the child of that parent
  ?parentOfChild1 dbo:child ?child2 .

  FILTER(?spouse = ?child2)
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?title WHERE {
  ?person dbo:child dbr:Philip_of_Romania .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?war 
WHERE {
  ?award dbo:recipient ?recipient .
  ?award dbo:name ""Medal of Honor"" .
  ?recipient dbo:conflict ?war .
}
```",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?award dbo:awardedBy dbr:Anita_Borg_Institute.
  ?episode dbo:isBroadcastOf ?show.
  ?episode dbo:hasSubject ?award.
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?actor ?profession WHERE {
  # Find the album containing ""What You Know"" by T.I.
  ?song dbo:title ""What You Know""@en .
  ?song dbo:artist dbr:T.I. ;
        dbo:partOfAlbum ?album .

  OPTIONAL {
    # Check if there are any actors associated with this album
    ?album dbo:contributor ?actor .
    FILTER EXISTS { ?actor a dbo:Actor . }
    
    # Get the professional field of the actor
    ?actor dbo:profession ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorName WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?person .
  ?person foaf:name ""Richard E. Grant""@en .
  ?movie dbo:starring ?otherPerson .
  ?otherPerson foaf:name ?actorName .
  FILTER(?actorName != ""Richard E. Grant"")
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Step 1: Find Stephen V of Hungary's predecessor (father)
  ?stephenV dbo:predecessor ?predecessor .
  
  FILTER(STR(?stephenV) = ""Stephen_V_of_Hungary"")

  # Step 2: Find the child of that predecessor who is royalty
  ?predecessor dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 3: Identify Maria of Bytom's spouse
  ?mariaOfBytom dbo:spouse ?spouse .

  FILTER(STR(?mariaOfBytom) = ""Maria_of_Bytom"")

  # Step 4: Find the father of that spouse who is royalty
  ?spouse dbo:parent ?royalFather .
  ?royalFather rdf:type dbo:Monarch .

  # Step 5: Find the child of that royal father
  ?royalFather dbo:child ?childOfChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Joey B's birth name
  ?joeyB a dbo:MusicalArtist ;
         rdfs:label ""Joey B""@en .
  ?joeyB dbo:birthName ?birthName .

  # Step 2: Find the associated musical artist of $pacely
  ?associatedArtist dbo:associatedBand dbr:$pacely ;
                   dbo:birthName ?birthName .

  # Step 3: Determine the profession of the writer of ""The Live Anthology""
  ?writer dbo:profession dbo:MusicalArtist ;
          dbo:work dbr:The_Live_Anthology .

  # Ensure all conditions are met by the same individual
  FILTER (?associatedArtist = ?writer)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en ;
          dbo:office ?office .
  
  ?office dbo:partOf ?administration .
  ?administration dbo:country dbr:Spain .

  ?person dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (CONTAINS(LCASE(?partyLabel), ""spanish socialist workers' party""))

  ?person dbo:residenceCountry dbr:Spain .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentAward ?parentPerson
WHERE {
  # Find the award associated with Rodney Lees and its parent class
  ?award dbo:recipient dbr:Rodney_Lees .
  ?award rdfs:subClassOf ?parentAward .

  # Find the parents of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    dbr:Edward_Stanley,_17th_Earl_of_Derby foaf:parent ?person .
    ?person rdfs:label ?parentPerson .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find Tony Hollings' birthdate
  VALUES (?tonyBirthDate) { 
    SELECT ?birthDate WHERE { 
      dbr:Tony_Hollings dbo:birthday ?birthDate .
    }
  }

  # Identify person with multiple roles and matching birthday
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbp:birthday ?birthDate .

  FILTER (?birthDate = ?tonyBirthDate)

  # Check association with Lai Sun Cheung
  OPTIONAL {
    ?association dbo:agent ?person .
    ?association dbo:object dbr:Lai_Sun_Cheung .
  }

  FILTER EXISTS { ?association dbo:agent ?person }
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1Label ?war2Label ?entityInAthensLabel
WHERE {
    # War involving Napoleon Zervas (Greek Resistance)
    ?zervas dbo:occupation dbr:Military_officer ;
           dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ""Napoleon Zervas""@en .

    ?war1 dbo:participatedIn ?zervas ;
          rdfs:label ?war1Label .
    
    # War or event associated with an awardee of 1930
    ?awardee dbo:dateOfBirth ?dob ;
             dbo:award dbr:Nobel_Prize_in_Peace ;
             dbo:wikiPageDisambiguates ?disambiguation2 .
    ?disambiguation2 rdfs:label ""Theodore Roosevelt Jr.""@en .

    ?war2 dbo:participatedIn ?awardee ;
          rdfs:label ?war2Label .

    # Entity in Athens
    ?entityInAthens dbo:location dbr:Athens ;
                   rdfs:label ?entityInAthensLabel .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the war involving Toyotomi Hidetsugu (Hashiba Hidekatsu)
SELECT ?event ?description WHERE {
  dbr:Toyotomi_Hidetsugu dbo:participatedIn ?event .
  ?event rdfs:label ?description .
  FILTER(LANG(?description) = 'en')
}

UNION

# Query for significant wars during Miki Kōichi's lifetime
SELECT ?event ?description WHERE {
  dbr:Miki_Kōichi dbo:livedDuring ?period .
  ?period dbo:hasPart ?event .
  ?event rdfs:label ?description .
  FILTER(LANG(?description) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?philipI dbo:childOf ?father .
  ?father dbo:parent ?stephenV .
  ?stephenV foaf:name ""Stephen V of Hungary"" .
  
  FILTER regex(str(?philipI), ""Philip I, Prince of Taranto"", ""i"")
  
  ?father dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?region ?country
WHERE {
  # Find Patrick Bowes-Lyon and his parent(s)
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .

  # Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a region and country
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace dbo:country ?country .

  # Get the region name
  ?birthPlace rdfs:label ?region .

  FILTER (lang(?region) = 'en')
  FILTER (lang(?region) = 'en')

}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the campaign as an event and conflict
  dbr:Egyptian_Campaign_of_Napoleon_bonaparte dbo:conflict ?campaign .
  
  # Get the commander of the campaign
  ?campaign dbo:commander ?commander .

  # Get information about military forces involved in the campaign
  ?campaign dbo:militaryForce ?militaryForce .

  # Ensure William Bayne is mentioned in relation to this event
  OPTIONAL {
    ?campaign dbo:participant dbr:William_Bayne_(Royal_Navy_officer) .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fabulousThunderbirds ?ericClaptonBand ?nickCurranArtist
WHERE {
  # The Fabulous Thunderbirds entity
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup .

  OPTIONAL {
    # Bands associated with The Fabulous Thunderbirds
    ?bandMember dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
    ?bandMember rdfs:label ?fabulousThunderbirds .
    FILTER (lang(?fabulousThunderbirds) = 'en')
  }

  OPTIONAL {
    # Eric Clapton's band membership
    dbr:Eric_Clapton dbo:memberOfBand ?ericClaptonBand .
    ?ericClaptonBand rdfs:label ?bandLabel .
    FILTER (lang(?bandLabel) = 'en')
  }

  OPTIONAL {
    # Nick Curran's associated musical artists
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
    ?nickCurranArtist rdfs:label ?artistLabel .
    FILTER (lang(?artistLabel) = 'en')
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        dbo:recipient ?awardee .
  
  ?awardee dbo:nationality dbr:Japan .

  OPTIONAL { 
    ?reference dbo:subject ?awardee ;
               rdf:type dbo:TelevisionShow .
  }
  
  FILTER EXISTS { ?award rdfs:label ""Anita Borg Institute Women of Vision Award""@en }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for associated musical artist of the writer(s) of ""Wizards of Waverly Place"" soundtrack
SELECT DISTINCT ?writer ?artist WHERE {
  ?soundtrack dcterms:title ""Wizards of Waverly Place (soundtrack)"" ;
             dbo:composer ?writer .
  OPTIONAL { 
    ?writer dbo:occupation dbc:Musical_artists .
  }
  FILTER EXISTS { ?writer dbo:occupation dbc:Musical_artists . }
}

UNION

# Query for associated musical artist of Stuart Mcbeath Tosh
SELECT DISTINCT ?person ?artist WHERE {
  ?person foaf:name ""Stuart Mcbeath Tosh"" ;
          dbo:birthDate ?birthDate .
  OPTIONAL { 
    ?person dbo:associatedMusicalArtist ?artist .
  }
  FILTER EXISTS { ?artist dbo:occupation dbc:Musical_artists . }
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tishaSterling .

  # Step 2: Get the birth name of this parent
  ?parent dbo:birthName ?birthName .

  # Step 3: Identify Nat Levine's film product
  dbr:Nat_Levine dbo:film dbr:Film ; # Assuming a specific film is known or can be identified

  # Step 4: Find an actor in this film
  ?film dbo:starring ?actor .

  # Step 5: Determine the spouse of this actor
  ?actor dbo:spouse ?person .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlaceLabel WHERE {
  ?person rdfs:label ""Reed Howes""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?deathPlaceLabel .
  FILTER(LANG(?deathPlaceLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?victorParentName ?edwardParentName WHERE {
  # Query for Victor Stanley's parent(s)
  OPTIONAL {
    ?victor dbo:parent ?victorParent .
    ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
    ?victorParent rdfs:label ?victorParentName .
  }
  
  # Query for Edward Stanley, 17th Earl of Derby's parent(s)
  OPTIONAL {
    ?edward dbo:parent ?edwardParent .
    ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
    ?edwardParent rdfs:label ?edwardParentName .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?location WHERE {
  # Toyotomi Hideyoshi's child
  dbr:Toyotomi_Hideyoshi dbo:child ?hideyori .
  
  # Wars involving Toyotomi Hideyori
  ?hideyori dbo:participatedIn ?event .
  
  # Filter for the Siege of Osaka
  FILTER(CONTAINS(LCASE(STR(?event)), ""siege of osaka""))
  
  # Get the name and location of the war
  ?event rdfs:label ?war ;
         dbo:location ?location .

  # Ensure the location is in Japan
  ?location rdfs:label ?country .
  FILTER(CONTAINS(LCASE(STR(?country)), ""japan""))

  # Filter for English labels
  FILTER (LANG(?war) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors from the film ""Paradise"" (2013)
  ?paradiseFilm a dbo:Film ;
                dbo:starring ?paradiseActor .
  
  FILTER(STRSTARTS(LCASE(?paradiseFilm), LCASE(""dbr:paradise_(2013_film)"")))

  # Find films that include both Audrey Hepburn and the actor from ""Paradise""
  ?film a dbo:Film ;
        dbo:starring dbr:Audrey_Hepburn, ?actor .
  
  FILTER(?actor = ?paradiseActor)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for the successor of the commander in the Russo-Polish War (1654–1667)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?war dbo:partOf ?conflict .
  ?commander dbo:commanded ?war .
  ?successor dbo:succeededBy ?commander .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .
  
  FILTER(CONTAINS(LCASE(?conflict), ""russo-polish war""))
}

# Query for the commander in the Battle of Vienna associated with a television show and societal event
SELECT ?commander WHERE {
  ?battle dbo:partOf ?event .
  ?commander dbo:commanded ?battle .
  
  OPTIONAL { ?commander dbo:wikiPageWikiLink ?tvShow . }
  OPTIONAL { ?commander dbo:wikiPageWikiLink ?societalEvent . }

  FILTER(CONTAINS(LCASE(?event), ""battle of vienna""))
  FILTER(BOUND(?tvShow) && BOUND(?societalEvent))
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event ?force1 ?force2 ?commander
WHERE {
  # Find events related to William Bayne
  ?bayne dbo:participatedIn ?event .
  
  FILTER (str(?bayne) = ""William_Bayne_(Royal_Navy_officer)"")

  OPTIONAL {
    # Forces involved in the Battle of Cape Finisterre (1805)
    ?battle dbo:militaryForce ?force1 ;
            dbo:opposingMilitaryForce ?force2 .
    
    FILTER (str(?battle) = ""Battle_of_Cape_Finisterre_(1805)"")
  }

  OPTIONAL {
    # Commander of the French campaign in Egypt and Syria
    ?campaign dbo:commander ?commander .
    
    FILTER (str(?campaign) = ""French_campaign_in_Egypt_and_Syria"")
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?event WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:politician true ;
          rdfs:label ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?person dbo:commander ?commanderRole . }
  
  ?person dbo:heldPositionIn ?event .
  
  ?event a (dbo:MilitaryConflict|dbo:SocietalEvent) .

  OPTIONAL {
    ?event dbo:place dbr:Madrid .
  }

  FILTER(LANG(?officeHolder) = 'en')
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?collinsProducer ?actor ?actorClaimToFame ?actorClaimToFameProducer WHERE {
  # Find Cora Sue Collins' claim to fame and its producer
  ?work dbo:starring dbr:Cora_Sue_Collins .
  ?work dbo:producer ?collinsProducer .

  # Find the actor of High Society Blues
  ?highSocietyBlues dbo:starring ?actor .
  FILTER (str(?highSocietyBlues) = ""High_Society_Blues"")

  # Find the claim to fame movie of this actor and its producer
  ?actorClaimToFame dbo:starring ?actor .
  ?actorClaimToFame dbo:producer ?actorClaimToFameProducer .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mudvayneMember ?associatedBandMember WHERE {
    # Step 1: Identify Nate Newton's associated band, Converge
    dbr:Nate_Newton dbo:memberOf dbr:Converge .

    # Step 2: Find bands that are also organizations
    ?band a dbo:MusicalGroup ;
          dbo:isBasedIn ?location .
    
    OPTIONAL { ?band dbo:officialWebsite ?website . }
    
    FILTER EXISTS {
        ?band dbo:member ?person .
    }

    # Step 3: List members of Mudvayne
    dbr:Mudvayne dbo:member ?mudvayneMember .

    # Step 4: Check if any member of Mudvayne is also a member of the band identified in step 2
    ?band dbo:member ?associatedBandMember .
    
    FILTER (?mudvayneMember = ?associatedBandMember)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Alfonso VI of León and Castile
  ?alfonso vi:spouse ?spouse .
  FILTER (str(?alfonso) = ""Alfonso_VI_of_León_and_Castile"")

  # Find children of Alfonso VI
  ?child dbo:parent ?alfonso .

  # Find grandchildren of Alfonso VI
  ?grandchild dbo:parent ?child .

  # Find Roger II of Sicily
  ?roger vi:spouse ?spouse2 .
  FILTER (str(?roger) = ""Roger_II_of_Sicily"")

  # Find children of Roger II
  ?childOfRoger dbo:parent ?roger .

  # Intersection: Grandchildren of Alfonso VI who are also children of Roger II
  FILTER (?grandchild = ?childOfRoger)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?character ?profession ?actor WHERE {
  # Find the character with an alter ego in ""The Golden Master""
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:hasEpisode ?episode .
  ?episode dbo:starring ?character .
  ?character dbo:alterEgo ?alterEgo .
  
  # Get the profession of this character
  ?character dbo:profession ?profession .

  # Find actors in the music video for ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:musicVideoStarring ?actor .
  
  FILTER regex(?character, ""The Golden Master"", ""i"")
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  ?francis a dbo:Duke ;
           rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  # Step 2: Find his children and identify which one is royalty
  ?child dbo:parent ?francis ;
         a dbo:RoyalFamilyMember .

  # Step 3: Determine the father of that royal child
  ?father dbo:child ?child .

  # Step 4: Identify Renée of Bourbon's spouse who is also the parent of the person identified in step 3
  ?renée a dbo:Person ;
         rdfs:label ""Renée of Bourbon""@en .
  
  ?spouse dbo:spouse ?renée ;
          dbo:child ?father .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?film dbo:productionName dbr:Nothing_to_Gein .
  ?film dbo:producer ?producer .
  ?producer a dbo:Organization ;
            a dbo:Group .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""judgment_the_trial_of_julius_and_ethel_rosenberg"")))

  # Check if this actor is a parent of both Doon Arbus and Amy Arbus
  ?parent rdfs:label ""Doon Arbus""@en .
  ?parent dbo:child ?actor .
  
  ?parent2 rdfs:label ""Amy Arbus""@en .
  ?parent2 dbo:child ?actor .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Identify Jamsetji Tata's entity in DBpedia
  dbr:Jamsetji_Tata a dbo:Person .

  # Query for works or contributions founded by him that are related to India
  OPTIONAL { 
    dbr:Jamsetji_Tata dbo:founded ?work .
    FILTER EXISTS {
      ?work dbo:country dbr:India .
    }
  }

  # Include specific known institutions he founded in India
  UNION {
    VALUES ?work {
      dbr:Tata_Steel
      dbr:Indian_Institute_of_Science
      dbr:Taj_Mahal_Palace_Hotel_(Mumbai)
    }
  }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse ?child ?parent ?photographer WHERE {
  # Step 1: Find actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Find spouse of Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 3: Identify child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Determine parent of that child (should be either spouse or another entity)
  ?child dbo:parent ?parent .

  # Step 5: Check if any parent is a professional photographer
  OPTIONAL { 
    ?parent dbo:occupation dbr:Photographer .
    BIND(?parent AS ?photographer)
  }

  FILTER EXISTS { ?parent dbo:occupation dbr:Photographer }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace ?ceceBellBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?paulusPowell dbo:birthPlace ?region .
  
  FILTER (STRSTARTS(STR(?region), ""http://dbpedia.org/resource/""))

  # Step 2: Find the governor of that region
  ?governor dbo:office ?office .
  ?office dbo:location ?region .
  ?governor dbo:birthPlace ?governorBirthPlace .

  FILTER (STRSTARTS(STR(?governor), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(STR(?office), ""Governor""))

  # Step 3: Confirm Cece Bell as the author of ""El Deafo""
  dbr:El_Deafo dbo:author ?ceceBell .
  
  FILTER (STRSTARTS(STR(?ceceBell), ""http://dbpedia.org/resource/Cece_Bell""))

  # Step 4: Find Cece Bell's birth place
  ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .

}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist WHERE {
  dbr:What_You_Know_(T.I._song) dbo:album ?album .
  ?album dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  dbr:A_Picture_of_Britain dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonMember WHERE {
  # Find the producer of Nothing to Gein
  ?producer a dbo:MusicalArtist ;
            dbo:producedAlbum dbr:Nothing_to_Gein .

  # Find band members of this producer
  ?member1 dbo:bandMemberOf ?producer .

  # Find the associated musical artist of Cavalera Conspiracy
  ?associatedArtist dbo:musicalArtist dbr:Cavalera_Conspiracy .

  # Find band members of this associated musical artist
  ?member2 dbo:bandMemberOf ?associatedArtist .

  # Identify common member
  FILTER (?member1 = ?commonMember && ?member2 = ?commonMember)
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the club VfL Bochum
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:seasonsInLeague [
                   dbo:team dbr:VfL_Bochum ;
                   dbo:year ""2007–08""^^xsd:string .
                 ] .

  # Find the manager for that season
  ?manager a dbo:Person ;
           dbo:positionHeld [
             dbo:organization dbr:VfL_Bochum ;
             dbo:startDate ?start ;
             dbo:endDate ?end ;
             dbo:role ""Manager""^^xsd:string .
           ] .

  # Ensure the manager's tenure includes the 2007–08 season
  FILTER (
    (YEAR(?start) <= 2007 && YEAR(?end) >= 2008)
  )
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?miguelPartyLeaderOffice ?rajoyPartyLeaderOffice WHERE {
  # Find Miguel Maura's party and its leader's office
  ?miguel dbo:partyAffiliation ?miguelParty .
  ?miguel rdfs:label ""Miguel Maura""@en.
  
  ?miguelParty dbo:leader ?miguelLeader .
  ?miguelLeader dbp:office ?miguelPartyLeaderOffice .

  # Find Mariano Rajoy's party and its leader's office
  ?rajoy dbo:partyAffiliation ?rajoyParty .
  ?rajoy rdfs:label ""Mariano Rajoy""@en.
  
  ?rajoyParty dbo:leader ?rajoyLeader .
  ?rajoyLeader dbp:office ?rajoyPartyLeaderOffice .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration WHERE {
  # Find Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:office ?office .
  
  # Find the administration he is part of
  ?office dbo:memberOfParliament ?parliament .
  ?parliament dbo:headOfGovernment ?administration .

  # Filter to find administrations led by PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear
WHERE {
  dbr:Christian_IX_of_Denmark dbo:reign ?reign .
  ?reign dbo:startYear ?startYear ;
         dbo:endYear ?endYear .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?movie WHERE {
  # Find Linda Bruckheimer and her spouse
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  ?linda dbo:spouse ?spouse .

  # Ensure the spouse is Don Bruckheimer
  ?spouse foaf:name ""Don Bruckheimer""@en .

  # Find movies produced by Don Bruckheimer
  ?movie dbo:producer ?spouse ;
         dbp:title ?title .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Find the entity related to ""Coro de la Pontificia Universidad Católica de Puerto Rico""
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  # Identify any awards associated with this entity
  ?award dbo:associatedWith ?coro .

  # Determine the native place of the award
  ?award dbo:nativePlace ?native .

  # Ensure the native place is an American settlement
  ?native a dbo:Settlement ;
          dbp:country ""United States""@en .
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?label (GROUP_CONCAT(?parentLabel; separator="", "") AS ?parents)
WHERE {
  VALUES (?person ?personLabel) {
    (<http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> ""Mary Elphinstone, Lady Elphinstone"")
    (<http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"")
  }
  
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
  
  OPTIONAL {
    ?person dbo:parent ?parent .
    ?parent rdfs:label ?parentLabel .
    FILTER (lang(?parentLabel) = 'en')
  }
}
GROUP BY ?person ?label
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  dbr:Eric_Clapton dbo:bandMember ?band .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fullName WHERE {
  ?person dbo:birthName ""Eleonora Menicucci""@en .
  ?person rdf:type dbo:Politician .
  ?person foaf:name ?fullName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""marcelo sarmiento""))
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  
  ?doonArbus dbo:parent ?parent .

  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?writer ?successor WHERE {
  # Michał Kazimierz Pac's association with the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pas_(general) dbo:associatedWith dbr:Great_Turkish_War .

  # Commander associated with Michał Kazimierz Pac
  ?commander dbo:associatedWith dbr:Great_Turkish_War ;
             dbo:successor ?successor .

  # Writer of ""Always the Love Songs""
  ?writer foaf:name ?authorName .
  FILTER(CONTAINS(LCASE(?authorName), ""always the love songs""))

  # Successor is a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

  # Linking commander to writer (hypothetical connection)
  ?commander foaf:name ?commanderName .
  FILTER(?commander != dbr:Mikołaj_Kazimierz_Pas_(general)) # Exclude Michał Kazimierz Pac himself
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace ?entityInJST WHERE {
  # Find Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthplace .

  # Find an entity in Japan (region of JST)
  ?entityInJST a dbo:City ;
               dbo:country dbr:Japan .
}
```",3,3,4,2,2,3,2,20,1,716,0,0.001394700139470014,1.0,0.0027855153203342614
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeParent ?edwardParent WHERE {
  # Find an awardee of the Commander of the Royal Victorian Order and their parent
  ?person dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  ?person dbo:parent ?awardeeParent .

  # Find Edward Stanley, 17th Earl of Derby, and his parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardParent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild 
WHERE {
  # Béla IV of Hungary's children who are royalty
  ?belasChild dbo:parent dbr:Béla_IV_of_Hungary .
  ?belasChild a dbo:Monarch .

  # Child of one of Béla IV's royal children
  ?childOfChild dbo:parent ?belasChild .

  # Parent of the father (grandfather) of Charles I of Hungary
  ?charlesIFather dbo:parent dbr:Charles_I_of_Hungary .
  ?charlesIGrandfather dbo:parent ?charlesIFather .
  
  # Spouse of Charles II of Naples
  ?spouseOfCharlesII dbo:spouse dbr:Charles_II_of_Naples .

  # The person we are looking for must satisfy all these conditions
  FILTER (?childOfChild = ?charlesIGrandfather && ?childOfChild = ?spouseOfCharlesII)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movieTitle WHERE {
  ?tvSeries a dbo:TelevisionShow ;
            rdfs:label ?movieTitle ;
            dbo:starring ?actor .
  
  FILTER(CONTAINS(LCASE(?movieTitle), ""the shadow""))
  
  ?actor rdfs:label ?actorLabel .
  FILTER(STRSTARTS(LCASE(?actorLabel), ""richard e. grant"") || STRSTARTS(LCASE(?actorLabel), ""dr. walter hartwell hart williams""))

  OPTIONAL {
    ?tvSeries dbo:genre ?genre .
    FILTER(CONTAINS(LCASE(?genre), ""drama"") || CONTAINS(LCASE(?genre), ""action""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the birth place of Cece Bell, author of ""El Deafo""
SELECT ?birthPlace WHERE {
  ?author dbo:work ?book .
  ?book rdfs:label ""El Deafo""@en .
  FILTER (CONTAINS(LCASE(str(?author)), 'cece bell'))
  ?author dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the birth place of Vince Gilligan, awardee in various lists
SELECT ?birthPlace WHERE {
  ?person dbo:award ?award .
  FILTER (CONTAINS(LCASE(str(?person)), 'vince gilligan'))
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherName
WHERE {
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  ?child dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Get the author of Smartbomb
SELECT ?author WHERE {
    dbr:Smartbomb dbo:creator ?author .
}

# Step 2: Get an actor from ATL
SELECT ?actor WHERE {
    dbr:ATL dbo:starring ?actor .
}

# Step 3: Find a movie featuring both the author and actor
SELECT DISTINCT ?movie WHERE {
    # Replace ?authorValue and ?actorValue with actual values obtained from previous queries
    ?movie dbo:starring ?authorValue ;
           dbo:starring ?actorValue .
}
```

Note: The placeholders `?authorValue` and `?actorValue` in the final query should be replaced with the actual URIs of the author and actor retrieved from the first two queries.",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoPerson ?profession
WHERE {
  # Query for The Shadow's creator
  OPTIONAL {
    ?person dbo:wikiPageRedirects dbr:The_Shadow .
    ?person rdfs:label ""Walter B. Gibson""@en .
    BIND(""The Shadow"" AS ?alterEgo)
    BIND(?person AS ?alterEgoPerson)
  }
  
  # Query for a professional singer
  OPTIONAL {
    ?singer dbo:occupation dbr:Singing .
    ?singer rdfs:label ""Elvis Presley""@en .
    BIND(""Singer"" AS ?profession)
    BIND(?singer AS ?professionalSinger)
  }
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  # Find Tisha Sterling's parent
  ?tishaSterling dbo:parent ?parent .
  FILTER(STR(?tishaSterling) = ""Tisha_Sterling"") .

  # Get the birth name of the parent
  ?parent foaf:name ?birthName .

  # Check if the person is a member of the Republican Party
  ?person dbo:partyAffiliation ?republicanParty .
  FILTER(STR(?republicanParty) = ""Republican_Party_(United_States)"") .

  # Ensure this person is the same as the parent found above
  FILTER(?parent = ?person)

  # Check if the person was married to Roger Pryor (actor)
  ?person dbo:spouse ?rogerPryor .
  FILTER(STR(?rogerPryor) = ""Roger_Pryor_(actor)"") 
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?country a dbo:Country ;
           rdfs:label ""Japan""@en .
  ?country dbp:timeZone ?timeZone .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick dbp:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # His child who is a parent of Victor Stanley
  ?child dbo:parent ?frederick ;
         dbo:child ?victorStanley .
  ?victorStanley foaf:name ""Victor Stanley (Royal Navy officer)""@en .

  # Alumnus of Eton College and parent of the child
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Eton_College> ;
           dbo:child ?child .
  
  # The politician among the children of this alumnus
  ?politician dbo:parent ?alumnus ;
              a dbo:Politician .

  # Father of the politician
  ?father dbo:child ?politician .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandfather WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?parent .
  ?parent dbo:father ?grandfather .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vitesseManager ?bochumPlayer ?bochumManager WHERE {
  # Manager of SBV Vitesse in the 2020–21 season
  dbr:SBV_Vitesse dbo:manager ?vitesseManager .
  ?vitesseManager dbp:managedTeam dbr:SBV_Vitesse ;
                  dbp:managementEndYear ""2021""^^xsd:gYear .

  # Players of VfL Bochum in the 2007–08 season
  ?bochumPlayer dbo:team dbr:VfL_Bochum .
  ?bochumPlayer dbo:seasonStartYear ""2007""^^xsd:gYear ;
                dbo:seasonEndYear ""2008""^^xsd:gYear .

  # Manager of the player from VfL Bochum
  OPTIONAL {
    ?bochumPlayer dbo:manager ?bochumManager .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear
WHERE {
  dbr:Olaf_I_of_Denmark dbo:reign ?reign .
  ?reign dbo:startYear ?startYear ;
         dbo:endYear ?endYear .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:birthPlace dbr:Florida .
  ?artist dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,3,71,4,4,55,0.5,0.06779661016949153,0.11940298507462686
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName ?workTitle
WHERE {
  # Find Hu Jieqing's resource
  dbr:Hu_Jieqing dbo:spouse ?spouse .

  # Check if the spouse is a writer
  ?spouse dbo:occupation dbr:Writer .
  
  # Get the name of the spouse
  ?spouse rdfs:label ?spouseName .

  # Retrieve works by the spouse
  ?spouse dbo:work ?work .
  ?work rdfs:label ?workTitle .

  FILTER (lang(?spouseName) = 'en')
  FILTER (lang(?workTitle) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Rodney Lees and his award
  ?rodneyLees a dbo:Person ;
              foaf:name ""Rodney Lees"" .
  
  ?award dbo:recipient ?rodneyLees .

  # Step 2: Find the awardee of that award and their parent
  ?otherAwardee dbo:award ?award .
  ?parent foaf:child ?otherAwardee .

  # Step 3: Find an alumnus of Eton College with a child who is a politician
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Eton_College> ;
           foaf:child ?politicianChild .
  
  ?politicianChild a dbo:Politician .

  # Step 4: Find the father of that politician child
  ?father foaf:parent ?politicianChild .

  # Step 5: Ensure the parent from step 2 and the father from step 4 are the same
  FILTER (?parent = ?father)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildWhoIsRoyalty
WHERE {
  # Step 1: Find Archduchess Margarete Sophie of Austria's parent
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Step 2: Find a child of that parent (could be another sibling)
  ?sibling dbo:parent ?parent .
  
  # Step 3: Identify Duke Philipp of Württemberg's grandchild
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?childOfDukePhilipp .
  ?grandchild dbo:parent ?childOfDukePhilipp .

  # Step 4: Check if the grandchild is royalty
  ?grandchild a ?royaltyClass .
  FILTER(?royaltyClass IN (dbo:Monarch, dbo:RoyalFamilyMember))

  # Step 5: Find the child of that royal grandchild
  ?grandchild dbo:child ?childOfChildWhoIsRoyalty .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Roger III and his parent
  ?rogerIII a dbo:Duke ;
            dbo:child ?parent .

  FILTER(?rogerIII = dbr:Roger_III,_Duke_of_Sicily)

  # Find the children of Roger III's parent
  ?parent dbo:child ?child .
  
  # Ensure we exclude Roger III from the results
  FILTER(?child != ?rogerIII)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT DISTINCT ?war WHERE {
  ?regiment rdf:type dbo:MilitaryUnit .
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?regiment dbp:participatedInWar ?war .
  
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type owl:Thing .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of ""Dispatches from Elsewhere""
  OPTIONAL { 
    ?series dbo:title ""Dispatches from Elsewhere""@en .
    ?series dbo:starring ?actor .
  }
  
  UNION
  
  # Confirm Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor ;
                       rdfs:label ?sinhaLabel .
}

```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?reedHowesDeathPlace ?aladdinActorName ?aladdinActorDeathPlace WHERE {
  # Reed Howes death place
  OPTIONAL { 
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }

  # Aladdin (1958) film and actor who played Aladdin
  OPTIONAL {
    dbr:Aladdin_1958_film dbo:actor ?aladdinActorResource .
    ?aladdinActorResource rdfs:label ?aladdinActorName .
    FILTER(LANG(?aladdinActorName) = 'en') .

    # Get the death place of the actor who played Aladdin
    OPTIONAL {
      ?aladdinActorResource dbo:deathPlace ?aladdinActorDeathPlace .
    }
  }
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?profession WHERE {
  ?work dbo:title ""Shelby Oaks""@en .
  ?work dbo:actor ?actor .
  OPTIONAL { ?actor foaf:jobTitle ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?band WHERE {
  # Check if Nicholas Michael Curran is associated with any musical artist
  OPTIONAL {
    dbr:Nicholas_Michael_Curran dbo:associatedMusicalArtist ?artist .
  }
  
  # Retrieve information about The Fabulous Thunderbirds and Kim Wilson's association
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               dbo:member ?bandMember .
  OPTIONAL {
    ?bandMember foaf:name ""Kim Wilson""@en .
  }

  FILTER(?artist != """" || ?band = dbr:The_Fabulous_Thunderbirds)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild ?title 
WHERE {
  # Béla IV of Hungary's URI
  VALUES ?belav4 { <http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary> }
  
  # Find children of Béla IV
  ?child dbo:parent ?belav4 .
  
  # Find grandchildren (children of Béla IV's children)
  ?grandchild dbo:parent ?child .

  # Check if the grandchild has a royal title
  OPTIONAL { 
    ?grandchild rdfs:label ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationLeader WHERE {
  ?administration dbo:member dbr:Anxo_Quintana .
  ?administration dbo:leader ?administrationLeader .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Eugène Cattin's profession and its parent class
SELECT ?profession ?parentClass WHERE {
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?eugeneCattin dbo:occupation ?profession . }
  OPTIONAL { ?profession rdfs:subClassOf* ?parentClass . FILTER(?parentClass != ?profession) }
  
  VALUES ?eugeneCattin {
    dbr:Eugène_Cattin
  }
}

# Query to find Eugène Cattin's role in ""Judgment: The Trial of Julius and Ethel Rosenberg"" and its parent class
SELECT ?filmRole ?parentClass WHERE {
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?eugeneCattin dbo:role ?filmRole . }
  OPTIONAL { ?filmRole rdfs:subClassOf* ?parentClass . FILTER(?parentClass != ?filmRole) }

  VALUES ?eugeneCattin {
    dbr:Eugène_Cattin
  }
  
  # Ensure the film is ""Judgment: The Trial of Julius and Ethel Rosenberg""
  OPTIONAL { ?filmRole dbo:film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?country ?administration
WHERE {
  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .

  # Álvaro Quirós's country of residence
  dbr:Álvaro_Quirós dbo:nationality ?country .
  
  # Spanish Socialist Workers' Party as a Spanish administration
  dbr:Spanish_Socialist_Workers'_Party dbo:country dbr:Spain ;
                                     dbo:administrationRole ?administration .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  ?person rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?childLabel WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  FILTER NOT EXISTS { ?child rdfs:label ?ignored }
  SERVICE <http://dbpedia.org/sparql> {
    ?child rdfs:label ?childLabel .
    FILTER(LANG(?childLabel) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find movies starring Iliza Shlesinger
  VALUES (?iliza) { dbr:Iliza_Shlesinger }
  
  ?iliza dbo:starring ?movie .
  
  # Find movies starring Audrey Hepburn
  VALUES (?audrey) { dbr:Audrey_Hepburn }
  
  ?audrey dbo:starring ?commonMovie .
  
  # Check if there is a common movie
  FILTER(?movie = ?commonMovie)
  
  # Retrieve all actors from the common movie
  ?commonMovie dbo:starring ?actor .
}
```",4,8,5,2,2,2,3,28,0,0,1,0,0.0,0
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
    ?team rdfs:label ""Ye Jia""@en .
    ?team dbo:member ?player .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the producer of ""Lotus"" by R.E.M.
  ?song dbo:producer ?producer .
  ?song rdfs:label ""Lotus""@en .

  # Ensure the producer is an organization and a band/group
  ?producer a dbo:Band ;
            a dbo:Organization .

  # Step 2: Find associated musical artists of the producer
  ?producer dbo:associatedMusicalArtist ?artist1 .
  
  # Step 3: Find associated musical artists of those artists
  ?artist1 dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Identify Mark Eitzel's band membership
  ?eitzelBand a dbo:Band ;
              dbo:bandMember dbr:Mark_Eitzel .
  
  # Ensure the associated artist is also a member of Mark Eitzel's band
  ?associatedArtist dbo:bandMember ?eitzelBand .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Shatrughan Sinha's profession
SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
}

UNION

# Query for The Shadow (video game) alter ego in comics
SELECT ?character WHERE {
  dbr:The_Shadow_(comics) dbo:alterEgo ?character .
}

UNION

# Query for an actor from Dispatches from Elsewhere
SELECT DISTINCT ?actor WHERE {
  ?series dbo:starring ?actor .
  FILTER regex(str(?series), ""Dispatches_from_Elsewhere"", ""i"")
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?author WHERE {
  # Find Kate Dimbleby's parent
  dbr:Kate_Dimbleby dbo:parent ?parent .

  # Find the author of ""A Picture of Britain""
  OPTIONAL { 
    dbr:A_Picture_of_Britain dbo:author ?author .
  }

  # Ensure that the parent is also the author
  FILTER (?parent = ?author)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?associatedBand WHERE {
  VALUES ?cynthiaMorgan { dbr:Cynthia_Morgan_(singer) }
  
  # Step 1: Retrieve Cynthia Morgan's birth name
  OPTIONAL { 
    ?cynthiaMorgan dbo:birthName ?birthName .
  }

  # Step 2: Find associated musical bands/artists
  OPTIONAL {
    ?cynthiaMorgan dbo:associatedBand ?associatedBand .
  }
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war dbo:participatingCountry dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?war dbo:commander ?commander .
  
  OPTIONAL { ?commander dbo:officeHolder ?office . }
  OPTIONAL { ?commander dbo:politicalPartyMember ?party . }

  FILTER EXISTS {
    ?commander dbp:dateOfBirth ?dob .
    ?commander dbp:dateOfDeath ?dod .
    BIND (YEAR(?dob) AS ?birthYear)
    BIND (YEAR(?dod) AS ?deathYear)
    
    FILTER (?birthYear <= 1654 && (?deathYear >= 1667 || ?deathYear = """"))
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?hillary a dbo:Person ;
           foaf:name ""Hillary Clinton""@en .
  
  OPTIONAL { ?hillary dbo:spouse ?spouse . }
  OPTIONAL { ?book dbo:author ?hillary ; 
             rdfs:label ""Back to Work""@en . }

  FILTER EXISTS { ?book dbo:author ?hillary }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?personName .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",1,1,2,1,1,2,3,28,0,856,906,0.0,0.0,0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?title WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Dipankar De""@en .
  
  ?movie dbo:starring ?actor ;
         dbo:title ?title ;
         dbo:country dbr:India .

}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderOffice ?tenantOfficeHolder WHERE {
  # Find the leader of the Conservative Republican Party (Spain) around 2003
  ?party dbo:wikiPageRedirects dbr:Conservative_Party_(Spain);
         dbo:member ?leader.
  
  ?leader dbo:officeHeld ?leaderOffice;
          dbo:birthDate ?birthDate.

  FILTER(YEAR(?birthDate) < 2003 && YEAR(?birthDate) > 1960) # Assuming the leader was active around this time

  # Find the office holder who was a tenant of the leader's residence
  ?residence dbo:resident ?tenantOfficeHolder;
             dbo:location dbr:Madrid.

  ?tenantOfficeHolder dbo:officeHeld ?tenantOffice.
  
  FILTER(YEAR(?birthDate) < 2003 && YEAR(?birthDate) > 1960) # Assuming the office holder was active around this time

  # Ensure the tenant is linked to the Madrid City Council election
  ?tenantOffice dbp:election dbr:Madrid_City_Council_election,_2003.
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the producer of ""Lotus"" by R.E.M.
SELECT ?producer WHERE {
    dbr:Lotus_(R.E.M._song) dbo:producer ?producer .
}

# Step 2: Check if this producer is an organization and also a band or group
SELECT DISTINCT ?producer WHERE {
    ?producer rdf:type dbo:MusicalArtist ;
              dbo:musicalGroupMember ?group .
    FILTER EXISTS { ?group rdf:type dbo:Band . }
    FILTER EXISTS { ?producer rdf:type dbo:Organization . }
}

# Step 3: Find associated musical artists of this producer
SELECT DISTINCT ?associatedArtist WHERE {
    ?producer dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 4: Identify the associated musical artist(s) of these artists
SELECT DISTINCT ?finalAssociatedArtist WHERE {
    ?associatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birth place of Cece Bell, author of ""El Deafo""
SELECT ?birthPlace WHERE {
  ?author foaf:name ""Cece Bell""@en .
  ?author dbo:work ?work .
  ?work rdfs:label ""El Deafo""@en .
  ?author dbp:birthPlace ?birthPlace .
}

UNION

# Query for the birth place of an awardee related to Vince Gilligan's awards
SELECT ?awardeeBirthPlace WHERE {
  ?award dbo:recipient ?person .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""vince gilligan"")).
  ?person dbp:birthPlace ?awardeeBirthPlace .
}

UNION

# Query for the birth place of the current governor of Virginia
SELECT ?governorBirthPlace WHERE {
  ?governor dbo:officeHolderOf ?office .
  ?office rdfs:label ""Governor of Virginia""@en .
  ?governor dbp:birthPlace ?governorBirthPlace .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Edmund_Hakewill-Smith dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?janusz a dbo:Person ;
          foaf:name ""Janusz Kamiński"" .
  ?janusz dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?photographer WHERE {
  ?photographer a dbo:Person .
  ?photographer dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""photographer""))
}
```",1,1,2,1,1,3,3,71,159,487,778,0.24613003095975233,0.16969050160085378,0.2008843967150979
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete WHERE {
  # Get Marty Pollio's birthday
  dbr:Marty_Polio dbo:birthDate ?martyBirthDate .

  # Find teams associated with Pablo Aimar and Sergio Agüero
  VALUES (?pabloTeam) { 
    ?teamAim IF EXISTS { dbr:Pablo_Aimar dbo:team ?teamAim . }
  }
  VALUES (?sergioTeam) {
    ?teamAgüero IF EXISTS { dbr:Sergio_Agüero dbo:team ?teamAgüero . }
  }

  # Find athletes with the same birthday as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?athleteBirthDate .
  
  FILTER (?athleteBirthDate = ?martyBirthDate)

  # Ensure athlete has played for at least one team that both Pablo Aimar and Sergio Agüero have played for
  ?athlete dbo:team ?commonTeam .
  VALUES (?commonTeam) {
    ?teamAim
    ?teamAgüero
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAmy ?parentOfChildOfAllan ?actorInMovie ?movie WHERE {
  # Parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?parentOfAmy .
  }

  # Child of Allan Arbus and their parent
  OPTIONAL {
    ?child dbo:parent dbr:Allan_Arbus .
    ?child dbo:parent ?parentOfChildOfAllan .
  }
  
  # Actor in a movie that is a work with a person decedent at Los Angeles
  OPTIONAL {
    ?movie dbo:actor ?actorInMovie ;
           rdf:type dbo:Film .
    ?deceased dbo:deathPlace dbr:Los_Angeles,_California ;
              dbo:deceased ?actorInMovie .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find associated musical artist of Nick Curran
SELECT ?associatedArtist WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
}

# Query to find the real name of The Fabulous Thunderbirds' lead member
SELECT ?member ?realName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:bandMember ?member .
  ?member foaf:name ?stageName .
  OPTIONAL { ?member dbo:birthName ?realName . }
  FILTER (CONTAINS(LCASE(?stageName), ""kurtis"")))
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel ?officeLabel
WHERE {
  VALUES ?rajoy { dbr:Mariano_Rajoy }
  
  ?rajoy dbo:party ?party .
  ?rajoy dbo:office ?office .

  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
    
    ?office rdfs:label ?officeLabel .
    FILTER (lang(?officeLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan""@en .
  
  OPTIONAL { 
    ?cynthia dbo:associatedBand ?associatedArtist .
  }
  
  FILTER (lang(?cynthiaLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  ?award dbo:country dbr:New_York_(state) .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
# Step 1: Retrieve Tisha Sterling's parent(s)
SELECT ?parent WHERE {
    dbpedia:Tisha_Sterling dbo:parent ?parent .
}

# Step 2: Get the birth name of the identified parent
SELECT ?birthName WHERE {
    ?parent foaf:name ?name ;
            schema:birthName ?birthName .
}

# Step 3: Identify the landmark at elevation 20.116800000000001347
SELECT ?landmark WHERE {
    ?landmark geo:elevation ""20.1168""^^xsd:float .
}

# Step 4: Determine the ruling party in the location of this landmark
SELECT ?rulingParty WHERE {
    ?landmark dbo:location ?location .
    ?location dbo:government ?government .
    ?government dbo:rulingParty ?rulingParty .
}

# Step 5: Find a person with the same birth name as the parent who is a member of the ruling party
SELECT ?person WHERE {
    ?person foaf:name ?name ;
            schema:birthName ?birthName ;
            dbo:partyMemberOf ?rulingParty .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity a ?type .
  ?entity dbo:country dbr:Ottoman_Empire .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,247,0,0.0,0
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?showMovie ?associatedArtist WHERE {
  # Find Afeez Oyetoro's roles in movies or shows
  ?movieOrShow dbo:starring dbr:Afeez_Oyetoro .
  
  # Identify the associated musical artist of Cynthia Morgan
  ?cynthiaMorgan dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the project is both a show and a movie
  ?movieOrShow rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionSeries))

  # Find common projects between Afeez Oyetoro and Cynthia Morgan's associated artist
  ?movieOrShow dbo:starring ?associatedArtist .

  # Get the actor involved in this project
  ?movieOrShow dbo:starring ?actor .
  
  # Ensure the actor is not just Afeez Oyetoro (to find other actors)
  FILTER (?actor != dbr:Afeez_Oyetoro)

} ORDER BY ?showMovie LIMIT 10
```",3,4,4,2,2,3,2,20,1,9,0,0.1,1.0,0.18181818181818182
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify the author of ""An Invitation to the White House""
  ?book dbo:title ""An Invitation to the White House""@en .
  
  # Link the book to its author
  ?book dbo:author dbr:Henry_Kissinger .

  # Confirm Henry Kissinger's roles as a politician and office holder, and his command in the Third Taiwan Strait Crisis
  OPTIONAL { dbr:Henry_Kissinger dbo:occupation dbr:Politician . }
  OPTIONAL { dbr:Henry_Kissinger dbo:officeHolderOf ?office . }
  OPTIONAL { dbr:Henry_Kissinger dbo:militaryCommanderOf dbr:Third_Taiwan_Strait_Crisis . }

  # Find Henry Kissinger's spouse
  dbr:Henry_Kissinger dbo:spouse ?spouse .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?parentEugeneCattin ?parentAllanArbusChild
WHERE {
  # Actor of the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:actor ?actor .

  # Parent of Eugène Cattin based on his profession
  ?eugeneCattin foaf:name ""Eugène Cattin""@en .
  ?eugeneCattin dbp:profession ?profession .
  ?eugeneCattin foaf:parent ?parentEugeneCattin .

  # Parent of the child of Allan Arbus
  ?allanArbus foaf:name ""Allan Arbus""@en .
  ?child foaf:parent ?allanArbus ;
         foaf:parent ?parentAllanArbusChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a foaf:Person ;
          foaf:name ""Robert Lamar Thompson"" .
  
  ?person dbo:profession ?profession .

  FILTER (
    (CONTAINS(LCASE(STR(?profession)), ""singer"") ||
     CONTAINS(LCASE(STR(?profession)), ""band""))
  )
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administrator (SAMPLE(?deathPlaceLabel) AS ?deathPlace)
WHERE {
  # Nicholas II's birthplace
  dbr:Nicholas_II_of_Russia dbo:nationality dbr:Russian_Empire .
  
  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?bertaggiaBirthPlace .

  # Administrators of Russian Empire
  ?administrator a dbo:HeadOfState ;
                dbo:country dbr:Russian_Empire ;
                dbp:deathPlace ?deathPlace .
  
  # Filter administrators who died in Sandro Bertaggia's birthplace
  ?deathPlace rdfs:label ?deathPlaceLabel .
  FILTER (lang(?deathPlaceLabel) = 'en')
  FILTER (?bertaggiaBirthPlace = ?deathPlace)
}
GROUP BY ?administrator
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
  # Identify the Partido Popular (Conservative Republican Party) in Spain
  dbr:Partido_Popular_(Spain) dbo:leader ?leader .
  
  # Ensure that the leader is a politician, possibly by checking their occupation or role
  OPTIONAL { ?leader dbo:occupation dbr:Politician . }
  
  # Retrieve the office held by this leader within the party
  ?leader dbo:office ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the movie featuring Dipankar De and its main actor's birthplace
SELECT DISTINCT ?movie ?actor ?birthPlaceActor WHERE {
  ?movie dbo:starring dbr:Dipankar_De ;
         a dbo:Film .
  ?movie dbo:country dbr:India .
  ?movie dbo:director ?director .
  ?actor dbo:actedIn ?movie ;
         dbo:birthPlace ?birthPlaceActor .
}

# Query for the birthplace of Ebrahim Alkazi
SELECT DISTINCT ?birthPlaceAlkazi WHERE {
  dbr:Ebrahim_Alkazi dbo:birthPlace ?birthPlaceAlkazi .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?koichoWar ?yamazaEntity WHERE {
  # Identify Koichiro Matsuura and his involvement in any war
  ?koicho a dbo:Person ;
          foaf:name ""Koichirō"" ;
          dbo:birthName ""Koichiro Matsuura"" .
  
  OPTIONAL { 
    ?koicho dbo:occupation dbr:Director-General_of_UNESCO .
    ?koicho dbo:memberOf ?organization .
    ?organization dbo:member ?war .
    ?war a dbo:MilitaryConflict ;
         rdfs:label ?koichoWar .
  }
  
  # Identify Yamaza Enjirō's birthplace
  ?yamaza a dbo:Person ;
          foaf:name ""Yamaza Enjirō"" .
  ?yamaza dbo:birthPlace ?birthPlace .

  # Find notable entities at the birthplace of Yamaza Enjirō
  ?entity a dbo:Place ;
          rdfs:label ?yamazaEntity ;
          dbo:location ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Paula Abdul""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization a dbo:SportsTeam .
  ?organization a dbo:SoccerClub .
  ?organization dbo:location dbr:Hong_Kong .
  FILTER(CONTAINS(LCASE(?organization), ""hong kong c""))
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the ruling party in Louisiana
  ?state a dbo:State ;
         foaf:name ""Louisiana""@en .
  
  ?state dbo:rulingParty ?party .

  # Find a member of this party
  ?member a foaf:Person ;
          dbrp:memberOf ?party ;
          foaf:name ?partyMember .
}
```",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Step 1: Find the politician from Chappaqua, New York
  ?person dbo:nationality dbr:United_States ;
          dbo:residence dbr:Chappaqua,_New_York ;
          a dbo:Politician .

  # Step 2: Check if they were a commander in World War II
  ?person dbo:occupation dbr:World_War_II_commander .

  # Step 3: Link to USS Arcadia (ID-1605)
  ?ship dbr:USS_Arcadia_(ID-1605) ;
        dbo:commander ?person .

  # Step 4: Identify authored books
  ?author dbr:George_H._W._Bush ; # Assuming George H. W. Bush based on known data
          dbo:writtenWork ?work .
  
  FILTER EXISTS { ?work a dbo:Book }
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?person dbo:nationality dbr:Spain .

  ?event dbo:agent ?person ;
         dbo:positionHeld ?office .

  ?office dbo:location ?place .
  ?place a dbo:Country .

  BIND(?place AS ?country)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?youngkinBirthPlace ?awardeeBirthPlace WHERE {
  # Birthplace of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .

  # Awards and nominations received by Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    
    # Assuming we are interested in a specific award, e.g., an Emmy for ""Breaking Bad""
    FILTER(CONTAINS(LCASE(STR(?award)), ""emmy"") || CONTAINS(LCASE(STR(?award)), ""breaking bad""))

    # Find the awardee of that award
    ?award dbo:recipient ?awardee .
    
    # Birthplace of the awardee
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Find Janet Gaynor's notable movie
SELECT ?movie WHERE {
  dbr:Janet_Gaynor dbo:notableWork ?work .
  ?work rdf:type dbo:Film .
  FILTER(CONTAINS(LCASE(STR(?work)), ""sunrise a song of two humans""))
}

# Find the producer of The Adventures of Tom Sawyer (1938 film)
SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:producer ?producer .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royPartyLabel ?fatherName ?fatherPartyLabel WHERE {
  # Find Roy Barreras' political party
  ?roy a dbo:Person ;
       foaf:name ""Roy Barreras""@en ;
       dbo:partyAffiliation ?royParty .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?royParty rdfs:label ?royPartyLabel .
  }
  
  # Find Sofía Petro's father
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en ;
         dbp:father ?father .

  # Find the political party of Sofía Petro's father
  ?father a dbo:Person ;
          foaf:name ?fatherName ;
          dbo:partyAffiliation ?fatherParty .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?fatherParty rdfs:label ?fatherPartyLabel .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?parent WHERE {
  # Find the author of ""A Picture of Britain""
  dbr:A_Picture_of_Britain dbo:author ?author .

  # Assume we have a notable native of London, e.g., David Bowie
  dbr:David_Bowie dbo:nativePlace dbr:London ;
                  dbo:parent ?parent .

  # Ensure the parent is both an artist and a musical artist
  ?parent rdf:type dbo:Artist .
  ?parent rdf:type dbo:MusicalArtist .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgoOccupation ?actorName ?actorOccupation WHERE {
  # Find Lamont Cranston's occupation
  dbr:Lamont_Cranston dbo:occupation ?alterEgoOccupation .
  
  # Find the actor who played The Shadow and their profession
  OPTIONAL {
    ?shadowAdaptation dbo:starring ?actorResource .
    ?actorResource rdfs:label ?actorName .
    FILTER(CONTAINS(LCASE(?actorName), ""the shadow""))
    
    ?actorResource dbo:occupation ?actorOccupation .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?residence
WHERE {
  ?person rdf:type foaf:Person .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:country dbr:Spain .
  ?person dbo:residence ?residence .
  FILTER EXISTS { ?residence rdf:type schema:Country }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
# Query to find the band associated with Bob Thompson (musician)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Bob Thompson"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```

```sparql
# Query to find the profession of The Shadow's alter ego, Lamont Cranston
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person a dbo:FictionalCharacter ;
          foaf:name ""The Shadow"" .
  OPTIONAL { ?person dbo:alterEgo ?alterEgo . }
  OPTIONAL { ?alterEgo dbo:occupation ?profession . }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherOfChild WHERE {
  # Ferdinand III's child
  ?childFerdinand3 dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Cecilia Renata of Austria's father
  ?ceciliaRenata dbp:father ?fatherCeciliaRenata .

  # Commander in the Thirty Years' War who is also a parent figure
  ?commander dbo:role dbr:Thirty_Years'_War ;
             dbo:parent ?childFerdinand3 .
  
  # The father of this interconnected lineage
  ?fatherOfChild dbo:parent ?commander .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child <http://dbpedia.org/resource/Margarete_Sophie_of_Austria> .
  
  # Find children of this parent
  ?parent dbo:child ?child .

  # Filter to find those with a royal title
  OPTIONAL { ?child dbp:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""archduke"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfatherLabel WHERE {
  ?na'od rdfs:label ""Na'od""@en .
  ?na'od dbo:father ?father .
  ?father dbo:father ?grandfather .
  
  OPTIONAL { ?father dbo:positionHeld ?position1 . }
  OPTIONAL { ?grandfather dbo:positionHeld ?position2 . }

  FILTER EXISTS { ?father dbo:positionHeld ?position1 } || 
               EXISTS { ?grandfather dbo:positionHeld ?position2 }
  
  ?grandfather rdfs:label ?grandfatherLabel .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for The Shadow's alter ego
SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ""The Man Who Laughs"" .
  dbr:Lamont_Cranston rdfs:label ""Lamont Cranston""@en .
  FILTER(CONTAINS(LCASE(?alterEgo), ""lamont cranston""))
}

UNION

# Query for Bob Thompson's band
SELECT ?band WHERE {
  OPTIONAL { 
    dbr:Bob_Thompson dbo:memberOf ?band .
  }
  FILTER(!isBlank(?band))
}

UNION

# Query for the producer of Coke Studio Philippines
SELECT ?producer WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,1,0,0,1.0,1.0,1.0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?conflictName WHERE {
  # Find military forces involved in the Battle of Cape Finisterre (1805)
  {
    SELECT DISTINCT ?battleMilitaryForce WHERE {
      ?battle dbo:militaryUnit ?battleMilitaryForce .
      ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
    }
  }

  # Find military conflict related to William Bayne
  UNION
  {
    SELECT DISTINCT ?conflictName WHERE {
      ?event dbo:agent dbr:William_Bayne ;
             a dbo:MilitaryConflict .
      ?event rdfs:label ?conflictName .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantSantiagoCompostela ?residenceCountryQuirós ?officeFeijóo
WHERE {
  # Santiago de Compostela's country
  dbr:Santiago_de_Compostela dbo:country dbr:Spain .
  BIND(dbr:Spain AS ?tenantSantiagoCompostela)

  # Álvaro Quirós' residence country
  OPTIONAL { 
    ?quirós dbo:residence ?residenceQuirós .
    ?residenceQuirós dbo:country ?residenceCountryQuirós .
  }

  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:office ?officeFeijóo .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?predecessor WHERE {
  # Finding the child of Saw Shwe Khet
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  
  # Finding the child of Saw Min Hla
  ?child2 dbo:parent dbr:Saw_Min_Hla .

  # Finding the predecessor (parent) of the child of Saw Shwe Khet
  ?predecessor1 dbo:child ?child1 .

  # Finding the predecessor (parent) of the child of Saw Min Hla
  ?predecessor2 dbo:child ?child2 .

  FILTER (?predecessor1 = ?predecessor2)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Retrieve the birthplace of Yandamuri Veerendranath
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?yvBirthPlace .

  # Retrieve the alma mater of Chennupati Jagadish
  dbr:Chennupati_Jagadish dbo:almaMater ?cjAlmaMater .

  # Find a common entity between the birthplace and alma mater
  VALUES (?entity1 ?entity2) {
    ( ?yvBirthPlace ?cjAlmaMater )
    ( ?cjAlmaMater ?yvBirthPlace )
  }
  
  ?commonEntity rdfs:label ?entityLabel .
  FILTER (
    ?entity1 = ?commonEntity || 
    ?entity2 = ?commonEntity
  )

  # Ensure the common entity is a place or institution
  OPTIONAL { ?commonEntity rdf:type dbo:Place . }
  OPTIONAL { ?commonEntity rdf:type dbo:EducationalInstitution . }

  FILTER EXISTS {
    ?commonEntity rdfs:label ?entityLabel .
  }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?vitesseManager ?bochumManager ?nativeCountry
WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?vitesseTeam a dbo:SoccerClub ;
              dbo:manager ?vitesseManager .
  FILTER(CONTAINS(LCASE(STR(?vitesseTeam)), ""sbv vitesse"") &&
         CONTAINS(LCASE(STR(?vitesseTeam)), ""2020-21"")).

  # Manager of VfL Bochum
  ?bochumTeam a dbo:SoccerClub ;
              dbo:manager ?bochumManager .
  FILTER(CONTAINS(LCASE(STR(?bochumTeam)), ""vfL bochum"") &&
         CONTAINS(LCASE(STR(?bochumTeam)), ""2020-21"")).

  # Native country of Helmut Kohl
  dbr:Helmut_Kohl dbo:nationality ?nativeCountry .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1955 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 2)
  
  OPTIONAL { ?person foaf:name ?birthName . }
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerJohnnyDoughboy ?producerHighSocietyBlues WHERE {
  # Find the actor for ""Johnny Doughboy""
  ?actorJohnnyDoughboy dbo:actor dbr:Johnny_Doughboy .
  
  # Find this actor's claim to fame (a notable work)
  ?workJohnnyDoughboy dbo:performer ?actorJohnnyDoughboy .

  # Determine the producer of that work
  ?workJohnnyDoughboy dbo:producer ?producerJohnnyDoughboy .

  # Find the actor for ""High Society Blues""
  ?actorHighSocietyBlues dbo:actor dbr:High_Society_Blues .
  
  # Find this actor's claim to fame (a notable movie)
  ?movieHighSocietyBlues dbo:performer ?actorHighSocietyBlues ;
                        a dbo:Film .

  # Determine the producer of that movie
  ?movieHighSocietyBlues dbo:producer ?producerHighSocietyBlues .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ventirisWar ?zervasWar ?athensEntity WHERE {
  # Konstantinos Ventiris and his wars
  VALUES ?ventiris { dbr:Konstantinos_Ventiris }
  ?ventiris dbo:leader ?ventirisGroup .
  ?ventirisGroup dbo:participatedInWar ?ventirisWar .

  # Napoleon Zervas and his wars
  VALUES ?zervas { dbr:Napoleon_Zervas }
  ?zervas dbo:leader ?zervasGroup .
  ?zervasGroup dbo:participatedInWar ?zervasWar .

  # Entity in Athens related to these wars
  OPTIONAL {
    ?athensEntity a dbo:Place ;
                  dbp:name ""Athens"" ;
                  dbo:locationDuringTime ?warEvent .
    FILTER(?ventirisWar = ?warEvent || ?zervasWar = ?warEvent)
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find Eric Clapton's band membership
  dbr:Eric_Clapperton dbo:bandMember ?band .

  # Find Nick Curran's birth details and associated musical artist
  OPTIONAL { 
    dbr:Nick_Curran dbo:birthPlace ?birthPlace .
    dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
  }

  FILTER EXISTS {
    ?associatedArtist a dbo:MusicalArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ducas ?ducasWorks ?commander WHERE {
  # Find George Ducas and his works
  ?ducas a dbo:Writer ;
         foaf:name ""George Ducas"" ;
         dbo:work ?ducasWorks .

  # Find commanders in the Great Turkish War
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInBattle ?battle ;
             foaf:name ?name .
  
  # Filter battles to those in the Great Turkish War
  ?battle dbo:wikiPageRedirects dbr:Great_Turkish_War .

  # Optional: Look for any connection between Ducas and commanders
  OPTIONAL {
    ?ducasWorks dbo:reference ?commander .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouseOfRoyalParent
WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip dbo:wikiPageRedirects db:Philip_Despot_of_Romania .

  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip .
  ?parent rdf:type ?royaltyType .
  
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember) 
  )

  # Step 3: Determine the spouse of this royal parent
  ?spouseOfParent dbo:spouse ?parent .

  # Step 4: Identify Maria of Bytom
  ?maria dbo:wikiPageRedirects db:Maria_of_Bytom .

  # Step 5: Find her spouse
  ?spouseOfMaria dbo:spouse ?maria .

  # Step 6: Determine the parent of this spouse who is royalty
  ?parentOfSpouse dbo:child ?spouseOfMaria .
  ?parentOfSpouse rdf:type ?royaltyType2 .

  FILTER (
    ?royaltyType2 IN (dbo:Monarch, dbo:RoyalFamilyMember) 
  )

  # Step 7: Identify the spouse of this royal parent
  ?spouseOfRoyalParent dbo:spouse ?parentOfSpouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones"" .
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbo:Country .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,2,2,9,0,0,63421,0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Cat Country""@en .
  OPTIONAL { ?book dbo:country ?country . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Step 1: Find Linda Bruckheimer's birth name and identify her.
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
    ?person a dbo:Person ;
            foaf:name ""Linda Bruckheimer""@en .
    OPTIONAL { ?person dbo:birthName ?birthName . }
}

# Step 2: Find the producer of ""12 Strong"".
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
    dbr:12_Strong dbo:director ?director ;
                  dbp:producer ?producer .
}

# Assuming we have identified Linda Bruckheimer's birth name and the producer from above queries,
# Step 3: Find the spouse of the person who matches both criteria.
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
    ?person a dbo:Person ;
            foaf:name ""Linda Bruckheimer""@en ;
            dbo:birthName ?birthName .
    ?film dbp:producer ?person .
    FILTER(?film = dbr:12_Strong)
    
    OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?amyArbus { dbr:Amy_Arbus }
  ?amyArbus dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?position WHERE {
  ?duchy a dbo:Duchy ;
        rdfs:label ""Duchy of Schleswig""@en .
  
  OPTIONAL {
    ?administration dbo:administrativeUnit ?duchy ;
                    dbo:head ?mayor .
    
    ?mayor dbo:occupation ?position .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war ?commander ?writer
WHERE {
  # Find wars that are both societal events and television shows
  ?war a dbo:War ;
       dbo:depictedIn dbr:Category:Television_series_by_war .

  # Find commanders in these wars
  ?commander dbo:commanded ?war ;
            rdfs:label ?commanderLabel .
  
  FILTER(CONTAINS(LCASE(?commanderLabel), ""jean baptist comte d'arco""))

  OPTIONAL {
    # Find works by George Ducas and their writers
    ?work dbo:author dbr:George_Ducas ;
          dbo:writtenBy ?writer .
    
    ?writer rdfs:label ?writerLabel .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  # Antoine, Duke of Lorraine
  ?antoine a dbo:Duke ;
           foaf:name ""Antoine, Duke of Lorraine""@en .
  
  # Find children of Antoine who are royalty
  ?child dbo:childOf ?antoine ;
         rdf:type dbo:Royalty .

  # Find the parent of this child
  ?parent dbo:parentOf ?child .

  # Ensure the parent is both royalty and noble
  ?parent rdf:type dbo:Royalty, dbo:Noble .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?archduchess a dbo:Archduchess ;
               foaf:name ""Helena of Austria""@en .
  
  ?spouse dbo:spouse ?archduchess .

  ?child dbp:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  ?predecessor dbo:successor ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sibling WHERE {
  # Identify Roger II and Elvira of Castile
  ?roger a dbo:Monarch ;
         dbo:spouse ?elvira .
  ?elvira a dbo:Queen ;
          dbo:spouse ?roger .

  # Find their children
  ?child dbo:parent ?roger ;
         dbo:parent ?elvira .

  # For each child, find the sibling (other child of either Roger or Elvira)
  ?sibling dbo:parent ?roger ;
           dbo:parent ?elvira .
  
  FILTER(?child != ?sibling)

  # Ensure the sibling is royalty
  ?sibling a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for actor associated with T.I.'s album ""Paper Trail""
SELECT ?actor WHERE {
  dbr:Paper_Trail_(album) dbo:artist dbr:T.I.
  OPTIONAL { 
    dbr:Paper_Trail_(album) dbo:associatedActor ?actor .
  }
}

UNION

# Query for the professional alter ego of The Shadow
SELECT ?professionalRole WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?professionalRole .
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bobby Shmurda""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
# Query for the father of Baeda Maryam I
SELECT ?father WHERE {
  ?baedaMaryam1 dbo:father ?father .
  ?baedaMaryam1 rdfs:label ""Baeda Maryam I""@en .
}

UNION

# Query for the alter ego of The Shadow
SELECT ?alterEgo WHERE {
  ?theShadow dbo:alterEgo ?alterEgo .
  ?theShadow rdfs:label ""The Shadow (character)""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  FILTER (str(?johnMcDermott) = ""John McDermott (artist)"")
  
  ?deathPlace a dbo:Settlement .

  OPTIONAL { 
    ?deathPlace dbp:rulingParty ?rulingParty .
    ?rulingParty a dbo:PoliticalParty ;
                a dbo:Organization .
  }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX db: <http://dbpedia.org/resource/>

SELECT ?settlement ?location WHERE {
  ?settlement a dbo:Settlement .
  ?settlement dbo:country db:England .
  OPTIONAL { ?settlement geo:lat ?latitude . }
  OPTIONAL { ?settlement geo:long ?longitude . }
}
```",1,3,2,1,1,3,2,20,0,2259,6,0.0,0.0,0
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?teamMolina ?teamAgüero ?teamAimar
WHERE {
  # Teams for Juan Carlos Molina
  { 
    ?playerMolina a dbo:FootballPlayer ;
                  foaf:name ""Juan Carlos Molina"" ;
                  dbp:team ?teamMolina .
  }
  
  # Teams for Sergio Agüero
  { 
    ?playerAgüero a dbo:FootballPlayer ;
                  foaf:name ""Sergio Agüero"" ;
                  dbp:team ?teamAgüero .
  }

  # Teams for Pablo Aimar
  { 
    ?playerAimar a dbo:FootballPlayer ;
                 foaf:name ""Pablo Aimar"" ;
                 dbp:team ?teamAimar .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Identify Shatrughan Sinha by his birth name
  ?person rdfs:label ""Shatrughan Sinha""@en .
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""richard grant esterhuysen""))

  # Find movies/shows associated with Shatrughan Sinha that are also television shows
  ?film dbo:starring ?person ;
        a ?type .
  VALUES ?type { dbr:Television_show }

  # Retrieve actors from these productions
  ?film dbo:starring ?actor .
  
  FILTER(?actor != ?person) # Exclude Shatrughan Sinha himself
}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?deathPlace WHERE {
  VALUES (?person ?name) {
    (dbr:Caryn_Jones ""Carolyn Jones"")
    (dbr:Douglas_Fairbanks_Jr. ""Douglas Fairbanks Jr."")
    (dbr:Reed_Howes ""Reed Howes"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frédéric Bouraly""@en .
  
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person foaf:jobTitle ?occupation . }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?birthDate WHERE {
  # Get Marcelo Sarmiento's birthdate
  VALUES (?marceloSarmiento) { dbr:Marcelo_Sarmiento }
  
  ?marceloSarmiento dbo:birthday ?birthDate .

  # Find individuals who are both soccer players and managers born on the same date
  ?person a dbo:SoccerPlayer ;
          dbo:managerOf ?team ;
          dbo:birthday ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?birthDate)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person a dbpedia-owl:Person ;
          rdfs:label ""Hashiba Hidekatsu""@en .
  
  OPTIONAL { 
    ?person dbp:participatedIn ?war .
  }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?capital WHERE {
  ?region dbo:timeZone dbr:Eastern_European_Time .
  ?region dbo:capital ?capital .
}
```",2,3,3,2,1,3,2,20,0,44,159,0.0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(STR(?occupation)), ""actress""))
  }
  OPTIONAL {
    ?person dcterms:subject <http://dbpedia.org/resource/Category:Actresses> .
  }
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,2,20,0,162,19241,0.0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Renée of Bourbon""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(LANG(?spouseLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?claudius a dbo:Person ;
            foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  
  ?child dbo:childOf ?claudius .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?workTitle WHERE {
  ?work dbo:author dbr:Hillary_Clinton .
  ?work rdf:type dbo:Book .
  BIND (STR(?work) AS ?workTitle)
}
```",1,3,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbp:name ""Hillary Clinton""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?pacelyArtist ?anthologyWriter WHERE {
  # Identify $pacely as a musical artist
  dbr:$pacely dbo:profession dbr:Musical_artist .
  
  # Find the writer of ""The Live Anthology"" who is also a musical artist
  dbr:The_Live_Anthology dbo:author ?anthologyWriter ;
                         dbo:genre dbr:Live_album .
  ?anthologyWriter dbo:profession dbr:Musical_artist .

  # Check for any association between $pacely and the writer of ""The Live Anthology""
  OPTIONAL {
    ?association dbo:agent1 dbr:$pacely ;
                 dbo:agent2 ?anthologyWriter .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?yeshaqI dbo:parent ?parent .
  FILTER (?yeshaqI = dbpedia:Yeshaq_I) .
  
  ?parent rdf:type dbo:Monarch .
  
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Emilia Yancheva Valeva""@en .
  ?person rdfs:label ?currentName .
  FILTER(LANG(?currentName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie (GROUP_CONCAT(?actor; separator="", "") AS ?actors)
WHERE {
  ?movie dbo:starring ?actor .
  FILTER (?actor = dbp:HerschelBernardi) .
  
  ?movie dbo:child ?child1 .
  ?movie dbo:child ?child2 .

  FILTER (?child1 = dbp:DoonArbus && ?child2 = dbp:AmyArbus)
}
GROUP BY ?movie
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?song dbo:artist dbr:T.I. ;
        rdfs:label ""What You Know""@en .
  ?song dbo:album ?album .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentMary ?parentPatrick ?regionCountry
WHERE {
  # Find the parent of Mary Elphinstone, Lady Elphinstone
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parentMary .

  # Find the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parentPatrick .

  # Determine William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is classified as both a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Bind the birthplace to a variable for output
  BIND(?birthPlace AS ?regionCountry)
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          dbp:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?child a dbo:Person ;
         dbp:name ""Arthur Stanley (politician)""@en ;
         dbo:father ?person .

  ?person dbo:father ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label
WHERE {
  ?entity dbo:country dbr:Japan .
  ?entity rdfs:label ?label .
}
ORDER BY ?label
LIMIT 100
```",1,1,2,1,1,3,2,20,100,100,8816,0.5,0.011215791834903545,0.02193944712593243
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1Label ?war2Label WHERE {
  # Toyotomi Hidenaga's war
  dbr:Toyotomi_Hidenaga dbo:spouseOrPartner ?partner .
  ?partner dbo:child ?hideyoshi .
  ?hideyoshi dbo:father ?hidenaga .
  
  ?hidenaga dbo:participatedIn ?war1 .
  ?war1 rdfs:label ?war1Label .

  # Toyotomi Hideyori's wars
  ?hideyoshi dbo:child ?hideyori .
  ?hideyori dbo:participatedIn ?war2 .
  ?war2 rdfs:label ?war2Label .

  FILTER (lang(?war1Label) = 'en')
  FILTER (lang(?war2Label) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?battle { dbr:Battle_of_Vienna_(1683) }
  
  ?force dbo:participatedIn ?battle .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person foaf:name ""Rainer Weiss""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Amasa Tracy""@en .
  
  ?event dbo:agent ?person ;
         dbo:place dbr:Charleston,_South_Carolina ;
         dbo:subject dbc:War_of_1812 .

  OPTIONAL { ?event rdfs:comment ?description }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician WHERE {
  # Step 1: Find the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  
  # Step 2: Find the parent of this awardee who is also the father of Arthur Stanley (politician)
  ?parent dbo:child ?awardee ;
          dbo:child dbp:Arthur_Stanley_(politician) .

  # Step 3: Identify Edward Stanley, 17th Earl of Derby and his children
  ?edward dbp:title ""Earl_of_Derby""@en .
  FILTER(?edward = <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby>)
  
  # Step 4: Find the child of Edward Stanley, 17th Earl of Derby
  ?child dbo:parent ?edward .

  # Step 5: Identify the parent of that child who is both a politician and an office holder
  ?politician dbo:child ?child ;
              rdf:type dbo:Politician ;
              dbo:officeHolder true .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Apache Indian""@en .
  OPTIONAL { ?person dbo:composer ?work . }
  OPTIONAL { ?person dbo:lyricist ?work . }
  FILTER EXISTS { ?work a dbo:Songs . } # Ensuring the work is musical
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?spouse
WHERE {
  ?book dbo:title ""An Invitation to the White House""@en .
  ?book dbo:author ?author .
  ?author rdfs:label ""Bill Clinton""@en .

  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          rdf:type dbo:OfficeHolder .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  # Richard E. Grant's television show
  ?grantFilm dbo:starring dbr:Richard_E._Grant .
  ?grantFilm a dbo:TelevisionShow .

  # Find professionals who match both criteria
  ?professional dbo:profession ?sinhaProfession ;
                dbo:film ?grantFilm .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild WHERE {
  # Step 1: Identify Constance of Burgundy and her spouse
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  ?spouse dbo:spouse ?constance .

  # Step 2: Find their child
  ?child dbo:parent ?constance ;
         dbo:parent ?spouse .

  # Step 3: Identify the spouse of this child
  ?grandSpouse dbo:spouse ?child .

  # Step 4: Find the child of this spouse
  ?royalChild dbo:parent ?grandSpouse .
  
  # Ensure the royalChild is a member of royalty
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Additional filter to ensure lineage from Roger II of Sicily
  ?child dbp:father <http://dbpedia.org/resource/Roger_II_of_Sicily> .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person rdfs:label ""Gustavo Petro""@en .
  ?person dbo:politicalParty ?party .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Shwe Khet""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?marianoOffice ?albertoResidence ?partyLeaderOffice
WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoOffice .

  # Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoResidence .

  # Miguel Maura's political party and its leader
  {
    SELECT DISTINCT ?partyLeader WHERE {
      ?miguelMaura dbo:member ?politicalParty .
      ?politicalParty dbo:leader ?partyLeader .
      FILTER (str(?miguelMaura) = ""Miguel_Maura"")
    }
  
    # Leader's office
    ?partyLeader dbo:office ?partyLeaderOffice .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse WHERE {
  # Step 1: Find Saw Min Hla's child
  ?sawMinHla dbo:child ?child .
  FILTER(STR(?sawMinHla) = ""Saw_Min_Hla"") .

  # Step 2: Identify Myat Hpone Pyo's father
  ?myatHponePyo dbo:father ?father .
  FILTER(STR(?myatHponePyo) = ""Myat_Hpone_Pyo"") .

  # Step 3: Find the spouse of Myat Hpone Pyo's father
  ?father dbo:spouse ?spouse .

  # Step 4: Ensure that this spouse is a royalty
  OPTIONAL { ?spouse dbp:royaltyTitle ?title . }
  FILTER(BOUND(?title))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  # For Sam Concepcion
  VALUES (?name) { ""Sam Concepcion"" }
  OPTIONAL {
    ?person rdfs:label ?name .
    FILTER (lang(?name) = 'en')
    ?person dbo:occupation ?profession .
    FILTER CONTAINS(LCASE(str(?profession)), ""actor"")
    FILTER CONTAINS(LCASE(str(?profession)), ""singer"")
    FILTER CONTAINS(LCASE(str(?profession)), ""television host"")
  }

  # For The Shadow's alter ego
  VALUES (?alterEgo) { ""Lamont Cranston"" }
  OPTIONAL {
    ?person rdfs:label ?alterEgo .
    FILTER (lang(?alterEgo) = 'en')
    ?person dbo:occupation ?profession .
  }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?isabella a dbo:Person ;
            rdfs:label ""Isabella of Austria""@en .
  
  ?isabella dbo:father ?father .

  ?maximilian a dbo:Person ;
              rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  
  ?maximilian dbo:child ?father .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild ?grandchildLabel WHERE {
  # Find Alexander of Württemberg's resource
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbp:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1804 && YEAR(STRDT(?deathDate, xsd:date)) = 1881)

  # Find his children
  ?alexander dbo:child ?child .

  # For each child, find their children (i.e., Alexander's grandchildren)
  ?child dbo:child ?grandchild .
  
  # Get labels for the grandchild
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
# Query for The Shadow's professional identity
SELECT ?realName WHERE {
  dbpedia:Shadow_fictional_character dbo:alterEgoOf ?character .
  ?character foaf:name ""Lamont Cranston""@en .
}

# Query for Bob Thompson's profession and band/singer association
SELECT DISTINCT ?profession ?bandSinger WHERE {
  { 
    dbpedia:Bob_Thompson_musical_artist dbo:occupation ?profession .
    FILTER (CONTAINS(LCASE(?profession), ""musician""))
  }
  UNION
  {
    dbpedia:Bob_Thompson_musical_artist dbo:associatedBandOrSinger ?bandSinger .
  }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent
WHERE {
  ?edward rdf:type dbo:Person ;
          rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?frederick rdf:type dbo:Person ;
             rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .

  ?parent dbo:child ?edward ;
          dbo:child ?frederick ;
          rdf:type dbo:Politician .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player dbo:coach dbr:Aleksandr_Filimonov .
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find the child of Saw Shwe Khet and Saw Min Hla
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child dbo:parent dbr:Saw_Min_Hla .

  # Identify Myat Hpone Pyo's father
  ?father dbp:child dbr:Myat_Hpone_Pyo .

  # Find the spouse of Myat Hpone Pyo's father
  ?spouse dbo:spouse ?father .
  
  # Check if this spouse is royalty
  ?spouse a dbo:RoyalPerson .

  # Identify the predecessor of this royal spouse
  ?predecessor dbo:successor ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneMilitaryForce ?calderMilitaryForce WHERE {
  # Find military force related to William Bayne's war (military conflict and event)
  ?war a dbo:MilitaryConflict ;
      dbo:eventType dbr:Military_conflict ;
      dbo:associatedWith dbr:William_Bayne .
  
  ?bayneMilitaryForce dbo:participatesIn ?war .

  # Find military force related to Robert Calder's societal event
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:associatedWith dbr:Robert_Calder .
  
  ?calderMilitaryForce dbo:participatesIn ?event .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorResidence ?commanderResidence WHERE {
  # Find the Mayor of Madrid in 2003
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Madrid ;
         dbo:termStart ?start .
  FILTER (YEAR(?start) = 2003)

  # Get the residence or office location for the mayor
  OPTIONAL { ?mayor dbo:residence ?mayorResidence }

  # Find a key political/military figure in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:country dbr:Central_African_Republic ;
             dbo:officeHolder true .

  # Get the residence or command center for the commander
  OPTIONAL { ?commander dbo:residence ?commanderResidence }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Linda Sue Cobb"" .
  OPTIONAL { ?person foaf:name ?currentName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?hashibaHidekatsu a dbo:Person ;
                    rdfs:label ""Hashiba Hidekatsu""@en .
  
  OPTIONAL { ?hashibaHidekatsu dbo:spouse ?spouse . }
  OPTIONAL { ?hashibaHidekatsu dbo:child ?child . }
  OPTIONAL { ?hashibaHidekatsu dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?hashibaHidekatsu dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?hashibaHidekatsu dbo:occupation ?occupation . }

  OPTIONAL {
    ?event a dbo:Event ;
           rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""battle of sekigahara"") || CONTAINS(LCASE(?warLabel), ""sekigahara""))
    ?hashibaHidekatsu dbo:participatedIn ?event .
  }

  OPTIONAL {
    ?event a dbo:Event ;
           rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""battle"") || CONTAINS(LCASE(?warLabel), ""war""))
    ?hashibaHidekatsu dbo:participatedIn ?event .
    ?event dbo:description ?description .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?individual WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:surname ""Margarete Sophie of Austria""@en .
  ?child dbo:parent ?margareteSophie .

  # Find the great-grandchild of Alexander of Württemberg (1804-1881)
  ?alexander dbo:birthDate ?date ;
             dbo:surname ""Alexander of Württemberg""@en .
  FILTER(?date >= ""1804-01-01""^^xsd:date && ?date <= ""1881-12-31""^^xsd:date) .

  ?grandchild dbo:parent ?childOfAlex .
  ?childOfAlex dbo:parent ?greatGrandchildOfAlex .
  ?greatGrandchildOfAlex dbo:parent ?alexander .

  # Find the predecessor of Carl, Duke of Württemberg
  ?carl dbp:title ""Duke of Württemberg""@en ;
        dbo:predecessor ?predecessor .

  # Combine conditions to find the individual who satisfies all criteria
  FILTER(?child = ?greatGrandchildOfAlex && ?individual = ?predecessor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?locationInPoland ?war
WHERE {
  # Find locations in Poland associated with Alexander Suvorov
  ?svo dbo:placeOfBirth ?locationInPoland .
  FILTER EXISTS { ?locationInPoland wdt:P17 wd:Q38 } .

  # Identify wars or military campaigns involving Suvorov
  ?svo dbo:militaryConflict ?war .
  
  # Ensure the subject is Alexander Suvorov
  VALUES ?svo { dbr:Alexander_Suvorov }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?parentName WHERE {
  # Identify the film resource
  VALUES ?film { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  
  # Find individuals who starred in the film and have both professions
  ?person dbo:starring ?film .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = ""Photographer"" && str(?occupation2) = ""Actor"") ||
    (str(?occupation2) = ""Photographer"" && str(?occupation1) = ""Actor"")
  )
  
  # Retrieve parent information
  OPTIONAL { ?person dbo:parent ?parent . }
  BIND(STR(?parent) AS ?parentName)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?artistName WHERE {
  # Find band members of Uncle Murda
  ?uncleMurda dbo:member ?bandMember .
  FILTER(CONTAINS(LCASE(STR(?bandMember)), ""unclemurda"")) .

  # Find musical artists from Florida
  OPTIONAL {
    ?artist dbo:birthPlace dbr:Florida ;
            a dbo:MusicalArtist .
    BIND(STRAFTER(STR(?artist), ""http://dbpedia.org/resource/"") AS ?artistName)
  }

  # Attempt to find any connection to Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL {
    ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
    ?region a dbo:Region ;
            rdfs:label ?regionLabel .
    FILTER(CONTAINS(LCASE(?regionLabel), ""puertorico"") || CONTAINS(LCASE(?regionLabel), ""coro""))
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?suvorov dbo:wikiPageID ?id .
  FILTER(?id = ""Alexander_Suvorov"") .

  ?suvorov dbo:militaryConflict ?war .
  
  OPTIONAL { 
    ?war rdfs:label ?label ;
         dbo:description ?description .
    FILTER(LANG(?label) = 'en')
  }
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelOffice ?commanderOffice ?leaderTenant
WHERE {
  # Office of Miguel Maura
  OPTIONAL { 
    dbr:Miguel_Maura dbo:office ?miguelOffice .
  }

  # Office of the commander in Central African Republic Civil War
  OPTIONAL {
    ?commander a dbo:Politician ;
               dbo:memberOf ?warEntity ;
               dbo:office ?commanderOffice .
    ?warEntity rdfs:label ""Central_African_Republic_Civil_War""@en .
  }

  # Tenant of the leader's residence in 2003 Madrid City Council election
  OPTIONAL {
    ?leaderTenant a dbo:Politician ;
                  dbo:memberOf dbr:Madrid_City_Council_Election,_2003 ;
                  dbo:office ?tenantOffice .
    ?leaderTenant dbo:residence ?leaderResidence .
    ?leaderResidence dbo:tenant ?leaderTenant .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  ?father dbo:child ?philip ;
          dbo:mother|dbo:wife ?spouse .

}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderName WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""National Party of Greece""@en .
  OPTIONAL { 
    ?party dbp:leader ?leader .
    ?leader rdfs:label ?leaderName .
    FILTER(LANG(?leaderName) = 'en')
  }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the predecessor of Ada Watson
SELECT ?predecessor WHERE {
  ?adaWatson dbo:successor dbr:Ada_Watson .
  ?adaWatson dbo:predecessor ?predecessor .
}

UNION

# Query for person decedent at the birth place of Mark Tournier
SELECT ?decedent WHERE {
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?person dbo:deathPlace ?birthPlace .
  ?person rdfs:label ?decedent .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?monarchName ?officeName
WHERE {
  # Find the monarch of Spain
  ?country dbo:name ""Spain""@en.
  ?country dbo:monarch ?monarch.
  ?monarch foaf:name ?monarchName.

  # Find the office held by Alberto Núñez Feijóo
  ?person foaf:name ""Alberto Núñez Feijóo""@en.
  OPTIONAL { ?person dbp:office ?office. }
  OPTIONAL { ?office foaf:name ?officeName. }

  FILTER(?monarch != ?person) # Ensure we are not conflating the two entities
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?movie dbo:title ""Color Me Dead""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Roger Pryor"" .
  ?actor dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChildOfSpouse ?fatherOfReferenceChild 
WHERE {
  # Step 1: Identify Constance of Burgundy's spouse
  ?consortia a dbo:Consort ;
             dbo:spouse dbr:Constance_of_Burgundy .

  # Step 2: Find the child of that spouse
  ?childOfSpouse dbo:spouseOr consort ?consortia ;
                a dbo:Person .

  # Step 3: Determine the child of that child
  ?grandChildOfSpouse dbo:parent ?childOfSpouse ;
                     a dbo:Person .

  # Step 4: Identify royalty among these descendants
  ?childOfChildOfSpouse dbo:royalty ?grandChildOfSpouse ;
                       a dbo:RoyalFamilyMember .

  # Step 5: Find William I's reference who is royalty and an office holder
  ?reference a dbo:Person ;
             dbo:officeHolder ?office ;
             dbo:royalty ?williamI .
  ?williamI rdfs:label ""William I""@en .

  # Step 6: Determine the father of that reference's child
  ?childOfReference dbo:parent ?reference ;
                    a dbo:Person .
  ?fatherOfReferenceChild dbo:spouseOr consort ?reference ;
                         a dbo:Person .

  # Step 7: Match these two individuals
  FILTER(?childOfChildOfSpouse = ?fatherOfReferenceChild)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?team WHERE {
  # Step 1: Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ?birth .
  FILTER (YEAR(?birth) = 1979 && MONTH(?birth) = 11 && DAY(?birth) = 3)
  
  # Ensure they are both a soccer player and manager
  ?person dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .

  # Step 2: Find the actor who is also a soccer player and athlete, in a film by Manuel Huerga
  ?actor dbo:occupation dbr:Soccer_player ;
         dbo:occupation dbr:Athlete .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

  # Ensure the person from step 1 is the same as the actor found in step 2
  FILTER (?person = ?actor)

  # Step 3: Retrieve the team of the identified person
  ?person dbo:team ?team .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?partyMember ?warCommanded
WHERE {
  dbpedia:George_Pickett 
    dbo:memberOfParty ?party .
  FILTER(CONTAINS(LCASE(STR(?party)), ""republican party (united states)""))
  OPTIONAL { dbpedia:George_Pickett dbo:commanderOf ?war . }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Find actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
SELECT ?actor WHERE {
    ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
    ?movie dbo:starring ?actor .
}

UNION

# Part 2: Find parent of the child of the spouse of Mariclare Costello
SELECT DISTINCT ?parent WHERE {
    dbr:Mariclare_Costello dbo:spouse ?spouse .
    ?child dbo:parent ?spouse ;
           dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alkaziBirthplace ?actorName ?actorBirthplace WHERE {
  # Ebrahim Alkazi's birthplace
  dbr:Ebrahim_Alkazi dbo:birthPlace ?alkaziBirthplace .

  # Actor of ""Akaler Shandhaney""
  dbr:Akaler_Shandhaney dbo:actor ?actor .
  
  # Get the actor's name and birthplace
  ?actor rdfs:label ?actorName ;
         dbo:birthPlace ?actorBirthplace .
  
  FILTER (lang(?actorName) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Find a band member of The Alan Parsons Project associated with Stuart McBeath Tosh
SELECT DISTINCT ?bandMember WHERE {
    ?member dbo:memberOf dbr:The_Alan_Parsons_Project .
    ?member dbo:associatedMusicalArtist dbr:Stuart_McBeath_Tosh .
}

UNION

# Part 2: Find the associated musical artist of Billy Lyall
SELECT DISTINCT ?associatedArtist WHERE {
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?countryLabel ?rulingPartyLabel WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (abs(?elevation - 20.1168) < 0.001)
  
  OPTIONAL { 
    ?landmark dbo:location dbr:?country .
    ?country rdfs:label ?countryLabel .
  }
  
  OPTIONAL {
    ?country dbo:government ?government .
    ?government dbo:rulingParty ?rulingParty .
    ?rulingParty rdfs:label ?rulingPartyLabel .
  }
}
ORDER BY ?landmark
LIMIT 1
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?charlestonEntity ?gillmoreAwardee ?militaryForce ?amasaTracyWar
WHERE {
  # Entity in Charleston, South Carolina
  ?charlestonEntity a dbo:Place ;
                   dbo:location dbr:Charleston,_South_Carolina .

  # Awardee of the Gillmore Medal and their military force
  ?gillmoreAwardee dbo:award dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryService ?militaryForce .

  # War involving Amasa Tracy
  ?amasaTracyWar dbo:participatedIn dbr:American_Civil_War ;
                dbo:person dbr:Amasa_Tracy .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Order of Courage""@en .
  ?recipient dbo:recipientOf ?award .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  OPTIONAL { ?person dbo:birthName ?name . FILTER(CONTAINS(LCASE(?name), LCASE(""Robert Lamar Thompson""))) }
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:SoccerManager ;
          dbo:teamManaged dbr:Hong_Kong_C_Team .
  
  ?person dbo:playerFor dbr:Ye_Jia .

  FILTER EXISTS { 
    ?person a dbo:SportsManager .
  }
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?regionLabel WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Japan Standard Time""@en .
  ?timeZone dbp:country ?country .
  FILTER (str(?country) = ""Japan"")
  OPTIONAL { ?timeZone dbo:region ?region . }
  BIND(STR(?regionLabel) AS ?regionLabel)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?profession WHERE {
  # Part 1: Find the alter ego of ""The Shadow"" who is a musical artist born as Robert Lamar Thompson
  OPTIONAL {
    ?person dbo:birthName ""Robert Lamar Thompson""@en .
    ?person dbo:alias dbr:The_Shadow .
    ?person dbo:occupation ?alterEgo .
    FILTER EXISTS { ?alterEgo rdf:type dbo:MusicalArtist }
  }

  # Part 2: Find the profession of Sam Concepcion
  OPTIONAL {
    dbr:Sam_Concepcion dbo:profession ?profession .
  }
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?managerName ?soccerClub WHERE {
  ?person a dbo:SoccerManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .
  
  ?person rdfs:label ?managerName ;
          foaf:name ?managerName .

  OPTIONAL { 
    ?soccerClub dbo:manager ?person ;
                a dbo:SoccerTeam .
  }
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to find Nick Curran's associated musical artists
SELECT ?artist WHERE {
  ?curran dbo:birthName ""Nick Curran""@en .
  ?curran dbo:associatedBand ?artist .
}

UNION

# Query to find Kim Wilson's band and its real name
SELECT ?bandLabel WHERE {
  ?wilson dbo:birthName ""Kim Wilson""@en .
  ?wilson dbo:bandMember ?band .
  ?band rdfs:label ?bandLabel .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?collaborator WHERE {
  VALUES ?uncleMurda { dbr:Uncle_Murda }
  ?uncleMurda dbo:hasCollaboration ?collaboration .
  ?collaboration dbo:artist ?collaborator .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Lamont Cranston as The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Richard E. Grant's movies or TV shows
  ?grantWork dbo:starring dbr:Richard_E._Grant .
  
  # Find another actor in the same work
  ?grantWork dbo:starring ?actor .
  
  # Ensure the actor is a professional actor (like Shatrughan Sinha)
  ?actor rdf:type dbo:Actor .

  FILTER(?actor != dbr:Richard_E._Grant) # Exclude Richard E. Grant himself
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?salMineoDeathPlace ?carolynJonesDeathPlace
WHERE {
  ?salMineo a dbo:Person ;
            foaf:name ""Sal Mineo""@en .
  ?salMineo dbo:deathPlace ?salMineoDeathPlace .

  ?carolynJones a dbo:Person ;
                foaf:name ""Carolyn Jones""@en .
  ?carolynJones dbo:deathPlace ?carolynJonesDeathPlace .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?book dbo:author dbr:Bill_Clinton .
  ?book a dbo:Book .
  ?bill dbo:spouse ?spouse .
  ?bill a dbo:Politician ;
        dbo:officeHolderOf ?office .
  FILTER EXISTS { ?office dbo:officeName ""President of the United States""@en }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?description WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Gillmore Medal""@en .
  OPTIONAL { ?awardee dbo:description ?description . FILTER(CONTAINS(LCASE(?description), ""force"")) }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentBirthName WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?tisha dbo:parent ?parent .

  ?parent dbo:birthName ?parentBirthName .
}
```",3,3,4,3,1,3,3,71,0,2,3,0.0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?role WHERE {
  VALUES ?band { dbr:Human_Remains_(band) }
  ?band dbo:member ?member .
  OPTIONAL { ?member dbo:role ?role . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?devlinProfession ?stonebwoyProfession ?associatedArtist WHERE {
  # Find Devlin's DBpedia resource and profession
  VALUES ?devlinResource { dbr:Devlin }
  ?devlinResource dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?devlinResource a dbo:Musician ;
                  dbo:profession ?devlinProfession .

  # Find Stonebwoy's DBpedia resource and profession
  VALUES ?stonebwoyResource { dbr:Stonebwoy }
  ?stonebwoyResource dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?stonebwoyResource a dbo:Musician ;
                     dbo:profession ?stonebwoyProfession .

  # Check for any associated musical artists between Devlin and Stonebwoy
  OPTIONAL {
    ?association dbo:artist ?devlinResource ;
                 dbo:associatedArtist ?stonebwoyResource .
    ?association dbo:associatedArtist ?associatedArtist .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName WHERE {
  VALUES (?alterEgo ?albumSong) { 
    (dbr:Lamont_Cranston dbr:Trap_Muzik_(song)) 
  }
  
  OPTIONAL {
    ?actor dbo:birthName ?alterEgo .
    ?actor rdfs:label ?actorName .
    FILTER(LANG(?actorName) = ""en"")
  }

  OPTIONAL {
    ?actor dbo:birthName dbr:David_Faustino .
    ?actor rdfs:label ?actorName .
    FILTER(LANG(?actorName) = ""en"")
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?nativePlace WHERE {
  # Find Uncle Murda's band members
  ?uncleMurda dbo:member ?bandMember .
  
  FILTER (str(?uncleMurda) = ""Uncle_Murda"") .

  # Get the native place of the band member
  ?bandMember dbo:nationality dbr:United_States ;
              dbo:birthPlace ?nativePlace .

  # Filter for a state that is also an award, region, and settlement
  FILTER (
    (str(?nativePlace) = ""New_York"" || str(?nativePlace) = ""California"" || 
     str(?nativePlace) = ""Texas"") && 
    (str(?nativePlace) IN (""New_York"", ""California"", ""Texas""))
  )
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?mayorLabel WHERE {
  {
    # Check for any entity related to Schleswig-Holstein, Germany
    ?region rdfs:label ""Schleswig-Holstein""@en .
    ?region dbo:administrativeUnit dbr:Germany .
    ?region dbo:currentLeader ?mayor .
  }
  UNION
  {
    # Check for any entity related to Schleswig in Denmark
    ?region rdfs:label ""Schleswig""@en .
    ?region dbo:administrativeUnit dbr:Denmark .
    ?region dbo:currentLeader ?mayor .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle ?citationTitle
WHERE {
  # Identify George Ducas as an individual in DBpedia
  dbr:George_Ducas a dbo:Writer .
  
  # Retrieve works authored by George Ducas
  ?work dbo:author dbr:George_Ducas ;
        rdfs:label ?workLabel .

  # Find references or citations related to these works
  OPTIONAL {
    ?citation dbo:cites ?work ;
              rdfs:label ?citationLabel .
  }

  FILTER (lang(?workLabel) = 'en')
  FILTER (lang(?citationLabel) = 'en')

  BIND(str(?workLabel) AS ?workTitle)
  BIND(COALESCE(str(?citationLabel), ""No citation found"") AS ?citationTitle)
}
ORDER BY ?workTitle
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:George_Ducas dbo:painting ?work .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Amda Seyon I as a royal commander in Ethiopian history
  dbr:Amda_Seyon_I dbo:spouse ?parent .
  
  # Baeda Maryam I is a child of the parent (Amda Seyon I)
  ?parent dbo:child dbr:Baeda_Maryam_I .

  # Amda Seyon I's notable descendant or successor
  ?parent dbo:child ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?tvShow ?movie WHERE {
  # Find the actor known as Grant Gustin
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?person foaf:name ""Grant Gustin""@en .
  
  # Identify TV shows he acted in
  ?tvShow dbo:actor ?person ;
          dbp:genre ""Sitcom""@en ;  # Assuming the genre is a sitcom for Ab Kya Hoga equivalent
  
  # Find if any of these TV shows have been adapted into movies
  OPTIONAL { 
    ?movie dbo:basedOn ?tvShow .
  }
  
  # Ensure the actor has another profession as a politician (hypothetical check)
  ?actor dbo:profession dbr:Politician ;
         foaf:name ""Grant Gustin""@en .

  FILTER(?tvShow != dbr:Glee)  # Exclude Glee if it's not relevant to the context
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?childLabel
WHERE {
  ?person rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,3,71,2,6,1,0.25,0.6666666666666666,0.36363636363636365
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Query for Cece Bell's birthplace
    dbr:Cecilie_Bell a dbo:Writer ;
                     dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?person)
  }
  
  UNION
  
  { 
    # Query for the current governor of Virginia's birthplace
    dbr:Glenn_Youngkin a dbo:Politician ;
                       dbo:governmentRole <http://dbpedia.org/resource/Governor_of_Virginia> ;
                       dbo:birthPlace ?birthPlace .
    BIND(""Governor of Virginia"" AS ?person)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Charles II of Naples""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find artists associated with Wizards of Waverly Place soundtrack
  ?soundtrack dbo:artist ?person .
  FILTER(STRSTARTS(LCASE(?soundtrack), ""wizards_of_waverly_place_soundtrack""))

  # Find band members of The Alan Parsons Project
  ?bandMember dbo:member ?person .
  FILTER(STRSTARTS(LCASE(?bandMember), ""the_alan_parsons_project""))
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?mariaAnna dbo:birthYear ""1574"" .
  ?mariaAnna a dbo:Person .
  ?mariaAnna dbo:child ?child .

  OPTIONAL { 
    ?child dbo:title ?title .
  }

  FILTER EXISTS {
    ?child (dbo:royalHouse|dbp:house) ?house .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?alumnus dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Identify The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:member ?bandMember .

  # Filter for Nicholas Michael Curran by birth date and name
  OPTIONAL { 
    ?bandMember dbp:birthday ""1945-03-30""^^xsd:date .
    ?bandMember rdfs:label ""Nicholas Michael Curran""@en .
  }

  # Retrieve associated musical artists of Nicholas Michael Curran
  OPTIONAL {
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  FILTER (?bandMember != dbr:Nicholas_Michael_Curran) # Ensure we are not selecting the band itself
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?theme WHERE {
  # Identify the city of Lahore using its nicknames
  VALUES ?lahore { 
    dbr:Lahore 
    dbr:The_Heart_of_Pakistan 
    dbr:Paris_of_the_East 
    dbr:City_of_Gardens 
    dbr:City_of_Literature 
  }
  
  # Find individuals native to Lahore (Dikhawa)
  ?person dbo:nativePlace ?lahore .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""dikhawa""))
  
  OPTIONAL {
    ?person dbo:occupation ?theme .
    FILTER(CONTAINS(LCASE(?theme), ""literature"") || CONTAINS(LCASE(?theme), ""arts""))
  }
}
ORDER BY ?name
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
    ?team a dbo:FootballClub ;
          dbo:season ""2020–21"" ;
          dbo:manager ?manager .
    
    FILTER(CONTAINS(LCASE(STR(?team)), ""sbv vitesse""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Manuel Pinto da Costa's involvement in a military conflict or societal event
  dbr:Manuel_Pinto_da_Costa dbo:spouse ?event .
  
  # Ensure the event is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:participatedIn ?conflict .

  # Identify the commander of this conflict who is also an office holder and politician
  ?commander dbo:commanderOf ?conflict .
  ?commander rdf:type dbo:Politician, dbo:OfficeHolder .
  
  # Ensure the commander is related to Fernando Pereira
  ?commander rdfs:label ""Fernando Pereira""@en .
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  OPTIONAL { 
    ?leader dbo:partyLeaderOf dbr:Conservative_Party_(Spain) .
    ?leader dbo:office ?office .
  }

  # Find the residence associated with Alberto Ruiz-Gallardón
  OPTIONAL {
    ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
    ?residence dbo:location ?office .
  }
  
  # Find the office held by Mariano Rajoy
  OPTIONAL {
    ?rajoyOffice dbo:positionHeldBy dbr:Mariano_Rajoy .
    ?rajoyOffice dbo:office ?office .
  }

  FILTER(?office != """")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfSara ?childOfFaisal ?royaltyChild
WHERE {
  # Find the parent of Princess Sara bint Faisal
  ?sara a dbo:Person ;
        foaf:name ""Princess Sara bint Faisal""@en .
  ?sara dbo:parent ?parentOfSara .

  # Find children of Prince Faisal bin Hussein
  ?faisal a dbo:Person ;
          foaf:name ""Prince Faisal bin Hussein""@en .
  ?faisal dbo:child ?childOfFaisal .

  # Filter for the child that is royalty
  OPTIONAL {
    ?childOfFaisal dbp:royalTitle ?royaltyChild .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?deathPlaceLabel WHERE {
  # Find the work ""Color Me Dead""
  ?work dbr:Color_Me_Dead ;
        dbo:castMember ?actor .
  
  # Get actor details
  ?actor rdfs:label ?actorName ;
         dbo:deathPlace ?deathPlace .

  # Filter to ensure we get English labels for clarity
  FILTER (lang(?actorName) = 'en')
  FILTER (lang(?deathPlaceLabel) = 'en')

  # Get the label of the death place
  ?deathPlace rdfs:label ?deathPlaceLabel .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT ?country WHERE {
  ?person rdfs:label ""Dawid Olejniczak""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type schema:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,1,108,0.0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?award dbo:name ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:recipient ?person .
  ?person foaf:nationality ?nationality .
  FILTER(CONTAINS(LCASE(?nationality), ""japan"") || CONTAINS(LCASE(?nationality), ""japanese""))
  OPTIONAL { ?person dbo:birthPlace ?birthPlace }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?royaltyParent WHERE {
  # Find Lamont Cranston's alter ego, ""The Shadow""
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Identify Dawit I as the parent of Yeshaq I
  dbr:Yeshaq_I dbo:parent dbr:Dawit_I .
  
  # Link Dawit I to his royal status
  dbr:Dawit_I a dbo:Monarch ;
              dbo:country dbr:Ethiopia .

  # Bind the alter ego and royalty parent
  BIND(dbr:The_Shadow AS ?alterEgo)
  BIND(dbr:Dawit_I AS ?royaltyParent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the office of the leader of the Conservative Republican Party (Spain)
SELECT ?office WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?leader dbo:leader ?party ;
          dbo:officeHolder ?office .
}

UNION

# Query for the tenant of the residence of Alberto Ruiz-Gallardón
SELECT ?tenant WHERE {
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  ?tenant dbo:residence ?residence .
}

UNION

# Query for the office of the commander in the Central African Republic Civil War
SELECT ?office WHERE {
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Central African Republic Civil War""@en .
  ?commander dbo:officeHolder ?office ;
             dbo:militaryCommanderOf ?war ;
             a dbo:Politician .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary's children
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Child of Béla IV's child who is royalty (Béla IV's grandchild)
  ?grandchild dbo:parent ?belavChild .
  ?grandchild dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""king"") || CONTAINS(LCASE(STR(?title)), ""queen"") || 
         CONTAINS(LCASE(STR(?title)), ""prince"") || CONTAINS(LCASE(STR(?title)), ""princess""))

  # Parent of Charles Martel of Anjou
  ?charlesParent dbo:child dbr:Charles_Martel_of_Anjou .
  
  # Spouse of the father of Philip, Despot of Romania's parent (royalty)
  ?philipParent dbo:child dbr:Philip_Despot_of_Romania .
  ?philipParent dbo:title ?philipTitle .
  FILTER(CONTAINS(LCASE(STR(?philipTitle)), ""king"") || CONTAINS(LCASE(STR(?philipTitle)), ""queen"") ||
         CONTAINS(LCASE(STR(?philipTitle)), ""prince"") || CONTAINS(LCASE(STR(?philipTitle)), ""princess""))

  ?spouse dbo:spouse ?philipParent .
  
  # Linking the grandchild to the spouse
  FILTER(?grandchild = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residenceCountry ?partyMember
WHERE {
  # Find Álvaro Quirós's country of residence
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  BIND(?residence AS ?residenceCountry)

  # Find a Spanish member in the administration of the Spanish Socialist Workers' Party
  ?partyMember a dbo:Person ;
               foaf:nationality <http://dbpedia.org/resource/Spain> ;
               dbp:memberOfParty <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> .
  
  # Assuming there is an administrative role property, we might need to refine this part
  OPTIONAL { ?partyMember dbo:position ""Administrative""@en }
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthName WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor dbo:birthName ?birthName . }
}
LIMIT 10
```",2,2,3,1,2,3,3,71,0,20,4210,0.0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?spouse ?party WHERE {
  # Find the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Get the spouse of the actor
  ?actor dbp:spouse ?spouse .

  # Identify landmark with elevation approximately 20.1168 meters
  ?landmark dbo:elevation ?elevation .
  FILTER (abs(?elevation - 20.1168) < 0.1)

  # Determine ruling party at the location of the landmark
  ?location dbo:isPartOf ?country .
  ?country dbp:government ?government .
  ?government dbo:partyLeader ?party .

  # Check if spouse is a member of this party
  ?spouse dbo:memberOf ?party .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personName WHERE {
  ?soundtrack a dbo:Soundtrack ;
              rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  
  ?person dbo:writer ?soundtrack ;
          dbo:musicalArtist ?soundtrack .

  ?person foaf:name ?personName .
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kim Wilson""@en .
  
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthCountry ?nativeLanguage
WHERE {
  # Find the birthplace of Shobhna Samarth that is a country
  dbr:Shobhna_Samarth dbo:birthPlace ?birthLocation .
  ?birthLocation rdf:type dbo:Country .

  BIND(?birthLocation AS ?birthCountry)

  # Find the native language(s) spoken in Jamshedpur
  dbr:Jamshedpur dbo:language ?nativeLanguage .
}
```",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder query due to lack of specific context.
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?professional WHERE {
  ?professional a dbo:Professional .
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?actor WHERE {
  # Find the DBpedia resource for Richard Grant Esterhuysen
  VALUES ?richardEsterhuysen { dbr:Richard_E._Grant }
  
  # Ensure he is an actor
  ?richardEsterhuysen dbo:profession dbr:Actor .

  # Find television shows that are also movies
  ?show a dbo:TelevisionShow ;
        dbo:basedOnFilm ?film .
  
  # Check if Richard Grant Esterhuysen acted in the show/movie
  ?castMember dbo:actor ?richardEsterhuysen .
  ?castMember dbo:characterIn ?show .
  ?castMember dbo:characterIn ?film .

  # Return the television show and actor
  BIND(?richardEsterhuysen AS ?actor)
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?successorName WHERE {
  # Michał Kazimierz Pac's role in the Battle of Vienna
  dbr:Mikołaj_Kazimierz_Pac a dbo:Commander ;
                            dbo:militaryConflict dbr:Battle_of_Vienna .

  # Find his successor who is also a politician and office holder
  ?successor a dbo:Commander ;
             dbo:militaryConflict dbr:Battle_of_Vienna ;
             dbo:succeededBy dbr:Mikołaj_Kazimierz_Pac ;
             dbo:officeHolder true ;
             dbo:politician true .

  # Get the name of the successor
  ?successor rdfs:label ?successorName .
  
  FILTER (lang(?successorName) = 'en')
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKimWilson ?artistNickCurran WHERE {
  # Find the band associated with Kim Wilson
  OPTIONAL { 
    ?kimWilson a dbo:MusicArtist ;
               foaf:name ""Kim Wilson"" .
    ?memberOfBand dbo:member ?kimWilson ;
                  dbo:name ?bandKimWilson .
  }
  
  # Find the associated musical artist of Nick Curran
  OPTIONAL {
    ?nickCurran a dbo:MusicArtist ;
                foaf:name ""Nick Curran"" .
    ?associatedBand dbo:associatedBand ?nickCurran ;
                   dbo:name ?artistNickCurran .
  }

  # Reference to The Fabulous Thunderbirds
  FILTER(?bandKimWilson = dbr:The_Fabulous_Thunderbirds)
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistStuartTosh ?artistBillyLyall
WHERE {
  # Find Stuart Tosh's associated musical artist
  OPTIONAL { 
    dbr:Stuart_Tosh dbo:bandMember ?band .
    ?band dbo:name ?artistStuartTosh .
  }
  
  # Find Billy Lyall's associated musical artist
  OPTIONAL { 
    dbr:Billy_Lyall dbo:bandMember ?band .
    ?band dbo:name ?artistBillyLyall .
  }

  FILTER(?artistStuartTosh = ""The Alan Parsons Project"" || ?artistBillyLyall = ""The Alan Parsons Project"")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?commanderChild WHERE {
  # Na'od and his father
  ?na'od dbo:child ?na'odsFather .
  ?na'odsFather rdf:type dbo:Person ;
                dbo:royalty true ;
                dbo:officeHolder true .

  # Grandfather of Na'od (father's father)
  ?na'odsFather dbo:parent ?grandfather .
  ?grandfather rdf:type dbo:Person ;
               dbo:royalty true ;
               dbo:officeHolder true .

  # Commander involved in the Siege of Mukha
  ?commander dbp:SiegeOfMukha ?siegeEvent ;
             rdf:type dbo:Person ;
             dbo:royalty true .
  
  # Child of the commander
  ?commanderChild dbo:child ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Mudvayne dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,1,3,4,0.25,0.2,0.22222222222222224
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow ?conflict ?monarch ?reignStart ?reignEnd WHERE {
  # Find the TV show ""The Force""
  OPTIONAL { 
    ?tvShow a dbo:TelevisionSeries ;
            rdfs:label ""The Force""@en .
  }

  # Find any military conflict named ""The Force""
  OPTIONAL { 
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ""The Force""@en .
  }

  # Get information about Maria I of Portugal
  dbr:Maria_I_of_Portugal a dbo:Monarch ;
                          dbo:reignStart ?reignStart ;
                          dbo:reignEnd ?reignEnd .

  BIND(dbr:Maria_I_of_Portugal AS ?monarch)
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  # William I of Sicily and his child who is royalty
  ?williamI dbo:spouse ?constanceBurgundy .
  FILTER (str(?williamI) = ""William_I_of_Sicily"")
  
  ?childOfWill rdf:type dbr:Royal ;
               dbo:parent ?williamI .

  # Spouse of Constance of Burgundy
  ?constanceBurgundy dbo:spouse ?spouseConstance .
  
  # Child of the spouse of Constance of Burgundy who is royalty
  ?childOfSpouse rdf:type dbr:Royal ;
                 dbo:parent ?spouseConstance .

  # Grandchild of the spouse of Constance of Burgundy
  ?grandChildOfSpouse dbo:parent ?childOfSpouse .
  
  # The child of William I who is also a grandchild of the spouse of Constance
  FILTER (?childOfWill = ?grandChildOfSpouse)

  # Father of this grandchild (which is the same as the child of William I)
  ?father dbo:parent ?childOfWill .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName WHERE {
  ?archduchess a dbo:Archduchess ;
               foaf:name ""Helena of Austria"" .
  
  ?archduchess dbo:spouse ?spouse .

  ?spouse rdfs:label ?spouseName ;
          (rdfs:subClassOf*|a) dbo:Royal .

  FILTER(LANG(?spouseName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?nativeRegion WHERE {
  # Identify Nelly (Ackquille Jean Pollard)
  ?nelly a dbo:MusicalArtist ;
         foaf:name ""Nelly"" ;
         dbo:birthName ""Ackquille Jean Pollard"" ;
         dbo:placeOfBirth dbr:New_York_City .

  # Find awards received by Nelly
  ?nelly dbo:awardReceived ?award .

  # Determine the native region of the award
  ?award dbo:nativeRegion ?nativeRegion .
  
  # Ensure the native region is a state and settlement in America
  ?nativeRegion rdf:type dbo:State ;
                dbo:country dbr:United_States_of_America ;
                dbo:settlementType dbp:Settlement .

}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?dannySpouseLabel ?carolSpouseLabel WHERE {
  # Find Danny Thomas and his spouse
  ?danny a dbo:Actor ;
         rdfs:label ""Danny Thomas""@en .
  ?danny dbo:spouse ?dannySpouse .
  ?dannySpouse rdfs:label ?dannySpouseLabel .

  # Find Carol Burnett (Harriette Arlene Lake) and her spouse
  ?carol a dbo:Actor ;
         rdfs:label ""Carol Burnett""@en ;
         foaf:name ""Harriette Arlene Lake"" .
  ?carol dbo:spouse ?carolSpouse .
  ?carolSpouse rdfs:label ?carolSpouseLabel .

  FILTER (lang(?dannySpouseLabel) = 'en')
  FILTER (lang(?carolSpouseLabel) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?calderMilitaryForce ?bayneWar ?campaignCommander WHERE {
  # Robert Calder's military force (event and societal event)
  ?calderEvent a dbo:MilitaryEngagement ;
               dbo:commandedBy dbr:Robert_Calder .
  
  OPTIONAL { ?calderEvent rdfs:label ?calderMilitaryForce . }
  
  # William Bayne's war (military conflict and event)
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:participant dbr:William_Bayne .
  
  OPTIONAL { ?bayneWar rdfs:label ?bayneWarLabel . }
  
  # Commander of the French campaign in Egypt and Syria
  ?campaignEvent a dbo:MilitaryEngagement ;
                 dbo:commandedBy ?campaignCommander ;
                 rdfs:label ""French campaign in Egypt and Syria"" .
  
  OPTIONAL { ?campaignCommander rdfs:label ?campaignCommanderLabel . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actors in these films who are also soccer players and athletes
  ?film dbo:starring ?actor .
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Connection with Juan Carlos Molina (footballer)
  ?team dbp:player ?molina .
  ?molina dbr:Juan_Carlos_Molina_(footballer) .
  ?actor dbp:team ?team .

  # Team managed by someone born on 1979-11-03, who is a soccer player and manager
  ?manager dbo:birthDate ""1979-11-03""^^xsd:date ;
           a dbo:SoccerPlayer , dbo:SoccerManager .
  ?team dbp:coach ?manager .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
  ?person dbo:birthPlace dbr:Florida .
  ?bandMemberRelation dbo:memberOf dbr:Bobby_Shmurda .
  ?bandMemberRelation dbo:agent ?person .
  ?associatedBandRelation dbo:associatedBand dbr:Bobby_Shmurda .
  ?associatedBandRelation dbo:agent ?person .
  FILTER EXISTS { ?person a dbo:MusicalArtist . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?birthName WHERE {
  # Find members of Uncle Murda
  ?member dbo:bandMemberOf dbr:Uncle_Murda .
  
  # Filter by native place being Florida
  ?member dbo:birthPlace dbr:Florida .

  # Ensure the birth name matches their native identity
  ?member dbp:birthday ?birthday .
  ?member foaf:name ?name .
  FILTER (?name = ?birthName)

  # Confirm they are a musical artist
  ?member rdf:type dbo:MusicalArtist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
# Query to get actor(s) from Rustlers' Rhapsody
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Rustlers' Rhapsody""@en .
  FILTER (lang(?filmLabel) = 'en')
}

UNION

# Query to get actor(s) who are also professionals in the alter ego of The Shadow
SELECT DISTINCT ?actor WHERE {
  ?actor dbo:profession dbr:Actor .
  ?actor foaf:name ?name .
  OPTIONAL { 
    ?shadowCharacter dbo:alterEgoOf ?actor .
    ?shadowCharacter rdfs:label ""The Shadow""@en .
    FILTER (lang(?shadowLabel) = 'en')
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember
WHERE {
  ?cavaleraConspiracy rdf:type dbo:Band .
  ?cavaleraConspiracy rdfs:label ""Cavalera Conspiracy""@en .

  ?cavaleraConspiracy dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicalArtist .

  ?artist dbo:bandMember ?bandMember .
  ?bandMember rdf:type dbo:Organization .
}
```",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfShelbyOaks ?albumArtist WHERE {
  # Query for actors of Shelby Oaks
  OPTIONAL {
    dbr:Shelby_Oaks dbo:starring ?actorOfShelbyOaks .
    ?actorOfShelbyOaks a dbo:Actor ;
                      rdfs:label ?actorLabel .
    FILTER (lang(?actorLabel) = 'en')
  }

  # Query for the album of What You Know by T.I.
  OPTIONAL {
    dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
    ?album dbo:artist ?albumArtist ;
           rdfs:label ?albumLabel .
    FILTER (lang(?albumLabel) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:BirthdayCelebrity .
  ?person foaf:name ?name .
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent ?successor ?writer
WHERE {
  # Find Jean Baptist, Comte d'Arco as a commander in a TV show and societal event
  OPTIONAL { 
    ?tvShow dbo:character dbr:Jean_Baptist_Comte_d'Arco .
    ?tvShow dbo:commander ?commander .
  }
  
  OPTIONAL {
    ?societalEvent dbo:commander dbr:Jean_Baptist_Comte_d'Arco .
  }

  # Find Yurii Khmelnytsky as a predecessor
  ?successor dbo:predecessor dbr:Yurii_Khmelnytsky .

  # Find the writer associated with George Ducas
  ?work dbo:writer ?writer .
  ?work dbo:author dbr:George_Ducas .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleftherios Venizelos""@en .
  
  OPTIONAL { 
    ?party dbo:leader ?person .
    FILTER (str(?party) = str(dbr:National_Party_of_Greece))
  }
  
  ?event dbo:associatedWith ?person ;
         a dbo:MilitaryConflict .

  BIND(IF(BOUND(?event), ?event, ""No specific war found"") AS ?war)
}
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politicianParent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Find his children who are politicians and attended Eton College
  ?child dbo:parent ?edward ;
         dbo:almaMater dbr:Eton_College ;
         (dbo:occupation dbp:politician | a dbo:Politician) .

  # Identify the parent of this child who is also a politician
  ?politicianParent dbo:child ?child .
  OPTIONAL { ?politicianParent dbo:occupation dbp:politician . }
  
  FILTER EXISTS { ?politicianParent dbo:occupation dbp:politician }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?movie rdfs:label ""12 Strong""@en .
  ?movie a dbo:Film .
  ?movie dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee
WHERE {
  # Find awards associated with Janusz Kamiński
  dbr:Janusz_Kamiński dbo:award ?award .
  
  # Find other awardees of the same award
  ?otherAwardee dbo:award ?award .
  
  # Ensure we exclude Janusz Kamiński from the results
  FILTER(?otherAwardee != dbr:Janusz_Kamiński)
  
  # Bind the awardee to a variable for output
  BIND(?otherAwardee AS ?awardee)
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonPredecessor WHERE {
  # Duke Philipp of Württemberg's child and grandchild
  ?philippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?philippGrandchild dbo:parent ?philippChild .

  # Predecessor of the grandchild
  ?predecessor rdfs:subClassOf ?philippGrandchild .

  # Philipp Albrecht, Duke of Württemberg's child and Archduchess Margarete Sophie's child
  ?albrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?margareteChild dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Predecessor of the child
  ?predecessor rdfs:subClassOf ?albrechtChild ;
               rdfs:subClassOf ?margareteChild .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonCommander WHERE {
  # Find the commander of the Battle of Cape Finisterre (1805)
  ?battle a dbo:MilitaryConflict ;
          dbo:name ""Battle of Cape Finisterre (1805)"" ;
          dbo:commander ?commander1 .

  # Identify The Triple X's involvement
  ?tripleXs dbo:involvedInMilitaryConflicts ?battle .

  # Find the military conflict involving William Bayne and its commander
  ?bayne dbr:William_Bayne ;
         dbo:rank ""Royal Navy officer"" ;
         dbo:commanderOfMilitaryConflict ?conflict2 .
  
  ?conflict2 dbo:commander ?commander2 .

  # Check if there is a common commander
  FILTER (?commander1 = ?commander2)
  BIND(?commander1 AS ?commonCommander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Get Marty Pollio's birthdate
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthdate WHERE {
    dbr:Marty_Pollio dbo:birthday ?birthdate .
}

# Step 2: Get Pablo Aimar's team
SELECT ?team WHERE {
    dbr:Pablo_Aimar dbo:currentTeam ?team .
}

# Step 3: Find an athlete born on Marty Pollio's birthday and played for Pablo Aimar's team
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?athlete WHERE {
    # Replace ?birthdate with the actual date obtained from step 1
    ?athlete dbo:birthday ?birthdate .
    
    # Replace ?team with the actual team obtained from step 2
    ?athlete dbo:currentTeam ?team .
    
    ?athlete a foaf:Person ;
             dbo:occupation dbr:Athlete .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:country dbr:Spain .
  ?person dbo:nationality dbr:Spanish_people .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .
  
  # Child of the spouse
  ?child dbo:parent ?spouse .
  
  # Person decedent at Los Angeles
  ?decedent dbo:placeOfBirth ?location ;
            dbo:deathPlace ?losAngeles .
  FILTER (str(?losAngeles) = ""Los_Angeles"" || str(?losAngeles) = ""Los Angeles"") .

  # Work associated with the decedent
  ?work dbo:actor ?decedent .

  # Actor of the movie
  ?work dbo:actor ?actor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?parentOfChild
WHERE {
  # Part 1: Rodney Lees' Awardee's Parent
  ?award dbo:recipient dbr:Rodney_Lees .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:parent ?parentOfAwardee .

  # Part 2: Frederick Stanley, 16th Earl of Derby's Child's Parent
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  ?child dbo:parent ?parentOfChild .
  
  FILTER (?parentOfChild = dbr:Fredrick_Stanley,_16th_Earl_of_Derby)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Find Frédéric Bouraly's profession
SELECT ?profession WHERE {
    dbpedia:Fr%C3%A9d%C3%A9ric_Bouraly dbo:occupation ?profession .
}

# Step 2: Use the identified profession to find other professionals in the same field
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:occupation ?profession .
    FILTER(?profession = dbpedia:Actor) # Assuming Actor is the profession found in Step 1
}
```

Note: The second query assumes that Frédéric Bouraly's occupation is ""Actor"". You would replace `dbpedia:Actor` with the actual URI of his profession obtained from the first query.",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""The Shadow""@en .
  ?actor foaf:name ?actorName .
  OPTIONAL { 
    ?role rdfs:label ""Lamont Cranston""@en ;
          dbo:characterInFilm ?movie .
    ?actor dbo:portrayal ?role .
  }
  FILTER EXISTS {
    ?role rdfs:label ""Lamont Cranston""@en .
  }
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?team rdfs:label ""Наши парни""@ru .
  OPTIONAL { ?team dbo:player dbr:Aleksandr_Filimonov . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birth place of Glenn Youngkin, the Governor of Virginia
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .
  }
  
  # Birth place of Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",4,5,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Part 1: Find the parent of an awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  ?awardee dbo:parent ?parent .

  # Part 2: Find children of Frederick Stanley, 16th Earl of Derby and their parents
  ?child dbo:parent <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> ;
         dbo:parent ?candidateParent .
  
  # Filter for politicians among these candidate parents
  ?candidateParent dbo:occupation dbp:politician .

  # Ensure the parent from both parts is the same individual
  FILTER (?parent = ?candidateParent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?book WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Clinton""@en ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolderOf dbr:President_of_the_United_States .

  OPTIONAL { ?person dbo:commanderDuring dbr:Third_Taiwan_Strait_Crisis . BIND(?person AS ?commander) }
  
  OPTIONAL {
    ?work a dbo:Book ;
         dbo:author ?person .
    FILTER(CONTAINS(LCASE(str(?work)), ""book""))
    BIND(str(?work) AS ?book)
  }

  FILTER EXISTS { ?person dbo:officeHolderOf dbr:President_of_the_United_States }
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:name ?name ;
             dbo:participatedIn dbr:Thirty_Years'_War .
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryConflict ?militaryForce WHERE {
  # Identify William Bayne and his associated military conflicts
  dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?event .
  
  # Ensure the event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Find the military force involved in this conflict
  OPTIONAL { ?event dbo:militaryForce ?militaryForce . }
  
  # Bind the name of the military conflict for clarity
  BIND(?event AS ?militaryConflict)
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person foaf:name ""Charles Parsons"" .
  ?person dbo:occupation dbp:British_Army_Officer .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?emilia (dbr:Emilia_(Bulgarian_singer))
  
  ?bandMember dbo:memberOf ?group .
  ?group dbo:leadArtist ?emilia .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfCharlesMartel ?spouseOfCharlesII WHERE {
  ?charlesMartel a dbo:Person ;
                 foaf:name ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?parentOfCharlesMartel .

  ?charlesII a dbo:Person ;
             foaf:name ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouseOfCharlesII .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producerName WHERE {
  ?show rdfs:label ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .
  ?producer rdfs:label ?producerName .
  FILTER(LANG(?producerName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,4,4,0.0,0.0,0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Identify the Polish athlete from Łódź
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź ;
           dbo:occupation dbr:Athlete .

  # Step 2: Determine their country of residence
  ?athlete dbo:residence ?countryResidence .
  
  # Step 3: Link the country to Alexander Suvorov's war
  OPTIONAL {
    ?suvorovWar dbo:place dbp:Suvorov ;
               dbo:location ?countryResidence .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  # Find parents of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Miguel Maura's party leader office
SELECT ?partyLeaderOffice WHERE {
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura"" .
  ?miguelMaura dbo:politicalParty ?party .
  ?party dbo:leader ?leader .
  ?leader dbo:officeHolder ?partyLeaderOffice .
}

# Query for commander in the Central African Republic Civil War
SELECT ?commanderOffice WHERE {
  ?war a dbo:MilitaryConflict ;
       foaf:name ""Central African Republic Civil War"" .
  ?commander a dbo:Commander ;
             dbo:militaryConflict ?war .
  ?commander dbo:officeHolder ?commanderOffice .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?actor ?movie WHERE {
  # Find Doon Arbus's parent
  dbr:Doon_Arbus dbo:parent ?parent .

  # Find movies with actors who died in Los Angeles
  ?movie dbo:actor ?actor .
  ?actor dbo:deathPlace dbr:Los_Angeles_County,_California .

  # Ensure the actor is connected to Doon Arbus's parent
  OPTIONAL { ?parent dbo:spouse ?actor }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the birthplace of Aaron Paul (awardee associated with Vince Gilligan)
SELECT ?birthPlace WHERE {
  dbr:Aaron_Paul dbo:birthPlace ?birthPlace .
}

UNION

# Query for the birthplace of Cece Bell (author of El Deafo)
SELECT ?birthPlace WHERE {
  dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlace .
}

UNION

# Query for the birthplace of Glenn Youngkin
SELECT ?birthPlace WHERE {
  dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query to find the spouse of Roger Pryor (actor)
SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Roger Pryor"" .
  ?person dbo:spouse ?spouse .
}

UNION

# Query to find person born with the birth name Ann Sothern
SELECT ?person WHERE {
  ?person foaf:name ""Ann Sothern""@en ;
          dbo:birthName ""Ann Sothern""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?actor WHERE {
  ?person rdfs:label ""Afeez Oyetoro""@en .
  ?person dbo:starring ?movie .
  
  ?movie dbo:starring ?actor .
  FILTER(?actor != ?person)
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence ?officeLocation
WHERE {
  # Residence of Alberto Ruiz-Gallardón
  OPTIONAL {
    dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  }
  
  # Office location of the leader of the People's Party (Conservative Republican Party)
  OPTIONAL {
    dbr:People%27s_Party_(Spain) dbo:leader ?partyLeader .
    ?partyLeader dbo:officeLocation ?officeLocation .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fullName WHERE {
  ?person dbo:birthName ""Pacely""@en .
  ?person foaf:name ?fullName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbpedia:Vince_Gilligan 
    dbpedia:Cecily_Bell 
    dbpedia:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unit ?commander WHERE {
  # Pickett's Charge entity
  dbr:Picketts_Charge dbo:participatedIn ?battle .
  
  # Units involved in the charge
  ?battle dbo:participant ?unit .

  # Commanders of these units, focusing on Confederate forces
  OPTIONAL { 
    ?unit dbo:commander ?commander .
    FILTER(CONTAINS(LCASE(STR(?commander)), ""george pickett""))
  }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?actress WHERE {
  ?award a dbo:Award ;
         dbo:nativeCountry dbr:United_States ; # Assuming ""American"" refers to the United States
         dbo:settlement ?settlement .
  
  ?coro dbp:recipient ?award ;
        rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  ?actress a dbo:Actor ;
           dbo:profession dbr:Actress ;
           dbo:awardsReceived ?award .
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  ?sandro dbo:birthPlace ?birthPlace .
  
  FILTER (?sandro = dbpedia:Sandro_Bertaggia) .

  # Ensure the birthplace is a country
  ?birthPlace geo:featureClass ""A""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Find persons who died at this place
  ?decedent dbo:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,3,28,0,0,906,0,0.0,0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?parent ?child
WHERE {
  # Identify Leopold I as a commander in wars involving the 2nd Dragoon Regiment (France)
  ?person dbo:occupation dbr:Military_commander .
  ?person rdfs:label ""Leopold I, Holy Roman Emperor""@en .

  OPTIONAL { 
    ?event dbo:participatedInMilitaryConflict ?war .
    ?war dbo:hasParticipant dbr:2nd_Dragoon_Regiment_(France) .
    ?person dbo:role ?role .
    FILTER CONTAINS(LCASE(?role), ""commander"")
  }

  # Confirm familial relationships
  ?parent rdfs:label ""Ferdinand II, Holy Roman Emperor""@en ;
          dbo:child ?person .

  ?person dbo:child ?child .
  ?child rdfs:label ""Joseph I, Holy Roman Emperor""@en .
  ?grandParent rdfs:label ""Ferdinand III, Holy Roman Emperor""@en ;
               dbo:parent ?child .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?renetaBirthplace ?alumnusName ?alumnusBirthplace WHERE {
  # Find Reneta Kamberova's birthplace
  ?reneta a dbo:Person ;
          foaf:name ""Reneta Kamberova""@en .
  ?reneta dbo:birthPlace ?renetaBirthplace .

  # Find an alumnus of Plovdiv University ""Paisius of Hilendar"" and their birthplace
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Plovdiv_University_Paisii_of_Hilendarski> .
  ?alumnus foaf:name ?alumnusName .
  ?alumnus dbo:birthPlace ?alumnusBirthplace
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Princess Muna al-Hussein's child who is a royalty
  ?princess dbp:name ""Muna al-Hussein""@en .
  ?princess dbo:child ?royalChild .
  ?royalChild dbo:royaltyTitle ?title .

  # Step 2: From that royal child, find their own child (grandchild of Princess Muna)
  ?royalChild dbo:child ?grandchild .

  # Optional: Check if the grandchild is also a royalty
  OPTIONAL { 
    ?grandchild dbo:royaltyTitle ?grandchildTitle .
  }
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?linkedPageTitle WHERE {
  VALUES ?georgeCameron { dbr:George_Hamilton_Cameron }
  
  ?georgeCameron dbo:wikiPageWikiLink ?linkedResource .
  ?linkedResource rdfs:label ?linkedPageTitle .
  FILTER(LANG(?linkedPageTitle) = 'en')
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:relatedEvent dbr:World_War_I .
  ?event dbo:relatedEvent dbr:Spanish_Flu .
  ?event dbo:participatingOrganisation dbr:United_States_Navy .
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Query for the birthplace of Cece Bell, author of El Deafo
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .

  # Query for the birthplace of Glenn Youngkin, governor of Virginia
  dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .
}
```",4,5,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  ?person dbo:residence dbr:Kyiv .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(LANG(?birthPlaceLabel) = 'en')
  
  # Example person: Taras Shevchenko
  VALUES ?person { dbr:Taras_Shevchenko }
}
```",3,4,4,3,1,3,2,20,0,0,142,0,0.0,0
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeOfCommander ?leaderOffice ?politicalParty
WHERE {
  # Office of the Commander in Central African Republic Civil War
  ?commander dbo:occupation dbr:Politician ;
             dbo:memberOf ?party1 ;
             dbo:residence dbr:Madrid .
  
  ?war dbr:Central_African_Republic_Civil_War ;
       dbo:participant ?commander .

  # Office Holder and Politician
  ?officeOfCommander dbo:holder ?commander ;
                    a dbo:Office .

  # Tenant of Madrid
  ?commander dbo:residence dbr:Madrid .

  # Office of the Leader of a Political Party
  ?leaderOffice dbo:holder ?partyLeader ;
                a dbo:Office .
  
  ?partyLeader dbo:occupation dbr:Politician ;
               dbo:memberOf ?party2 .

  # Political Party of Miguel Maura
  ?miguelMaura dbo:memberOf ?party1 ;
              dbp:name ""Miguel Maura""^^xsd:string .

  ?party1 a dbo:PoliticalParty .
  
  FILTER(?party1 = ?party2)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Pablo Aimar's team
  VALUES (?aimarTeam) { 
    dbr/Arsenal_F.C. 
    dbr/Boca_Juniors 
    dbr/Villarreal_CF 
  }
  
  # Juan Carlos Molina's team
  VALUES (?molinaTeam) {
    dbr/Club_Atlético_Vélez_Sarsfield 
    dbr/Sporting_Club_de_Porto 
    dbr/Club_Deportivo_Utrera 
  }

  # Players in All or Nothing: Manchester City who are athletes and soccer players
  ?player dbo:spouse ?actor .
  ?actor dbo:profession dbr/Athlete .
  ?player dbo:sportsTeam dbr/Manchester_City_F.C. .

  # Check if the player was part of both Aimar's and Molina's teams
  ?player dbo:memberOfSportsTeam ?team .
  FILTER (?team = ?aimarTeam || ?team = ?molinaTeam)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
# Query 1: Associated Musical Artist of Nick Curran
SELECT ?artist WHERE {
  ?curran dbo:associatedBand ?artist .
  FILTER(CONTAINS(LCASE(STR(?curran)), ""nick curran""))
}

UNION

# Query 2: Real Name of The Fabulous Thunderbirds Members
SELECT DISTINCT ?member ?realName WHERE {
  ?band foaf:name ""The Fabulous Thunderbirds""@en ;
        dbo:bandMember ?member .
  OPTIONAL { ?member foaf:name ?stageName . }
  OPTIONAL { ?member dbp:birthName ?realName . }
}

UNION

# Query 3: Band of the Band Member of Eric Clapton
SELECT DISTINCT ?otherBand WHERE {
  ?clapton dbo:bandMember ?member .
  FILTER(CONTAINS(LCASE(STR(?clapton)), ""eric clapton""))
  ?member dbo:associatedBand ?otherBand .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerBochum ?managerVitesse WHERE {
  # Manager of VfL Bochum in the 2007–08 season
  ?bochumSeason dbo:team dbr:VfL_Bochum ;
                dbo:manager ?managerBochum .
  
  # Manager of SBV Vitesse in the 2020–21 season
  ?vitesseSeason dbo:team dbr:SBV_Vitesse ;
                 dbo:manager ?managerVitesse .

  # Ensure both managers are native to West Germany
  ?managerBochum dbo:nationality dbr:West_Germany .
  ?managerVitesse dbo:nationality dbr:West_Germany .

  # Ensure the entities are sports clubs, organizations, and soccer clubs
  ?bochumSeason a dbo:Soccer_Club ;
                a dbo:Sports_Club ;
                a dbo:Organization .
  
  ?vitesseSeason a dbo:Soccer_Club ;
                 a dbo:Sports_Club ;
                 a dbo:Organization .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find persons who died at this place
  ?decedent dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?birthPlace) .

  # Check if they were native to both Grand Duchy of Finland and Russian Empire
  ?decedent dbo:nationality dbr:Grand_Duchy_of_Finland ;
            dbo:nationality dbr:Russian_Empire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""Michał Kazimierz Pac""@en .
  ?person a dbo:Person ;
          dbo:participatedIn|dbo:leaderOf ?event .

  FILTER (CONTAINS(LCASE(?event), ""conflict"") || CONTAINS(LCASE(?event), ""war""))
  FILTER (?event != dbr:Military_conflict)
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:sangeetNatakAkademiFellowship ?award .
  ?awardee dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel WHERE {
  ?carrie rdfs:label ""Carrie Johnson""@en .
  ?carrie dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlementName
WHERE {
  # Henry Clay Lewis's birthplace conditions
  { 
    ?henry dbr:Henry_Clay_Lewis .
    ?henry dbo:birthPlace ?birthPlaceLewis .
    ?birthPlaceLewis rdf:type dbpedia-owl:Settlement .
    ?birthPlaceLewis dbo:country dbr:United_States_of_America .
    ?birthPlaceLewis rdfs:label ?settlementName .
    FILTER (lang(?settlementName) = 'en')
  }
  
  # Quincy Adams Gillmore's birthplace conditions
  UNION 
  {
    ?quincy dbr:Quincy_Adams_Gillmore .
    ?quincy dbo:birthPlace ?birthPlaceGillmore .
    ?birthPlaceGillmore rdf:type dbpedia-owl:Settlement .
    ?birthPlaceGillmore dbo:country dbr:United_States_of_America .
    ?birthPlaceGillmore rdfs:label ?settlementName .
    FILTER (lang(?settlementName) = 'en')
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Louisiana ;
            dbo:politicalParty ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?leader foaf:name ""Eleftherios Venizelos""@en .
  ?leader dbo:partyLeaderOf dbr:National_Party_of_Greece .
  ?leader dbo:associatedWith ?war .
  ?war dbo:description ?description .

  OPTIONAL {
    ?war dbo:location dbr:Athens .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?bandMember ?bandGroupOrg
WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  ?plotkin dbo:associatedMusicalArtist ?firstArtist .
  
  FILTER (str(?plotkin) = ""James_Plotkin"")

  # Step 2: Find the associated musical artist of that artist
  ?firstArtist dbo:associatedMusicalArtist ?secondArtist .

  # Step 3: Identify band members of this second artist
  ?bandMember dbo:bandMember ?secondArtist .

  # Step 4: Ensure these are bands or groups and organizations
  ?bandGroupOrg rdf:type ?type .
  FILTER (
    (?type = dbo:Band || ?type = dbo:Group) &&
    EXISTS { ?bandGroupOrg rdf:type foaf:Organization }
  )

  # Step 5: Link to Burnt by the Sun (band)
  ?bandGroupOrg dbo:associatedMusicalArtist ?burntBySun .
  FILTER (str(?burntBySun) = ""Burnt_by_the_Sun_(band)"")
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  
  ?child dbo:childOf ?allanArbus .
  
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team ?season WHERE {
  # Find Thomas Letsch
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch"" ;
          dbo:nationality ?nationality .
  
  # Check if his nationality is related to West Germany
  FILTER (
    EXISTS { ?nationality rdfs:label ?label . FILTER (CONTAINS(LCASE(?label), ""west germany"")) }
  )
  
  # Find the team he managed and the season
  ?letsch dbo:managerOfTeam ?team ;
          dbo:managedSeason ?season .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1Name ?person1Party ?fatherName ?fatherParty WHERE {
  # Find Roy Leonardo Barreras Montealegre and his party affiliation
  ?person1 dbo:birthName ""Roy Leonardo Barreras Montealegre""@en .
  ?person1 dbo:partyAffiliation ?person1Party .

  # Find Sofía Petro's father and his party affiliation
  ?sofia dbp:father ?father .
  ?father dbo:birthName ?fatherName .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?party WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person dbo:nationality dbr:United_States . }
  OPTIONAL { ?person dbo:politicalParty ?party . }
  FILTER (CONTAINS(LCASE(?party), ""republican"") || CONTAINS(LCASE(?party), ""ruling party""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX p: <http://www.wikidata.org/prop/>

SELECT ?war WHERE {
  ?bayne wdt:P31 wd:Q482980; # instance of Royal Navy officer
         wdt:P361 ?event. # part of some event

  ?event wdt:P31/wdt:P279* wd:Q1656682; # instance of or subclass of war
         rdfs:label ?warLabel.

  FILTER(LANG(?warLabel) = ""en"").
  
  VALUES ?bayne { wd:Q123456 } # Replace with the actual Wikidata ID for William Bayne
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?tvShow ?societalEvent ?writer WHERE {
  # Commander in the Battle of Vienna
  VALUES (?battle) { dbr:Battle_of_Vienna_1683 }
  ?battle dbo:commander ?commander .
  
  # Check if there is a TV show related to the commander
  OPTIONAL {
    ?tvShow dbo:name ?name .
    FILTER(CONTAINS(LCASE(?name), LCASE(STR(?commander)))) .
  }

  # Societal event related to the commander
  OPTIONAL {
    ?event dbo:relatedTo ?commander ;
           a dbo:Event .
  }
  
  # Writer of works by George Ducas
  VALUES (?georgeDucas) { dbr:George_Ducas }
  ?georgeDucas dbo:author ?writer .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel WHERE {
  ?person rdfs:label ""Caroline Louise Bevan Symonds""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  dbr:Joey_B dbo:birthName ?joeyBBirthName .

  # Find the writer of ""The Live Anthology""
  dbr:The_Live_Anthology dbo:author ?writer .
  
  # Ensure the writer is a musical artist
  ?writer dbo:occupation dbr:Musical_artist .

  # Find a person with the same birth name as Joey B and who is also a musical artist
  ?person dbo:birthName ?joeyBBirthName ;
          dbo:occupation dbr:Musical_artist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .

  # Find his children
  ?child dbo:parent ?frederick .
  
  # Filter to find the child who is a politician
  ?child dbo:occupation dbp:Politician .

  # Retrieve the father of this child (which should be Frederick Stanley)
  ?father dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName WHERE {
  ?film dbo:title ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en') .

  OPTIONAL { 
    ?actor dbo:occupation dbr:Actor .
  }
  
  FILTER EXISTS {
    ?actor dbo:occupation dbr:Actor .
  }
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ottomanEntity ?parsonsAward WHERE {
  # Find an entity related to the Ottoman Empire
  ?ottomanEntity a dbo:Person ;
                 dbo:nationality dbr:Ottoman_Empire .

  # Find Charles Parsons and his awards
  ?parsons a dbo:Person ;
           foaf:name ""Charles Parsons"" ;
           dbo:honorificTitle ?title .
  
  OPTIONAL {
    ?parsons dbo:award ?parsonsAward .
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?creator dbo:creatorOf ?character ;
           foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""walter b. gibson"")) .

  OPTIONAL {
    ?work dbo:producer ?producer .
    ?producer foaf:name ?producerName .
    FILTER(CONTAINS(LCASE(?producerName), ""cora sue collins"") && CONTAINS(LCASE(STR(?work)), ""the living shadow""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university ?label ?officialWebsite WHERE {
  ?university a dbo:University ;
              rdfs:label ?label ;
              dbo:officialWebsite ?officialWebsite .
  FILTER(CONTAINS(LCASE(?label), ""plovdivski universitet paiziy hilendarski""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:United_States .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,10,0,63411,1.0,0.00015767647939956796,0.00031530324289385316
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:givenName ""Cynthia"" . }
  OPTIONAL { ?person foaf:familyName ""Ikponmwenosa Morgan"" . }
  OPTIONAL { ?person rdfs:label ?currentName FILTER regex(?currentName, ""Ciara"", ""i"") }
}
```",1,1,2,1,1,3,2,20,1,1048653,0,9.53603381096148e-07,1.0,1.9072049434752134e-06
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura"" .
  
  ?party dbo:member ?miguelMaura .

  # Find the leader of that party
  ?leader dbo:leader ?party .

  # Determine the office held by this leader
  ?officeHeld dbo:agent ?leader ;
              a dbo:OfficeHolder .

  ?officeHeld dbo:positionHeld ?office .

  # Identify Alberto Ruiz-Gallardón's residence
  ?albertoRuizGallardon a dbo:Person ;
                        foaf:name ""Alberto Ruiz-Gallardón"" .
  
  ?residence dbo:resident ?albertoRuizGallardon ;
             dbo:currentResident ?tenant .

  # Ensure the tenant is the leader of Miguel Maura's party
  FILTER (?leader = ?tenant)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?settlement WHERE {
  # Get birthplace of Ekaterina Zaharieva
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlace .

  # Find settlements in regions observing Eastern European Time (EET)
  ?region dbo:timeZone dbr:Eastern_European_Time ;
          dbo:settlement ?settlement .
  
  # Check if the birthplace is a settlement within an EET region
  FILTER (?birthPlace = ?settlement)
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title WHERE {
  ?work dbo:starring dbr:Richard_E._Grant .
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .
  ?work rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
```",2,3,3,2,1,3,3,71,0,3,53,0.0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?filmTitle WHERE {
  # Actors of ""Paradise"" (2013 film)
  { 
    ?film dbp:title ""Paradise""@en .
    ?film dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 2013) .
    ?film dbo:starring ?actor .
    BIND(""Paradise (2013)"" AS ?filmTitle)
  }
  
  UNION
  
  # Actors of ""Always"" (1989 film)
  { 
    ?film dbp:title ""Always""@en .
    ?film dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 1989) .
    ?film dbo:starring ?actor .
    BIND(""Always (1989)"" AS ?filmTitle)
  }
  
  UNION
  
  # Spouse of Janusz Kamiński
  { 
    ?person dbp:name ""Janusz Kamiński""@en .
    ?person dbp:spouse ?spouse .
    ?spouse rdfs:label ?actorLabel .
    FILTER(LANG(?actorLabel) = 'en') .
    BIND(""Spouse of Janusz Kamiński"" AS ?filmTitle)
  }
}
```",3,3,4,1,3,2,3,28,0,7,1,0.0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Sam Concepcion's profession
SELECT ?profession WHERE {
  dbr:Sam_Concepcion dbo:profession ?profession .
}

UNION

# Query for The Shadow's alter ego
SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alias ?alterEgo .
}

UNION

# Query for Bob Thompson's band
SELECT ?band WHERE {
  dbr:Bob_Thompson_Musician dbo:band ?band .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?force ?entityInCharleston ?war
WHERE {
  # Quincy Adams Gillmore and his awards
  dbr:Quincy_A._Gillmore dbo:awardRecipient ?awardee .
  
  # Awardee's military force
  ?awardee dbo:militaryUnit ?force .

  # Entity in Charleston, South Carolina during the Civil War
  ?entityInCharleston a dbo:MilitaryConflict ;
                     dbp:location dbr:Charleston,_South_Carolina ;
                     dbo:participatedIn ?war .
  
  # Awardee's Medal of Honor and associated war
  ?awardee dbo:recipientOfMedalOfHonor true ;
          dbo:participatedIn ?war .

  FILTER(?war = dbr:American_Civil_War) # Assuming the context is the American Civil War
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?cemetery a dbo:Cemetery ;
            dbo:location dbr:Los_Angeles,_California .
  ?person dbo:decedent ?cemetery .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2883,0,0.0,0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?realName ?child WHERE {
  ?person rdfs:label ""Peter IV of Aragon""@en .
  ?person dbo:realName ?realName .
  ?person rdf:type dbo:Monarch .

  ?person dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Ferdinand III's child, Leopold I
  dbr:Ferdinand_III_Holy_Roman_Emperor dbo:child dbr:Leopold_I,_Holy_Roman_Emperor .
  
  # Find the father of Leopold I (Ferdinand III)
  dbr:Leopold_I,_Holy_Roman_Empire dbo:father dbr:Ferdinand_III_Holy_Roman_Emperor .

  # Identify a commander in the Thirty Years' War
  ?commander dbo:militaryCommanderOf dbr:Thirty_Years'_War .
  
  # Filter to find Albrecht von Wallenstein as a notable commander
  FILTER(?commander = dbr:Albrecht_von_Wallenstein)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfYeshaqI ?naodsGrandfather ?reference
WHERE {
  # Find Yeshaq I's child who is royalty
  ?yeshaq1 dbr:Yeshaq_I dbo:child ?childOfYeshaqI .
  ?childOfYeshaqI a dbo:Monarch .

  # Find Na'od's father
  ?naodsFather dbo:child dbr:Na'ad I .

  # Find Na'od's grandfather (father of the father)
  ?naodsGrandfather dbo:parent ?naodsFather .
  
  # Ensure Na'od's grandfather is royalty and an office holder
  ?naodsGrandfather a dbo:Monarch ;
                   dbo:officeHolder ?office .

  # Get reference links for these individuals
  OPTIONAL { ?childOfYeshaqI rdfs:seeAlso ?reference1 }
  OPTIONAL { ?naodsGrandfather rdfs:seeAlso ?reference2 }

  BIND(CONCAT(STR(?reference1), STR(?reference2)) AS ?reference)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Shelby Oaks""@en .
  ?film dbo:starring ?actor .
  ?actor a foaf:Person .
}
```",1,1,2,1,1,3,3,71,4,0,1,1.0,0.8,0.888888888888889
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the alter ego character from The Golden Master series
  ?character dbo:portrayedBy ?actor .
  ?character rdfs:label ""The Golden Master""@en .

  # Ensure this actor has acted in ATL
  ?atlFilm dbo:starring ?actor ;
           dbr:ATL .

  # Ensure this actor has also acted in Shelby Oaks
  ?shelbyOaksFilm dbo:starring ?actor ;
                  dbr:Shelby_Oaks .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?father WHERE {
  ?officeHolder a dbo:RoyalFamilyMember ;
               dbo:child ?child .
  ?child dbo:parent ?father .
  ?father a dbo:RoyalFamilyMember .
  ?officeHolder dbo:officeTitle ?title .
  
  OPTIONAL { 
    ?connection dbo:relatedTo dbr:William_I_of_England .
    FILTER (?officeHolder = ?connection || ?child = ?connection)
  }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?label ?genre ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Fabulous Thunderbirds""@en .
  
  OPTIONAL { ?band dbo:genre ?genre . }
  OPTIONAL { ?band dbo:member ?member . }

  SERVICE <http://dbpedia.org/sparql> {
    ?band rdfs:label ?label .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  ?owner dbo:owns ?ship .

  # Step 2: Determine the spouse of the author of ""An Invitation to the White House""
  ?book dbo:author ?author ;
        rdfs:label ""An Invitation to the White House""@en .
  
  ?spouse dbo:spouse ?author ;
          dbo:occupation dbr:Politician .

  # Step 3: Find a disease that is also a societal event
  ?disease a dbo:Disease ;
           dbo:societalEvent ?event .

  # Step 4: Identify a war involving both the owner of USS Arcadia and the spouse of the author
  ?war dbo:participant ?owner, ?spouse .

  # Step 5: Determine the commander in that war
  ?commander dbo:commanded ?war .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?university a dbo:University ;
              rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  ?alumnus dbo:alumnusOf ?university .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?region ?state ?settlement WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:memberOfBand ?band .
  
  # Step 2: Find the band members who are also musical artists
  ?band dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Step 3: Determine the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  
  # Step 4: Identify the region, state, and settlement related to the award
  ?award dbp:region ?region .
  ?region a dbo:Region ;
          dbo:state ?state ;
          dbo:settlement ?settlement .

  # Step 5: Find the native of this region who is also a band member
  ?bandMember dbo:nativePlace ?nativePlace .
  ?nativePlace dbp:country ""United States""^^xsd:string .
  ?nativePlace dbp:region ?region ;
               dbp:state ?state ;
               dbp:settlement ?settlement .

}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  ?person rdfs:label ?currentName .
  FILTER (lang(?currentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Find children of Albrecht, Duke of Württemberg who are royalty
  ?albrechtChild dbo:childOf <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> .
  ?albrechtChild a dbo:Person .
  OPTIONAL { ?albrechtChild dbo:royalTitle ?title . FILTER EXISTS { ?title } }

  # Find grandchildren of Albrecht who are royalty
  ?grandchild dbo:childOf ?albrechtChild .
  ?grandchild a dbo:Person .
  OPTIONAL { ?grandchild dbo:royalTitle ?grandchildTitle . FILTER EXISTS { ?grandchildTitle } }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?memberName WHERE {
  ?person dbo:birthName ""Emilia Yancheva Valeva"" .
  ?person dbo:bandMember ?band .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?book dbo:title ""An Invitation to the White House""@en .
  ?book dbo:author ?author .

  OPTIONAL { ?author dbo:occupation dbr:Politician . }
  OPTIONAL { ?author dbo:officeHolderOf ?office . }

  FILTER EXISTS { 
    ?author dbo:spouse ?spouse .
  }

  FILTER NOT EXISTS {
    ?author dbo:occupation [ !rdf:type dbr:Politician ] .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouseName WHERE {
  # Find Harriette Arlene Lake by birth name and party affiliation
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en ;
          dbp:birthday ?birthday ;
          dbp:birthName ""Harriette Arlene Lake""@en .
  
  OPTIONAL { ?person dbo:party dbr:Republican_Party_(United_States) . }
  
  # Find spouse who is an actor
  ?spouse a dbo:Actor ;
          foaf:name ?spouseName ;
          dbo:spouse ?person .

  # Check if the actor worked on a film produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine ;
        dbo:actor ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person rdfs:label ""Eugène Cattin""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person foaf:jobTitle ?occupation . }
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Myat Hpone Pyo's father
  ?myatHponePyo dbo:father ?father .
  
  # Check if the spouse of his father is royal
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Monarch ; # Assuming royalty can be represented as Monarch

  # Find Min Hla Htut's parent
  ?minHlaHtut dbo:parent ?parent .

  # Ensure the spouse is also a child of Min Hla Htut's parent
  ?spouse dbo:childOf ?parent .
  
  # Bind Myat Hpone Pyo and Min Hla Htut to their respective resources
  dbr:Myat_Hpone_Pyo ?myatHponePyo .
  dbr:Min_Hla_Htut ?minHlaHtut .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?politicianRole ?alterEgo ?professionalRole
WHERE {
  # Find actor from ""Ab Kya Hoga""
  ?show dcterms:title ""Ab Kya Hoga""@en .
  ?show dbo:starring ?actor .

  # Check if the actor is also a politician
  OPTIONAL { 
    ?actor dbo:occupation dbr:Politician .
    ?actor dbo:roleName ?politicianRole .
  }

  # Find alter ego of The Shadow and associated professional role
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  OPTIONAL {
    ?alterEgo dbo:profession ?professionalRole .
  }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gillmoreForce ?medalOfHonorWar ?lewisBirthPlace WHERE {
  # Quincy Adams Gillmore's military rank or force
  dbr:Quincy_A._Gillmore dbo:militaryRank ?gillmoreForce .

  # Medal of Honor and its associated war
  dbr:Medal_of_Honor dbo:awardedBy dbr:United_States_Congress .
  dbr:Medal_of_Honor dbo:associatedWithWar ?medalOfHonorWar .

  # Henry Clay Lewis's birthplace and nationality
  dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirthPlace ;
                      a dbo:American .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonDescendant WHERE {
  # Find Roger III's parent
  ?rogerIII dbo:parent ?parentOfRogerIII .
  
  # Find the child of Roger III's parent (could be Roger III or a sibling)
  ?childOfParent dbo:parent ?parentOfRogerIII .

  # Find Alfonso VI's child
  ?alfonsoVI dbo:child ?childOfAlfonsoVI .

  # Find the grandchild of Alfonso VI
  ?grandChildOfAlfonsoVI dbo:parent ?childOfAlfonsoVI .

  # Check if there is a common descendant
  FILTER (?childOfParent = ?grandChildOfAlfonsoVI)
  
  # Bind the result to a variable for clarity
  BIND(?childOfParent AS ?commonDescendant)

  # Specific individuals
  VALUES ?rogerIII { <http://dbpedia.org/resource/Roger_III,_Duke_of_Sicily> }
  VALUES ?alfonsoVI { <http://dbpedia.org/resource/Alfonso_VI_of_Léon_and_Castile> }
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?finalParent
WHERE {
  # Step 1: Find Princess Aisha bint Faisal's parent who is a royalty
  ?princessAisha dbo:child ?parentAisha .
  FILTER (str(?princessAisha) = ""Princess_Aisha_bint_Faisal"") .

  ?parentAisha rdf:type ?royaltyType .
  FILTER (?royaltyType IN (dbo:RoyalFamilyMember, dbo:Monarch)) .

  # Step 2: Find the child of this parent who is also a royalty
  ?parentAisha dbo:child ?royalChild .
  
  ?royalChild rdf:type ?childRoyaltyType .
  FILTER (?childRoyaltyType IN (dbo:RoyalFamilyMember, dbo:Monarch)) .

  # Step 3: Find the parent of this royal child
  ?royalChild dbo:parent ?finalParent .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward rdf:type dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 2: Find his parent
  ?edward dbo:parent ?parent .

  # Step 3: Find the child of this parent who is a politician and office holder
  ?child dbo:parent ?parent ;
         rdf:type dbo:Politician, dbo:OfficeHolder .

  # Step 4: Find the parent of this identified child
  ?child dbo:parent ?parentOfChild .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Query 1: Retrieve Marty Pollio's birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthdate WHERE {
    dbr:Marty_Polio dbo:birthday ?birthdate .
}

# Query 2: Find athletes born on the same day as Marty Pollio
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
    # Replace 'MartyPolliosBirthday' with the actual date obtained from Query 1
    BIND(""YYYY-MM-DD"" AS ?birthdate) .
    
    ?person a dbo:Athlete ;
            dbo:birthday ?birthdate .
    OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = ""en"") }
}
```

Note: Replace `""YYYY-MM-DD""` in the second query with the actual birthdate obtained from the first query.",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""Always the Love Songs""@en .
  OPTIONAL { ?album dbo:artist ?writer . }
}
```",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee
WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Step 2: Find one of his children
  ?child dbo:parent ?grandParent .

  # Step 3: Ensure the grandParent is a politician and office holder
  ?grandParent dbo:occupation dbr:Politician .
  ?grandParent dbo:officeHolder ?office .

  # Step 4: Identify child of this politician who was awarded Commander of the Royal Victorian Order
  ?grandParent dbo:child ?awardee .
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

  # Step 5: Find the parent of this awardee
  ?awardee dbo:parent ?parentOfAwardee .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?partyLeader
WHERE {
  # Find the office of commander for Manuel Pinto da Costa in a military conflict
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant dbr:Manuel_Pinto_da_Costa .
  
  ?pinto dbo:office ?commanderOffice .

  FILTER (?pinto = dbr:Manuel_Pinto_da_Costa)

  # Find the leader of the Conservative Republican Party (Spain)
  dbr:Conservative_Republican_Party_(Spain) dbo:partyLeader ?leader .
  ?leader dbo:office ?partyLeader .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""George Hamilton Cameron""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""The Window"" .
  ?film dbo:starring ?castMember .
  ?castMember dbo:characterName ""Johnny Doughboy"" .
  ?castMember dbo:name ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party ?leader WHERE {
  # Find political parties involved in the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (CONTAINS(LCASE(str(?election)), ""galicia"") && CONTAINS(LCASE(str(?date)), ""2009""))
  
  ?party dbo:participatedInElection ?election .
  
  # Find the leader of each party
  OPTIONAL { 
    ?party dbo:leader ?leader .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:author ""Bill Clinton""@en .
  ?person dbo:officeHolder ""President of the United States""@en .
  ?person dbo:commander ""Third Taiwan Strait Crisis""@en .
  ?person dbo:title ""Back to Work (book)""@en .
  ?person dbo:spouse ?spouse .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the author of both books
  ?author dbo:book dbr:An_Invitation_to_the_White_House .
  ?author dbo:book dbr:Back_to_Work_(book) .

  # Identify the war that is a disease and societal event
  ?war dbo:name ?name .
  FILTER CONTAINS(LCASE(?name), ""flu"") || CONTAINS(LCASE(?name), ""pandemic"")

  # Find the commander in this war
  ?author dbo:commanderInWar ?war .

  # Identify the owner of USS Arcadia (ID-1605)
  ?owner dbo:owns dbr:USS_Arcadia_(ID-1605) .

  # Ensure the author is connected to the owner through the war
  ?author dbo:commanderInWar ?war .
  ?owner dbo:commanderInWar ?war .

  # Find the spouse who is a politician and office holder
  ?spouse dbo:spouse ?author ;
          a dbo:Politician ;
          dbo:officeHolder true .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gibsonProfession ?princeBand
WHERE {
  # Walter B. Gibson's professions
  OPTIONAL { 
    dbr:Walter_B._Gibson dbo:profession ?gibsonProfession .
  }
  
  # Prince's band
  dbr:Prince dbo:band ?princeBand .
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?combatant WHERE {
  ?battle dbo:wikiPageID ""Battle_of_Fort_Royal_(1690)"" .
  ?battle dbp:combatant ?combatant .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent(s)
  ?parent dbo:child ?philip .

  # Step 3: Determine the father among the parents
  ?father rdf:type dbo:Man ;
          dbo:child ?philip .

  # Step 4: Identify the spouse of the father
  ?spouse dbo:spouse ?father .
  
  # Step 5: Check if the spouse is royalty
  ?spouse dbo:royalty true .

  # Step 6: Retrieve the spouse's name
  ?spouse rdfs:label ?spouseName .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Step 1: Identify the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child ?margareteSophie .
  VALUES ?margareteSophie { dbp:Margarete_Sophie_of_Austria }

  # Step 2: Find a child of this parent who is royalty
  ?parent dbo:child ?royaltyChild .
  
  # Check if the child has a royal title or role
  OPTIONAL {
    ?royaltyChild dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
           CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince"") ||
           CONTAINS(LCASE(?title), ""archduke""))
  }

  # Step 3: Identify the child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrechtChild dbo:child ?philippAlbrecht .
  VALUES ?philippAlbrecht { dbp:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg }

  # Step 4: Find the predecessor of this child
  OPTIONAL {
    ?predecessor dbo:succeededBy ?philippAlbrechtChild .
  }
  
  # Combine information to find the correct individual
  FILTER(?royaltyChild = ?predecessor)
  
  # Return the child of the parent who is also a predecessor
  ?parent dbo:child ?childOfParent .
  ?childOfParent dbo:child ?childOfChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?actor ?profession WHERE {
  # The Shadow as a character created by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Instances where The Shadow is portrayed by actors
  ?character dbo:portrayedBy ?actor .

  # Filter for professions related to acting, singing, or hosting
  ?actor dbo:occupation ?profession .
  FILTER (
    ?profession IN (dbr:Actor, dbr:Singer, dbr:Television_host)
  )
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?profession WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person foaf:name ?name .
  ?person dbo:profession ?profession .
  FILTER (
    CONTAINS(LCASE(?profession), ""writer"") ||
    CONTAINS(LCASE(?profession), ""musical artist"")
  )
  
  OPTIONAL {
    ?work dbo:title ""The Live Anthology"" ;
          dbo:artist ?person .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant (GROUP_CONCAT(?locationLabel; separator="", "") AS ?locations)
WHERE {
  # Alberto Ruiz-Gallardón's residence and office locations
  {
    VALUES ?person { dbr:Alberto_Ruiz-Gallardón }
    OPTIONAL { ?person dbo:residence ?residence . }
    OPTIONAL { ?person dbo:officeLocation ?officeLocation . }
    BIND(?person AS ?tenant)
  }

  # Mariano Rajoy's office location
  {
    VALUES ?person { dbr:Mariano_Rajoy }
    OPTIONAL { ?person dbo:officeLocation ?officeLocation . }
    BIND(?person AS ?tenant)
  }

  # Get labels for locations
  OPTIONAL { ?residence rdfs:label ?residenceLabel . FILTER(LANG(?residenceLabel) = ""en"") }
  OPTIONAL { ?officeLocation rdfs:label ?officeLocationLabel . FILTER(LANG(?officeLocationLabel) = ""en"") }

  # Combine results to get distinct tenants and their locations
  VALUES ?location { ?residence ?officeLocation }
  BIND(COALESCE(?residenceLabel, ?officeLocationLabel) AS ?locationLabel)
}
GROUP BY ?tenant
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?clubName ?managerName ?nativeCity
WHERE {
  # Find Jamie McCunnie's club
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Jamie McCunnie"" ;
          dbo:playsFor ?club .
  
  # Ensure the club is both a sports club and a soccer club
  ?club a dbo:SportsClub, dbo:SoccerTeam .

  # Get the name of the club
  ?club rdfs:label ?clubName .

  # Find the manager of the club
  ?club dbo:manager ?manager .
  ?manager foaf:name ?managerName .

  # Ensure Jamie McCunnie is native to Bristol
  ?player dbp:nativePlace dbr:Bristol .

  # Get the city name (Bristol)
  OPTIONAL { 
    ?player dbp:nativePlace ?nativeCity .
  }
  
  FILTER(LANG(?clubName) = 'en')
  FILTER(LANG(?managerName) = 'en')
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bookTitle WHERE {
  # Part 1: Find books that are American and authored by Joe Biden
  ?work dbo:author dbr:Joe_Biden ;
        a dbo:Book ;
        dbo:country dbr:United_States_of_America .
  
  OPTIONAL { ?work rdfs:label ?bookTitle . FILTER (lang(?bookTitle) = 'en') }
  
  UNION
  
  # Part 2: Find any other written works by Joe Biden
  ?writtenWork dbo:author dbr:Joe_Biden ;
               a dbo:CreativeWork .
  
  OPTIONAL { ?writtenWork rdfs:label ?workTitle . FILTER (lang(?workTitle) = 'en') }
}
```",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?player foaf:name ""Jamie McCunnie""@en .
  ?player dbo:member|dbo:playerForTeam ?club .
  ?club a dbo:SportsClub ;
        a dbo:SoccerClub .
}
```",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?playerLabel WHERE {
  VALUES ?club { 
    dbr:Sun_Pegasus_FC 
    dbr:Kitchee_SC
  }
  
  ?club dbo:teamMember ?player .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?societalEvent ?tvShow ?dragoonConnection ?parentOfParent
WHERE {
  # Ferdinand II and his children
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  
  # Child was a commander in the war
  ?child dbo:militaryCommanderOf ?war .

  # Child associated with societal event and television show
  ?child dbo:associatedWith ?societalEvent .
  ?child dbo:appearedIn ?tvShow .

  # Connection to 2nd Dragoon Regiment (France)
  ?dragoonConnection dbo:member ?child .
  dbr:2nd_Dragoon_Regiment_(France) dbo:member ?dragoonConnection .

  # Child is the father of another individual who is the parent of Archduke Charles Joseph
  ?child dbo:fatherOf ?parentOfParent .
  ?parentOfParent dbo:parentOf dbr:Archduke_Charles_Joseph_of_Austria .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName WHERE {
  ?person rdfs:label ""Rodney Lees""@en .
  FILTER NOT EXISTS { ?person dbo:abstract ?a . FILTER (lang(?a) = 'en') }
  ?person dbo:award ?award .
  ?award rdfs:label ?awardName .
  FILTER(LANG(?awardName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?office WHERE {
  # George Ducas as a commander in the Russo-Polish War
  dbr:George_Ducas dbo:commanderOf dbr:Russo-Polish_War_(1654–1667) .
  
  # Finding his successor
  dbr:George_Ducas dbo:successor ?successor .

  # Ensuring the successor is an office holder and a politician
  ?successor dbo:officeHolder ?office .
  FILTER EXISTS { ?successor dbo:politicalAffiliation ?affiliation . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Paulus Powell's birth place
SELECT ?birthPlace WHERE {
    dbr:Paulus_Powell dbo:birthPlace ?birthPlace .
}

# Step 2: Determine the governor of that region (assuming it is a US state for this example)
SELECT DISTINCT ?governor WHERE {
    ?region dbo:stateGovernor ?governor .
    FILTER(?birthPlace = ?region) # Assuming birth place is directly linked to a region
}

# Step 3: Find Cece Bell's birth place
SELECT ?ceceBirthPlace WHERE {
    dbr:Cecilie_Bell dbo:birthPlace ?ceceBirthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?birthPlaceLabel WHERE {
  VALUES (?author) { 
    dbr:C._Bell 
    dbr:Vince_Gilligan 
  }
  
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
  
  OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . }
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label
WHERE {
  VALUES ?country { dbr:Colombia }
  ?entity dbo:country ?country .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?team WHERE {
  # Find Marcelo Sarmiento's birthdate
  VALUES ?sarmientoBirthDate { 
    SELECT ?birthdate WHERE { 
      dbr:Marcelo_Sarmiento dbo:birthday ?birthdate .
    }
  }

  # Find a soccer player and manager born on the same date as Marcelo Sarmiento
  ?player dbo:birthDate ?birthdate ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  FILTER (?birthdate = ?sarmientoBirthDate)

  # Get Sergio Agüero's team during that year
  ?aguero dbo:birthDate ?agueroBirthDate .
  BIND(YEAR(?birthdate) AS ?year)
  
  ?team dbo:member ?aguero ;
        dbo:seasonStartYear ?startYear ;
        dbo:seasonEndYear ?endYear .

  FILTER (?agueroBirthDate <= ?birthdate && 
          ((?startYear <= ?year && ?year <= ?endYear) || 
           (?startYear < ?year+1 && ?year+1 <= ?endYear)))

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?bandName WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alias dbr:Lamont_Cranston .
  
  # Find information about Bobby ""Blue"" Bland (Robert Lamar Thompson)
  dbr:Bobby_""Blue""_Bland dbo:birthName ?birthName .
  FILTER(?birthName = ""Robert Lamar Thompson"") .

  # Find the band associated with Bobby ""Blue"" Bland
  OPTIONAL {
    ?bobbyBand dbo:member dbr:Bobby_""Blue""_Bland .
    ?bobbyBand dbo:name ?bandName .
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?crisis dbo:wikiPageRedirects dbr:Third_Taiwan_Strait_Crisis .
  ?crisis dbo:militaryCommander ?commander .
  FILTER(CONTAINS(LCASE(STR(?commander)), ""liu huaqing""))
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?band dbr:The_Fabulous_Thunderbirds ;
        dbo:member ?bandMember .
  FILTER (?bandMember = dbr:Kim_Wilson)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty
WHERE {
  # Find the political role of Patrice Martin-Lalande and his successor
  ?role dbo:member dbr:Patrice_Martin-Lalande .
  OPTIONAL { 
    ?role dbp:successor ?successor .
    ?successor rdf:type dbo:Politician ;
               dbo:nationality dbr:France ;
               dbo:occupation dbo:Politician .
    
    # Get the political party of the successor
    ?successor dbo:party ?successorParty .
  }
}
```",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Cecilie_Bell 
    dbr:Glenn_Youngkin 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfRogerII ?grandChildOfConstanceSpouse ?royaltyChildOfWilliamI ?fatherOfRoyaltyChild
WHERE {
  # Step 1: Find a child of Roger II of Sicily who is royalty
  ?childOfRogerII dbo:parent dbr:Roger_II_of_Sicily .
  ?childOfRogerII dbo:occupation dbr:Monarch .

  # Step 2: Find the spouse of Constance of Burgundy and their child
  ?spouseConstance dbo:spouse dbr:Constance_of_Burgundy .
  ?grandChildOfConstanceSpouse dbo:parent ?spouseConstance .
  ?grandChildOfConstanceSpouse dbo:occupation dbr:Monarch .

  # Step 3: Find a child of William I of Sicily who is royalty
  ?royaltyChildOfWilliamI dbo:parent dbr:William_I_of_Sicily .
  ?royaltyChildOfWilliamI dbo:occupation dbr:Monarch .

  # Step 4: Find the father of this child
  ?fatherOfRoyaltyChild dbo:child ?royaltyChildOfWilliamI .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?charlesI dbo:father ?father .
  ?father rdfs:label ""Andrew III of Hungary""@en .
  
  ?andrewIII dbo:mother ?mother .
  ?mother rdfs:label ""Elizabeth the Cuman""@en .

  ?elizabethC dbp:spouse dbr:Charles_II_of_Naples .
  ?elizabethC dbo:childOf dbr:Stephen_V_of_Hungary .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?teamLabel WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Pablo Aimar""@en .
  ?player dbo:team ?team .
  ?team rdfs:label ?teamLabel .
  FILTER(LANG(?teamLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?tvSeries dbo:title ""Dispatches from Elsewhere""@en .
  ?tvSeries dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:Poland .
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:occupation ?occupation .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?occupation), ""athlete""))
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:President ;
          foaf:name ""Theodor Heuss""@en .
  ?person dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?birthPlace WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Marshawn Lynch"" ;
          dbo:birthName ?birthName .
  ?person dbo:birthPlace dbr:Oakland,_California .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?childOfSpouse ?predecessor ?royalDescendant ?parentOfFather
WHERE {
  # Step 1: Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Step 2: Find a royal child of that spouse
  ?spouse dbo:child ?childOfSpouse .
  FILTER EXISTS { ?childOfSpouse rdf:type dbo:Monarch }

  # Step 3: Identify the predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Step 4: Find a royal descendant through the child of the predecessor
  ?predecessor dbo:child ?intermediateChild .
  ?intermediateChild dbo:child ?royalDescendant .
  FILTER EXISTS { ?royalDescendant rdf:type dbo:Monarch }

  # Step 5: Identify the parent of Charles I of Hungary's father, ensuring they are royalty
  dbr:Charles_I_of_Hungary dbo:father ?fatherOfCharlesI .
  ?fatherOfCharlesI dbo:parent ?parentOfFather .
  FILTER EXISTS { ?parentOfFather rdf:type dbo:Monarch }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  # Check if this person was managing VfL Bochum during the 2007–08 season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:manager ?person .
  
  # Retrieve the manager of that team for the specified season
  ?vflBochumSeason rdf:type dbo:SoccerClubSeason , dbo:SportsTeamSeason , dbo:SportsSeason ;
                   dbo:team dbr:VfL_Bochum ;
                   dbo:manager ?manager .

  # Get the name of this manager
  ?manager foaf:name ?managerName .
}
```",5,12,6,3,2,3,3,71,0,33,1,0.0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  # Find the spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?billClinton .
  
  # Find books about Bill Clinton and their authors
  ?book a dbo:Book ;
        dbo:about dbr:Bill_Clinton ;
        dbo:author ?author .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royPartyLabel ?fatherName ?fatherPartyLabel
WHERE {
  # Roy Barreras's political party
  ?roy a dbo:Person ;
       foaf:name ""Roy Barreras"" ;
       dbo:party ?royParty .
  
  # Sofía Petro's father (assuming it is Gustavo Petro)
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro"" ;
         dbo:parent ?father .

  ?father a dbo:Person ;
          foaf:name ?fatherName ;
          dbo:party ?fatherParty .
  
  # Labels for the parties
  ?royParty rdfs:label ?royPartyLabel .
  ?fatherParty rdfs:label ?fatherPartyLabel .
  
  FILTER(lang(?royPartyLabel) = ""en"")
  FILTER(lang(?fatherPartyLabel) = ""en"")
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?smitaPatil a dbo:FilmActor ;
              foaf:name ""Smita Patil""@en .
  ?smitaPatil dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office1 ?office2 WHERE {
  # Part 1: Leader of the Conservative Republican Party in Spain and tenant of Madrid
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  ?leader dbo:leaderOf ?party ;
          dbo:office ?office1 ;
          dbo:residence dbr:Madrid .

  # Part 2: Commander in the Central African Republic Civil War and politician
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Central African Republic Civil War""@en .
  
  ?commander dbo:role ?role ;
             dbo:office ?office2 ;
             dbo:memberOf ?party2 ;
             dbo:participatedIn ?war .

  FILTER(CONTAINS(LCASE(?role), ""commander""))
  FILTER EXISTS { ?party2 a dbo:PoliticalParty }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  dbr:Mikołaj_Kazimierz_Pac dbo:commander ?militaryRole .
  
  # The military role is part of a military conflict
  ?militaryRole dbo:militaryConflict ?conflict .

  # Find the successor of Michał Kazimierz Pac in this role
  ?militaryRole dbo:successor ?successor .
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?yeshaqI ?royalParent ?alterEgo
WHERE {
  # Find Yeshaq I and his royal parent
  dbr:Yeshaq_I a dbo:Monarch ;
               dbo:parent dbr:Zara_Yaqob .

  # Identify the alter ego of The Shadow
  dbr:Lamont_Cranston rdfs:label ""Lamont Cranston""@en .
  FILTER CONTAINS(LCASE(?alterEgo), ""lamont cranston"")

  # Bind Yeshaq I's royal parent and Lamont Cranston as the alter ego
  BIND(dbr:Zara_Yaqob AS ?royalParent)
  BIND(""Lamont Cranston"" AS ?alterEgo)
}
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Princess Aisha bint Faisal's resource
  ?princess a dbo:Person ;
            foaf:name ""Aisha bint Faisal""@en .
  
  # Identify her children who are royalty
  ?princess dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .

  # Find the grandchildren of Princess Aisha bint Faisal who are royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?profession 
WHERE {
  ?character dbo:alias ""The Shadow""@en .
  ?character dbo:alterEgo dbr:Lamont_Cranston .
  OPTIONAL { ?character dbo:profession ?profession }
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:memberOf ?band .
  
  # Step 2: Find the birth name of Bobby Shmurda
  dbr:Bobby_Shmurda dbp:birthName ?birthName .

  # Step 3: Determine the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:awardReceived ?award .
  
  # Step 4: Identify the region, state, and settlement of the award
  ?award dbo:location ?region .
  ?region a dbo:Region ;
          dbo:country dbr:United_States ;
          dbo:stateOrProvince ?state ;
          dbo:settlement ?settlement .

  # Step 5: Find a band member who is also a musical artist
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicalArtist .
  
  # Step 6: Ensure the person is native to the region/state/settlement identified
  ?bandMember dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:Region ;
               dbo:country dbr:United_States ;
               dbo:stateOrProvince ?state ;
               dbo:settlement ?settlement .
  
  FILTER(?region = ?nativePlace)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child (SAMPLE(?father) AS ?father)
WHERE {
  # Find children of Roger II of Sicily
  ?person dbo:childOf db:Roger_II_of_Sicily ;
          a dbo:Person .
  
  # Check if this person is a father to any child of William I of Sicily
  ?person dbo:father ?royalChild .
  ?royalChild dbo:childOf db:William_I_of_Sicily .

  # Ensure the person has royalty status
  OPTIONAL { ?person dbo:royalty true . }
  
  FILTER EXISTS { ?person dbo:royalty true } # Ensures that the person is a royalty

}
GROUP BY ?child
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?associatedBand WHERE {
  # Find Stuart Mcbeath Tosh and his associated band
  { 
    ?person rdfs:label ""Stuart Mcbeath Tosh""@en .
    ?person dbo:associatedBand ?associatedBand .
  }
  
  UNION
  
  # Find Billy Lyall and his associated band
  {
    ?person rdfs:label ""Billy Lyall""@en .
    ?person dbo:associatedBand ?associatedBand .
  }

  FILTER (lang(?associatedBand) = 'en')
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?birthPlace WHERE {
  # Identify the team VfL Bochum
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportTeam dbr:Germany .

  # Find the manager during the 2007-08 season
  OPTIONAL { 
    dbr:VfL_Bochum dbo:manager ?manager .
  }

  # Filter managers by birthplace in West Germany
  FILTER EXISTS {
    ?manager dbo:birthPlace ?birthPlace ;
             rdfs:label ?managerLabel .
    VALUES ?birthPlace { dbr:West_Germany }
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Step 1: Find Maria of Bytom's spouse
  ?maria dbo:spouse ?spouseMaria .
  FILTER(STR(?maria) = ""Maria_of_Bytom"")

  # Step 2: Find the father of Philip I, Prince of Taranto
  ?philip dbp:father ?fatherPhilip .

  FILTER(STR(?philip) = ""Philip_I,_Prince_of_Taranto"")

  # Step 3: Find the spouse of this father
  ?fatherPhilip dbo:spouse ?spouseFatherPhilip .

  # Step 4: Identify common individual who is both:
  # - The parent (specifically the father) of Maria of Bytom's spouse
  # - A royalty
  # - The spouse of the father of Philip I, Prince of Taranto

  ?parentOfFather dbo:spouse ?spouseMaria ;
                  dbo:father ?spouseMaria ;
                  a dbo:Royal .

  FILTER(?parentOfFather = ?spouseFatherPhilip)

  # Step 5: Find the parent of this individual who is royalty
  ?royalParent dbo:child ?parentOfFather .
  FILTER(STR(?royalParent) != STR(?parentOfFather))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName WHERE {
  VALUES ?film { dbr:ATL_(2006_film) }
  
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace ?place .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""ackquille jean pollard"")) .
  ?band dbo:member ?person .
  ?band foaf:name ""Uncle Murda"" .
  ?place rdfs:label ""Florida""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?soccerPlayer ?soccerTeam ?athlete ?martyBirthday WHERE {
  # Find the soccer player and manager born on 1979-11-03
  ?soccerPlayer dbo:birthDate ""1979-11-03""^^xsd:date ;
                a dbo:SoccerPlayer, dbo:SportsManager .

  # Get the team of this soccer player/manager
  OPTIONAL { ?soccerPlayer dbo:team ?soccerTeam . }

  # Find Marty Pollio's birthdate
  dbr:Marty_Polloi dbo:birthDate ?martyBirthday .

  # Find an athlete with the same birthday as Marty Pollio
  ?athlete dbo:birthDate ?martyBirthday ;
           a dbo:Athlete .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX schema: <http://schema.org/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace and ensure it is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type schema:Country .

  # Identify Alexander II, Grand Duke of Finland's administration period
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:reignStart ?start ;
                                            dbo:reignEnd ?end .

  # Find a person who died at Sandro Bertaggia's birthplace during or after Alexander II's reign
  ?decedent dbo:deathPlace ?birthPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value WHERE {
  VALUES ?georgeDucas { 
    dbr:George_Ducas 
    (SELECT DISTINCT ?redirectedResource WHERE {
      ?resource rdfs:label ""George Ducas""@en.
      ?resource dbo:wikiPageRedirects ?redirectedResource.
    })
  }
  
  ?georgeDucas ?property ?value .
  FILTER(?property IN (
    dbo:occupation,
    dbo:notableWork,
    dbo:spouse,
    dbo:child
  ))
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Tony_Hollings dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find a commander in the Algerian War
  ?algerianWar dbo:militaryConflict dbr:Algerian_War .
  ?commander dbo:commanderOf ?algerianWar .

  # Ensure this commander is linked to a societal event and a television show
  ?societalEvent dbo:relatedTo ?commander .
  ?tvShow dbo:relatedTo ?commander .

  # Find Ferdinand III's child
  ?ferdinandIII dbo:child ?childOfFerdinandIII .
  FILTER (str(?ferdinandIII) = ""Ferdinand_III,_Holy_Roman_Emperor"")

  # Ensure the commander is the father of Ferdinand III's child
  ?commander dbo:fatherOf ?childOfFerdinandIII .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalty
WHERE {
    # Step 1: Charles II of Naples' spouse
    dbr:Charles_II_of_Naples dbo:spouse ?charlesSpouse .

    # Step 2: Parent of the father of Charles II's spouse (paternal grandfather)
    ?fatherOfSpouse dbo:child ?charlesSpouse .
    ?grandfatherOfSpouse dbo:child ?fatherOfSpouse .
    
    # Step 3: Check if this person is royalty
    ?grandfatherOfSpouse a dbo:Monarch .

    # Step 4: Maria of Bytom's spouse
    dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .

    # Step 5: Child of Maria's spouse
    ?childOfMariaSpouse dbo:parent ?mariaSpouse .
    
    # Step 6: Check if this child is royalty
    ?childOfMariaSpouse a dbo:Monarch .

    # Step 7: Béla IV of Hungary's child
    dbr:Béla_IV_of_Hungary dbo:child ?belasChild .

    # Step 8: Grandchild of Béla IV's child
    ?grandchildOfBelasChild dbo:parent ?belasChild .
    
    # Step 9: Check if this grandchild is royalty
    ?grandchildOfBelasChild a dbo:Monarch .

    # Step 10: Match the individuals from steps 3 and 9
    FILTER (?grandfatherOfSpouse = ?grandchildOfBelasChild)
    BIND(?grandfatherOfSpouse AS ?royalty)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?work WHERE {
  ?person a dbo:Commander ;
          dbo:officeHolderOf dbr:Korean_War .
  
  ?person dbo:author ?work .

  ?work a dbo:WrittenWork, dbo:Work .

  FILTER (lang(?workLabel) = 'en')
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Find the professional identity of The Shadow
  dbr:The_Shadow dbo:alterEgo ?professionalIdentity .

  # Find a movie where this actor is linked to both the author and the professional identity
  ?movie dbo:starring ?actor .
  
  # Link the actor to the author through some production or role
  OPTIONAL { ?author foaf:name ?authorName . }
  OPTIONAL { ?professionalIdentity foaf:name ?professionalName . }

  FILTER EXISTS {
    ?production dbo:writer ?author ;
               dbo:character ?professionalIdentity .
  }
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?person ?deathDate WHERE {
  ?person a dbo:Person .
  ?person dbo:deathDate ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05"")
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?bandMember ?burntByTheSunGroup
WHERE {
  # Step 1: Identify Phantomsmasher and its associated artist
  ?phantomsmasher dbo:title ""Phantomsmasher"" .
  ?phantomsmasher dbo:performer ?artist .

  # Step 2: Ensure the artist is a band, group, and organization
  ?artist rdf:type dbo:Band ;
          rdf:type dbo:MusicalGroup ;
          rdf:type dbo:Organization .

  # Step 3: Find band members of this artist if they form a band
  OPTIONAL {
    ?bandMember dbo:memberOf ?artist .
  }

  # Step 4: Reference to Burnt by the Sun as a group
  ?burntByTheSunGroup dbo:title ""Burnt by the Sun"" ;
                      rdf:type dbo:MusicalGroup .

  # Ensure there is some connection between the artist and Burnt by the Sun
  OPTIONAL {
    ?connection dbo:relatedTo ?artist .
    ?connection dbo:relatedTo ?burntByTheSunGroup .
  }
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?profession .

  # Find a band associated with the birth name and profession
  ?band dbo:musicalArtist ?artist .
  ?artist rdfs:label ?artistLabel .
  
  FILTER(CONTAINS(LCASE(?artistLabel), LCASE(str(?birthName)))) .
  FILTER(CONTAINS(LCASE(?artistLabel), LCASE(str(?profession)))) .

  # Ensure the band is a musical artist
  ?band a dbo:MusicalArtist .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?duke rdf:type dbo:Duke ;
        foaf:name ""Anthony Ulrich of Brunswick""@en .
  
  ?duke dbo:child ?child .

  ?child rdf:type dbo:Monarch ; # Assuming royalty is represented by Monarch type
         dbo:spouse ?spouse .

  ?spouse foaf:name ""Augustus William, Prince of Prussia""@en .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?reignStart ?reignEnd WHERE {
  VALUES ?king { dbr:Christian_IX_of_Denmark }
  
  ?king dbo:reignFrom ?reignStart ;
        dbo:reignUntil ?reignEnd .
  
  ?territory dbo:countryAdministratedBy ?king ;
             dbo:capital dbr:Copenhagen .

  FILTER (?reignStart <= ""1906-01-01""^^xsd:date && ?reignEnd >= ""1863-01-01""^^xsd:date)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hansenDeathPlace ?christianIXAdminTerritory WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  ?hansen dbo:deathPlace ?hansenDeathPlace .
  FILTER (strstarts(str(?hansen), ""Christian Ditlev Ammentorp Hansen""))

  # Ensure it is a settlement
  ?hansenDeathPlace rdf:type dbo:Settlement .

  # Find the death place and administered territory of Christian IX of Denmark
  ?christianIX dbo:deathPlace ?christianIXDeathPlace .
  FILTER (strstarts(str(?christianIX), ""Christian IX of Denmark""))

  ?christianIX dbo:administeredTerritory ?christianIXAdminTerritory .

  # Check if the death places are related to any common territory
  OPTIONAL {
    ?hansenDeathPlace dbo:partOf ?commonTerritory .
    ?christianIXDeathPlace dbo:partOf ?commonTerritory .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?person rdfs:label ""Denis Kolodin""@en .
  ?person dbo:nationality dbr:Russia .
  ?person dbp:sport dbr:Soccer .
  ?person dbp:team ?club .
  
  FILTER NOT EXISTS { ?club rdf:type dbo:Agent } # Exclude non-club entities
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  VALUES ?kolodin { dbr:Denis_Kolodin }
  ?kolodin dbo:nickName ?nickname .
  
  OPTIONAL {
    ?nickname dbo:wikiPageRedirects ?redirect .
    FILTER EXISTS { 
      ?redirect rdfs:label ?clubLabel .
      FILTER regex(?clubLabel, ""soccer club"", ""i"")
    }
  }

  FILTER NOT EXISTS { ?nickname dbo:wikiPageRedirects [] } # Ensure nickname is not a redirect itself
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?partyMember WHERE {
  # Find the commander of Pickett's Charge
  dbr:Picketts_Charge dbo:commandedBy ?commander .
  
  # Check if there is any party member from the Republican Party involved
  OPTIONAL {
    ?person dbo:memberOfParty dbr:Republican_Party_(United_States) .
    ?person dbo:involvedInBattle dbr:Picketts_Charge .
    BIND(?person AS ?partyMember)
  }
  
  # Filter to ensure we only get relevant results
  FILTER (?commander != ?partyMember || ISBLANK(?partyMember))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Find the children of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # For each child, find their predecessor (older sibling)
  ?predecessor dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?child dbp:birthday ?childBirth .
  ?predecessor dbp:birthday ?predecessorBirth .

  FILTER (?predecessorBirth < ?childBirth)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Identify an award associated with Vince Gilligan
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
  
  # Find individuals who have received this award
  ?awardee dbo:recipient dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Placeholder SPARQL query due to lack of specific subject information.
SELECT ?entity ?reference WHERE {
  # Example structure assuming 'subject' is the entity of interest:
  # ?entity a <http://dbpedia.org/ontology/SubjectType> .
  # ?entity dbo:wikiPageWikiLink ?reference .
  
  # Without knowing the specific subject, this query cannot be completed.
}
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?settlement WHERE {
  # Find the war associated with Napoleon Zervas
  dbr:Napoleon_Zervas dbo:associatedWith ?war .

  # Find Antonios Varthalitis's death place and ensure it is a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?place .
  ?place rdf:type dbo:Settlement .
  
  # Bind the settlement to the result
  BIND(?place AS ?settlement)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?ducasReference WHERE {
  # Find the successor of Yurii Khmelnytsky
  dbr:Yurii_Khmelnytskyy dbo:predecessor ?successor .
  
  OPTIONAL {
    # Check if George Ducas is mentioned in relation to the successor
    ?successor dbo:wikiPageWikiLink dbr:George_Ducas .
    BIND(""Yes"" AS ?ducasReference)
  }
  
  FILTER NOT EXISTS { 
    ?successor dbo:wikiPageWikiLink dbr:George_Ducas . 
    BIND(""No"" AS ?ducasReference) 
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?residence ?office WHERE {
  {
    VALUES ?person { 
      dbr:Alberto_Ruiz-Gallardón 
      dbr:Miguel_Maura
    }
    
    OPTIONAL { ?person dbo:residence ?residence . }
    OPTIONAL { ?person foaf:workplaceHomepage ?office . }
  }
}
```",3,3,4,2,2,3,3,71,0,4,1,0.0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?tenant
WHERE {
  # Find Mariano Rajoy's office related to the 2003 Madrid City Council election
  ?office dbo:election dbr:Madrid_City_Council_election,_2003 .
  ?office dbo:officeHolder dbr:Mariano_Rajoy .

  # Find the tenant of the residence associated with this office
  OPTIONAL {
    ?office dbo:residence ?residence .
    ?residence dbo:tenant ?tenant .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award 
WHERE {
  ?academy a dbo:AwardingOrganization ;
           rdfs:label ""Royal Swedish Academy of Sciences""@en .
  
  ?person rdfs:label ""Max Born""@en ;
          dbo:awardedPrize ?prize .

  ?prize dbo:presentedBy ?academy ;
         dbo:name ?award ;
         dbo:year ""1954""^^xsd:gYear .

  OPTIONAL { ?show dbo:presentedBy ?academy ; 
              rdfs:label ?showLabel . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?song ?albumTitle ?movie ?actor WHERE {
  # Find T.I.'s songs that are also musical works
  ?song dbo:artist dbr:T.I. ;
        a dbo:Songs .

  # Get the album of the song
  ?song dbo:release dbr:Album_? ; # Placeholder for specific album resource

  # Find movies related to the album (e.g., soundtracks)
  OPTIONAL {
    ?album dbr:Album_? ; # Placeholder for specific album resource
          dbo:soundtrack ?movie .
  
    # Get actors from the movie
    ?movie dbo:starring ?actor .
  }

  # Get other artists involved in the song
  OPTIONAL {
    ?song dbo:featuredArtist ?otherArtist .
  }
}
```

Note: The query uses placeholders like `dbr:Album_?` because specific album resources need to be identified based on T.I.'s discography. This would typically require additional filtering or manual lookup to specify the exact albums.",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  # Find commanders in the Russo-Polish War (1654–1667)
  ?war dbo:wikiPageRedirects dbc:""Russo-Polish_War_(1654%E2%80%931667)"" .
  ?war dbo:participatedIn ?commander .

  # Check if the commander is George Ducas or Jean Baptist, Comte d'Arco
  OPTIONAL { ?commander rdfs:label ""George Ducas""@en . }
  OPTIONAL { ?commander rdfs:label ""Jean Baptist, Comte d'Arco""@en . }

  # Find successors who are politicians or office holders
  ?commander dbo:succeededBy ?successor .
  ?successor a dbo:Politician ;
             (dbo:officeHeld|dbo:positionHeld) ?office .

  FILTER(LANG(?commanderLabel) = 'en' && LANG(?successorLabel) = 'en')
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Robert Calder and his military affiliations
  dbr:Robert_Calder a dbo:MilitaryPerson ;
                     dbo:militaryConflict ?conflict .

  # Determine the event or conflict involving The Triple X's
  ?tripleXs a dbo:Organization ; 
            dbo:militaryConflict ?conflict .

  # Find the commander of the war/conflict
  ?conflict dbo:commander ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?name WHERE {
  ?artist dbo:memberOf dbr:Der_Blaue_Reiter .
  ?artist rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel WHERE {
  # Find Renée of Bourbon's spouse
  ?renée a dbo:Person ;
         rdfs:label ""Renée of Bourbon""@en .
  
  ?renée dbo:spouse ?spouse .

  # Find the father of Dorothea of Lorraine
  ?dorothea a dbo:Person ;
           rdfs:label ""Dorothea of Lorraine""@en .
  
  ?dorothea dbo:child ?fatherOfDorothea .

  # Find the parent of that father (i.e., grandparent of Dorothea)
  ?fatherOfDorothea dbo:child ?grandparentOfDorothea .

  FILTER (?spouse = ?grandparentOfDorothea)

  # Return the label of the spouse
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for commander of French campaign in Egypt and Syria
SELECT ?commander WHERE {
  ?campaign dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?campaign)), ""egypt and syria""))
}

UNION

# Query for commanders and military forces involved in the Battle of Cape Finisterre (1805)
SELECT DISTINCT ?battle ?commander ?force WHERE {
  ?battle dbo:location dbr:Cape_Finisterre ;
          dbo:date ?date .
  FILTER(YEAR(?date) = 1805)

  OPTIONAL { ?battle dbo:commander ?commander . }
  
  OPTIONAL { 
    ?commander dbo:militaryForce ?force .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:givenName ""Richard"" .
  ?person foaf:familyName ""Esterhuysen"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the award associated with Ian Gregson
  ?award dbo:recipient dbr:Ian_Gregson .
  
  # Identify Linda Bruckheimer's spouse
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer"" ;
         dbo:spouse ?spouse .

  # Find the movie that won the award
  ?movie dbo:award ?award .

  # Retrieve the producer of the movie
  ?movie dbo:producer ?producer .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?leaderWar ?athensEntity
WHERE {
  # War associated with Konstantinos Ventiris
  ?ventiris dbo:wikiPageDisambiguates ?war .
  VALUES ?ventiris { <http://dbpedia.org/resource/Konstantinos_Ventiris> }

  # War involving the leader of the National Party of Greece
  ?michaloliakos dbo:wikiPageDisambiguates ?leaderWar .
  VALUES ?michaloliakos { <http://dbpedia.org/resource/Nikolaos_Michaloliakos> }
  
  # Entity in Athens
  ?athensEntity dbp:location <http://dbpedia.org/resource/Athens> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?spouse .
  
  # Identify Min Hla Htut and his parent
  ?minHlaHtut dbp:birthPlace ""Pyakaung""^^xsd:string ;
              dbo:parent ?parent .

  # Ensure the spouse is a child of Min Hla Htut's parent
  ?spouse dbo:childOf ?parent .
  
  # Identify Myat Hpone Pyo and his predecessor
  ?myatHponePyo dbo:predecessor ?predecessor .
  
  # Ensure the entity is also the predecessor of Myat Hpone Pyo
  ?entity owl:sameAs ?predecessor .

  # Ensure all conditions are met by the same entity
  FILTER (?spouse = ?entity)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonParent WHERE {
  # Allan Arbus's child
  ?childAllan dbo:parent dbr:Allan_Arbus .
  
  # Parent of Allan Arbus's child (another child of Allan)
  ?childAllan dbo:parent ?commonParent .

  # Amy Arbus's child
  ?childAmy dbo:parent dbr:Amy_Arbus .

  # Parent of Amy Arbus's child (another child of Amy)
  ?childAmy dbo:parent ?commonParent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName WHERE {
  # Step 1: Identify Constance of Burgundy
  ?constance a dbo:Person ;
             rdfs:label ""Constance of Burgundy""@en .

  # Step 2: Find her spouse
  ?constance dbo:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  OPTIONAL { ?spouse dbo:royalTitle ?title . }
  FILTER EXISTS {
    ?spouse a/rdfs:subClassOf* dbo:RoyalFamilyMember .
  }

  # Step 4: Find the child of the royal spouse
  ?spouse dbo:child ?child .

  # Step 5: Select the name of the child
  ?child rdfs:label ?childName .
  
  FILTER(LANG(?childName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?nickCurran a dbo:Musician ;
              foaf:name ""Nick Curran""@en .
  
  ?nickCurran dbo:associatedBand ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?work WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician ;
          dbo:commanderOf dbr:North_Carolina_Air_National_Guard .

  ?work dbo:author ?person ;
        a dbo:Book, dbo:WrittenWork, dbo:CreativeWork ;
        dbo:country dbr:United_States .

}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:father dbr:Fasilides_of_Ethiopia .
  ?person dbo:childOf dbr:Dawit_I_of_Ethiopia .
  ?person dbo:royalty ""true""^^xsd:boolean .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?peterIV dbo:father ?father .
  ?father rdfs:label ""Peter III of Aragon""@en .
  ?father dbo:child ?child .
  FILTER(CONTAINS(LCASE(?child), ""monarch"")) .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonPerson ?societalEvent ?event ?tvShow WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?ceciliaFather .

  # Ferdinand III, Holy Roman Emperor's child and their father
  ?ferdinandChild dbo:childOf dbr:Ferdinand_III,_Holy_Roman_Emperor .
  ?ferdinandChild dbo:father ?commonPerson .

  # Common person between Cecilia Renata's father and Ferdinand III's child's father
  FILTER (?ceciliaFather = ?commonPerson)

  # Societal event, general event, and TV show related to the 2nd Dragoon Regiment (France)
  OPTIONAL { ?commonPerson dbo:associatedWith ?societalEvent . }
  OPTIONAL { ?commonPerson dbo:relatedTo ?event . }
  OPTIONAL { ?commonPerson dbo:appearedIn ?tvShow . }

  # Filter for events and shows related to the 2nd Dragoon Regiment (France)
  FILTER (
    EXISTS {
      ?societalEvent dbo:subject dbr:2nd_Dragoon_Regiment_(France) .
    } ||
    EXISTS {
      ?event dbo:subject dbr:2nd_Dragoon_Regiment_(France) .
    } ||
    EXISTS {
      ?tvShow dbo:subject dbr:2nd_Dragoon Regiment (France) .
    }
  )
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorLabel WHERE {
  ?book a dbo:Book ;
        rdfs:label ""Back to Work""@en .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorLabel .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personLabel (GROUP_CONCAT(?birthPlaceLabel; separator="", "") AS ?birthPlaces)
WHERE {
  VALUES (?person ?personLabel) {
    (<http://dbpedia.org/resource/Cece_Bell> ""Cece Bell"")
    (<http://dbpedia.org/resource/Glenn_Youngkin> ""Glenn Youngkin"")
  }
  
  ?person dbo:birthPlace ?birthPlace.
  ?birthPlace rdfs:label ?birthPlaceLabel.
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
GROUP BY ?personLabel
```",3,3,4,2,2,3,3,71,0,3,1,0.0,0.0,0
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team 
WHERE {
  # Find the person who is both a soccer player and manager, born on November 3, 1979
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthDate ""1979-11-03""^^xsd:date .

  # Get teams Juan Carlos Molina played for
  dbr:Juan_Carlos_Molina dbo:team ?team .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:birthName ""Bruno Daniel Marie Paul Retailleau""@en .
  ?person a dbo:Politician ;
          dbo:officeHolder true .
  ?person dbo:partyAffiliation ?party .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:position dbr:Prime_Minister_of_Spain .
  ?person dbp:party dbr:Spanish_Socialist_Workers'_Party .
  ?officeHolder dbo:officeHolder ?person ;
                dbo:position dbr:Prime_Minister_of_Spain .
  ?person foaf:name ?name .
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Cece Bell's birthplace
SELECT ?birthPlaceCeceBell WHERE {
  dbr:Cecilie_Bell dbo:birthPlace ?birthPlaceCeceBell .
}

UNION

# Query for an awardee of Vince Gilligan's awards/nominations and their birthplace
SELECT DISTINCT ?awardeeBirthPlace WHERE {
  # Find awards or nominations related to Vince Gilligan
  ?award dbr:Vince_Gilligan dbo:recipient ?recipient .

  # Get the birthplace of one such awardee
  ?recipient dbo:birthPlace ?awardeeBirthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thunderbirds ?nickCurran ?memberBand ?personName WHERE {
  # Identify The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup .

  # Find associated artist Nick Curran with The Fabulous Thunderbirds
  ?nickCurran dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
  ?nickCurran rdfs:label ""Nick Curran""@en .

  # Identify band members of The Fabulous Thunderbirds who are also musical artists
  ?member a dbo:bandMember ;
          dbo:band dbr:The_Fabulous_Thunderbirds ;
          a dbo:MusicalArtist .

  # Filter by birth date March 30, 1945
  ?personBirthDate dbo:dateOfBirth ?birthDate .
  FILTER (YEAR(?birthDate) = 1945 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 30)

  # Link the person to their band and name
  ?member foaf:name ?personName ;
          dbo:band ?memberBand .

  # Ensure the member is a musical artist
  ?member a dbo:MusicalArtist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the actor in ""High Society Blues""
  ?movie dbo:title ""High Society Blues""@en .
  ?actor dbo:starring ?movie .

  # Determine their claim to fame, which is a movie and work
  ?claimToFame dbo:work ?actor ;
               a dbo:Film .

  # Find the producer of this claim to fame
  ?claimToFame dbo:producer ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Find Saw Shwe Khet's resource
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Identify children of Saw Shwe Khet who are royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:RoyalFamilyMember ;
         dbp:royaltyStatus ?status .
  
  FILTER(?status = ""Royalty"" || ?status = ""Monarch"")

  # Find the father of that child, ensuring he is also royalty
  ?child dbo:parent ?father .
  ?father a dbo:RoyalFamilyMember ;
          dbp:royaltyStatus ?fatherStatus .

  FILTER(?fatherStatus = ""Royalty"" || ?fatherStatus = ""Monarch"")
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with Herschel Bernardi
  ?movie dbo:starringHerschelBernardi a dbo:Film .
  
  # Get Eugène Cattin's profession and his parent(s)
  ?eugeneCattin foaf:name ""Eugène Cattin""@en ;
                dbo:profession ?profession .
  ?parent dbp:child ?eugeneCattin .

  # Find the movie that is a work involving Herschel Bernardi and connected to Eugène Cattin's parent
  ?movie dbo:starring ?actor .
  
  FILTER EXISTS {
    ?movie dbo:work ?work .
    ?work dbp:parent ?parent .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfParent WHERE {
  ?dorothea a dbo:Person ;
            rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  
  OPTIONAL { ?dorothea dbo:parent ?parent . }
  
  OPTIONAL { ?parent dbo:parent ?grandparent . }

  FILTER regex(str(?dorothea), ""Dorothea of Denmark"", ""i"")
  FILTER regex(str(?parent), ""Maximilian I, Holy Roman Emperor"", ""i"")

  ?grandparent dbo:parent ?fatherOfParent .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Fabulous Thunderbirds""@en .
  
  OPTIONAL { 
    ?band foaf:name ?realName .
  }
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Rod Argent's profession
  ?argent a dbo:Musician ;
          foaf:name ""Rod Argent"" .
  
  # Joey B's birth name
  ?joeyB a dbo:Person ;
         foaf:name ""Joey B"" ;
         foaf:mbox <http://dbpedia.org/resource/Category:Musicians_from_Ghana> ;
         foaf:birthday ""1991-12-04""^^xsd:date .
  
  # Elorm Kabu Amenyah's associated musical artist
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah"" ;
         foaf:mbox <http://dbpedia.org/resource/Stonebwoy> .

  # Find the professional matching all criteria
  ?professional a dbo:Musician ;
                foaf:birthday ?joeyBBirthDate ;
                foaf:name ?joeyBName ;
                dbo:associatedMusicalArtist ?elorm .
  
  FILTER (?argent = ?professional)
  FILTER (STR(?joeyBName) = ""Joseph Benjamin Aidoo"")
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfPhotographer
WHERE {
  # Step 1: Find Allan Arbus's child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  
  ?child dbo:childOf ?allanArbus .

  # Step 2: Find the parent of that child
  ?parentOfChild dbo:parentOf ?child .

  # Step 3: Identify professionals in Photographer
  ?photographer a dbo:Person ;
               dbp:occupation ""Photographer""@en .
  
  # Step 4: Find the parent of each photographer
  ?parentOfPhotographer dbo:parentOf ?photographer .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Princess Muna al-Hussein
  ?princess a dbo:Princess ;
            foaf:name ""Muna al-Hussein""@en .
  
  # Step 2: Find her children who are royalty
  ?child dbo:childOf ?princess ;
         rdf:type ?royaltyType .

  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:Princess)
  )
  
  # Step 3: Identify royal grandchildren
  ?grandchild dbo:childOf ?child ;
              rdf:type ?grandRoyaltyType .
  
  FILTER (
    ?grandRoyaltyType IN (dbo:Monarch, dbo:Princess)
  )

  # Step 4: Determine parent of royal grandchildren
  ?parent dbo:parentOf ?grandchild .

}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?apacheIndian { dbr:Apache_Indian }
  ?apacheIndian dbo:work ?work .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2 WHERE {
  # Find the actor who played Johnny Doughboy and their most famous work's producer
  ?actor dbo:character dbr:Johnny_Doughboy ;
         dbo:notableWork ?work .
  ?work dbo:producer ?producer1 .

  # Find Janet Gaynor's most famous movie and its producer
  dbr:Janet_Gaynor dbo:notableWork ?movie .
  ?movie dbo:producer ?producer2 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring dbr:Richard_E._Grant .
  ?tvSeries dbo:basedOn ?book .
  ?tvSeries dbo:starring dbr:Richard_E._Grant .
  ?character dbo:alterEgo dbr:Lamont_Cranston .
  ?character dbo:profession dbr/Actor .
  FILTER EXISTS { ?movie dbo:genre dbr/Fantasy_film . }
  FILTER EXISTS { ?tvSeries dbo:genre dbr/Fantasy_television_series . }
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?nobelPrizeInPhysics { dbr:Nobel_Prize_in_Physics }
  
  OPTIONAL {
    ?nobelPrizeInPhysics dbo:officialWebsite ?reference .
  }

  UNION

  {
    ?link dbo:wikiPageWikiLink ?nobelPrizeInPhysics .
    ?link dbo:officialWebsite ?reference .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?juanCarlosTeam ?actorAthlete ?soccerPlayerManager
WHERE {
  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?juanCarlosTeam .

  # Actor from ""All or Nothing: Manchester City"" who is also an athlete
  ?actor dbo:title dbr:All_or_Nothing:_Manchester_City ;
         a dbo:Actor ;
         dbo:athlete ?actorAthlete .
  
  # Person born on Marcelo Sarmiento's birthday who is both a soccer player and manager
  {
    SELECT DISTINCT ?person WHERE {
      dbr:Marcelo_Sarmiento dbo:birthday ?birthday .
      ?person dbo:birthday ?birthday ;
              a dbo:SoccerPlayer, dbo:SoccerManager .
    }
    BIND(?person AS ?soccerPlayerManager)
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?campaign ?calderForce ?war
WHERE {
  # French campaign in Egypt and Syria
  ?campaign dbo:commander ?commander .
  ?campaign rdf:type dbo:MilitaryConflict .
  FILTER(CONTAINS(LCASE(STR(?campaign)), ""egypt"") || CONTAINS(LCASE(STR(?campaign)), ""syria"")) .

  # Robert Calder's military force during the War of 1812
  ?calderForce dbo:commander dbr:Robert_Calder .
  ?war dbo:participatingMilitaryUnit ?calderForce .
  FILTER(CONTAINS(LCASE(STR(?war)), ""war of 1812"")) .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?phantomArtist ?humanRemainsMember WHERE {
  # Find the artist associated with Phantomsmasher
  OPTIONAL { 
    ?phantomArtist dbo:associatedBand dbr:Phantomsmasher .
  }
  
  # Find a member of Human Remains (band)
  OPTIONAL {
    ?humanRemainsMember dbo:memberOf dbr:Human_Remains_(band) .
  }
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  VALUES ?label { ""Peter IV of Aragon""@en ""Peter the Ceremonious""@en }
  
  ?person rdfs:label ?label .
  OPTIONAL { ?person dbo:wikiPageRedirects ?redirect . FILTER(?redirect != '') }
  BIND(COALESCE(STR(?redirect), STR(?person)) AS ?reference)
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?title WHERE {
  ?battle dbo:partOf ?war .
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""prince eugene of savoy"")) .
  
  ?tvSeries dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""eugene"") && CONTAINS(LCASE(?title), ""tv series"")) .

  VALUES ?battle { dbr:Battle_of_Vienna_1683 }
  VALUES ?war { dbr:Great_Turkish_War }
}
```",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .
  
  OPTIONAL { 
    ?person foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""ackquille jean pollard""))
  }
}
```",2,2,3,1,2,3,3,71,1,970,0,0.0010298661174047373,1.0,0.00205761316872428
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual ?royalSibling ?ferdinandChild
WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavary_(1574) dbo:child ?mariaChild .
  
  # Ferdinand III, Holy Roman Emperor and his children
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinandChild .

  # Common individual who is a father of Maria Anna's child and a parent of Ferdinand III's child
  ?commonIndividual dbo:spouse ?mariaChild .
  ?commonIndividual dbo:parent ?ferdinandChild .

  # Ensure the common individual is royalty
  ?commonIndividual rdf:type dbo:Monarch .
  
  # Find another royal sibling of Maria Anna's child
  ?royalSibling dbo:child ?mariaChild .
  ?royalSibling rdf:type dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person foaf:name ""Sam Concepcion""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,1,45131,0.0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?archbishop ?residenceCountry WHERE {
  # Santiago de Compostela's Archbishop
  ?santiago dbo:archbishop ?archbishop .
  
  # Ensure the archbishop is a Spanish citizen
  ?archbishop dbo:nationality dbr:Spain .

  # Find the diocese or residence of the archbishop
  ?archbishop dbo:office ?diocese .
  ?diocese dbo:location ?residence .

  # Get the country of the residence
  ?residence dbp:country ?residenceCountry .

  # Filter to ensure the residence is in a different country than Spain
  FILTER(?residenceCountry != dbr:Spain)
  
  # Ensure Santiago de Compostela is correctly identified
  VALUES ?santiago { dbr:Santiago_de_Compostela }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgoOccupation ?actorProfession
WHERE {
  # Find Lamont Cranston's occupation as The Shadow's alter ego
  ?shadowAlterEgo rdfs:label ""Lamont Cranston""@en .
  ?shadowAlterEgo dbo:occupation ?alterEgoOccupation .

  # Find the profession of an actor
  ?actor rdfs:label ""Actor""@en .
  ?actor dbo:occupation ?actorProfession .
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  ?governor a dbo:Governor ;
            foaf:name ""Brian Kemp""@en .
  
  ?governor dbo:positionHeld ?position .
  ?position dbo:officeHolder ?governor ;
            dbo:officeName dbr:Governor_of_Georgia .

  OPTIONAL {
    ?governor dbo:departmentHead ?institution .
  }
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  # Find children of Prince Faisal bin Hussein
  ?person dbo:child ?child .
  FILTER (str(?person) = ""Prince_Faisal_bin_Hussein"") .

  # Check if the child is a member of royalty
  OPTIONAL { ?child rdf:type dbo:RoyalFamilyMember . }

  # Get the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  ?child dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Ensure the person is also a child of Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Check if this person was a predecessor to Carl, Duke of Württemberg
  OPTIONAL {
    ?person dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
  }

  # Ensure the person is the same as the child found above
  FILTER (?child = ?person)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Afeez Oyetoro (Ayo Makun)
  dbr:Ayo_Makun dbo:starring ?work .
  
  # Ensure the work is both a show and a movie
  ?work a dbo:Film ;
        a dbo:TelevisionShow .

  # Find other actors in these works
  ?work dbo:starring ?actor .
  
  FILTER(?actor != dbr:Ayo_Makun)
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:childOf <http://dbpedia.org/resource/Stephen_V_of_Hungary> .
  ?person dbo:parentOf <http://dbpedia.org/resource/Charles_Martel_of_Anjou> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?series dbo:title ""All or Nothing: Manchester City""@en .
  ?series dbo:actor ?actor .

  # Ensure the actor is also a soccer player and athlete
  ?actor dbo:sport dbr:Soccer .
  ?actor dbo:occupation dbr:Athlete .

  # Find teams that include Pablo Aimar
  ?team dbo:player ?pabloAimar .
  ?pabloAimar rdfs:label ""Pablo Aimar""@en .

  # Ensure the actor is part of a team with Pablo Aimar
  ?actor dbo:memberTeam ?team .

  # Find individuals born on Marty Pollio's birthday
  ?person dbo:birthDate ?birthday .
  ?martyPollio dbo:birthDate ?birthday .
  ?martyPollio rdfs:label ""Marty Pollio""@en .

  # Ensure the actor is also an athlete and born on the same date as Marty Pollio
  ?actor dbo:birthDate ?birthday .
  ?actor dbo:occupation dbr:Athlete .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band dbr:Uncle_Murda .
  ?band dbo:bandMember ?member .
  ?member dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""florida""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?childOfRoyalParent
WHERE {
  # Step 1: Identify Roger II of Sicily
  ?roger rdfs:label ""Roger II of Sicily""@en .
  
  # Step 2: Find one of his children
  ?roger dbo:child ?child .

  # Step 3: Determine the parent of this child
  ?child dbo:parent ?grandParent .

  # Step 4: Check if this grandParent is royalty
  ?grandParent dbo:royaltyStatus ?royaltyStatus .
  
  FILTER(?royaltyStatus = ""Royal"" || ?royaltyStatus = ""Monarch"") 

  # Step 5: Find the child of this royal parent
  ?grandParent dbo:child ?childOfRoyalParent .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?band ?birthName WHERE {
  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  
  OPTIONAL { 
    ?sam dbo:profession ?profession .
    
    # Find the band associated with this profession
    ?band a dbo:Band ;
          dbo:member ?sam .
  }
  
  # Find Bob Thompson's birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson""@en ;
       foaf:name ?birthName .
}
```",5,6,6,3,2,3,3,71,0,1,4,0.0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?film ?tvShow WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Orson Welles""@en .
  
  ?film dbo:starring ?actor ;
        rdfs:label ?filmLabel .

  FILTER(CONTAINS(LCASE(?filmLabel), ""the shadow"") && LCASE(?filmLabel) != ""the shadow (tv series)"")

  OPTIONAL {
    ?tvShow dbo:basedOnFilm ?film ;
            rdfs:label ?tvShowLabel .
    
    FILTER(CONTAINS(LCASE(?tvShowLabel), ""the shadow""))
  }
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?lyall a dbo:Musician ;
         foaf:name ""Billy Lyall""@en .
  
  ?lyall dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?lyall) # Ensure we don't get Billy Lyall himself

  OPTIONAL {
    ?artist foaf:name ?associatedArtist .
  }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find the children of Frederick Stanley, 16th Earl of Derby
  ?child dbo:spouseOrPartner dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  
  # Identify the parent of this child (could be another spouse)
  OPTIONAL { ?child dbo:parent ?parent . }
  OPTIONAL { ?child dbo:mother ?parent . }

  # Find individuals who have received the Commander of the Royal Victorian Order
  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Identify their parent
  OPTIONAL { ?awardee dbo:parent ?parent2 . }
  OPTIONAL { ?awardee dbo:mother ?parent2 . }

  # Find a common parent in both sets
  FILTER (?parent = ?parent2)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?movieTitle
WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionShow ;
         rdfs:label ?movieTitle .
  
  ?artist dbo:deathDate ""2020-06-18""^^xsd:date ;
          rdf:type dbo:Artist, dbo:MusicalArtist .

  ?movie dbo:starring ?artist .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName
WHERE {
  ?player foaf:name ""Jamie McCunnie""@en .
  ?player dbo:playsFor ?club .
  ?club a dbo:SoccerClub .
  ?club dbo:manager ?manager .
  ?manager foaf:name ?managerName .
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""George Hamilton Cameron""@en .
  ?person a dbo:Person .
  ?person dbo:award ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmTitle WHERE {
  ?film a dbo:Film .
  ?film dbo:director dbr:Manuel_Huerga .
  ?film rdfs:label ?filmTitle .
  FILTER (lang(?filmTitle) = 'en')
}
```",1,2,2,1,1,3,3,71,0,2,3,0.0,0.0,0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeTitle ?eventStart
WHERE {
  # Anxo Quintana's DBpedia resource
  dbr:Anxo_Quintana a dbo:Person .

  # Find the office related to Santiago de Compostela
  OPTIONAL { 
    dbr:Anxo_Quintana dbo:positionHeld ?office .
    ?office dbo:location dbr:Santiago_de_Compostela ;
            dbo:title ?officeTitle .
  }

  # Retrieve events related to his tenure
  OPTIONAL {
    ?office dbo:eventStart ?eventStart .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?antoineduke rdf:type dbo:Duke ;
               foaf:name ""Antoine, Duke of Lorraine""@en .
  
  ?antoineduke dbo:child ?child .

  FILTER EXISTS { 
    ?child rdf:type ?royaltyType .
    VALUES ?royaltyType {
      dbo:Monarch
      dbo:RoyalFamilyMember
    }
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda""@en .
  
  ?bobbyShmurda dbo:associatedMusicalArtist ?band .

  ?band dbo:member ?member .

  FILTER EXISTS { ?member a dbo:MusicalArtist }
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?governor WHERE {
  # Birth places of individuals
  VALUES (?individual) { 
    dbr:Paulus_Powell 
    dbr:Vince_Gilligan 
    dbr:Cecilie_Bell 
  }
  
  ?individual dbo:birthPlace ?birthPlace .
  
  # Filter for regions and administrative regions
  FILTER EXISTS {
    ?birthPlace rdf:type dbp:Region .
  }
  FILTER EXISTS {
    ?birthPlace rdf:type dbo:AdministrativeRegion .
  }

  # Find the governor of each region
  ?region dbo:governor ?governor .

  # Ensure the birth place is a region with a governor
  FILTER (?birthPlace = ?region)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?award 
WHERE {
  ?prize dbo:category dbr:Nobel_Prizes_in_Physics .
  ?prize dbo:recipient ?recipient ;
         dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  
  # Spouse's child who is a royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Predecessor of the royal child
  ?royalChild dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel ?workLabel
WHERE {
  # Find Jamsetji Tata's birthplace
  dbr:Jamsetji_Tata dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find a significant work by Jamsetji Tata that is Indian
  OPTIONAL {
    dbr:Jamsetji_Tata dbo:founderOf ?work .
    FILTER EXISTS { ?work dbo:country dbr:India . } # Ensure the work is in India
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND (STR(?birthPlaceLabel) AS ?birthPlace)
  BIND (COALESCE(STR(?workLabel), ""N/A"") AS ?work)
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?person rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  OPTIONAL { ?child dbo:occupation ?occupation . }
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  
  # Check if the person is involved in soccer
  OPTIONAL { ?person dbo:sport dbr:Soccer . }
  
  # Check for involvement in ""All or Nothing: Manchester City""
  OPTIONAL {
    ?episode dbp:castMember ?person ;
             dbp:title ""All or Nothing: Manchester City"" .
  }

  FILTER EXISTS { 
    ?person dbo:sport dbr:Soccer .
    ?episode dbp:castMember ?person ;
             dbp:title ""All or Nothing: Manchester City"" .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Stuart Mcbeath Tosh"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musical artist""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find the child of Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .

  # Check if this child is also a parent to one of Ferdinand III's children
  ?child dbo:parentOf ?grandChild .
  ?grandChild dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName
WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Linda Miller""@en .
  
  ?person dbo:child ?child .

  ?child foaf:name ?childName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bobBirthName ?singer ?alterEgoProfession ?band 
WHERE {
  # Bob Thompson's birth name
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?bob foaf:givenName ?bobBirthName . }
  
  # Professional singer associated with Bob Thompson
  OPTIONAL {
    ?singer a dbo:Singer ;
            dbo:associatedBand ?band ;
            dbo:profession ?singerProf .
    FILTER(?singerProf = ""Singing""@en)
  }

  # The Shadow's alter ego and its professional
  ?shadowAlterEgo a dbo:FictionalCharacter ;
                  foaf:name ""Lamont Cranston""@en .
  
  OPTIONAL {
    ?alterEgoProf a dbo:Person ;
                  dbo:profession ?alterEgoProfession ;
                  dbo:associatedWith ?shadowAlterEgo .
  }

  # Band associated with Bob Thompson
  OPTIONAL { 
    ?band a dbo:Band ;
          dbo:member ?bob .
  }
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?quintanaOffice ?quirósCountry
WHERE {
  # Find Anxo Quintana's office in an administration event
  ?quintanaEvent a dbo:Government ;
                 dbo:office ?quintanaOffice .
  ?quintanaEvent dbo:member dbr:Anxo_Quintana .

  # Find Álvaro Quirós' residence country
  ?quirósResidence dbo:resident dbr:Álvaro_Quirós ;
                   dbo:country ?quirósCountry .

  # Ensure the residence is in Santiago de Compostela
  ?quirósResidence dbo:location dbr:Santiago_de_Compostela .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSawShweKhet ?predecessor
WHERE {
  # Find the spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouseOfSawShweKhet .
  FILTER(STR(?sawShweKhet) = ""Saw_Shwe_Khet"")

  # Find the child of Saw Min Phyu's spouse who is royalty
  ?sawMinPhyu dbo:spouse ?spouseOfSawMinPhyu .
  FILTER(STR(?sawMinPhyu) = ""Saw_Min_Phyu"")
  
  ?spouseOfSawMinPhyu dbo:child ?royalChild .
  ?royalChild a dbo:Monarch . # Assuming Monarch indicates royalty

  # Find the predecessor of that royal child
  ?royalChild dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?settlement WHERE {
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  
  ?settlement a dbo:Settlement ;
              rdfs:label ?settlementLabel ;
              dbo:country dbr:United_States_of_America .

  FILTER(CONTAINS(LCASE(?awardLabel), LCASE(?settlementLabel)))
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?residenceCountry
WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:office dbr:Alberto_Núñez_Feijóo .
  ?person dbo:residence dbr:Santiago_de_Compostela .
  ?person dbo:residence ?residence .
  ?residence dbp:country ?residenceCountry .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?juanCarlosTeam ?sergioAgüeroTeam ?personTeam WHERE {
  # Get the birthdate of Marcelo Sarmiento
  VALUES ?marceloSarmientoBirthDate { 
    (dbr:Marcelo_Sarmiento dbo:birthDate ?birthdate) .
  }
  
  # Find a person who is both a player and manager, born on that date
  ?person dbo:birthDate ?birthdate ;
          rdf:type dbo:SoccerPlayer , dbo:SoccerManager .

  # Get the team of this person
  ?person dbo:team ?personTeam .

  # Get teams for Juan Carlos Molina
  ?juanCarlos dbr:Juan_Carlos_Molina (dbo:player) .
  ?juanCarlos dbo:team ?juanCarlosTeam .

  # Get teams for Sergio Agüero
  ?sergioAgüero dbr:Sergio_Agüero (dbo:player) .
  ?sergioAgüero dbo:team ?sergioAgüeroTeam .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfRogerPryor (SAMPLE(?personWithBirthName) AS ?personBornAsParent)
WHERE {
  # Part 1: Find the spouse of Roger Pryor
  OPTIONAL {
    dbr:Roger_Pryor_(actor) dbo:spouse ?spouseOfRogerPryor .
  }

  # Part 2: Find the person born with the birth name of Tisha Sterling's parent
  OPTIONAL {
    dbr:Tisha_Sterling dbo:parent ?parentOfTishaSterling .
    ?parentOfTishaSterling dbo:birthName ?birthName .
    ?personWithBirthName dbo:birthName ?birthName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?show dbo:title ""All or Nothing: Manchester City""@en .
  ?show dbo:subject dbr:Manchester_City_F.C. .
  ?show dbo:actor ?player .
  
  ?player dbo:occupation dbr:Soccer_player .
  ?player dbo:occupation dbr:Actor .

  FILTER (str(?player) = ""Raheem_Sterling"")
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Catherine of Austria, Queen of Portugal's father
  ?catherine a dbr:Catherine_of_Austria_(1507-1578) ;
             dbo:parent ?parent .
  
  FILTER EXISTS { ?parent a dbo:Man . } # Ensure the parent is male (likely her father)
  
  # Find Dorothea of Denmark, Electress Palatine's parent
  ?dorothea a dbr:Dorothea_of_Denmark_Electress_Palatine ;
            dbo:parent ?catherine .
  
  # Ensure the same person is both Catherine's father and Dorothea's grandparent
  ?parent rdfs:label ?fatherLabel .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Query to find the actor who played Shelby Oaks
SELECT ?actor WHERE {
  ?work dcterms:subject dbc:Category:Film_characters_introduced_in_2007 .
  ?work dbo:character ?character .
  ?character rdfs:label ""Shelby Oaks""@en .
  ?work dbo:starring ?actor .
  ?actor foaf:name ?name .
  FILTER(LANG(?name) = 'en')
}

UNION

# Query to find the professional background of Lamont Cranston (The Shadow's alter ego)
SELECT ?profession WHERE {
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:occupation ?profession .
  FILTER(LANG(?profession) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  ?consSpouse dbo:spouse ?constance .
  FILTER(STR(?constance) = ""Constance_of_Burgundy"")

  # Step 2: Find the child of Constance's spouse
  ?child dbo:parent ?consSpouse .

  # Step 3: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:RoyalFamilyMember .

  # Step 5: Identify Roger III's parent
  ?rogerParent dbo:child ?rogerIII .
  FILTER(STR(?rogerIII) = ""Roger_III,_Duke_of_Apulia"")

  # Step 6: Find the child of Roger III's parent
  ?parentChild dbo:parent ?rogerParent .

  # Final step: Match grandchild with parent's child
  FILTER(?grandchild = ?parentChild)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?ceciliaRenata dbo:father ?commonFather .
  ?eleonore dbo:father ?commonFather .
  
  VALUES ?ceciliaRenata {<http://dbpedia.org/resource/Cecilia_Renata_of_Austria>} 
  VALUES ?eleonore {<http://dbpedia.org/resource/Eleonore_of_Austria_(1608-1655)>}
  
  ?commonFather dbo:child ?child .
  
  FILTER EXISTS {
    ?commonFather dbp:role <http://dbpedia.org/resource/Thirty_Years'_War> .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?floridaArtist ?birthName ?otherArtist WHERE {
  # Find a musical artist native to Florida
  ?floridaArtist a dbo:MusicalArtist ;
                 dbo:birthPlace ?place .
  FILTER (STRSTARTS(STR(?place), ""http://dbpedia.org/resource/Florida""))

  # Get the birth name of this artist
  ?floridaArtist foaf:name ?birthName .

  # Find another musical artist with the same birth name
  ?otherArtist a dbo:MusicalArtist ;
               foaf:name ?birthName .
  
  # Ensure the other artist is not the same as the first one
  FILTER (?floridaArtist != ?otherArtist)

  # Check if this other artist is associated with Bobby Shmurda
  OPTIONAL {
    ?bobbyShmurda a dbo:MusicalArtist ;
                  foaf:name ""Bobby Shmurda"" .
    ?association dbo:bandMemberOf ?bobbyShmurda ;
                 dbo:member ?otherArtist .
  }
  
  # Ensure there is an association with Bobby Shmurda
  FILTER EXISTS { ?association dbo:bandMemberOf ?bobbyShmurda }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
# Query for actors of the film ATL
SELECT ?actor WHERE {
  ?film dcterms:title ""ATL""@en .
  ?film dbo:starring ?actor .
}
```

```sparql
# Query for professional associated with alter ego in The Golden Master series
SELECT ?professional WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?character a dbo:Character ;
             dbo:portrayedBy ?professional ;
             rdfs:label ?alterEgoLabel .
  FILTER(CONTAINS(LCASE(?alterEgoLabel), ""alter ego""))
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find the parent who is a child of Albrecht, Duke of Württemberg and also a parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child ?margarete .
  ?parent dbo:child ?albrechtChild .
  
  VALUES ?margarete { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> }
  VALUES ?albrechtChild { <http://dbpedia.org/resource/Albrecht,_Duke_of_W%C3%BCrttemberg> }

  # Find the children of this parent
  ?parent dbo:child ?royalty .

  # Filter to find those who are royalty
  ?royalty dbp:royalTitle ?title .
  
  # Find the grandchildren (children of the royal individuals)
  ?royalty dbo:child ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryConflict ?societalEvent WHERE {
  ?person rdfs:label ""Manuel Pinto da Costa""@en .
  OPTIONAL { 
    ?person dbo:participatedIn ?militaryConflict .
    FILTER (CONTAINS(LCASE(str(?militaryConflict)), ""angolan war of independence""))
  }
  OPTIONAL {
    ?person dbo:role ?societalEvent .
    FILTER (CONTAINS(LCASE(str(?societalEvent)), ""president"") || CONTAINS(LCASE(str(?societalEvent)), ""independence""))
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:positionHeld dbr:President_of_the_United_States .
  ?presidency dbo:holder ?person .
  ?presidency dbo:endTime ?endTime .
  FILTER (?endTime > ""1990-01-01""^^xsd:date && ?endTime < ""2001-01-20""^^xsd:date) # Bill Clinton's presidency
  OPTIONAL { 
    ?gulfWar dbo:name ""Gulf War""@en ;
             dbo:participatingMilitaryUnit dbr:United_States_Navy .
    ?commanderInChief dbo:positionHeld dbr:President_of_the_United_States ;
                      dbo:commanded ?gulfWar .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?greatGrandChild ?predecessor WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .

  # Child of Alexander
  ?child1 dbo:parent ?alexander .
  
  # Grandchild of Alexander
  ?grandChild dbo:parent ?child1 .
  
  # Great-grandchild of Alexander
  ?greatGrandChild dbo:parent ?grandChild .

  # Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht a dbo:Person ;
                   foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  
  # Child of Philipp Albrecht
  ?child2 dbo:parent ?philippAlbrecht .

  # Predecessor (Parent) of the child of Philipp Albrecht
  ?predecessor dbo:child ?child2 .

  # Find if there is any overlap
  FILTER (?greatGrandChild = ?predecessor)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentCategory WHERE {
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  ?eugeneCattin dbo:occupation ?profession .

  ?profession dbo:parent ?parentCategory .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmTitle WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Afeez Oyetoro""@en .
  
  ?film dbo:starring ?actor ;
        a dbo:Film .

  ?film rdfs:label ?filmTitle .
  FILTER (lang(?filmTitle) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent (grandparent of Philip)
  ?parent dbo:child ?philip .

  # Step 3: Ensure this grandparent is a royalty
  ?parent rdf:type dbo:Monarch .

  # Step 4: Find the spouse of this royal grandparent
  ?spouse dbo:spouse ?parent .
  
  # Step 5: Identify Béla IV of Hungary's child who is royalty
  ?belaIV a dbo:Person ;
          foaf:name ""Béla IV of Hungary""@en .
  ?child dbo:child ?belaIV ;
         rdf:type dbo:Monarch .

  # Step 6: Find the grandchild of Béla IV who is royalty
  ?grandchild dbo:child ?child ;
              rdf:type dbo:Monarch .
  
  # Ensure the spouse found is related to the lineage of Béla IV
  FILTER(?spouse = ?parent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query for the office of a commander during the Central African Republic Civil War
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  ?person dbo:occupation dbr:Commander.
  ?person dbo:nationality dbr:Central_African_Republic.
  ?person dbo:politicalParty ?party.
  ?person dbo:office ?office.
  FILTER EXISTS { ?person dbo:subject dbr:Central_African_Republic_Civil_War }
}

UNION

# Query for the office of Miguel Maura
SELECT DISTINCT ?office WHERE {
  ?miguel a dbo:Person;
          foaf:name ""Miguel Maura""@en.
  ?miguel dbo:office ?office.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Identify Archduchess Helena of Austria
  ?helena a dbo:Archduchess ;
          foaf:name ""Helena, Archduchess of Austria""@en .

  # Step 2: Find her spouse(s)
  ?helena dbo:spouse ?spouse .

  # Step 3: Determine the child(ren) of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Filter for royalty among these children
  ?child dbo:royalTitle ?title .

  # Step 5: Find the predecessor of each royal child
  ?child dbo:predecessor ?predecessor .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?spouse WHERE {
  # Step 1: Find Stephen V's child who is also Charles I's parent
  ?stephenV dbo:child ?child .
  FILTER(STRSTARTS(STR(?stephenV), ""http://dbpedia.org/resource/Stephen_V_of_Hungary"")) .

  ?child dbo:spouse ?parentOfCharlesI .
  ?parentOfCharlesI dbo:child dbp:Charles_I_of_Hungary .

  # Step 2: Find the spouse of this child
  ?child dbo:spouse ?spouse .

  # Step 3: Identify Philip's lineage
  dbp:Philip_Despot_of_Romania dbo:father ?philipFather .
  ?philipFather dbo:parent ?grandParentOfPhilip .
  
  # Find the spouse of this grandparent
  ?grandParentOfPhilip dbo:spouse ?spouse .

  # Ensure all are royalty
  FILTER(STRSTARTS(STR(?child), ""http://dbpedia.org/resource/"") &&
         STRSTARTS(STR(?spouse), ""http://dbpedia.org/resource/"") &&
         (EXISTS { ?child rdf:type dbo:Monarch } ||
          EXISTS { ?spouse rdf:type dbo:Monarch }))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Dorothea of Denmark, Electress Palatine's parent
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?dorotheasParent .

  # The parent of Dorothea is a child of Philip I of Castile and royalty
  ?dorotheasParent dbo:father ?royaltyChild .
  ?royaltyChild dbo:spouse* dbr:Philip_I_of_Castile .

  # Find the father of this royal child
  ?royaltyChild dbo:father ?father .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region ?country WHERE {
  VALUES ?person { dbr:William_Gayner }
  
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?birthPlace dbo:country ?country .
  }
  
  OPTIONAL { 
    ?birthPlace dbo:administrativeRegion ?region .
  }
}
```",1,3,2,1,1,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?actorRole WHERE {
  # Find the alter ego of The Shadow in the context of a video game
  ?game dbo:basedOn dbr:The_Shadow_(video_game) .
  ?game dbo:hasCharacter ?character .
  
  # Check if this character is also known as a comics character
  ?character dbo:wikiPageRedirects ?comicsCharacter .
  ?comicsCharacter rdf:type dbo:ComicsPublication .

  # Determine if the character has an actor role
  OPTIONAL {
    ?actorRole dbo:profession dbr:Actor .
    ?actorRole dbo:name ?character .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:birthPlace ?birthPlace .
  FILTER (strstarts(str(?birthPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?birthPlace rdfs:label ?labelBirth . FILTER(langMatches(lang(?labelBirth), ""en"") && contains(lcase(?labelBirth), ""japan"")) } )
  
  OPTIONAL {
    ?awardee dbo:location ?location .
    FILTER (strstarts(str(?location), ""http://dbpedia.org/resource/"") &&
            EXISTS { ?location rdfs:label ?labelLocation . FILTER(langMatches(lang(?labelLocation), ""en"") && contains(lcase(?labelLocation), ""japan"")) } )
  }
}
```",3,4,4,2,2,3,2,20,0,2,1,0.0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .

  # Find a musical work by Apache Indian
  ?work dbo:artist dbr:Apache_Indian ;
        a dbo:MusicalWork .

  # Get the writer of that musical work
  ?work dbo:lyricist ?writer .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentName WHERE {
  ?person foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
# Query for the commander of the French campaign in Egypt and Syria
SELECT ?commander WHERE {
  ?campaign dbo:wikiPageRedirects db:Campaign_in_Egypt_and_Syria.
  ?campaign dbo:commander ?commander.
}

UNION

# Query for military forces involved in the Battle of Fort Royal (1806)
SELECT ?battle ?britishCommander ?frenchCommander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Fort_Royal_(1806).
  OPTIONAL { ?battle dbo:britishCommander ?britishCommander. }
  OPTIONAL { ?battle dbo:frenchCommander ?frenchCommander. }
}

UNION

# Query for military forces involved in the Battle of Cape Finisterre (1805)
SELECT ?battle ?britishCommander ?frenchCommander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Cape_Finisterre_(1805).
  OPTIONAL { ?battle dbo:britishCommander ?britishCommander. }
  OPTIONAL { ?battle dbo:frenchCommander ?frenchCommander. }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonParent
WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclare dbo:spouse ?spouse .
  FILTER(STR(?mariclare) = ""Mariclare_Costello"")

  # Step 2: Find the child of that spouse
  ?spouse dbo:child ?child .

  # Step 3: Determine the parent of this child (could be the spouse or another person)
  ?parent1 dbo:child ?child .
  
  # Step 4: Identify Amy Arbus's parent
  ?amy dbo:parent ?parent2 .
  FILTER(STR(?amy) = ""Amy_Arbus"")

  # Step 5: Find common entity that is a parent in both contexts
  VALUES (?commonParent) { ?parent1 ?parent2 }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Great Turkish War""@en .
  
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",1,1,2,1,1,3,3,71,40,0,0,1.0,1.0,1.0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albrechtChild ?philippAlbrechtGrandchild ?archduchessParent ?predecessor
WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg ;
                a dbo:Person .

  # Philipp Albrecht, Duke of Württemberg's child and their child (grandchild)
  ?philippAlbrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg ;
                       a dbo:Person .
  ?philippAlbrechtGrandchild dbo:parent ?philippAlbrechtChild ;
                             a dbo:Person .

  # Archduchess Margarete Sophie of Austria's parent
  ?archduchessParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria ;
                     a dbo:Person .

  # Predecessor of Philipp Albrecht, Duke of Württemberg's child
  ?predecessor dbo:succeededBy ?philippAlbrechtChild ;
               a dbo:Person .
  
  # Ensure the predecessor is royalty and matches the criteria
  FILTER (?albrechtChild = ?predecessor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person dbo:occupation dbr:Sports_manager .
  OPTIONAL { ?person dbo:manager ?team . }
  OPTIONAL { ?person dbo:coach ?team . }
  FILTER EXISTS { ?team a dbo:SoccerClub }
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?award dbo:year ""1930"" ;
         dbo:recipient ?awardee .
  
  OPTIONAL { 
    ?awardee dbo:relatedTo ?war .
    FILTER EXISTS { ?war dbo:location dbr:Athens }
  }

  OPTIONAL {
    ?awardee dbo:subject ?subject .
    FILTER EXISTS { ?subject dbo:wikiPageWikiLink dbr:Greece }
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?william1 dbo:child ?child .
  FILTER(STRSTARTS(STR(?william1), ""http://dbpedia.org/resource/Wilhelm_I._von_Sizilien""))
  
  OPTIONAL { ?child dbp:royalTitle ?title . }
  FILTER EXISTS { ?child dbp:royalTitle ?title } 
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?producer WHERE {
  # Janet Gaynor's professional roles
  dbr:Janet_Gaynor dbo:profession ?profession .
  
  # Seventh Heaven movie details
  dbr:Seventh_Heaven_(1927_film) dbo:director ?director ;
                                  dbo:productionCompany ?company .

  OPTIONAL { 
    ?company dbo:founder ?producer .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1574)

  # Step 2: Find her children
  ?child dbo:parent ?mariaAnna .

  # Step 3: Identify the father of each child (assuming a male parent)
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?child .
  
  # Step 4: Find the children of these fathers
  ?grandchild dbo:parent ?father .

  # Step 5: Filter for royalty and commander in Thirty Years' War
  ?grandchild dbo:royalTitle ?title ;
              dbo:commanderInWar dbr:Thirty_Years_War .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Athlete .
  ?person rdf:type dbo:SoccerPlayer .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (xsd:date(?date) = ""1981-12-01""^^xsd:date)
}
```",2,6,3,2,1,3,2,20,0,2,6,0.0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?militaryForce WHERE {
  ?awardee dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Find military force involvement
  ?awardee dbo:militaryService ?militaryEntity .
  ?militaryEntity a dbo:MilitaryUnit ;
                  rdfs:label ?militaryForce .

  # Ensure the awardee is linked to a societal event
  OPTIONAL {
    ?societalEvent dbo:participant ?awardee .
    ?societalEvent a dbo:SocietalEvent .
  }
  
  FILTER (lang(?militaryForce) = 'en')
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName ?awardName ?nativeRegion
WHERE {
  # Find bands from New York State
  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) .

  # Identify awards won by the band
  ?band dbo:award ?award .
  
  # Check if the award is native to a region that is both a state and a settlement in America
  ?award dbo:nativeRegion ?nativeRegion ;
         dbo:type dbr:Award .
  
  FILTER EXISTS { 
    ?nativeRegion a dbo:State ;
                  dbo:country dbr:United_States ;
                  dbo:settlement true .
  }

  # Bind variables for output
  BIND(?band rdfs:label AS ?bandName)
  BIND(?award rdfs:label AS ?awardName)
}
ORDER BY ?bandName
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac's role in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac dbo:commanderOf dbr:Great_Turkish_War .
  
  # Find his successor who is also a politician and office holder
  ?successor dbo:succeededBy dbr:Mikołaj_Kazimierz_Pac ;
             dbo:officeHolder ?office ;
             dbo:politicalParty ?party .

  # Ensure the successor was involved in the same conflict
  ?successor dbo:commanderOf dbr:Great_Turkish_War .
  
  FILTER EXISTS { ?office a dbo:Office . }
  FILTER EXISTS { ?party a dbo:PoliticalParty . }

  # Reference to George Ducas for context (not directly used in filtering)
  OPTIONAL {
    ?georgeDucas rdfs:label ""George Ducas""@en .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandMember ?awardAwardeeBand
WHERE {
  # Identify A$AP Rocky
  dbr:A$AP_Rocky dbo:birthName ""Ackquille Jean Pollard"" .
  
  # Check if A$AP Rocky is part of a collective associated with Bobby Shmurda
  OPTIONAL { 
    ?collective dbo:member dbr:A$AP_Rocky .
    ?collective dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  }
  
  # Identify an award related to New York and its awardee band
  ?award dbo:location dbr:New_York_(state) ;
         dbo:awardee ?bandAwardee .
  ?bandAwardee a dbo:Band .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Thomas Letsch's managed club
  ?letschManagement dbo:agent dbr:Thomas_Letsch ;
                    dbo:subject dbr:Soccer_Club ;
                    dbo:startTime ?start ;
                    dbo:endTime ?end .
  
  # Ensure it is a sports team season
  ?sportsSeason dbo:seasonType dbr:Soccer_Season ;
               dbo:participatingTeam ?letschManagement .

  # Find Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativeCountry ?nativeCountry .
  
  # Ensure the club is from the same country as Theodor Heuss's native country
  ?letschManagement dbo:country ?nativeCountry .

  # Get the manager of that club during the season
  ?manager dbo:agent dbr:Soccer_Club ;
           dbo:startTime ?start ;
           dbo:endTime ?end .
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warMilitaryForce ?eventMilitaryForce WHERE {
  # Find the war associated with William Bayne and its military force
  ?bayne dbo:occupation dbr:Military_person .
  ?bayne dbo:associatedWith ?war .
  ?war a dbo:Military_conflict ;
       dbo:militaryForce ?warMilitaryForce .

  # Find the awardee of Knight Commander of the Order of the Bath and their event
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?awardee dbo:associatedWith ?event .
  ?event a (dbo:Societal_event | dbo:Military_conflict) ;
         dbo:militaryForce ?eventMilitaryForce .

}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Actor of ""Always"" (1989 film)
SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Always""@en .
  FILTER(CONTAINS(LANG(?film), ""1989""))
  ?film dbo:starring ?actor .
}

UNION

# Actor of ""Paradise"" (2013 film)
SELECT ?actor WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Paradise""@en .
  FILTER(CONTAINS(LANG(?film), ""2013""))
  ?film dbo:starring ?actor .
}

UNION

# Spouse of the awardee of awards received by Janusz Kamiński
SELECT DISTINCT ?spouse WHERE {
  dbr:Janusz_Kamiński dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:spouse ?spouse . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:honoursReceived dbr:Commander_of_the_Royal_Victorian_Order .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianFather WHERE {
    ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
    ?child dbo:parent ?mother .
    ?mother rdf:type dbo:Spouse .
    ?politicianFather dbo:spouse ?mother ;
                      rdf:type dbo:Politician .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?filmTitle ?actorName
WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ?filmTitle .
  FILTER (lang(?filmTitle) = 'en') .

  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en' && ?actor != <http://dbpedia.org/resource/Audrey_Hepburn>) .

  VALUES ?audreyHepburn {<http://dbpedia.org/resource/Audrey_Hepburn>} .
  ?film dbo:starring ?audreyHepburn .
}
ORDER BY ?filmTitle
```",2,4,3,2,1,2,3,28,0,91,62,0.0,0.0,0
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfDoon ?actorInMovieWithHerschel ?professionEugeneCattin ?professionalParent 
WHERE {
  # Find parent of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?parentOfDoon .

  # Find movies with Herschel Bernardi and the actor who is also a parent of Doon Arbus
  ?movie dbo:starring dbr:Herschel_Bernardi ;
         dbo:starring ?actorInMovieWithHerschel .
  
  FILTER (?actorInMovieWithHerschel = ?parentOfDoon)

  # Find the profession of Eugène Cattin
  dbr:Eugène_Cattin dbo:occupation ?professionEugeneCattin .

  # Find professionals in that same field and their parents
  ?professional a ?professionEugeneCattin ;
                dbo:parent ?professionalParent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find a child of Roger II who is royalty
  ?child1 dbo:parent dbr:Roger_II_of_Sicily .
  ?child1 rdfs:label ?label1 .
  FILTER CONTAINS(LCASE(?label1), ""king"") || CONTAINS(LCASE(?label1), ""queen"")

  # Step 2: Find the parent of that child
  ?parent1 dbo:child ?child1 .

  # Step 3: Find a child of William I who is royalty and also a child of Elvira
  ?child2 dbo:parent dbr:William_I_of_Sicily .
  ?child2 rdfs:label ?label2 .
  FILTER CONTAINS(LCASE(?label2), ""king"") || CONTAINS(LCASE(?label2), ""queen"")
  
  ?child2 dbo:parent dbr:Elvira_of_Castile .

  # Step 4: Find the father of that child
  ?father1 dbo:child ?child2 .

  # Step 5: Determine the common entity between parent from step 2 and father from step 4
  FILTER (?parent1 = ?father1)
  BIND(?parent1 AS ?commonEntity)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?curranBand ?wilsonRealName WHERE {
  # Find the band associated with Nicholas Michael Curran if he is a musical artist
  OPTIONAL {
    ?curran dbo:musicalArtist true .
    ?curran foaf:name ""Nicholas Michael Curran"" .
    ?curran dbo:associatedBand ?band .
    ?band foaf:name ?curranBand .
  }

  # Find the real name of the band associated with Kim Wilson
  ?wilson dbo:musicalArtist true .
  ?wilson foaf:name ""Kim Wilson"" .
  ?wilson dbo:associatedBand ?band .
  ?band dbo:birthName ?wilsonRealName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName WHERE {
  # Shatrughan Sinha's profession as an actor
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .

  # Find actors who share the same profession
  ?actor dbo:profession dbr:Actor .
  
  # Ensure the actor is not Shatrughan Sinha himself
  FILTER(?actor != dbr:Shatrughan_Sinha)

  # Richard E. Grant's participation in a television show
  dbr:Richard_E._Grant dbo:performerIn ?tvShow .

  # Check if the same actor participated in the same TV show
  ?actor dbo:performerIn ?tvShow .
  
  # Return the name of such actors
  ?actor rdfs:label ?actorName .
  
  FILTER(LANG(?actorName) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?band ?associatedArtist
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthday ""1945-03-30""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
  
  OPTIONAL {
    ?persona dbp:alias ""Nick Curran"" ;
             dbo:associatedWith ?associatedArtist .
    FILTER (?persona = ?person)
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?person dbo:name ""Christian Ditlev Ammentorp Hansen""@en .
  ?person dbo:deathPlace ?deathPlace .
  FILTER EXISTS { ?deathPlace rdf:type dbp:Settlement }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  OPTIONAL { ?actor dbo:athlete true . }
  OPTIONAL { ?actor dbo:soccerPlayer true . }

  FILTER((BOUND(?actor) && (EXISTS{?actor dbo:athlete true} || EXISTS{?actor dbo:soccerPlayer true})) )
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountry ?soccerClubSeason
WHERE {
  # Find Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeCountry .

  # Find the sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
          dbp:birthday ""1968-08-26""^^xsd:date .

  # Find the soccer club season managed by this sports manager
  ?soccerClubSeason dbo:manager ?manager ;
                   a dbo:SoccerClubSeason .

  # Check if there is any connection between Theodor Heuss's native country and the soccer club
  OPTIONAL {
    ?soccerClub dbp:country ?nativeCountry .
    ?soccerClubSeason dbo:sportTeam ?soccerClub .
  }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoOffice ?leaderName ?leaderOffice
WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoOffice .

  # People's Party (Partido Popular) leader and their office
  dbr:People%27s_Party_(Spain) dbo:leader ?leader .
  ?leader foaf:name ?leaderName .
  ?leader dbo:office ?leaderOffice .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:parent ?person .
  ?person dbo:gender dbr:Male .
  OPTIONAL { ?person rdfs:label ?fatherLabel . FILTER (lang(?fatherLabel) = ""en"") }
  BIND(STR(?person) AS ?father)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?war 
WHERE {
  # Find awards received by Quincy Adams Gillmore
  ?gillmoreAward a dbo:Award ;
                 dbo:recipient dbr:Quincy_Adams_Gillmore .

  # Find other recipients of the same award
  ?otherRecipient dbo:award ?gillmoreAward .
  
  # Find the military force associated with the awardee
  ?force dbo:commander ?otherRecipient .

  # Find wars involving Amasa Tracy
  ?tracyWar a dbo:MilitaryConflict ;
            dbo:participant dbr:Amasa_Tracy .

  # Link the force to the war
  ?force dbo:participatedIn ?tracyWar .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  
  ?person dbo:deathPlace dbr:Los_Angeles ;
          foaf:parent ?parent .

  ?professional dbo:profession dbr:Photographer ;
                foaf:parent ?parent .

  ?movie dbo:actor ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?nativeName WHERE {
  ?person dbo:birthName ""William Gayner"" .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace rdfs:label ?nativeName .
  }

  FILTER EXISTS { ?birthPlace a <http://dbpedia.org/ontology/Country> }
  FILTER EXISTS { ?birthPlace a <http://dbpedia.org/ontology/Region> }
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
# Step 1: Get Tony Hollings' birthday
SELECT ?birthday WHERE {
    dbpedia:Tony_Hollings dbo:birthday ?birthday .
}

# Step 2: Find individuals matching all roles and born on the same day
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
    # Replace 'YYYY-MM-DD' with Tony Hollings' actual birthday obtained from Step 1
    BIND(""YYYY-MM-DD"" AS ?birthday) .

    ?person dbo:birthday ?birthDate .
    FILTER (STRSTARTS(STR(?birthDate), STR(?birthday))) .

    ?person a dbo:Athlete ;
            a dbo:SoccerPlayer ;
            a dbo:SportsManager ;
            a dbo:SoccerManager .

    ?person rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
}
```

Note: Replace `""YYYY-MM-DD""` with the actual birthday of Tony Hollings obtained from the first query.",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Paulus Powell""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (
    { ?birthPlace rdf:type dbo:Region . }
    && { ?birthPlace rdf:type dbo:AdministrativeRegion . }
  )
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?charlestonEntity ?gillmoreAwardee ?militaryForce WHERE {
  # Find the war related to the Gillmore Medal and Congressional awards
  VALUES ?award { dbr:Gillmore_Medal dbr:Congressional_Gold_Medal }
  
  ?award dbo:awardedFor ?event .
  ?event dbo:relatedToWar ?war .

  FILTER(?war = dbr:American_Civil_War)

  # Find an entity in Charleston, South Carolina
  ?charlestonEntity a dbo:Place ;
                   dbo:locationCity dbr:Charleston,_South_Carolina .

  # Find the awardee of the Gillmore Medal and their military force
  ?gillmoreAwardee dbo:awardedWith ?award .
  ?gillmoreAwardee dbo:militaryForce ?militaryForce .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?father WHERE {
  # Elvira of Castile's children who are royalty
  ?elvira dbr:Elvira_of_Castile .
  ?elvira dbo:spouse ?parent .
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .

  # Father of the child, ensuring he is royalty and an office holder
  ?child dbo:father ?father .
  ?father a dbo:Monarch .
  ?father dbo:officeHolder ?office .

  # Connection to William I
  OPTIONAL {
    ?father dbo:reference dbr:William_I_of_Sicily .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find members of Filthy Friends
  ?filthyFriends dbo:member ?member .
  FILTER(STRSTARTS(STR(?filthyFriends), ""http://dbpedia.org/resource/Filthy_Friends""))

  # Find the writer or producer of No Alternative
  ?noAlternative dbo:creator ?writer .
  FILTER(STRSTARTS(STR(?noAlternative), ""http://dbpedia.org/resource/No_Alternative_(album)""))
  
  # Check if this writer is a band member of any band that includes the Filthy Friends member
  ?band dbo:member ?writer .
  ?member dbo:associatedBandMember ?band .

  BIND(?member AS ?artist)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgoName ?shatrughanProfession
WHERE {
  # Retrieve the alter ego of The Shadow
  ?shadow dbo:alterEgoOf dbp:The_Shadow .
  ?shadow foaf:name ?alterEgoName .

  # Retrieve Shatrughan Sinha's profession
  dbp:Shatrughan_Sinha dbo:occupation ?shatrughanProfession .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?birthPlaceLabel WHERE {
  ?entity dbo:recipientOf dbr:Medal_of_Honor .
  ?entity dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  OPTIONAL { ?entity dbo:war ?war . }
  
  ?entity dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Japan .
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
LIMIT 10
```",1,1,2,1,1,2,3,28,0,20,104,0.0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?secondLevelArtist WHERE {
  ?rem a dbo:Band ;
      rdfs:label ""R.E.M.""@en .
  
  ?rem dbo:associatedMusicalArtist ?firstLevelArtist .
  ?firstLevelArtist a dbo:Agent ;
                    rdfs:label ?firstLabel .

  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
  ?secondLevelArtist a dbo:Agent ;
                     rdfs:label ?secondLabel .
  
  FILTER(?rem != ?secondLevelArtist)
}
```",2,3,3,2,1,3,2,20,2,9,26,0.18181818181818182,0.07142857142857142,0.10256410256410255
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName ?bandName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:givenName ""Nicholas"" ;
          foaf:familyName ""Curran"" ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1945 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 30)
  
  ?person rdfs:label ?artistName .
  FILTER(LANG(?artistName) = 'en')
  
  OPTIONAL {
    ?band dbo:member ?person ;
          rdfs:label ?bandName .
    FILTER(LANG(?bandName) = 'en')
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?amyParent ?doonParent ?movie ?actor WHERE {
  # Find Amy Arbus's parent(s)
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?amyParent .
  }
  
  # Find Doon Arbus's parent(s)
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?doonParent .
  }

  # Find a movie and an actor who is a decedent at Los Angeles
  {
    ?movie a dbo:Film ;
           dbo:starring ?actor .
    ?actor dbo:deathPlace dbr:Los_Angeles_County,_California .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bobCreweBirthplace ?ethanIversonWorkBirthplace WHERE {
  # Query for Bob Crewe's birthplace
  dbr:Bob_Crewe dbo:birthPlace ?bobCreweBirthplace .

  # Query for Ethan Iverson's works that are considered artists and their birthplaces
  OPTIONAL {
    ?work dbo:artist dbr:Ethan_Iverson .
    ?work a dbo:MusicalWork ; 
          dbo:birthPlace ?ethanIversonWorkBirthplace .
  }
}
```",3,5,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the event of the French Campaign in Egypt and Syria
  dbr:French_Campaign_in_Egypt_and_Syria a dbo:MilitaryConflict ;
    dbo:participatingMilitaryUnit ?militaryForce .

  OPTIONAL {
    # Find William Bayne's involvement
    ?bayne dbo:occupation dbr:Navy_officer ;
           dbo:memberOf ?britishNavalForce .
    
    FILTER(?britishNavalForce = ?militaryForce)
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouseName WHERE {
  # Step 1: Identify Nat Levine and his films
  ?natLevine dbo:profession dbr:Film_producer .
  ?natLevine foaf:name ""Nat Levine"" .

  ?film dbo:producer ?natLevine .
  
  # Step 2: Find actors in these films
  ?film dbo:starring ?actor .
  
  # Step 3: Identify the ruling party in Central, Louisiana
  ?centralLocation dbp:country dbr:United_States ;
                  dbp:stateOrProvince dbr:Louisiana ;
                  dbp:city ""Central"" .

  ?partyMember dbo:memberOf ?rulingParty .
  ?rulingParty dbo:location ?centralLocation .
  
  # Step 4: Find a member of this party who is married to an actor
  ?actor foaf:name ?spouseName .
  ?actor dbp:spouse ?partyMember .

}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton's book
  ?book1 dbo:author dbr:Hillary_Clinton .
  ?book1 a dbo:Book .

  # Bill Clinton's book
  ?book2 dbo:author dbr:Bill_Clinton .
  ?book2 a dbo:Book .

  # Spouse who is both an author and politician/office holder
  ?spouse dbo:spouse dbr:Hillary_Clinton ;
          dbo:spouse dbr:Bill_Clinton ;
          dbo:occupation dbr:Author ;
          dbo:occupation dbr:Politician .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stageName ?band ?nativeRegion WHERE {
  # Find Ackquille Jean Pollard's stage name
  VALUES ?person { dbr:Akon }
  
  ?person rdfs:label ""Akon""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Ackquille Jean Pollard"")
  
  # Check band membership
  ?band dbo:member ?person .
  ?band rdfs:label ""Uncle Murda""@en .

  # Determine native region (assuming it refers to a place related to his heritage)
  OPTIONAL {
    ?person dbo:nationality dbr:United_States .
    ?person dbo:birthPlace ?nativeRegion .
    FILTER(CONTAINS(LCASE(STR(?nativeRegion)), ""coro"") || CONTAINS(LCASE(STR(?nativeRegion)), ""puerto rico""))
  }
  
  # Return the stage name, band, and native region
  BIND(STRAFTER(STR(?person), ""http://dbpedia.org/resource/"") AS ?stageName)
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?calder a dbo:MilitaryPerson ;
         foaf:name ""Robert Calder""@en ;
         dbo:militaryBranch ?militaryForce .
  
  OPTIONAL { 
    ?event dbo:agent ?calder ;
           a dbo:Event .
  }
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?book dbo:author dbr:Hillary_Rodham_Clinton .
  ?book rdfs:label ""An Invitation to the White House""@en .

  ?spouse dbo:spouse dbr:Hillary_Rodham_Clinton .
  ?spouse a dbo:Politician ;
          dbo:officeHolderOf dbr:President_of_the_United_States ;
          dbo:militaryService dbr:United_States_Navy ;
          dbo:commanderInWar dbr:Gulf_War .

  OPTIONAL {
    ?work dbo:author ?spouse .
    ?work rdfs:label ?title .
    FILTER CONTAINS(LCASE(?title), ""bill clinton"")
  }
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nicholasBirthPlaceCountry ?alexanderBirthPlaceCountry WHERE {
  # Nicholas II of Russia
  dbr:Nicholas_II_of_Russia a dbo:Person ;
    dbo:birthPlace ?nicholasBirthPlace .
  
  ?nicholasBirthPlace dbo:country ?nicholasBirthPlaceCountry .

  FILTER(?nicholasBirthPlaceCountry != dbr:Russia) # Ensure it's not just the country of Russia

  # Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland a dbo:Person ;
    dbo:birthPlace ?alexanderBirthPlace .
  
  ?alexanderBirthPlace dbo:country ?alexanderBirthPlaceCountry .

  FILTER(?alexanderBirthPlaceCountry != dbr:Russia) # Ensure it's not just the country of Russia
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person dbo:nationality dbr:Poland .
  ?person dbo:sport ?sport .
  FILTER EXISTS { ?person dbo:sport ?sport . }
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(str(?residence) AS ?country)
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Joseph Benjamin""@en .
  ?person dbo:occupation dbr:Musician .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonDescendant WHERE {
  # Duke Philipp of Württemberg's grandchildren
  ?grandchild1 dbo:parent ?child1 .
  ?child1 dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Archduke Charles Louis of Austria's grandchildren
  ?grandchild2 dbo:parent ?child2 .
  ?child2 dbo:parent dbr:Archduke_Charles_Louis_of_Austria .

  # Find a common descendant who is royalty
  FILTER (?grandchild1 = ?grandchild2)
  ?commonDescendant rdf:type dbo:RoyalFamilyMember .
  
  BIND(?grandchild1 AS ?commonDescendant) 
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find the parent of Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Step 2: Find a child of this parent who is not Archduke Charles Joseph himself
  ?child dbo:parent ?parent .
  FILTER (?child != dbr:Archduke_Charles_Joseph_of_Austria)
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley's children who are politicians
  ?child1 dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
          a dbo:Politician .
  
  # Parents of these children
  ?parent1 dbo:child ?child1 .

  # Edward Stanley's parent who is both a politician and an office holder
  ?parent2 dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby ;
           a dbo:Politician, dbo:OfficeHolder .
  
  # Victor Stanley's parent
  ?parent3 dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) .

  # Matching the parent of Edward Stanley with the parent of Frederick Stanley's child
  FILTER (?parent1 = ?parent2)

  # Ensuring the parent is also related to Victor Stanley
  FILTER (?parent1 = ?parent3)

  # The father of the child who is a politician from Frederick Stanley's lineage
  ?father dbo:child ?child1 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?memberLabel WHERE {
  ?team a dbo:SoccerClub ;
        foaf:name ""1. FC Magdeburg""@en .
  
  ?team dbo:player ?member .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Get the spouse of the actor
  ?actor dbp:spouse ?spouse .

  # Ensure the spouse is a member of the Republican Party (United States)
  ?spouse dbo:partyMemberOf dbr:Republican_Party_(United_States) .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gillmoreForce ?tracyWar ?lewisBirthplace
WHERE {
  # Quincy Adams Gillmore's Force
  dbr:Quincy_Adams_Gillmore dbo:militaryService ?service .
  ?service dbo:commander ?gillmoreForce .

  # Amasa Tracy's War
  dbr:Amasa_Tracy dbo:participatedInWar ?tracyWar .

  # Henry Clay Lewis' Birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirth .
  ?lewisBirth a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war 
WHERE {
  ?person dbo:awarded (dbr:Gillmore_Medal OR dbr:Medal_of_Honor) .
  FILTER EXISTS { ?person dbo:awarded dbr:Gillmore_Medal . }
  FILTER EXISTS { ?person dbo:awarded dbr:Medal_of_Honor . }
  OPTIONAL {
    ?medalOfHonorAward dbo:recipient ?person ;
                       dbo:confers ?war .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?child dbo:parent dbp:Baeda_Maryam_I .
  ?child dbo:father ?father .
  ?father a dbo:Monarch ; # Monarchs are typically royalty and office holders
           dbo:officeHolder ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?aliasArtist WHERE {
  ?person a dbo:Musician ;
          foaf:givenName ""Darryl"" ;
          foaf:surname ""Bannerman-Martin"" .
  
  ?person foaf:name ""Stevie Wonder""@en .

  OPTIONAL { 
    ?person dbo:alias ?alias .
    FILTER regex(?alias, ""^Stevie \\$pacely$"", ""i"")
    
    ?aliasArtist dbo:associatedBandOrMusicalArtist ?person .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInYeJia ?managerOfHongKongC
WHERE {
  # Find players associated with Ye Jia
  ?yeJia a dbo:Person ;
         foaf:name ""Ye Jia""@en .
  
  ?team dbo:member ?yeJia ;
        dbo:member ?playerInYeJia .

  # Ensure the player is indeed a player
  ?playerInYeJia a dbo:SoccerPlayer .

  # Find managers of Hong Kong C
  dbr:Hong_Kong_C a dbo:SportsTeam ;
                  dbo:sport dbr:Soccer ;
                  dbo:organizationType dbr:SportsClub ;
                  dbo:member ?managerOfHongKongC .
  
  ?managerOfHongKongC a dbo:Person ;
                      dbo:occupation dbr:SportsManager ;
                      dbo:occupation dbr:SoccerManager .

}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?author ?work ?collinsAuthor
WHERE {
  # Find the fictional character associated with Kent Allard
  ?character dbo:creator ?author .
  ?character rdfs:label ""Kent Allard""@en .

  # Find Cora Sue Collins' claim to fame (her most famous work)
  ?work dbo:writer ?collinsAuthor .
  ?work dbo:wikiPageRedirects dbr:Cora_Sue_Collins .

  # Ensure the author of Kent Allard is the same as Cora Sue Collins' author
  FILTER (?author = ?collinsAuthor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?movie dbo:title ""All or Nothing: Manchester City""@en .
  ?movie dbo:starring ?actor .

  # Filter for those who are also soccer players
  ?actor rdf:type dbo:SoccerPlayer .

  # Check if they have played for a team associated with Pablo Aimar (Valencia CF)
  OPTIONAL {
    ?actor dbo:team dbr:Valencia_CF .
  }

  FILTER EXISTS { ?actor dbo:team dbr:Valencia_CF }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find works authored by Aleksandr Filimonov
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  # Identify adaptations of these works, such as films
  ?adaptation dbo:basedOnWork ?work ;
              a dbo:Film .

  # Extract actors involved in the film adaptation
  ?adaptation dbo:starring ?actor .
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ].
  
  ?commander dbo:partyMembership dbr:Republican_Party_(United_States) .

  FILTER(CONTAINS(LCASE(?event), ""pickett's charge""))
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?shadowProfessional WHERE {
  # Query for the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  # Query for a professional associated with The Shadow
  OPTIONAL { 
    dbr:The_Shadow dbo:alterEgo ?shadowProfessional .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalCharacter ?movieOrWork WHERE {
  # Find the fictional character associated with Kent Allard
  ?character dbo:alterEgo dbr:Kent_Allard .
  
  # Find Janet Gaynor's notable works (movies or other works)
  ?work dbo:actor dbr:Janet_Gaynor ;
        a ?typeOfWork .

  # Filter for movies and possibly other types of works
  VALUES ?typeOfWork { dbo:Film dbo:TheatrePlay }

  # Check if the fictional character is related to Janet Gaynor's work
  ?character dbo:profession ?profession .
  ?work dbo:producer ?producer .
  
  FILTER(?fictionalCharacter = ?character)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?book a dbo:Book .
  ?book dbo:author dbr:Bill_Clinton .
  ?book dbo:title ?title .
  FILTER CONTAINS(LCASE(?title), ""my life"")
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person a dbpedia-owl:MilitaryPerson ;
          foaf:name ""Quincy Adams Gillmore""@en .
  
  OPTIONAL { 
    ?person dbp:commanded ?force .
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Producer of ""Seventh Heaven"" (Janet Gaynor's claim to fame)
  dbr:Seventh_Heaven_(film) dbo:producer ?seventh_heaven_producer .
  
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?tom_sawyer_producer .

  # Fictional character related to Kent Allard
  OPTIONAL {
    ?fictionalCharacter dbo:alterEgo dbr:Kent_Allard .
    ?fictionalCharacter dbo:creator ?producer .
  }

  # Ensure the same producer is linked to all elements
  FILTER (?seventh_heaven_producer = ?tom_sawyer_producer && ?producer = ?seventh_heaven_producer)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthPlace WHERE {
  # Vince Gilligan's Emmy Award for Outstanding Drama Series (Breaking Bad)
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series.

  # Find another awardee of the same award
  ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series.
  
  FILTER(?awardee != dbr:Vince_Gilligan) # Exclude Vince Gilligan himself

  # Get the birthplace of this awardee
  ?awardee dbo:birthPlace ?birthPlace.
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?member ?memberName WHERE {
  # Find Nick Curran's associated bands
  dbr:Nick_Curran dbo:associatedBand ?band .
  
  # For each band, find its members
  ?band dbo:bandMember ?member .

  # Check if the member is a musical artist and born on March 30, 1945
  ?member dbo:birthday ?birthday ;
          rdf:type dbo:MusicalArtist .
  FILTER (YEAR(?birthday) = 1945 && MONTH(?birthday) = 3 && DAY(?birthday) = 30)

  # Get the member's name
  ?member rdfs:label ?memberName .
  
  # Filter out English labels only for clarity
  FILTER(LANG(?memberName) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?child 
WHERE {
  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Dawit I's child
  dbr:Dawit_I dbo:child dbr:Zara_Yaqob .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:soccerManager true ;
          dbo:birthDate ""1979-11-03""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:team ?team .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?person a dbo:Duke ;
          foaf:name ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?bandMember
WHERE {
  # Find the artist associated with ""Phantomsmasher""
  ?album dbo:title ""Phantomsmasher"" ;
         dbo:byArtist ?artist .
  
  # Ensure the artist is a band, group, or organization
  ?artist a dbo:Band ;
          a dbo:MusicalGroup ;
          a dbo:Organization .

  # Find band members of this artist
  ?member dbo:bandMemberOf ?artist .

  # Check if any member is also part of ""Burnt by the Sun""
  ?burntAlbum dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""burnt by the sun""))
  
  ?burntAlbum dbo:byArtist ?burntBand ;
              dbo:bandMemberOf ?member .

  # Ensure ""Burnt by the Sun"" is a band, group, or organization
  ?burntBand a dbo:Band ;
             a dbo:MusicalGroup ;
             a dbo:Organization .
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Theodor Heuss's native country
SELECT ?country WHERE {
    dbr:Theodor_Heuss dbo:nationality ?person .
    ?person dbo:nationality ?country .
}

# Step 2: Identify the successor league season of 2006–07 VfL Bochum and manager for both seasons
SELECT DISTINCT ?manager ?nativeCountry WHERE {
    # Find the league associated with 2006-07 VfL Bochum
    dbr:VfL_Bochum_2006%E2%80%9307_season dbo:participatedInLeague ?league .
    
    # Find the successor season of this league
    ?successorSeason dbo:participatedInLeague ?league ;
                     dbo:manager ?manager .

    # Ensure the manager also managed 2020-21 SBV Vitesse
    dbr:SBV_Vitesse_2020%E2%80%9321_season dbo:manager ?manager .
    
    # Find the native country of this manager
    ?manager dbo:nationality ?nativeCountry .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeName ?awardeeBirthPlace ?actorName ?actorBirthPlace
WHERE {
  # Find an awardee of the Sangeet Natak Akademi Fellowship and their birthplace
  ?awardee dbo:award ""Sangeet_Natak_Akademi_Fellowship"" .
  ?awardee rdfs:label ?awardeeName .
  FILTER(LANG(?awardeeName) = 'en')
  OPTIONAL { ?awardee dbo:birthPlace ?awardeeBirthPlace . }

  # Find Soumitra Chatterjee and his birthplace
  dbr:Soumitra_Chatterjee dbo:actorInFilm dbr:Akaler_Shandhaney .
  dbr:Soumitra_Chatterjee rdfs:label ""Soumitra Chatterjee""@en .
  OPTIONAL { dbr:Soumitra_Chatterjee dbo:birthPlace ?actorBirthPlace . }
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneWar ?bayneForce, ?regimentWar ?regimentForce
WHERE {
  # Find the military conflict involving William Bayne
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:participant dbr:William_Bayne_(Royal_Navy_officer) .
  
  OPTIONAL { 
    ?bayneEvent dbo:opposingMilitaryForce ?bayneForce .
  }
  
  # Find the military conflict involving the 30th (Cambridgeshire) Regiment of Foot
  ?regimentEvent a dbo:MilitaryConflict ;
                 dbo:participant dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  OPTIONAL { 
    ?regimentEvent dbo:opposingMilitaryForce ?regimentForce .
  }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
# Query to get the alma mater of Chennupati Jagadish
SELECT ?almaMater WHERE {
  ?person dbo:wikiPageID ""Chennupati_Jagadish"" .
  ?person dbo:almaMater ?almaMater .
}

# Query to find an entity in Andhra Pradesh
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Andhra Pradesh""@en .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?realPerson .
  ?realPerson rdfs:label ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Ada Jane Low""@en .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
  OPTIONAL { ?person dbo:positionHeld ?position . FILTER(CONTAINS(LCASE(STR(?position)), ""politician"")) }
}
```",1,2,2,1,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?person a dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          dbo:birthDate ""1955-02-22""^^xsd:date .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?person .

  ?team dbo:member ?person ;
        dbo:member dbr:Pablo_Aimar .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Spencer Tracy played Johnny Doughboy in ""A Guy Named Joe""
  ?actor dbo:role <http://dbpedia.org/resource/A_Guy_Named_Joe> .
  ?actor rdfs:label ""Spencer Tracy""@en .

  # Lamont Cranston is the alter ego of The Shadow
  ?alterEgo dbo:alias ""Lamont Cranston"" .
  ?alterEgo dbo:character <http://dbpedia.org/resource/The_Shadow> .

  # William A. Wellman produced ""A Star Is Born"" (1937)
  ?producer dbo:film dbr:A_Star_Is_Born_(1937_film) .
  ?producer rdfs:label ""William A. Wellman""@en .

  # Check if the producer is connected to both roles
  FILTER (?actor = ?alterEgo || ?producer = ?actor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person foaf:name ""John Boxer"" .
  OPTIONAL { ?person schema:birthName ?birthName . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?nationality WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""El Deafo""@en .
  OPTIONAL { ?book dbo:author ?author . }
  OPTIONAL { ?author dbo:nationality ?nationality . FILTER (lang(?nationality) = 'en' && contains(str(?nationality), ""American"")) }
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Query for Lao She's work and its associated country
  OPTIONAL { 
    dbr:Lao_She dbo:nationality dbr:China .
    dbr:Camel_Xiangzi dbo:setInLocation dbr:China .
    BIND(dbr:China AS ?country)
  }
  
  # Query for the birthplace of Chiang Wei-kuo
  OPTIONAL {
    dbr:Chiang_Wei-kuo dbo:birthPlace ?birthPlace .
    FILTER(?birthPlace != """")
    BIND(str(?birthPlace) AS ?country)
  }
}
```",4,5,5,2,2,3,2,20,0,2,1,0.0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Prince Faisal bin Hussein
  ?prince a dbo:Person ;
          foaf:name ""Faisal bin Hussein""@en .
  
  # Identify his children who are royalty
  ?child dbo:childOf ?prince ;
         dbo:royalty ?royalStatus .

  # Get the parents of these royal children
  ?parent dbo:parentOf ?child .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?timeZone ?region 
WHERE {
  ?japan a dbo:Country ;
         rdfs:label ""Japan""@en .
  
  ?japan dbp:timeZone ?timeZone .

  OPTIONAL {
    ?timeZone dbo:country ?country .
    ?country dbo:location ?region .
  }
}
```",2,2,3,2,1,2,2,9,0,1,2255,0.0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director ?huerga .
  ?huerga foaf:name ""Manuel Huerga""@en .

  # Find actors in these films who are also soccer players and athletes
  ?film dbo:actor ?actor .
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Find the person born on Marcelo Sarmiento's birthday, who is both a soccer player and manager
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthday ?birthday .
  ?team dbo:member ?person .
  
  # Filter by Marcelo Sarmiento's birthday
  VALUES ?birthday { ""1977-10-12""^^xsd:date } .

  # Ensure the actor is part of the team associated with the person born on that date
  ?actor dbo:memberOf ?team .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .
  
  # Find George Raft, the actor of ""1,000 Dollars a Minute""
  dbr:""1,_000_Dollars_a_Minute"" dbo:starring dbr:George_Raft .

  # Find the spouse of Anne Sothern
  ?person rdfs:label ?birthName .
  ?person dbo:spouse ?spouse .
  
  FILTER (CONTAINS(LCASE(?birthName), ""anne sothern""))
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?elvira dbo:spouse ?roger .
  ?elvira foaf:name ""Elvira of Castile"" .
  ?roger foaf:name ""Roger II of Sicily"" .

  ?elvira dbo:child ?child .
  ?roger dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the alter ego of The Shadow in comics
  dbr:The_Shadow (dbo:alterEgo) ?alterEgo .
  
  # Find Bruce Greenwood as actor of The Shadow movie and his TV show participation
  dbr:Bruce_Greenwood dbo:actorInFilm dbr:The_Shadow_(2004_film) ;
                      dbo:actorInTVSeries ?tvShow .

  # Find Richard Dean Anderson's birth name
  dbr:Richard_Dean_Anderson dbo:birthName ""Richard Grant Esterhuysen""^^xsd:string .
  
  # Connect the dots to find the professional in question
  FILTER(?alterEgo = dbr:Lamont_Cranston) .
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  VALUES (?name1 ?name2) { 
    (""Walter B. Gibson"" ""David O. Selznick"")
  }
  
  OPTIONAL {
    ?person dbo:name ?name1 .
    ?person dbo:occupation ?profession .
    FILTER regex(?profession, ""author|writer"", ""i"") # For Walter B. Gibson
  }

  OPTIONAL {
    ?film dbr:A_Star_Is_Born_(1937_film) ;
          dbo:producer ?producer .
    ?producer dbo:name ?name2 .
    ?producer dbo:occupation ?profession .
    FILTER regex(?profession, ""producer"", ""i"") # For David O. Selznick
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?roger dbo:spouse ?elvira .
  ?roger dbr:Roger_II_of_Sicily .
  ?elvira dbr:Elvira_of_Castile .

  ?child dbo:parent ?roger ;
         dbo:parent ?elvira ;
         a dbo:Monarch .

  ?williamI dbo:parent ?child .
  ?williamI dbr:William_I_of_Sicily .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region a dbo:Settlement .
  ?region dbo:timeZone dbr:Eastern_European_Time .
}
```",1,2,2,1,1,3,2,20,20665,0,0,1.0,1.0,1.0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award ?war WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement ;
         dbo:country dbr:United_States .
  ?person dbo:award ?award .
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?award dbo:associatedWith ?war .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?father WHERE {
  # Find commanders in the Algerian War
  ?algerianWar dbo:participatedInMilitaryForce dbr:Algerian_War .
  ?commander dbo:commandedMilitaryForce ?algerianWar .

  # Find Eleonore of Austria's father
  dbr:Eleonore_of_Austria dbo:father ?father .

  # Filter for Charles de Gaulle as a commander in the Algerian War
  OPTIONAL { ?commander rdfs:label ""Charles de Gaulle""@en }
  
  # Filter for Maximilian II, Holy Roman Emperor as Eleonore's father
  OPTIONAL { ?father rdfs:label ""Maximilian II, Holy Roman Emperor""@en }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentSpouse WHERE {
  ?francisI a dbo:Duke ;
            foaf:name ""Francis I, Duke of Lorraine""@en .
  
  ?francisI dbo:parent ?parent .

  ?parent dbo:spouse ?parentSpouse .

  FILTER EXISTS { ?parentSpouse rdf:type dbo:Monarch }
  FILTER EXISTS { ?parentSpouse rdf:type dbo:NoblePerson }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Entity for Alexander Lvovich Davydov
  dbr:Aleksandr_Davydov dbo:militaryService [
    a dbo:MilitaryConflict ;
    rdfs:label ?war ;
    dbo:description ?description .
  ] .

  FILTER CONTAINS(LCASE(?war), ""napoleonic wars"") OR 
        CONTAINS(LCASE(?war), ""france invasion of russia"")
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Baeda Maryam I""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?gustavoPetroParty ?royBarrerasParty WHERE {
  OPTIONAL { 
    dbp:Petro_Gustavo dbo:party ?gustavoPetroParty .
  }
  OPTIONAL { 
    dbp:Barreras_Montealegre_Roy_Leonardo dbo:party ?royBarrerasParty .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?maria dbo:spouse ?spouse .

  ?spouse dbo:father ?father .

  OPTIONAL { ?father dbp:royalTitle ?title . }
  
  FILTER EXISTS { ?father dbp:royalTitle ?title } 
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?workLabel WHERE {
  ?biden a dbo:Person ;
         foaf:name ""Joe Biden""@en .
  ?biden dbo:author ?work .
  ?work rdfs:label ?workLabel .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmTitle WHERE {
    ?film a dbo:Film .
    ?film dbo:starring dbr:Iliza_Schlesinger .
    ?film rdfs:label ?filmTitle .
    FILTER (lang(?filmTitle) = 'en')
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfAwardee ?warOfLeader 
WHERE {
  # Find the Nobel Peace Prize winner around 1930
  ?person dbo:nobelPrize ""Peace"" ;
          dbo:awardDate ?date .
  FILTER (YEAR(?date) = 1930 || YEAR(?date) = 1929 || YEAR(?date) = 1931)
  
  OPTIONAL {
    # Find the war associated with this person
    ?person dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation dbo:relatedTo ?warOfAwardee .
  }
  
  # Identify the leader of the National Party of Greece and find the related war
  dbr:National_Party_of_Greece dbo:leader ?leader .
  OPTIONAL {
    ?leader dbo:wikiPageDisambiguates ?disambiguationLeader .
    ?disambiguationLeader dbo:relatedTo ?warOfLeader .
  }
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander ?parent ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?siege dbo:eventName ""Siege of Mukha"" .
  ?siege dbo:commander ?commander .
  ?commander a dbo:Monarch .

  # Find the parent of this commander, ensuring they are also royalty
  ?commander foaf:parent ?parent .
  ?parent a dbo:Monarch .

  # Verify that this royal parent is the father of Baeda Maryam I
  ?parent foaf:child ?baedaMaryamI .
  ?baedaMaryamI foaf:name ""Baeda Maryam I"" .

  # Retrieve any children of this royal parent
  ?parent foaf:child ?child .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?father
WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  ?archduke a dbo:Archduke ;
            foaf:name ""Charles Joseph, Archduke of Austria""@en .

  # Step 2: Find his parent(s)
  ?parent dbo:child ?archduke .

  # Step 3: Determine the child of this parent
  ?child dbo:parent ?parent .

  # Step 4: Identify the father of that child
  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandParent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?child dbo:parent ?person ;
         a dbo:Person .

  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow WHERE {
  # Find George Ducas as a commander in an event
  ?georgeDucas dbr:George_Ducas .
  ?georgeDucas dbo:commander ?war .

  # Find Jean Baptist, Comte d'Arco as a commander in the same event
  ?jeanBaptist dbr:Jean_Baptiste,_Comte_d%27Arco .
  ?jeanBaptist dbo:commander ?war .

  # Check if this war is depicted in any television show or societal event
  OPTIONAL {
    ?tvShow dbo:depicts ?war .
    FILTER EXISTS { ?tvShow a dbo:TelevisionProgram }
  }

  OPTIONAL {
    ?societalEvent dbo:depicts ?war .
    FILTER EXISTS { ?societalEvent a dbo:SocietalEvent }
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?playerLabel WHERE {
  VALUES ?team { dbr:1._FC_Magdeburg }
  ?team dbo:player ?player .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
    ?person a dbo:MilitaryPerson ;
            foaf:name ""Amasa Tracy"" ;
            dbo:participatedIn ?war .
    
    ?war rdfs:label ?warLabel ;
        dbo:description ?description .

    FILTER (lang(?warLabel) = 'en' && lang(?description) = 'en')
    FILTER CONTAINS(LCASE(?warLabel), ""war of 1812"")
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childOfParent WHERE {
  # Step 1: Find a child of Roger II
  ?rogerII dbo:child ?child .
  
  FILTER(STR(?rogerII) = ""Roger_II_of_Sicily"")

  # Step 2: Find the parent of that child (which should be Roger II)
  ?child dbo:parent ?parentOfChild .

  # Step 3: Ensure this parent is royalty
  ?parentOfChild foaf:name ?name .
  
  FILTER(STR(?parentOfChild) = ""Constance_of_Aragon"" || STR(?parentOfChild) = ""Adelasia_of_Sicily"")

  # Step 4: Check if this person is the father of William II
  ?parentOfChild dbo:child ?williamII .
  
  FILTER(STR(?williamII) = ""William_II_of_Sicily"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?movie dbo:title ""7th Heaven"" ;
         dbo:starring dbr:Janet_Gaynor ;
         dbo:productionCompany ?company .
  
  ?company dbo:presidentOrCEO ?producer .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query to get Eleonora Menicucci's alma mater
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}

# Query to get the founding date of Federal University of Paraíba
SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for George H. Cameron's award
SELECT ?award WHERE {
  dbr:George_H._Cameron dbo:award ?award .
}

UNION

# Query for the residence of a leader of the Ulster Unionist Party
SELECT ?residence WHERE {
  ?leader dbo:partyLeaderOf dbr:Ulster_Unionist_Party ;
          dbo:residence ?residence .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?film dbo:title ""Burnt by the Sun""@en .
  ?film dbo:soundtrack ?artist .

  ?artist rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Band, rdfs:Class)) .

  ?artist rdf:type ?type2 .
  FILTER (?type2 = dbo:Organization) .

  ?bandMember dbo:memberOf ?artist .
}
```",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor who played The Shadow (Lamont Cranston)
  ?shadowFilm dbo:starring ?actor .
  ?shadowFilm dbo:title ""The Shadow"" .
  
  # Ensure this actor also appeared in the film ATL
  ?atlFilm dbo:starring ?actor .
  ?atlFilm dbo:title ""ATL""@en .

  # Filter to ensure we get Michael Jai White, who fits both criteria
  FILTER(?actor = dbr:Michael_Jai_White)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alias ?associatedArtist WHERE {
  ?ciara a dbo:MusicalArtist ;
         foaf:name ""Ciara""@en ;
         foaf:alias ?alias .
  
  OPTIONAL {
    ?ciara dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  ?alfonso vi dbo:child ?child1 .
  FILTER (str(?alfonso) = ""Alfonso VI of León and Castile"") .

  ?child1 dbo:child ?grandchild .
  
  ?grandchild dbp:fatherOf ?william2 .
  FILTER (str(?william2) = ""William II of Sicily"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildChild
WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile dbo:child ?child .
  
  # Children of Alfonso VI (his children)
  ?child dbo:child ?grandchild .

  # Child of a grandchild (a child of the child of Alfonso VI)
  ?grandchild dbo:child ?grandchildChild
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfYeshaqI WHERE {
  # Yeshaq I and his child who is royalty
  ?yeshaq1 a dbo:Monarch ;
           foaf:name ""Yeshaq I""@en .
  
  ?childOfYeshaqI dbo:parent ?yeshaq1 ;
                  dbo:royalty ?isRoyalty .

  # Yeshaq I's grandchild who is royalty and an office holder
  ?grandChildOfYeshaqI dbo:parent ?childOfYeshaqI ;
                       dbo:royalty ?isGrandChildRoyalty ;
                       dbo:officeHolder ?isOfficeHolder .
  
  # This grandchild must be a parent of Na'od
  ?na'od a dbo:Monarch ;
         foaf:name ""Na'od""@en .

  ?grandChildOfYeshaqI dbo:parent ?na'od .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label
WHERE {
  ?entity dbo:country dbr:United_Kingdom .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbp:Picketts_Charge .
  ?event dbp:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  ?conflict a dbo:MilitaryConflict ;
           dbo:militaryConflictsIn ?algerianWar .
  
  FILTER(CONTAINS(LCASE(STR(?algerianWar)), ""algerian war""))

  OPTIONAL { ?conflict dbo:opposingMilitaryForce ?militaryForce1 . }
  OPTIONAL { ?conflict dbo:opposingMilitaryForce ?militaryForce2 . }

  FILTER((?militaryForce1 != ?militaryForce2) && (?militaryForce1 != dbr:None) && (?militaryForce2 != dbr:None))
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award ?awardee ?reference WHERE {
  # Identify the Royal Swedish Academy of Sciences
  dbr:Royal_Swedish_Academy_of_Sciences a dbo:AwardingBody ;
    dbo:awards dbr:Nobel_Prize_in_Physics .

  # Find shows or events related to Nobel Prize in Physics
  ?show dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences ;
        dbo:award dbr:Nobel_Prize_in_Physics .

  # Retrieve information about the awardees and their references
  ?award dbo:awardedBy dbr:Royal_Swedish_Academy_of_Sciences ;
         dbo:category dbr:Nobel_Prize_in_Physics .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:wikiPageWikiLink ?reference }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?spouse dbo:spouse ?mariclare .

  # Step 2: Find the child of Mariclare Costello's spouse
  ?child dbo:parent ?spouse ;
         dbo:parent ?mariclare .

  # Step 3: Determine the parent of this child (should be Mariclare and her spouse)
  ?parent dbo:parent ?child .
  
  # Step 4: Identify the actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?actor a dbo:Person ;
         dbp:filmRole <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> .

  # Step 5: Find the parent of Amy Arbus
  ?amyArbusParent dbo:parent <http://dbpedia.org/resource/Amy_Arbus> .
  
  # Step 6: Match the results
  FILTER (?parent = ?actor && ?parent = ?amyArbusParent)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?administeredTerritory
WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen (Christian IX)
  dbr:Christian_IX dbo:deathPlace ?deathPlace .

  # Ensure that the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the territory administered from this settlement
  OPTIONAL {
    ?administeredTerritory dbp:governedFrom ?deathPlace .
  }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Glenn_Youngkin 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

} ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfOmar ?royalChildParent ?royalGrandchild
WHERE {
  # Step 1: Find Princess Aisha bint Faisal's royal parent
  ?princessAisha a dbo:Person ;
                 rdfs:label ""Princess Aisha bint Faisal""@en .
  
  ?parentOfAisha dbo:spouse|dbo:partner ?princessAisha ;
                 a dbo:Monarch .

  # Step 2: Find the royal child of Princess Aisha's parent
  ?royalChild dbo:parent ?parentOfAisha ;
              a dbo:Monarch .

  # Step 3: Identify Prince Omar bin Faisal's parent
  ?princeOmar a dbo:Person ;
              rdfs:label ""Prince Omar bin Faisal""@en .
  
  ?parentOfOmar dbo:child|dbo:spouse ?princeOmar ;
                a dbo:Monarch .

  # Combine results to find the royal grandchild's parent
  ?royalGrandchild dbo:parent ?royalChild ;
                   a dbo:Monarch .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?nativeCountry
WHERE {
  VALUES ?person { 
    dbr:Theodor_Heuss 
    dbr:John_Stegeman_(footballer)
  }
  
  ?person dbo:nationality ?nationality .
  ?nationality dbo:countryName ?nativeCountry .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?actor dbo:birthName ""Ann Sothern""@en .
  ?actor dbo:memberOfParty dbr:Republican_Party_(United_States) .
  ?actor dbo:starringIn dbr:_1,000_Dollars_a_Minute .
  ?actor dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Stone Sour members
  VALUES (?stoneSour) { dbr:Stone_Sour }
  ?bandMemberStoneSour dbo:bandMember ?member .
  ?bandMemberStoneSour dbo:associatedBand ?stoneSour .

  # Mudvayne members
  VALUES (?mudvayne) { dbr:Mudvayne }
  ?bandMemberMudvayne dbo:bandMember ?member .
  ?bandMemberMudvayne dbo:associatedBand ?mudvayne .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Daniel Elahi Galán's country
  dbr:Daniel_Elái_Galán dbo:nationality dbr:Colombia .
  
  # Gustavo Petro's political party
  dbr:Gustavo_Petro dbo:memberOfParty dbr:Colombia_Humana .

  # Find entities related to both Colombia and the Colombia Humana party
  ?entity dbo:country dbr:Colombia .
  ?entity dbo:memberOfParty dbr:Colombia_Humana .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          dbp:birthName ?birthName ;
          dbo:alsoKnownAs dbr:The_Shadow .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band foaf:name ?bandName .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Duke ;
          foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gillmore ?forceInCharleston ?medalOfHonorWar WHERE {
  # Find Quincy Adams Gillmore's entity
  dbr:Quincy_A._Gillmore a dbo:MilitaryPerson ;
    rdfs:label ""Quincy Adams Gillmore""@en .

  OPTIONAL {
    # Look for his involvement in Charleston, South Carolina
    ?gillmore dbo:militaryConflict ?conflict .
    ?conflict dbo:location dbr:Charleston,_South_Carolina ;
              dbo:name ?forceInCharleston .
  }

  OPTIONAL {
    # Find the war associated with his Medal of Honor award
    ?medalOfHonorAward dbo:recipient ?gillmore ;
                      dbo:war ?medalOfHonorWar .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?tisha dbo:parent ?parent .

  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?collinsProducer ?gaynorProducer ?shadowProfessional
WHERE {
  # Cora Sue Collins' notable film and its producer
  OPTIONAL {
    ?collinsFilm dbo:actor dbr:Cora_Sue_Collins .
    ?collinsFilm dbo:producer ?collinsProducer .
  }

  # Janet Gaynor's notable film and its producer
  OPTIONAL {
    ?gaynorFilm dbo:actor dbr:Janet_Gaynor .
    ?gaynorFilm dbo:producer ?gaynorProducer .
  }
  
  # Professional associated with The Shadow character
  OPTIONAL {
    ?shadowCharacter rdfs:label ""The Shadow""@en .
    ?shadowProfessional dbo:alterEgo ?shadowCharacter ;
                       a dbo:Person .
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreForce ?lewisBirthplace ?medalOfHonorWar
WHERE {
  # Quincy Adams Gillmore's military force or rank
  dbr:Quincy_Adams_Gillmore dbo:militaryRank ?gillmoreForce .

  # Henry Clay Lewis' birthplace, ensuring it is an American settlement
  dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirthplace .
  ?lewisBirthplace a dbo:Settlement ;
                  dbo:country dbr:United_States_of_America .

  # Medal of Honor awardee and the war they were involved in
  ?medalOfHonorAwardee dbo:award dbr:Medal_of_Honor ;
                      dbo:participatedInWar ?medalOfHonorWar .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
# Query 1: Find actors in ""Dispatches from Elsewhere""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
    ?show dbo:title ""Dispatches from Elsewhere""@en .
    ?show dbo:starring ?actor .
}

# Query 2: Find actors who share the profession with Shatrughan Sinha
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
    # Get professions of Shatrughan Sinha
    dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .
    
    FILTER(?sinhaProfession = dbo:Actor)  # Focus on the acting profession

    # Find actors from ""Dispatches from Elsewhere"" who are also actors
    ?show dbo:title ""Dispatches from Elsewhere""@en .
    ?show dbo:starring ?commonActor .
    ?commonActor dbo:profession dbo:Actor .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Roy Leonardo Barreras Montealegre"" .
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?spouseName WHERE {
  ?person foaf:givenName ""Harriette"" .
  ?person foaf:familyName ""Lake"" .
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Roger Pryor""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?royalSpouse WHERE {
  # Find Myat Hpone Pyo's predecessor
  OPTIONAL { 
    ?myatHponePyo dbo:wikiPageRedirects dbr:Myat_Hpone_Pyo .
    ?myatHponePyo dbo:predecessor ?predecessor .
  }

  # Find the father of Myat Hpone Pyo and his royal spouse
  OPTIONAL {
    ?myatHponePyo dbo:father ?father .
    ?father dbo:spouse ?royalSpouse .
    FILTER EXISTS { ?royalSpouse a dbo:Monarch } # Assuming royalty is represented by Monarch class
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Yurii Khmelnytsky's successor
SELECT ?successor WHERE {
  dbr:Yuri_Khmelnytskyy dbo:succeededBy ?successor .
}

UNION

# Query for the writer of ""Always the Love Songs""
SELECT ?author WHERE {
  dbr:""Always_the_Love_Songs"" dbo:author ?author .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX geo: <http://www.geonames.org/ontology#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Henry Clay Lewis""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type ?type .
  FILTER (?type IN (dbo:Settlement, dbo:City, dbo:Town)) .
  OPTIONAL { ?birthPlace geo:country <http://dbpedia.org/resource/United_States> }
}
```",2,4,3,2,1,3,3,71,0,1,12,0.0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Vince Gilligan's awardee's birthplace
SELECT ?awardeeBirthPlace WHERE {
  ?award dbo:recipient ?person .
  ?person foaf:name ""Vince Gilligan""@en .
  ?person dbo:birthPlace ?awardeeBirthPlace .
}

UNION

# Query for Cece Bell's birth place
SELECT ?ceceBellBirthPlace WHERE {
  dbr:Cecilie_Ann_Bell dbo:birthPlace ?ceceBellBirthPlace .
}

UNION

# Query for the current governor of Virginia's birthplace
SELECT ?governorBirthPlace WHERE {
  ?person dbo:officeHolderOf dbr:Governor_of_Virginia ;
          foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""glenn youngkin"") || CONTAINS(LCASE(?name), ""ralph norris northam"")) # Adjust based on current governor
  ?person dbo:birthPlace ?governorBirthPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?societalEvent ?event ?tvShow WHERE {
  VALUES ?commander { dbr:Charles_de_Gaulle }
  
  # Societal event related to Charles de Gaulle
  OPTIONAL {
    ?commander dbo:associatedWith ?societalEvent .
    FILTER CONTAINS(LCASE(STR(?societalEvent)), ""fifth republic"")
  }

  # Event related to the Algerian War
  OPTIONAL {
    ?commander dbo:associatedWith ?event .
    FILTER CONTAINS(LCASE(STR(?event)), ""evian accords"")
  }
  
  # Television show or media mention
  OPTIONAL {
    ?tvShow dbo:subject ?commander .
    FILTER CONTAINS(LCASE(STR(?tvShow)), ""television"")
  }
}
```",3,6,4,3,1,3,3,71,0,1,124,0.0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?greatGrandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Step 2: Find his child who is a politician
  ?child dbo:parent ?edwardStanley .
  ?child dbo:occupation dbr:Politician .

  # Step 3: Identify an alumnus of Eton College and their child who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?politicianChild dbo:parent ?alumnus .
  ?politicianChild dbo:occupation dbr:Politician .

  # Step 4: Find the parent of the child from step 2 who is a politician and an office holder
  ?grandparent dbo:child ?child .
  ?grandparent dbo:occupation dbr:Politician .
  ?officeHolder dbo:officeHolder ?grandparent .

  # Step 5: Identify the great-grandparent (parent of the grandparent)
  ?greatGrandparent dbo:child ?grandparent .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fellowship ?description WHERE {
  ?fellowship a dbo:Award ;
              rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""sangeet natak akademi fellowship""))
  OPTIONAL { ?fellowship dbo:description ?description }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace ?dateOfBirth WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person dbo:dateOfBirth ?dateOfBirth . }
  
  FILTER (
    EXISTS { 
      ?birthPlace dbo:country dbr:Russia .
    } &&
    (BOUND(?dateOfBirth) && (?dateOfBirth >= ""1721-01-01""^^xsd:date && ?dateOfBirth <= ""1917-12-31""^^xsd:date))
  )
}
ORDER BY ?person
```",1,1,2,1,1,2,3,28,0,0,5475,0,0.0,0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Birmingham .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,3,2,20,1463,1886,68,0.43684681994625263,0.9555845852384063,0.5995901639344263
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelOffice ?albertoResidenceTenant ?commanderOffice
WHERE {
  # Find Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Find the tenant of Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoResidence .
  ?person dbo:residence ?albertoResidence ;
          rdf:type dbo:Person .
  BIND(?person AS ?albertoResidenceTenant)

  # Find the office of a commander who is also an office holder and politician
  ?commander rdf:type dbo:Commander ;
             dbo:office ?commanderOffice ;
             dbo:politicalAffiliation ?politicianRole .
  FILTER EXISTS { ?politicianRole rdf:type dbo:PoliticalAffiliation }
  
  # Ensure connection to the Central African Republic Civil War
  OPTIONAL {
    ?miguelOffice dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .
    ?commanderOffice dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?show ?title WHERE {
  ?person foaf:name ""Anumta Qureshi""@en .
  ?person a dbo:Agent .
  
  ?work dbo:agent ?person ;
        a dbo:TelevisionShow .

  ?work rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Bill Clinton as spouse of Hillary Clinton and his role in the AIDS crisis
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton .
  
  # Bill Clinton's presidency period
  dbr:Bill_Clinton dbo:presidencyStartYear ?startYear ;
                   dbo:presidencyEndYear ?endYear .

  # Identifying his role in the AIDS crisis
  OPTIONAL {
    ?commander dbo:spouse dbr:Hillary_Clinton .
    ?commander dbo:officeHolderOf dbr:President_of_the_United_States .
    FILTER (?startYear <= 1995 && ?endYear >= 1995) # Year when significant actions against AIDS were taken
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?award WHERE {
  ?band dbo:location dbr:New_York_(state) .
  ?band dbo:awardReceived ?award .
  FILTER EXISTS { 
    ?award dbo:name ""New York""@en .
    ?award dbo:type dbr:Region ;
           dbo:country dbr:United_States_of_America ;
           dbo:settlement dbr:New_York_City
  }
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1Label ?war2Label WHERE {
  # Part 1: Nobel laureate of 1930 involved in a war
  ?person dbo:nobelPrizeYear ""1930"" .
  ?person dbo:nationality ?nationality .
  ?person dbo:occupation ?occupation .
  OPTIONAL { ?person dbo:wikiPageDisambiguates ?disambiguation . }
  
  # Assuming the person is involved in a war
  ?war1 dbo:participant ?person ;
        rdfs:label ?war1Label .

  FILTER (lang(?war1Label) = ""en"")

  # Part 2: War involving Napoleon Zervas
  dbr:Napoleon_Zervas dbo:occupation dbr:Resistance_leader .
  ?war2 dbo:participant dbr:Napoleon_Zervas ;
        rdfs:label ?war2Label .

  FILTER (lang(?war2Label) = ""en"")
}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist ?awardName ?band
WHERE {
  # Step 1: Find musical artists born in Florida
  ?artist a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida ;
          foaf:name ?name .

  # Step 2: Check if there is an award named after the artist that matches a region/settlement
  OPTIONAL {
    ?award dbo:name ?awardName .
    FILTER regex(?awardName, ""^"" + str(?name) + ""$"", ""i"")
    ?region dbo:officialName ?awardName ;
            a (dbo:Region ; dbo:PopulatedPlace) .

    # Step 3: Find bands from New York that received this award
    ?band dbo:birthPlace dbr:New_York_(state) ;
          dbo:awardReceived ?award .
  }
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  ?plotkin dbo:associatedMusicalArtist ?firstLevelArtist .
  
  FILTER (str(?plotkin) = ""James_Plotkin"")

  # Step 2: Find the associated musical artist of that first-level artist
  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .

  # Step 3: Check if this second-level artist is a member of Human Remains
  ?secondLevelArtist dbp:bandMember <http://dbpedia.org/resource/Human_Remains_(band)> .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?toyotomiWar ?hashibaWar WHERE {
  # Yamaza Enjirō's birth place
  OPTIONAL { 
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  }

  # Wars involving Toyotomi Hidenaga
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:participatedIn ?toyotomiWar .
  }
  
  # Wars involving Hashiba Hidekatsu
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?hashibaWar .
  }
}
```",4,4,5,2,3,2,3,28,0,2,2,0.0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ?battleLabel .
  
  FILTER(CONTAINS(LCASE(?battleLabel), ""battle of fort royal"")).

  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }

  OPTIONAL {
    ?entity dbo:participatedIn ?battle .
    ?entity rdfs:label ?entityLabel .
    
    FILTER(CONTAINS(LCASE(?entityLabel), ""the triple x's"")).
  }
}
```",4,6,5,3,2,3,3,71,0,2,1,0.0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  # Step 1: Find Marcelo Sarmiento's birthdate
  VALUES (?marceloSarmientoBirthDate) { 
    SELECT ?birthdate WHERE { 
      dbr:Marcelo_Sarmiento dbo:birthday ?birthdate .
    }
  }

  # Step 2: Find soccer players and managers born on that date
  ?person dbo:birthday ?birthdate ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  FILTER (?birthdate = ?marceloSarmientoBirthDate)

  # Step 3: Find Sergio Agüero's team(s)
  VALUES (?agueroTeam) { 
    SELECT ?team WHERE {
      dbr:Sergio_Agüero dbo:playsFor ?team .
    }
  }

  # Step 4: Identify athlete born on 1955-02-22
  VALUES (?athleteBirthDate) { ""1955-02-22""^^xsd:date }
  ?athlete dbo:birthday ?athleteBirthDate ;
           a dbo:Athlete .

  # Step 5: Find the team of the soccer player and manager who played for Agüero's team and is linked to the athlete
  ?person dbo:playsFor ?team .
  
  FILTER EXISTS { 
    ?player dbr:Sergio_Agüero dbo:playsWith ?person .
  }
  
  FILTER EXISTS {
    ?athleteRelatedToPerson a dbo:Athlete ;
                            dbo:birthday ?athleteBirthDate .
    ?athleteRelatedToPerson dbo:relatedTo ?person .
  }

  # Return the team
  VALUES (?team) { ?team }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarchName ?reignStart ?reignEnd
WHERE {
  VALUES ?monarch {
    dbr:Christian_IX_of_Denmark
    dbr:Olaf_I_of_Denmark
  }
  
  ?monarch dbo:name ?monarchName .
  ?monarch dbo:reign ?reignPeriod .
  ?reignPeriod dbo:startYear ?reignStart ;
               dbo:endYear ?reignEnd .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Pickett's_Charge dbo:participatedIn ?battle .
  ?battle dbo:conflict ?war .
  FILTER (strstarts(str(?war), ""American Civil War""))
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?parent1 ?person2 ?parent2 WHERE {
  # Find the person who is both a photographer and an actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?person1 dbo:profession dbr:Photographer ;
           dbo:occupation dbr:Actor ;
           dbo:workFeaturedIn dbr:Judgment_The_Trial_of_Julius_and_Ethel_Rosenberg .
  
  # Find the parent of this person
  ?person1 dbo:parent ?parent1 .

  # Find Doon Arbus
  ?person2 rdfs:label ""Doon Arbus""@en ;
           a dbo:Person .

  # Find the parent of Doon Arbus
  ?person2 dbo:parent ?parent2 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find movies where Herschel Bernardi acted
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Check if any of these movies have a connection to Amy Arbus through her parent
  ?parent dbo:child dbr:Amy_Arbus .
  ?movie dbo:director ?parent ;
         dbo:producer ?parent .

  # Retrieve other actors from the identified movie
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Herschel_Bernardi) # Exclude Herschel Bernardi himself
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?child WHERE {
  # Isabella of Austria's father
  dbr:Isabella_of_Austria dbo:father dbr:Maximilian_I,_Holy_Roman_Emperor .
  
  # Commanders in the Siege of Padua
  VALUES ?commander { 
    dbr:Bartolomeo_d'Alviano 
    dbr:Julius_II 
  }
  
  # Check if these commanders have children who are royalty
  ?commander dbo:child ?child .
  ?child a dbo:Monarch .

  # Check for any familial link between Isabella's father and the child of the commander
  OPTIONAL { ?father dbr:Maximilian_I,_Holy_Roman_Emperor . }
  OPTIONAL { ?child dbo:parent ?commander . }

  FILTER (?father = dbr:Maximilian_I,_Holy_Roman_Emperor)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?settlement WHERE {
  # Find Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
             dbp:country ""United States""^^xsd:string .

  # Get Medal of Honor awardees and their associated wars
  ?medalOfHonorAwardee dbo:award ?medalOfHonor .
  ?medalOfHonor dbo:associatedEvent ?war .
  
  # Link the war to the settlement (birthplace)
  ?war dbo:location ?settlement .
  FILTER(?settlement = ?birthPlace)
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Find the child of Princess Muna al-Hussein who is royalty
  ?child dbo:childOf dbp:Muna_al-Hussein ;
         a dbo:Person ;
         dbo:royalty true .

  # Ensure this child is also the parent of Princess Sara bint Faisal
  ?child dbo:parentOf dbp:Sara_bint_Faisal .

  # Find the parent of this identified child
  ?child dbo:parent ?parent .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?profession ?associatedMusicalArtist
WHERE {
  VALUES (?birthName) { ""Tupac Shakur"" ""Darryl Paa Kwesi Bannerman-Martin"" }
  
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:profession ?profession . FILTER(CONTAINS(LCASE(?profession), ""musician"")) }
  OPTIONAL {
    ?person dbp:musicalArtist ?associatedMusicalArtist .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:starring dbr:Audrey_Hepburn .
}
```",1,3,2,1,1,2,3,28,15,6,0,0.7142857142857143,1.0,0.8333333333333333
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query to find a party member of the ruling party in Central, Louisiana
SELECT DISTINCT ?partyMember WHERE {
  ?location dbo:country dbr:United_States ;
            dbp:state ""Louisiana"" ;
            dbp:city ""Central"" .
  ?office dbo:heldBy ?person ;
          dbo:politicalParty ?party .
  ?party dbo:name ?partyName .
  FILTER(?partyName IN (""Democratic Party"", ""Republican Party"")) # Assuming these are the main parties
  ?person foaf:name ?partyMember .
}

UNION

# Query to find the person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor)
SELECT DISTINCT ?person WHERE {
  ?tisha dbo:parent ?parent ;
         foaf:name ""Tisha Sterling"" .
  ?parent foaf:name ?birthName .
  ?spouse foaf:name ?person ;
          dbo:spouse dbr:Roger_Pryor_(actor) .
  FILTER(?birthName = ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2 WHERE {
  # Find the producer of a work associated with Cora Sue Collins
  ?work dbo:performer dbr:Cora_Sue_Collins .
  ?work dbo:productionCompany ?company .
  ?company dbo:president ?producer1 .

  UNION

  # Find the actor from ""High Society Blues"" and their movie's producer
  ?movie dbo:starring dbr:High_Society_Blues ;
         dbo:productionCompany ?company2 .
  ?company2 dbo:president ?producer2 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find a film associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find an actor of that film
  ?film dbo:starring ?actor .

  # Get Ann Sothern's birth name
  dbr:Ann_Sothern dbp:birthName ?birthName .

  # Ensure the actor is not Ann Sothern herself
  FILTER(?actor != dbr:Ann_Sothern)

  # Find the spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,1,68,0,0.014492753623188406,1.0,0.02857142857142857
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:book dbr:An_Invitation_to_the_White_House ;
          dbo:book dbr:Back_to_Work_(book) .
  ?author a dbo:Politician ;
          dbo:officeHolder true .
  ?author dbo:spouse ?spouse .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of the alter ego in ""The Golden Master"" series
  ?series dbo:title ""The Golden Master""@en .
  ?character dbo:alterEgoOf ?series .
  ?character dbo:portrayedBy ?actor .

  # Identify the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en ;
        dbo:author ?author .

  # Find a movie that features both the actor and the author
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurFather .

  # Frederick Stanley, 16th Earl of Derby
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  
  # Check if the father of Arthur is also a parent of any of Frederick's children
  ?frederickChild dbo:parent ?commonParent .

  FILTER (?arthurFather = ?commonParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Saw Min Phyu's resource
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .

  # Step 2: Find the spouse of Saw Min Phyu
  ?sawMinPhyu dbo:spouse ?spouse .

  # Step 3: Identify children of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Filter for royalty among these children
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?antoinette a dbo:Person ;
              rdfs:label ""Antoinette of Brunswick-Wolfenbüttel""@en .
  
  ?child dbo:parent ?antoinette ;
         a dbo:RoyalFamilyMember .

  ?royalChild ?titleProperty ?titleValue .
  FILTER(CONTAINS(LCASE(?titleValue), ""prince"") || CONTAINS(LCASE(?titleValue), ""princess"") || CONTAINS(LCASE(?titleValue), ""duke"") || CONTAINS(LCASE(?titleValue), ""duchess"")) .

  ?royalChild dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder query as the question lacks specific context.
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?professional WHERE {
  ?professional a dbo:Professional .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?philip rdf:type dbo:Monarch ;
          foaf:name ""Philip I of Castile""@en .
  
  ?philip dbo:child ?child .

  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis death place
  ?varthalitis dbo:deathPlace ?place1 .
  
  # Konstantinos Ventiris death place
  ?ventiris dbo:deathPlace ?place2 .

  # Ensure both places are settlements
  ?place1 rdf:type dbp:Settlement .
  ?place2 rdf:type dbp:Settlement .

  # Check if there is a common settlement
  FILTER (?place1 = ?place2)
  
  # Bind the common place to settlement variable
  BIND(?place1 AS ?settlement)

  # Filter for specific individuals by their DBpedia resource URIs
  VALUES ?varthalitis { <http://dbpedia.org/resource/Antonios_Varthalitis> }
  VALUES ?ventiris { <http://dbpedia.org/resource/Konstantinos_Ventiris> }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
    # Step 1: Find actors in ""All or Nothing: Manchester City""
    ?series dbo:starring ?actor .
    FILTER(STRSTARTS(STR(?series), STR(dbr:All_or_Nothing:_Manchester_City)))

    # Step 2: Filter for those who are also soccer players
    ?actor dbo:occupation dbr:Soccer_player .

    # Step 3: Find teams that include Pablo Aimar
    ?team dbo:player ?pabloAimar .
    FILTER(STRSTARTS(STR(?pabloAimar), STR(dbr:Pablo_Aimar)))

    # Check if the actor played for any of these teams
    ?actor dbo:memberTeam ?team .

    # Step 4: Filter by birthdate to match February 22, 1955
    OPTIONAL { ?actor dbp:birthday ""1955-02-22""^^xsd:date . }
    FILTER(EXISTS { ?actor dbp:birthday ""1955-02-22""^^xsd:date })
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict ?officeHolder ?politician
WHERE {
  # Miguel Maura's involvement
  dbr:Miguel_Maura dbo:officeHolder ?office .
  ?office dbo:positionTitle ""Tenant of Madrid""@en .

  # Manuel Pinto da Costa's involvement in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:involvedIn ?militaryConflict .
  
  # The military conflict is both a societal event and involves an office holder/politician
  ?militaryConflict rdf:type dbo:MilitaryConflict ;
                   dbo:societalEvent true .

  OPTIONAL {
    ?officeHolder dbo:positionTitle ?title ;
                  dbo:politician true ;
                  dbo:involvedIn ?militaryConflict .
  }
  
  FILTER(?officeHolder != dbr:Miguel_Maura) # Ensure it's not just Miguel Maura
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberLabel WHERE {
  # Find Stuart Tosh's associated band (Pilot)
  ?stuartTosh dbo:bandMember ?pilotBand .
  ?pilotBand rdfs:label ""Pilot""@en .

  # Find David Paton's associated band (Supertramp)
  ?davidPaton dbo:bandMember ?supertrampBand .
  ?supertrampBand rdfs:label ""Supertramp""@en .

  # Retrieve a band member of Supertramp
  ?supertrampBand dbo:bandMember ?bandMember .
  ?bandMember rdfs:label ?bandMemberLabel .
  
  FILTER(LANG(?bandMemberLabel) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roy Barreras"" ;
          dbo:birthPlace dbr:Colombia .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent ?commonParentLabel WHERE {
  # Find parents of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  ?patrick a dbo:Person ;
           rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parent1 .

  # Find parents of Hon. Mary Frances Bowes-Lyon
  ?mary a dbo:Person ;
        rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent2 .

  # Check for common parent
  FILTER (?parent1 = ?commonParent && ?parent2 = ?commonParent)
  
  # Get the label of the common parent
  ?commonParent rdfs:label ?commonParentLabel .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify Nicholas Michael Curran as a musician and his association
  ?curran a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran"" .
  
  OPTIONAL { 
    ?curran dbo:band dbr:The_Fabulous_Thunderbirds .
  }
  
  # Find members of The Fabulous Thunderbirds
  ?thunderbirdMember dbo:memberOf dbr:The_Fabulous_Thunderbirds ;
                    a dbo:MusicalArtist .

  # Identify Eric Clapton's band members who were also in The Fabulous Thunderbirds
  ?claptonBandMember dbo:bandMemberOf ?claptonBand ;
                     dbo:memberOf dbr:The_Fabulous_Thunderbirds .
  
  # Find the associated musical artist of Nicholas Michael Curran through this connection
  ?artist dbo:associatedBandMember ?thunderbirdMember ;
          a dbo:MusicalArtist .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (LANG(?fatherName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person
WHERE {
  ?person dbo:birthday ?birthDate .
  FILTER (YEAR(?birthDate) = 1981 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 1)
  
  ?person rdf:type ?type .
  VALUES ?type { 
    <http://dbpedia.org/ontology/Athlete> 
    <http://dbpedia.org/ontology/SoccerPlayer>
    <http://dbpedia.org/ontology/SportsManager>
    <http://dbpedia.org/ontology/SoccerManager>
  }
  
  ?person dbo:managerOfTeam ?team .
  FILTER (str(?team) = ""Hong Kong C Team"")
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
    # Spanish Socialist Workers' Party entity
    dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
        dbo:leader ?leader .

    # Filter for the time frame around 2009, assuming leadership is linked with office terms
    OPTIONAL { 
        ?leader dbo:office ?office .
        FILTER (YEAR(?officeStartDate) <= 2009 && YEAR(?officeEndDate) >= 2009)
    }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""The First Glove""@en .
  OPTIONAL { ?book dbo:author ?writer . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce1 ?battleForce2 WHERE {
  # Query for the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:combatant ?battleForce1 .
  ].
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:combatant ?battleForce2 .
  ].

  FILTER(?battleForce1 != ?battleForce2)
  
  # Query for William Bayne's military involvement
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:servedIn [
      a dbo:MilitaryConflict ;
      rdfs:label ?bayneEvent .
    ].
  }
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  # Identify Shatrughan Sinha's profession
  VALUES (?sinha) { <http://dbpedia.org/resource/Shatrughan_Sinha> }
  
  # Get the occupation of Shatrughan Sinha
  ?sinha dbo:occupation ?occupation .
  
  # Find other individuals with the same occupation
  ?person dbo:occupation ?occupation .
  
  FILTER(?person != ?sinha) # Exclude Shatrughan Sinha himself
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for birthplace of Ustad Bismillah Khan (Sangeet Natak Akademi Fellowship awardee)
SELECT ?birthPlace WHERE {
  dbr:Ustad_Bismillah_Khan dbo:birthPlace ?birthPlace .
}

UNION

# Query for birthplace of Smita Patil
SELECT ?birthPlace WHERE {
  dbr:Smita_Patil dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team WHERE {
  # Find Marcelo Sarmiento's birthdate
  VALUES (?marceloSarmientoBirthDate) { 
    SELECT ?birthdate WHERE { 
      dbr:Marcelo_Sarmiento dbo:birthDate ?birthdate .
    }
  }

  # Find soccer players and managers born on the same day as Marcelo Sarmiento
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthDate ?personBirthDate .

  FILTER (?personBirthDate = ?marceloSarmientoBirthDate)

  # Retrieve teams associated with these individuals
  OPTIONAL { 
    ?person dbo:team ?team .
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Artist .
  ?person dbo:musicalArtist true .
  ?person dbo:birthPlace dbr:London .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
# Query for associated musical artist of Nick Curran
SELECT ?artist WHERE {
  dbpedia:Nick_Curran dbo:associatedMusicalArtist ?artist .
}

UNION

# Query for band of a band member of Eric Clapton
SELECT DISTINCT ?band WHERE {
  ?member dbo:bandMemberOf dbpedia:Eric_Clapperton ;
          dbo:memberOf ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?entity WHERE {
  # Find Gustavo Petro's political party
  OPTIONAL {
    dbr:Gustavo_Petro dbo:politicalParty ?party .
  }
  
  # Find an entity related to Daniel Elahi Galán in Colombia
  OPTIONAL {
    dbr:Dani_Elahi_Galán dbo:birthPlace ?entity ;
                        dbp:country dbr:Colombia .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Find movies featuring Iliza Shlesinger
  ?movie a dbo:Film ;
         dbo:starring ?ilizaShlesinger .
  
  FILTER(?ilizaShlesinger = dbr:Iliza_Shlesinger) .

  # Check if the movie also features Janusz Kamiński's spouse
  ?movie dbo:starring ?spouseActor .
  
  FILTER(?spouseActor = ?spouse) .

  # Return the actor who is both Iliza Shlesinger and Janusz Kamiński's spouse
  ?actor a dbo:Film ;
         dbo:starring ?ilizaShlesinger, ?spouseActor .
}
```",4,6,5,2,2,2,3,28,0,1,1,0.0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneWar ?calderEvent WHERE {
  # Find the war associated with William Bayne
  OPTIONAL {
    ?bayne dbo:occupation dbr:Royal_Navy_officer .
    ?bayne dbo:participatedIn ?bayneWar .
    FILTER (isLiteral(?bayneWar) && contains(lcase(str(?bayneWar)), ""war""))
  }

  # Find the societal event associated with Robert Calder's military force
  OPTIONAL {
    dbr:Robert_Calder dbo:occupation dbr:Royal_Navy_officer .
    ?calderEvent dbo:associatedWith dbr:Robert_Calder .
    FILTER (isLiteral(?calderEvent) && contains(lcase(str(?calderEvent)), ""event""))
  }
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  VALUES ?person { 
    dbr:Konstantinos_Ventiris 
    dbr:Napoleon_Zervas 
  }
  
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?eventName ;
         dbo:description ?description .

  FILTER (CONTAINS(LCASE(?eventName), ""greek civil war""))
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?politicianChild .
  
  # Politician child of Frederick Stanley
  ?politicianChild a dbo:Politician .

  # Father of the politician child (should be Frederick Stanley)
  ?politicianChild dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # Awardee of Commander of the Royal Victorian Order
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Parent of the awardee
  ?awardee dbo:parent ?parent .

  # Ensure the parent is the same for both conditions
  FILTER (?politicianChild = ?awardee)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1 & 2: Find TV shows that Richard E. Grant acted in and are also movies.
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  ?tvShow a dbo:TelevisionSeries ;
          dbo:genre ?genre .
  
  FILTER EXISTS { 
    ?movie dbo:starring dbr:Richard_E._Grant .
    ?movie a dbo:Film ;
           rdfs:label ?title .
    FILTER (CONTAINS(LCASE(?title), ""television show"") || CONTAINS(LCASE(?title), ""tv series""))
  }
  
  # Step 3: Find actors who are politicians and acted in ""Ab Kya Hoga""
  ?actor dbo:starring dbr:Ab_Kya_Hoga .
  ?actor a dbo:Actor ;
         dbo:profession dbr:Politician .

  # Step 4: Ensure the actor is from both lists
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Prince Christian of Schleswig-Holstein-Sonderburg-Beck's administration roles
SELECT ?position WHERE {
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?position .
}

# Query for the mayor or administrative role in the Duchy of Schleswig
SELECT DISTINCT ?role WHERE {
  ?entity rdfs:label ""Duchy of Schleswig""@en.
  ?entity dbo:administrativeRole ?role .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria
  ?charlesJoseph a dbo:Person ;
                 foaf:name ""Archduke Charles Joseph of Austria""@en .
  
  # Parent of Archduke Charles Joseph
  ?parent dbo:child ?charlesJoseph .

  # Ferdinand II, Holy Roman Emperor
  ?ferdinandII a dbo:Person ;
               foaf:name ""Ferdinand II, Holy Roman Emperor""@en .

  # Ensure the parent is also a child of Ferdinand II
  ?parent dbo:child ?ferdinandII .

  # Find the father of this parent
  ?father dbo:spouse ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?isabella dbp:name ""Isabella of Austria""@en .
  ?isabella dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Eleonora Menicucci de Oliveira's alma mater
SELECT ?university WHERE {
  dbr:Eleonora_Menicucci_de_Oliveira dbo:almaMater ?university .
}

# Query for the founding date of Federal University of Paraíba (UFPA)
SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?birthPlace { dbr:Jamshedpur dbr:India }
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,2,9,0,0,21,0,0.0,0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Find Emilia's band members
  ?emilia dbo:member ?band .
  ?band foaf:member ?bandMember .

  # Ensure the band member is a musician, similar to Jamie T's profession
  ?bandMember dbo:occupation ?occupation .
  
  FILTER (
    str(?occupation) = ""musician"" ||
    str(?occupation) = ""singer-songwriter""
  )
  
  # Identify Emilia in DBpedia
  VALUES ?emilia {
    <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)>
  }
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?charlestonEntity WHERE {
  # Find Quincy Adams Gillmore and his military command
  dbr:Quincy_A._Gillmore dbo:militaryCommand ?force .
  
  # Find entities related to Charleston, South Carolina during the Civil War
  ?charlestonEntity a dbo:MilitaryConflict ;
                   dbo:location dbr:Charleston,_South_Carolina ;
                   dbo:participatedIn ?gillmoreAction .

  OPTIONAL {
    ?gillmoreAction dbo:commander dbr:Quincy_A._Gillmore .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # First level association with James Plotkin
  ?artist dbo:associatedBand ?band .
  FILTER (str(?band) = ""James Plotkin"" || str(?band) = ""James Plotkin^en"")

  # Second level associations of the first-level artists
  ?secondLevelArtist dbo:associatedBand ?firstLevelBand .
  FILTER (?firstLevelBand = ?artist)
}
```",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerTeam ?team .
  
  OPTIONAL { 
    ?person dbo:sport dbr:Soccer . 
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find individuals associated with ""All or Nothing: Manchester City""
  ?show dbo:title ""All or Nothing: Manchester City""@en .
  
  # Ensure the individual is an actor
  ?actor dbo:profession dbr:Actor .

  # Ensure the individual is a soccer player for Manchester City
  ?player dbo:sportTeam dbr:Manchester_City_F.C. ;
          rdf:type dbo:SoccerPlayer .

  # Link the show to the player/actor
  ?show dbo:castMember ?actor .
  
  # Ensure the actor is also recognized as an athlete
  ?athlete dbo:profession dbr:Athlete .
  FILTER (?actor = ?player && ?actor = ?athlete)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award (dbr:Rodney_Lees AS ?awardee)
WHERE {
  dbr:Rodney_Lees dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,1,1,13,0.5,0.07142857142857142,0.125
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?workLabel WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:author ?person ;
        rdfs:label ?workLabel .
  
  FILTER(LANG(?workLabel) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,6,6,0.0,0.0,0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName ?fatherReference WHERE {
  # Identify Peter IV of Aragon
  dbr:Peter_IV_of_Aragon a dbo:Monarch ;
                        foaf:name ""Peter IV of Aragon""@en .

  # Find his children who are royalty
  dbr:Peter_IV_of_Aragon dbo:child ?child .
  ?child dbo:royalTitle ?title .

  # Get the child's name and reference to Peter IV
  ?child foaf:name ?childName .
  BIND(dbr:Peter_IV_of_Aragon AS ?fatherReference)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  ?linda dbo:spouse ?spouse .
  
  ?movie dbo:title ""12 Strong""@en ;
         dbo:filmProduction ?production .
  
  ?production dbo:agent ?producer .

  FILTER (?spouse = ?producer)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  
  # Filter children who are royalty
  ?child a ?type .
  FILTER (
    ?type = dbo:Monarch ||
    ?type = dbo:King ||
    ?type = dbo:Queen ||
    ?type = dbo:CrownPrince ||
    ?type = dbo:CrownPrincess
  )
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  OPTIONAL { ?person dbo:name ?name . FILTER(lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  BIND (COALESCE(?name, STR(AFTER(STR(?person), ""http://dbpedia.org/resource/""))) AS ?name)
}
ORDER BY ?person
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find alter ego from The Golden Master series
  ?alterEgo dbo:characterName ?name .
  ?alterEgo dbo:work ?goldenMasterWork .
  ?goldenMasterWork rdfs:label ""The Golden Master""@en .

  # Find actor who played this role
  ?actor dbo:role ?alterEgo .

  # Find actors in the film ATL
  ?atlFilm dbo:starring ?atlActor .
  ?atlFilm rdfs:label ""ATL (film)""@en .
  
  # Check if the same person is involved in both roles
  FILTER (?actor = ?atlActor)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
# Query to find the theme of Dikhawa
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  dbr:Dikhawa dbo:theme ?theme .
}

# Query to find natives of Lahore
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nativePlace dbr:Lahore .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the time zone region of Kiyosu
  dbr:Kiyosu dbo:timeZone ?tz .
  
  # Get the region associated with this time zone
  ?tz dbo:region ?region .

  # Find Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .

  # Ensure that the birthplace is in the same region as the time zone of Kiyosu
  ?birthPlace dbo:location ?location .
  ?location dbo:country ?region .
  
  # Bind the entity to be returned
  BIND(?birthPlace AS ?entity)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ship ?commander WHERE {
  ?calder a dbo:MilitaryPerson ;
         foaf:name ""Robert Calder""@en .
  
  OPTIONAL { 
    ?calder dbo:militaryCommand ?ship .
    ?ship dbo:commander ?commander .
  }
  
  FILTER EXISTS {
    ?campaign dbo:participatedIn dbr:French_campaign_in_Egypt_and_Syria ;
              dbo:hasParticipant ?calder .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Query to find the war associated with Konstantinos Ventiris
SELECT ?war WHERE {
  ?person rdfs:label ""Konstantinos Ventiris""@en .
  ?person dbo:nationality dbr:Greece .
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:Military_conflict ;
         rdfs:label ?war .
}

UNION

# Query to find the war associated with the leader of the National Party of Greece
SELECT ?war WHERE {
  ?party rdfs:label ""National Party (Greece)""@en .
  ?leader dbo:leaderOf ?party .
  ?leader dbo:nationality dbr:Greece .
  ?leader dbo:occupation dbr:Military_person ;
          dbo:participatedIn ?event .
  ?event rdf:type dbo:Military_conflict ;
         rdfs:label ?war .
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find a band member of The Alan Parsons Project
  ?project dbr:The_Alan_Parsons_Project ;
           dbo:bandMember ?bandMember .
  
  # Find an associated musical artist of Stuart Tosh
  OPTIONAL { 
    ?tosh dbr:Stuart_Tosh ;
          dbo:associatedMusicalArtist ?artist .
    BIND(?artist AS ?associatedArtist)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?commander dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Eleonore_of_Austria_(1618–1655) .
  FILTER EXISTS { ?commander dbo:occupation dbr:Thirty_Years'_War }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?party WHERE {
  VALUES ?person { 
    dbr:Roy_Leonardo_Barreras_Montealegre 
    dbr:Gustavo_Petro
  }
  
  ?person dbo:name ?name .
  ?person dbo:partyAffiliation ?party .
  OPTIONAL { ?person dbo:nationality dbr:Colombia . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Battle of Fort Royal during the French campaign in Egypt and Syria
SELECT ?militaryForce ?commander WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Fort Royal""@en .
  OPTIONAL { ?battle dbo:militaryForce ?militaryForce . }
  OPTIONAL { ?battle dbo:commander ?commander . }
  FILTER(CONTAINS(LCASE(?battle), ""french campaign in egypt and syria""))
}

UNION

# Query for Robert Calder's event that is both a military and societal event
SELECT ?event WHERE {
  ?calderEvent a dbo:MilitaryEngagement ;
                rdfs:label ?eventName .
  OPTIONAL { ?calderEvent dbo:commander dbr:Robert_Calder . }
  FILTER(CONTAINS(LCASE(?eventName), ""robert calder""))
  # Assuming societal significance can be inferred from notable events
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find the predecessor of Stephen V of Hungary
  ?predecessor dbo:predecessor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Find a child of the predecessor
  ?predecessorChild dbo:child ?predecessor ;
                   rdf:type dbo:Person .

  # Step 3: Find a grandchild (child of the child) who is royalty
  ?predecessorChildChild dbo:child ?predecessorChild ;
                        rdf:type ?grandchildType .
  
  FILTER (
    ?grandchildType IN (
      dbo:Monarch, 
      dbo:RoyalFamilyMember,
      dbo:Princess,
      dbo:Prince
    )
  )

  BIND(?predecessorChildChild AS ?grandchild)
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?album a dbo:Album ;
         rdfs:label ""Sappy""@en .
  
  ?album dbo:artist ?band .

  ?band dbo:member ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthplaceLabel WHERE {
  VALUES ?person { 
    dbr:Scott_LaFaro 
    dbr:Lauryn_Hill 
  }
  
  ?person dbo:name ?name ;
          dbo:birthPlace ?birthplace .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?birthplace rdfs:label ?birthplaceLabel .
    FILTER (lang(?birthplaceLabel) = 'en')
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank ?conflict ?event WHERE {
  # William Tennant's rank in the Royal Navy
  dbr:William_Tennant_(Royal_Navy_officer) dbo:rank ?rank .

  # Societal events or military conflicts he was involved in
  OPTIONAL { 
    dbr:William_Tennant_(Royal_Navy_officer) dbo:participatedIn ?conflict .
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ?conflictLabel .
  }
  
  # Sinking of Prince of Wales and Repulse as a specific event
  OPTIONAL {
    dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:participatedIn ?event .
    ?event a dbo:MilitaryConflict ;
           rdfs:label ?eventLabel .
  }

  FILTER (lang(?conflictLabel) = 'en' && lang(?eventLabel) = 'en')
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Cece Bell""@en .
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?book WHERE {
  # Identify Hillary Clinton's spouse who is an author and a politician
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  
  # Check if the spouse has authored any books
  ?spouse dbo:authorOf ?book .
  ?book rdf:type dbo:Book .

  # Filter for Bill Clinton, who is a known author and politician
  FILTER(?spouse = dbr:Bill_Clinton)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?actorOccupation ?otherOccupation
WHERE {
  ?person dbo:occupation ?actorOccupation .
  FILTER (str(?actorOccupation) = ""Actor"" || str(?actorOccupation) = ""Actress"")
  
  ?person dbo:occupation ?otherOccupation .
  FILTER (?actorOccupation != ?otherOccupation)
}
GROUP BY ?person ?actorOccupation ?otherOccupation
HAVING (COUNT(DISTINCT ?actorOccupation) > 1)
```",2,2,3,1,2,2,3,28,0,0,4210,0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find band members of Uncle Murda
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  
  # Find Bobby Shmurda's birth name
  ?bobbyShmurda dbo:birthName ?birthName .

  FILTER(?bobbyShmurda = dbr:Bobby_Shmurda)

  # Check if the person is born with Bobby Shmurda's birth name
  ?bandMember dbo:birthName ?birthName .

  # Find awards related to New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Identify bands from New York State that received such awards
  ?awardeeBand dbo:recipientOf ?award ;
               dbo:country dbr:United_States ;
               dbo:stateOrProvince dbr:New_York_(state) .

  # Check if the person is a native of the region/state/settlement associated with the awardee band
  ?bandMember dbo:nativePlace ?nativePlace .
  
  ?awardeeBand dbo:location ?nativePlace .

}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?award dbo:givenBy dbr:United_States_Congress .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:participatedIn ?conflict .
  ?conflict rdf:type dbo:War .
  FILTER NOT EXISTS { ?awardee dbo:abstract ?a . FILTER(CONTAINS(LCASE(?a), ""fiction"")) }
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Find the military conflict involving the 30th Regiment of Foot
  ?conflict dbo:participatedIn dbr:_30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Find the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Ensure this commander is also linked to the Battle of Fort Royal
  ?battle dbo:relatedEvent dbr:Battle_of_Fort_Royal ;
          dbo:commander ?commander .

  # Link Robert Calder's events to the same conflict or battle
  ?calderEvent dbo:relatedEvent ?conflict .
  ?calderEvent dbo:agent dbr:Robert_Calder .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Caroline Louise Bevan Symonds"" .
  OPTIONAL { ?person foaf:name ?currentName }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle ?role ?spouseName WHERE {
  # Find books authored by Bill Clinton
  ?book dbo:author dbr:Bill_Clinton .
  ?book rdf:type dbo:Book .
  ?book rdfs:label ?bookTitle .

  # Identify Hillary Clinton's roles
  OPTIONAL { 
    ?hClinton dbo:spouse dbr:Bill_Clinton ;
              dbo:officeHolder ?role .
    ?role rdfs:label ?roleLabel .
  }

  # Confirm spouse relationship
  ?billClinton dbo:spouse ?hClinton .
  ?hClinton rdfs:label ?spouseName .

  FILTER (lang(?bookTitle) = 'en' && lang(?roleLabel) = 'en' && lang(?spouseName) = 'en')
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?relation
WHERE {
  VALUES ?person { dbr:Margarete_Sophie_of_Austria }
  OPTIONAL { ?person dbo:mother ?parent . BIND(""Mother"" AS ?relation) }
  OPTIONAL { ?person dbo:father ?parent . BIND(""Father"" AS ?relation) }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Ann Sothern""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorJohnnyDoughboy ?actorStarIsBorn ?producerStarIsBorn ?claimToFameActor1 ?claimToFameActor2 WHERE {
  # Find the actor who played Johnny Doughboy
  ?filmJohnnyDoughboy dbo:title ""Some Unknown Soldier""@en ;
                      dbo:starring ?actorJohnnyDoughboy .
  
  # Find the actor and producer of A Star Is Born (1937)
  ?starIsBornFilm dbo:title ""A Star Is Born""@en ;
                  dbo:starring ?actorStarIsBorn ;
                  dbo:producer ?producerStarIsBorn .

  # Identify a notable work for each individual
  ?actorJohnnyDoughboy dbo:notableWork ?claimToFameActor1 .
  ?actorStarIsBorn dbo:notableWork ?claimToFameActor2 .

  FILTER(?actorJohnnyDoughboy != ?actorStarIsBorn) # Ensure they are distinct individuals

  OPTIONAL {
    ?producerStarIsBorn dbo:profession dbr:Film_director ; # Check if the producer is also a director
                        dbo:notableWork ?claimToFameProducer .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:genre dbr:Comics .
  ?character dbo:alternateName ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""lamont cranston""))
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?youngkinBirthPlace WHERE {
  # Vince Gilligan's Emmy Award related awardee
  OPTIONAL {
    ?award a dbo:Award ;
          dbo:recipient dbr:Vince_Gilligan .
    ?relatedAward a dbo:Award ;
                  dbo:recipient ?awardee .
    FILTER(?award != ?relatedAward)
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Glenn Youngkin's birth place
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?birthPlace WHERE {
  # Find Hon. Mary Frances Bowes-Lyon
  ?person rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  
  # Identify her parent(s)
  ?person dbo:parent ?parent .

  # Filter parents by birthplace being Middlesex
  ?parent dbo:birthPlace dbr:Middlesex .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?societalEvent ?knightCommander WHERE {
  # Identify William Bayne and his associated military conflict
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?war .
  
  # Find the military force involved in that war
  ?war dbo:associatedWith ?militaryForce .

  # Identify any societal event related to this military force
  ?militaryForce dbo:societalEvent ?societalEvent .

  # Determine who received the Knight Commander of the Order of the Bath and their connection to this force
  ?knightCommander dbo:awardeeOf dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?knightCommander dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  ?person dbo:diedIn dbr:Melbourne .
  ?person dbo:predecessorOf dbr:Ada_Watson .
  ?person rdfs:label ?personName .
  FILTER(LANG(?personName) = 'en')
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?person dbo:child ?child .
  ?child dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""princess"")).
  ?person rdfs:label ""Francis I, Duke of Lorraine""@en .
  BIND(?person AS ?father)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteTeam ?soccerPlayerManagerTeam WHERE {
  # Find Marcelo Sarmiento's birthdate
  VALUES ?marceloSarmiento (dbr:Marcelo_Sarmiento) .
  
  ?marceloSarmiento dbo:birthday ?birthday .

  # Find the athlete born on 1955-02-22 and their team
  SELECT ?athlete WHERE {
    ?athlete dbo:birthday ""1955-02-22""^^xsd:date ;
             a dbo:Athlete .
  }
  
  OPTIONAL { 
    ?athlete dbp:team ?athleteTeam .
  }

  # Find the soccer player and manager born on Marcelo Sarmiento's birthday
  SELECT ?soccerPlayerManager WHERE {
    ?soccerPlayerManager dbo:birthday ?birthday ;
                         a dbo:SoccerPlayer, dbo:SoccerManager .
  }
  
  OPTIONAL { 
    ?soccerPlayerManager dbp:team ?soccerPlayerManagerTeam .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER(CONTAINS(LCASE(?childName), ""ferdinand iii""))
  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(STR(?occupation)), ""commander"") || CONTAINS(LCASE(STR(?occupation)), ""military leader""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:father dbr:Charles_V,_Holy_Roman_Emperor .
  ?person dbo:childOf dbr:Philip_I_of_Castile .
  ?person a dbo:Monarch .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeSantiago ?officeSpain WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  OPTIONAL {
    ?officeSantiago dbo:officeHolder ?person ;
                    dbp:city ""Santiago de Compostela"" .
  }
  
  OPTIONAL {
    ?officeSpain dbo:officeHolder ?person ;
                 dbp:country ""Spain"" .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Henry Clay Lewis's birthplace and check if it is a settlement in America
SELECT ?birthPlace WHERE {
    dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Settlement ;
               dbo:country dbr:United_States_of_America .
}

# Step 2: Find Amasa Tracy's war involvement
SELECT ?war WHERE {
    dbr:Amasa_Tracy dbo:militaryConflict ?war .
}

# Step 3: Identify the Gillmore Medal awardee and their force
SELECT ?awardee ?force WHERE {
    ?awardee dbo:awardReceived dbr:Gillmore_Medal ;
            dbo:militaryUnit ?force .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?eventForce ?battleForce WHERE {
  # Find individuals awarded Knight Commander of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Identify military or societal events associated with the awardee
  ?awardee dbo:event ?event .
  ?event dbo:participatingOrganisation ?eventForce .

  # Find the military force involved in the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:participatingOrganisation ?battleForce .

  # Check if there is a common military force
  FILTER(?eventForce = ?battleForce)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Step 2: Find artists associated with this birth name
  ?artist dbp:name ?birthName .
  
  # Step 3: Ensure the person is both a musical artist and an artist
  ?artist a dbo:MusicalArtist ;
          a dbo:Artist .

  # Step 4: GS9 association
  ?gs9Member dbo:member ?artist .
  dbr:GS9 dbo:member ?gs9Member .

  # Step 5: Native of Florida
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace ?place .
  ?place dbp:country dbr:Florida .

  # Ensure the person is the same as the artist found
  FILTER (?artist = ?person)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the album of T.I.'s song ""What You Know""
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  
  # Find actors associated with this album
  ?album dbo:performer ?artist .
  
  # Check if these artists have acted in ""Shelby Oaks""
  OPTIONAL { 
    ?actor dbo:film ?film .
    FILTER (str(?film) = ""Shelby_Oaks"")
  }
  
  # Ensure the artist is also an actor
  ?artist a dbo:Actor ;
          foaf:name ?name .

  # Link the artist to the actor found in films
  FILTER (?actor = ?artist)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?marianoRajoyOffice ?ruizGallardonTenant
WHERE {
  # Miguel Maura's office or position
  OPTIONAL { 
    dbr:Miguel_Maura dbo:office ?miguelMauraOffice .
  }
  
  # Mariano Rajoy's office or position
  OPTIONAL { 
    dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .
  }

  # Tenant of Alberto Ruiz-Gallardón's residence
  OPTIONAL {
    dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .
    ?ruizGallardonResidence dbo:tenant ?ruizGallardonTenant .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Query to get Marty Pollio's birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthday WHERE {
  dbr:Marty_Polloi dbo:birthday ?birthday .
}

# Assuming the result of the above query gives us a specific date, e.g., ""1957-09-25""
# We will use this date in the next query

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athleteName WHERE {
  # Find athletes born on Marty Pollio's birthday
  ?person a dbo:Athlete ;
          dbo:birthday ?birthday .
  FILTER (?birthday = ""1957-09-25""^^xsd:date) .

  # Get the name of the athlete
  ?person rdfs:label ?athleteName .
  
  UNION

  # Find soccer players in ""All or Nothing: Manchester City""
  ?show dbr:All_or_Nothing:_Manchester_City dbo:actor ?actor ;
                                            dbo:sport dbr:Soccer .
  ?actor a dbo:Athlete ;
         dbo:birthday ?birthday2 .
  FILTER (?birthday2 = ""1957-09-25""^^xsd:date) .

  # Get the name of the soccer player
  ?actor rdfs:label ?athleteName .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:location dbr:Central_African_Republic ;
         dbo:participatingMilitaryUnit ?unit .
  
  ?unit dbo:commander ?commander .

  ?commander a dbo:Person ;
             dbo:officeHolder ?office ;
             dbo:politician ?politics .
}
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?actorName WHERE {
  ?movie a dbo:Film ;
         dcterms:subject dbpedia-india:IndianFilms .
  
  ?dipankarRole dbo:starring <http://dbpedia.org/resource/Dipankar_Dey> ;
                dbo:starring ?coActor .

  ?movie dbo:starring ?dipankarRole, ?coActor .
  
  ?coActor foaf:name ?actorName .
}
```",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Actor of ""Paradise"" (2013 film)
  ?film a dbo:Film ;
        rdfs:label ""Paradise""@en .
  FILTER(CONTAINS(LCASE(str(?film)), 'paradise') && CONTAINS(YEAR(?film), '2013'))
  
  ?film dbo:starring ?actor .

  # Spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
  FILTER(?spouse = ?actor)

  # Actor in a movie with Audrey Hepburn
  ?hepburnFilm a dbo:Film ;
               dbo:starring dbr:Audrey_Hepburn .
  
  ?hepburnFilm dbo:starring ?actor .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alwaysActor ?commonActor WHERE {
  # Find actors in the 1989 film ""Always""
  ?film a dbo:Film ;
        dbo:title ""Always""@en ;
        dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  
  ?film dbo:starring ?alwaysActor .

  # Find works involving Iliza Shlesinger
  ?work a dbo:Film ; 
        dbo:starring dbr:Iliza_Schlesinger ;
        dbo:starring ?commonActor .
  
  # Ensure the actor is common between ""Always"" and the work with Iliza Schlesinger
  VALUES ?alwaysActor { ?alwaysActor }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfElvira ?royalChild ?parentOfRogerIII
WHERE {
  # Elvira of Castile and her child who is royalty
  ?elvira dbo:spouse ?husband .
  ?elvira rdfs:label ""Elvira of Castile""@en .
  ?childOfElvira dbo:child ?elvira ;
                 a dbo:Monarch .

  # William I of Sicily and his royal child
  ?williamI dbo:spouse ?wife .
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?royalChild dbo:parent ?williamI ;
              a dbo:Monarch .

  # Parent of Roger III, Duke of Apulia
  ?rogerIII dbo:child ?parentOfRogerIII .
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .

  # Linking the relationships
  ?royalChild dbo:parent ?childOfElvira .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark ?elevation ?country ?rulingParty ?partyMember WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  
  OPTIONAL { ?landmark dbp:locationCountry ?country . }
  
  OPTIONAL {
    ?country dbo:government ?government .
    ?government dbo:rulingParty ?rulingParty .
    
    ?rulingParty dbo:member ?partyMember .
  }
}
```",3,3,4,3,1,3,3,71,0,193,21514,0.0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?profession 
WHERE {
  ?work dbo:title ""The Live Anthology""@en .
  ?work dbo:author ?writer .
  ?writer dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""musician"") || CONTAINS(LCASE(?profession), ""singer"") || CONTAINS(LCASE(?profession), ""composer""))
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation ?notableWorks ?birthDate ?birthPlace WHERE {
  VALUES ?nickCurran { dbr:Nick_Curran }
  
  ?nickCurran a dbo:Musician ;
              dbo:occupation ?occupation ;
              dbo:notableWork ?notableWorks ;
              dbp:birthday ?birthDate ;
              dbp:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    ?landmark rdfs:label ?name .
    OPTIONAL { ?landmark dbp:elevation ?elevation . }
    FILTER (abs(?elevation - 20.1168) < 0.1)
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerName WHERE {
    ?movie a dbo:Film ;
           rdfs:label ""The Adventures of Tom Sawyer""@en .
    FILTER(CONTAINS(LCASE(str(?movie)), ""1938""))
    
    ?movie dbo:producer ?producer .
    ?producer rdfs:label ?producerName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?birthPlace ?personDeceased
WHERE {
  # Find Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:participatedIn ?war .
  
  # Get his birthplace, ensuring it is a settlement and American
  dbr:Amasa_Tracy dbo:birthPlace ?birthPlace ;
                  dbp:nationality ""American"" .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Find another person with the same birthplace who died on 1850-08-05
  ?personDeceased dbo:birthPlace ?birthPlace ;
                  dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?childOfDawitI
WHERE {
  # Find the alter ego of Lamont Cranston (The Shadow)
  dbr:The_Shadow dbo:aliasName ""Lamont Cranston""@en .
  
  # Identify Yekuno Amlak as the child of Dawit I and father of Baeda Maryam I
  dbr:Yekuno_Amlak dbo:child dbr:Dawit_I ;
                   dbo:parent dbr:Baeda_Maryam_I .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor1 ?deathPlace1 ?actor2 ?deathPlace2 WHERE {
  # For ""Color Me Dead""
  ?film1 rdfs:label ""Color Me Dead""@en .
  ?film1 dbo:starring ?actor1 .

  OPTIONAL { 
    ?actor1 dbp:deathPlace ?deathPlace1 .
  }

  # For ""The Sky Ranger (1928 film)""
  ?film2 rdfs:label ""The Sky Ranger""@en .
  ?film2 dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1928)
  ?film2 dbo:starring ?actor2 .

  OPTIONAL { 
    ?actor2 dbp:deathPlace ?deathPlace2 .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Lamont Cranston as The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Find Rosario Dawson and her association with the movie ""Death Proof""
  dbr:Rosario_Dawson a dbo:Actor ;
                     dbo:film dbr:Death_Proof .

  # Check if Rosario Dawson is associated with T.I.'s song ""What You Know"" through its music video
  OPTIONAL {
    ?song dbo:musicVideo dbr:Music_Video_of_What_You_Know_by_T._I. ;
          dbo:artist dbr:T.I. .
    ?musicVideo dbo:starring dbr:Rosario_Dawson .
  }
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nick Curran""@en .
  ?person foaf:givenName ""Nicholas"" ;
          foaf:familyName ""Curran"" .
  
  OPTIONAL { ?person dbo:associatedBand dbr:The_Fabulous_Thunderbirds . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?christianIXAdministration ?olafIAdministration ?deathPlace ?administeredTerritory
WHERE {
  # Administration of Christian IX of Denmark
  ?christianIX a dbo:Monarch ;
               foaf:name ""Christian IX""@en ;
               dbo:reign ?christianIXAdministration .

  # Administration of Olaf I of Denmark
  ?olafI a dbo:Monarch ;
         foaf:name ""Olaf I of Denmark""@en ;
         dbo:reign ?olafIAdministration .

  # Death place of Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en ;
          dbp:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Territories administered from the death place
  OPTIONAL {
    ?administeredTerritory dbo:administrativeCapital ?deathPlace .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthName ?occupation
WHERE {
  ?person a dbo:Musician .
  ?person foaf:name ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""musician"")) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ada Watson""@en .
  
  OPTIONAL { 
    ?person dbo:predecessor ?predecessor .
  }
  
  UNION
  
  OPTIONAL {
    ?succession foaf:succedBy ?person ;
                foaf:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?person WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring ?person .
  ?person dbo:deathPlace dbr:Los_Angeles .
}
```",2,3,3,2,1,3,3,71,5842,2714,633,0.6827956989247311,0.9022393822393823,0.7773268578271573
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?person dbo:name ""Antonios Varthalitis""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbp:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalArtist
WHERE {
  # Michael Stipe is a member of R.E.M.
  dbr:Michael_Stipe dbo:memberOf dbr:R.E.M. .

  # Find other band members of R.E.M.
  ?bandMember dbo:memberOf dbr:R.E.M. .
  
  FILTER(?bandMember != dbr:Michael_Stipe) # Exclude Michael Stipe himself

  # Find an associated artist with R.E.M.
  OPTIONAL {
    ?associatedArtist dbo:collaboratedWith dbr:R.E.M. .
  }

  # Ensure the associated artist is also recognized as an artist
  FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist . }

  # Find another artist associated with this second artist
  OPTIONAL {
    ?finalArtist dbo:collaboratedWith ?associatedArtist .
  }
  
  # Ensure the final entity is also recognized as an artist
  FILTER EXISTS { ?finalArtist a dbo:MusicalArtist . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild
WHERE {
  # Step 1: Find Archduke Charles Louis of Austria's children
  ?charles dbr:Archduke_Charles_Louis_of_Austria dbo:spouse ?parent.
  
  # Step 2: Identify one child and their own child who is royalty
  ?childOfCharles dbo:child ?grandChild.
  ?grandChild a dbo:Monarch.

  # Step 3: Find Archduchess Helena of Austria's spouse and their child
  ?helena dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouseHelena.
  ?spouseHelena dbo:child ?childOfSpouseHelena.

  # Step 4: Predecessor of this child (assuming predecessor means older sibling)
  ?olderSibling dbo:parent ?spouseHelena.
  FILTER(?olderSibling != ?childOfSpouseHelena)

  # Step 5: Child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild.

  # Final condition to match the child of the older sibling with a child of Albrecht
  FILTER(?olderSibling = ?albrechtChild)

  # Resulting in the desired grandchild who is royalty
  BIND(?grandChild AS ?childOfChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce1 ?officer ?battle ?militaryForce2
WHERE {
  # Napoleon Bonaparte as commander in the French campaign
  dbr:Napoleon_Bonaparte dbo:commander ?campaign .
  ?campaign dbo:militaryForce ?militaryForce1 .

  # William Bayne's involvement in Battle of Cape Finisterre
  dbr:William_Bayne dbo:participatedIn ?battle .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:militaryForce ?militaryForce2 .

  # Admiral Robert Calder's command in the Battle of Cape Finisterre
  dbr:Robert_Calder dbo:commander ?battle .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent ?successor ?writer
WHERE {
  # Find information about Jean Baptist, Comte d'Arco
  OPTIONAL { 
    dbr:Jean_Baptiste,_Comte_d%27Arco dbo:occupation ?occupation .
  }

  # Identify wars as both TV shows and societal events
  ?tvShow a dbo:TelevisionSeries ;
          dbo:genre/dbo:subClassOf* dbo:MilitaryDrama ;
          rdfs:label ?showLabel .

  ?societalEvent a dbo:Event ;
                 dbo:subject ?warSubject .

  # Find Yurii Khmelnytsky's successor
  OPTIONAL {
    dbr:Yuri_Khmelnytsky dbo:succeededBy ?successor .
  }

  # Reference the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author ?writer .

  FILTER (CONTAINS(LCASE(?showLabel), ""war""))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfShelbyOaks ?albumActor ?shadowProfession
WHERE {
  # Actor of Shelby Oaks
  OPTIONAL {
    dbr:Shelby_Oaks dbo:starring ?actorOfShelbyOaks .
    ?actorOfShelbyOaks a dbo:FilmActor .
  }

  # Actor associated with the album ""Paper Trail"" (T.I.'s song ""What You Know"")
  OPTIONAL {
    dbr:Paper_Trail dbo:artist dbr:T.I. ;
                    dbo:track ?song .
    FILTER(CONTAINS(LCASE(STR(?song)), ""what you know""))
    OPTIONAL { 
      ?musicVideo dbo:starring ?albumActor .
      ?albumActor a dbo:MusicArtist .
    }
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgoOf ?person ;
                   dbo:profession ?shadowProfession .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # William I of Sicily and Elvira of Castile
  dbr:William_II_of_Sicily dbo:spouse dbr:Elvira_of_Castile ;
                           dbo:child ?child .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # The father is William I of Sicily
  BIND(dbr:William_II_of_Sicily AS ?father)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Get Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Step 3: Find decedents at this location
  ?decedent dbo:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,809,0,0,1.0,1.0,1.0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?constance rdf:type dbo:Person ;
             rdfs:label ""Constance of Burgundy""@en .
  
  ?constance dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:royalty ?isRoyalty .
  }

  FILTER (LANG(?constanceLabel) = 'en' && LANG(?spouseLabel) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherOfWilliamChild ?parentOfRogerChild
WHERE {
  # William I of Sicily and his child who is royalty
  ?williamI a dbo:Monarch ;
            foaf:name ""William I of Sicily""@en .
  
  ?child1 dbo:child ?williamI ;
          dbo:monarch ?isRoyal .

  # Roger II of Sicily and his child who is royalty
  ?rogerII a dbo:Monarch ;
           foaf:name ""Roger II of Sicily""@en .
  
  ?child2 dbo:child ?rogerII ;
          dbo:monarch ?isRoyal .

  # The father of William I's royal child
  ?fatherOfWilliamChild dbo:spouse ?motherOfWilliamChild ;
                       dbo:child ?child1 .

  # The parent of the same person when considered as a child of Roger II's royalty
  ?parentOfRogerChild dbo:child ?fatherOfWilliamChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?event WHERE {
  # Find Jean Baptist, Comte d'Arco in DBpedia
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Identify any military role or war association
  ?person dbo:role ?militaryRole .
  ?militaryRole rdfs:label ?roleLabel .

  # Find a television show related to this person and role
  OPTIONAL {
    ?show dbo:workExample ?person ;
          rdf:type dbo:TelevisionSeries ;
          dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ?showLabel .
    
    # Check if the show is also considered a societal event
    ?event dbo:wikiPageRedirects ?show ;
           rdf:type dbo:SocietalEvent ;
           rdfs:label ?eventLabel .
  }
  
  FILTER (lang(?roleLabel) = 'en' && lang(?showLabel) = 'en' && lang(?eventLabel) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:stateGovernor dbr:Virginia .
  ?person dbo:country dbr:United_States .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Identify actors in those films
  ?film dbo:starring ?actor .

  # Check if the actor is a soccer player and an athlete
  ?actor dbo:occupation ?occupation1 .
  ?actor dbo:occupation ?occupation2 .
  
  FILTER (
    (str(?occupation1) = ""soccer player"" || str(?occupation1) = ""footballer"") &&
    (str(?occupation2) = ""athlete"")
  )
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?letschTeam ?bochumManager WHERE {
  # Find the team managed by Thomas Letsch
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en ;
          dbo:manager ?letschTeam .

  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?bochumManager .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person (SAMPLE(?name) AS ?commonName)
WHERE {
  # Find the author of ""Always the Love Songs""
  VALUES ?work { dbr:Always_the_Love_Songs }
  ?work dbo:author ?person .

  # Find a commander in the Great Turkish War
  ?war dbr:The_Great_Turkish_War .
  ?war dbo:commander ?person .

  # Find Yurii Khmelnytsky's successor
  ?yuriikhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en ;
                   dbo:succeededBy ?successor .
  FILTER(?successor = ?person) .

  # Get the common name of the person
  OPTIONAL { ?person foaf:name ?name . }
}
GROUP BY ?person
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of the band Khlyst
  dbr:Khlyst dbo:member ?member .
  
  # Ensure the member is also a musical artist
  ?member rdf:type dbo:MusicalArtist .

  # Find associated artists with this member
  OPTIONAL { 
    ?member dbo:associatedBand ?associatedArtist .
  }
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?film ?player 
WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in these films who are also soccer players and athletes
  ?film dbo:starring ?actor .
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .

  # Assume Juan Carlos Molina is the footballer himself, find a player associated with him
  OPTIONAL {
    dbr:Juan_Carlos_Molina_(footballer) dbo:player ?player .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor (GROUP_CONCAT(?professionLabel; separator="", "") AS ?professions)
WHERE {
  # Find the TV show ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:castMember ?actor .
  
  # Get professions of these actors
  ?actor dbo:occupation ?profession .

  # Filter for those who are politicians
  ?profession rdfs:label ?professionLabel .
  FILTER(CONTAINS(LCASE(?professionLabel), ""politician""))

  # Ensure the actor is also an actor by profession
  OPTIONAL { 
    ?actor dbo:occupation dbr:Actor .
  }
  
  # Remove duplicates and ensure at least one politician role exists
  GROUP BY ?actor
  HAVING (COUNT(DISTINCT ?profession) > 0)
}
ORDER BY ?actor
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the VfL Bochum entity for the 2006-07 season
  dbr:VfL_Bochum_season_2006–07 dbo:sportsTeam dbr:VfL_Bochum .
  
  # Find the successor season, which is the 2007-08 season
  ?successorSeason a dbo:SoccerClubSeason ;
                  dbo:club dbr:VfL_Bochum ;
                  dbo:season ""2007–08""^^xsd:string .

  # Get the manager of VfL Bochum during the successor season (2007-08)
  ?successorSeason dbo:manager ?manager .
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?title WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:officeHolderOf dbr:Korean_War ;
          dbo:writtenWork ?work .
  ?work rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""reminiscences""))
}
```",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace ?ceceBellBirthPlace WHERE {
  # Vince Gilligan's notable award related awardee (Bryan Cranston)
  dbr:Bryan_Cranston dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Actor_in_a_Drama_Series .
  
  # Birthplace of Bryan Cranston
  OPTIONAL { dbr:Bryan_Cranston dbo:birthPlace ?awardeeBirthPlace . }
  
  # Birthplace of Cece Bell
  dbr:Cecily_Bell dbo:birthPlace ?ceceBellBirthPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflict ?tvShow ?polandEntity WHERE {
  # Maria I of Portugal's military role or conflict
  dbr:Maria_I_of_Portugal dbo:militaryConflict ?conflict .
  
  # The conflict is also a television show
  ?conflict rdfs:label ?conflictLabel ;
           dbo:wikiPageRedirects ?tvShow .
  FILTER (CONTAINS(LCASE(?conflictLabel), ""war"") || CONTAINS(LCASE(?conflictLabel), ""battle""))
  
  # The TV show entity
  ?tvShow rdf:type dbo:TelevisionSeries .

  # Find any connection to Poland
  OPTIONAL {
    ?polandEntity dbo:wikiPageRedirects ?conflict .
    FILTER (CONTAINS(LCASE(STR(?polandEntity)), ""poland""))
  }
  
  # Ensure the conflict is also a TV show title
  FILTER EXISTS { ?tvShow rdfs:label ?tvShowLabel . FILTER(CONTAINS(LCASE(?tvShowLabel), LCASE(?conflictLabel))) }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity ?warEntity
WHERE {
  # Find birthplace of Elena Žalinkevičaitė-Petrauskienė
  OPTIONAL {
    dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (lang(?birthPlaceLabel) = ""en"")
    BIND(dbr:?birthPlace AS ?birthPlaceEntity)
  }

  # Find war associated with Alexander Lvovich Davydov
  OPTIONAL {
    dbr:Alexander_Lvovich_Davydov dbo:participatedInWar ?war .
    ?war rdfs:label ?warLabel .
    FILTER (lang(?warLabel) = ""en"")
    BIND(dbr:?war AS ?warEntity)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?choir dbo:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es .
  ?choir dbo:awardReceived ?award .
  ?award dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect rdfs:label ?stateLabel }
  FILTER(CONTAINS(LCASE(?stateLabel), ""colorado""))
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  VALUES ?person { 
    dbr:Stuart_Tosh 
    dbr:Billy_Lyall 
  }
  
  ?person dbo:musicalArtist ?artist .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?myatHponePyo dbo:father ?father .
  FILTER EXISTS { ?father rdf:type dbo:Monarch } .

  ?father dbo:spouse ?spouse .

  ?minyeKyawswaChild dbo:childOf ?minyeKyawswa .
  ?grandchild dbo:parent ?minyeKyawswaChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerName ?birthPlace WHERE {
  VALUES ?name { ""Yi Teng"" ""Lai Sun Cheuk"" }
  
  ?player foaf:name ?name .
  OPTIONAL { ?player dbo:birthPlace ?birthPlace . }

  FILTER (lang(?name) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find a person who is a member of the Republican Party
  ?person dbo:memberOf dbr:Republican_Party_(United_States) .
  
  UNION
  
  # Find a person whose birth name is Ann Sothern
  ?person dbo:birthName ""Ann Sothern""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author dbo:nationality dbr:United_States .
  ?author dbo:wikiPageWikiLink dbr:El_Deafo .
  ?author dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandChild WHERE {
  # Find Roger III, Duke of Apulia
  ?rogerIII a dbo:Duke ;
            foaf:name ""Roger III"" ;
            dbp:title ""Duke of Apulia""@en .
  
  # Find his parents
  ?parent dbo:child ?rogerIII .

  # For each parent, find their children (grandchildren of Roger III)
  ?parent dbo:child ?grandChild .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Saw Min Phyu's spouse
  ?spouse dbo:spouse ?sawMinPhyu .
  
  # Step 2: Find the child of Saw Min Phyu's spouse who is a royalty
  ?child dbo:parent ?spouse ;
         a dbo:Royal .

  # Step 3: Identify Minye Kyawswa's child
  ?minyeChild dbo:parent <http://dbpedia.org/resource/Minye_Kyawswa> .
  
  # Step 4 & 5: Find another child of Minye Kyawswa (same as step 3)
  ?anotherChild dbo:parent <http://dbpedia.org/resource/Minye_Kyawswa> .

  # Step 6: Identify the predecessor of this child
  ?predecessor dbo:successor ?anotherChild .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Duke ;
          foaf:name ""Philipp of Württemberg""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberName WHERE {
  # Identify Burnt by the Sun as a band and musical artist
  dbr:Burnt_by_the_Sun_(band) a dbo:Band ;
                             dbo:musicalArtist dbr:Burnt_by_the_Sun_(band) .

  # Find members of the band who are also part of other bands or organizations
  ?member dbo:member dbr:Burnt_by_the_Sun_(band) .
  
  OPTIONAL {
    ?member a dbo:Band ; # Check if member is also a band
            rdfs:label ?memberName .
  }
  UNION
  OPTIONAL {
    ?member a dbo:Organization ; # Check if member is part of an organization
            rdfs:label ?memberName .
  }

  FILTER (lang(?memberName) = 'en') # Ensure the label is in English
}
```",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rodArgentProfession ?tupacAssociatedArtist WHERE {
  # Rod Argent's profession
  ?rodArgent a dbo:Musician ;
             foaf:name ""Rod Argent"" .
  ?rodArgent dbo:occupation ?rodArgentProfession .

  # Tupac Shakur's birth name and associated artist
  ?tupac a dbo:MusicalArtist ;
         dbp:birthday ""1971-06-16""^^xsd:date ;
         foaf:name ""Tupac Shakur"" .
  ?tupac foaf:birthName ?birthName .
  FILTER(?birthName = ""Lesane Parish Crooks"")

  # Associated musical artist of Tupac
  ?association dbo:associatedMusicalArtist ?tupacAssociatedArtist .
  ?association dbo:musicalArtist ?tupac .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?entityInRussianEmpire WHERE {
  # Awardee of the Golden Sword for Bravery
  VALUES ?awardee { 
    dbr:Aleksandr_Suvorov 
  }
  
  # Entity in Russian Empire
  ?entityInRussianEmpire dbo:country dbr:Russian_Empire .
  
  FILTER(?awardee != ?entityInRussianEmpire)
}
```",3,3,4,2,2,2,3,28,0,777,2,0.0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify ""the reference"" as a royalty and an office holder.
  ?reference a dbo:Monarch ;
             dbo:officeHolderOf ?office .

  # Step 2: Find William I's child who also has a parent related to Roger III, Duke of Apulia.
  ?child dbo:parent ?reference ;
         dbo:parent ?relatedToRogerIII .
  
  ?relatedToRogerIII dbo:spouse ?rogerIII ;
                     foaf:name ""Roger III"" .

  # Step 3: Determine the father of this child (who is royalty).
  ?father dbo:child ?child .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?charlesI dbo:father ?father .
  FILTER (strstarts(str(?charlesI), ""Charles I of Hungary"")) .

  ?father dbo:royalTitle ?title .
  FILTER EXISTS { ?father dbo:royalTitle ?title } .

  OPTIONAL { ?father dbo:mother ?parent . }
  OPTIONAL { ?father dbo:father ?parent . }

  FILTER EXISTS {
    ?parent dbo:royalTitle ?parentTitle .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?governorBirthplace ?vinceGilliganBirthplace WHERE {
  # Governor of Virginia - Glenn Youngkin
  ?youngkin a dbo:Person ;
            foaf:name ""Glenn Youngkin"" ;
            dbo:birthPlace ?governorBirthplace .

  # Vince Gilligan
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan"" ;
                 dbo:birthPlace ?vinceGilliganBirthplace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Identify the 2nd Dragoon Regiment and its commanders
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""2nd Dragoon Regiment (France)""@en .
  
  ?regiment dbo:commander ?commander .

  # Find connections to a societal event
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:subject ?commander .

  # Find connections to another unspecified event
  ?otherEvent a dbo:Event ;
              dbo:subject ?commander .

  # Find connections to a television show
  ?tvShow a dbo:TelevisionSeries ;
          dbp:starring ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerVitesse ?managerBochum WHERE {
  # Manager of SBV Vitesse during the 2020–21 season
  OPTIONAL {
    ?vitesse dbo:season ""2020–21"" .
    ?vitesse dbo:manager ?managerVitesse .
    FILTER EXISTS { ?vitesse dbr:SBV_Vitesse }
  }

  # Current or most recent manager of VfL Bochum
  OPTIONAL {
    ?bochum dbo:manager ?managerBochum .
    FILTER EXISTS { ?bochum dbr:VfL_Bochum }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?predecessor ?spouse ?lineageChild
WHERE {
  # Predecessor of Myat Hpone Pyo
  ?myatHponePyo dbo:predecessor ?predecessor .
  FILTER(STR(?myatHponePyo) = ""Myat_Hpone_Pyo"")

  # Spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouse .

  FILTER(STR(?sawShweKhet) = ""Saw_Shwe_Khet"")

  # Child of the parent of the child of Minye Kyawswa
  ?minyeKyawswaChild dbo:childOf ?parent .
  ?parent dbo:child ?lineageChild .
  FILTER(STR(?minyeKyawswaChild) = ""Minye_Kyawswa"")

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianChild ?parentOfVictor
WHERE {
  # Frederick Stanley, 16th Earl of Derby's children
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # Filter for the child who is a politician
  ?child dbo:occupation dbr:Politician .

  # Victor Stanley's parent(s)
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?parentOfVictor .

  # Check if the politician child matches any of Victor Stanley's parents
  FILTER(?politicianChild = ?parentOfVictor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
